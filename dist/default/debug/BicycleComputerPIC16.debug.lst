

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Mar 17 12:33:17 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1619
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	stringtext3,global,class=STRCODE,delta=2
     9                           	psect	stringtext4,global,class=STRCODE,delta=2
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    15                           	psect	inittext,global,class=CODE,delta=2
    16                           	psect	clrtext,global,class=CODE,delta=2
    17                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    21                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    22                           	psect	text1,local,class=CODE,merge=1,delta=2
    23                           	psect	text2,local,class=CODE,merge=1,delta=2
    24                           	psect	text3,local,class=CODE,merge=1,delta=2
    25                           	psect	text4,local,class=CODE,merge=1,delta=2
    26                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text7,local,class=CODE,merge=1,delta=2
    29                           	psect	text8,local,class=CODE,merge=1,delta=2
    30                           	psect	text9,local,class=CODE,merge=1,delta=2
    31                           	psect	text10,local,class=CODE,merge=1,delta=2
    32                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text14,local,class=CODE,merge=1,delta=2
    36                           	psect	text15,local,class=CODE,merge=1,delta=2
    37                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text19,local,class=CODE,merge=1,delta=2
    41                           	psect	text20,local,class=CODE,merge=1,delta=2
    42                           	psect	text21,local,class=CODE,merge=1,delta=2
    43                           	psect	text22,local,class=CODE,merge=1,delta=2
    44                           	psect	text23,local,class=CODE,merge=1,delta=2
    45                           	psect	text24,local,class=CODE,merge=1,delta=2
    46                           	psect	text25,local,class=CODE,merge=1,delta=2
    47                           	psect	text26,local,class=CODE,merge=1,delta=2
    48                           	psect	text27,local,class=CODE,merge=1,delta=2
    49                           	psect	text28,local,class=CODE,merge=1,delta=2
    50                           	psect	intentry,global,class=CODE,delta=2
    51                           	psect	text30,local,class=CODE,merge=1,delta=2
    52                           	psect	text31,local,class=CODE,merge=1,delta=2
    53                           	psect	text32,local,class=CODE,merge=1,delta=2
    54                           	psect	text33,local,class=CODE,merge=1,delta=2
    55                           	psect	text34,local,class=CODE,merge=1,delta=2
    56                           	psect	text35,local,class=CODE,merge=1,delta=2
    57                           	psect	text36,local,class=CODE,merge=1,delta=2
    58                           	psect	text37,local,class=CODE,merge=1,delta=2,group=1
    59                           	psect	text38,local,class=CODE,merge=1,delta=2,group=1
    60                           	psect	text39,local,class=CODE,merge=1,delta=2,group=1
    61                           	psect	text40,local,class=CODE,merge=1,delta=2,group=1
    62                           	psect	text41,local,class=CODE,merge=1,delta=2,group=1
    63                           	dabs	1,0x7E,2
    64  0000                     
    65                           ; Version 2.05
    66                           ; Generated 20/12/2018 GMT
    67                           ; 
    68                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    69                           ; All rights reserved.
    70                           ; 
    71                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    72                           ; 
    73                           ; Redistribution and use in source and binary forms, with or without modification, are
    74                           ; permitted provided that the following conditions are met:
    75                           ; 
    76                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    77                           ;        conditions and the following disclaimer.
    78                           ; 
    79                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    80                           ;        of conditions and the following disclaimer in the documentation and/or other
    81                           ;        materials provided with the distribution.
    82                           ; 
    83                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    84                           ;        software without specific prior written permission.
    85                           ; 
    86                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    87                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    88                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    89                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    90                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    91                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    92                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    93                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    94                           ; 
    95                           ; 
    96                           ; Code-generator required, PIC16F1619 Definitions
    97                           ; 
    98                           ; SFR Addresses
    99  0000                     	;# 
   100  0001                     	;# 
   101  0002                     	;# 
   102  0003                     	;# 
   103  0004                     	;# 
   104  0005                     	;# 
   105  0006                     	;# 
   106  0007                     	;# 
   107  0008                     	;# 
   108  0009                     	;# 
   109  000A                     	;# 
   110  000B                     	;# 
   111  000C                     	;# 
   112  000D                     	;# 
   113  000E                     	;# 
   114  0010                     	;# 
   115  0011                     	;# 
   116  0012                     	;# 
   117  0013                     	;# 
   118  0014                     	;# 
   119  0015                     	;# 
   120  0016                     	;# 
   121  0016                     	;# 
   122  0017                     	;# 
   123  0018                     	;# 
   124  0019                     	;# 
   125  001A                     	;# 
   126  001A                     	;# 
   127  001B                     	;# 
   128  001B                     	;# 
   129  001C                     	;# 
   130  001D                     	;# 
   131  001E                     	;# 
   132  001F                     	;# 
   133  008C                     	;# 
   134  008D                     	;# 
   135  008E                     	;# 
   136  0090                     	;# 
   137  0091                     	;# 
   138  0092                     	;# 
   139  0093                     	;# 
   140  0094                     	;# 
   141  0095                     	;# 
   142  0096                     	;# 
   143  0098                     	;# 
   144  0099                     	;# 
   145  009A                     	;# 
   146  009B                     	;# 
   147  009B                     	;# 
   148  009C                     	;# 
   149  009D                     	;# 
   150  009E                     	;# 
   151  009F                     	;# 
   152  010C                     	;# 
   153  010D                     	;# 
   154  010E                     	;# 
   155  0111                     	;# 
   156  0112                     	;# 
   157  0113                     	;# 
   158  0114                     	;# 
   159  0115                     	;# 
   160  0116                     	;# 
   161  0117                     	;# 
   162  0118                     	;# 
   163  0119                     	;# 
   164  011C                     	;# 
   165  018C                     	;# 
   166  018D                     	;# 
   167  018E                     	;# 
   168  0191                     	;# 
   169  0191                     	;# 
   170  0192                     	;# 
   171  0193                     	;# 
   172  0193                     	;# 
   173  0194                     	;# 
   174  0195                     	;# 
   175  0196                     	;# 
   176  0197                     	;# 
   177  0199                     	;# 
   178  0199                     	;# 
   179  0199                     	;# 
   180  019A                     	;# 
   181  019A                     	;# 
   182  019A                     	;# 
   183  019B                     	;# 
   184  019B                     	;# 
   185  019B                     	;# 
   186  019B                     	;# 
   187  019B                     	;# 
   188  019C                     	;# 
   189  019C                     	;# 
   190  019C                     	;# 
   191  019D                     	;# 
   192  019D                     	;# 
   193  019D                     	;# 
   194  019E                     	;# 
   195  019E                     	;# 
   196  019E                     	;# 
   197  019F                     	;# 
   198  019F                     	;# 
   199  019F                     	;# 
   200  019F                     	;# 
   201  019F                     	;# 
   202  020C                     	;# 
   203  020D                     	;# 
   204  020E                     	;# 
   205  0211                     	;# 
   206  0211                     	;# 
   207  0212                     	;# 
   208  0212                     	;# 
   209  0213                     	;# 
   210  0213                     	;# 
   211  0214                     	;# 
   212  0214                     	;# 
   213  0215                     	;# 
   214  0215                     	;# 
   215  0215                     	;# 
   216  0215                     	;# 
   217  0216                     	;# 
   218  0216                     	;# 
   219  0217                     	;# 
   220  0217                     	;# 
   221  028C                     	;# 
   222  028D                     	;# 
   223  028E                     	;# 
   224  0291                     	;# 
   225  0291                     	;# 
   226  0292                     	;# 
   227  0293                     	;# 
   228  0294                     	;# 
   229  0298                     	;# 
   230  0298                     	;# 
   231  0299                     	;# 
   232  029A                     	;# 
   233  029B                     	;# 
   234  029E                     	;# 
   235  030C                     	;# 
   236  030D                     	;# 
   237  030E                     	;# 
   238  038C                     	;# 
   239  038D                     	;# 
   240  038E                     	;# 
   241  0391                     	;# 
   242  0392                     	;# 
   243  0393                     	;# 
   244  0394                     	;# 
   245  0395                     	;# 
   246  0396                     	;# 
   247  0397                     	;# 
   248  0398                     	;# 
   249  0399                     	;# 
   250  040E                     	;# 
   251  0413                     	;# 
   252  0413                     	;# 
   253  0414                     	;# 
   254  0414                     	;# 
   255  0415                     	;# 
   256  0416                     	;# 
   257  0417                     	;# 
   258  0418                     	;# 
   259  041A                     	;# 
   260  041A                     	;# 
   261  041B                     	;# 
   262  041B                     	;# 
   263  041C                     	;# 
   264  041D                     	;# 
   265  041E                     	;# 
   266  041F                     	;# 
   267  0493                     	;# 
   268  0494                     	;# 
   269  0495                     	;# 
   270  0496                     	;# 
   271  049A                     	;# 
   272  049B                     	;# 
   273  049C                     	;# 
   274  049D                     	;# 
   275  058C                     	;# 
   276  058C                     	;# 
   277  058D                     	;# 
   278  058E                     	;# 
   279  058E                     	;# 
   280  058F                     	;# 
   281  0590                     	;# 
   282  0590                     	;# 
   283  0591                     	;# 
   284  0592                     	;# 
   285  0592                     	;# 
   286  0593                     	;# 
   287  0594                     	;# 
   288  0594                     	;# 
   289  0595                     	;# 
   290  0596                     	;# 
   291  0596                     	;# 
   292  0597                     	;# 
   293  0598                     	;# 
   294  0599                     	;# 
   295  059A                     	;# 
   296  059B                     	;# 
   297  059B                     	;# 
   298  059C                     	;# 
   299  059D                     	;# 
   300  060C                     	;# 
   301  060C                     	;# 
   302  060D                     	;# 
   303  060E                     	;# 
   304  060F                     	;# 
   305  060F                     	;# 
   306  0610                     	;# 
   307  0611                     	;# 
   308  0612                     	;# 
   309  0613                     	;# 
   310  0614                     	;# 
   311  0617                     	;# 
   312  0617                     	;# 
   313  0618                     	;# 
   314  0619                     	;# 
   315  061A                     	;# 
   316  061A                     	;# 
   317  061B                     	;# 
   318  061C                     	;# 
   319  0691                     	;# 
   320  0692                     	;# 
   321  0693                     	;# 
   322  0694                     	;# 
   323  0695                     	;# 
   324  0696                     	;# 
   325  0697                     	;# 
   326  0699                     	;# 
   327  069A                     	;# 
   328  0711                     	;# 
   329  0712                     	;# 
   330  0713                     	;# 
   331  0714                     	;# 
   332  0715                     	;# 
   333  0718                     	;# 
   334  0718                     	;# 
   335  0719                     	;# 
   336  071A                     	;# 
   337  071A                     	;# 
   338  071B                     	;# 
   339  071C                     	;# 
   340  071D                     	;# 
   341  0791                     	;# 
   342  0791                     	;# 
   343  0792                     	;# 
   344  0793                     	;# 
   345  0793                     	;# 
   346  0794                     	;# 
   347  0795                     	;# 
   348  0795                     	;# 
   349  0796                     	;# 
   350  0797                     	;# 
   351  0797                     	;# 
   352  0798                     	;# 
   353  0799                     	;# 
   354  079A                     	;# 
   355  080C                     	;# 
   356  080C                     	;# 
   357  080D                     	;# 
   358  080E                     	;# 
   359  080E                     	;# 
   360  080F                     	;# 
   361  0810                     	;# 
   362  0810                     	;# 
   363  0811                     	;# 
   364  0812                     	;# 
   365  0812                     	;# 
   366  0813                     	;# 
   367  0814                     	;# 
   368  0815                     	;# 
   369  0816                     	;# 
   370  0817                     	;# 
   371  0818                     	;# 
   372  0819                     	;# 
   373  081A                     	;# 
   374  081A                     	;# 
   375  081B                     	;# 
   376  081C                     	;# 
   377  081C                     	;# 
   378  081D                     	;# 
   379  088C                     	;# 
   380  088D                     	;# 
   381  088E                     	;# 
   382  088F                     	;# 
   383  088F                     	;# 
   384  0890                     	;# 
   385  0891                     	;# 
   386  0892                     	;# 
   387  0893                     	;# 
   388  0893                     	;# 
   389  0894                     	;# 
   390  0895                     	;# 
   391  0896                     	;# 
   392  0897                     	;# 
   393  0897                     	;# 
   394  0898                     	;# 
   395  0899                     	;# 
   396  0D8C                     	;# 
   397  0D8C                     	;# 
   398  0D8D                     	;# 
   399  0D8E                     	;# 
   400  0D8F                     	;# 
   401  0D8F                     	;# 
   402  0D90                     	;# 
   403  0D91                     	;# 
   404  0D92                     	;# 
   405  0D92                     	;# 
   406  0D93                     	;# 
   407  0D94                     	;# 
   408  0D95                     	;# 
   409  0D95                     	;# 
   410  0D96                     	;# 
   411  0D97                     	;# 
   412  0D98                     	;# 
   413  0D99                     	;# 
   414  0D9A                     	;# 
   415  0D9B                     	;# 
   416  0D9C                     	;# 
   417  0D9D                     	;# 
   418  0D9E                     	;# 
   419  0D9E                     	;# 
   420  0D9F                     	;# 
   421  0DA0                     	;# 
   422  0DA1                     	;# 
   423  0DA1                     	;# 
   424  0DA2                     	;# 
   425  0DA3                     	;# 
   426  0DA4                     	;# 
   427  0DA4                     	;# 
   428  0DA5                     	;# 
   429  0DA6                     	;# 
   430  0DA7                     	;# 
   431  0DA7                     	;# 
   432  0DA8                     	;# 
   433  0DA9                     	;# 
   434  0DAA                     	;# 
   435  0DAB                     	;# 
   436  0DAC                     	;# 
   437  0DAD                     	;# 
   438  0DAE                     	;# 
   439  0DAF                     	;# 
   440  0E0F                     	;# 
   441  0E10                     	;# 
   442  0E11                     	;# 
   443  0E12                     	;# 
   444  0E13                     	;# 
   445  0E14                     	;# 
   446  0E15                     	;# 
   447  0E16                     	;# 
   448  0E17                     	;# 
   449  0E18                     	;# 
   450  0E19                     	;# 
   451  0E1A                     	;# 
   452  0E1B                     	;# 
   453  0E1C                     	;# 
   454  0E1D                     	;# 
   455  0E1E                     	;# 
   456  0E1F                     	;# 
   457  0E20                     	;# 
   458  0E21                     	;# 
   459  0E22                     	;# 
   460  0E23                     	;# 
   461  0E24                     	;# 
   462  0E25                     	;# 
   463  0E26                     	;# 
   464  0E27                     	;# 
   465  0E28                     	;# 
   466  0E29                     	;# 
   467  0E2A                     	;# 
   468  0E2B                     	;# 
   469  0E2C                     	;# 
   470  0E2D                     	;# 
   471  0E2E                     	;# 
   472  0E90                     	;# 
   473  0E91                     	;# 
   474  0E92                     	;# 
   475  0E94                     	;# 
   476  0E95                     	;# 
   477  0E9C                     	;# 
   478  0E9D                     	;# 
   479  0E9E                     	;# 
   480  0E9F                     	;# 
   481  0EA0                     	;# 
   482  0EA1                     	;# 
   483  0EA2                     	;# 
   484  0EA3                     	;# 
   485  0EA4                     	;# 
   486  0EA5                     	;# 
   487  0EA6                     	;# 
   488  0EA7                     	;# 
   489  0F0F                     	;# 
   490  0F10                     	;# 
   491  0F11                     	;# 
   492  0F12                     	;# 
   493  0F13                     	;# 
   494  0F14                     	;# 
   495  0F15                     	;# 
   496  0F16                     	;# 
   497  0F17                     	;# 
   498  0F18                     	;# 
   499  0F19                     	;# 
   500  0F1A                     	;# 
   501  0F1B                     	;# 
   502  0F1C                     	;# 
   503  0F1D                     	;# 
   504  0F1E                     	;# 
   505  0F1F                     	;# 
   506  0F20                     	;# 
   507  0F21                     	;# 
   508  0F22                     	;# 
   509  0F23                     	;# 
   510  0F24                     	;# 
   511  0F25                     	;# 
   512  0F26                     	;# 
   513  0F27                     	;# 
   514  0F28                     	;# 
   515  0F29                     	;# 
   516  0F2A                     	;# 
   517  0F2B                     	;# 
   518  0F2C                     	;# 
   519  0F2D                     	;# 
   520  0F2E                     	;# 
   521  0F2F                     	;# 
   522  0F30                     	;# 
   523  0F31                     	;# 
   524  0F32                     	;# 
   525  0F33                     	;# 
   526  0F34                     	;# 
   527  0F35                     	;# 
   528  0F36                     	;# 
   529  0F37                     	;# 
   530  0FE4                     	;# 
   531  0FE5                     	;# 
   532  0FE6                     	;# 
   533  0FE7                     	;# 
   534  0FE8                     	;# 
   535  0FE9                     	;# 
   536  0FEA                     	;# 
   537  0FEB                     	;# 
   538  0FED                     	;# 
   539  0FEE                     	;# 
   540  0FEF                     	;# 
   541  0000                     	;# 
   542  0001                     	;# 
   543  0002                     	;# 
   544  0003                     	;# 
   545  0004                     	;# 
   546  0005                     	;# 
   547  0006                     	;# 
   548  0007                     	;# 
   549  0008                     	;# 
   550  0009                     	;# 
   551  000A                     	;# 
   552  000B                     	;# 
   553  000C                     	;# 
   554  000D                     	;# 
   555  000E                     	;# 
   556  0010                     	;# 
   557  0011                     	;# 
   558  0012                     	;# 
   559  0013                     	;# 
   560  0014                     	;# 
   561  0015                     	;# 
   562  0016                     	;# 
   563  0016                     	;# 
   564  0017                     	;# 
   565  0018                     	;# 
   566  0019                     	;# 
   567  001A                     	;# 
   568  001A                     	;# 
   569  001B                     	;# 
   570  001B                     	;# 
   571  001C                     	;# 
   572  001D                     	;# 
   573  001E                     	;# 
   574  001F                     	;# 
   575  008C                     	;# 
   576  008D                     	;# 
   577  008E                     	;# 
   578  0090                     	;# 
   579  0091                     	;# 
   580  0092                     	;# 
   581  0093                     	;# 
   582  0094                     	;# 
   583  0095                     	;# 
   584  0096                     	;# 
   585  0098                     	;# 
   586  0099                     	;# 
   587  009A                     	;# 
   588  009B                     	;# 
   589  009B                     	;# 
   590  009C                     	;# 
   591  009D                     	;# 
   592  009E                     	;# 
   593  009F                     	;# 
   594  010C                     	;# 
   595  010D                     	;# 
   596  010E                     	;# 
   597  0111                     	;# 
   598  0112                     	;# 
   599  0113                     	;# 
   600  0114                     	;# 
   601  0115                     	;# 
   602  0116                     	;# 
   603  0117                     	;# 
   604  0118                     	;# 
   605  0119                     	;# 
   606  011C                     	;# 
   607  018C                     	;# 
   608  018D                     	;# 
   609  018E                     	;# 
   610  0191                     	;# 
   611  0191                     	;# 
   612  0192                     	;# 
   613  0193                     	;# 
   614  0193                     	;# 
   615  0194                     	;# 
   616  0195                     	;# 
   617  0196                     	;# 
   618  0197                     	;# 
   619  0199                     	;# 
   620  0199                     	;# 
   621  0199                     	;# 
   622  019A                     	;# 
   623  019A                     	;# 
   624  019A                     	;# 
   625  019B                     	;# 
   626  019B                     	;# 
   627  019B                     	;# 
   628  019B                     	;# 
   629  019B                     	;# 
   630  019C                     	;# 
   631  019C                     	;# 
   632  019C                     	;# 
   633  019D                     	;# 
   634  019D                     	;# 
   635  019D                     	;# 
   636  019E                     	;# 
   637  019E                     	;# 
   638  019E                     	;# 
   639  019F                     	;# 
   640  019F                     	;# 
   641  019F                     	;# 
   642  019F                     	;# 
   643  019F                     	;# 
   644  020C                     	;# 
   645  020D                     	;# 
   646  020E                     	;# 
   647  0211                     	;# 
   648  0211                     	;# 
   649  0212                     	;# 
   650  0212                     	;# 
   651  0213                     	;# 
   652  0213                     	;# 
   653  0214                     	;# 
   654  0214                     	;# 
   655  0215                     	;# 
   656  0215                     	;# 
   657  0215                     	;# 
   658  0215                     	;# 
   659  0216                     	;# 
   660  0216                     	;# 
   661  0217                     	;# 
   662  0217                     	;# 
   663  028C                     	;# 
   664  028D                     	;# 
   665  028E                     	;# 
   666  0291                     	;# 
   667  0291                     	;# 
   668  0292                     	;# 
   669  0293                     	;# 
   670  0294                     	;# 
   671  0298                     	;# 
   672  0298                     	;# 
   673  0299                     	;# 
   674  029A                     	;# 
   675  029B                     	;# 
   676  029E                     	;# 
   677  030C                     	;# 
   678  030D                     	;# 
   679  030E                     	;# 
   680  038C                     	;# 
   681  038D                     	;# 
   682  038E                     	;# 
   683  0391                     	;# 
   684  0392                     	;# 
   685  0393                     	;# 
   686  0394                     	;# 
   687  0395                     	;# 
   688  0396                     	;# 
   689  0397                     	;# 
   690  0398                     	;# 
   691  0399                     	;# 
   692  040E                     	;# 
   693  0413                     	;# 
   694  0413                     	;# 
   695  0414                     	;# 
   696  0414                     	;# 
   697  0415                     	;# 
   698  0416                     	;# 
   699  0417                     	;# 
   700  0418                     	;# 
   701  041A                     	;# 
   702  041A                     	;# 
   703  041B                     	;# 
   704  041B                     	;# 
   705  041C                     	;# 
   706  041D                     	;# 
   707  041E                     	;# 
   708  041F                     	;# 
   709  0493                     	;# 
   710  0494                     	;# 
   711  0495                     	;# 
   712  0496                     	;# 
   713  049A                     	;# 
   714  049B                     	;# 
   715  049C                     	;# 
   716  049D                     	;# 
   717  058C                     	;# 
   718  058C                     	;# 
   719  058D                     	;# 
   720  058E                     	;# 
   721  058E                     	;# 
   722  058F                     	;# 
   723  0590                     	;# 
   724  0590                     	;# 
   725  0591                     	;# 
   726  0592                     	;# 
   727  0592                     	;# 
   728  0593                     	;# 
   729  0594                     	;# 
   730  0594                     	;# 
   731  0595                     	;# 
   732  0596                     	;# 
   733  0596                     	;# 
   734  0597                     	;# 
   735  0598                     	;# 
   736  0599                     	;# 
   737  059A                     	;# 
   738  059B                     	;# 
   739  059B                     	;# 
   740  059C                     	;# 
   741  059D                     	;# 
   742  060C                     	;# 
   743  060C                     	;# 
   744  060D                     	;# 
   745  060E                     	;# 
   746  060F                     	;# 
   747  060F                     	;# 
   748  0610                     	;# 
   749  0611                     	;# 
   750  0612                     	;# 
   751  0613                     	;# 
   752  0614                     	;# 
   753  0617                     	;# 
   754  0617                     	;# 
   755  0618                     	;# 
   756  0619                     	;# 
   757  061A                     	;# 
   758  061A                     	;# 
   759  061B                     	;# 
   760  061C                     	;# 
   761  0691                     	;# 
   762  0692                     	;# 
   763  0693                     	;# 
   764  0694                     	;# 
   765  0695                     	;# 
   766  0696                     	;# 
   767  0697                     	;# 
   768  0699                     	;# 
   769  069A                     	;# 
   770  0711                     	;# 
   771  0712                     	;# 
   772  0713                     	;# 
   773  0714                     	;# 
   774  0715                     	;# 
   775  0718                     	;# 
   776  0718                     	;# 
   777  0719                     	;# 
   778  071A                     	;# 
   779  071A                     	;# 
   780  071B                     	;# 
   781  071C                     	;# 
   782  071D                     	;# 
   783  0791                     	;# 
   784  0791                     	;# 
   785  0792                     	;# 
   786  0793                     	;# 
   787  0793                     	;# 
   788  0794                     	;# 
   789  0795                     	;# 
   790  0795                     	;# 
   791  0796                     	;# 
   792  0797                     	;# 
   793  0797                     	;# 
   794  0798                     	;# 
   795  0799                     	;# 
   796  079A                     	;# 
   797  080C                     	;# 
   798  080C                     	;# 
   799  080D                     	;# 
   800  080E                     	;# 
   801  080E                     	;# 
   802  080F                     	;# 
   803  0810                     	;# 
   804  0810                     	;# 
   805  0811                     	;# 
   806  0812                     	;# 
   807  0812                     	;# 
   808  0813                     	;# 
   809  0814                     	;# 
   810  0815                     	;# 
   811  0816                     	;# 
   812  0817                     	;# 
   813  0818                     	;# 
   814  0819                     	;# 
   815  081A                     	;# 
   816  081A                     	;# 
   817  081B                     	;# 
   818  081C                     	;# 
   819  081C                     	;# 
   820  081D                     	;# 
   821  088C                     	;# 
   822  088D                     	;# 
   823  088E                     	;# 
   824  088F                     	;# 
   825  088F                     	;# 
   826  0890                     	;# 
   827  0891                     	;# 
   828  0892                     	;# 
   829  0893                     	;# 
   830  0893                     	;# 
   831  0894                     	;# 
   832  0895                     	;# 
   833  0896                     	;# 
   834  0897                     	;# 
   835  0897                     	;# 
   836  0898                     	;# 
   837  0899                     	;# 
   838  0D8C                     	;# 
   839  0D8C                     	;# 
   840  0D8D                     	;# 
   841  0D8E                     	;# 
   842  0D8F                     	;# 
   843  0D8F                     	;# 
   844  0D90                     	;# 
   845  0D91                     	;# 
   846  0D92                     	;# 
   847  0D92                     	;# 
   848  0D93                     	;# 
   849  0D94                     	;# 
   850  0D95                     	;# 
   851  0D95                     	;# 
   852  0D96                     	;# 
   853  0D97                     	;# 
   854  0D98                     	;# 
   855  0D99                     	;# 
   856  0D9A                     	;# 
   857  0D9B                     	;# 
   858  0D9C                     	;# 
   859  0D9D                     	;# 
   860  0D9E                     	;# 
   861  0D9E                     	;# 
   862  0D9F                     	;# 
   863  0DA0                     	;# 
   864  0DA1                     	;# 
   865  0DA1                     	;# 
   866  0DA2                     	;# 
   867  0DA3                     	;# 
   868  0DA4                     	;# 
   869  0DA4                     	;# 
   870  0DA5                     	;# 
   871  0DA6                     	;# 
   872  0DA7                     	;# 
   873  0DA7                     	;# 
   874  0DA8                     	;# 
   875  0DA9                     	;# 
   876  0DAA                     	;# 
   877  0DAB                     	;# 
   878  0DAC                     	;# 
   879  0DAD                     	;# 
   880  0DAE                     	;# 
   881  0DAF                     	;# 
   882  0E0F                     	;# 
   883  0E10                     	;# 
   884  0E11                     	;# 
   885  0E12                     	;# 
   886  0E13                     	;# 
   887  0E14                     	;# 
   888  0E15                     	;# 
   889  0E16                     	;# 
   890  0E17                     	;# 
   891  0E18                     	;# 
   892  0E19                     	;# 
   893  0E1A                     	;# 
   894  0E1B                     	;# 
   895  0E1C                     	;# 
   896  0E1D                     	;# 
   897  0E1E                     	;# 
   898  0E1F                     	;# 
   899  0E20                     	;# 
   900  0E21                     	;# 
   901  0E22                     	;# 
   902  0E23                     	;# 
   903  0E24                     	;# 
   904  0E25                     	;# 
   905  0E26                     	;# 
   906  0E27                     	;# 
   907  0E28                     	;# 
   908  0E29                     	;# 
   909  0E2A                     	;# 
   910  0E2B                     	;# 
   911  0E2C                     	;# 
   912  0E2D                     	;# 
   913  0E2E                     	;# 
   914  0E90                     	;# 
   915  0E91                     	;# 
   916  0E92                     	;# 
   917  0E94                     	;# 
   918  0E95                     	;# 
   919  0E9C                     	;# 
   920  0E9D                     	;# 
   921  0E9E                     	;# 
   922  0E9F                     	;# 
   923  0EA0                     	;# 
   924  0EA1                     	;# 
   925  0EA2                     	;# 
   926  0EA3                     	;# 
   927  0EA4                     	;# 
   928  0EA5                     	;# 
   929  0EA6                     	;# 
   930  0EA7                     	;# 
   931  0F0F                     	;# 
   932  0F10                     	;# 
   933  0F11                     	;# 
   934  0F12                     	;# 
   935  0F13                     	;# 
   936  0F14                     	;# 
   937  0F15                     	;# 
   938  0F16                     	;# 
   939  0F17                     	;# 
   940  0F18                     	;# 
   941  0F19                     	;# 
   942  0F1A                     	;# 
   943  0F1B                     	;# 
   944  0F1C                     	;# 
   945  0F1D                     	;# 
   946  0F1E                     	;# 
   947  0F1F                     	;# 
   948  0F20                     	;# 
   949  0F21                     	;# 
   950  0F22                     	;# 
   951  0F23                     	;# 
   952  0F24                     	;# 
   953  0F25                     	;# 
   954  0F26                     	;# 
   955  0F27                     	;# 
   956  0F28                     	;# 
   957  0F29                     	;# 
   958  0F2A                     	;# 
   959  0F2B                     	;# 
   960  0F2C                     	;# 
   961  0F2D                     	;# 
   962  0F2E                     	;# 
   963  0F2F                     	;# 
   964  0F30                     	;# 
   965  0F31                     	;# 
   966  0F32                     	;# 
   967  0F33                     	;# 
   968  0F34                     	;# 
   969  0F35                     	;# 
   970  0F36                     	;# 
   971  0F37                     	;# 
   972  0FE4                     	;# 
   973  0FE5                     	;# 
   974  0FE6                     	;# 
   975  0FE7                     	;# 
   976  0FE8                     	;# 
   977  0FE9                     	;# 
   978  0FEA                     	;# 
   979  0FEB                     	;# 
   980  0FED                     	;# 
   981  0FEE                     	;# 
   982  0FEF                     	;# 
   983  0000                     	;# 
   984  0001                     	;# 
   985  0002                     	;# 
   986  0003                     	;# 
   987  0004                     	;# 
   988  0005                     	;# 
   989  0006                     	;# 
   990  0007                     	;# 
   991  0008                     	;# 
   992  0009                     	;# 
   993  000A                     	;# 
   994  000B                     	;# 
   995  000C                     	;# 
   996  000D                     	;# 
   997  000E                     	;# 
   998  0010                     	;# 
   999  0011                     	;# 
  1000  0012                     	;# 
  1001  0013                     	;# 
  1002  0014                     	;# 
  1003  0015                     	;# 
  1004  0016                     	;# 
  1005  0016                     	;# 
  1006  0017                     	;# 
  1007  0018                     	;# 
  1008  0019                     	;# 
  1009  001A                     	;# 
  1010  001A                     	;# 
  1011  001B                     	;# 
  1012  001B                     	;# 
  1013  001C                     	;# 
  1014  001D                     	;# 
  1015  001E                     	;# 
  1016  001F                     	;# 
  1017  008C                     	;# 
  1018  008D                     	;# 
  1019  008E                     	;# 
  1020  0090                     	;# 
  1021  0091                     	;# 
  1022  0092                     	;# 
  1023  0093                     	;# 
  1024  0094                     	;# 
  1025  0095                     	;# 
  1026  0096                     	;# 
  1027  0098                     	;# 
  1028  0099                     	;# 
  1029  009A                     	;# 
  1030  009B                     	;# 
  1031  009B                     	;# 
  1032  009C                     	;# 
  1033  009D                     	;# 
  1034  009E                     	;# 
  1035  009F                     	;# 
  1036  010C                     	;# 
  1037  010D                     	;# 
  1038  010E                     	;# 
  1039  0111                     	;# 
  1040  0112                     	;# 
  1041  0113                     	;# 
  1042  0114                     	;# 
  1043  0115                     	;# 
  1044  0116                     	;# 
  1045  0117                     	;# 
  1046  0118                     	;# 
  1047  0119                     	;# 
  1048  011C                     	;# 
  1049  018C                     	;# 
  1050  018D                     	;# 
  1051  018E                     	;# 
  1052  0191                     	;# 
  1053  0191                     	;# 
  1054  0192                     	;# 
  1055  0193                     	;# 
  1056  0193                     	;# 
  1057  0194                     	;# 
  1058  0195                     	;# 
  1059  0196                     	;# 
  1060  0197                     	;# 
  1061  0199                     	;# 
  1062  0199                     	;# 
  1063  0199                     	;# 
  1064  019A                     	;# 
  1065  019A                     	;# 
  1066  019A                     	;# 
  1067  019B                     	;# 
  1068  019B                     	;# 
  1069  019B                     	;# 
  1070  019B                     	;# 
  1071  019B                     	;# 
  1072  019C                     	;# 
  1073  019C                     	;# 
  1074  019C                     	;# 
  1075  019D                     	;# 
  1076  019D                     	;# 
  1077  019D                     	;# 
  1078  019E                     	;# 
  1079  019E                     	;# 
  1080  019E                     	;# 
  1081  019F                     	;# 
  1082  019F                     	;# 
  1083  019F                     	;# 
  1084  019F                     	;# 
  1085  019F                     	;# 
  1086  020C                     	;# 
  1087  020D                     	;# 
  1088  020E                     	;# 
  1089  0211                     	;# 
  1090  0211                     	;# 
  1091  0212                     	;# 
  1092  0212                     	;# 
  1093  0213                     	;# 
  1094  0213                     	;# 
  1095  0214                     	;# 
  1096  0214                     	;# 
  1097  0215                     	;# 
  1098  0215                     	;# 
  1099  0215                     	;# 
  1100  0215                     	;# 
  1101  0216                     	;# 
  1102  0216                     	;# 
  1103  0217                     	;# 
  1104  0217                     	;# 
  1105  028C                     	;# 
  1106  028D                     	;# 
  1107  028E                     	;# 
  1108  0291                     	;# 
  1109  0291                     	;# 
  1110  0292                     	;# 
  1111  0293                     	;# 
  1112  0294                     	;# 
  1113  0298                     	;# 
  1114  0298                     	;# 
  1115  0299                     	;# 
  1116  029A                     	;# 
  1117  029B                     	;# 
  1118  029E                     	;# 
  1119  030C                     	;# 
  1120  030D                     	;# 
  1121  030E                     	;# 
  1122  038C                     	;# 
  1123  038D                     	;# 
  1124  038E                     	;# 
  1125  0391                     	;# 
  1126  0392                     	;# 
  1127  0393                     	;# 
  1128  0394                     	;# 
  1129  0395                     	;# 
  1130  0396                     	;# 
  1131  0397                     	;# 
  1132  0398                     	;# 
  1133  0399                     	;# 
  1134  040E                     	;# 
  1135  0413                     	;# 
  1136  0413                     	;# 
  1137  0414                     	;# 
  1138  0414                     	;# 
  1139  0415                     	;# 
  1140  0416                     	;# 
  1141  0417                     	;# 
  1142  0418                     	;# 
  1143  041A                     	;# 
  1144  041A                     	;# 
  1145  041B                     	;# 
  1146  041B                     	;# 
  1147  041C                     	;# 
  1148  041D                     	;# 
  1149  041E                     	;# 
  1150  041F                     	;# 
  1151  0493                     	;# 
  1152  0494                     	;# 
  1153  0495                     	;# 
  1154  0496                     	;# 
  1155  049A                     	;# 
  1156  049B                     	;# 
  1157  049C                     	;# 
  1158  049D                     	;# 
  1159  058C                     	;# 
  1160  058C                     	;# 
  1161  058D                     	;# 
  1162  058E                     	;# 
  1163  058E                     	;# 
  1164  058F                     	;# 
  1165  0590                     	;# 
  1166  0590                     	;# 
  1167  0591                     	;# 
  1168  0592                     	;# 
  1169  0592                     	;# 
  1170  0593                     	;# 
  1171  0594                     	;# 
  1172  0594                     	;# 
  1173  0595                     	;# 
  1174  0596                     	;# 
  1175  0596                     	;# 
  1176  0597                     	;# 
  1177  0598                     	;# 
  1178  0599                     	;# 
  1179  059A                     	;# 
  1180  059B                     	;# 
  1181  059B                     	;# 
  1182  059C                     	;# 
  1183  059D                     	;# 
  1184  060C                     	;# 
  1185  060C                     	;# 
  1186  060D                     	;# 
  1187  060E                     	;# 
  1188  060F                     	;# 
  1189  060F                     	;# 
  1190  0610                     	;# 
  1191  0611                     	;# 
  1192  0612                     	;# 
  1193  0613                     	;# 
  1194  0614                     	;# 
  1195  0617                     	;# 
  1196  0617                     	;# 
  1197  0618                     	;# 
  1198  0619                     	;# 
  1199  061A                     	;# 
  1200  061A                     	;# 
  1201  061B                     	;# 
  1202  061C                     	;# 
  1203  0691                     	;# 
  1204  0692                     	;# 
  1205  0693                     	;# 
  1206  0694                     	;# 
  1207  0695                     	;# 
  1208  0696                     	;# 
  1209  0697                     	;# 
  1210  0699                     	;# 
  1211  069A                     	;# 
  1212  0711                     	;# 
  1213  0712                     	;# 
  1214  0713                     	;# 
  1215  0714                     	;# 
  1216  0715                     	;# 
  1217  0718                     	;# 
  1218  0718                     	;# 
  1219  0719                     	;# 
  1220  071A                     	;# 
  1221  071A                     	;# 
  1222  071B                     	;# 
  1223  071C                     	;# 
  1224  071D                     	;# 
  1225  0791                     	;# 
  1226  0791                     	;# 
  1227  0792                     	;# 
  1228  0793                     	;# 
  1229  0793                     	;# 
  1230  0794                     	;# 
  1231  0795                     	;# 
  1232  0795                     	;# 
  1233  0796                     	;# 
  1234  0797                     	;# 
  1235  0797                     	;# 
  1236  0798                     	;# 
  1237  0799                     	;# 
  1238  079A                     	;# 
  1239  080C                     	;# 
  1240  080C                     	;# 
  1241  080D                     	;# 
  1242  080E                     	;# 
  1243  080E                     	;# 
  1244  080F                     	;# 
  1245  0810                     	;# 
  1246  0810                     	;# 
  1247  0811                     	;# 
  1248  0812                     	;# 
  1249  0812                     	;# 
  1250  0813                     	;# 
  1251  0814                     	;# 
  1252  0815                     	;# 
  1253  0816                     	;# 
  1254  0817                     	;# 
  1255  0818                     	;# 
  1256  0819                     	;# 
  1257  081A                     	;# 
  1258  081A                     	;# 
  1259  081B                     	;# 
  1260  081C                     	;# 
  1261  081C                     	;# 
  1262  081D                     	;# 
  1263  088C                     	;# 
  1264  088D                     	;# 
  1265  088E                     	;# 
  1266  088F                     	;# 
  1267  088F                     	;# 
  1268  0890                     	;# 
  1269  0891                     	;# 
  1270  0892                     	;# 
  1271  0893                     	;# 
  1272  0893                     	;# 
  1273  0894                     	;# 
  1274  0895                     	;# 
  1275  0896                     	;# 
  1276  0897                     	;# 
  1277  0897                     	;# 
  1278  0898                     	;# 
  1279  0899                     	;# 
  1280  0D8C                     	;# 
  1281  0D8C                     	;# 
  1282  0D8D                     	;# 
  1283  0D8E                     	;# 
  1284  0D8F                     	;# 
  1285  0D8F                     	;# 
  1286  0D90                     	;# 
  1287  0D91                     	;# 
  1288  0D92                     	;# 
  1289  0D92                     	;# 
  1290  0D93                     	;# 
  1291  0D94                     	;# 
  1292  0D95                     	;# 
  1293  0D95                     	;# 
  1294  0D96                     	;# 
  1295  0D97                     	;# 
  1296  0D98                     	;# 
  1297  0D99                     	;# 
  1298  0D9A                     	;# 
  1299  0D9B                     	;# 
  1300  0D9C                     	;# 
  1301  0D9D                     	;# 
  1302  0D9E                     	;# 
  1303  0D9E                     	;# 
  1304  0D9F                     	;# 
  1305  0DA0                     	;# 
  1306  0DA1                     	;# 
  1307  0DA1                     	;# 
  1308  0DA2                     	;# 
  1309  0DA3                     	;# 
  1310  0DA4                     	;# 
  1311  0DA4                     	;# 
  1312  0DA5                     	;# 
  1313  0DA6                     	;# 
  1314  0DA7                     	;# 
  1315  0DA7                     	;# 
  1316  0DA8                     	;# 
  1317  0DA9                     	;# 
  1318  0DAA                     	;# 
  1319  0DAB                     	;# 
  1320  0DAC                     	;# 
  1321  0DAD                     	;# 
  1322  0DAE                     	;# 
  1323  0DAF                     	;# 
  1324  0E0F                     	;# 
  1325  0E10                     	;# 
  1326  0E11                     	;# 
  1327  0E12                     	;# 
  1328  0E13                     	;# 
  1329  0E14                     	;# 
  1330  0E15                     	;# 
  1331  0E16                     	;# 
  1332  0E17                     	;# 
  1333  0E18                     	;# 
  1334  0E19                     	;# 
  1335  0E1A                     	;# 
  1336  0E1B                     	;# 
  1337  0E1C                     	;# 
  1338  0E1D                     	;# 
  1339  0E1E                     	;# 
  1340  0E1F                     	;# 
  1341  0E20                     	;# 
  1342  0E21                     	;# 
  1343  0E22                     	;# 
  1344  0E23                     	;# 
  1345  0E24                     	;# 
  1346  0E25                     	;# 
  1347  0E26                     	;# 
  1348  0E27                     	;# 
  1349  0E28                     	;# 
  1350  0E29                     	;# 
  1351  0E2A                     	;# 
  1352  0E2B                     	;# 
  1353  0E2C                     	;# 
  1354  0E2D                     	;# 
  1355  0E2E                     	;# 
  1356  0E90                     	;# 
  1357  0E91                     	;# 
  1358  0E92                     	;# 
  1359  0E94                     	;# 
  1360  0E95                     	;# 
  1361  0E9C                     	;# 
  1362  0E9D                     	;# 
  1363  0E9E                     	;# 
  1364  0E9F                     	;# 
  1365  0EA0                     	;# 
  1366  0EA1                     	;# 
  1367  0EA2                     	;# 
  1368  0EA3                     	;# 
  1369  0EA4                     	;# 
  1370  0EA5                     	;# 
  1371  0EA6                     	;# 
  1372  0EA7                     	;# 
  1373  0F0F                     	;# 
  1374  0F10                     	;# 
  1375  0F11                     	;# 
  1376  0F12                     	;# 
  1377  0F13                     	;# 
  1378  0F14                     	;# 
  1379  0F15                     	;# 
  1380  0F16                     	;# 
  1381  0F17                     	;# 
  1382  0F18                     	;# 
  1383  0F19                     	;# 
  1384  0F1A                     	;# 
  1385  0F1B                     	;# 
  1386  0F1C                     	;# 
  1387  0F1D                     	;# 
  1388  0F1E                     	;# 
  1389  0F1F                     	;# 
  1390  0F20                     	;# 
  1391  0F21                     	;# 
  1392  0F22                     	;# 
  1393  0F23                     	;# 
  1394  0F24                     	;# 
  1395  0F25                     	;# 
  1396  0F26                     	;# 
  1397  0F27                     	;# 
  1398  0F28                     	;# 
  1399  0F29                     	;# 
  1400  0F2A                     	;# 
  1401  0F2B                     	;# 
  1402  0F2C                     	;# 
  1403  0F2D                     	;# 
  1404  0F2E                     	;# 
  1405  0F2F                     	;# 
  1406  0F30                     	;# 
  1407  0F31                     	;# 
  1408  0F32                     	;# 
  1409  0F33                     	;# 
  1410  0F34                     	;# 
  1411  0F35                     	;# 
  1412  0F36                     	;# 
  1413  0F37                     	;# 
  1414  0FE4                     	;# 
  1415  0FE5                     	;# 
  1416  0FE6                     	;# 
  1417  0FE7                     	;# 
  1418  0FE8                     	;# 
  1419  0FE9                     	;# 
  1420  0FEA                     	;# 
  1421  0FEB                     	;# 
  1422  0FED                     	;# 
  1423  0FEE                     	;# 
  1424  0FEF                     	;# 
  1425  0000                     	;# 
  1426  0001                     	;# 
  1427  0002                     	;# 
  1428  0003                     	;# 
  1429  0004                     	;# 
  1430  0005                     	;# 
  1431  0006                     	;# 
  1432  0007                     	;# 
  1433  0008                     	;# 
  1434  0009                     	;# 
  1435  000A                     	;# 
  1436  000B                     	;# 
  1437  000C                     	;# 
  1438  000D                     	;# 
  1439  000E                     	;# 
  1440  0010                     	;# 
  1441  0011                     	;# 
  1442  0012                     	;# 
  1443  0013                     	;# 
  1444  0014                     	;# 
  1445  0015                     	;# 
  1446  0016                     	;# 
  1447  0016                     	;# 
  1448  0017                     	;# 
  1449  0018                     	;# 
  1450  0019                     	;# 
  1451  001A                     	;# 
  1452  001A                     	;# 
  1453  001B                     	;# 
  1454  001B                     	;# 
  1455  001C                     	;# 
  1456  001D                     	;# 
  1457  001E                     	;# 
  1458  001F                     	;# 
  1459  008C                     	;# 
  1460  008D                     	;# 
  1461  008E                     	;# 
  1462  0090                     	;# 
  1463  0091                     	;# 
  1464  0092                     	;# 
  1465  0093                     	;# 
  1466  0094                     	;# 
  1467  0095                     	;# 
  1468  0096                     	;# 
  1469  0098                     	;# 
  1470  0099                     	;# 
  1471  009A                     	;# 
  1472  009B                     	;# 
  1473  009B                     	;# 
  1474  009C                     	;# 
  1475  009D                     	;# 
  1476  009E                     	;# 
  1477  009F                     	;# 
  1478  010C                     	;# 
  1479  010D                     	;# 
  1480  010E                     	;# 
  1481  0111                     	;# 
  1482  0112                     	;# 
  1483  0113                     	;# 
  1484  0114                     	;# 
  1485  0115                     	;# 
  1486  0116                     	;# 
  1487  0117                     	;# 
  1488  0118                     	;# 
  1489  0119                     	;# 
  1490  011C                     	;# 
  1491  018C                     	;# 
  1492  018D                     	;# 
  1493  018E                     	;# 
  1494  0191                     	;# 
  1495  0191                     	;# 
  1496  0192                     	;# 
  1497  0193                     	;# 
  1498  0193                     	;# 
  1499  0194                     	;# 
  1500  0195                     	;# 
  1501  0196                     	;# 
  1502  0197                     	;# 
  1503  0199                     	;# 
  1504  0199                     	;# 
  1505  0199                     	;# 
  1506  019A                     	;# 
  1507  019A                     	;# 
  1508  019A                     	;# 
  1509  019B                     	;# 
  1510  019B                     	;# 
  1511  019B                     	;# 
  1512  019B                     	;# 
  1513  019B                     	;# 
  1514  019C                     	;# 
  1515  019C                     	;# 
  1516  019C                     	;# 
  1517  019D                     	;# 
  1518  019D                     	;# 
  1519  019D                     	;# 
  1520  019E                     	;# 
  1521  019E                     	;# 
  1522  019E                     	;# 
  1523  019F                     	;# 
  1524  019F                     	;# 
  1525  019F                     	;# 
  1526  019F                     	;# 
  1527  019F                     	;# 
  1528  020C                     	;# 
  1529  020D                     	;# 
  1530  020E                     	;# 
  1531  0211                     	;# 
  1532  0211                     	;# 
  1533  0212                     	;# 
  1534  0212                     	;# 
  1535  0213                     	;# 
  1536  0213                     	;# 
  1537  0214                     	;# 
  1538  0214                     	;# 
  1539  0215                     	;# 
  1540  0215                     	;# 
  1541  0215                     	;# 
  1542  0215                     	;# 
  1543  0216                     	;# 
  1544  0216                     	;# 
  1545  0217                     	;# 
  1546  0217                     	;# 
  1547  028C                     	;# 
  1548  028D                     	;# 
  1549  028E                     	;# 
  1550  0291                     	;# 
  1551  0291                     	;# 
  1552  0292                     	;# 
  1553  0293                     	;# 
  1554  0294                     	;# 
  1555  0298                     	;# 
  1556  0298                     	;# 
  1557  0299                     	;# 
  1558  029A                     	;# 
  1559  029B                     	;# 
  1560  029E                     	;# 
  1561  030C                     	;# 
  1562  030D                     	;# 
  1563  030E                     	;# 
  1564  038C                     	;# 
  1565  038D                     	;# 
  1566  038E                     	;# 
  1567  0391                     	;# 
  1568  0392                     	;# 
  1569  0393                     	;# 
  1570  0394                     	;# 
  1571  0395                     	;# 
  1572  0396                     	;# 
  1573  0397                     	;# 
  1574  0398                     	;# 
  1575  0399                     	;# 
  1576  040E                     	;# 
  1577  0413                     	;# 
  1578  0413                     	;# 
  1579  0414                     	;# 
  1580  0414                     	;# 
  1581  0415                     	;# 
  1582  0416                     	;# 
  1583  0417                     	;# 
  1584  0418                     	;# 
  1585  041A                     	;# 
  1586  041A                     	;# 
  1587  041B                     	;# 
  1588  041B                     	;# 
  1589  041C                     	;# 
  1590  041D                     	;# 
  1591  041E                     	;# 
  1592  041F                     	;# 
  1593  0493                     	;# 
  1594  0494                     	;# 
  1595  0495                     	;# 
  1596  0496                     	;# 
  1597  049A                     	;# 
  1598  049B                     	;# 
  1599  049C                     	;# 
  1600  049D                     	;# 
  1601  058C                     	;# 
  1602  058C                     	;# 
  1603  058D                     	;# 
  1604  058E                     	;# 
  1605  058E                     	;# 
  1606  058F                     	;# 
  1607  0590                     	;# 
  1608  0590                     	;# 
  1609  0591                     	;# 
  1610  0592                     	;# 
  1611  0592                     	;# 
  1612  0593                     	;# 
  1613  0594                     	;# 
  1614  0594                     	;# 
  1615  0595                     	;# 
  1616  0596                     	;# 
  1617  0596                     	;# 
  1618  0597                     	;# 
  1619  0598                     	;# 
  1620  0599                     	;# 
  1621  059A                     	;# 
  1622  059B                     	;# 
  1623  059B                     	;# 
  1624  059C                     	;# 
  1625  059D                     	;# 
  1626  060C                     	;# 
  1627  060C                     	;# 
  1628  060D                     	;# 
  1629  060E                     	;# 
  1630  060F                     	;# 
  1631  060F                     	;# 
  1632  0610                     	;# 
  1633  0611                     	;# 
  1634  0612                     	;# 
  1635  0613                     	;# 
  1636  0614                     	;# 
  1637  0617                     	;# 
  1638  0617                     	;# 
  1639  0618                     	;# 
  1640  0619                     	;# 
  1641  061A                     	;# 
  1642  061A                     	;# 
  1643  061B                     	;# 
  1644  061C                     	;# 
  1645  0691                     	;# 
  1646  0692                     	;# 
  1647  0693                     	;# 
  1648  0694                     	;# 
  1649  0695                     	;# 
  1650  0696                     	;# 
  1651  0697                     	;# 
  1652  0699                     	;# 
  1653  069A                     	;# 
  1654  0711                     	;# 
  1655  0712                     	;# 
  1656  0713                     	;# 
  1657  0714                     	;# 
  1658  0715                     	;# 
  1659  0718                     	;# 
  1660  0718                     	;# 
  1661  0719                     	;# 
  1662  071A                     	;# 
  1663  071A                     	;# 
  1664  071B                     	;# 
  1665  071C                     	;# 
  1666  071D                     	;# 
  1667  0791                     	;# 
  1668  0791                     	;# 
  1669  0792                     	;# 
  1670  0793                     	;# 
  1671  0793                     	;# 
  1672  0794                     	;# 
  1673  0795                     	;# 
  1674  0795                     	;# 
  1675  0796                     	;# 
  1676  0797                     	;# 
  1677  0797                     	;# 
  1678  0798                     	;# 
  1679  0799                     	;# 
  1680  079A                     	;# 
  1681  080C                     	;# 
  1682  080C                     	;# 
  1683  080D                     	;# 
  1684  080E                     	;# 
  1685  080E                     	;# 
  1686  080F                     	;# 
  1687  0810                     	;# 
  1688  0810                     	;# 
  1689  0811                     	;# 
  1690  0812                     	;# 
  1691  0812                     	;# 
  1692  0813                     	;# 
  1693  0814                     	;# 
  1694  0815                     	;# 
  1695  0816                     	;# 
  1696  0817                     	;# 
  1697  0818                     	;# 
  1698  0819                     	;# 
  1699  081A                     	;# 
  1700  081A                     	;# 
  1701  081B                     	;# 
  1702  081C                     	;# 
  1703  081C                     	;# 
  1704  081D                     	;# 
  1705  088C                     	;# 
  1706  088D                     	;# 
  1707  088E                     	;# 
  1708  088F                     	;# 
  1709  088F                     	;# 
  1710  0890                     	;# 
  1711  0891                     	;# 
  1712  0892                     	;# 
  1713  0893                     	;# 
  1714  0893                     	;# 
  1715  0894                     	;# 
  1716  0895                     	;# 
  1717  0896                     	;# 
  1718  0897                     	;# 
  1719  0897                     	;# 
  1720  0898                     	;# 
  1721  0899                     	;# 
  1722  0D8C                     	;# 
  1723  0D8C                     	;# 
  1724  0D8D                     	;# 
  1725  0D8E                     	;# 
  1726  0D8F                     	;# 
  1727  0D8F                     	;# 
  1728  0D90                     	;# 
  1729  0D91                     	;# 
  1730  0D92                     	;# 
  1731  0D92                     	;# 
  1732  0D93                     	;# 
  1733  0D94                     	;# 
  1734  0D95                     	;# 
  1735  0D95                     	;# 
  1736  0D96                     	;# 
  1737  0D97                     	;# 
  1738  0D98                     	;# 
  1739  0D99                     	;# 
  1740  0D9A                     	;# 
  1741  0D9B                     	;# 
  1742  0D9C                     	;# 
  1743  0D9D                     	;# 
  1744  0D9E                     	;# 
  1745  0D9E                     	;# 
  1746  0D9F                     	;# 
  1747  0DA0                     	;# 
  1748  0DA1                     	;# 
  1749  0DA1                     	;# 
  1750  0DA2                     	;# 
  1751  0DA3                     	;# 
  1752  0DA4                     	;# 
  1753  0DA4                     	;# 
  1754  0DA5                     	;# 
  1755  0DA6                     	;# 
  1756  0DA7                     	;# 
  1757  0DA7                     	;# 
  1758  0DA8                     	;# 
  1759  0DA9                     	;# 
  1760  0DAA                     	;# 
  1761  0DAB                     	;# 
  1762  0DAC                     	;# 
  1763  0DAD                     	;# 
  1764  0DAE                     	;# 
  1765  0DAF                     	;# 
  1766  0E0F                     	;# 
  1767  0E10                     	;# 
  1768  0E11                     	;# 
  1769  0E12                     	;# 
  1770  0E13                     	;# 
  1771  0E14                     	;# 
  1772  0E15                     	;# 
  1773  0E16                     	;# 
  1774  0E17                     	;# 
  1775  0E18                     	;# 
  1776  0E19                     	;# 
  1777  0E1A                     	;# 
  1778  0E1B                     	;# 
  1779  0E1C                     	;# 
  1780  0E1D                     	;# 
  1781  0E1E                     	;# 
  1782  0E1F                     	;# 
  1783  0E20                     	;# 
  1784  0E21                     	;# 
  1785  0E22                     	;# 
  1786  0E23                     	;# 
  1787  0E24                     	;# 
  1788  0E25                     	;# 
  1789  0E26                     	;# 
  1790  0E27                     	;# 
  1791  0E28                     	;# 
  1792  0E29                     	;# 
  1793  0E2A                     	;# 
  1794  0E2B                     	;# 
  1795  0E2C                     	;# 
  1796  0E2D                     	;# 
  1797  0E2E                     	;# 
  1798  0E90                     	;# 
  1799  0E91                     	;# 
  1800  0E92                     	;# 
  1801  0E94                     	;# 
  1802  0E95                     	;# 
  1803  0E9C                     	;# 
  1804  0E9D                     	;# 
  1805  0E9E                     	;# 
  1806  0E9F                     	;# 
  1807  0EA0                     	;# 
  1808  0EA1                     	;# 
  1809  0EA2                     	;# 
  1810  0EA3                     	;# 
  1811  0EA4                     	;# 
  1812  0EA5                     	;# 
  1813  0EA6                     	;# 
  1814  0EA7                     	;# 
  1815  0F0F                     	;# 
  1816  0F10                     	;# 
  1817  0F11                     	;# 
  1818  0F12                     	;# 
  1819  0F13                     	;# 
  1820  0F14                     	;# 
  1821  0F15                     	;# 
  1822  0F16                     	;# 
  1823  0F17                     	;# 
  1824  0F18                     	;# 
  1825  0F19                     	;# 
  1826  0F1A                     	;# 
  1827  0F1B                     	;# 
  1828  0F1C                     	;# 
  1829  0F1D                     	;# 
  1830  0F1E                     	;# 
  1831  0F1F                     	;# 
  1832  0F20                     	;# 
  1833  0F21                     	;# 
  1834  0F22                     	;# 
  1835  0F23                     	;# 
  1836  0F24                     	;# 
  1837  0F25                     	;# 
  1838  0F26                     	;# 
  1839  0F27                     	;# 
  1840  0F28                     	;# 
  1841  0F29                     	;# 
  1842  0F2A                     	;# 
  1843  0F2B                     	;# 
  1844  0F2C                     	;# 
  1845  0F2D                     	;# 
  1846  0F2E                     	;# 
  1847  0F2F                     	;# 
  1848  0F30                     	;# 
  1849  0F31                     	;# 
  1850  0F32                     	;# 
  1851  0F33                     	;# 
  1852  0F34                     	;# 
  1853  0F35                     	;# 
  1854  0F36                     	;# 
  1855  0F37                     	;# 
  1856  0FE4                     	;# 
  1857  0FE5                     	;# 
  1858  0FE6                     	;# 
  1859  0FE7                     	;# 
  1860  0FE8                     	;# 
  1861  0FE9                     	;# 
  1862  0FEA                     	;# 
  1863  0FEB                     	;# 
  1864  0FED                     	;# 
  1865  0FEE                     	;# 
  1866  0FEF                     	;# 
  1867  0000                     	;# 
  1868  0001                     	;# 
  1869  0002                     	;# 
  1870  0003                     	;# 
  1871  0004                     	;# 
  1872  0005                     	;# 
  1873  0006                     	;# 
  1874  0007                     	;# 
  1875  0008                     	;# 
  1876  0009                     	;# 
  1877  000A                     	;# 
  1878  000B                     	;# 
  1879  000C                     	;# 
  1880  000D                     	;# 
  1881  000E                     	;# 
  1882  0010                     	;# 
  1883  0011                     	;# 
  1884  0012                     	;# 
  1885  0013                     	;# 
  1886  0014                     	;# 
  1887  0015                     	;# 
  1888  0016                     	;# 
  1889  0016                     	;# 
  1890  0017                     	;# 
  1891  0018                     	;# 
  1892  0019                     	;# 
  1893  001A                     	;# 
  1894  001A                     	;# 
  1895  001B                     	;# 
  1896  001B                     	;# 
  1897  001C                     	;# 
  1898  001D                     	;# 
  1899  001E                     	;# 
  1900  001F                     	;# 
  1901  008C                     	;# 
  1902  008D                     	;# 
  1903  008E                     	;# 
  1904  0090                     	;# 
  1905  0091                     	;# 
  1906  0092                     	;# 
  1907  0093                     	;# 
  1908  0094                     	;# 
  1909  0095                     	;# 
  1910  0096                     	;# 
  1911  0098                     	;# 
  1912  0099                     	;# 
  1913  009A                     	;# 
  1914  009B                     	;# 
  1915  009B                     	;# 
  1916  009C                     	;# 
  1917  009D                     	;# 
  1918  009E                     	;# 
  1919  009F                     	;# 
  1920  010C                     	;# 
  1921  010D                     	;# 
  1922  010E                     	;# 
  1923  0111                     	;# 
  1924  0112                     	;# 
  1925  0113                     	;# 
  1926  0114                     	;# 
  1927  0115                     	;# 
  1928  0116                     	;# 
  1929  0117                     	;# 
  1930  0118                     	;# 
  1931  0119                     	;# 
  1932  011C                     	;# 
  1933  018C                     	;# 
  1934  018D                     	;# 
  1935  018E                     	;# 
  1936  0191                     	;# 
  1937  0191                     	;# 
  1938  0192                     	;# 
  1939  0193                     	;# 
  1940  0193                     	;# 
  1941  0194                     	;# 
  1942  0195                     	;# 
  1943  0196                     	;# 
  1944  0197                     	;# 
  1945  0199                     	;# 
  1946  0199                     	;# 
  1947  0199                     	;# 
  1948  019A                     	;# 
  1949  019A                     	;# 
  1950  019A                     	;# 
  1951  019B                     	;# 
  1952  019B                     	;# 
  1953  019B                     	;# 
  1954  019B                     	;# 
  1955  019B                     	;# 
  1956  019C                     	;# 
  1957  019C                     	;# 
  1958  019C                     	;# 
  1959  019D                     	;# 
  1960  019D                     	;# 
  1961  019D                     	;# 
  1962  019E                     	;# 
  1963  019E                     	;# 
  1964  019E                     	;# 
  1965  019F                     	;# 
  1966  019F                     	;# 
  1967  019F                     	;# 
  1968  019F                     	;# 
  1969  019F                     	;# 
  1970  020C                     	;# 
  1971  020D                     	;# 
  1972  020E                     	;# 
  1973  0211                     	;# 
  1974  0211                     	;# 
  1975  0212                     	;# 
  1976  0212                     	;# 
  1977  0213                     	;# 
  1978  0213                     	;# 
  1979  0214                     	;# 
  1980  0214                     	;# 
  1981  0215                     	;# 
  1982  0215                     	;# 
  1983  0215                     	;# 
  1984  0215                     	;# 
  1985  0216                     	;# 
  1986  0216                     	;# 
  1987  0217                     	;# 
  1988  0217                     	;# 
  1989  028C                     	;# 
  1990  028D                     	;# 
  1991  028E                     	;# 
  1992  0291                     	;# 
  1993  0291                     	;# 
  1994  0292                     	;# 
  1995  0293                     	;# 
  1996  0294                     	;# 
  1997  0298                     	;# 
  1998  0298                     	;# 
  1999  0299                     	;# 
  2000  029A                     	;# 
  2001  029B                     	;# 
  2002  029E                     	;# 
  2003  030C                     	;# 
  2004  030D                     	;# 
  2005  030E                     	;# 
  2006  038C                     	;# 
  2007  038D                     	;# 
  2008  038E                     	;# 
  2009  0391                     	;# 
  2010  0392                     	;# 
  2011  0393                     	;# 
  2012  0394                     	;# 
  2013  0395                     	;# 
  2014  0396                     	;# 
  2015  0397                     	;# 
  2016  0398                     	;# 
  2017  0399                     	;# 
  2018  040E                     	;# 
  2019  0413                     	;# 
  2020  0413                     	;# 
  2021  0414                     	;# 
  2022  0414                     	;# 
  2023  0415                     	;# 
  2024  0416                     	;# 
  2025  0417                     	;# 
  2026  0418                     	;# 
  2027  041A                     	;# 
  2028  041A                     	;# 
  2029  041B                     	;# 
  2030  041B                     	;# 
  2031  041C                     	;# 
  2032  041D                     	;# 
  2033  041E                     	;# 
  2034  041F                     	;# 
  2035  0493                     	;# 
  2036  0494                     	;# 
  2037  0495                     	;# 
  2038  0496                     	;# 
  2039  049A                     	;# 
  2040  049B                     	;# 
  2041  049C                     	;# 
  2042  049D                     	;# 
  2043  058C                     	;# 
  2044  058C                     	;# 
  2045  058D                     	;# 
  2046  058E                     	;# 
  2047  058E                     	;# 
  2048  058F                     	;# 
  2049  0590                     	;# 
  2050  0590                     	;# 
  2051  0591                     	;# 
  2052  0592                     	;# 
  2053  0592                     	;# 
  2054  0593                     	;# 
  2055  0594                     	;# 
  2056  0594                     	;# 
  2057  0595                     	;# 
  2058  0596                     	;# 
  2059  0596                     	;# 
  2060  0597                     	;# 
  2061  0598                     	;# 
  2062  0599                     	;# 
  2063  059A                     	;# 
  2064  059B                     	;# 
  2065  059B                     	;# 
  2066  059C                     	;# 
  2067  059D                     	;# 
  2068  060C                     	;# 
  2069  060C                     	;# 
  2070  060D                     	;# 
  2071  060E                     	;# 
  2072  060F                     	;# 
  2073  060F                     	;# 
  2074  0610                     	;# 
  2075  0611                     	;# 
  2076  0612                     	;# 
  2077  0613                     	;# 
  2078  0614                     	;# 
  2079  0617                     	;# 
  2080  0617                     	;# 
  2081  0618                     	;# 
  2082  0619                     	;# 
  2083  061A                     	;# 
  2084  061A                     	;# 
  2085  061B                     	;# 
  2086  061C                     	;# 
  2087  0691                     	;# 
  2088  0692                     	;# 
  2089  0693                     	;# 
  2090  0694                     	;# 
  2091  0695                     	;# 
  2092  0696                     	;# 
  2093  0697                     	;# 
  2094  0699                     	;# 
  2095  069A                     	;# 
  2096  0711                     	;# 
  2097  0712                     	;# 
  2098  0713                     	;# 
  2099  0714                     	;# 
  2100  0715                     	;# 
  2101  0718                     	;# 
  2102  0718                     	;# 
  2103  0719                     	;# 
  2104  071A                     	;# 
  2105  071A                     	;# 
  2106  071B                     	;# 
  2107  071C                     	;# 
  2108  071D                     	;# 
  2109  0791                     	;# 
  2110  0791                     	;# 
  2111  0792                     	;# 
  2112  0793                     	;# 
  2113  0793                     	;# 
  2114  0794                     	;# 
  2115  0795                     	;# 
  2116  0795                     	;# 
  2117  0796                     	;# 
  2118  0797                     	;# 
  2119  0797                     	;# 
  2120  0798                     	;# 
  2121  0799                     	;# 
  2122  079A                     	;# 
  2123  080C                     	;# 
  2124  080C                     	;# 
  2125  080D                     	;# 
  2126  080E                     	;# 
  2127  080E                     	;# 
  2128  080F                     	;# 
  2129  0810                     	;# 
  2130  0810                     	;# 
  2131  0811                     	;# 
  2132  0812                     	;# 
  2133  0812                     	;# 
  2134  0813                     	;# 
  2135  0814                     	;# 
  2136  0815                     	;# 
  2137  0816                     	;# 
  2138  0817                     	;# 
  2139  0818                     	;# 
  2140  0819                     	;# 
  2141  081A                     	;# 
  2142  081A                     	;# 
  2143  081B                     	;# 
  2144  081C                     	;# 
  2145  081C                     	;# 
  2146  081D                     	;# 
  2147  088C                     	;# 
  2148  088D                     	;# 
  2149  088E                     	;# 
  2150  088F                     	;# 
  2151  088F                     	;# 
  2152  0890                     	;# 
  2153  0891                     	;# 
  2154  0892                     	;# 
  2155  0893                     	;# 
  2156  0893                     	;# 
  2157  0894                     	;# 
  2158  0895                     	;# 
  2159  0896                     	;# 
  2160  0897                     	;# 
  2161  0897                     	;# 
  2162  0898                     	;# 
  2163  0899                     	;# 
  2164  0D8C                     	;# 
  2165  0D8C                     	;# 
  2166  0D8D                     	;# 
  2167  0D8E                     	;# 
  2168  0D8F                     	;# 
  2169  0D8F                     	;# 
  2170  0D90                     	;# 
  2171  0D91                     	;# 
  2172  0D92                     	;# 
  2173  0D92                     	;# 
  2174  0D93                     	;# 
  2175  0D94                     	;# 
  2176  0D95                     	;# 
  2177  0D95                     	;# 
  2178  0D96                     	;# 
  2179  0D97                     	;# 
  2180  0D98                     	;# 
  2181  0D99                     	;# 
  2182  0D9A                     	;# 
  2183  0D9B                     	;# 
  2184  0D9C                     	;# 
  2185  0D9D                     	;# 
  2186  0D9E                     	;# 
  2187  0D9E                     	;# 
  2188  0D9F                     	;# 
  2189  0DA0                     	;# 
  2190  0DA1                     	;# 
  2191  0DA1                     	;# 
  2192  0DA2                     	;# 
  2193  0DA3                     	;# 
  2194  0DA4                     	;# 
  2195  0DA4                     	;# 
  2196  0DA5                     	;# 
  2197  0DA6                     	;# 
  2198  0DA7                     	;# 
  2199  0DA7                     	;# 
  2200  0DA8                     	;# 
  2201  0DA9                     	;# 
  2202  0DAA                     	;# 
  2203  0DAB                     	;# 
  2204  0DAC                     	;# 
  2205  0DAD                     	;# 
  2206  0DAE                     	;# 
  2207  0DAF                     	;# 
  2208  0E0F                     	;# 
  2209  0E10                     	;# 
  2210  0E11                     	;# 
  2211  0E12                     	;# 
  2212  0E13                     	;# 
  2213  0E14                     	;# 
  2214  0E15                     	;# 
  2215  0E16                     	;# 
  2216  0E17                     	;# 
  2217  0E18                     	;# 
  2218  0E19                     	;# 
  2219  0E1A                     	;# 
  2220  0E1B                     	;# 
  2221  0E1C                     	;# 
  2222  0E1D                     	;# 
  2223  0E1E                     	;# 
  2224  0E1F                     	;# 
  2225  0E20                     	;# 
  2226  0E21                     	;# 
  2227  0E22                     	;# 
  2228  0E23                     	;# 
  2229  0E24                     	;# 
  2230  0E25                     	;# 
  2231  0E26                     	;# 
  2232  0E27                     	;# 
  2233  0E28                     	;# 
  2234  0E29                     	;# 
  2235  0E2A                     	;# 
  2236  0E2B                     	;# 
  2237  0E2C                     	;# 
  2238  0E2D                     	;# 
  2239  0E2E                     	;# 
  2240  0E90                     	;# 
  2241  0E91                     	;# 
  2242  0E92                     	;# 
  2243  0E94                     	;# 
  2244  0E95                     	;# 
  2245  0E9C                     	;# 
  2246  0E9D                     	;# 
  2247  0E9E                     	;# 
  2248  0E9F                     	;# 
  2249  0EA0                     	;# 
  2250  0EA1                     	;# 
  2251  0EA2                     	;# 
  2252  0EA3                     	;# 
  2253  0EA4                     	;# 
  2254  0EA5                     	;# 
  2255  0EA6                     	;# 
  2256  0EA7                     	;# 
  2257  0F0F                     	;# 
  2258  0F10                     	;# 
  2259  0F11                     	;# 
  2260  0F12                     	;# 
  2261  0F13                     	;# 
  2262  0F14                     	;# 
  2263  0F15                     	;# 
  2264  0F16                     	;# 
  2265  0F17                     	;# 
  2266  0F18                     	;# 
  2267  0F19                     	;# 
  2268  0F1A                     	;# 
  2269  0F1B                     	;# 
  2270  0F1C                     	;# 
  2271  0F1D                     	;# 
  2272  0F1E                     	;# 
  2273  0F1F                     	;# 
  2274  0F20                     	;# 
  2275  0F21                     	;# 
  2276  0F22                     	;# 
  2277  0F23                     	;# 
  2278  0F24                     	;# 
  2279  0F25                     	;# 
  2280  0F26                     	;# 
  2281  0F27                     	;# 
  2282  0F28                     	;# 
  2283  0F29                     	;# 
  2284  0F2A                     	;# 
  2285  0F2B                     	;# 
  2286  0F2C                     	;# 
  2287  0F2D                     	;# 
  2288  0F2E                     	;# 
  2289  0F2F                     	;# 
  2290  0F30                     	;# 
  2291  0F31                     	;# 
  2292  0F32                     	;# 
  2293  0F33                     	;# 
  2294  0F34                     	;# 
  2295  0F35                     	;# 
  2296  0F36                     	;# 
  2297  0F37                     	;# 
  2298  0FE4                     	;# 
  2299  0FE5                     	;# 
  2300  0FE6                     	;# 
  2301  0FE7                     	;# 
  2302  0FE8                     	;# 
  2303  0FE9                     	;# 
  2304  0FEA                     	;# 
  2305  0FEB                     	;# 
  2306  0FED                     	;# 
  2307  0FEE                     	;# 
  2308  0FEF                     	;# 
  2309  0000                     	;# 
  2310  0001                     	;# 
  2311  0002                     	;# 
  2312  0003                     	;# 
  2313  0004                     	;# 
  2314  0005                     	;# 
  2315  0006                     	;# 
  2316  0007                     	;# 
  2317  0008                     	;# 
  2318  0009                     	;# 
  2319  000A                     	;# 
  2320  000B                     	;# 
  2321  000C                     	;# 
  2322  000D                     	;# 
  2323  000E                     	;# 
  2324  0010                     	;# 
  2325  0011                     	;# 
  2326  0012                     	;# 
  2327  0013                     	;# 
  2328  0014                     	;# 
  2329  0015                     	;# 
  2330  0016                     	;# 
  2331  0016                     	;# 
  2332  0017                     	;# 
  2333  0018                     	;# 
  2334  0019                     	;# 
  2335  001A                     	;# 
  2336  001A                     	;# 
  2337  001B                     	;# 
  2338  001B                     	;# 
  2339  001C                     	;# 
  2340  001D                     	;# 
  2341  001E                     	;# 
  2342  001F                     	;# 
  2343  008C                     	;# 
  2344  008D                     	;# 
  2345  008E                     	;# 
  2346  0090                     	;# 
  2347  0091                     	;# 
  2348  0092                     	;# 
  2349  0093                     	;# 
  2350  0094                     	;# 
  2351  0095                     	;# 
  2352  0096                     	;# 
  2353  0098                     	;# 
  2354  0099                     	;# 
  2355  009A                     	;# 
  2356  009B                     	;# 
  2357  009B                     	;# 
  2358  009C                     	;# 
  2359  009D                     	;# 
  2360  009E                     	;# 
  2361  009F                     	;# 
  2362  010C                     	;# 
  2363  010D                     	;# 
  2364  010E                     	;# 
  2365  0111                     	;# 
  2366  0112                     	;# 
  2367  0113                     	;# 
  2368  0114                     	;# 
  2369  0115                     	;# 
  2370  0116                     	;# 
  2371  0117                     	;# 
  2372  0118                     	;# 
  2373  0119                     	;# 
  2374  011C                     	;# 
  2375  018C                     	;# 
  2376  018D                     	;# 
  2377  018E                     	;# 
  2378  0191                     	;# 
  2379  0191                     	;# 
  2380  0192                     	;# 
  2381  0193                     	;# 
  2382  0193                     	;# 
  2383  0194                     	;# 
  2384  0195                     	;# 
  2385  0196                     	;# 
  2386  0197                     	;# 
  2387  0199                     	;# 
  2388  0199                     	;# 
  2389  0199                     	;# 
  2390  019A                     	;# 
  2391  019A                     	;# 
  2392  019A                     	;# 
  2393  019B                     	;# 
  2394  019B                     	;# 
  2395  019B                     	;# 
  2396  019B                     	;# 
  2397  019B                     	;# 
  2398  019C                     	;# 
  2399  019C                     	;# 
  2400  019C                     	;# 
  2401  019D                     	;# 
  2402  019D                     	;# 
  2403  019D                     	;# 
  2404  019E                     	;# 
  2405  019E                     	;# 
  2406  019E                     	;# 
  2407  019F                     	;# 
  2408  019F                     	;# 
  2409  019F                     	;# 
  2410  019F                     	;# 
  2411  019F                     	;# 
  2412  020C                     	;# 
  2413  020D                     	;# 
  2414  020E                     	;# 
  2415  0211                     	;# 
  2416  0211                     	;# 
  2417  0212                     	;# 
  2418  0212                     	;# 
  2419  0213                     	;# 
  2420  0213                     	;# 
  2421  0214                     	;# 
  2422  0214                     	;# 
  2423  0215                     	;# 
  2424  0215                     	;# 
  2425  0215                     	;# 
  2426  0215                     	;# 
  2427  0216                     	;# 
  2428  0216                     	;# 
  2429  0217                     	;# 
  2430  0217                     	;# 
  2431  028C                     	;# 
  2432  028D                     	;# 
  2433  028E                     	;# 
  2434  0291                     	;# 
  2435  0291                     	;# 
  2436  0292                     	;# 
  2437  0293                     	;# 
  2438  0294                     	;# 
  2439  0298                     	;# 
  2440  0298                     	;# 
  2441  0299                     	;# 
  2442  029A                     	;# 
  2443  029B                     	;# 
  2444  029E                     	;# 
  2445  030C                     	;# 
  2446  030D                     	;# 
  2447  030E                     	;# 
  2448  038C                     	;# 
  2449  038D                     	;# 
  2450  038E                     	;# 
  2451  0391                     	;# 
  2452  0392                     	;# 
  2453  0393                     	;# 
  2454  0394                     	;# 
  2455  0395                     	;# 
  2456  0396                     	;# 
  2457  0397                     	;# 
  2458  0398                     	;# 
  2459  0399                     	;# 
  2460  040E                     	;# 
  2461  0413                     	;# 
  2462  0413                     	;# 
  2463  0414                     	;# 
  2464  0414                     	;# 
  2465  0415                     	;# 
  2466  0416                     	;# 
  2467  0417                     	;# 
  2468  0418                     	;# 
  2469  041A                     	;# 
  2470  041A                     	;# 
  2471  041B                     	;# 
  2472  041B                     	;# 
  2473  041C                     	;# 
  2474  041D                     	;# 
  2475  041E                     	;# 
  2476  041F                     	;# 
  2477  0493                     	;# 
  2478  0494                     	;# 
  2479  0495                     	;# 
  2480  0496                     	;# 
  2481  049A                     	;# 
  2482  049B                     	;# 
  2483  049C                     	;# 
  2484  049D                     	;# 
  2485  058C                     	;# 
  2486  058C                     	;# 
  2487  058D                     	;# 
  2488  058E                     	;# 
  2489  058E                     	;# 
  2490  058F                     	;# 
  2491  0590                     	;# 
  2492  0590                     	;# 
  2493  0591                     	;# 
  2494  0592                     	;# 
  2495  0592                     	;# 
  2496  0593                     	;# 
  2497  0594                     	;# 
  2498  0594                     	;# 
  2499  0595                     	;# 
  2500  0596                     	;# 
  2501  0596                     	;# 
  2502  0597                     	;# 
  2503  0598                     	;# 
  2504  0599                     	;# 
  2505  059A                     	;# 
  2506  059B                     	;# 
  2507  059B                     	;# 
  2508  059C                     	;# 
  2509  059D                     	;# 
  2510  060C                     	;# 
  2511  060C                     	;# 
  2512  060D                     	;# 
  2513  060E                     	;# 
  2514  060F                     	;# 
  2515  060F                     	;# 
  2516  0610                     	;# 
  2517  0611                     	;# 
  2518  0612                     	;# 
  2519  0613                     	;# 
  2520  0614                     	;# 
  2521  0617                     	;# 
  2522  0617                     	;# 
  2523  0618                     	;# 
  2524  0619                     	;# 
  2525  061A                     	;# 
  2526  061A                     	;# 
  2527  061B                     	;# 
  2528  061C                     	;# 
  2529  0691                     	;# 
  2530  0692                     	;# 
  2531  0693                     	;# 
  2532  0694                     	;# 
  2533  0695                     	;# 
  2534  0696                     	;# 
  2535  0697                     	;# 
  2536  0699                     	;# 
  2537  069A                     	;# 
  2538  0711                     	;# 
  2539  0712                     	;# 
  2540  0713                     	;# 
  2541  0714                     	;# 
  2542  0715                     	;# 
  2543  0718                     	;# 
  2544  0718                     	;# 
  2545  0719                     	;# 
  2546  071A                     	;# 
  2547  071A                     	;# 
  2548  071B                     	;# 
  2549  071C                     	;# 
  2550  071D                     	;# 
  2551  0791                     	;# 
  2552  0791                     	;# 
  2553  0792                     	;# 
  2554  0793                     	;# 
  2555  0793                     	;# 
  2556  0794                     	;# 
  2557  0795                     	;# 
  2558  0795                     	;# 
  2559  0796                     	;# 
  2560  0797                     	;# 
  2561  0797                     	;# 
  2562  0798                     	;# 
  2563  0799                     	;# 
  2564  079A                     	;# 
  2565  080C                     	;# 
  2566  080C                     	;# 
  2567  080D                     	;# 
  2568  080E                     	;# 
  2569  080E                     	;# 
  2570  080F                     	;# 
  2571  0810                     	;# 
  2572  0810                     	;# 
  2573  0811                     	;# 
  2574  0812                     	;# 
  2575  0812                     	;# 
  2576  0813                     	;# 
  2577  0814                     	;# 
  2578  0815                     	;# 
  2579  0816                     	;# 
  2580  0817                     	;# 
  2581  0818                     	;# 
  2582  0819                     	;# 
  2583  081A                     	;# 
  2584  081A                     	;# 
  2585  081B                     	;# 
  2586  081C                     	;# 
  2587  081C                     	;# 
  2588  081D                     	;# 
  2589  088C                     	;# 
  2590  088D                     	;# 
  2591  088E                     	;# 
  2592  088F                     	;# 
  2593  088F                     	;# 
  2594  0890                     	;# 
  2595  0891                     	;# 
  2596  0892                     	;# 
  2597  0893                     	;# 
  2598  0893                     	;# 
  2599  0894                     	;# 
  2600  0895                     	;# 
  2601  0896                     	;# 
  2602  0897                     	;# 
  2603  0897                     	;# 
  2604  0898                     	;# 
  2605  0899                     	;# 
  2606  0D8C                     	;# 
  2607  0D8C                     	;# 
  2608  0D8D                     	;# 
  2609  0D8E                     	;# 
  2610  0D8F                     	;# 
  2611  0D8F                     	;# 
  2612  0D90                     	;# 
  2613  0D91                     	;# 
  2614  0D92                     	;# 
  2615  0D92                     	;# 
  2616  0D93                     	;# 
  2617  0D94                     	;# 
  2618  0D95                     	;# 
  2619  0D95                     	;# 
  2620  0D96                     	;# 
  2621  0D97                     	;# 
  2622  0D98                     	;# 
  2623  0D99                     	;# 
  2624  0D9A                     	;# 
  2625  0D9B                     	;# 
  2626  0D9C                     	;# 
  2627  0D9D                     	;# 
  2628  0D9E                     	;# 
  2629  0D9E                     	;# 
  2630  0D9F                     	;# 
  2631  0DA0                     	;# 
  2632  0DA1                     	;# 
  2633  0DA1                     	;# 
  2634  0DA2                     	;# 
  2635  0DA3                     	;# 
  2636  0DA4                     	;# 
  2637  0DA4                     	;# 
  2638  0DA5                     	;# 
  2639  0DA6                     	;# 
  2640  0DA7                     	;# 
  2641  0DA7                     	;# 
  2642  0DA8                     	;# 
  2643  0DA9                     	;# 
  2644  0DAA                     	;# 
  2645  0DAB                     	;# 
  2646  0DAC                     	;# 
  2647  0DAD                     	;# 
  2648  0DAE                     	;# 
  2649  0DAF                     	;# 
  2650  0E0F                     	;# 
  2651  0E10                     	;# 
  2652  0E11                     	;# 
  2653  0E12                     	;# 
  2654  0E13                     	;# 
  2655  0E14                     	;# 
  2656  0E15                     	;# 
  2657  0E16                     	;# 
  2658  0E17                     	;# 
  2659  0E18                     	;# 
  2660  0E19                     	;# 
  2661  0E1A                     	;# 
  2662  0E1B                     	;# 
  2663  0E1C                     	;# 
  2664  0E1D                     	;# 
  2665  0E1E                     	;# 
  2666  0E1F                     	;# 
  2667  0E20                     	;# 
  2668  0E21                     	;# 
  2669  0E22                     	;# 
  2670  0E23                     	;# 
  2671  0E24                     	;# 
  2672  0E25                     	;# 
  2673  0E26                     	;# 
  2674  0E27                     	;# 
  2675  0E28                     	;# 
  2676  0E29                     	;# 
  2677  0E2A                     	;# 
  2678  0E2B                     	;# 
  2679  0E2C                     	;# 
  2680  0E2D                     	;# 
  2681  0E2E                     	;# 
  2682  0E90                     	;# 
  2683  0E91                     	;# 
  2684  0E92                     	;# 
  2685  0E94                     	;# 
  2686  0E95                     	;# 
  2687  0E9C                     	;# 
  2688  0E9D                     	;# 
  2689  0E9E                     	;# 
  2690  0E9F                     	;# 
  2691  0EA0                     	;# 
  2692  0EA1                     	;# 
  2693  0EA2                     	;# 
  2694  0EA3                     	;# 
  2695  0EA4                     	;# 
  2696  0EA5                     	;# 
  2697  0EA6                     	;# 
  2698  0EA7                     	;# 
  2699  0F0F                     	;# 
  2700  0F10                     	;# 
  2701  0F11                     	;# 
  2702  0F12                     	;# 
  2703  0F13                     	;# 
  2704  0F14                     	;# 
  2705  0F15                     	;# 
  2706  0F16                     	;# 
  2707  0F17                     	;# 
  2708  0F18                     	;# 
  2709  0F19                     	;# 
  2710  0F1A                     	;# 
  2711  0F1B                     	;# 
  2712  0F1C                     	;# 
  2713  0F1D                     	;# 
  2714  0F1E                     	;# 
  2715  0F1F                     	;# 
  2716  0F20                     	;# 
  2717  0F21                     	;# 
  2718  0F22                     	;# 
  2719  0F23                     	;# 
  2720  0F24                     	;# 
  2721  0F25                     	;# 
  2722  0F26                     	;# 
  2723  0F27                     	;# 
  2724  0F28                     	;# 
  2725  0F29                     	;# 
  2726  0F2A                     	;# 
  2727  0F2B                     	;# 
  2728  0F2C                     	;# 
  2729  0F2D                     	;# 
  2730  0F2E                     	;# 
  2731  0F2F                     	;# 
  2732  0F30                     	;# 
  2733  0F31                     	;# 
  2734  0F32                     	;# 
  2735  0F33                     	;# 
  2736  0F34                     	;# 
  2737  0F35                     	;# 
  2738  0F36                     	;# 
  2739  0F37                     	;# 
  2740  0FE4                     	;# 
  2741  0FE5                     	;# 
  2742  0FE6                     	;# 
  2743  0FE7                     	;# 
  2744  0FE8                     	;# 
  2745  0FE9                     	;# 
  2746  0FEA                     	;# 
  2747  0FEB                     	;# 
  2748  0FED                     	;# 
  2749  0FEE                     	;# 
  2750  0FEF                     	;# 
  2751  0000                     	;# 
  2752  0001                     	;# 
  2753  0002                     	;# 
  2754  0003                     	;# 
  2755  0004                     	;# 
  2756  0005                     	;# 
  2757  0006                     	;# 
  2758  0007                     	;# 
  2759  0008                     	;# 
  2760  0009                     	;# 
  2761  000A                     	;# 
  2762  000B                     	;# 
  2763  000C                     	;# 
  2764  000D                     	;# 
  2765  000E                     	;# 
  2766  0010                     	;# 
  2767  0011                     	;# 
  2768  0012                     	;# 
  2769  0013                     	;# 
  2770  0014                     	;# 
  2771  0015                     	;# 
  2772  0016                     	;# 
  2773  0016                     	;# 
  2774  0017                     	;# 
  2775  0018                     	;# 
  2776  0019                     	;# 
  2777  001A                     	;# 
  2778  001A                     	;# 
  2779  001B                     	;# 
  2780  001B                     	;# 
  2781  001C                     	;# 
  2782  001D                     	;# 
  2783  001E                     	;# 
  2784  001F                     	;# 
  2785  008C                     	;# 
  2786  008D                     	;# 
  2787  008E                     	;# 
  2788  0090                     	;# 
  2789  0091                     	;# 
  2790  0092                     	;# 
  2791  0093                     	;# 
  2792  0094                     	;# 
  2793  0095                     	;# 
  2794  0096                     	;# 
  2795  0098                     	;# 
  2796  0099                     	;# 
  2797  009A                     	;# 
  2798  009B                     	;# 
  2799  009B                     	;# 
  2800  009C                     	;# 
  2801  009D                     	;# 
  2802  009E                     	;# 
  2803  009F                     	;# 
  2804  010C                     	;# 
  2805  010D                     	;# 
  2806  010E                     	;# 
  2807  0111                     	;# 
  2808  0112                     	;# 
  2809  0113                     	;# 
  2810  0114                     	;# 
  2811  0115                     	;# 
  2812  0116                     	;# 
  2813  0117                     	;# 
  2814  0118                     	;# 
  2815  0119                     	;# 
  2816  011C                     	;# 
  2817  018C                     	;# 
  2818  018D                     	;# 
  2819  018E                     	;# 
  2820  0191                     	;# 
  2821  0191                     	;# 
  2822  0192                     	;# 
  2823  0193                     	;# 
  2824  0193                     	;# 
  2825  0194                     	;# 
  2826  0195                     	;# 
  2827  0196                     	;# 
  2828  0197                     	;# 
  2829  0199                     	;# 
  2830  0199                     	;# 
  2831  0199                     	;# 
  2832  019A                     	;# 
  2833  019A                     	;# 
  2834  019A                     	;# 
  2835  019B                     	;# 
  2836  019B                     	;# 
  2837  019B                     	;# 
  2838  019B                     	;# 
  2839  019B                     	;# 
  2840  019C                     	;# 
  2841  019C                     	;# 
  2842  019C                     	;# 
  2843  019D                     	;# 
  2844  019D                     	;# 
  2845  019D                     	;# 
  2846  019E                     	;# 
  2847  019E                     	;# 
  2848  019E                     	;# 
  2849  019F                     	;# 
  2850  019F                     	;# 
  2851  019F                     	;# 
  2852  019F                     	;# 
  2853  019F                     	;# 
  2854  020C                     	;# 
  2855  020D                     	;# 
  2856  020E                     	;# 
  2857  0211                     	;# 
  2858  0211                     	;# 
  2859  0212                     	;# 
  2860  0212                     	;# 
  2861  0213                     	;# 
  2862  0213                     	;# 
  2863  0214                     	;# 
  2864  0214                     	;# 
  2865  0215                     	;# 
  2866  0215                     	;# 
  2867  0215                     	;# 
  2868  0215                     	;# 
  2869  0216                     	;# 
  2870  0216                     	;# 
  2871  0217                     	;# 
  2872  0217                     	;# 
  2873  028C                     	;# 
  2874  028D                     	;# 
  2875  028E                     	;# 
  2876  0291                     	;# 
  2877  0291                     	;# 
  2878  0292                     	;# 
  2879  0293                     	;# 
  2880  0294                     	;# 
  2881  0298                     	;# 
  2882  0298                     	;# 
  2883  0299                     	;# 
  2884  029A                     	;# 
  2885  029B                     	;# 
  2886  029E                     	;# 
  2887  030C                     	;# 
  2888  030D                     	;# 
  2889  030E                     	;# 
  2890  038C                     	;# 
  2891  038D                     	;# 
  2892  038E                     	;# 
  2893  0391                     	;# 
  2894  0392                     	;# 
  2895  0393                     	;# 
  2896  0394                     	;# 
  2897  0395                     	;# 
  2898  0396                     	;# 
  2899  0397                     	;# 
  2900  0398                     	;# 
  2901  0399                     	;# 
  2902  040E                     	;# 
  2903  0413                     	;# 
  2904  0413                     	;# 
  2905  0414                     	;# 
  2906  0414                     	;# 
  2907  0415                     	;# 
  2908  0416                     	;# 
  2909  0417                     	;# 
  2910  0418                     	;# 
  2911  041A                     	;# 
  2912  041A                     	;# 
  2913  041B                     	;# 
  2914  041B                     	;# 
  2915  041C                     	;# 
  2916  041D                     	;# 
  2917  041E                     	;# 
  2918  041F                     	;# 
  2919  0493                     	;# 
  2920  0494                     	;# 
  2921  0495                     	;# 
  2922  0496                     	;# 
  2923  049A                     	;# 
  2924  049B                     	;# 
  2925  049C                     	;# 
  2926  049D                     	;# 
  2927  058C                     	;# 
  2928  058C                     	;# 
  2929  058D                     	;# 
  2930  058E                     	;# 
  2931  058E                     	;# 
  2932  058F                     	;# 
  2933  0590                     	;# 
  2934  0590                     	;# 
  2935  0591                     	;# 
  2936  0592                     	;# 
  2937  0592                     	;# 
  2938  0593                     	;# 
  2939  0594                     	;# 
  2940  0594                     	;# 
  2941  0595                     	;# 
  2942  0596                     	;# 
  2943  0596                     	;# 
  2944  0597                     	;# 
  2945  0598                     	;# 
  2946  0599                     	;# 
  2947  059A                     	;# 
  2948  059B                     	;# 
  2949  059B                     	;# 
  2950  059C                     	;# 
  2951  059D                     	;# 
  2952  060C                     	;# 
  2953  060C                     	;# 
  2954  060D                     	;# 
  2955  060E                     	;# 
  2956  060F                     	;# 
  2957  060F                     	;# 
  2958  0610                     	;# 
  2959  0611                     	;# 
  2960  0612                     	;# 
  2961  0613                     	;# 
  2962  0614                     	;# 
  2963  0617                     	;# 
  2964  0617                     	;# 
  2965  0618                     	;# 
  2966  0619                     	;# 
  2967  061A                     	;# 
  2968  061A                     	;# 
  2969  061B                     	;# 
  2970  061C                     	;# 
  2971  0691                     	;# 
  2972  0692                     	;# 
  2973  0693                     	;# 
  2974  0694                     	;# 
  2975  0695                     	;# 
  2976  0696                     	;# 
  2977  0697                     	;# 
  2978  0699                     	;# 
  2979  069A                     	;# 
  2980  0711                     	;# 
  2981  0712                     	;# 
  2982  0713                     	;# 
  2983  0714                     	;# 
  2984  0715                     	;# 
  2985  0718                     	;# 
  2986  0718                     	;# 
  2987  0719                     	;# 
  2988  071A                     	;# 
  2989  071A                     	;# 
  2990  071B                     	;# 
  2991  071C                     	;# 
  2992  071D                     	;# 
  2993  0791                     	;# 
  2994  0791                     	;# 
  2995  0792                     	;# 
  2996  0793                     	;# 
  2997  0793                     	;# 
  2998  0794                     	;# 
  2999  0795                     	;# 
  3000  0795                     	;# 
  3001  0796                     	;# 
  3002  0797                     	;# 
  3003  0797                     	;# 
  3004  0798                     	;# 
  3005  0799                     	;# 
  3006  079A                     	;# 
  3007  080C                     	;# 
  3008  080C                     	;# 
  3009  080D                     	;# 
  3010  080E                     	;# 
  3011  080E                     	;# 
  3012  080F                     	;# 
  3013  0810                     	;# 
  3014  0810                     	;# 
  3015  0811                     	;# 
  3016  0812                     	;# 
  3017  0812                     	;# 
  3018  0813                     	;# 
  3019  0814                     	;# 
  3020  0815                     	;# 
  3021  0816                     	;# 
  3022  0817                     	;# 
  3023  0818                     	;# 
  3024  0819                     	;# 
  3025  081A                     	;# 
  3026  081A                     	;# 
  3027  081B                     	;# 
  3028  081C                     	;# 
  3029  081C                     	;# 
  3030  081D                     	;# 
  3031  088C                     	;# 
  3032  088D                     	;# 
  3033  088E                     	;# 
  3034  088F                     	;# 
  3035  088F                     	;# 
  3036  0890                     	;# 
  3037  0891                     	;# 
  3038  0892                     	;# 
  3039  0893                     	;# 
  3040  0893                     	;# 
  3041  0894                     	;# 
  3042  0895                     	;# 
  3043  0896                     	;# 
  3044  0897                     	;# 
  3045  0897                     	;# 
  3046  0898                     	;# 
  3047  0899                     	;# 
  3048  0D8C                     	;# 
  3049  0D8C                     	;# 
  3050  0D8D                     	;# 
  3051  0D8E                     	;# 
  3052  0D8F                     	;# 
  3053  0D8F                     	;# 
  3054  0D90                     	;# 
  3055  0D91                     	;# 
  3056  0D92                     	;# 
  3057  0D92                     	;# 
  3058  0D93                     	;# 
  3059  0D94                     	;# 
  3060  0D95                     	;# 
  3061  0D95                     	;# 
  3062  0D96                     	;# 
  3063  0D97                     	;# 
  3064  0D98                     	;# 
  3065  0D99                     	;# 
  3066  0D9A                     	;# 
  3067  0D9B                     	;# 
  3068  0D9C                     	;# 
  3069  0D9D                     	;# 
  3070  0D9E                     	;# 
  3071  0D9E                     	;# 
  3072  0D9F                     	;# 
  3073  0DA0                     	;# 
  3074  0DA1                     	;# 
  3075  0DA1                     	;# 
  3076  0DA2                     	;# 
  3077  0DA3                     	;# 
  3078  0DA4                     	;# 
  3079  0DA4                     	;# 
  3080  0DA5                     	;# 
  3081  0DA6                     	;# 
  3082  0DA7                     	;# 
  3083  0DA7                     	;# 
  3084  0DA8                     	;# 
  3085  0DA9                     	;# 
  3086  0DAA                     	;# 
  3087  0DAB                     	;# 
  3088  0DAC                     	;# 
  3089  0DAD                     	;# 
  3090  0DAE                     	;# 
  3091  0DAF                     	;# 
  3092  0E0F                     	;# 
  3093  0E10                     	;# 
  3094  0E11                     	;# 
  3095  0E12                     	;# 
  3096  0E13                     	;# 
  3097  0E14                     	;# 
  3098  0E15                     	;# 
  3099  0E16                     	;# 
  3100  0E17                     	;# 
  3101  0E18                     	;# 
  3102  0E19                     	;# 
  3103  0E1A                     	;# 
  3104  0E1B                     	;# 
  3105  0E1C                     	;# 
  3106  0E1D                     	;# 
  3107  0E1E                     	;# 
  3108  0E1F                     	;# 
  3109  0E20                     	;# 
  3110  0E21                     	;# 
  3111  0E22                     	;# 
  3112  0E23                     	;# 
  3113  0E24                     	;# 
  3114  0E25                     	;# 
  3115  0E26                     	;# 
  3116  0E27                     	;# 
  3117  0E28                     	;# 
  3118  0E29                     	;# 
  3119  0E2A                     	;# 
  3120  0E2B                     	;# 
  3121  0E2C                     	;# 
  3122  0E2D                     	;# 
  3123  0E2E                     	;# 
  3124  0E90                     	;# 
  3125  0E91                     	;# 
  3126  0E92                     	;# 
  3127  0E94                     	;# 
  3128  0E95                     	;# 
  3129  0E9C                     	;# 
  3130  0E9D                     	;# 
  3131  0E9E                     	;# 
  3132  0E9F                     	;# 
  3133  0EA0                     	;# 
  3134  0EA1                     	;# 
  3135  0EA2                     	;# 
  3136  0EA3                     	;# 
  3137  0EA4                     	;# 
  3138  0EA5                     	;# 
  3139  0EA6                     	;# 
  3140  0EA7                     	;# 
  3141  0F0F                     	;# 
  3142  0F10                     	;# 
  3143  0F11                     	;# 
  3144  0F12                     	;# 
  3145  0F13                     	;# 
  3146  0F14                     	;# 
  3147  0F15                     	;# 
  3148  0F16                     	;# 
  3149  0F17                     	;# 
  3150  0F18                     	;# 
  3151  0F19                     	;# 
  3152  0F1A                     	;# 
  3153  0F1B                     	;# 
  3154  0F1C                     	;# 
  3155  0F1D                     	;# 
  3156  0F1E                     	;# 
  3157  0F1F                     	;# 
  3158  0F20                     	;# 
  3159  0F21                     	;# 
  3160  0F22                     	;# 
  3161  0F23                     	;# 
  3162  0F24                     	;# 
  3163  0F25                     	;# 
  3164  0F26                     	;# 
  3165  0F27                     	;# 
  3166  0F28                     	;# 
  3167  0F29                     	;# 
  3168  0F2A                     	;# 
  3169  0F2B                     	;# 
  3170  0F2C                     	;# 
  3171  0F2D                     	;# 
  3172  0F2E                     	;# 
  3173  0F2F                     	;# 
  3174  0F30                     	;# 
  3175  0F31                     	;# 
  3176  0F32                     	;# 
  3177  0F33                     	;# 
  3178  0F34                     	;# 
  3179  0F35                     	;# 
  3180  0F36                     	;# 
  3181  0F37                     	;# 
  3182  0FE4                     	;# 
  3183  0FE5                     	;# 
  3184  0FE6                     	;# 
  3185  0FE7                     	;# 
  3186  0FE8                     	;# 
  3187  0FE9                     	;# 
  3188  0FEA                     	;# 
  3189  0FEB                     	;# 
  3190  0FED                     	;# 
  3191  0FEE                     	;# 
  3192  0FEF                     	;# 
  3193                           
  3194 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  3195  0000                     
  3196 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  3197  0000                     
  3198 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  3199  0000                     
  3200                           	psect	idataBANK2
  3201  0D53                     __pidataBANK2:	
  3202                           
  3203                           ;initializer for _hrDisp
  3204  0D53  3448               	retlw	72
  3205  0D54  3465               	retlw	101
  3206  0D55  3461               	retlw	97
  3207  0D56  3472               	retlw	114
  3208  0D57  3474               	retlw	116
  3209  0D58  3420               	retlw	32
  3210  0D59  3452               	retlw	82
  3211  0D5A  3461               	retlw	97
  3212  0D5B  3474               	retlw	116
  3213  0D5C  3465               	retlw	101
  3214  0D5D  343A               	retlw	58
  3215  0D5E  3420               	retlw	32
  3216  0D5F  3400               	retlw	0
  3217                           
  3218                           ;initializer for _distanceDisp
  3219  0D60  3444               	retlw	68
  3220  0D61  3469               	retlw	105
  3221  0D62  3473               	retlw	115
  3222  0D63  3474               	retlw	116
  3223  0D64  3461               	retlw	97
  3224  0D65  346E               	retlw	110
  3225  0D66  3463               	retlw	99
  3226  0D67  3465               	retlw	101
  3227  0D68  343A               	retlw	58
  3228  0D69  3420               	retlw	32
  3229  0D6A  3400               	retlw	0
  3230                           
  3231                           ;initializer for _speedDisp
  3232  0D6B  3453               	retlw	83
  3233  0D6C  3470               	retlw	112
  3234  0D6D  3465               	retlw	101
  3235  0D6E  3465               	retlw	101
  3236  0D6F  3464               	retlw	100
  3237  0D70  343A               	retlw	58
  3238  0D71  3420               	retlw	32
  3239  0D72  3400               	retlw	0
  3240                           
  3241                           	psect	nvBANK0
  3242  0064                     __pnvBANK0:	
  3243  0064                     _TMR0_InterruptHandler:	
  3244  0064                     	ds	2
  3245  0066                     _IOCCF7_InterruptHandler:	
  3246  0066                     	ds	2
  3247  0068                     _EUSART_ErrorHandler:	
  3248  0068                     	ds	2
  3249  006A                     _EUSART_OverrunErrorHandler:	
  3250  006A                     	ds	2
  3251  006C                     _EUSART_FramingErrorHandler:	
  3252  006C                     	ds	2
  3253  006E                     _timer0ReloadVal:	
  3254  006E                     	ds	1
  3255  0015                     _TMR0	set	21
  3256  000B                     _INTCONbits	set	11
  3257  0010                     _PIR1bits	set	16
  3258  0095                     _OPTION_REG	set	149
  3259  0095                     _OPTION_REGbits	set	149
  3260  008E                     _TRISC	set	142
  3261  008D                     _TRISB	set	141
  3262  008C                     _TRISA	set	140
  3263  0098                     _OSCTUNE	set	152
  3264  0099                     _OSCCON	set	153
  3265  010E                     _LATC	set	270
  3266  010D                     _LATB	set	269
  3267  010C                     _LATA	set	268
  3268  0116                     _BORCON	set	278
  3269  018C                     _ANSELA	set	396
  3270  018D                     _ANSELB	set	397
  3271  018E                     _ANSELC	set	398
  3272  019A                     _TX1REG	set	410
  3273  0199                     _RC1REG	set	409
  3274  019D                     _RC1STAbits	set	413
  3275  019E                     _TX1STAbits	set	414
  3276  019C                     _SPBRGH	set	412
  3277  019B                     _SPBRGL	set	411
  3278  019E                     _TX1STA	set	414
  3279  019D                     _RC1STA	set	413
  3280  019F                     _BAUD1CON	set	415
  3281  020E                     _WPUC	set	526
  3282  020C                     _WPUA	set	524
  3283  020D                     _WPUB	set	525
  3284  028E                     _ODCONC	set	654
  3285  028D                     _ODCONB	set	653
  3286  028C                     _ODCONA	set	652
  3287  030E                     _SLRCONC	set	782
  3288  030D                     _SLRCONB	set	781
  3289  030C                     _SLRCONA	set	780
  3290  0397                     _IOCCPbits	set	919
  3291  0398                     _IOCCNbits	set	920
  3292  0399                     _IOCCFbits	set	921
  3293  0E9F                     _RB7PPS	set	3743
  3294                           
  3295                           	psect	stringtext1
  3296  1000                     __pstringtext1:	
  3297  1000                     STR_1:	
  3298  1000  3425               	retlw	37	;'%'
  3299  1001  3464               	retlw	100	;'d'
  3300  1002  3420               	retlw	32	;' '
  3301  1003  346D               	retlw	109	;'m'
  3302  1004  3469               	retlw	105	;'i'
  3303  1005  342F               	retlw	47	;'/'
  3304  1006  3468               	retlw	104	;'h'
  3305  1007  3472               	retlw	114	;'r'
  3306  1008  3400               	retlw	0
  3307                           
  3308                           	psect	stringtext2
  3309  1009                     __pstringtext2:	
  3310  1009                     STR_2:	
  3311  1009  3425               	retlw	37	;'%'
  3312  100A  3464               	retlw	100	;'d'
  3313  100B  3420               	retlw	32	;' '
  3314  100C  346D               	retlw	109	;'m'
  3315  100D  3469               	retlw	105	;'i'
  3316  100E  3400               	retlw	0
  3317                           
  3318                           	psect	stringtext3
  3319  100F                     __pstringtext3:	
  3320  100F                     STR_3:	
  3321  100F  347C               	retlw	124	;'|'
  3322  1010  342D               	retlw	45	;'-'
  3323  1011  3400               	retlw	0
  3324                           
  3325                           	psect	stringtext4
  3326  0000                     __pstringtext4:	
  3327                           
  3328                           ; #config settings
  3329  0000                     
  3330                           	psect	cinit
  3331  0016                     start_initialization:	
  3332  0016                     __initialization:	
  3333                           
  3334                           ; Initialize objects allocated to BANK2
  3335  0016  3053               	movlw	low __pidataBANK2
  3336  0017  0084               	movwf	4
  3337  0018  308D               	movlw	(high __pidataBANK2)| (0+128)
  3338  0019  0085               	movwf	5
  3339  001A  3020               	movlw	low __pdataBANK2
  3340  001B  0086               	movwf	6
  3341  001C  3001               	movlw	high __pdataBANK2
  3342  001D  0087               	movwf	7
  3343  001E  3020               	movlw	32
  3344  001F  3187  27FA  3180   	fcall	init_ram
  3345                           
  3346                           ; Clear objects allocated to BANK0
  3347  0022  3051               	movlw	low __pbssBANK0
  3348  0023  0084               	movwf	4
  3349  0024  3000               	movlw	high __pbssBANK0
  3350  0025  0085               	movwf	5
  3351  0026  3013               	movlw	19
  3352  0027  318C  2410  3180   	fcall	clear_ram0
  3353                           
  3354                           ; Clear objects allocated to BANK2
  3355  002A  304F               	movlw	low __pbssBANK2
  3356  002B  0084               	movwf	4
  3357  002C  3001               	movlw	high __pbssBANK2
  3358  002D  0085               	movwf	5
  3359  002E  300A               	movlw	10
  3360  002F  318C  2410  3180   	fcall	clear_ram0
  3361                           
  3362                           ; Clear objects allocated to BANK3
  3363  0032  30A0               	movlw	low __pbssBANK3
  3364  0033  0084               	movwf	4
  3365  0034  3001               	movlw	high __pbssBANK3
  3366  0035  0085               	movwf	5
  3367  0036  3020               	movlw	32
  3368  0037  318C  2410         	fcall	clear_ram0
  3369  0039                     end_of_initialization:	
  3370                           ;End of C runtime variable initialization code
  3371                           
  3372  0039                     __end_of__initialization:	
  3373  0039  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3374  003A  0020               	movlb	0
  3375  003B  318F  2F8F         	ljmp	_main	;jump to C main() function
  3376                           
  3377                           	psect	bssBANK0
  3378  0051                     __pbssBANK0:	
  3379  0051                     _counter:	
  3380  0051                     	ds	4
  3381  0055                     _second:	
  3382  0055                     	ds	4
  3383  0059                     _width:	
  3384  0059                     	ds	2
  3385  005B                     _prec:	
  3386  005B                     	ds	2
  3387  005D                     _flags:	
  3388  005D                     	ds	2
  3389  005F                     _eusartRxLastError:	
  3390  005F                     	ds	1
  3391  0060                     _rpm:	
  3392  0060                     	ds	4
  3393                           
  3394                           	psect	bssBANK2
  3395  014F                     __pbssBANK2:	
  3396  014F                     _speed:	
  3397  014F                     	ds	4
  3398  0153                     _distance:	
  3399  0153                     	ds	4
  3400  0157                     _nout:	
  3401  0157                     	ds	2
  3402                           
  3403                           	psect	dataBANK2
  3404  0120                     __pdataBANK2:	
  3405  0120                     _hrDisp:	
  3406  0120                     	ds	13
  3407  012D                     _distanceDisp:	
  3408  012D                     	ds	11
  3409  0138                     _speedDisp:	
  3410  0138                     	ds	8
  3411                           
  3412                           	psect	bssBANK3
  3413  01A0                     __pbssBANK3:	
  3414  01A0                     _dbuf:	
  3415  01A0                     	ds	32
  3416                           
  3417                           	psect	inittext
  3418  07FA                     init_ram:	
  3419  07FA  00FE               	movwf	126
  3420  07FB                     initloop:	
  3421  07FB  0012               	moviw fsr0++
  3422  07FC  001E               	movwi fsr1++
  3423  07FD  0BFE               	decfsz	126,f
  3424  07FE  2FFB               	goto	initloop
  3425  07FF  3400               	retlw	0
  3426                           
  3427                           	psect	clrtext
  3428  0C10                     clear_ram0:	
  3429                           ;	Called with FSR0 containing the base address, and
  3430                           ;	WREG with the size to clear
  3431                           
  3432  0C10  0064               	clrwdt	;clear the watchdog before getting into this loop
  3433  0C11                     clrloop0:	
  3434  0C11  0180               	clrf	0	;clear RAM location pointed to by FSR
  3435  0C12  3101               	addfsr 0,1
  3436  0C13  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3437  0C14  2C11               	goto	clrloop0	;have we reached the end yet?
  3438  0C15  3400               	retlw	0	;all done for this memory range, return
  3439                           
  3440                           	psect	cstackBANK2
  3441  0140                     __pcstackBANK2:	
  3442  0140                     ??_vfprintf:	
  3443                           
  3444                           ; 1 bytes @ 0x0
  3445  0140                     	ds	2
  3446  0142                     vfprintf@fp:	
  3447                           
  3448                           ; 1 bytes @ 0x2
  3449  0142                     	ds	1
  3450  0143                     vfprintf@cfmt:	
  3451                           
  3452                           ; 2 bytes @ 0x3
  3453  0143                     	ds	2
  3454  0145                     ?_printf:	
  3455  0145                     printf@fmt:	
  3456                           ; 2 bytes @ 0x5
  3457                           
  3458                           
  3459                           ; 2 bytes @ 0x5
  3460  0145                     	ds	8
  3461  014D                     printf@ap:	
  3462                           
  3463                           ; 1 bytes @ 0xD
  3464  014D                     	ds	1
  3465  014E                     ??_main:	
  3466                           
  3467                           ; 1 bytes @ 0xE
  3468  014E                     	ds	1
  3469                           
  3470                           	psect	cstackBANK1
  3471  00A0                     __pcstackBANK1:	
  3472  00A0                     ?_EUSART_SetFramingErrorHandler:	
  3473  00A0                     ?_EUSART_SetOverrunErrorHandler:	
  3474                           ; 1 bytes @ 0x0
  3475                           
  3476  00A0                     ?_EUSART_SetErrorHandler:	
  3477                           ; 1 bytes @ 0x0
  3478                           
  3479  00A0                     ??_OSCILLATOR_Initialize:	
  3480                           ; 1 bytes @ 0x0
  3481                           
  3482  00A0                     ?_IOCCF7_SetInterruptHandler:	
  3483                           ; 1 bytes @ 0x0
  3484                           
  3485  00A0                     ?_TMR0_SetInterruptHandler:	
  3486                           ; 1 bytes @ 0x0
  3487                           
  3488  00A0                     ??_EUSART_is_tx_ready:	
  3489                           ; 1 bytes @ 0x0
  3490                           
  3491  00A0                     ??_EUSART_Write:	
  3492                           ; 1 bytes @ 0x0
  3493                           
  3494  00A0                     ?_strlen:	
  3495                           ; 1 bytes @ 0x0
  3496                           
  3497  00A0                     ?___aodiv:	
  3498                           ; 2 bytes @ 0x0
  3499                           
  3500  00A0                     ?___aomod:	
  3501                           ; 8 bytes @ 0x0
  3502                           
  3503  00A0                     _EUSART_is_tx_ready$167:	
  3504                           ; 8 bytes @ 0x0
  3505                           
  3506  00A0                     EUSART_Write@txData:	
  3507                           ; 1 bytes @ 0x0
  3508                           
  3509  00A0                     EUSART_SetFramingErrorHandler@interruptHandler:	
  3510                           ; 1 bytes @ 0x0
  3511                           
  3512  00A0                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  3513                           ; 2 bytes @ 0x0
  3514                           
  3515  00A0                     EUSART_SetErrorHandler@interruptHandler:	
  3516                           ; 2 bytes @ 0x0
  3517                           
  3518  00A0                     IOCCF7_SetInterruptHandler@InterruptHandler:	
  3519                           ; 2 bytes @ 0x0
  3520                           
  3521  00A0                     TMR0_SetInterruptHandler@InterruptHandler:	
  3522                           ; 2 bytes @ 0x0
  3523                           
  3524  00A0                     ___aodiv@divisor:	
  3525                           ; 2 bytes @ 0x0
  3526                           
  3527  00A0                     ___aomod@divisor:	
  3528                           ; 8 bytes @ 0x0
  3529                           
  3530                           
  3531                           ; 8 bytes @ 0x0
  3532  00A0                     	ds	1
  3533  00A1                     ?_setCursor:	
  3534  00A1                     ??_putch:	
  3535                           ; 1 bytes @ 0x1
  3536                           
  3537  00A1                     putch@txData:	
  3538                           ; 1 bytes @ 0x1
  3539                           
  3540  00A1                     setCursor@b:	
  3541                           ; 1 bytes @ 0x1
  3542                           
  3543                           
  3544                           ; 1 bytes @ 0x1
  3545  00A1                     	ds	1
  3546  00A2                     ??_EUSART_SetFramingErrorHandler:	
  3547  00A2                     ??_EUSART_SetOverrunErrorHandler:	
  3548                           ; 1 bytes @ 0x2
  3549                           
  3550  00A2                     ??_EUSART_SetErrorHandler:	
  3551                           ; 1 bytes @ 0x2
  3552                           
  3553  00A2                     ??_PIN_MANAGER_Initialize:	
  3554                           ; 1 bytes @ 0x2
  3555                           
  3556  00A2                     ??_TMR0_Initialize:	
  3557                           ; 1 bytes @ 0x2
  3558                           
  3559  00A2                     ??_IOCCF7_SetInterruptHandler:	
  3560                           ; 1 bytes @ 0x2
  3561                           
  3562  00A2                     ??_TMR0_SetInterruptHandler:	
  3563                           ; 1 bytes @ 0x2
  3564                           
  3565  00A2                     ??_setCursor:	
  3566                           ; 1 bytes @ 0x2
  3567                           
  3568  00A2                     ??_strlen:	
  3569                           ; 1 bytes @ 0x2
  3570                           
  3571  00A2                     ??_EUSART_Initialize:	
  3572                           ; 1 bytes @ 0x2
  3573                           
  3574  00A2                     ?_fputc:	
  3575                           ; 1 bytes @ 0x2
  3576                           
  3577  00A2                     fputc@c:	
  3578                           ; 2 bytes @ 0x2
  3579                           
  3580                           
  3581                           ; 2 bytes @ 0x2
  3582  00A2                     	ds	1
  3583  00A3                     ??_SYSTEM_Initialize:	
  3584  00A3                     strlen@a:	
  3585                           ; 1 bytes @ 0x3
  3586                           
  3587                           
  3588                           ; 1 bytes @ 0x3
  3589  00A3                     	ds	1
  3590  00A4                     setCursor@a:	
  3591  00A4                     fputc@fp:	
  3592                           ; 1 bytes @ 0x4
  3593                           
  3594  00A4                     strlen@s:	
  3595                           ; 1 bytes @ 0x4
  3596                           
  3597                           
  3598                           ; 1 bytes @ 0x4
  3599  00A4                     	ds	1
  3600  00A5                     ??_fputc:	
  3601                           
  3602                           ; 1 bytes @ 0x5
  3603  00A5                     	ds	3
  3604  00A8                     ___aodiv@dividend:	
  3605  00A8                     ___aomod@dividend:	
  3606                           ; 8 bytes @ 0x8
  3607                           
  3608                           
  3609                           ; 8 bytes @ 0x8
  3610  00A8                     	ds	2
  3611  00AA                     ?_fputs:	
  3612  00AA                     fputs@s:	
  3613                           ; 2 bytes @ 0xA
  3614                           
  3615                           
  3616                           ; 2 bytes @ 0xA
  3617  00AA                     	ds	2
  3618  00AC                     fputs@fp:	
  3619                           
  3620                           ; 1 bytes @ 0xC
  3621  00AC                     	ds	1
  3622  00AD                     ??_fputs:	
  3623                           
  3624                           ; 1 bytes @ 0xD
  3625  00AD                     	ds	3
  3626  00B0                     ??___aodiv:	
  3627  00B0                     ??___aomod:	
  3628                           ; 1 bytes @ 0x10
  3629                           
  3630  00B0                     fputs@c:	
  3631                           ; 1 bytes @ 0x10
  3632                           
  3633                           
  3634                           ; 1 bytes @ 0x10
  3635  00B0                     	ds	1
  3636  00B1                     ___aodiv@counter:	
  3637  00B1                     ___aomod@counter:	
  3638                           ; 1 bytes @ 0x11
  3639                           
  3640  00B1                     fputs@i:	
  3641                           ; 1 bytes @ 0x11
  3642                           
  3643                           
  3644                           ; 2 bytes @ 0x11
  3645  00B1                     	ds	1
  3646  00B2                     ___aodiv@sign:	
  3647  00B2                     ___aomod@sign:	
  3648                           ; 1 bytes @ 0x12
  3649                           
  3650                           
  3651                           ; 1 bytes @ 0x12
  3652  00B2                     	ds	1
  3653  00B3                     ?_puts:	
  3654  00B3                     ?_abs:	
  3655                           ; 2 bytes @ 0x13
  3656                           
  3657  00B3                     ?_pad:	
  3658                           ; 2 bytes @ 0x13
  3659                           
  3660  00B3                     pad@buf:	
  3661                           ; 2 bytes @ 0x13
  3662                           
  3663  00B3                     abs@a:	
  3664                           ; 1 bytes @ 0x13
  3665                           
  3666  00B3                     puts@s:	
  3667                           ; 2 bytes @ 0x13
  3668                           
  3669  00B3                     ___aodiv@quotient:	
  3670                           ; 2 bytes @ 0x13
  3671                           
  3672                           
  3673                           ; 8 bytes @ 0x13
  3674  00B3                     	ds	1
  3675  00B4                     pad@p:	
  3676                           
  3677                           ; 2 bytes @ 0x14
  3678  00B4                     	ds	1
  3679  00B5                     ??_puts:	
  3680  00B5                     ??_abs:	
  3681                           ; 1 bytes @ 0x15
  3682                           
  3683                           
  3684                           ; 1 bytes @ 0x15
  3685  00B5                     	ds	1
  3686  00B6                     ??_pad:	
  3687                           
  3688                           ; 1 bytes @ 0x16
  3689  00B6                     	ds	1
  3690  00B7                     _puts$1033:	
  3691  00B7                     pad@i:	
  3692                           ; 1 bytes @ 0x17
  3693                           
  3694                           
  3695                           ; 2 bytes @ 0x17
  3696  00B7                     	ds	1
  3697  00B8                     ??_resetCursor:	
  3698  00B8                     ??_writeString:	
  3699                           ; 1 bytes @ 0x18
  3700                           
  3701  00B8                     writeString@string:	
  3702                           ; 1 bytes @ 0x18
  3703                           
  3704                           
  3705                           ; 1 bytes @ 0x18
  3706  00B8                     	ds	1
  3707  00B9                     pad@w:	
  3708                           
  3709                           ; 2 bytes @ 0x19
  3710  00B9                     	ds	2
  3711  00BB                     pad@fp:	
  3712                           
  3713                           ; 1 bytes @ 0x1B
  3714  00BB                     	ds	1
  3715  00BC                     ?_dtoa:	
  3716  00BC                     dtoa@d:	
  3717                           ; 2 bytes @ 0x1C
  3718                           
  3719                           
  3720                           ; 8 bytes @ 0x1C
  3721  00BC                     	ds	8
  3722  00C4                     ??_dtoa:	
  3723                           
  3724                           ; 1 bytes @ 0x24
  3725  00C4                     	ds	3
  3726  00C7                     _dtoa$687:	
  3727                           
  3728                           ; 2 bytes @ 0x27
  3729  00C7                     	ds	2
  3730  00C9                     dtoa@p:	
  3731                           
  3732                           ; 2 bytes @ 0x29
  3733  00C9                     	ds	2
  3734  00CB                     dtoa@fp:	
  3735                           
  3736                           ; 1 bytes @ 0x2B
  3737  00CB                     	ds	1
  3738  00CC                     dtoa@w:	
  3739                           
  3740                           ; 2 bytes @ 0x2C
  3741  00CC                     	ds	2
  3742  00CE                     dtoa@s:	
  3743                           
  3744                           ; 2 bytes @ 0x2E
  3745  00CE                     	ds	2
  3746  00D0                     dtoa@n:	
  3747                           
  3748                           ; 8 bytes @ 0x30
  3749  00D0                     	ds	8
  3750  00D8                     dtoa@i:	
  3751                           
  3752                           ; 2 bytes @ 0x38
  3753  00D8                     	ds	2
  3754  00DA                     ?_vfpfcnvrt:	
  3755  00DA                     vfpfcnvrt@fmt:	
  3756                           ; 2 bytes @ 0x3A
  3757                           
  3758                           
  3759                           ; 1 bytes @ 0x3A
  3760  00DA                     	ds	1
  3761  00DB                     vfpfcnvrt@ap:	
  3762                           
  3763                           ; 1 bytes @ 0x3B
  3764  00DB                     	ds	1
  3765  00DC                     ??_vfpfcnvrt:	
  3766                           
  3767                           ; 1 bytes @ 0x3C
  3768  00DC                     	ds	5
  3769  00E1                     vfpfcnvrt@ll:	
  3770                           
  3771                           ; 8 bytes @ 0x41
  3772  00E1                     	ds	8
  3773  00E9                     vfpfcnvrt@vp:	
  3774                           
  3775                           ; 2 bytes @ 0x49
  3776  00E9                     	ds	2
  3777  00EB                     vfpfcnvrt@fp:	
  3778                           
  3779                           ; 1 bytes @ 0x4B
  3780  00EB                     	ds	1
  3781  00EC                     ?_vfprintf:	
  3782  00EC                     vfprintf@fmt:	
  3783                           ; 2 bytes @ 0x4C
  3784                           
  3785                           
  3786                           ; 2 bytes @ 0x4C
  3787  00EC                     	ds	2
  3788  00EE                     vfprintf@ap:	
  3789                           
  3790                           ; 1 bytes @ 0x4E
  3791  00EE                     	ds	1
  3792  00EF                     ??_printf:	
  3793                           
  3794                           ; 1 bytes @ 0x4F
  3795  00EF                     	ds	1
  3796                           
  3797                           	psect	cstackCOMMON
  3798  0070                     __pcstackCOMMON:	
  3799  0070                     ?_PIN_MANAGER_Initialize:	
  3800  0070                     ?_OSCILLATOR_Initialize:	
  3801                           ; 1 bytes @ 0x0
  3802                           
  3803  0070                     ?_TMR0_Initialize:	
  3804                           ; 1 bytes @ 0x0
  3805                           
  3806  0070                     ?_IOCCF7_DefaultInterruptHandler:	
  3807                           ; 1 bytes @ 0x0
  3808                           
  3809  0070                     ??_IOCCF7_DefaultInterruptHandler:	
  3810                           ; 1 bytes @ 0x0
  3811                           
  3812  0070                     ?_IOCCF7_ISR:	
  3813                           ; 1 bytes @ 0x0
  3814                           
  3815  0070                     ?_TMR0_DefaultInterruptHandler:	
  3816                           ; 1 bytes @ 0x0
  3817                           
  3818  0070                     ??_TMR0_DefaultInterruptHandler:	
  3819                           ; 1 bytes @ 0x0
  3820                           
  3821  0070                     ?_timerISR:	
  3822                           ; 1 bytes @ 0x0
  3823                           
  3824  0070                     ??_timerISR:	
  3825                           ; 1 bytes @ 0x0
  3826                           
  3827  0070                     ?_speedCalc:	
  3828                           ; 1 bytes @ 0x0
  3829                           
  3830  0070                     ?_resetCursor:	
  3831                           ; 1 bytes @ 0x0
  3832                           
  3833  0070                     ?_writeString:	
  3834                           ; 1 bytes @ 0x0
  3835                           
  3836  0070                     ?_EUSART_Initialize:	
  3837                           ; 1 bytes @ 0x0
  3838                           
  3839  0070                     ?_EUSART_is_tx_ready:	
  3840                           ; 1 bytes @ 0x0
  3841                           
  3842  0070                     ?_EUSART_Write:	
  3843                           ; 1 bytes @ 0x0
  3844                           
  3845  0070                     ?_putch:	
  3846                           ; 1 bytes @ 0x0
  3847                           
  3848  0070                     ?_SYSTEM_Initialize:	
  3849                           ; 1 bytes @ 0x0
  3850                           
  3851  0070                     ?_PIN_MANAGER_IOC:	
  3852                           ; 1 bytes @ 0x0
  3853                           
  3854  0070                     ?_TMR0_ISR:	
  3855                           ; 1 bytes @ 0x0
  3856                           
  3857  0070                     ??_TMR0_ISR:	
  3858                           ; 1 bytes @ 0x0
  3859                           
  3860  0070                     ?_INTERRUPT_InterruptManager:	
  3861                           ; 1 bytes @ 0x0
  3862                           
  3863  0070                     ?_main:	
  3864                           ; 1 bytes @ 0x0
  3865                           
  3866  0070                     ?__Umul8_16:	
  3867                           ; 1 bytes @ 0x0
  3868                           
  3869  0070                     ?___lmul:	
  3870                           ; 2 bytes @ 0x0
  3871                           
  3872  0070                     __Umul8_16@multiplicand:	
  3873                           ; 4 bytes @ 0x0
  3874                           
  3875  0070                     ___lmul@multiplier:	
  3876                           ; 1 bytes @ 0x0
  3877                           
  3878                           
  3879                           ; 4 bytes @ 0x0
  3880  0070                     	ds	2
  3881  0072                     ??__Umul8_16:	
  3882                           
  3883                           ; 1 bytes @ 0x2
  3884  0072                     	ds	2
  3885  0074                     __Umul8_16@product:	
  3886  0074                     ___lmul@multiplicand:	
  3887                           ; 2 bytes @ 0x4
  3888                           
  3889                           
  3890                           ; 4 bytes @ 0x4
  3891  0074                     	ds	2
  3892  0076                     __Umul8_16@word_mpld:	
  3893                           
  3894                           ; 2 bytes @ 0x6
  3895  0076                     	ds	2
  3896  0078                     ??___lmul:	
  3897  0078                     __Umul8_16@multiplier:	
  3898                           ; 1 bytes @ 0x8
  3899                           
  3900  0078                     ___lmul@product:	
  3901                           ; 1 bytes @ 0x8
  3902                           
  3903                           
  3904                           ; 4 bytes @ 0x8
  3905  0078                     	ds	4
  3906  007C                     ___fltol@sign1:	
  3907                           
  3908                           ; 1 bytes @ 0xC
  3909  007C                     	ds	1
  3910  007D                     ___fltol@exp1:	
  3911                           
  3912                           ; 1 bytes @ 0xD
  3913  007D                     	ds	1
  3914  007E                     ??_IOCCF7_ISR:	
  3915  007E                     ??_speedCalc:	
  3916                           ; 1 bytes @ 0xE
  3917                           
  3918  007E                     ??_PIN_MANAGER_IOC:	
  3919                           ; 1 bytes @ 0xE
  3920                           
  3921  007E                     ??_INTERRUPT_InterruptManager:	
  3922                           ; 1 bytes @ 0xE
  3923                           
  3924                           
  3925                           	psect	cstackBANK0
  3926  0020                     __pcstackBANK0:	
  3927                           ; 1 bytes @ 0xE
  3928                           
  3929  0020                     ?___xxtofl:	
  3930  0020                     ___xxtofl@val:	
  3931                           ; 4 bytes @ 0x0
  3932                           
  3933                           
  3934                           ; 4 bytes @ 0x0
  3935  0020                     	ds	4
  3936  0024                     ??___xxtofl:	
  3937                           
  3938                           ; 1 bytes @ 0x4
  3939  0024                     	ds	4
  3940  0028                     ___xxtofl@sign:	
  3941                           
  3942                           ; 1 bytes @ 0x8
  3943  0028                     	ds	1
  3944  0029                     ___xxtofl@exp:	
  3945                           
  3946                           ; 1 bytes @ 0x9
  3947  0029                     	ds	1
  3948  002A                     ___xxtofl@arg:	
  3949                           
  3950                           ; 4 bytes @ 0xA
  3951  002A                     	ds	4
  3952  002E                     ?___flmul:	
  3953  002E                     ___flmul@b:	
  3954                           ; 4 bytes @ 0xE
  3955                           
  3956                           
  3957                           ; 4 bytes @ 0xE
  3958  002E                     	ds	4
  3959  0032                     ___flmul@a:	
  3960                           
  3961                           ; 4 bytes @ 0x12
  3962  0032                     	ds	4
  3963  0036                     ??___flmul:	
  3964                           
  3965                           ; 1 bytes @ 0x16
  3966  0036                     	ds	5
  3967  003B                     ___flmul@sign:	
  3968                           
  3969                           ; 1 bytes @ 0x1B
  3970  003B                     	ds	1
  3971  003C                     ___flmul@grs:	
  3972                           
  3973                           ; 4 bytes @ 0x1C
  3974  003C                     	ds	4
  3975  0040                     ___flmul@aexp:	
  3976                           
  3977                           ; 1 bytes @ 0x20
  3978  0040                     	ds	1
  3979  0041                     ___flmul@bexp:	
  3980                           
  3981                           ; 1 bytes @ 0x21
  3982  0041                     	ds	1
  3983  0042                     ___flmul@prod:	
  3984                           
  3985                           ; 4 bytes @ 0x22
  3986  0042                     	ds	4
  3987  0046                     ___flmul@temp:	
  3988                           
  3989                           ; 2 bytes @ 0x26
  3990  0046                     	ds	2
  3991  0048                     ?___fltol:	
  3992  0048                     ___fltol@f1:	
  3993                           ; 4 bytes @ 0x28
  3994                           
  3995                           
  3996                           ; 4 bytes @ 0x28
  3997  0048                     	ds	4
  3998  004C                     ??___fltol:	
  3999                           
  4000                           ; 1 bytes @ 0x2C
  4001  004C                     	ds	5
  4002                           
  4003                           	psect	maintext
  4004  0F8F                     __pmaintext:	
  4005 ;;
  4006 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  4007 ;;
  4008 ;; *************** function _main *****************
  4009 ;; Defined at:
  4010 ;;		line 36 in file "main.c"
  4011 ;; Parameters:    Size  Location     Type
  4012 ;;		None
  4013 ;; Auto vars:     Size  Location     Type
  4014 ;;		None
  4015 ;; Return value:  Size  Location     Type
  4016 ;;                  1    wreg      void 
  4017 ;; Registers used:
  4018 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4019 ;; Tracked objects:
  4020 ;;		On entry : B1F/0
  4021 ;;		On exit  : 0/0
  4022 ;;		Unchanged: 0/0
  4023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4026 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  4027 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  4028 ;;Total ram usage:        1 bytes
  4029 ;; Hardware stack levels required when called:   15
  4030 ;; This function calls:
  4031 ;;		_IOCCF7_SetInterruptHandler
  4032 ;;		_SYSTEM_Initialize
  4033 ;;		_TMR0_SetInterruptHandler
  4034 ;;		_printf
  4035 ;;		_resetCursor
  4036 ;;		_setCursor
  4037 ;;		_writeString
  4038 ;; This function is called by:
  4039 ;;		Startup code after reset
  4040 ;; This function uses a non-reentrant model
  4041 ;;
  4042                           
  4043                           
  4044                           ;psect for function _main
  4045  0F8F                     _main:	
  4046                           
  4047                           ;main.c: 39:     SYSTEM_Initialize();
  4048                           
  4049                           ;incstack = 0
  4050                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4051  0F8F  318C  245C  318F   	fcall	_SYSTEM_Initialize
  4052                           
  4053                           ;main.c: 41:     TMR0_SetInterruptHandler( timerISR ) ;
  4054  0F92  3091               	movlw	low _timerISR
  4055  0F93  0021               	movlb	1	; select bank1
  4056  0F94  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler^(0+128)
  4057  0F95  300C               	movlw	high _timerISR
  4058  0F96  00A1               	movwf	(TMR0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  4059  0F97  318C  2449  318F   	fcall	_TMR0_SetInterruptHandler
  4060                           
  4061                           ;main.c: 42:     IOCCF7_SetInterruptHandler( speedCalc ) ;
  4062  0F9A  309E               	movlw	low _speedCalc
  4063  0F9B  0021               	movlb	1	; select bank1
  4064  0F9C  00A0               	movwf	IOCCF7_SetInterruptHandler@InterruptHandler^(0+128)
  4065  0F9D  3006               	movlw	high _speedCalc
  4066  0F9E  00A1               	movwf	(IOCCF7_SetInterruptHandler@InterruptHandler^(0+128)+1)
  4067  0F9F  318C  2440  318F   	fcall	_IOCCF7_SetInterruptHandler
  4068                           
  4069                           ;main.c: 45:     resetCursor() ;
  4070  0FA2  318C  241D  318F   	fcall	_resetCursor
  4071                           
  4072                           ;main.c: 47:     setCursor(1,0) ;
  4073  0FA5  0021               	movlb	1	; select bank1
  4074  0FA6  01A1               	clrf	setCursor@b^(0+128)
  4075  0FA7  3001               	movlw	1
  4076  0FA8  318E  2656  318F   	fcall	_setCursor
  4077                           
  4078                           ;main.c: 48:     writeString(speedDisp);
  4079  0FAB  3038               	movlw	(low (_speedDisp| (0+256)))& (0+255)
  4080  0FAC  318C  24BA  318F   	fcall	_writeString
  4081                           
  4082                           ;main.c: 49:     setCursor(2,0) ;
  4083  0FAF  0021               	movlb	1	; select bank1
  4084  0FB0  01A1               	clrf	setCursor@b^(0+128)
  4085  0FB1  3002               	movlw	2
  4086  0FB2  318E  2656  318F   	fcall	_setCursor
  4087                           
  4088                           ;main.c: 50:     writeString(distanceDisp);
  4089  0FB5  302D               	movlw	(low (_distanceDisp| (0+256)))& (0+255)
  4090  0FB6  318C  24BA  318F   	fcall	_writeString
  4091                           
  4092                           ;main.c: 51:     setCursor(3,0) ;
  4093  0FB9  0021               	movlb	1	; select bank1
  4094  0FBA  01A1               	clrf	setCursor@b^(0+128)
  4095  0FBB  3003               	movlw	3
  4096  0FBC  318E  2656  318F   	fcall	_setCursor
  4097                           
  4098                           ;main.c: 52:     writeString(hrDisp);
  4099  0FBF  3020               	movlw	(low (_hrDisp| (0+256)))& (0+255)
  4100  0FC0  318C  24BA  318F   	fcall	_writeString
  4101                           
  4102                           ;main.c: 53:     setCursor(4,0) ;
  4103  0FC3  0021               	movlb	1	; select bank1
  4104  0FC4  01A1               	clrf	setCursor@b^(0+128)
  4105  0FC5  3004               	movlw	4
  4106  0FC6  318E  2656  318F   	fcall	_setCursor
  4107                           
  4108                           ;main.c: 55:     (INTCONbits.GIE = 1);
  4109  0FC9  178B               	bsf	11,7	;volatile
  4110                           
  4111                           ;main.c: 56:     (INTCONbits.PEIE = 1);
  4112  0FCA  170B               	bsf	11,6	;volatile
  4113  0FCB                     l2713:	
  4114                           
  4115                           ;main.c: 58:         setCursor(1,10) ;
  4116  0FCB  300A               	movlw	10
  4117  0FCC  0022               	movlb	2	; select bank2
  4118  0FCD  00CE               	movwf	??_main^(0+256)
  4119  0FCE  084E               	movf	??_main^(0+256),w
  4120  0FCF  0021               	movlb	1	; select bank1
  4121  0FD0  00A1               	movwf	setCursor@b^(0+128)
  4122  0FD1  3001               	movlw	1
  4123  0FD2  318E  2656  318F   	fcall	_setCursor
  4124                           
  4125                           ;main.c: 59:         printf( "%d mi/hr", speed ) ;
  4126  0FD5  3000               	movlw	low (STR_1| (0+32768))
  4127  0FD6  0022               	movlb	2	; select bank2
  4128  0FD7  00C5               	movwf	printf@fmt^(0+256)
  4129  0FD8  3090               	movlw	high (STR_1| (0+32768))
  4130  0FD9  00C6               	movwf	(printf@fmt^(0+256)+1)
  4131  0FDA  0852               	movf	(_speed+3)^(0+256),w
  4132  0FDB  00CA               	movwf	((?_printf+3)^(0+256)+2)
  4133  0FDC  0851               	movf	(_speed+2)^(0+256),w
  4134  0FDD  00C9               	movwf	((?_printf+2)^(0+256)+2)
  4135  0FDE  0850               	movf	(_speed+1)^(0+256),w
  4136  0FDF  00C8               	movwf	((?_printf+1)^(0+256)+2)
  4137  0FE0  084F               	movf	_speed^(0+256),w
  4138  0FE1  00C7               	movwf	(?_printf^(0+256)+2)
  4139  0FE2  318C  24A5  318F   	fcall	_printf
  4140                           
  4141                           ;main.c: 60:         setCursor(2,11) ;
  4142  0FE5  300B               	movlw	11
  4143  0FE6  0022               	movlb	2	; select bank2
  4144  0FE7  00CE               	movwf	??_main^(0+256)
  4145  0FE8  084E               	movf	??_main^(0+256),w
  4146  0FE9  0021               	movlb	1	; select bank1
  4147  0FEA  00A1               	movwf	setCursor@b^(0+128)
  4148  0FEB  3002               	movlw	2
  4149  0FEC  318E  2656  318F   	fcall	_setCursor
  4150                           
  4151                           ;main.c: 61:         printf( "%d mi", distance ) ;
  4152  0FEF  3009               	movlw	low (STR_2| (0+32768))
  4153  0FF0  0022               	movlb	2	; select bank2
  4154  0FF1  00C5               	movwf	printf@fmt^(0+256)
  4155  0FF2  3090               	movlw	high (STR_2| (0+32768))
  4156  0FF3  00C6               	movwf	(printf@fmt^(0+256)+1)
  4157  0FF4  0856               	movf	(_distance+3)^(0+256),w
  4158  0FF5  00CA               	movwf	((?_printf+3)^(0+256)+2)
  4159  0FF6  0855               	movf	(_distance+2)^(0+256),w
  4160  0FF7  00C9               	movwf	((?_printf+2)^(0+256)+2)
  4161  0FF8  0854               	movf	(_distance+1)^(0+256),w
  4162  0FF9  00C8               	movwf	((?_printf+1)^(0+256)+2)
  4163  0FFA  0853               	movf	_distance^(0+256),w
  4164  0FFB  00C7               	movwf	(?_printf^(0+256)+2)
  4165  0FFC  318C  24A5  318F   	fcall	_printf
  4166  0FFF  2FCB               	goto	l2713
  4167  1000                     __end_of_main:	
  4168                           
  4169                           	psect	text1
  4170  0CBA                     __ptext1:	
  4171 ;; *************** function _writeString *****************
  4172 ;; Defined at:
  4173 ;;		line 60 in file "displayOptions.c"
  4174 ;; Parameters:    Size  Location     Type
  4175 ;;  string          1    wreg     PTR unsigned char 
  4176 ;;		 -> hrDisp(13), distanceDisp(11), speedDisp(8), 
  4177 ;; Auto vars:     Size  Location     Type
  4178 ;;  string          1   24[BANK1 ] PTR unsigned char 
  4179 ;;		 -> hrDisp(13), distanceDisp(11), speedDisp(8), 
  4180 ;; Return value:  Size  Location     Type
  4181 ;;                  1    wreg      void 
  4182 ;; Registers used:
  4183 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4184 ;; Tracked objects:
  4185 ;;		On entry : 0/0
  4186 ;;		On exit  : 0/0
  4187 ;;		Unchanged: 0/0
  4188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4190 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4192 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4193 ;;Total ram usage:        1 bytes
  4194 ;; Hardware stack levels used:    1
  4195 ;; Hardware stack levels required when called:   11
  4196 ;; This function calls:
  4197 ;;		_EUSART_is_tx_ready
  4198 ;;		_puts
  4199 ;; This function is called by:
  4200 ;;		_main
  4201 ;; This function uses a non-reentrant model
  4202 ;;
  4203                           
  4204                           
  4205                           ;psect for function _writeString
  4206  0CBA                     _writeString:	
  4207                           
  4208                           ;incstack = 0
  4209                           ; Regs used in _writeString: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4210                           ;writeString@string stored from wreg
  4211  0CBA  0021               	movlb	1	; select bank1
  4212  0CBB  00B8               	movwf	writeString@string^(0+128)
  4213  0CBC                     l2541:	
  4214                           ;displayOptions.c: 61:     while( !EUSART_is_tx_ready() ) ;
  4215                           
  4216  0CBC  318C  2483  318C   	fcall	_EUSART_is_tx_ready
  4217  0CBF  3A00               	xorlw	0
  4218  0CC0  1903               	skipnz
  4219  0CC1  2CBC               	goto	l2541
  4220                           
  4221                           ;displayOptions.c: 62:     puts( string );
  4222  0CC2  0021               	movlb	1	; select bank1
  4223  0CC3  0838               	movf	writeString@string^(0+128),w
  4224  0CC4  00B3               	movwf	puts@s^(0+128)
  4225  0CC5  3001               	movlw	1
  4226  0CC6  00B4               	movwf	(puts@s+1)^(0+128)
  4227  0CC7  318D  2519  318C   	fcall	_puts
  4228                           
  4229                           ;displayOptions.c: 63:     _delay((unsigned long)((200)*(500000/4000000.0)));
  4230  0CCA  3008               	movlw	8
  4231  0CCB                     u2737:	
  4232  0CCB  0B89               	decfsz	9,f
  4233  0CCC  2CCB               	goto	u2737
  4234  0CCD  0000               	nop
  4235  0CCE  0008               	return
  4236  0CCF                     __end_of_writeString:	
  4237                           
  4238                           	psect	text2
  4239  0E56                     __ptext2:	
  4240 ;; *************** function _setCursor *****************
  4241 ;; Defined at:
  4242 ;;		line 72 in file "displayOptions.c"
  4243 ;; Parameters:    Size  Location     Type
  4244 ;;  a               1    wreg     unsigned char 
  4245 ;;  b               1    1[BANK1 ] unsigned char 
  4246 ;; Auto vars:     Size  Location     Type
  4247 ;;  a               1    4[BANK1 ] unsigned char 
  4248 ;; Return value:  Size  Location     Type
  4249 ;;                  1    wreg      void 
  4250 ;; Registers used:
  4251 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4252 ;; Tracked objects:
  4253 ;;		On entry : 0/0
  4254 ;;		On exit  : 0/0
  4255 ;;		Unchanged: 0/0
  4256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4257 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4258 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4259 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4260 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4261 ;;Total ram usage:        4 bytes
  4262 ;; Hardware stack levels used:    1
  4263 ;; Hardware stack levels required when called:    7
  4264 ;; This function calls:
  4265 ;;		_EUSART_Write
  4266 ;;		_EUSART_is_tx_ready
  4267 ;; This function is called by:
  4268 ;;		_main
  4269 ;; This function uses a non-reentrant model
  4270 ;;
  4271                           
  4272                           
  4273                           ;psect for function _setCursor
  4274  0E56                     _setCursor:	
  4275                           
  4276                           ;incstack = 0
  4277                           ; Regs used in _setCursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4278                           ;setCursor@a stored from wreg
  4279  0E56  0021               	movlb	1	; select bank1
  4280  0E57  00A4               	movwf	setCursor@a^(0+128)
  4281  0E58                     l2515:	
  4282                           ;displayOptions.c: 73:     while( !EUSART_is_tx_ready() ) ;
  4283                           
  4284  0E58  318C  2483  318E   	fcall	_EUSART_is_tx_ready
  4285  0E5B  3A00               	xorlw	0
  4286  0E5C  1903               	skipnz
  4287  0E5D  2E58               	goto	l2515
  4288                           
  4289                           ;displayOptions.c: 74:     EUSART_Write( 254 );
  4290  0E5E  30FE               	movlw	254
  4291  0E5F  318C  2452  318E   	fcall	_EUSART_Write
  4292                           
  4293                           ;displayOptions.c: 75:     _delay((unsigned long)((200)*(500000/4000000.0)));
  4294  0E62  3008               	movlw	8
  4295  0E63                     u2747:	
  4296  0E63  0B89               	decfsz	9,f
  4297  0E64  2E63               	goto	u2747
  4298  0E65  0000               	nop
  4299                           
  4300                           ;displayOptions.c: 76:     switch ( a ){
  4301  0E66  2E7B               	goto	l2531
  4302  0E67                     l2521:	
  4303                           
  4304                           ;displayOptions.c: 78:         {;displayOptions.c: 79:             EUSART_Write(128 + 0 
      +                          + b) ;
  4305  0E67  0821               	movf	setCursor@b^(0+128),w
  4306  0E68  3E80               	addlw	128
  4307  0E69  318C  2452         	fcall	_EUSART_Write
  4308                           
  4309                           ;displayOptions.c: 80:             break ;
  4310  0E6B  0008               	return
  4311  0E6C                     l2523:	
  4312                           
  4313                           ;displayOptions.c: 83:         {;displayOptions.c: 84:            EUSART_Write(128 + 64 
      +                          + b) ;
  4314  0E6C  0821               	movf	setCursor@b^(0+128),w
  4315  0E6D  3EC0               	addlw	192
  4316  0E6E  318C  2452         	fcall	_EUSART_Write
  4317                           
  4318                           ;displayOptions.c: 85:            break ;
  4319  0E70  0008               	return
  4320  0E71                     l2525:	
  4321                           
  4322                           ;displayOptions.c: 88:         {;displayOptions.c: 89:             EUSART_Write(128 + 20
      +                           + b) ;
  4323  0E71  0821               	movf	setCursor@b^(0+128),w
  4324  0E72  3E94               	addlw	148
  4325  0E73  318C  2452         	fcall	_EUSART_Write
  4326                           
  4327                           ;displayOptions.c: 90:             break ;
  4328  0E75  0008               	return
  4329  0E76                     l2527:	
  4330                           
  4331                           ;displayOptions.c: 93:         {;displayOptions.c: 94:             EUSART_Write(128 + 84
      +                           + b) ;
  4332  0E76  0821               	movf	setCursor@b^(0+128),w
  4333  0E77  3ED4               	addlw	212
  4334  0E78  318C  2452         	fcall	_EUSART_Write
  4335                           
  4336                           ;displayOptions.c: 95:             break ;
  4337  0E7A  0008               	return
  4338  0E7B                     l2531:	
  4339  0E7B  0021               	movlb	1	; select bank1
  4340  0E7C  0824               	movf	setCursor@a^(0+128),w
  4341  0E7D  00A2               	movwf	??_setCursor^(0+128)
  4342  0E7E  01A3               	clrf	(??_setCursor^(0+128)+1)
  4343                           
  4344                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4345                           ; Switch size 1, requested type "simple"
  4346                           ; Number of cases is 1, Range of values is 0 to 0
  4347                           ; switch strategies available:
  4348                           ; Name         Instructions Cycles
  4349                           ; simple_byte            4     3 (average)
  4350                           ; direct_byte            8     6 (fixed)
  4351                           ; jumptable            260     6 (fixed)
  4352                           ;	Chosen strategy is simple_byte
  4353  0E7F  0823               	movf	(??_setCursor+1)^(0+128),w
  4354  0E80  3A00               	xorlw	0	; case 0
  4355  0E81  1903               	skipnz
  4356  0E82  2E84               	goto	l2759
  4357  0E83  2E92               	goto	l353
  4358  0E84                     l2759:	
  4359                           
  4360                           ; Switch size 1, requested type "simple"
  4361                           ; Number of cases is 4, Range of values is 1 to 4
  4362                           ; switch strategies available:
  4363                           ; Name         Instructions Cycles
  4364                           ; simple_byte           13     7 (average)
  4365                           ; direct_byte           17     9 (fixed)
  4366                           ; jumptable            263     9 (fixed)
  4367                           ;	Chosen strategy is simple_byte
  4368  0E84  0822               	movf	??_setCursor^(0+128),w
  4369  0E85  3A01               	xorlw	1	; case 1
  4370  0E86  1903               	skipnz
  4371  0E87  2E67               	goto	l2521
  4372  0E88  3A03               	xorlw	3	; case 2
  4373  0E89  1903               	skipnz
  4374  0E8A  2E6C               	goto	l2523
  4375  0E8B  3A01               	xorlw	1	; case 3
  4376  0E8C  1903               	skipnz
  4377  0E8D  2E71               	goto	l2525
  4378  0E8E  3A07               	xorlw	7	; case 4
  4379  0E8F  1903               	skipnz
  4380  0E90  2E76               	goto	l2527
  4381  0E91  2E92               	goto	l353
  4382  0E92                     l353:	
  4383  0E92  0008               	return
  4384  0E93                     __end_of_setCursor:	
  4385                           
  4386                           	psect	text3
  4387  0C83                     __ptext3:	
  4388 ;; *************** function _EUSART_is_tx_ready *****************
  4389 ;; Defined at:
  4390 ;;		line 93 in file "mcc_generated_files/eusart.c"
  4391 ;; Parameters:    Size  Location     Type
  4392 ;;		None
  4393 ;; Auto vars:     Size  Location     Type
  4394 ;;		None
  4395 ;; Return value:  Size  Location     Type
  4396 ;;                  1    wreg      _Bool 
  4397 ;; Registers used:
  4398 ;;		wreg, status,2
  4399 ;; Tracked objects:
  4400 ;;		On entry : 0/0
  4401 ;;		On exit  : 0/0
  4402 ;;		Unchanged: 0/0
  4403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4405 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4407 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4408 ;;Total ram usage:        1 bytes
  4409 ;; Hardware stack levels used:    1
  4410 ;; Hardware stack levels required when called:    6
  4411 ;; This function calls:
  4412 ;;		Nothing
  4413 ;; This function is called by:
  4414 ;;		_writeString
  4415 ;;		_setCursor
  4416 ;;		_backlightBrightness
  4417 ;;		_writePrintf
  4418 ;; This function uses a non-reentrant model
  4419 ;;
  4420                           
  4421                           
  4422                           ;psect for function _EUSART_is_tx_ready
  4423  0C83                     _EUSART_is_tx_ready:	
  4424                           
  4425                           ;mcc_generated_files/eusart.c: 95:     return (_Bool)(PIR1bits.TXIF && TX1STAbits.TXEN);
  4426                           
  4427                           ;incstack = 0
  4428                           ; Regs used in _EUSART_is_tx_ready: [wreg+status,2]
  4429  0C83  0021               	movlb	1	; select bank1
  4430  0C84  01A0               	clrf	_EUSART_is_tx_ready$167^(0+128)
  4431  0C85  0020               	movlb	0	; select bank0
  4432  0C86  1E10               	btfss	16,4	;volatile
  4433  0C87  2C8E               	goto	l2381
  4434  0C88  0023               	movlb	3	; select bank3
  4435  0C89  1E9E               	btfss	30,5	;volatile
  4436  0C8A  2C8E               	goto	l2381
  4437  0C8B  0021               	movlb	1	; select bank1
  4438  0C8C  01A0               	clrf	_EUSART_is_tx_ready$167^(0+128)
  4439  0C8D  0AA0               	incf	_EUSART_is_tx_ready$167^(0+128),f
  4440  0C8E                     l2381:	
  4441  0C8E  0021               	movlb	1	; select bank1
  4442  0C8F  0820               	movf	_EUSART_is_tx_ready$167^(0+128),w
  4443  0C90  0008               	return
  4444  0C91                     __end_of_EUSART_is_tx_ready:	
  4445                           
  4446                           	psect	text4
  4447  0C1D                     __ptext4:	
  4448 ;; *************** function _resetCursor *****************
  4449 ;; Defined at:
  4450 ;;		line 56 in file "displayOptions.c"
  4451 ;; Parameters:    Size  Location     Type
  4452 ;;		None
  4453 ;; Auto vars:     Size  Location     Type
  4454 ;;		None
  4455 ;; Return value:  Size  Location     Type
  4456 ;;                  1    wreg      void 
  4457 ;; Registers used:
  4458 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4459 ;; Tracked objects:
  4460 ;;		On entry : 0/0
  4461 ;;		On exit  : 0/0
  4462 ;;		Unchanged: 0/0
  4463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4468 ;;Total ram usage:        0 bytes
  4469 ;; Hardware stack levels used:    1
  4470 ;; Hardware stack levels required when called:   11
  4471 ;; This function calls:
  4472 ;;		_puts
  4473 ;; This function is called by:
  4474 ;;		_main
  4475 ;; This function uses a non-reentrant model
  4476 ;;
  4477                           
  4478                           
  4479                           ;psect for function _resetCursor
  4480  0C1D                     _resetCursor:	
  4481                           
  4482                           ;displayOptions.c: 57:     puts("|-");
  4483                           
  4484                           ;incstack = 0
  4485                           ; Regs used in _resetCursor: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4486  0C1D  300F               	movlw	low (STR_3| (0+32768))
  4487  0C1E  0021               	movlb	1	; select bank1
  4488  0C1F  00B3               	movwf	puts@s^(0+128)
  4489  0C20  3090               	movlw	high (STR_3| (0+32768))
  4490  0C21  00B4               	movwf	(puts@s^(0+128)+1)
  4491  0C22  318D  2519         	fcall	_puts
  4492  0C24  0008               	return
  4493  0C25                     __end_of_resetCursor:	
  4494                           
  4495                           	psect	text5
  4496  0D19                     __ptext5:	
  4497 ;; *************** function _puts *****************
  4498 ;; Defined at:
  4499 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\puts.c"
  4500 ;; Parameters:    Size  Location     Type
  4501 ;;  s               2   19[BANK1 ] PTR const unsigned char 
  4502 ;;		 -> STR_3(3), hrDisp(13), distanceDisp(11), speedDisp(8), 
  4503 ;; Auto vars:     Size  Location     Type
  4504 ;;  r               2    0        int 
  4505 ;; Return value:  Size  Location     Type
  4506 ;;                  2   19[BANK1 ] int 
  4507 ;; Registers used:
  4508 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4509 ;; Tracked objects:
  4510 ;;		On entry : 0/0
  4511 ;;		On exit  : 0/0
  4512 ;;		Unchanged: 0/0
  4513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4514 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4515 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4517 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  4518 ;;Total ram usage:        5 bytes
  4519 ;; Hardware stack levels used:    1
  4520 ;; Hardware stack levels required when called:   10
  4521 ;; This function calls:
  4522 ;;		_fputc
  4523 ;;		_fputs
  4524 ;; This function is called by:
  4525 ;;		_resetCursor
  4526 ;;		_writeString
  4527 ;; This function uses a non-reentrant model
  4528 ;;
  4529                           
  4530                           
  4531                           ;psect for function _puts
  4532  0D19                     _puts:	
  4533                           
  4534                           ;incstack = 0
  4535                           ; Regs used in _puts: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4536  0D19  0021               	movlb	1	; select bank1
  4537  0D1A  01B7               	clrf	_puts$1033^(0+128)
  4538  0D1B  0AB7               	incf	_puts$1033^(0+128),f
  4539  0D1C  0834               	movf	(puts@s+1)^(0+128),w
  4540  0D1D  00AB               	movwf	(fputs@s+1)^(0+128)
  4541  0D1E  0833               	movf	puts@s^(0+128),w
  4542  0D1F  00AA               	movwf	fputs@s^(0+128)
  4543  0D20  01AC               	clrf	fputs@fp^(0+128)
  4544  0D21  318D  2597  318D   	fcall	_fputs
  4545  0D24  0021               	movlb	1	; select bank1
  4546  0D25  1BAB               	btfsc	(?_fputs+1)^(0+128),7
  4547  0D26  0008               	return
  4548  0D27  300A               	movlw	10
  4549  0D28  00A2               	movwf	fputc@c^(0+128)
  4550  0D29  3000               	movlw	0
  4551  0D2A  00A3               	movwf	(fputc@c^(0+128)+1)
  4552  0D2B  01A4               	clrf	fputc@fp^(0+128)
  4553  0D2C  318E  2693  318D   	fcall	_fputc
  4554  0D2F  0021               	movlb	1	; select bank1
  4555  0D30  1BA3               	btfsc	(?_fputc+1)^(0+128),7
  4556  0D31  0008               	return
  4557  0D32  01B7               	clrf	_puts$1033^(0+128)
  4558  0D33  0008               	return
  4559  0D34                     __end_of_puts:	
  4560                           
  4561                           	psect	text6
  4562  0CA5                     __ptext6:	
  4563 ;; *************** function _printf *****************
  4564 ;; Defined at:
  4565 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  4566 ;; Parameters:    Size  Location     Type
  4567 ;;  fmt             2    5[BANK2 ] PTR const unsigned char 
  4568 ;;		 -> STR_2(6), STR_1(9), 
  4569 ;; Auto vars:     Size  Location     Type
  4570 ;;  ret             2    0        int 
  4571 ;;  ap              1   13[BANK2 ] PTR void [1]
  4572 ;;		 -> ?_printf(2), 
  4573 ;; Return value:  Size  Location     Type
  4574 ;;                  2    5[BANK2 ] int 
  4575 ;; Registers used:
  4576 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4577 ;; Tracked objects:
  4578 ;;		On entry : 0/0
  4579 ;;		On exit  : 0/0
  4580 ;;		Unchanged: 0/0
  4581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4582 ;;      Params:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0
  4583 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  4584 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4585 ;;      Totals:         0       0       1       9       0       0       0       0       0       0       0       0       
      +0       0
  4586 ;;Total ram usage:       10 bytes
  4587 ;; Hardware stack levels used:    1
  4588 ;; Hardware stack levels required when called:   14
  4589 ;; This function calls:
  4590 ;;		_vfprintf
  4591 ;; This function is called by:
  4592 ;;		_main
  4593 ;;		_writePrintf
  4594 ;; This function uses a non-reentrant model
  4595 ;;
  4596                           
  4597                           
  4598                           ;psect for function _printf
  4599  0CA5                     _printf:	
  4600                           
  4601                           ;incstack = 0
  4602                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4603  0CA5  3047               	movlw	(low ((?_printf| (0+256)+2)))& (0+255)
  4604  0CA6  0021               	movlb	1	; select bank1
  4605  0CA7  00EF               	movwf	??_printf^(0+128)
  4606  0CA8  086F               	movf	??_printf^(0+128),w
  4607  0CA9  0022               	movlb	2	; select bank2
  4608  0CAA  00CD               	movwf	printf@ap^(0+256)
  4609  0CAB  0846               	movf	(printf@fmt+1)^(0+256),w
  4610  0CAC  0021               	movlb	1	; select bank1
  4611  0CAD  00ED               	movwf	(vfprintf@fmt+1)^(0+128)
  4612  0CAE  0022               	movlb	2	; select bank2
  4613  0CAF  0845               	movf	printf@fmt^(0+256),w
  4614  0CB0  0021               	movlb	1	; select bank1
  4615  0CB1  00EC               	movwf	vfprintf@fmt^(0+128)
  4616  0CB2  304D               	movlw	(low (printf@ap| (0+256)))& (0+255)
  4617  0CB3  00EF               	movwf	??_printf^(0+128)
  4618  0CB4  086F               	movf	??_printf^(0+128),w
  4619  0CB5  00EE               	movwf	vfprintf@ap^(0+128)
  4620  0CB6  3000               	movlw	0
  4621  0CB7  318E  2622         	fcall	_vfprintf
  4622  0CB9  0008               	return
  4623  0CBA                     __end_of_printf:	
  4624                           
  4625                           	psect	text7
  4626  0E22                     __ptext7:	
  4627 ;; *************** function _vfprintf *****************
  4628 ;; Defined at:
  4629 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4630 ;; Parameters:    Size  Location     Type
  4631 ;;  fp              1    wreg     PTR struct _IO_FILE
  4632 ;;		 -> NULL(0), 
  4633 ;;  fmt             2   76[BANK1 ] PTR const unsigned char 
  4634 ;;		 -> STR_2(6), STR_1(9), 
  4635 ;;  ap              1   78[BANK1 ] PTR PTR void 
  4636 ;;		 -> printf@ap(1), 
  4637 ;; Auto vars:     Size  Location     Type
  4638 ;;  fp              1    2[BANK2 ] PTR struct _IO_FILE
  4639 ;;		 -> NULL(0), 
  4640 ;;  cfmt            2    3[BANK2 ] PTR unsigned char 
  4641 ;;		 -> STR_2(6), STR_1(9), 
  4642 ;; Return value:  Size  Location     Type
  4643 ;;                  2   76[BANK1 ] int 
  4644 ;; Registers used:
  4645 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4646 ;; Tracked objects:
  4647 ;;		On entry : 0/0
  4648 ;;		On exit  : 0/0
  4649 ;;		Unchanged: 0/0
  4650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4651 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4652 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  4653 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  4654 ;;      Totals:         0       0       3       5       0       0       0       0       0       0       0       0       
      +0       0
  4655 ;;Total ram usage:        8 bytes
  4656 ;; Hardware stack levels used:    1
  4657 ;; Hardware stack levels required when called:   13
  4658 ;; This function calls:
  4659 ;;		_vfpfcnvrt
  4660 ;; This function is called by:
  4661 ;;		_printf
  4662 ;; This function uses a non-reentrant model
  4663 ;;
  4664                           
  4665                           
  4666                           ;psect for function _vfprintf
  4667  0E22                     _vfprintf:	
  4668                           
  4669                           ;incstack = 0
  4670                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4671                           ;vfprintf@fp stored from wreg
  4672  0E22  0022               	movlb	2	; select bank2
  4673  0E23  00C2               	movwf	vfprintf@fp^(0+256)
  4674                           
  4675                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  4676  0E24  0021               	movlb	1	; select bank1
  4677  0E25  086D               	movf	(vfprintf@fmt+1)^(0+128),w
  4678  0E26  0022               	movlb	2	; select bank2
  4679  0E27  00C4               	movwf	(vfprintf@cfmt+1)^(0+256)
  4680  0E28  0021               	movlb	1	; select bank1
  4681  0E29  086C               	movf	vfprintf@fmt^(0+128),w
  4682  0E2A  0022               	movlb	2	; select bank2
  4683  0E2B  00C3               	movwf	vfprintf@cfmt^(0+256)
  4684                           
  4685                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  4686  0E2C  01D7               	clrf	_nout^(0+256)
  4687  0E2D  01D8               	clrf	(_nout+1)^(0+256)
  4688  0E2E                     l2679:	
  4689                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  4690                           
  4691                           
  4692                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  4693  0E2E  0843               	movf	vfprintf@cfmt^(0+256),w
  4694  0E2F  0084               	movwf	4
  4695  0E30  0844               	movf	(vfprintf@cfmt+1)^(0+256),w
  4696  0E31  0085               	movwf	5
  4697  0E32  0012               	moviw fsr0++
  4698  0E33  1903               	btfsc	3,2
  4699  0E34  2E4E               	goto	l2681
  4700                           
  4701                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  4702  0E35  3043               	movlw	(low (vfprintf@cfmt| (0+256)))& (0+255)
  4703  0E36  00C0               	movwf	??_vfprintf^(0+256)
  4704  0E37  0840               	movf	??_vfprintf^(0+256),w
  4705  0E38  0021               	movlb	1	; select bank1
  4706  0E39  00DA               	movwf	vfpfcnvrt@fmt^(0+128)
  4707  0E3A  086E               	movf	vfprintf@ap^(0+128),w
  4708  0E3B  0022               	movlb	2	; select bank2
  4709  0E3C  00C1               	movwf	(??_vfprintf+1)^(0+256)
  4710  0E3D  0841               	movf	(??_vfprintf+1)^(0+256),w
  4711  0E3E  0021               	movlb	1	; select bank1
  4712  0E3F  00DB               	movwf	vfpfcnvrt@ap^(0+128)
  4713  0E40  0022               	movlb	2	; select bank2
  4714  0E41  0842               	movf	vfprintf@fp^(0+256),w
  4715  0E42  3183  23BA  318E   	fcall	_vfpfcnvrt
  4716  0E45  0021               	movlb	1	; select bank1
  4717  0E46  085A               	movf	?_vfpfcnvrt^(0+128),w
  4718  0E47  0022               	movlb	2	; select bank2
  4719  0E48  07D7               	addwf	_nout^(0+256),f
  4720  0E49  0021               	movlb	1	; select bank1
  4721  0E4A  085B               	movf	(?_vfpfcnvrt+1)^(0+128),w
  4722  0E4B  0022               	movlb	2	; select bank2
  4723  0E4C  3DD8               	addwfc	(_nout+1)^(0+256),f
  4724  0E4D  2E2E               	goto	l2679
  4725  0E4E                     l2681:	
  4726                           
  4727                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  4728  0E4E  0858               	movf	(_nout+1)^(0+256),w
  4729  0E4F  0021               	movlb	1	; select bank1
  4730  0E50  00ED               	movwf	(?_vfprintf+1)^(0+128)
  4731  0E51  0022               	movlb	2	; select bank2
  4732  0E52  0857               	movf	_nout^(0+256),w
  4733  0E53  0021               	movlb	1	; select bank1
  4734  0E54  00EC               	movwf	?_vfprintf^(0+128)
  4735  0E55  0008               	return
  4736  0E56                     __end_of_vfprintf:	
  4737                           
  4738                           	psect	text8
  4739  03BA                     __ptext8:	
  4740 ;; *************** function _vfpfcnvrt *****************
  4741 ;; Defined at:
  4742 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4743 ;; Parameters:    Size  Location     Type
  4744 ;;  fp              1    wreg     PTR struct _IO_FILE
  4745 ;;		 -> NULL(0), 
  4746 ;;  fmt             1   58[BANK1 ] PTR PTR unsigned char 
  4747 ;;		 -> vfprintf@cfmt(2), 
  4748 ;;  ap              1   59[BANK1 ] PTR PTR void 
  4749 ;;		 -> printf@ap(1), 
  4750 ;; Auto vars:     Size  Location     Type
  4751 ;;  fp              1   75[BANK1 ] PTR struct _IO_FILE
  4752 ;;		 -> NULL(0), 
  4753 ;;  ll              8   65[BANK1 ] long long 
  4754 ;;  llu             8    0        unsigned long long 
  4755 ;;  f               4    0        unsigned long long 
  4756 ;;  ct              3    0        unsigned char [3]
  4757 ;;  vp              2   73[BANK1 ] PTR void 
  4758 ;;		 -> ?_printf(2), rpm(4), 
  4759 ;;  i               2    0        int 
  4760 ;;  done            2    0        int 
  4761 ;;  cp              2    0        PTR unsigned char 
  4762 ;;  c               1    0        unsigned char 
  4763 ;; Return value:  Size  Location     Type
  4764 ;;                  2   58[BANK1 ] int 
  4765 ;; Registers used:
  4766 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4767 ;; Tracked objects:
  4768 ;;		On entry : 0/0
  4769 ;;		On exit  : 0/0
  4770 ;;		Unchanged: 0/0
  4771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4772 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4773 ;;      Locals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0
  4774 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  4775 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0
  4776 ;;Total ram usage:       18 bytes
  4777 ;; Hardware stack levels used:    1
  4778 ;; Hardware stack levels required when called:   12
  4779 ;; This function calls:
  4780 ;;		_dtoa
  4781 ;;		_fputc
  4782 ;; This function is called by:
  4783 ;;		_vfprintf
  4784 ;; This function uses a non-reentrant model
  4785 ;;
  4786                           
  4787                           
  4788                           ;psect for function _vfpfcnvrt
  4789  03BA                     _vfpfcnvrt:	
  4790                           
  4791                           ;incstack = 0
  4792                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4793                           ;vfpfcnvrt@fp stored from wreg
  4794  03BA  0021               	movlb	1	; select bank1
  4795  03BB  00EB               	movwf	vfpfcnvrt@fp^(0+128)
  4796                           
  4797                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  4798  03BC  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  4799  03BD  0086               	movwf	6
  4800  03BE  3001               	movlw	1	; select bank2/3
  4801  03BF  0087               	movwf	7
  4802  03C0  3F40               	moviw [0]fsr1
  4803  03C1  00DC               	movwf	??_vfpfcnvrt^(0+128)
  4804  03C2  3F41               	moviw [1]fsr1
  4805  03C3  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  4806  03C4  085C               	movf	??_vfpfcnvrt^(0+128),w
  4807  03C5  0084               	movwf	4
  4808  03C6  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4809  03C7  0085               	movwf	5
  4810  03C8  0012               	moviw fsr0++
  4811  03C9  3A25               	xorlw	37
  4812  03CA  1D03               	btfss	3,2
  4813  03CB  2CA3               	goto	l2353
  4814                           
  4815                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  4816  03CC  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  4817  03CD  0086               	movwf	6
  4818  03CE  3001               	movlw	1	; select bank2/3
  4819  03CF  0087               	movwf	7
  4820  03D0  3001               	movlw	1
  4821  03D1  0781               	addwf	1,f
  4822  03D2  3141               	addfsr 1,1
  4823  03D3  1803               	skipnc
  4824  03D4  0A81               	incf	1,f
  4825                           
  4826                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  4827  03D5  0020               	movlb	0	; select bank0
  4828  03D6  01D9               	clrf	_width
  4829  03D7  01DA               	clrf	_width+1
  4830  03D8  01DD               	clrf	_flags
  4831  03D9  01DE               	clrf	_flags+1
  4832                           
  4833                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  4834  03DA  30FF               	movlw	255
  4835  03DB  00DB               	movwf	_prec
  4836  03DC  30FF               	movlw	255
  4837  03DD  00DC               	movwf	_prec+1
  4838                           
  4839                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  4840  03DE  0021               	movlb	1	; select bank1
  4841  03DF  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  4842  03E0  0086               	movwf	6
  4843  03E1  3001               	movlw	1	; select bank2/3
  4844  03E2  0087               	movwf	7
  4845  03E3  3F40               	moviw [0]fsr1
  4846  03E4  00DC               	movwf	??_vfpfcnvrt^(0+128)
  4847  03E5  3F41               	moviw [1]fsr1
  4848  03E6  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  4849  03E7  085C               	movf	??_vfpfcnvrt^(0+128),w
  4850  03E8  0084               	movwf	4
  4851  03E9  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4852  03EA  0085               	movwf	5
  4853  03EB  0012               	moviw fsr0++
  4854  03EC  3A64               	xorlw	100
  4855  03ED  1903               	btfsc	3,2
  4856  03EE  2BFF               	goto	l2317
  4857  03EF  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  4858  03F0  0086               	movwf	6
  4859  03F1  3001               	movlw	1	; select bank2/3
  4860  03F2  0087               	movwf	7
  4861  03F3  3F40               	moviw [0]fsr1
  4862  03F4  00DC               	movwf	??_vfpfcnvrt^(0+128)
  4863  03F5  3F41               	moviw [1]fsr1
  4864  03F6  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  4865  03F7  085C               	movf	??_vfpfcnvrt^(0+128),w
  4866  03F8  0084               	movwf	4
  4867  03F9  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4868  03FA  0085               	movwf	5
  4869  03FB  0012               	moviw fsr0++
  4870  03FC  3A69               	xorlw	105
  4871  03FD  1D03               	btfss	3,2
  4872  03FE  2C3C               	goto	l2325
  4873  03FF                     l2317:	
  4874                           
  4875                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  4876  03FF  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  4877  0400  0086               	movwf	6
  4878  0401  3001               	movlw	1	; select bank2/3
  4879  0402  0087               	movwf	7
  4880  0403  3001               	movlw	1
  4881  0404  0781               	addwf	1,f
  4882  0405  3141               	addfsr 1,1
  4883  0406  1803               	skipnc
  4884  0407  0A81               	incf	1,f
  4885                           
  4886                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4887  0408  085B               	movf	vfpfcnvrt@ap^(0+128),w
  4888  0409  0086               	movwf	6
  4889  040A  3001               	movlw	1	; select bank2/3
  4890  040B  0087               	movwf	7
  4891  040C  0801               	movf	1,w
  4892  040D  0084               	movwf	4
  4893  040E  3001               	movlw	1	; select bank2/3
  4894  040F  0085               	movwf	5
  4895  0410  3002               	movlw	2
  4896  0411  0781               	addwf	1,f
  4897  0412  3F00               	moviw [0]fsr0
  4898  0413  00DC               	movwf	??_vfpfcnvrt^(0+128)
  4899  0414  3F01               	moviw [1]fsr0
  4900  0415  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  4901  0416  085C               	movf	??_vfpfcnvrt^(0+128),w
  4902  0417  00E1               	movwf	vfpfcnvrt@ll^(0+128)
  4903  0418  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4904  0419  00E2               	movwf	(vfpfcnvrt@ll+1)^(0+128)
  4905  041A  0D89               	rlf	9,f
  4906  041B  3B89               	subwfb	9,f
  4907  041C  0989               	comf	9,f
  4908  041D  00E3               	movwf	(vfpfcnvrt@ll+2)^(0+128)
  4909  041E  00E4               	movwf	(vfpfcnvrt@ll+3)^(0+128)
  4910  041F  00E5               	movwf	(vfpfcnvrt@ll+4)^(0+128)
  4911  0420  00E6               	movwf	(vfpfcnvrt@ll+5)^(0+128)
  4912  0421  00E7               	movwf	(vfpfcnvrt@ll+6)^(0+128)
  4913  0422  00E8               	movwf	(vfpfcnvrt@ll+7)^(0+128)
  4914                           
  4915                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  4916  0423  0861               	movf	vfpfcnvrt@ll^(0+128),w
  4917  0424  00BC               	movwf	dtoa@d^(0+128)
  4918  0425  0862               	movf	(vfpfcnvrt@ll+1)^(0+128),w
  4919  0426  00BD               	movwf	(dtoa@d+1)^(0+128)
  4920  0427  0863               	movf	(vfpfcnvrt@ll+2)^(0+128),w
  4921  0428  00BE               	movwf	(dtoa@d+2)^(0+128)
  4922  0429  0864               	movf	(vfpfcnvrt@ll+3)^(0+128),w
  4923  042A  00BF               	movwf	(dtoa@d+3)^(0+128)
  4924  042B  0865               	movf	(vfpfcnvrt@ll+4)^(0+128),w
  4925  042C  00C0               	movwf	(dtoa@d+4)^(0+128)
  4926  042D  0866               	movf	(vfpfcnvrt@ll+5)^(0+128),w
  4927  042E  00C1               	movwf	(dtoa@d+5)^(0+128)
  4928  042F  0867               	movf	(vfpfcnvrt@ll+6)^(0+128),w
  4929  0430  00C2               	movwf	(dtoa@d+6)^(0+128)
  4930  0431  0868               	movf	(vfpfcnvrt@ll+7)^(0+128),w
  4931  0432  00C3               	movwf	(dtoa@d+7)^(0+128)
  4932  0433  086B               	movf	vfpfcnvrt@fp^(0+128),w
  4933  0434  3182  2269         	fcall	_dtoa
  4934  0436  0021               	movlb	1	; select bank1
  4935  0437  083D               	movf	(?_dtoa+1)^(0+128),w
  4936  0438  00DB               	movwf	(?_vfpfcnvrt+1)^(0+128)
  4937  0439  083C               	movf	?_dtoa^(0+128),w
  4938  043A  00DA               	movwf	?_vfpfcnvrt^(0+128)
  4939  043B  0008               	return
  4940  043C                     l2325:	
  4941                           
  4942                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1077:      
      +                             if (*fmt[0] == 'n') {
  4943  043C  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  4944  043D  0086               	movwf	6
  4945  043E  3001               	movlw	1	; select bank2/3
  4946  043F  0087               	movwf	7
  4947  0440  3F40               	moviw [0]fsr1
  4948  0441  00DC               	movwf	??_vfpfcnvrt^(0+128)
  4949  0442  3F41               	moviw [1]fsr1
  4950  0443  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  4951  0444  085C               	movf	??_vfpfcnvrt^(0+128),w
  4952  0445  0084               	movwf	4
  4953  0446  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4954  0447  0085               	movwf	5
  4955  0448  0012               	moviw fsr0++
  4956  0449  3A6E               	xorlw	110
  4957  044A  1D03               	btfss	3,2
  4958  044B  2C70               	goto	l2337
  4959                           
  4960                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1078:      
      +                                 ++*fmt;
  4961  044C  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  4962  044D  0086               	movwf	6
  4963  044E  3001               	movlw	1	; select bank2/3
  4964  044F  0087               	movwf	7
  4965  0450  3001               	movlw	1
  4966  0451  0781               	addwf	1,f
  4967  0452  3141               	addfsr 1,1
  4968  0453  1803               	skipnc
  4969  0454  0A81               	incf	1,f
  4970                           
  4971                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1079:      
      +                                 vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
  4972  0455  085B               	movf	vfpfcnvrt@ap^(0+128),w
  4973  0456  0086               	movwf	6
  4974  0457  3001               	movlw	1	; select bank2/3
  4975  0458  0087               	movwf	7
  4976  0459  0801               	movf	1,w
  4977  045A  0084               	movwf	4
  4978  045B  3001               	movlw	1	; select bank2/3
  4979  045C  0085               	movwf	5
  4980  045D  3002               	movlw	2
  4981  045E  0781               	addwf	1,f
  4982  045F  3F00               	moviw [0]fsr0
  4983  0460  00E9               	movwf	vfpfcnvrt@vp^(0+128)
  4984  0461  3F01               	moviw [1]fsr0
  4985  0462  00EA               	movwf	(vfpfcnvrt@vp+1)^(0+128)
  4986                           
  4987                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1080:      
      +                                 *(int *)vp = nout;
  4988  0463  0869               	movf	vfpfcnvrt@vp^(0+128),w
  4989  0464  0086               	movwf	6
  4990  0465  086A               	movf	(vfpfcnvrt@vp+1)^(0+128),w
  4991  0466  0087               	movwf	7
  4992  0467  0022               	movlb	2	; select bank2
  4993  0468  0857               	movf	_nout^(0+256),w
  4994  0469  3FC0               	movwi [0]fsr1
  4995  046A  0858               	movf	(_nout+1)^(0+256),w
  4996  046B  3FC1               	movwi [1]fsr1
  4997  046C                     l2333:	
  4998                           
  4999                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1081:      
      +                                 return 0;
  5000  046C  0021               	movlb	1	; select bank1
  5001  046D  01DA               	clrf	?_vfpfcnvrt^(0+128)
  5002  046E  01DB               	clrf	(?_vfpfcnvrt+1)^(0+128)
  5003  046F  0008               	return
  5004  0470                     l2337:	
  5005                           
  5006                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  5007  0470  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5008  0471  0086               	movwf	6
  5009  0472  3001               	movlw	1	; select bank2/3
  5010  0473  0087               	movwf	7
  5011  0474  3F40               	moviw [0]fsr1
  5012  0475  00DC               	movwf	??_vfpfcnvrt^(0+128)
  5013  0476  3F41               	moviw [1]fsr1
  5014  0477  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5015  0478  085C               	movf	??_vfpfcnvrt^(0+128),w
  5016  0479  0084               	movwf	4
  5017  047A  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5018  047B  0085               	movwf	5
  5019  047C  0012               	moviw fsr0++
  5020  047D  3A25               	xorlw	37
  5021  047E  1D03               	btfss	3,2
  5022  047F  2C99               	goto	l2347
  5023                           
  5024                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  5025  0480  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5026  0481  0086               	movwf	6
  5027  0482  3001               	movlw	1	; select bank2/3
  5028  0483  0087               	movwf	7
  5029  0484  3001               	movlw	1
  5030  0485  0781               	addwf	1,f
  5031  0486  3141               	addfsr 1,1
  5032  0487  1803               	skipnc
  5033  0488  0A81               	incf	1,f
  5034                           
  5035                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  5036  0489  3025               	movlw	37
  5037  048A  00A2               	movwf	fputc@c^(0+128)
  5038  048B  3000               	movlw	0
  5039  048C  00A3               	movwf	(fputc@c^(0+128)+1)
  5040  048D  086B               	movf	vfpfcnvrt@fp^(0+128),w
  5041  048E  00DC               	movwf	??_vfpfcnvrt^(0+128)
  5042  048F  085C               	movf	??_vfpfcnvrt^(0+128),w
  5043  0490  00A4               	movwf	fputc@fp^(0+128)
  5044  0491  318E  2693         	fcall	_fputc
  5045  0493                     l2343:	
  5046                           
  5047                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  5048  0493  3001               	movlw	1
  5049  0494  0021               	movlb	1	; select bank1
  5050  0495  00DA               	movwf	?_vfpfcnvrt^(0+128)
  5051  0496  3000               	movlw	0
  5052  0497  00DB               	movwf	(?_vfpfcnvrt^(0+128)+1)
  5053  0498  0008               	return
  5054  0499                     l2347:	
  5055                           
  5056                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  5057  0499  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5058  049A  0086               	movwf	6
  5059  049B  3001               	movlw	1	; select bank2/3
  5060  049C  0087               	movwf	7
  5061  049D  3001               	movlw	1
  5062  049E  0781               	addwf	1,f
  5063  049F  3141               	addfsr 1,1
  5064  04A0  1803               	skipnc
  5065  04A1  0A81               	incf	1,f
  5066  04A2  2C6C               	goto	l2333
  5067  04A3                     l2353:	
  5068                           
  5069                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  5070  04A3  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5071  04A4  0086               	movwf	6
  5072  04A5  3001               	movlw	1	; select bank2/3
  5073  04A6  0087               	movwf	7
  5074  04A7  3F40               	moviw [0]fsr1
  5075  04A8  00DC               	movwf	??_vfpfcnvrt^(0+128)
  5076  04A9  3F41               	moviw [1]fsr1
  5077  04AA  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5078  04AB  085C               	movf	??_vfpfcnvrt^(0+128),w
  5079  04AC  0084               	movwf	4
  5080  04AD  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5081  04AE  0085               	movwf	5
  5082  04AF  0800               	movf	0,w	;code access
  5083  04B0  00DE               	movwf	(??_vfpfcnvrt+2)^(0+128)
  5084  04B1  01DF               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  5085  04B2  085E               	movf	(??_vfpfcnvrt+2)^(0+128),w
  5086  04B3  00A2               	movwf	fputc@c^(0+128)
  5087  04B4  085F               	movf	(??_vfpfcnvrt+3)^(0+128),w
  5088  04B5  00A3               	movwf	(fputc@c+1)^(0+128)
  5089  04B6  086B               	movf	vfpfcnvrt@fp^(0+128),w
  5090  04B7  00E0               	movwf	(??_vfpfcnvrt+4)^(0+128)
  5091  04B8  0860               	movf	(??_vfpfcnvrt+4)^(0+128),w
  5092  04B9  00A4               	movwf	fputc@fp^(0+128)
  5093  04BA  318E  2693  3183   	fcall	_fputc
  5094                           
  5095                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  5096  04BD  0021               	movlb	1	; select bank1
  5097  04BE  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5098  04BF  0086               	movwf	6
  5099  04C0  3001               	movlw	1	; select bank2/3
  5100  04C1  0087               	movwf	7
  5101  04C2  3001               	movlw	1
  5102  04C3  0781               	addwf	1,f
  5103  04C4  3141               	addfsr 1,1
  5104  04C5  1803               	skipnc
  5105  04C6  0A81               	incf	1,f
  5106  04C7  2C93               	goto	l2343
  5107  04C8                     __end_of_vfpfcnvrt:	
  5108                           
  5109                           	psect	text9
  5110  0269                     __ptext9:	
  5111 ;; *************** function _dtoa *****************
  5112 ;; Defined at:
  5113 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5114 ;; Parameters:    Size  Location     Type
  5115 ;;  fp              1    wreg     PTR struct _IO_FILE
  5116 ;;		 -> NULL(0), 
  5117 ;;  d               8   28[BANK1 ] long long 
  5118 ;; Auto vars:     Size  Location     Type
  5119 ;;  fp              1   43[BANK1 ] PTR struct _IO_FILE
  5120 ;;		 -> NULL(0), 
  5121 ;;  n               8   48[BANK1 ] long long 
  5122 ;;  i               2   56[BANK1 ] int 
  5123 ;;  s               2   46[BANK1 ] int 
  5124 ;;  w               2   44[BANK1 ] int 
  5125 ;;  p               2   41[BANK1 ] int 
  5126 ;; Return value:  Size  Location     Type
  5127 ;;                  2   28[BANK1 ] int 
  5128 ;; Registers used:
  5129 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5130 ;; Tracked objects:
  5131 ;;		On entry : 0/0
  5132 ;;		On exit  : 0/0
  5133 ;;		Unchanged: 0/0
  5134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5135 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  5136 ;;      Locals:         0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0
  5137 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5138 ;;      Totals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0
  5139 ;;Total ram usage:       30 bytes
  5140 ;; Hardware stack levels used:    1
  5141 ;; Hardware stack levels required when called:   11
  5142 ;; This function calls:
  5143 ;;		___aodiv
  5144 ;;		___aomod
  5145 ;;		_abs
  5146 ;;		_pad
  5147 ;; This function is called by:
  5148 ;;		_vfpfcnvrt
  5149 ;; This function uses a non-reentrant model
  5150 ;;
  5151                           
  5152                           
  5153                           ;psect for function _dtoa
  5154  0269                     _dtoa:	
  5155                           
  5156                           ;incstack = 0
  5157                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5158                           ;dtoa@fp stored from wreg
  5159  0269  0021               	movlb	1	; select bank1
  5160  026A  00CB               	movwf	dtoa@fp^(0+128)
  5161                           
  5162                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  5163  026B  083C               	movf	dtoa@d^(0+128),w
  5164  026C  00D0               	movwf	dtoa@n^(0+128)
  5165  026D  083D               	movf	(dtoa@d+1)^(0+128),w
  5166  026E  00D1               	movwf	(dtoa@n+1)^(0+128)
  5167  026F  083E               	movf	(dtoa@d+2)^(0+128),w
  5168  0270  00D2               	movwf	(dtoa@n+2)^(0+128)
  5169  0271  083F               	movf	(dtoa@d+3)^(0+128),w
  5170  0272  00D3               	movwf	(dtoa@n+3)^(0+128)
  5171  0273  0840               	movf	(dtoa@d+4)^(0+128),w
  5172  0274  00D4               	movwf	(dtoa@n+4)^(0+128)
  5173  0275  0841               	movf	(dtoa@d+5)^(0+128),w
  5174  0276  00D5               	movwf	(dtoa@n+5)^(0+128)
  5175  0277  0842               	movf	(dtoa@d+6)^(0+128),w
  5176  0278  00D6               	movwf	(dtoa@n+6)^(0+128)
  5177  0279  0843               	movf	(dtoa@d+7)^(0+128),w
  5178  027A  00D7               	movwf	(dtoa@n+7)^(0+128)
  5179                           
  5180                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  5181  027B  30D0               	movlw	low dtoa@n
  5182  027C  0086               	movwf	6
  5183  027D  3000               	movlw	high dtoa@n
  5184  027E  0087               	movwf	7
  5185  027F  3F47               	moviw [7]fsr1
  5186  0280  00C4               	movwf	??_dtoa^(0+128)
  5187  0281  1FC4               	btfss	??_dtoa^(0+128),7
  5188  0282  2A85               	goto	u1720
  5189  0283  3001               	movlw	1
  5190  0284  2A86               	goto	u1730
  5191  0285                     u1720:	
  5192  0285  3000               	movlw	0
  5193  0286                     u1730:	
  5194  0286  0021               	movlb	1	; select bank1
  5195  0287  00C5               	movwf	(??_dtoa+1)^(0+128)
  5196  0288  01C6               	clrf	((??_dtoa+1)^(0+128)+1)
  5197  0289  0845               	movf	(??_dtoa+1)^(0+128),w
  5198  028A  00CE               	movwf	dtoa@s^(0+128)
  5199  028B  0846               	movf	(??_dtoa+2)^(0+128),w
  5200  028C  00CF               	movwf	(dtoa@s+1)^(0+128)
  5201                           
  5202                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  5203  028D  084E               	movf	dtoa@s^(0+128),w
  5204  028E  044F               	iorwf	(dtoa@s+1)^(0+128),w
  5205  028F  1903               	btfsc	3,2
  5206  0290  2AAF               	goto	l452
  5207                           
  5208                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  5209  0291  09D0               	comf	dtoa@n^(0+128),f
  5210  0292  09D1               	comf	(dtoa@n+1)^(0+128),f
  5211  0293  09D2               	comf	(dtoa@n+2)^(0+128),f
  5212  0294  09D3               	comf	(dtoa@n+3)^(0+128),f
  5213  0295  09D4               	comf	(dtoa@n+4)^(0+128),f
  5214  0296  09D5               	comf	(dtoa@n+5)^(0+128),f
  5215  0297  09D6               	comf	(dtoa@n+6)^(0+128),f
  5216  0298  09D7               	comf	(dtoa@n+7)^(0+128),f
  5217  0299  0AD0               	incf	dtoa@n^(0+128),f
  5218  029A  1D03               	skipz
  5219  029B  2AAF               	goto	l452
  5220  029C  0AD1               	incf	(dtoa@n+1)^(0+128),f
  5221  029D  1D03               	skipz
  5222  029E  2AAF               	goto	l452
  5223  029F  0AD2               	incf	(dtoa@n+2)^(0+128),f
  5224  02A0  1D03               	skipz
  5225  02A1  2AAF               	goto	l452
  5226  02A2  0AD3               	incf	(dtoa@n+3)^(0+128),f
  5227  02A3  1D03               	skipz
  5228  02A4  2AAF               	goto	l452
  5229  02A5  0AD4               	incf	(dtoa@n+4)^(0+128),f
  5230  02A6  1D03               	skipz
  5231  02A7  2AAF               	goto	l452
  5232  02A8  0AD5               	incf	(dtoa@n+5)^(0+128),f
  5233  02A9  1D03               	skipz
  5234  02AA  2AAF               	goto	l452
  5235  02AB  0AD6               	incf	(dtoa@n+6)^(0+128),f
  5236  02AC  1D03               	skipz
  5237  02AD  2AAF               	goto	l452
  5238  02AE  0AD7               	incf	(dtoa@n+7)^(0+128),f
  5239  02AF                     l452:	
  5240                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 284:     }
  5241                           
  5242                           
  5243                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  5244  02AF  0020               	movlb	0	; select bank0
  5245  02B0  1BDC               	btfsc	_prec+1,7
  5246  02B1  2AB6               	goto	l453
  5247                           
  5248                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  5249  02B2  30FD               	movlw	253
  5250  02B3  05DD               	andwf	_flags,f
  5251  02B4  30FF               	movlw	255
  5252  02B5  05DE               	andwf	_flags+1,f
  5253  02B6                     l453:	
  5254                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 289:     }
  5255                           
  5256                           
  5257                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  5258  02B6  085C               	movf	_prec+1,w
  5259  02B7  3A80               	xorlw	128
  5260  02B8  0021               	movlb	1	; select bank1
  5261  02B9  00C4               	movwf	??_dtoa^(0+128)
  5262  02BA  3080               	movlw	128
  5263  02BB  0244               	subwf	??_dtoa^(0+128),w
  5264  02BC  1D03               	skipz
  5265  02BD  2AC1               	goto	u1775
  5266  02BE  3001               	movlw	1
  5267  02BF  0020               	movlb	0	; select bank0
  5268  02C0  025B               	subwf	_prec,w
  5269  02C1                     u1775:	
  5270  02C1  1803               	skipnc
  5271  02C2  2AC9               	goto	l2009
  5272  02C3  3001               	movlw	1
  5273  02C4  0021               	movlb	1	; select bank1
  5274  02C5  00C9               	movwf	dtoa@p^(0+128)
  5275  02C6  3000               	movlw	0
  5276  02C7  00CA               	movwf	(dtoa@p^(0+128)+1)
  5277  02C8  2AD1               	goto	l457
  5278  02C9                     l2009:	
  5279  02C9  0020               	movlb	0	; select bank0
  5280  02CA  085C               	movf	_prec+1,w
  5281  02CB  0021               	movlb	1	; select bank1
  5282  02CC  00CA               	movwf	(dtoa@p+1)^(0+128)
  5283  02CD  0020               	movlb	0	; select bank0
  5284  02CE  085B               	movf	_prec,w
  5285  02CF  0021               	movlb	1	; select bank1
  5286  02D0  00C9               	movwf	dtoa@p^(0+128)
  5287  02D1                     l457:	
  5288                           
  5289                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  5290  02D1  0020               	movlb	0	; select bank0
  5291  02D2  085A               	movf	_width+1,w
  5292  02D3  0021               	movlb	1	; select bank1
  5293  02D4  00CD               	movwf	(dtoa@w+1)^(0+128)
  5294  02D5  0020               	movlb	0	; select bank0
  5295  02D6  0859               	movf	_width,w
  5296  02D7  0021               	movlb	1	; select bank1
  5297  02D8  00CC               	movwf	dtoa@w^(0+128)
  5298                           
  5299                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  5300  02D9  084E               	movf	dtoa@s^(0+128),w
  5301  02DA  044F               	iorwf	(dtoa@s+1)^(0+128),w
  5302  02DB  1D03               	btfss	3,2
  5303  02DC  2AE0               	goto	l2015
  5304  02DD  0020               	movlb	0	; select bank0
  5305  02DE  1D5D               	btfss	_flags,2
  5306  02DF  2AE5               	goto	l458
  5307  02E0                     l2015:	
  5308                           
  5309                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  5310  02E0  30FF               	movlw	255
  5311  02E1  0021               	movlb	1	; select bank1
  5312  02E2  07CC               	addwf	dtoa@w^(0+128),f
  5313  02E3  30FF               	movlw	255
  5314  02E4  3DCD               	addwfc	(dtoa@w+1)^(0+128),f
  5315  02E5                     l458:	
  5316                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 294:     }
  5317                           
  5318                           
  5319                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  5320  02E5  301F               	movlw	31
  5321  02E6  0021               	movlb	1	; select bank1
  5322  02E7  00D8               	movwf	dtoa@i^(0+128)
  5323  02E8  3000               	movlw	0
  5324  02E9  00D9               	movwf	(dtoa@i^(0+128)+1)
  5325                           
  5326                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  5327  02EA  0023               	movlb	3	; select bank3
  5328  02EB  01BF               	clrf	(_dbuf^(0+384)+31)
  5329                           
  5330                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5331  02EC  2B7B               	goto	l461
  5332  02ED                     l2029:	
  5333  02ED  0021               	movlb	1	; select bank1
  5334  02EE  0850               	movf	dtoa@n^(0+128),w
  5335  02EF  0451               	iorwf	(dtoa@n+1)^(0+128),w
  5336  02F0  0452               	iorwf	(dtoa@n+2)^(0+128),w
  5337  02F1  0453               	iorwf	(dtoa@n+3)^(0+128),w
  5338  02F2  0454               	iorwf	(dtoa@n+4)^(0+128),w
  5339  02F3  0455               	iorwf	(dtoa@n+5)^(0+128),w
  5340  02F4  0456               	iorwf	(dtoa@n+6)^(0+128),w
  5341  02F5  0457               	iorwf	(dtoa@n+7)^(0+128),w
  5342  02F6  1D03               	skipz
  5343  02F7  2B12               	goto	l2019
  5344  02F8  084A               	movf	(dtoa@p+1)^(0+128),w
  5345  02F9  3A80               	xorlw	128
  5346  02FA  00C4               	movwf	??_dtoa^(0+128)
  5347  02FB  3080               	movlw	128
  5348  02FC  0244               	subwf	??_dtoa^(0+128),w
  5349  02FD  1D03               	skipz
  5350  02FE  2B01               	goto	u1825
  5351  02FF  3001               	movlw	1
  5352  0300  0249               	subwf	dtoa@p^(0+128),w
  5353  0301                     u1825:	
  5354  0301  1803               	skipnc
  5355  0302  2B12               	goto	l2019
  5356  0303  0021               	movlb	1	; select bank1
  5357  0304  084D               	movf	(dtoa@w+1)^(0+128),w
  5358  0305  3A80               	xorlw	128
  5359  0306  00C4               	movwf	??_dtoa^(0+128)
  5360  0307  3080               	movlw	128
  5361  0308  0244               	subwf	??_dtoa^(0+128),w
  5362  0309  1D03               	skipz
  5363  030A  2B0D               	goto	u1835
  5364  030B  3001               	movlw	1
  5365  030C  024C               	subwf	dtoa@w^(0+128),w
  5366  030D                     u1835:	
  5367  030D  1C03               	skipc
  5368  030E  2B87               	goto	l2037
  5369  030F  0020               	movlb	0	; select bank0
  5370  0310  1CDD               	btfss	_flags,1
  5371  0311  2B87               	goto	l2037
  5372  0312                     l2019:	
  5373                           
  5374                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  5375  0312  30FF               	movlw	255
  5376  0313  0021               	movlb	1	; select bank1
  5377  0314  07D8               	addwf	dtoa@i^(0+128),f
  5378  0315  30FF               	movlw	255
  5379  0316  3DD9               	addwfc	(dtoa@i+1)^(0+128),f
  5380                           
  5381                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  5382  0317  300A               	movlw	10
  5383  0318  00A0               	movwf	___aomod@divisor^(0+128)
  5384  0319  01A1               	clrf	(___aomod@divisor+1)^(0+128)
  5385  031A  01A2               	clrf	(___aomod@divisor+2)^(0+128)
  5386  031B  01A3               	clrf	(___aomod@divisor+3)^(0+128)
  5387  031C  01A4               	clrf	(___aomod@divisor+4)^(0+128)
  5388  031D  01A5               	clrf	(___aomod@divisor+5)^(0+128)
  5389  031E  01A6               	clrf	(___aomod@divisor+6)^(0+128)
  5390  031F  01A7               	clrf	(___aomod@divisor+7)^(0+128)
  5391  0320  0850               	movf	dtoa@n^(0+128),w
  5392  0321  00A8               	movwf	___aomod@dividend^(0+128)
  5393  0322  0851               	movf	(dtoa@n+1)^(0+128),w
  5394  0323  00A9               	movwf	(___aomod@dividend+1)^(0+128)
  5395  0324  0852               	movf	(dtoa@n+2)^(0+128),w
  5396  0325  00AA               	movwf	(___aomod@dividend+2)^(0+128)
  5397  0326  0853               	movf	(dtoa@n+3)^(0+128),w
  5398  0327  00AB               	movwf	(___aomod@dividend+3)^(0+128)
  5399  0328  0854               	movf	(dtoa@n+4)^(0+128),w
  5400  0329  00AC               	movwf	(___aomod@dividend+4)^(0+128)
  5401  032A  0855               	movf	(dtoa@n+5)^(0+128),w
  5402  032B  00AD               	movwf	(___aomod@dividend+5)^(0+128)
  5403  032C  0856               	movf	(dtoa@n+6)^(0+128),w
  5404  032D  00AE               	movwf	(___aomod@dividend+6)^(0+128)
  5405  032E  0857               	movf	(dtoa@n+7)^(0+128),w
  5406  032F  00AF               	movwf	(___aomod@dividend+7)^(0+128)
  5407  0330  3185  25BF  3182   	fcall	___aomod
  5408  0333  0021               	movlb	1	; select bank1
  5409  0334  0821               	movf	(?___aomod+1)^(0+128),w
  5410  0335  00B4               	movwf	(abs@a+1)^(0+128)
  5411  0336  0820               	movf	?___aomod^(0+128),w
  5412  0337  00B3               	movwf	abs@a^(0+128)
  5413  0338  318C  24E7  3182   	fcall	_abs
  5414  033B  0021               	movlb	1	; select bank1
  5415  033C  0833               	movf	?_abs^(0+128),w
  5416  033D  3E30               	addlw	48
  5417  033E  00C4               	movwf	??_dtoa^(0+128)
  5418  033F  0858               	movf	dtoa@i^(0+128),w
  5419  0340  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5420  0341  0086               	movwf	6
  5421  0342  3001               	movlw	1	; select bank3/4
  5422  0343  0087               	movwf	7
  5423  0344  0844               	movf	??_dtoa^(0+128),w
  5424  0345  0081               	movwf	1
  5425                           
  5426                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  5427  0346  30FF               	movlw	255
  5428  0347  07C9               	addwf	dtoa@p^(0+128),f
  5429  0348  30FF               	movlw	255
  5430  0349  3DCA               	addwfc	(dtoa@p+1)^(0+128),f
  5431                           
  5432                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  5433  034A  30FF               	movlw	255
  5434  034B  07CC               	addwf	dtoa@w^(0+128),f
  5435  034C  30FF               	movlw	255
  5436  034D  3DCD               	addwfc	(dtoa@w+1)^(0+128),f
  5437                           
  5438                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  5439  034E  300A               	movlw	10
  5440  034F  00A0               	movwf	___aodiv@divisor^(0+128)
  5441  0350  01A1               	clrf	(___aodiv@divisor+1)^(0+128)
  5442  0351  01A2               	clrf	(___aodiv@divisor+2)^(0+128)
  5443  0352  01A3               	clrf	(___aodiv@divisor+3)^(0+128)
  5444  0353  01A4               	clrf	(___aodiv@divisor+4)^(0+128)
  5445  0354  01A5               	clrf	(___aodiv@divisor+5)^(0+128)
  5446  0355  01A6               	clrf	(___aodiv@divisor+6)^(0+128)
  5447  0356  01A7               	clrf	(___aodiv@divisor+7)^(0+128)
  5448  0357  0850               	movf	dtoa@n^(0+128),w
  5449  0358  00A8               	movwf	___aodiv@dividend^(0+128)
  5450  0359  0851               	movf	(dtoa@n+1)^(0+128),w
  5451  035A  00A9               	movwf	(___aodiv@dividend+1)^(0+128)
  5452  035B  0852               	movf	(dtoa@n+2)^(0+128),w
  5453  035C  00AA               	movwf	(___aodiv@dividend+2)^(0+128)
  5454  035D  0853               	movf	(dtoa@n+3)^(0+128),w
  5455  035E  00AB               	movwf	(___aodiv@dividend+3)^(0+128)
  5456  035F  0854               	movf	(dtoa@n+4)^(0+128),w
  5457  0360  00AC               	movwf	(___aodiv@dividend+4)^(0+128)
  5458  0361  0855               	movf	(dtoa@n+5)^(0+128),w
  5459  0362  00AD               	movwf	(___aodiv@dividend+5)^(0+128)
  5460  0363  0856               	movf	(dtoa@n+6)^(0+128),w
  5461  0364  00AE               	movwf	(___aodiv@dividend+6)^(0+128)
  5462  0365  0857               	movf	(dtoa@n+7)^(0+128),w
  5463  0366  00AF               	movwf	(___aodiv@dividend+7)^(0+128)
  5464  0367  3184  24C8  3182   	fcall	___aodiv
  5465  036A  0021               	movlb	1	; select bank1
  5466  036B  0820               	movf	?___aodiv^(0+128),w
  5467  036C  00D0               	movwf	dtoa@n^(0+128)
  5468  036D  0821               	movf	(?___aodiv+1)^(0+128),w
  5469  036E  00D1               	movwf	(dtoa@n+1)^(0+128)
  5470  036F  0822               	movf	(?___aodiv+2)^(0+128),w
  5471  0370  00D2               	movwf	(dtoa@n+2)^(0+128)
  5472  0371  0823               	movf	(?___aodiv+3)^(0+128),w
  5473  0372  00D3               	movwf	(dtoa@n+3)^(0+128)
  5474  0373  0824               	movf	(?___aodiv+4)^(0+128),w
  5475  0374  00D4               	movwf	(dtoa@n+4)^(0+128)
  5476  0375  0825               	movf	(?___aodiv+5)^(0+128),w
  5477  0376  00D5               	movwf	(dtoa@n+5)^(0+128)
  5478  0377  0826               	movf	(?___aodiv+6)^(0+128),w
  5479  0378  00D6               	movwf	(dtoa@n+6)^(0+128)
  5480  0379  0827               	movf	(?___aodiv+7)^(0+128),w
  5481  037A  00D7               	movwf	(dtoa@n+7)^(0+128)
  5482  037B                     l461:	
  5483                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 305:     }
  5484                           
  5485                           
  5486                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5487  037B  0021               	movlb	1	; select bank1
  5488  037C  0859               	movf	(dtoa@i+1)^(0+128),w
  5489  037D  3A80               	xorlw	128
  5490  037E  00C4               	movwf	??_dtoa^(0+128)
  5491  037F  3080               	movlw	128
  5492  0380  0244               	subwf	??_dtoa^(0+128),w
  5493  0381  1D03               	skipz
  5494  0382  2B85               	goto	u1805
  5495  0383  3001               	movlw	1
  5496  0384  0258               	subwf	dtoa@i^(0+128),w
  5497  0385                     u1805:	
  5498  0385  1803               	btfsc	3,0
  5499  0386  2AED               	goto	l2029
  5500  0387                     l2037:	
  5501                           
  5502                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  5503  0387  0021               	movlb	1	; select bank1
  5504  0388  084E               	movf	dtoa@s^(0+128),w
  5505  0389  044F               	iorwf	(dtoa@s+1)^(0+128),w
  5506  038A  1D03               	btfss	3,2
  5507  038B  2B8F               	goto	l2041
  5508  038C  0020               	movlb	0	; select bank0
  5509  038D  1D5D               	btfss	_flags,2
  5510  038E  2BA7               	goto	l2051
  5511  038F                     l2041:	
  5512                           
  5513                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  5514  038F  30FF               	movlw	255
  5515  0390  0021               	movlb	1	; select bank1
  5516  0391  07D8               	addwf	dtoa@i^(0+128),f
  5517  0392  30FF               	movlw	255
  5518  0393  3DD9               	addwfc	(dtoa@i+1)^(0+128),f
  5519                           
  5520                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  5521  0394  084E               	movf	dtoa@s^(0+128),w
  5522  0395  044F               	iorwf	(dtoa@s+1)^(0+128),w
  5523  0396  1D03               	btfss	3,2
  5524  0397  2B9A               	goto	l2047
  5525  0398  302B               	movlw	43
  5526  0399  2B9B               	goto	L1
  5527  039A                     l2047:	
  5528  039A  302D               	movlw	45
  5529  039B                     L1:	
  5530  039B  00C7               	movwf	_dtoa$687^(0+128)
  5531  039C  3000               	movlw	0
  5532  039D  00C8               	movwf	(_dtoa$687^(0+128)+1)
  5533  039E  0847               	movf	_dtoa$687^(0+128),w
  5534  039F  00C4               	movwf	??_dtoa^(0+128)
  5535  03A0  0858               	movf	dtoa@i^(0+128),w
  5536  03A1  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5537  03A2  0086               	movwf	6
  5538  03A3  3001               	movlw	1	; select bank3/4
  5539  03A4  0087               	movwf	7
  5540  03A5  0844               	movf	??_dtoa^(0+128),w
  5541  03A6  0081               	movwf	1
  5542  03A7                     l2051:	
  5543                           
  5544                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  5545  03A7  0021               	movlb	1	; select bank1
  5546  03A8  0858               	movf	dtoa@i^(0+128),w
  5547  03A9  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5548  03AA  00C4               	movwf	??_dtoa^(0+128)
  5549  03AB  0844               	movf	??_dtoa^(0+128),w
  5550  03AC  00B3               	movwf	pad@buf^(0+128)
  5551  03AD  084D               	movf	(dtoa@w+1)^(0+128),w
  5552  03AE  00B5               	movwf	(pad@p+1)^(0+128)
  5553  03AF  084C               	movf	dtoa@w^(0+128),w
  5554  03B0  00B4               	movwf	pad@p^(0+128)
  5555  03B1  084B               	movf	dtoa@fp^(0+128),w
  5556  03B2  318E  26D3         	fcall	_pad
  5557  03B4  0021               	movlb	1	; select bank1
  5558  03B5  0834               	movf	(?_pad+1)^(0+128),w
  5559  03B6  00BD               	movwf	(?_dtoa+1)^(0+128)
  5560  03B7  0833               	movf	?_pad^(0+128),w
  5561  03B8  00BC               	movwf	?_dtoa^(0+128)
  5562  03B9  0008               	return
  5563  03BA                     __end_of_dtoa:	
  5564                           
  5565                           	psect	text10
  5566  0ED3                     __ptext10:	
  5567 ;; *************** function _pad *****************
  5568 ;; Defined at:
  5569 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5570 ;; Parameters:    Size  Location     Type
  5571 ;;  fp              1    wreg     PTR struct _IO_FILE
  5572 ;;		 -> NULL(0), 
  5573 ;;  buf             1   19[BANK1 ] PTR unsigned char 
  5574 ;;		 -> dbuf(32), 
  5575 ;;  p               2   20[BANK1 ] int 
  5576 ;; Auto vars:     Size  Location     Type
  5577 ;;  fp              1   27[BANK1 ] PTR struct _IO_FILE
  5578 ;;		 -> NULL(0), 
  5579 ;;  w               2   25[BANK1 ] int 
  5580 ;;  i               2   23[BANK1 ] int 
  5581 ;; Return value:  Size  Location     Type
  5582 ;;                  2   19[BANK1 ] int 
  5583 ;; Registers used:
  5584 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5585 ;; Tracked objects:
  5586 ;;		On entry : 0/0
  5587 ;;		On exit  : 0/0
  5588 ;;		Unchanged: 0/0
  5589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5590 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5591 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  5592 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5593 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  5594 ;;Total ram usage:        9 bytes
  5595 ;; Hardware stack levels used:    1
  5596 ;; Hardware stack levels required when called:   10
  5597 ;; This function calls:
  5598 ;;		_fputc
  5599 ;;		_fputs
  5600 ;;		_strlen
  5601 ;; This function is called by:
  5602 ;;		_dtoa
  5603 ;; This function uses a non-reentrant model
  5604 ;;
  5605                           
  5606                           
  5607                           ;psect for function _pad
  5608  0ED3                     _pad:	
  5609                           
  5610                           ;incstack = 0
  5611                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5612                           ;pad@fp stored from wreg
  5613  0ED3  0021               	movlb	1	; select bank1
  5614  0ED4  00BB               	movwf	pad@fp^(0+128)
  5615                           
  5616                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  5617  0ED5  0020               	movlb	0	; select bank0
  5618  0ED6  1C5D               	btfss	_flags,0
  5619  0ED7  2EE4               	goto	l1893
  5620                           
  5621                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  5622  0ED8  0021               	movlb	1	; select bank1
  5623  0ED9  0833               	movf	pad@buf^(0+128),w
  5624  0EDA  00AA               	movwf	fputs@s^(0+128)
  5625  0EDB  3001               	movlw	1
  5626  0EDC  00AB               	movwf	(fputs@s+1)^(0+128)
  5627  0EDD  083B               	movf	pad@fp^(0+128),w
  5628  0EDE  00B6               	movwf	??_pad^(0+128)
  5629  0EDF  0836               	movf	??_pad^(0+128),w
  5630  0EE0  00AC               	movwf	fputs@fp^(0+128)
  5631  0EE1  318D  2597  318E   	fcall	_fputs
  5632  0EE4                     l1893:	
  5633                           
  5634                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  5635  0EE4  0021               	movlb	1	; select bank1
  5636  0EE5  1BB5               	btfsc	(pad@p+1)^(0+128),7
  5637  0EE6  2EEC               	goto	l1897
  5638  0EE7  0835               	movf	(pad@p+1)^(0+128),w
  5639  0EE8  00BA               	movwf	(pad@w+1)^(0+128)
  5640  0EE9  0834               	movf	pad@p^(0+128),w
  5641  0EEA  00B9               	movwf	pad@w^(0+128)
  5642  0EEB  2EEE               	goto	l444
  5643  0EEC                     l1897:	
  5644  0EEC  01B9               	clrf	pad@w^(0+128)
  5645  0EED  01BA               	clrf	(pad@w+1)^(0+128)
  5646  0EEE                     l444:	
  5647                           
  5648                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  5649  0EEE  01B7               	clrf	pad@i^(0+128)
  5650  0EEF  01B8               	clrf	(pad@i+1)^(0+128)
  5651  0EF0                     l1903:	
  5652                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  5653                           
  5654                           
  5655                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  5656  0EF0  0838               	movf	(pad@i+1)^(0+128),w
  5657  0EF1  3A80               	xorlw	128
  5658  0EF2  00B6               	movwf	??_pad^(0+128)
  5659  0EF3  083A               	movf	(pad@w+1)^(0+128),w
  5660  0EF4  3A80               	xorlw	128
  5661  0EF5  0236               	subwf	??_pad^(0+128),w
  5662  0EF6  1D03               	skipz
  5663  0EF7  2EFA               	goto	u1455
  5664  0EF8  0839               	movf	pad@w^(0+128),w
  5665  0EF9  0237               	subwf	pad@i^(0+128),w
  5666  0EFA                     u1455:	
  5667  0EFA  1803               	btfsc	3,0
  5668  0EFB  2F0E               	goto	l447
  5669                           
  5670                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  5671  0EFC  3020               	movlw	32
  5672  0EFD  0021               	movlb	1	; select bank1
  5673  0EFE  00A2               	movwf	fputc@c^(0+128)
  5674  0EFF  3000               	movlw	0
  5675  0F00  00A3               	movwf	(fputc@c^(0+128)+1)
  5676  0F01  083B               	movf	pad@fp^(0+128),w
  5677  0F02  00B6               	movwf	??_pad^(0+128)
  5678  0F03  0836               	movf	??_pad^(0+128),w
  5679  0F04  00A4               	movwf	fputc@fp^(0+128)
  5680  0F05  318E  2693  318E   	fcall	_fputc
  5681                           
  5682                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  5683  0F08  3001               	movlw	1
  5684  0F09  0021               	movlb	1	; select bank1
  5685  0F0A  07B7               	addwf	pad@i^(0+128),f
  5686  0F0B  3000               	movlw	0
  5687  0F0C  3DB8               	addwfc	(pad@i+1)^(0+128),f
  5688  0F0D  2EF0               	goto	l1903
  5689  0F0E                     l447:	
  5690                           
  5691                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  5692  0F0E  0020               	movlb	0	; select bank0
  5693  0F0F  185D               	btfsc	_flags,0
  5694  0F10  2F1D               	goto	l1907
  5695                           
  5696                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  5697  0F11  0021               	movlb	1	; select bank1
  5698  0F12  0833               	movf	pad@buf^(0+128),w
  5699  0F13  00AA               	movwf	fputs@s^(0+128)
  5700  0F14  3001               	movlw	1
  5701  0F15  00AB               	movwf	(fputs@s+1)^(0+128)
  5702  0F16  083B               	movf	pad@fp^(0+128),w
  5703  0F17  00B6               	movwf	??_pad^(0+128)
  5704  0F18  0836               	movf	??_pad^(0+128),w
  5705  0F19  00AC               	movwf	fputs@fp^(0+128)
  5706  0F1A  318D  2597  318E   	fcall	_fputs
  5707  0F1D                     l1907:	
  5708                           
  5709                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  5710  0F1D  0021               	movlb	1	; select bank1
  5711  0F1E  0833               	movf	pad@buf^(0+128),w
  5712  0F1F  318D  2500         	fcall	_strlen
  5713  0F21  0021               	movlb	1	; select bank1
  5714  0F22  0839               	movf	pad@w^(0+128),w
  5715  0F23  0720               	addwf	?_strlen^(0+128),w
  5716  0F24  00B3               	movwf	?_pad^(0+128)
  5717  0F25  083A               	movf	(pad@w+1)^(0+128),w
  5718  0F26  3D21               	addwfc	(?_strlen+1)^(0+128),w
  5719  0F27  00B4               	movwf	(?_pad+1)^(0+128)
  5720  0F28  0008               	return
  5721  0F29                     __end_of_pad:	
  5722                           
  5723                           	psect	text11
  5724  0D00                     __ptext11:	
  5725 ;; *************** function _strlen *****************
  5726 ;; Defined at:
  5727 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  5728 ;; Parameters:    Size  Location     Type
  5729 ;;  s               1    wreg     PTR const unsigned char 
  5730 ;;		 -> dbuf(32), 
  5731 ;; Auto vars:     Size  Location     Type
  5732 ;;  s               1    4[BANK1 ] PTR const unsigned char 
  5733 ;;		 -> dbuf(32), 
  5734 ;;  a               1    3[BANK1 ] PTR const unsigned char 
  5735 ;;		 -> dbuf(32), 
  5736 ;; Return value:  Size  Location     Type
  5737 ;;                  2    0[BANK1 ] unsigned int 
  5738 ;; Registers used:
  5739 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5740 ;; Tracked objects:
  5741 ;;		On entry : 0/0
  5742 ;;		On exit  : 0/0
  5743 ;;		Unchanged: 0/0
  5744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5745 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5746 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5747 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5748 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  5749 ;;Total ram usage:        5 bytes
  5750 ;; Hardware stack levels used:    1
  5751 ;; Hardware stack levels required when called:    6
  5752 ;; This function calls:
  5753 ;;		Nothing
  5754 ;; This function is called by:
  5755 ;;		_pad
  5756 ;; This function uses a non-reentrant model
  5757 ;;
  5758                           
  5759                           
  5760                           ;psect for function _strlen
  5761  0D00                     _strlen:	
  5762                           
  5763                           ;incstack = 0
  5764                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  5765                           ;strlen@s stored from wreg
  5766  0D00  0021               	movlb	1	; select bank1
  5767  0D01  00A4               	movwf	strlen@s^(0+128)
  5768  0D02  0824               	movf	strlen@s^(0+128),w
  5769  0D03  00A2               	movwf	??_strlen^(0+128)
  5770  0D04  0822               	movf	??_strlen^(0+128),w
  5771  0D05  00A3               	movwf	strlen@a^(0+128)
  5772  0D06                     l1883:	
  5773  0D06  0824               	movf	strlen@s^(0+128),w
  5774  0D07  0086               	movwf	6
  5775  0D08  3001               	movlw	1	; select bank2/3
  5776  0D09  0087               	movwf	7
  5777  0D0A  0801               	movf	1,w
  5778  0D0B  1903               	btfsc	3,2
  5779  0D0C  2D12               	goto	l1885
  5780  0D0D  3001               	movlw	1
  5781  0D0E  00A2               	movwf	??_strlen^(0+128)
  5782  0D0F  0822               	movf	??_strlen^(0+128),w
  5783  0D10  07A4               	addwf	strlen@s^(0+128),f
  5784  0D11  2D06               	goto	l1883
  5785  0D12                     l1885:	
  5786  0D12  0823               	movf	strlen@a^(0+128),w
  5787  0D13  0224               	subwf	strlen@s^(0+128),w
  5788  0D14  00A0               	movwf	?_strlen^(0+128)
  5789  0D15  01A1               	clrf	(?_strlen+1)^(0+128)
  5790  0D16  1BA0               	btfsc	?_strlen^(0+128),7
  5791  0D17  03A1               	decf	(?_strlen+1)^(0+128),f
  5792  0D18  0008               	return
  5793  0D19                     __end_of_strlen:	
  5794                           
  5795                           	psect	text12
  5796  0D97                     __ptext12:	
  5797 ;; *************** function _fputs *****************
  5798 ;; Defined at:
  5799 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  5800 ;; Parameters:    Size  Location     Type
  5801 ;;  s               2   10[BANK1 ] PTR const unsigned char 
  5802 ;;		 -> dbuf(32), STR_3(3), hrDisp(13), distanceDisp(11), 
  5803 ;;		 -> speedDisp(8), 
  5804 ;;  fp              1   12[BANK1 ] PTR struct _IO_FILE
  5805 ;;		 -> NULL(0), 
  5806 ;; Auto vars:     Size  Location     Type
  5807 ;;  i               2   17[BANK1 ] int 
  5808 ;;  c               1   16[BANK1 ] unsigned char 
  5809 ;; Return value:  Size  Location     Type
  5810 ;;                  2   10[BANK1 ] int 
  5811 ;; Registers used:
  5812 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5813 ;; Tracked objects:
  5814 ;;		On entry : 0/0
  5815 ;;		On exit  : 0/0
  5816 ;;		Unchanged: 0/0
  5817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5818 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5819 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5820 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5821 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  5822 ;;Total ram usage:        9 bytes
  5823 ;; Hardware stack levels used:    1
  5824 ;; Hardware stack levels required when called:    9
  5825 ;; This function calls:
  5826 ;;		_fputc
  5827 ;; This function is called by:
  5828 ;;		_pad
  5829 ;;		_puts
  5830 ;; This function uses a non-reentrant model
  5831 ;;
  5832                           
  5833                           
  5834                           ;psect for function _fputs
  5835  0D97                     _fputs:	
  5836                           
  5837                           ;incstack = 0
  5838                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5839  0D97  0021               	movlb	1	; select bank1
  5840  0D98  01B1               	clrf	fputs@i^(0+128)
  5841  0D99  01B2               	clrf	(fputs@i+1)^(0+128)
  5842  0D9A                     l1873:	
  5843  0D9A  082A               	movf	fputs@s^(0+128),w
  5844  0D9B  0731               	addwf	fputs@i^(0+128),w
  5845  0D9C  0084               	movwf	4
  5846  0D9D  082B               	movf	(fputs@s+1)^(0+128),w
  5847  0D9E  3D32               	addwfc	(fputs@i+1)^(0+128),w
  5848  0D9F  0085               	movwf	5
  5849  0DA0  0800               	movf	0,w	;code access
  5850  0DA1  00AD               	movwf	??_fputs^(0+128)
  5851  0DA2  082D               	movf	??_fputs^(0+128),w
  5852  0DA3  00B0               	movwf	fputs@c^(0+128)
  5853  0DA4  0830               	movf	fputs@c^(0+128),w
  5854  0DA5  1903               	btfsc	3,2
  5855  0DA6  2DBB               	goto	l1875
  5856  0DA7  0830               	movf	fputs@c^(0+128),w
  5857  0DA8  00AD               	movwf	??_fputs^(0+128)
  5858  0DA9  01AE               	clrf	(??_fputs^(0+128)+1)
  5859  0DAA  082D               	movf	??_fputs^(0+128),w
  5860  0DAB  00A2               	movwf	fputc@c^(0+128)
  5861  0DAC  082E               	movf	(??_fputs+1)^(0+128),w
  5862  0DAD  00A3               	movwf	(fputc@c+1)^(0+128)
  5863  0DAE  082C               	movf	fputs@fp^(0+128),w
  5864  0DAF  00AF               	movwf	(??_fputs+2)^(0+128)
  5865  0DB0  082F               	movf	(??_fputs+2)^(0+128),w
  5866  0DB1  00A4               	movwf	fputc@fp^(0+128)
  5867  0DB2  318E  2693  318D   	fcall	_fputc
  5868  0DB5  3001               	movlw	1
  5869  0DB6  0021               	movlb	1	; select bank1
  5870  0DB7  07B1               	addwf	fputs@i^(0+128),f
  5871  0DB8  3000               	movlw	0
  5872  0DB9  3DB2               	addwfc	(fputs@i+1)^(0+128),f
  5873  0DBA  2D9A               	goto	l1873
  5874  0DBB                     l1875:	
  5875  0DBB  0832               	movf	(fputs@i+1)^(0+128),w
  5876  0DBC  00AB               	movwf	(?_fputs+1)^(0+128)
  5877  0DBD  0831               	movf	fputs@i^(0+128),w
  5878  0DBE  00AA               	movwf	?_fputs^(0+128)
  5879  0DBF  0008               	return
  5880  0DC0                     __end_of_fputs:	
  5881                           
  5882                           	psect	text13
  5883  0E93                     __ptext13:	
  5884 ;; *************** function _fputc *****************
  5885 ;; Defined at:
  5886 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  5887 ;; Parameters:    Size  Location     Type
  5888 ;;  c               2    2[BANK1 ] int 
  5889 ;;  fp              1    4[BANK1 ] PTR struct _IO_FILE
  5890 ;;		 -> NULL(0), 
  5891 ;; Auto vars:     Size  Location     Type
  5892 ;;		None
  5893 ;; Return value:  Size  Location     Type
  5894 ;;                  2    2[BANK1 ] int 
  5895 ;; Registers used:
  5896 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5897 ;; Tracked objects:
  5898 ;;		On entry : 0/0
  5899 ;;		On exit  : 0/0
  5900 ;;		Unchanged: 0/0
  5901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5902 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5904 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  5905 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  5906 ;;Total ram usage:        8 bytes
  5907 ;; Hardware stack levels used:    1
  5908 ;; Hardware stack levels required when called:    8
  5909 ;; This function calls:
  5910 ;;		_putch
  5911 ;; This function is called by:
  5912 ;;		_pad
  5913 ;;		_vfpfcnvrt
  5914 ;;		_fputs
  5915 ;;		_puts
  5916 ;; This function uses a non-reentrant model
  5917 ;;
  5918                           
  5919                           
  5920                           ;psect for function _fputc
  5921  0E93                     _fputc:	
  5922                           
  5923                           ;incstack = 0
  5924                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5925  0E93  0021               	movlb	1	; select bank1
  5926  0E94  0824               	movf	fputc@fp^(0+128),w
  5927  0E95  1D03               	btfss	3,2
  5928  0E96  0824               	movf	fputc@fp^(0+128),w
  5929  0E97  1D03               	btfss	3,2
  5930  0E98  2E9E               	goto	l1857
  5931  0E99  0822               	movf	fputc@c^(0+128),w
  5932  0E9A  318C  240A  318E   	fcall	_putch
  5933  0E9D  2ECA               	goto	l1863
  5934  0E9E                     l1857:	
  5935  0E9E  0824               	movf	fputc@fp^(0+128),w
  5936  0E9F  3E03               	addlw	3
  5937  0EA0  0086               	movwf	6
  5938  0EA1  0187               	clrf	7
  5939  0EA2  0016               	moviw fsr1++
  5940  0EA3  0401               	iorwf	1,w
  5941  0EA4  1903               	btfsc	3,2
  5942  0EA5  2EC1               	goto	l1861
  5943  0EA6  0824               	movf	fputc@fp^(0+128),w
  5944  0EA7  3E03               	addlw	3
  5945  0EA8  0086               	movwf	6
  5946  0EA9  0187               	clrf	7
  5947  0EAA  3F40               	moviw [0]fsr1
  5948  0EAB  00A5               	movwf	??_fputc^(0+128)
  5949  0EAC  3F41               	moviw [1]fsr1
  5950  0EAD  00A6               	movwf	(??_fputc^(0+128)+1)
  5951  0EAE  0A24               	incf	fputc@fp^(0+128),w
  5952  0EAF  0086               	movwf	6
  5953  0EB0  0187               	clrf	7
  5954  0EB1  3F40               	moviw [0]fsr1
  5955  0EB2  00A7               	movwf	(??_fputc+2)^(0+128)
  5956  0EB3  3F41               	moviw [1]fsr1
  5957  0EB4  00A8               	movwf	((??_fputc+2)^(0+128)+1)
  5958  0EB5  0828               	movf	(??_fputc+3)^(0+128),w
  5959  0EB6  3A80               	xorlw	128
  5960  0EB7  00A9               	movwf	(??_fputc+4)^(0+128)
  5961  0EB8  0826               	movf	(??_fputc+1)^(0+128),w
  5962  0EB9  3A80               	xorlw	128
  5963  0EBA  0229               	subwf	(??_fputc+4)^(0+128),w
  5964  0EBB  1D03               	skipz
  5965  0EBC  2EBF               	goto	u1405
  5966  0EBD  0825               	movf	??_fputc^(0+128),w
  5967  0EBE  0227               	subwf	(??_fputc+2)^(0+128),w
  5968  0EBF                     u1405:	
  5969  0EBF  1803               	skipnc
  5970  0EC0  2ECA               	goto	l1863
  5971  0EC1                     l1861:	
  5972  0EC1  0021               	movlb	1	; select bank1
  5973  0EC2  0A24               	incf	fputc@fp^(0+128),w
  5974  0EC3  0086               	movwf	6
  5975  0EC4  0187               	clrf	7
  5976  0EC5  3001               	movlw	1
  5977  0EC6  0781               	addwf	1,f
  5978  0EC7  3141               	addfsr 1,1
  5979  0EC8  1803               	skipnc
  5980  0EC9  0A81               	incf	1,f
  5981  0ECA                     l1863:	
  5982  0ECA  0021               	movlb	1	; select bank1
  5983  0ECB  0822               	movf	fputc@c^(0+128),w
  5984  0ECC  00A5               	movwf	??_fputc^(0+128)
  5985  0ECD  01A6               	clrf	(??_fputc^(0+128)+1)
  5986  0ECE  0825               	movf	??_fputc^(0+128),w
  5987  0ECF  00A2               	movwf	?_fputc^(0+128)
  5988  0ED0  0826               	movf	(??_fputc+1)^(0+128),w
  5989  0ED1  00A3               	movwf	(?_fputc+1)^(0+128)
  5990  0ED2  0008               	return
  5991  0ED3                     __end_of_fputc:	
  5992                           
  5993                           	psect	text14
  5994  0C0A                     __ptext14:	
  5995 ;; *************** function _putch *****************
  5996 ;; Defined at:
  5997 ;;		line 151 in file "mcc_generated_files/eusart.c"
  5998 ;; Parameters:    Size  Location     Type
  5999 ;;  txData          1    wreg     unsigned char 
  6000 ;; Auto vars:     Size  Location     Type
  6001 ;;  txData          1    1[BANK1 ] unsigned char 
  6002 ;; Return value:  Size  Location     Type
  6003 ;;                  1    wreg      void 
  6004 ;; Registers used:
  6005 ;;		wreg, status,2, status,0, pclath, cstack
  6006 ;; Tracked objects:
  6007 ;;		On entry : 0/0
  6008 ;;		On exit  : 0/0
  6009 ;;		Unchanged: 0/0
  6010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6012 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6014 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6015 ;;Total ram usage:        1 bytes
  6016 ;; Hardware stack levels used:    1
  6017 ;; Hardware stack levels required when called:    7
  6018 ;; This function calls:
  6019 ;;		_EUSART_Write
  6020 ;; This function is called by:
  6021 ;;		_fputc
  6022 ;; This function uses a non-reentrant model
  6023 ;;
  6024                           
  6025                           
  6026                           ;psect for function _putch
  6027  0C0A                     _putch:	
  6028                           
  6029                           ;incstack = 0
  6030                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  6031                           ;putch@txData stored from wreg
  6032  0C0A  0021               	movlb	1	; select bank1
  6033  0C0B  00A1               	movwf	putch@txData^(0+128)
  6034                           
  6035                           ;mcc_generated_files/eusart.c: 151: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 152: {;mcc_generated_files/eusart.c: 153:     EUSART_Write(txData);
  6036  0C0C  0821               	movf	putch@txData^(0+128),w
  6037  0C0D  318C  2452         	fcall	_EUSART_Write
  6038  0C0F  0008               	return
  6039  0C10                     __end_of_putch:	
  6040                           
  6041                           	psect	text15
  6042  0C52                     __ptext15:	
  6043 ;; *************** function _EUSART_Write *****************
  6044 ;; Defined at:
  6045 ;;		line 137 in file "mcc_generated_files/eusart.c"
  6046 ;; Parameters:    Size  Location     Type
  6047 ;;  txData          1    wreg     unsigned char 
  6048 ;; Auto vars:     Size  Location     Type
  6049 ;;  txData          1    0[BANK1 ] unsigned char 
  6050 ;; Return value:  Size  Location     Type
  6051 ;;                  1    wreg      void 
  6052 ;; Registers used:
  6053 ;;		wreg
  6054 ;; Tracked objects:
  6055 ;;		On entry : 0/0
  6056 ;;		On exit  : 0/0
  6057 ;;		Unchanged: 0/0
  6058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6060 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6062 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6063 ;;Total ram usage:        1 bytes
  6064 ;; Hardware stack levels used:    1
  6065 ;; Hardware stack levels required when called:    6
  6066 ;; This function calls:
  6067 ;;		Nothing
  6068 ;; This function is called by:
  6069 ;;		_putch
  6070 ;;		_setCursor
  6071 ;;		_backlightBrightness
  6072 ;; This function uses a non-reentrant model
  6073 ;;
  6074                           
  6075                           
  6076                           ;psect for function _EUSART_Write
  6077  0C52                     _EUSART_Write:	
  6078                           
  6079                           ;incstack = 0
  6080                           ; Regs used in _EUSART_Write: [wreg]
  6081                           ;EUSART_Write@txData stored from wreg
  6082  0C52  0021               	movlb	1	; select bank1
  6083  0C53  00A0               	movwf	EUSART_Write@txData^(0+128)
  6084  0C54                     l69:	
  6085                           ;mcc_generated_files/eusart.c: 140:     {;mcc_generated_files/eusart.c: 141:     }
  6086                           
  6087                           
  6088                           ;mcc_generated_files/eusart.c: 139:     while(0 == PIR1bits.TXIF)
  6089  0C54  0020               	movlb	0	; select bank0
  6090  0C55  1E10               	btfss	16,4	;volatile
  6091  0C56  2C54               	goto	l69
  6092                           
  6093                           ;mcc_generated_files/eusart.c: 143:     TX1REG = txData;
  6094  0C57  0021               	movlb	1	; select bank1
  6095  0C58  0820               	movf	EUSART_Write@txData^(0+128),w
  6096  0C59  0023               	movlb	3	; select bank3
  6097  0C5A  009A               	movwf	26	;volatile
  6098  0C5B  0008               	return
  6099  0C5C                     __end_of_EUSART_Write:	
  6100                           
  6101                           	psect	text16
  6102  0CE7                     __ptext16:	
  6103 ;; *************** function _abs *****************
  6104 ;; Defined at:
  6105 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  6106 ;; Parameters:    Size  Location     Type
  6107 ;;  a               2   19[BANK1 ] int 
  6108 ;; Auto vars:     Size  Location     Type
  6109 ;;		None
  6110 ;; Return value:  Size  Location     Type
  6111 ;;                  2   19[BANK1 ] int 
  6112 ;; Registers used:
  6113 ;;		wreg, status,2, status,0
  6114 ;; Tracked objects:
  6115 ;;		On entry : 0/0
  6116 ;;		On exit  : 0/0
  6117 ;;		Unchanged: 0/0
  6118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6119 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6121 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6122 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  6123 ;;Total ram usage:        4 bytes
  6124 ;; Hardware stack levels used:    1
  6125 ;; Hardware stack levels required when called:    6
  6126 ;; This function calls:
  6127 ;;		Nothing
  6128 ;; This function is called by:
  6129 ;;		_dtoa
  6130 ;; This function uses a non-reentrant model
  6131 ;;
  6132                           
  6133                           
  6134                           ;psect for function _abs
  6135  0CE7                     _abs:	
  6136                           
  6137                           ;incstack = 0
  6138                           ; Regs used in _abs: [wreg+status,2+status,0]
  6139  0CE7  0021               	movlb	1	; select bank1
  6140  0CE8  0834               	movf	(abs@a+1)^(0+128),w
  6141  0CE9  3A80               	xorlw	128
  6142  0CEA  00B5               	movwf	??_abs^(0+128)
  6143  0CEB  3080               	movlw	128
  6144  0CEC  0235               	subwf	??_abs^(0+128),w
  6145  0CED  1D03               	skipz
  6146  0CEE  2CF1               	goto	u1475
  6147  0CEF  3001               	movlw	1
  6148  0CF0  0233               	subwf	abs@a^(0+128),w
  6149  0CF1                     u1475:	
  6150  0CF1  1803               	skipnc
  6151  0CF2  0008               	return
  6152  0CF3  0021               	movlb	1	; select bank1
  6153  0CF4  0933               	comf	abs@a^(0+128),w
  6154  0CF5  00B5               	movwf	??_abs^(0+128)
  6155  0CF6  0934               	comf	(abs@a+1)^(0+128),w
  6156  0CF7  00B6               	movwf	(??_abs^(0+128)+1)
  6157  0CF8  0AB5               	incf	??_abs^(0+128),f
  6158  0CF9  1903               	skipnz
  6159  0CFA  0AB6               	incf	(??_abs^(0+128)+1),f
  6160  0CFB  0835               	movf	??_abs^(0+128),w
  6161  0CFC  00B3               	movwf	?_abs^(0+128)
  6162  0CFD  0836               	movf	(??_abs+1)^(0+128),w
  6163  0CFE  00B4               	movwf	(?_abs+1)^(0+128)
  6164  0CFF  0008               	return
  6165  0D00                     __end_of_abs:	
  6166                           
  6167                           	psect	text17
  6168  05BF                     __ptext17:	
  6169 ;; *************** function ___aomod *****************
  6170 ;; Defined at:
  6171 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  6172 ;; Parameters:    Size  Location     Type
  6173 ;;  divisor         8    0[BANK1 ] long long 
  6174 ;;  dividend        8    8[BANK1 ] long long 
  6175 ;; Auto vars:     Size  Location     Type
  6176 ;;  sign            1   18[BANK1 ] unsigned char 
  6177 ;;  counter         1   17[BANK1 ] unsigned char 
  6178 ;; Return value:  Size  Location     Type
  6179 ;;                  8    0[BANK1 ] long long 
  6180 ;; Registers used:
  6181 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6182 ;; Tracked objects:
  6183 ;;		On entry : 0/0
  6184 ;;		On exit  : 0/0
  6185 ;;		Unchanged: 0/0
  6186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6187 ;;      Params:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  6188 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6189 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6190 ;;      Totals:         0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0
  6191 ;;Total ram usage:       19 bytes
  6192 ;; Hardware stack levels used:    1
  6193 ;; Hardware stack levels required when called:    6
  6194 ;; This function calls:
  6195 ;;		Nothing
  6196 ;; This function is called by:
  6197 ;;		_dtoa
  6198 ;; This function uses a non-reentrant model
  6199 ;;
  6200                           
  6201                           
  6202                           ;psect for function ___aomod
  6203  05BF                     ___aomod:	
  6204                           
  6205                           ;incstack = 0
  6206                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  6207  05BF  0021               	movlb	1	; select bank1
  6208  05C0  01B2               	clrf	___aomod@sign^(0+128)
  6209  05C1  30A8               	movlw	low ___aomod@dividend
  6210  05C2  0086               	movwf	6
  6211  05C3  3000               	movlw	high ___aomod@dividend
  6212  05C4  0087               	movwf	7
  6213  05C5  3F47               	moviw [7]fsr1
  6214  05C6  00B0               	movwf	??___aomod^(0+128)
  6215  05C7  1FB0               	btfss	??___aomod^(0+128),7
  6216  05C8  2DEB               	goto	l1959
  6217  05C9  0021               	movlb	1	; select bank1
  6218  05CA  09A8               	comf	___aomod@dividend^(0+128),f
  6219  05CB  09A9               	comf	(___aomod@dividend+1)^(0+128),f
  6220  05CC  09AA               	comf	(___aomod@dividend+2)^(0+128),f
  6221  05CD  09AB               	comf	(___aomod@dividend+3)^(0+128),f
  6222  05CE  09AC               	comf	(___aomod@dividend+4)^(0+128),f
  6223  05CF  09AD               	comf	(___aomod@dividend+5)^(0+128),f
  6224  05D0  09AE               	comf	(___aomod@dividend+6)^(0+128),f
  6225  05D1  09AF               	comf	(___aomod@dividend+7)^(0+128),f
  6226  05D2  0AA8               	incf	___aomod@dividend^(0+128),f
  6227  05D3  1D03               	skipz
  6228  05D4  2DE8               	goto	u160lld
  6229  05D5  0AA9               	incf	(___aomod@dividend+1)^(0+128),f
  6230  05D6  1D03               	skipz
  6231  05D7  2DE8               	goto	u160lld
  6232  05D8  0AAA               	incf	(___aomod@dividend+2)^(0+128),f
  6233  05D9  1D03               	skipz
  6234  05DA  2DE8               	goto	u160lld
  6235  05DB  0AAB               	incf	(___aomod@dividend+3)^(0+128),f
  6236  05DC  1D03               	skipz
  6237  05DD  2DE8               	goto	u160lld
  6238  05DE  0AAC               	incf	(___aomod@dividend+4)^(0+128),f
  6239  05DF  1D03               	skipz
  6240  05E0  2DE8               	goto	u160lld
  6241  05E1  0AAD               	incf	(___aomod@dividend+5)^(0+128),f
  6242  05E2  1D03               	skipz
  6243  05E3  2DE8               	goto	u160lld
  6244  05E4  0AAE               	incf	(___aomod@dividend+6)^(0+128),f
  6245  05E5  1D03               	skipz
  6246  05E6  2DE8               	goto	u160lld
  6247  05E7  0AAF               	incf	(___aomod@dividend+7)^(0+128),f
  6248  05E8                     u160lld:	
  6249  05E8  0021               	movlb	1	; select bank1
  6250  05E9  01B2               	clrf	___aomod@sign^(0+128)
  6251  05EA  0AB2               	incf	___aomod@sign^(0+128),f
  6252  05EB                     l1959:	
  6253  05EB  30A0               	movlw	low ___aomod@divisor
  6254  05EC  0086               	movwf	6
  6255  05ED  3000               	movlw	high ___aomod@divisor
  6256  05EE  0087               	movwf	7
  6257  05EF  3F47               	moviw [7]fsr1
  6258  05F0  0021               	movlb	1	; select bank1
  6259  05F1  00B0               	movwf	??___aomod^(0+128)
  6260  05F2  1FB0               	btfss	??___aomod^(0+128),7
  6261  05F3  2E13               	goto	l1963
  6262  05F4  0021               	movlb	1	; select bank1
  6263  05F5  09A0               	comf	___aomod@divisor^(0+128),f
  6264  05F6  09A1               	comf	(___aomod@divisor+1)^(0+128),f
  6265  05F7  09A2               	comf	(___aomod@divisor+2)^(0+128),f
  6266  05F8  09A3               	comf	(___aomod@divisor+3)^(0+128),f
  6267  05F9  09A4               	comf	(___aomod@divisor+4)^(0+128),f
  6268  05FA  09A5               	comf	(___aomod@divisor+5)^(0+128),f
  6269  05FB  09A6               	comf	(___aomod@divisor+6)^(0+128),f
  6270  05FC  09A7               	comf	(___aomod@divisor+7)^(0+128),f
  6271  05FD  0AA0               	incf	___aomod@divisor^(0+128),f
  6272  05FE  1D03               	skipz
  6273  05FF  2E13               	goto	l1963
  6274  0600  0AA1               	incf	(___aomod@divisor+1)^(0+128),f
  6275  0601  1D03               	skipz
  6276  0602  2E13               	goto	l1963
  6277  0603  0AA2               	incf	(___aomod@divisor+2)^(0+128),f
  6278  0604  1D03               	skipz
  6279  0605  2E13               	goto	l1963
  6280  0606  0AA3               	incf	(___aomod@divisor+3)^(0+128),f
  6281  0607  1D03               	skipz
  6282  0608  2E13               	goto	l1963
  6283  0609  0AA4               	incf	(___aomod@divisor+4)^(0+128),f
  6284  060A  1D03               	skipz
  6285  060B  2E13               	goto	l1963
  6286  060C  0AA5               	incf	(___aomod@divisor+5)^(0+128),f
  6287  060D  1D03               	skipz
  6288  060E  2E13               	goto	l1963
  6289  060F  0AA6               	incf	(___aomod@divisor+6)^(0+128),f
  6290  0610  1D03               	skipz
  6291  0611  2E13               	goto	l1963
  6292  0612  0AA7               	incf	(___aomod@divisor+7)^(0+128),f
  6293  0613                     l1963:	
  6294  0613  0021               	movlb	1	; select bank1
  6295  0614  0820               	movf	___aomod@divisor^(0+128),w
  6296  0615  0421               	iorwf	(___aomod@divisor+1)^(0+128),w
  6297  0616  0422               	iorwf	(___aomod@divisor+2)^(0+128),w
  6298  0617  0423               	iorwf	(___aomod@divisor+3)^(0+128),w
  6299  0618  0424               	iorwf	(___aomod@divisor+4)^(0+128),w
  6300  0619  0425               	iorwf	(___aomod@divisor+5)^(0+128),w
  6301  061A  0426               	iorwf	(___aomod@divisor+6)^(0+128),w
  6302  061B  0427               	iorwf	(___aomod@divisor+7)^(0+128),w
  6303  061C  1903               	skipnz
  6304  061D  2E6B               	goto	l1979
  6305  061E  01B1               	clrf	___aomod@counter^(0+128)
  6306  061F  0AB1               	incf	___aomod@counter^(0+128),f
  6307  0620                     l1971:	
  6308  0620  1BA7               	btfsc	(___aomod@divisor+7)^(0+128),7
  6309  0621  2E2F               	goto	l1973
  6310  0622  35A0               	lslf	___aomod@divisor^(0+128),f
  6311  0623  0DA1               	rlf	(___aomod@divisor+1)^(0+128),f
  6312  0624  0DA2               	rlf	(___aomod@divisor+2)^(0+128),f
  6313  0625  0DA3               	rlf	(___aomod@divisor+3)^(0+128),f
  6314  0626  0DA4               	rlf	(___aomod@divisor+4)^(0+128),f
  6315  0627  0DA5               	rlf	(___aomod@divisor+5)^(0+128),f
  6316  0628  0DA6               	rlf	(___aomod@divisor+6)^(0+128),f
  6317  0629  0DA7               	rlf	(___aomod@divisor+7)^(0+128),f
  6318  062A  3001               	movlw	1
  6319  062B  00B0               	movwf	??___aomod^(0+128)
  6320  062C  0830               	movf	??___aomod^(0+128),w
  6321  062D  07B1               	addwf	___aomod@counter^(0+128),f
  6322  062E  2E20               	goto	l1971
  6323  062F                     l1973:	
  6324  062F  0827               	movf	(___aomod@divisor+7)^(0+128),w
  6325  0630  022F               	subwf	(___aomod@dividend+7)^(0+128),w
  6326  0631  1D03               	skipz
  6327  0632  2E4D               	goto	u1655
  6328  0633  0826               	movf	(___aomod@divisor+6)^(0+128),w
  6329  0634  022E               	subwf	(___aomod@dividend+6)^(0+128),w
  6330  0635  1D03               	skipz
  6331  0636  2E4D               	goto	u1655
  6332  0637  0825               	movf	(___aomod@divisor+5)^(0+128),w
  6333  0638  022D               	subwf	(___aomod@dividend+5)^(0+128),w
  6334  0639  1D03               	skipz
  6335  063A  2E4D               	goto	u1655
  6336  063B  0824               	movf	(___aomod@divisor+4)^(0+128),w
  6337  063C  022C               	subwf	(___aomod@dividend+4)^(0+128),w
  6338  063D  1D03               	skipz
  6339  063E  2E4D               	goto	u1655
  6340  063F  0823               	movf	(___aomod@divisor+3)^(0+128),w
  6341  0640  022B               	subwf	(___aomod@dividend+3)^(0+128),w
  6342  0641  1D03               	skipz
  6343  0642  2E4D               	goto	u1655
  6344  0643  0822               	movf	(___aomod@divisor+2)^(0+128),w
  6345  0644  022A               	subwf	(___aomod@dividend+2)^(0+128),w
  6346  0645  1D03               	skipz
  6347  0646  2E4D               	goto	u1655
  6348  0647  0821               	movf	(___aomod@divisor+1)^(0+128),w
  6349  0648  0229               	subwf	(___aomod@dividend+1)^(0+128),w
  6350  0649  1D03               	skipz
  6351  064A  2E4D               	goto	u1655
  6352  064B  0820               	movf	___aomod@divisor^(0+128),w
  6353  064C  0228               	subwf	___aomod@dividend^(0+128),w
  6354  064D                     u1655:	
  6355  064D  1C03               	skipc
  6356  064E  2E5F               	goto	l1977
  6357  064F  0820               	movf	___aomod@divisor^(0+128),w
  6358  0650  02A8               	subwf	___aomod@dividend^(0+128),f
  6359  0651  0821               	movf	(___aomod@divisor+1)^(0+128),w
  6360  0652  3BA9               	subwfb	(___aomod@dividend+1)^(0+128),f
  6361  0653  0822               	movf	(___aomod@divisor+2)^(0+128),w
  6362  0654  3BAA               	subwfb	(___aomod@dividend+2)^(0+128),f
  6363  0655  0823               	movf	(___aomod@divisor+3)^(0+128),w
  6364  0656  3BAB               	subwfb	(___aomod@dividend+3)^(0+128),f
  6365  0657  0824               	movf	(___aomod@divisor+4)^(0+128),w
  6366  0658  3BAC               	subwfb	(___aomod@dividend+4)^(0+128),f
  6367  0659  0825               	movf	(___aomod@divisor+5)^(0+128),w
  6368  065A  3BAD               	subwfb	(___aomod@dividend+5)^(0+128),f
  6369  065B  0826               	movf	(___aomod@divisor+6)^(0+128),w
  6370  065C  3BAE               	subwfb	(___aomod@dividend+6)^(0+128),f
  6371  065D  0827               	movf	(___aomod@divisor+7)^(0+128),w
  6372  065E  3BAF               	subwfb	(___aomod@dividend+7)^(0+128),f
  6373  065F                     l1977:	
  6374  065F  36A7               	lsrf	(___aomod@divisor+7)^(0+128),f
  6375  0660  0CA6               	rrf	(___aomod@divisor+6)^(0+128),f
  6376  0661  0CA5               	rrf	(___aomod@divisor+5)^(0+128),f
  6377  0662  0CA4               	rrf	(___aomod@divisor+4)^(0+128),f
  6378  0663  0CA3               	rrf	(___aomod@divisor+3)^(0+128),f
  6379  0664  0CA2               	rrf	(___aomod@divisor+2)^(0+128),f
  6380  0665  0CA1               	rrf	(___aomod@divisor+1)^(0+128),f
  6381  0666  0CA0               	rrf	___aomod@divisor^(0+128),f
  6382  0667  3001               	movlw	1
  6383  0668  02B1               	subwf	___aomod@counter^(0+128),f
  6384  0669  1D03               	btfss	3,2
  6385  066A  2E2F               	goto	l1973
  6386  066B                     l1979:	
  6387  066B  0832               	movf	___aomod@sign^(0+128),w
  6388  066C  1903               	btfsc	3,2
  6389  066D  2E8C               	goto	l607
  6390  066E  09A8               	comf	___aomod@dividend^(0+128),f
  6391  066F  09A9               	comf	(___aomod@dividend+1)^(0+128),f
  6392  0670  09AA               	comf	(___aomod@dividend+2)^(0+128),f
  6393  0671  09AB               	comf	(___aomod@dividend+3)^(0+128),f
  6394  0672  09AC               	comf	(___aomod@dividend+4)^(0+128),f
  6395  0673  09AD               	comf	(___aomod@dividend+5)^(0+128),f
  6396  0674  09AE               	comf	(___aomod@dividend+6)^(0+128),f
  6397  0675  09AF               	comf	(___aomod@dividend+7)^(0+128),f
  6398  0676  0AA8               	incf	___aomod@dividend^(0+128),f
  6399  0677  1D03               	skipz
  6400  0678  2E8C               	goto	l607
  6401  0679  0AA9               	incf	(___aomod@dividend+1)^(0+128),f
  6402  067A  1D03               	skipz
  6403  067B  2E8C               	goto	l607
  6404  067C  0AAA               	incf	(___aomod@dividend+2)^(0+128),f
  6405  067D  1D03               	skipz
  6406  067E  2E8C               	goto	l607
  6407  067F  0AAB               	incf	(___aomod@dividend+3)^(0+128),f
  6408  0680  1D03               	skipz
  6409  0681  2E8C               	goto	l607
  6410  0682  0AAC               	incf	(___aomod@dividend+4)^(0+128),f
  6411  0683  1D03               	skipz
  6412  0684  2E8C               	goto	l607
  6413  0685  0AAD               	incf	(___aomod@dividend+5)^(0+128),f
  6414  0686  1D03               	skipz
  6415  0687  2E8C               	goto	l607
  6416  0688  0AAE               	incf	(___aomod@dividend+6)^(0+128),f
  6417  0689  1D03               	skipz
  6418  068A  2E8C               	goto	l607
  6419  068B  0AAF               	incf	(___aomod@dividend+7)^(0+128),f
  6420  068C                     l607:	
  6421  068C  0021               	movlb	1	; select bank1
  6422  068D  0828               	movf	___aomod@dividend^(0+128),w
  6423  068E  00A0               	movwf	?___aomod^(0+128)
  6424  068F  0829               	movf	(___aomod@dividend+1)^(0+128),w
  6425  0690  00A1               	movwf	(?___aomod+1)^(0+128)
  6426  0691  082A               	movf	(___aomod@dividend+2)^(0+128),w
  6427  0692  00A2               	movwf	(?___aomod+2)^(0+128)
  6428  0693  082B               	movf	(___aomod@dividend+3)^(0+128),w
  6429  0694  00A3               	movwf	(?___aomod+3)^(0+128)
  6430  0695  082C               	movf	(___aomod@dividend+4)^(0+128),w
  6431  0696  00A4               	movwf	(?___aomod+4)^(0+128)
  6432  0697  082D               	movf	(___aomod@dividend+5)^(0+128),w
  6433  0698  00A5               	movwf	(?___aomod+5)^(0+128)
  6434  0699  082E               	movf	(___aomod@dividend+6)^(0+128),w
  6435  069A  00A6               	movwf	(?___aomod+6)^(0+128)
  6436  069B  082F               	movf	(___aomod@dividend+7)^(0+128),w
  6437  069C  00A7               	movwf	(?___aomod+7)^(0+128)
  6438  069D  0008               	return
  6439  069E                     __end_of___aomod:	
  6440                           
  6441                           	psect	text18
  6442  04C8                     __ptext18:	
  6443 ;; *************** function ___aodiv *****************
  6444 ;; Defined at:
  6445 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  6446 ;; Parameters:    Size  Location     Type
  6447 ;;  divisor         8    0[BANK1 ] long long 
  6448 ;;  dividend        8    8[BANK1 ] long long 
  6449 ;; Auto vars:     Size  Location     Type
  6450 ;;  quotient        8   19[BANK1 ] long long 
  6451 ;;  sign            1   18[BANK1 ] unsigned char 
  6452 ;;  counter         1   17[BANK1 ] unsigned char 
  6453 ;; Return value:  Size  Location     Type
  6454 ;;                  8    0[BANK1 ] long long 
  6455 ;; Registers used:
  6456 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6457 ;; Tracked objects:
  6458 ;;		On entry : 0/0
  6459 ;;		On exit  : 0/0
  6460 ;;		Unchanged: 0/0
  6461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6462 ;;      Params:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  6463 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  6464 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6465 ;;      Totals:         0       0      27       0       0       0       0       0       0       0       0       0       
      +0       0
  6466 ;;Total ram usage:       27 bytes
  6467 ;; Hardware stack levels used:    1
  6468 ;; Hardware stack levels required when called:    6
  6469 ;; This function calls:
  6470 ;;		Nothing
  6471 ;; This function is called by:
  6472 ;;		_dtoa
  6473 ;; This function uses a non-reentrant model
  6474 ;;
  6475                           
  6476                           
  6477                           ;psect for function ___aodiv
  6478  04C8                     ___aodiv:	
  6479                           
  6480                           ;incstack = 0
  6481                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  6482  04C8  0021               	movlb	1	; select bank1
  6483  04C9  01B2               	clrf	___aodiv@sign^(0+128)
  6484  04CA  30A0               	movlw	low ___aodiv@divisor
  6485  04CB  0086               	movwf	6
  6486  04CC  3000               	movlw	high ___aodiv@divisor
  6487  04CD  0087               	movwf	7
  6488  04CE  3F47               	moviw [7]fsr1
  6489  04CF  00B0               	movwf	??___aodiv^(0+128)
  6490  04D0  1FB0               	btfss	??___aodiv^(0+128),7
  6491  04D1  2CF4               	goto	l1921
  6492  04D2  0021               	movlb	1	; select bank1
  6493  04D3  09A0               	comf	___aodiv@divisor^(0+128),f
  6494  04D4  09A1               	comf	(___aodiv@divisor+1)^(0+128),f
  6495  04D5  09A2               	comf	(___aodiv@divisor+2)^(0+128),f
  6496  04D6  09A3               	comf	(___aodiv@divisor+3)^(0+128),f
  6497  04D7  09A4               	comf	(___aodiv@divisor+4)^(0+128),f
  6498  04D8  09A5               	comf	(___aodiv@divisor+5)^(0+128),f
  6499  04D9  09A6               	comf	(___aodiv@divisor+6)^(0+128),f
  6500  04DA  09A7               	comf	(___aodiv@divisor+7)^(0+128),f
  6501  04DB  0AA0               	incf	___aodiv@divisor^(0+128),f
  6502  04DC  1D03               	skipz
  6503  04DD  2CF1               	goto	u149lld
  6504  04DE  0AA1               	incf	(___aodiv@divisor+1)^(0+128),f
  6505  04DF  1D03               	skipz
  6506  04E0  2CF1               	goto	u149lld
  6507  04E1  0AA2               	incf	(___aodiv@divisor+2)^(0+128),f
  6508  04E2  1D03               	skipz
  6509  04E3  2CF1               	goto	u149lld
  6510  04E4  0AA3               	incf	(___aodiv@divisor+3)^(0+128),f
  6511  04E5  1D03               	skipz
  6512  04E6  2CF1               	goto	u149lld
  6513  04E7  0AA4               	incf	(___aodiv@divisor+4)^(0+128),f
  6514  04E8  1D03               	skipz
  6515  04E9  2CF1               	goto	u149lld
  6516  04EA  0AA5               	incf	(___aodiv@divisor+5)^(0+128),f
  6517  04EB  1D03               	skipz
  6518  04EC  2CF1               	goto	u149lld
  6519  04ED  0AA6               	incf	(___aodiv@divisor+6)^(0+128),f
  6520  04EE  1D03               	skipz
  6521  04EF  2CF1               	goto	u149lld
  6522  04F0  0AA7               	incf	(___aodiv@divisor+7)^(0+128),f
  6523  04F1                     u149lld:	
  6524  04F1  0021               	movlb	1	; select bank1
  6525  04F2  01B2               	clrf	___aodiv@sign^(0+128)
  6526  04F3  0AB2               	incf	___aodiv@sign^(0+128),f
  6527  04F4                     l1921:	
  6528  04F4  30A8               	movlw	low ___aodiv@dividend
  6529  04F5  0086               	movwf	6
  6530  04F6  3000               	movlw	high ___aodiv@dividend
  6531  04F7  0087               	movwf	7
  6532  04F8  3F47               	moviw [7]fsr1
  6533  04F9  0021               	movlb	1	; select bank1
  6534  04FA  00B0               	movwf	??___aodiv^(0+128)
  6535  04FB  1FB0               	btfss	??___aodiv^(0+128),7
  6536  04FC  2D21               	goto	l1927
  6537  04FD  0021               	movlb	1	; select bank1
  6538  04FE  09A8               	comf	___aodiv@dividend^(0+128),f
  6539  04FF  09A9               	comf	(___aodiv@dividend+1)^(0+128),f
  6540  0500  09AA               	comf	(___aodiv@dividend+2)^(0+128),f
  6541  0501  09AB               	comf	(___aodiv@dividend+3)^(0+128),f
  6542  0502  09AC               	comf	(___aodiv@dividend+4)^(0+128),f
  6543  0503  09AD               	comf	(___aodiv@dividend+5)^(0+128),f
  6544  0504  09AE               	comf	(___aodiv@dividend+6)^(0+128),f
  6545  0505  09AF               	comf	(___aodiv@dividend+7)^(0+128),f
  6546  0506  0AA8               	incf	___aodiv@dividend^(0+128),f
  6547  0507  1D03               	skipz
  6548  0508  2D1C               	goto	l1925
  6549  0509  0AA9               	incf	(___aodiv@dividend+1)^(0+128),f
  6550  050A  1D03               	skipz
  6551  050B  2D1C               	goto	l1925
  6552  050C  0AAA               	incf	(___aodiv@dividend+2)^(0+128),f
  6553  050D  1D03               	skipz
  6554  050E  2D1C               	goto	l1925
  6555  050F  0AAB               	incf	(___aodiv@dividend+3)^(0+128),f
  6556  0510  1D03               	skipz
  6557  0511  2D1C               	goto	l1925
  6558  0512  0AAC               	incf	(___aodiv@dividend+4)^(0+128),f
  6559  0513  1D03               	skipz
  6560  0514  2D1C               	goto	l1925
  6561  0515  0AAD               	incf	(___aodiv@dividend+5)^(0+128),f
  6562  0516  1D03               	skipz
  6563  0517  2D1C               	goto	l1925
  6564  0518  0AAE               	incf	(___aodiv@dividend+6)^(0+128),f
  6565  0519  1D03               	skipz
  6566  051A  2D1C               	goto	l1925
  6567  051B  0AAF               	incf	(___aodiv@dividend+7)^(0+128),f
  6568  051C                     l1925:	
  6569  051C  3001               	movlw	1
  6570  051D  0021               	movlb	1	; select bank1
  6571  051E  00B0               	movwf	??___aodiv^(0+128)
  6572  051F  0830               	movf	??___aodiv^(0+128),w
  6573  0520  06B2               	xorwf	___aodiv@sign^(0+128),f
  6574  0521                     l1927:	
  6575  0521  30B3               	movlw	low ___aodiv@quotient
  6576  0522  0086               	movwf	6
  6577  0523  3000               	movlw	high ___aodiv@quotient
  6578  0524  0087               	movwf	7
  6579  0525  3008               	movlw	8
  6580  0526  0021               	movlb	1	; select bank1
  6581  0527  00B0               	movwf	??___aodiv^(0+128)
  6582  0528  3000               	movlw	0
  6583  0529                     u1520:	
  6584  0529  001E               	movwi fsr1++
  6585  052A  0BB0               	decfsz	??___aodiv^(0+128),f
  6586  052B  2D29               	goto	u1520
  6587  052C  0820               	movf	___aodiv@divisor^(0+128),w
  6588  052D  0421               	iorwf	(___aodiv@divisor+1)^(0+128),w
  6589  052E  0422               	iorwf	(___aodiv@divisor+2)^(0+128),w
  6590  052F  0423               	iorwf	(___aodiv@divisor+3)^(0+128),w
  6591  0530  0424               	iorwf	(___aodiv@divisor+4)^(0+128),w
  6592  0531  0425               	iorwf	(___aodiv@divisor+5)^(0+128),w
  6593  0532  0426               	iorwf	(___aodiv@divisor+6)^(0+128),w
  6594  0533  0427               	iorwf	(___aodiv@divisor+7)^(0+128),w
  6595  0534  1903               	skipnz
  6596  0535  2D8C               	goto	l1949
  6597  0536  01B1               	clrf	___aodiv@counter^(0+128)
  6598  0537  0AB1               	incf	___aodiv@counter^(0+128),f
  6599  0538                     l1937:	
  6600  0538  1BA7               	btfsc	(___aodiv@divisor+7)^(0+128),7
  6601  0539  2D47               	goto	l1939
  6602  053A  35A0               	lslf	___aodiv@divisor^(0+128),f
  6603  053B  0DA1               	rlf	(___aodiv@divisor+1)^(0+128),f
  6604  053C  0DA2               	rlf	(___aodiv@divisor+2)^(0+128),f
  6605  053D  0DA3               	rlf	(___aodiv@divisor+3)^(0+128),f
  6606  053E  0DA4               	rlf	(___aodiv@divisor+4)^(0+128),f
  6607  053F  0DA5               	rlf	(___aodiv@divisor+5)^(0+128),f
  6608  0540  0DA6               	rlf	(___aodiv@divisor+6)^(0+128),f
  6609  0541  0DA7               	rlf	(___aodiv@divisor+7)^(0+128),f
  6610  0542  3001               	movlw	1
  6611  0543  00B0               	movwf	??___aodiv^(0+128)
  6612  0544  0830               	movf	??___aodiv^(0+128),w
  6613  0545  07B1               	addwf	___aodiv@counter^(0+128),f
  6614  0546  2D38               	goto	l1937
  6615  0547                     l1939:	
  6616  0547  35B3               	lslf	___aodiv@quotient^(0+128),f
  6617  0548  0DB4               	rlf	(___aodiv@quotient+1)^(0+128),f
  6618  0549  0DB5               	rlf	(___aodiv@quotient+2)^(0+128),f
  6619  054A  0DB6               	rlf	(___aodiv@quotient+3)^(0+128),f
  6620  054B  0DB7               	rlf	(___aodiv@quotient+4)^(0+128),f
  6621  054C  0DB8               	rlf	(___aodiv@quotient+5)^(0+128),f
  6622  054D  0DB9               	rlf	(___aodiv@quotient+6)^(0+128),f
  6623  054E  0DBA               	rlf	(___aodiv@quotient+7)^(0+128),f
  6624  054F  0827               	movf	(___aodiv@divisor+7)^(0+128),w
  6625  0550  022F               	subwf	(___aodiv@dividend+7)^(0+128),w
  6626  0551  1D03               	skipz
  6627  0552  2D6D               	goto	u1555
  6628  0553  0826               	movf	(___aodiv@divisor+6)^(0+128),w
  6629  0554  022E               	subwf	(___aodiv@dividend+6)^(0+128),w
  6630  0555  1D03               	skipz
  6631  0556  2D6D               	goto	u1555
  6632  0557  0825               	movf	(___aodiv@divisor+5)^(0+128),w
  6633  0558  022D               	subwf	(___aodiv@dividend+5)^(0+128),w
  6634  0559  1D03               	skipz
  6635  055A  2D6D               	goto	u1555
  6636  055B  0824               	movf	(___aodiv@divisor+4)^(0+128),w
  6637  055C  022C               	subwf	(___aodiv@dividend+4)^(0+128),w
  6638  055D  1D03               	skipz
  6639  055E  2D6D               	goto	u1555
  6640  055F  0823               	movf	(___aodiv@divisor+3)^(0+128),w
  6641  0560  022B               	subwf	(___aodiv@dividend+3)^(0+128),w
  6642  0561  1D03               	skipz
  6643  0562  2D6D               	goto	u1555
  6644  0563  0822               	movf	(___aodiv@divisor+2)^(0+128),w
  6645  0564  022A               	subwf	(___aodiv@dividend+2)^(0+128),w
  6646  0565  1D03               	skipz
  6647  0566  2D6D               	goto	u1555
  6648  0567  0821               	movf	(___aodiv@divisor+1)^(0+128),w
  6649  0568  0229               	subwf	(___aodiv@dividend+1)^(0+128),w
  6650  0569  1D03               	skipz
  6651  056A  2D6D               	goto	u1555
  6652  056B  0820               	movf	___aodiv@divisor^(0+128),w
  6653  056C  0228               	subwf	___aodiv@dividend^(0+128),w
  6654  056D                     u1555:	
  6655  056D  1C03               	skipc
  6656  056E  2D80               	goto	l1947
  6657  056F  0820               	movf	___aodiv@divisor^(0+128),w
  6658  0570  02A8               	subwf	___aodiv@dividend^(0+128),f
  6659  0571  0821               	movf	(___aodiv@divisor+1)^(0+128),w
  6660  0572  3BA9               	subwfb	(___aodiv@dividend+1)^(0+128),f
  6661  0573  0822               	movf	(___aodiv@divisor+2)^(0+128),w
  6662  0574  3BAA               	subwfb	(___aodiv@dividend+2)^(0+128),f
  6663  0575  0823               	movf	(___aodiv@divisor+3)^(0+128),w
  6664  0576  3BAB               	subwfb	(___aodiv@dividend+3)^(0+128),f
  6665  0577  0824               	movf	(___aodiv@divisor+4)^(0+128),w
  6666  0578  3BAC               	subwfb	(___aodiv@dividend+4)^(0+128),f
  6667  0579  0825               	movf	(___aodiv@divisor+5)^(0+128),w
  6668  057A  3BAD               	subwfb	(___aodiv@dividend+5)^(0+128),f
  6669  057B  0826               	movf	(___aodiv@divisor+6)^(0+128),w
  6670  057C  3BAE               	subwfb	(___aodiv@dividend+6)^(0+128),f
  6671  057D  0827               	movf	(___aodiv@divisor+7)^(0+128),w
  6672  057E  3BAF               	subwfb	(___aodiv@dividend+7)^(0+128),f
  6673  057F  1433               	bsf	___aodiv@quotient^(0+128),0
  6674  0580                     l1947:	
  6675  0580  36A7               	lsrf	(___aodiv@divisor+7)^(0+128),f
  6676  0581  0CA6               	rrf	(___aodiv@divisor+6)^(0+128),f
  6677  0582  0CA5               	rrf	(___aodiv@divisor+5)^(0+128),f
  6678  0583  0CA4               	rrf	(___aodiv@divisor+4)^(0+128),f
  6679  0584  0CA3               	rrf	(___aodiv@divisor+3)^(0+128),f
  6680  0585  0CA2               	rrf	(___aodiv@divisor+2)^(0+128),f
  6681  0586  0CA1               	rrf	(___aodiv@divisor+1)^(0+128),f
  6682  0587  0CA0               	rrf	___aodiv@divisor^(0+128),f
  6683  0588  3001               	movlw	1
  6684  0589  02B1               	subwf	___aodiv@counter^(0+128),f
  6685  058A  1D03               	btfss	3,2
  6686  058B  2D47               	goto	l1939
  6687  058C                     l1949:	
  6688  058C  0832               	movf	___aodiv@sign^(0+128),w
  6689  058D  1903               	btfsc	3,2
  6690  058E  2DAD               	goto	l594
  6691  058F  09B3               	comf	___aodiv@quotient^(0+128),f
  6692  0590  09B4               	comf	(___aodiv@quotient+1)^(0+128),f
  6693  0591  09B5               	comf	(___aodiv@quotient+2)^(0+128),f
  6694  0592  09B6               	comf	(___aodiv@quotient+3)^(0+128),f
  6695  0593  09B7               	comf	(___aodiv@quotient+4)^(0+128),f
  6696  0594  09B8               	comf	(___aodiv@quotient+5)^(0+128),f
  6697  0595  09B9               	comf	(___aodiv@quotient+6)^(0+128),f
  6698  0596  09BA               	comf	(___aodiv@quotient+7)^(0+128),f
  6699  0597  0AB3               	incf	___aodiv@quotient^(0+128),f
  6700  0598  1D03               	skipz
  6701  0599  2DAD               	goto	l594
  6702  059A  0AB4               	incf	(___aodiv@quotient+1)^(0+128),f
  6703  059B  1D03               	skipz
  6704  059C  2DAD               	goto	l594
  6705  059D  0AB5               	incf	(___aodiv@quotient+2)^(0+128),f
  6706  059E  1D03               	skipz
  6707  059F  2DAD               	goto	l594
  6708  05A0  0AB6               	incf	(___aodiv@quotient+3)^(0+128),f
  6709  05A1  1D03               	skipz
  6710  05A2  2DAD               	goto	l594
  6711  05A3  0AB7               	incf	(___aodiv@quotient+4)^(0+128),f
  6712  05A4  1D03               	skipz
  6713  05A5  2DAD               	goto	l594
  6714  05A6  0AB8               	incf	(___aodiv@quotient+5)^(0+128),f
  6715  05A7  1D03               	skipz
  6716  05A8  2DAD               	goto	l594
  6717  05A9  0AB9               	incf	(___aodiv@quotient+6)^(0+128),f
  6718  05AA  1D03               	skipz
  6719  05AB  2DAD               	goto	l594
  6720  05AC  0ABA               	incf	(___aodiv@quotient+7)^(0+128),f
  6721  05AD                     l594:	
  6722  05AD  0021               	movlb	1	; select bank1
  6723  05AE  0833               	movf	___aodiv@quotient^(0+128),w
  6724  05AF  00A0               	movwf	?___aodiv^(0+128)
  6725  05B0  0834               	movf	(___aodiv@quotient+1)^(0+128),w
  6726  05B1  00A1               	movwf	(?___aodiv+1)^(0+128)
  6727  05B2  0835               	movf	(___aodiv@quotient+2)^(0+128),w
  6728  05B3  00A2               	movwf	(?___aodiv+2)^(0+128)
  6729  05B4  0836               	movf	(___aodiv@quotient+3)^(0+128),w
  6730  05B5  00A3               	movwf	(?___aodiv+3)^(0+128)
  6731  05B6  0837               	movf	(___aodiv@quotient+4)^(0+128),w
  6732  05B7  00A4               	movwf	(?___aodiv+4)^(0+128)
  6733  05B8  0838               	movf	(___aodiv@quotient+5)^(0+128),w
  6734  05B9  00A5               	movwf	(?___aodiv+5)^(0+128)
  6735  05BA  0839               	movf	(___aodiv@quotient+6)^(0+128),w
  6736  05BB  00A6               	movwf	(?___aodiv+6)^(0+128)
  6737  05BC  083A               	movf	(___aodiv@quotient+7)^(0+128),w
  6738  05BD  00A7               	movwf	(?___aodiv+7)^(0+128)
  6739  05BE  0008               	return
  6740  05BF                     __end_of___aodiv:	
  6741                           
  6742                           	psect	text19
  6743  0C5C                     __ptext19:	
  6744 ;; *************** function _SYSTEM_Initialize *****************
  6745 ;; Defined at:
  6746 ;;		line 50 in file "mcc_generated_files/mcc.c"
  6747 ;; Parameters:    Size  Location     Type
  6748 ;;		None
  6749 ;; Auto vars:     Size  Location     Type
  6750 ;;		None
  6751 ;; Return value:  Size  Location     Type
  6752 ;;                  1    wreg      void 
  6753 ;; Registers used:
  6754 ;;		wreg, status,2, status,0, pclath, cstack
  6755 ;; Tracked objects:
  6756 ;;		On entry : 0/0
  6757 ;;		On exit  : 0/0
  6758 ;;		Unchanged: 0/0
  6759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6764 ;;Total ram usage:        0 bytes
  6765 ;; Hardware stack levels used:    1
  6766 ;; Hardware stack levels required when called:    8
  6767 ;; This function calls:
  6768 ;;		_EUSART_Initialize
  6769 ;;		_OSCILLATOR_Initialize
  6770 ;;		_PIN_MANAGER_Initialize
  6771 ;;		_TMR0_Initialize
  6772 ;; This function is called by:
  6773 ;;		_main
  6774 ;; This function uses a non-reentrant model
  6775 ;;
  6776                           
  6777                           
  6778                           ;psect for function _SYSTEM_Initialize
  6779  0C5C                     _SYSTEM_Initialize:	
  6780                           
  6781                           ;mcc_generated_files/mcc.c: 52:     PIN_MANAGER_Initialize();
  6782                           
  6783                           ;incstack = 0
  6784                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6785  0C5C  318D  25EF  318C   	fcall	_PIN_MANAGER_Initialize
  6786                           
  6787                           ;mcc_generated_files/mcc.c: 53:     OSCILLATOR_Initialize();
  6788  0C5F  318C  2416  318C   	fcall	_OSCILLATOR_Initialize
  6789                           
  6790                           ;mcc_generated_files/mcc.c: 54:     TMR0_Initialize();
  6791  0C62  318C  24CF  318C   	fcall	_TMR0_Initialize
  6792                           
  6793                           ;mcc_generated_files/mcc.c: 55:     EUSART_Initialize();
  6794  0C65  318D  2573         	fcall	_EUSART_Initialize
  6795  0C67  0008               	return
  6796  0C68                     __end_of_SYSTEM_Initialize:	
  6797                           
  6798                           	psect	text20
  6799  0CCF                     __ptext20:	
  6800 ;; *************** function _TMR0_Initialize *****************
  6801 ;; Defined at:
  6802 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  6803 ;; Parameters:    Size  Location     Type
  6804 ;;		None
  6805 ;; Auto vars:     Size  Location     Type
  6806 ;;		None
  6807 ;; Return value:  Size  Location     Type
  6808 ;;                  1    wreg      void 
  6809 ;; Registers used:
  6810 ;;		wreg, status,2, status,0, pclath, cstack
  6811 ;; Tracked objects:
  6812 ;;		On entry : 0/0
  6813 ;;		On exit  : 0/0
  6814 ;;		Unchanged: 0/0
  6815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6818 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6819 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6820 ;;Total ram usage:        1 bytes
  6821 ;; Hardware stack levels used:    1
  6822 ;; Hardware stack levels required when called:    7
  6823 ;; This function calls:
  6824 ;;		_TMR0_SetInterruptHandler
  6825 ;; This function is called by:
  6826 ;;		_SYSTEM_Initialize
  6827 ;; This function uses a non-reentrant model
  6828 ;;
  6829                           
  6830                           
  6831                           ;psect for function _TMR0_Initialize
  6832  0CCF                     _TMR0_Initialize:	
  6833                           
  6834                           ;mcc_generated_files/tmr0.c: 69:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD7 
      +                          & 0x3F));
  6835                           
  6836                           ;incstack = 0
  6837                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6838  0CCF  0021               	movlb	1	; select bank1
  6839  0CD0  0815               	movf	21,w	;volatile
  6840  0CD1  39C0               	andlw	192
  6841  0CD2  3817               	iorlw	23
  6842  0CD3  0095               	movwf	21	;volatile
  6843                           
  6844                           ;mcc_generated_files/tmr0.c: 72:     TMR0 = 0x0C;
  6845  0CD4  300C               	movlw	12
  6846  0CD5  0020               	movlb	0	; select bank0
  6847  0CD6  0095               	movwf	21	;volatile
  6848                           
  6849                           ;mcc_generated_files/tmr0.c: 75:     timer0ReloadVal= 12;
  6850  0CD7  300C               	movlw	12
  6851  0CD8  0021               	movlb	1	; select bank1
  6852  0CD9  00A2               	movwf	??_TMR0_Initialize^(0+128)
  6853  0CDA  0822               	movf	??_TMR0_Initialize^(0+128),w
  6854  0CDB  0020               	movlb	0	; select bank0
  6855  0CDC  00EE               	movwf	_timer0ReloadVal	;volatile
  6856                           
  6857                           ;mcc_generated_files/tmr0.c: 78:     INTCONbits.TMR0IF = 0;
  6858  0CDD  110B               	bcf	11,2	;volatile
  6859                           
  6860                           ;mcc_generated_files/tmr0.c: 81:     INTCONbits.TMR0IE = 1;
  6861  0CDE  168B               	bsf	11,5	;volatile
  6862                           
  6863                           ;mcc_generated_files/tmr0.c: 84:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  6864  0CDF  3003               	movlw	low _TMR0_DefaultInterruptHandler
  6865  0CE0  0021               	movlb	1	; select bank1
  6866  0CE1  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler^(0+128)
  6867  0CE2  3000               	movlw	high _TMR0_DefaultInterruptHandler
  6868  0CE3  00A1               	movwf	(TMR0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  6869  0CE4  318C  2449         	fcall	_TMR0_SetInterruptHandler
  6870  0CE6  0008               	return
  6871  0CE7                     __end_of_TMR0_Initialize:	
  6872                           
  6873                           	psect	text21
  6874  0C49                     __ptext21:	
  6875 ;; *************** function _TMR0_SetInterruptHandler *****************
  6876 ;; Defined at:
  6877 ;;		line 125 in file "mcc_generated_files/tmr0.c"
  6878 ;; Parameters:    Size  Location     Type
  6879 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  6880 ;;		 -> timerISR(1), TMR0_DefaultInterruptHandler(1), 
  6881 ;; Auto vars:     Size  Location     Type
  6882 ;;		None
  6883 ;; Return value:  Size  Location     Type
  6884 ;;                  1    wreg      void 
  6885 ;; Registers used:
  6886 ;;		wreg
  6887 ;; Tracked objects:
  6888 ;;		On entry : 0/0
  6889 ;;		On exit  : 0/0
  6890 ;;		Unchanged: 0/0
  6891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6892 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6895 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6896 ;;Total ram usage:        2 bytes
  6897 ;; Hardware stack levels used:    1
  6898 ;; Hardware stack levels required when called:    6
  6899 ;; This function calls:
  6900 ;;		Nothing
  6901 ;; This function is called by:
  6902 ;;		_TMR0_Initialize
  6903 ;;		_main
  6904 ;; This function uses a non-reentrant model
  6905 ;;
  6906                           
  6907                           
  6908                           ;psect for function _TMR0_SetInterruptHandler
  6909  0C49                     _TMR0_SetInterruptHandler:	
  6910                           
  6911                           ;mcc_generated_files/tmr0.c: 126:     TMR0_InterruptHandler = InterruptHandler;
  6912                           
  6913                           ;incstack = 0
  6914                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  6915  0C49  0021               	movlb	1	; select bank1
  6916  0C4A  0821               	movf	(TMR0_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  6917  0C4B  0020               	movlb	0	; select bank0
  6918  0C4C  00E5               	movwf	_TMR0_InterruptHandler+1
  6919  0C4D  0021               	movlb	1	; select bank1
  6920  0C4E  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler^(0+128),w
  6921  0C4F  0020               	movlb	0	; select bank0
  6922  0C50  00E4               	movwf	_TMR0_InterruptHandler
  6923  0C51  0008               	return
  6924  0C52                     __end_of_TMR0_SetInterruptHandler:	
  6925                           
  6926                           	psect	text22
  6927  0DEF                     __ptext22:	
  6928 ;; *************** function _PIN_MANAGER_Initialize *****************
  6929 ;; Defined at:
  6930 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  6931 ;; Parameters:    Size  Location     Type
  6932 ;;		None
  6933 ;; Auto vars:     Size  Location     Type
  6934 ;;		None
  6935 ;; Return value:  Size  Location     Type
  6936 ;;                  1    wreg      void 
  6937 ;; Registers used:
  6938 ;;		wreg, status,2, status,0, pclath, cstack
  6939 ;; Tracked objects:
  6940 ;;		On entry : 0/0
  6941 ;;		On exit  : 0/0
  6942 ;;		Unchanged: 0/0
  6943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6948 ;;Total ram usage:        0 bytes
  6949 ;; Hardware stack levels used:    1
  6950 ;; Hardware stack levels required when called:    7
  6951 ;; This function calls:
  6952 ;;		_IOCCF7_SetInterruptHandler
  6953 ;; This function is called by:
  6954 ;;		_SYSTEM_Initialize
  6955 ;; This function uses a non-reentrant model
  6956 ;;
  6957                           
  6958                           
  6959                           ;psect for function _PIN_MANAGER_Initialize
  6960  0DEF                     _PIN_MANAGER_Initialize:	
  6961                           
  6962                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  6963                           
  6964                           ;incstack = 0
  6965                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6966  0DEF  0022               	movlb	2	; select bank2
  6967  0DF0  018C               	clrf	12	;volatile
  6968                           
  6969                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  6970  0DF1  018D               	clrf	13	;volatile
  6971                           
  6972                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  6973  0DF2  018E               	clrf	14	;volatile
  6974                           
  6975                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0x37;
  6976  0DF3  3037               	movlw	55
  6977  0DF4  0021               	movlb	1	; select bank1
  6978  0DF5  008C               	movwf	12	;volatile
  6979                           
  6980                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0x70;
  6981  0DF6  3070               	movlw	112
  6982  0DF7  008D               	movwf	13	;volatile
  6983                           
  6984                           ;mcc_generated_files/pin_manager.c: 71:     TRISC = 0xFF;
  6985  0DF8  30FF               	movlw	255
  6986  0DF9  008E               	movwf	14	;volatile
  6987                           
  6988                           ;mcc_generated_files/pin_manager.c: 76:     ANSELC = 0x4F;
  6989  0DFA  304F               	movlw	79
  6990  0DFB  0023               	movlb	3	; select bank3
  6991  0DFC  008E               	movwf	14	;volatile
  6992                           
  6993                           ;mcc_generated_files/pin_manager.c: 77:     ANSELB = 0x70;
  6994  0DFD  3070               	movlw	112
  6995  0DFE  008D               	movwf	13	;volatile
  6996                           
  6997                           ;mcc_generated_files/pin_manager.c: 78:     ANSELA = 0x17;
  6998  0DFF  3017               	movlw	23
  6999  0E00  008C               	movwf	12	;volatile
  7000                           
  7001                           ;mcc_generated_files/pin_manager.c: 83:     WPUB = 0x00;
  7002  0E01  0024               	movlb	4	; select bank4
  7003  0E02  018D               	clrf	13	;volatile
  7004                           
  7005                           ;mcc_generated_files/pin_manager.c: 84:     WPUA = 0x00;
  7006  0E03  018C               	clrf	12	;volatile
  7007                           
  7008                           ;mcc_generated_files/pin_manager.c: 85:     WPUC = 0x00;
  7009  0E04  018E               	clrf	14	;volatile
  7010                           
  7011                           ;mcc_generated_files/pin_manager.c: 86:     OPTION_REGbits.nWPUEN = 1;
  7012  0E05  0021               	movlb	1	; select bank1
  7013  0E06  1795               	bsf	21,7	;volatile
  7014                           
  7015                           ;mcc_generated_files/pin_manager.c: 91:     ODCONA = 0x00;
  7016  0E07  0025               	movlb	5	; select bank5
  7017  0E08  018C               	clrf	12	;volatile
  7018                           
  7019                           ;mcc_generated_files/pin_manager.c: 92:     ODCONB = 0x00;
  7020  0E09  018D               	clrf	13	;volatile
  7021                           
  7022                           ;mcc_generated_files/pin_manager.c: 93:     ODCONC = 0x00;
  7023  0E0A  018E               	clrf	14	;volatile
  7024                           
  7025                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONA = 0x37;
  7026  0E0B  3037               	movlw	55
  7027  0E0C  0026               	movlb	6	; select bank6
  7028  0E0D  008C               	movwf	12	;volatile
  7029                           
  7030                           ;mcc_generated_files/pin_manager.c: 99:     SLRCONB = 0xF0;
  7031  0E0E  30F0               	movlw	240
  7032  0E0F  008D               	movwf	13	;volatile
  7033                           
  7034                           ;mcc_generated_files/pin_manager.c: 100:     SLRCONC = 0xFF;
  7035  0E10  30FF               	movlw	255
  7036  0E11  008E               	movwf	14	;volatile
  7037                           
  7038                           ;mcc_generated_files/pin_manager.c: 107:     IOCCFbits.IOCCF7 = 0;
  7039  0E12  0027               	movlb	7	; select bank7
  7040  0E13  1399               	bcf	25,7	;volatile
  7041                           
  7042                           ;mcc_generated_files/pin_manager.c: 109:     IOCCNbits.IOCCN7 = 0;
  7043  0E14  1398               	bcf	24,7	;volatile
  7044                           
  7045                           ;mcc_generated_files/pin_manager.c: 111:     IOCCPbits.IOCCP7 = 1;
  7046  0E15  1797               	bsf	23,7	;volatile
  7047                           
  7048                           ;mcc_generated_files/pin_manager.c: 116:     IOCCF7_SetInterruptHandler(IOCCF7_DefaultIn
      +                          terruptHandler);
  7049  0E16  3002               	movlw	low _IOCCF7_DefaultInterruptHandler
  7050  0E17  0021               	movlb	1	; select bank1
  7051  0E18  00A0               	movwf	IOCCF7_SetInterruptHandler@InterruptHandler^(0+128)
  7052  0E19  3000               	movlw	high _IOCCF7_DefaultInterruptHandler
  7053  0E1A  00A1               	movwf	(IOCCF7_SetInterruptHandler@InterruptHandler^(0+128)+1)
  7054  0E1B  318C  2440         	fcall	_IOCCF7_SetInterruptHandler
  7055                           
  7056                           ;mcc_generated_files/pin_manager.c: 119:     INTCONbits.IOCIE = 1;
  7057  0E1D  158B               	bsf	11,3	;volatile
  7058                           
  7059                           ;mcc_generated_files/pin_manager.c: 122:     RB7PPS = 0x12;
  7060  0E1E  3012               	movlw	18
  7061  0E1F  003D               	movlb	29	; select bank29
  7062  0E20  009F               	movwf	31	;volatile
  7063  0E21  0008               	return
  7064  0E22                     __end_of_PIN_MANAGER_Initialize:	
  7065                           
  7066                           	psect	text23
  7067  0C40                     __ptext23:	
  7068 ;; *************** function _IOCCF7_SetInterruptHandler *****************
  7069 ;; Defined at:
  7070 ;;		line 152 in file "mcc_generated_files/pin_manager.c"
  7071 ;; Parameters:    Size  Location     Type
  7072 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  7073 ;;		 -> speedCalc(1), IOCCF7_DefaultInterruptHandler(1), 
  7074 ;; Auto vars:     Size  Location     Type
  7075 ;;		None
  7076 ;; Return value:  Size  Location     Type
  7077 ;;                  1    wreg      void 
  7078 ;; Registers used:
  7079 ;;		wreg
  7080 ;; Tracked objects:
  7081 ;;		On entry : 0/0
  7082 ;;		On exit  : 0/0
  7083 ;;		Unchanged: 0/0
  7084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7085 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7088 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7089 ;;Total ram usage:        2 bytes
  7090 ;; Hardware stack levels used:    1
  7091 ;; Hardware stack levels required when called:    6
  7092 ;; This function calls:
  7093 ;;		Nothing
  7094 ;; This function is called by:
  7095 ;;		_PIN_MANAGER_Initialize
  7096 ;;		_main
  7097 ;; This function uses a non-reentrant model
  7098 ;;
  7099                           
  7100                           
  7101                           ;psect for function _IOCCF7_SetInterruptHandler
  7102  0C40                     _IOCCF7_SetInterruptHandler:	
  7103                           
  7104                           ;mcc_generated_files/pin_manager.c: 153:     IOCCF7_InterruptHandler = InterruptHandler;
  7105                           
  7106                           ;incstack = 0
  7107                           ; Regs used in _IOCCF7_SetInterruptHandler: [wreg]
  7108  0C40  0021               	movlb	1	; select bank1
  7109  0C41  0821               	movf	(IOCCF7_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  7110  0C42  0020               	movlb	0	; select bank0
  7111  0C43  00E7               	movwf	_IOCCF7_InterruptHandler+1
  7112  0C44  0021               	movlb	1	; select bank1
  7113  0C45  0820               	movf	IOCCF7_SetInterruptHandler@InterruptHandler^(0+128),w
  7114  0C46  0020               	movlb	0	; select bank0
  7115  0C47  00E6               	movwf	_IOCCF7_InterruptHandler
  7116  0C48  0008               	return
  7117  0C49                     __end_of_IOCCF7_SetInterruptHandler:	
  7118                           
  7119                           	psect	text24
  7120  0C16                     __ptext24:	
  7121 ;; *************** function _OSCILLATOR_Initialize *****************
  7122 ;; Defined at:
  7123 ;;		line 58 in file "mcc_generated_files/mcc.c"
  7124 ;; Parameters:    Size  Location     Type
  7125 ;;		None
  7126 ;; Auto vars:     Size  Location     Type
  7127 ;;		None
  7128 ;; Return value:  Size  Location     Type
  7129 ;;                  1    wreg      void 
  7130 ;; Registers used:
  7131 ;;		wreg, status,2
  7132 ;; Tracked objects:
  7133 ;;		On entry : 0/0
  7134 ;;		On exit  : 0/0
  7135 ;;		Unchanged: 0/0
  7136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7141 ;;Total ram usage:        0 bytes
  7142 ;; Hardware stack levels used:    1
  7143 ;; Hardware stack levels required when called:    6
  7144 ;; This function calls:
  7145 ;;		Nothing
  7146 ;; This function is called by:
  7147 ;;		_SYSTEM_Initialize
  7148 ;; This function uses a non-reentrant model
  7149 ;;
  7150                           
  7151                           
  7152                           ;psect for function _OSCILLATOR_Initialize
  7153  0C16                     _OSCILLATOR_Initialize:	
  7154                           
  7155                           ;mcc_generated_files/mcc.c: 61:     OSCCON = 0x52;
  7156                           
  7157                           ;incstack = 0
  7158                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  7159  0C16  3052               	movlw	82
  7160  0C17  0021               	movlb	1	; select bank1
  7161  0C18  0099               	movwf	25	;volatile
  7162                           
  7163                           ;mcc_generated_files/mcc.c: 63:     OSCTUNE = 0x00;
  7164  0C19  0198               	clrf	24	;volatile
  7165                           
  7166                           ;mcc_generated_files/mcc.c: 65:     BORCON = 0x00;
  7167  0C1A  0022               	movlb	2	; select bank2
  7168  0C1B  0196               	clrf	22	;volatile
  7169  0C1C  0008               	return
  7170  0C1D                     __end_of_OSCILLATOR_Initialize:	
  7171                           
  7172                           	psect	text25
  7173  0D73                     __ptext25:	
  7174 ;; *************** function _EUSART_Initialize *****************
  7175 ;; Defined at:
  7176 ;;		line 65 in file "mcc_generated_files/eusart.c"
  7177 ;; Parameters:    Size  Location     Type
  7178 ;;		None
  7179 ;; Auto vars:     Size  Location     Type
  7180 ;;		None
  7181 ;; Return value:  Size  Location     Type
  7182 ;;                  1    wreg      void 
  7183 ;; Registers used:
  7184 ;;		wreg, status,2, status,0, pclath, cstack
  7185 ;; Tracked objects:
  7186 ;;		On entry : 0/0
  7187 ;;		On exit  : 0/0
  7188 ;;		Unchanged: 0/0
  7189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7194 ;;Total ram usage:        0 bytes
  7195 ;; Hardware stack levels used:    1
  7196 ;; Hardware stack levels required when called:    7
  7197 ;; This function calls:
  7198 ;;		_EUSART_SetErrorHandler
  7199 ;;		_EUSART_SetFramingErrorHandler
  7200 ;;		_EUSART_SetOverrunErrorHandler
  7201 ;; This function is called by:
  7202 ;;		_SYSTEM_Initialize
  7203 ;; This function uses a non-reentrant model
  7204 ;;
  7205                           
  7206                           
  7207                           ;psect for function _EUSART_Initialize
  7208  0D73                     _EUSART_Initialize:	
  7209                           
  7210                           ;mcc_generated_files/eusart.c: 70:     BAUD1CON = 0x08;
  7211                           
  7212                           ;incstack = 0
  7213                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7214  0D73  3008               	movlw	8
  7215  0D74  0023               	movlb	3	; select bank3
  7216  0D75  009F               	movwf	31	;volatile
  7217                           
  7218                           ;mcc_generated_files/eusart.c: 73:     RC1STA = 0x80;
  7219  0D76  3080               	movlw	128
  7220  0D77  009D               	movwf	29	;volatile
  7221                           
  7222                           ;mcc_generated_files/eusart.c: 76:     TX1STA = 0x24;
  7223  0D78  3024               	movlw	36
  7224  0D79  009E               	movwf	30	;volatile
  7225                           
  7226                           ;mcc_generated_files/eusart.c: 79:     SPBRGL = 0x0C;
  7227  0D7A  300C               	movlw	12
  7228  0D7B  009B               	movwf	27	;volatile
  7229                           
  7230                           ;mcc_generated_files/eusart.c: 82:     SPBRGH = 0x00;
  7231  0D7C  019C               	clrf	28	;volatile
  7232                           
  7233                           ;mcc_generated_files/eusart.c: 85:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  7234  0D7D  3000               	movlw	0
  7235  0D7E  0021               	movlb	1	; select bank1
  7236  0D7F  00A0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128)
  7237  0D80  3000               	movlw	0
  7238  0D81  00A1               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler^(0+128)+1)
  7239  0D82  318C  242E  318D   	fcall	_EUSART_SetFramingErrorHandler
  7240                           
  7241                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  7242  0D85  3000               	movlw	0
  7243  0D86  0021               	movlb	1	; select bank1
  7244  0D87  00A0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)
  7245  0D88  3000               	movlw	0
  7246  0D89  00A1               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)+1)
  7247  0D8A  318C  2437  318D   	fcall	_EUSART_SetOverrunErrorHandler
  7248                           
  7249                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  7250  0D8D  3000               	movlw	0
  7251  0D8E  0021               	movlb	1	; select bank1
  7252  0D8F  00A0               	movwf	EUSART_SetErrorHandler@interruptHandler^(0+128)
  7253  0D90  3000               	movlw	0
  7254  0D91  00A1               	movwf	(EUSART_SetErrorHandler@interruptHandler^(0+128)+1)
  7255  0D92  318C  2425         	fcall	_EUSART_SetErrorHandler
  7256                           
  7257                           ;mcc_generated_files/eusart.c: 89:     eusartRxLastError.status = 0;
  7258  0D94  0020               	movlb	0	; select bank0
  7259  0D95  01DF               	clrf	_eusartRxLastError	;volatile
  7260  0D96  0008               	return
  7261  0D97                     __end_of_EUSART_Initialize:	
  7262                           
  7263                           	psect	text26
  7264  0C37                     __ptext26:	
  7265 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  7266 ;; Defined at:
  7267 ;;		line 175 in file "mcc_generated_files/eusart.c"
  7268 ;; Parameters:    Size  Location     Type
  7269 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  7270 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  7271 ;; Auto vars:     Size  Location     Type
  7272 ;;		None
  7273 ;; Return value:  Size  Location     Type
  7274 ;;                  1    wreg      void 
  7275 ;; Registers used:
  7276 ;;		wreg
  7277 ;; Tracked objects:
  7278 ;;		On entry : 0/0
  7279 ;;		On exit  : 0/0
  7280 ;;		Unchanged: 0/0
  7281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7282 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7285 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7286 ;;Total ram usage:        2 bytes
  7287 ;; Hardware stack levels used:    1
  7288 ;; Hardware stack levels required when called:    6
  7289 ;; This function calls:
  7290 ;;		Nothing
  7291 ;; This function is called by:
  7292 ;;		_EUSART_Initialize
  7293 ;; This function uses a non-reentrant model
  7294 ;;
  7295                           
  7296                           
  7297                           ;psect for function _EUSART_SetOverrunErrorHandler
  7298  0C37                     _EUSART_SetOverrunErrorHandler:	
  7299                           
  7300                           ;mcc_generated_files/eusart.c: 176:     EUSART_OverrunErrorHandler = interruptHandler;
  7301                           
  7302                           ;incstack = 0
  7303                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  7304  0C37  0021               	movlb	1	; select bank1
  7305  0C38  0821               	movf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^(0+128),w
  7306  0C39  0020               	movlb	0	; select bank0
  7307  0C3A  00EB               	movwf	_EUSART_OverrunErrorHandler+1
  7308  0C3B  0021               	movlb	1	; select bank1
  7309  0C3C  0820               	movf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128),w
  7310  0C3D  0020               	movlb	0	; select bank0
  7311  0C3E  00EA               	movwf	_EUSART_OverrunErrorHandler
  7312  0C3F  0008               	return
  7313  0C40                     __end_of_EUSART_SetOverrunErrorHandler:	
  7314                           
  7315                           	psect	text27
  7316  0C2E                     __ptext27:	
  7317 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  7318 ;; Defined at:
  7319 ;;		line 171 in file "mcc_generated_files/eusart.c"
  7320 ;; Parameters:    Size  Location     Type
  7321 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  7322 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  7323 ;; Auto vars:     Size  Location     Type
  7324 ;;		None
  7325 ;; Return value:  Size  Location     Type
  7326 ;;                  1    wreg      void 
  7327 ;; Registers used:
  7328 ;;		wreg
  7329 ;; Tracked objects:
  7330 ;;		On entry : 0/0
  7331 ;;		On exit  : 0/0
  7332 ;;		Unchanged: 0/0
  7333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7334 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7337 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7338 ;;Total ram usage:        2 bytes
  7339 ;; Hardware stack levels used:    1
  7340 ;; Hardware stack levels required when called:    6
  7341 ;; This function calls:
  7342 ;;		Nothing
  7343 ;; This function is called by:
  7344 ;;		_EUSART_Initialize
  7345 ;; This function uses a non-reentrant model
  7346 ;;
  7347                           
  7348                           
  7349                           ;psect for function _EUSART_SetFramingErrorHandler
  7350  0C2E                     _EUSART_SetFramingErrorHandler:	
  7351                           
  7352                           ;mcc_generated_files/eusart.c: 172:     EUSART_FramingErrorHandler = interruptHandler;
  7353                           
  7354                           ;incstack = 0
  7355                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  7356  0C2E  0021               	movlb	1	; select bank1
  7357  0C2F  0821               	movf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^(0+128),w
  7358  0C30  0020               	movlb	0	; select bank0
  7359  0C31  00ED               	movwf	_EUSART_FramingErrorHandler+1
  7360  0C32  0021               	movlb	1	; select bank1
  7361  0C33  0820               	movf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128),w
  7362  0C34  0020               	movlb	0	; select bank0
  7363  0C35  00EC               	movwf	_EUSART_FramingErrorHandler
  7364  0C36  0008               	return
  7365  0C37                     __end_of_EUSART_SetFramingErrorHandler:	
  7366                           
  7367                           	psect	text28
  7368  0C25                     __ptext28:	
  7369 ;; *************** function _EUSART_SetErrorHandler *****************
  7370 ;; Defined at:
  7371 ;;		line 179 in file "mcc_generated_files/eusart.c"
  7372 ;; Parameters:    Size  Location     Type
  7373 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  7374 ;;		 -> EUSART_DefaultErrorHandler(1), 
  7375 ;; Auto vars:     Size  Location     Type
  7376 ;;		None
  7377 ;; Return value:  Size  Location     Type
  7378 ;;                  1    wreg      void 
  7379 ;; Registers used:
  7380 ;;		wreg
  7381 ;; Tracked objects:
  7382 ;;		On entry : 0/0
  7383 ;;		On exit  : 0/0
  7384 ;;		Unchanged: 0/0
  7385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7386 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7389 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7390 ;;Total ram usage:        2 bytes
  7391 ;; Hardware stack levels used:    1
  7392 ;; Hardware stack levels required when called:    6
  7393 ;; This function calls:
  7394 ;;		Nothing
  7395 ;; This function is called by:
  7396 ;;		_EUSART_Initialize
  7397 ;; This function uses a non-reentrant model
  7398 ;;
  7399                           
  7400                           
  7401                           ;psect for function _EUSART_SetErrorHandler
  7402  0C25                     _EUSART_SetErrorHandler:	
  7403                           
  7404                           ;mcc_generated_files/eusart.c: 180:     EUSART_ErrorHandler = interruptHandler;
  7405                           
  7406                           ;incstack = 0
  7407                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  7408  0C25  0021               	movlb	1	; select bank1
  7409  0C26  0821               	movf	(EUSART_SetErrorHandler@interruptHandler+1)^(0+128),w
  7410  0C27  0020               	movlb	0	; select bank0
  7411  0C28  00E9               	movwf	_EUSART_ErrorHandler+1
  7412  0C29  0021               	movlb	1	; select bank1
  7413  0C2A  0820               	movf	EUSART_SetErrorHandler@interruptHandler^(0+128),w
  7414  0C2B  0020               	movlb	0	; select bank0
  7415  0C2C  00E8               	movwf	_EUSART_ErrorHandler
  7416  0C2D  0008               	return
  7417  0C2E                     __end_of_EUSART_SetErrorHandler:	
  7418                           
  7419                           	psect	intentry
  7420  0004                     __pintentry:	
  7421 ;; *************** function _INTERRUPT_InterruptManager *****************
  7422 ;; Defined at:
  7423 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  7424 ;; Parameters:    Size  Location     Type
  7425 ;;		None
  7426 ;; Auto vars:     Size  Location     Type
  7427 ;;		None
  7428 ;; Return value:  Size  Location     Type
  7429 ;;                  1    wreg      void 
  7430 ;; Registers used:
  7431 ;;		wreg, status,2, status,0, pclath, cstack
  7432 ;; Tracked objects:
  7433 ;;		On entry : 0/0
  7434 ;;		On exit  : 0/0
  7435 ;;		Unchanged: 0/0
  7436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7441 ;;Total ram usage:        0 bytes
  7442 ;; Hardware stack levels used:    1
  7443 ;; Hardware stack levels required when called:    5
  7444 ;; This function calls:
  7445 ;;		_PIN_MANAGER_IOC
  7446 ;;		_TMR0_ISR
  7447 ;; This function is called by:
  7448 ;;		Interrupt level 1
  7449 ;; This function uses a non-reentrant model
  7450 ;;
  7451                           
  7452  0004                     _INTERRUPT_InterruptManager:	
  7453                           
  7454                           ;incstack = 0
  7455  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  7456                           
  7457                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  7458  0005  3180               	pagesel	$
  7459                           
  7460                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  7461  0006  1A8B               	btfsc	11,5	;volatile
  7462  0007  1D0B               	btfss	11,2	;volatile
  7463  0008  280D               	goto	i1l236
  7464                           
  7465                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
  7466  0009  318C  2475  3180   	fcall	_TMR0_ISR
  7467                           
  7468                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  7469  000C  2812               	goto	i1l240
  7470  000D                     i1l236:	
  7471                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.IOCIE == 1 && INTCO
      +                          Nbits.IOCIF == 1)
  7472                           
  7473  000D  198B               	btfsc	11,3	;volatile
  7474  000E  1C0B               	btfss	11,0	;volatile
  7475  000F  2812               	goto	i1l240
  7476                           
  7477                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         PIN_MANAGER_IOC();
  7478  0010  318C  2404         	fcall	_PIN_MANAGER_IOC
  7479  0012                     i1l240:	
  7480                           ;mcc_generated_files/interrupt_manager.c: 62:     }
  7481                           
  7482  0012  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  7483  0013  0009               	retfie
  7484  0014                     __end_of_INTERRUPT_InterruptManager:	
  7485                           
  7486                           	psect	text30
  7487  0C75                     __ptext30:	
  7488 ;; *************** function _TMR0_ISR *****************
  7489 ;; Defined at:
  7490 ;;		line 108 in file "mcc_generated_files/tmr0.c"
  7491 ;; Parameters:    Size  Location     Type
  7492 ;;		None
  7493 ;; Auto vars:     Size  Location     Type
  7494 ;;		None
  7495 ;; Return value:  Size  Location     Type
  7496 ;;                  1    wreg      void 
  7497 ;; Registers used:
  7498 ;;		wreg, status,2, status,0, pclath, cstack
  7499 ;; Tracked objects:
  7500 ;;		On entry : 0/0
  7501 ;;		On exit  : 0/0
  7502 ;;		Unchanged: 0/0
  7503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7508 ;;Total ram usage:        0 bytes
  7509 ;; Hardware stack levels used:    1
  7510 ;; Hardware stack levels required when called:    1
  7511 ;; This function calls:
  7512 ;;		Absolute function
  7513 ;;		_TMR0_DefaultInterruptHandler
  7514 ;;		_timerISR
  7515 ;; This function is called by:
  7516 ;;		_INTERRUPT_InterruptManager
  7517 ;; This function uses a non-reentrant model
  7518 ;;
  7519                           
  7520                           
  7521                           ;psect for function _TMR0_ISR
  7522  0C75                     _TMR0_ISR:	
  7523                           
  7524                           ;mcc_generated_files/tmr0.c: 112:     INTCONbits.TMR0IF = 0;
  7525                           
  7526                           ;incstack = 0
  7527                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  7528  0C75  110B               	bcf	11,2	;volatile
  7529                           
  7530                           ;mcc_generated_files/tmr0.c: 114:     TMR0 = timer0ReloadVal;
  7531  0C76  0020               	movlb	0	; select bank0
  7532  0C77  086E               	movf	_timer0ReloadVal,w	;volatile
  7533  0C78  0095               	movwf	21	;volatile
  7534                           
  7535                           ;mcc_generated_files/tmr0.c: 116:     if(TMR0_InterruptHandler)
  7536  0C79  0864               	movf	_TMR0_InterruptHandler,w
  7537  0C7A  0465               	iorwf	_TMR0_InterruptHandler+1,w
  7538  0C7B  1903               	btfsc	3,2
  7539  0C7C  0008               	return
  7540                           
  7541                           ;mcc_generated_files/tmr0.c: 117:     {;mcc_generated_files/tmr0.c: 118:         TMR0_In
      +                          terruptHandler();
  7542  0C7D  0865               	movf	_TMR0_InterruptHandler+1,w
  7543  0C7E  008A               	movwf	10
  7544  0C7F  0864               	movf	_TMR0_InterruptHandler,w
  7545  0C80  000A               	callw
  7546  0C81  318C               	pagesel	$
  7547  0C82  0008               	return
  7548  0C83                     __end_of_TMR0_ISR:	
  7549                           
  7550                           	psect	text31
  7551  0003                     __ptext31:	
  7552 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  7553 ;; Defined at:
  7554 ;;		line 129 in file "mcc_generated_files/tmr0.c"
  7555 ;; Parameters:    Size  Location     Type
  7556 ;;		None
  7557 ;; Auto vars:     Size  Location     Type
  7558 ;;		None
  7559 ;; Return value:  Size  Location     Type
  7560 ;;                  1    wreg      void 
  7561 ;; Registers used:
  7562 ;;		None
  7563 ;; Tracked objects:
  7564 ;;		On entry : 0/0
  7565 ;;		On exit  : 0/0
  7566 ;;		Unchanged: 0/0
  7567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7572 ;;Total ram usage:        0 bytes
  7573 ;; Hardware stack levels used:    1
  7574 ;; This function calls:
  7575 ;;		Nothing
  7576 ;; This function is called by:
  7577 ;;		_TMR0_Initialize
  7578 ;;		_TMR0_ISR
  7579 ;; This function uses a non-reentrant model
  7580 ;;
  7581                           
  7582                           
  7583                           ;psect for function _TMR0_DefaultInterruptHandler
  7584  0003                     _TMR0_DefaultInterruptHandler:	
  7585                           
  7586                           ;incstack = 0
  7587                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  7588  0003  0008               	return
  7589  0004                     __end_of_TMR0_DefaultInterruptHandler:	
  7590                           
  7591                           	psect	text32
  7592  0C91                     __ptext32:	
  7593 ;; *************** function _timerISR *****************
  7594 ;; Defined at:
  7595 ;;		line 67 in file "main.c"
  7596 ;; Parameters:    Size  Location     Type
  7597 ;;		None
  7598 ;; Auto vars:     Size  Location     Type
  7599 ;;		None
  7600 ;; Return value:  Size  Location     Type
  7601 ;;                  1    wreg      void 
  7602 ;; Registers used:
  7603 ;;		wreg
  7604 ;; Tracked objects:
  7605 ;;		On entry : 0/0
  7606 ;;		On exit  : 0/0
  7607 ;;		Unchanged: 0/0
  7608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7612 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7613 ;;Total ram usage:        0 bytes
  7614 ;; Hardware stack levels used:    1
  7615 ;; This function calls:
  7616 ;;		Nothing
  7617 ;; This function is called by:
  7618 ;;		_main
  7619 ;;		_TMR0_ISR
  7620 ;; This function uses a non-reentrant model
  7621 ;;
  7622                           
  7623                           
  7624                           ;psect for function _timerISR
  7625  0C91                     _timerISR:	
  7626                           
  7627                           ;main.c: 68:     counter++ ;
  7628                           
  7629                           ;incstack = 0
  7630                           ; Regs used in _timerISR: [wreg]
  7631  0C91  3001               	movlw	1
  7632  0C92  0020               	movlb	0	; select bank0
  7633  0C93  07D1               	addwf	_counter,f
  7634  0C94  3000               	movlw	0
  7635  0C95  3DD2               	addwfc	_counter+1,f
  7636  0C96  3000               	movlw	0
  7637  0C97  3DD3               	addwfc	_counter+2,f
  7638  0C98  3000               	movlw	0
  7639  0C99  3DD4               	addwfc	_counter+3,f
  7640                           
  7641                           ;main.c: 69:     if ( counter % 2 == 0 ){
  7642  0C9A  1851               	btfsc	_counter,0
  7643  0C9B  0008               	return
  7644                           
  7645                           ;main.c: 70:         second++ ;
  7646  0C9C  3001               	movlw	1
  7647  0C9D  07D5               	addwf	_second,f
  7648  0C9E  3000               	movlw	0
  7649  0C9F  3DD6               	addwfc	_second+1,f
  7650  0CA0  3000               	movlw	0
  7651  0CA1  3DD7               	addwfc	_second+2,f
  7652  0CA2  3000               	movlw	0
  7653  0CA3  3DD8               	addwfc	_second+3,f
  7654  0CA4  0008               	return
  7655  0CA5                     __end_of_timerISR:	
  7656                           
  7657                           	psect	text33
  7658  0C04                     __ptext33:	
  7659 ;; *************** function _PIN_MANAGER_IOC *****************
  7660 ;; Defined at:
  7661 ;;		line 125 in file "mcc_generated_files/pin_manager.c"
  7662 ;; Parameters:    Size  Location     Type
  7663 ;;		None
  7664 ;; Auto vars:     Size  Location     Type
  7665 ;;		None
  7666 ;; Return value:  Size  Location     Type
  7667 ;;                  1    wreg      void 
  7668 ;; Registers used:
  7669 ;;		wreg, status,2, status,0, pclath, cstack
  7670 ;; Tracked objects:
  7671 ;;		On entry : 0/0
  7672 ;;		On exit  : 0/0
  7673 ;;		Unchanged: 0/0
  7674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7679 ;;Total ram usage:        0 bytes
  7680 ;; Hardware stack levels used:    1
  7681 ;; Hardware stack levels required when called:    4
  7682 ;; This function calls:
  7683 ;;		_IOCCF7_ISR
  7684 ;; This function is called by:
  7685 ;;		_INTERRUPT_InterruptManager
  7686 ;; This function uses a non-reentrant model
  7687 ;;
  7688                           
  7689                           
  7690                           ;psect for function _PIN_MANAGER_IOC
  7691  0C04                     _PIN_MANAGER_IOC:	
  7692                           
  7693                           ;mcc_generated_files/pin_manager.c: 128:     if(IOCCFbits.IOCCF7 == 1)
  7694                           
  7695                           ;incstack = 0
  7696                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
  7697  0C04  0027               	movlb	7	; select bank7
  7698  0C05  1F99               	btfss	25,7	;volatile
  7699  0C06  0008               	return
  7700                           
  7701                           ;mcc_generated_files/pin_manager.c: 129:     {;mcc_generated_files/pin_manager.c: 130:  
      +                                 IOCCF7_ISR();
  7702  0C07  318C  2468         	fcall	_IOCCF7_ISR
  7703  0C09  0008               	return
  7704  0C0A                     __end_of_PIN_MANAGER_IOC:	
  7705                           
  7706                           	psect	text34
  7707  0C68                     __ptext34:	
  7708 ;; *************** function _IOCCF7_ISR *****************
  7709 ;; Defined at:
  7710 ;;		line 137 in file "mcc_generated_files/pin_manager.c"
  7711 ;; Parameters:    Size  Location     Type
  7712 ;;		None
  7713 ;; Auto vars:     Size  Location     Type
  7714 ;;		None
  7715 ;; Return value:  Size  Location     Type
  7716 ;;                  1    wreg      void 
  7717 ;; Registers used:
  7718 ;;		wreg, status,2, status,0, pclath, cstack
  7719 ;; Tracked objects:
  7720 ;;		On entry : 0/0
  7721 ;;		On exit  : 0/0
  7722 ;;		Unchanged: 0/0
  7723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7728 ;;Total ram usage:        0 bytes
  7729 ;; Hardware stack levels used:    1
  7730 ;; Hardware stack levels required when called:    3
  7731 ;; This function calls:
  7732 ;;		Absolute function
  7733 ;;		_IOCCF7_DefaultInterruptHandler
  7734 ;;		_speedCalc
  7735 ;; This function is called by:
  7736 ;;		_PIN_MANAGER_IOC
  7737 ;; This function uses a non-reentrant model
  7738 ;;
  7739                           
  7740                           
  7741                           ;psect for function _IOCCF7_ISR
  7742  0C68                     _IOCCF7_ISR:	
  7743                           
  7744                           ;mcc_generated_files/pin_manager.c: 142:     if(IOCCF7_InterruptHandler)
  7745                           
  7746                           ;incstack = 0
  7747                           ; Regs used in _IOCCF7_ISR: [wreg+status,2+status,0+pclath+cstack]
  7748  0C68  0020               	movlb	0	; select bank0
  7749  0C69  0866               	movf	_IOCCF7_InterruptHandler,w
  7750  0C6A  0467               	iorwf	_IOCCF7_InterruptHandler+1,w
  7751  0C6B  1903               	btfsc	3,2
  7752  0C6C  2C72               	goto	i1l2441
  7753                           
  7754                           ;mcc_generated_files/pin_manager.c: 143:     {;mcc_generated_files/pin_manager.c: 144:  
      +                                 IOCCF7_InterruptHandler();
  7755  0C6D  0867               	movf	_IOCCF7_InterruptHandler+1,w
  7756  0C6E  008A               	movwf	10
  7757  0C6F  0866               	movf	_IOCCF7_InterruptHandler,w
  7758  0C70  000A               	callw
  7759  0C71  318C               	pagesel	$
  7760  0C72                     i1l2441:	
  7761                           
  7762                           ;mcc_generated_files/pin_manager.c: 146:     IOCCFbits.IOCCF7 = 0;
  7763  0C72  0027               	movlb	7	; select bank7
  7764  0C73  1399               	bcf	25,7	;volatile
  7765  0C74  0008               	return
  7766  0C75                     __end_of_IOCCF7_ISR:	
  7767                           
  7768                           	psect	text35
  7769  0002                     __ptext35:	
  7770 ;; *************** function _IOCCF7_DefaultInterruptHandler *****************
  7771 ;; Defined at:
  7772 ;;		line 159 in file "mcc_generated_files/pin_manager.c"
  7773 ;; Parameters:    Size  Location     Type
  7774 ;;		None
  7775 ;; Auto vars:     Size  Location     Type
  7776 ;;		None
  7777 ;; Return value:  Size  Location     Type
  7778 ;;                  1    wreg      void 
  7779 ;; Registers used:
  7780 ;;		None
  7781 ;; Tracked objects:
  7782 ;;		On entry : 0/0
  7783 ;;		On exit  : 0/0
  7784 ;;		Unchanged: 0/0
  7785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7790 ;;Total ram usage:        0 bytes
  7791 ;; Hardware stack levels used:    1
  7792 ;; This function calls:
  7793 ;;		Nothing
  7794 ;; This function is called by:
  7795 ;;		_PIN_MANAGER_Initialize
  7796 ;;		_IOCCF7_ISR
  7797 ;; This function uses a non-reentrant model
  7798 ;;
  7799                           
  7800                           
  7801                           ;psect for function _IOCCF7_DefaultInterruptHandler
  7802  0002                     _IOCCF7_DefaultInterruptHandler:	
  7803                           
  7804                           ;incstack = 0
  7805                           ; Regs used in _IOCCF7_DefaultInterruptHandler: []
  7806  0002  0008               	return
  7807  0003                     __end_of_IOCCF7_DefaultInterruptHandler:	
  7808                           
  7809                           	psect	text36
  7810  069E                     __ptext36:	
  7811 ;; *************** function _speedCalc *****************
  7812 ;; Defined at:
  7813 ;;		line 75 in file "main.c"
  7814 ;; Parameters:    Size  Location     Type
  7815 ;;		None
  7816 ;; Auto vars:     Size  Location     Type
  7817 ;;		None
  7818 ;; Return value:  Size  Location     Type
  7819 ;;                  1    wreg      void 
  7820 ;; Registers used:
  7821 ;;		wreg, status,2, status,0, pclath, cstack
  7822 ;; Tracked objects:
  7823 ;;		On entry : 0/0
  7824 ;;		On exit  : 0/0
  7825 ;;		Unchanged: 0/0
  7826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7831 ;;Total ram usage:        0 bytes
  7832 ;; Hardware stack levels used:    1
  7833 ;; Hardware stack levels required when called:    2
  7834 ;; This function calls:
  7835 ;;		___flmul
  7836 ;;		___fltol
  7837 ;;		___lmul
  7838 ;;		___xxtofl
  7839 ;; This function is called by:
  7840 ;;		_main
  7841 ;;		_IOCCF7_ISR
  7842 ;; This function uses a non-reentrant model
  7843 ;;
  7844                           
  7845                           
  7846                           ;psect for function _speedCalc
  7847  069E                     _speedCalc:	
  7848                           
  7849                           ;main.c: 77:     rpm = second * 60 ;
  7850                           
  7851                           ;incstack = 0
  7852                           ; Regs used in _speedCalc: [wreg+status,2+status,0+pclath+cstack]
  7853  069E  0020               	movlb	0	; select bank0
  7854  069F  0858               	movf	_second+3,w
  7855  06A0  00F3               	movwf	___lmul@multiplier+3
  7856  06A1  0857               	movf	_second+2,w
  7857  06A2  00F2               	movwf	___lmul@multiplier+2
  7858  06A3  0856               	movf	_second+1,w
  7859  06A4  00F1               	movwf	___lmul@multiplier+1
  7860  06A5  0855               	movf	_second,w
  7861  06A6  00F0               	movwf	___lmul@multiplier
  7862  06A7  3000               	movlw	0
  7863  06A8  00F7               	movwf	___lmul@multiplicand+3
  7864  06A9  3000               	movlw	0
  7865  06AA  00F6               	movwf	___lmul@multiplicand+2
  7866  06AB  3000               	movlw	0
  7867  06AC  00F5               	movwf	___lmul@multiplicand+1
  7868  06AD  303C               	movlw	60
  7869  06AE  00F4               	movwf	___lmul@multiplicand
  7870  06AF  318D  25C0  3186   	fcall	___lmul
  7871  06B2  0873               	movf	?___lmul+3,w
  7872  06B3  0020               	movlb	0	; select bank0
  7873  06B4  00E3               	movwf	_rpm+3
  7874  06B5  0872               	movf	?___lmul+2,w
  7875  06B6  00E2               	movwf	_rpm+2
  7876  06B7  0871               	movf	?___lmul+1,w
  7877  06B8  00E1               	movwf	_rpm+1
  7878  06B9  0870               	movf	?___lmul,w
  7879  06BA  00E0               	movwf	_rpm
  7880                           
  7881                           ;main.c: 80:     speed = 83 * rpm * (0.00095) ;
  7882  06BB  3000               	movlw	0
  7883  06BC  00F7               	movwf	___lmul@multiplicand+3
  7884  06BD  3000               	movlw	0
  7885  06BE  00F6               	movwf	___lmul@multiplicand+2
  7886  06BF  3000               	movlw	0
  7887  06C0  00F5               	movwf	___lmul@multiplicand+1
  7888  06C1  3053               	movlw	83
  7889  06C2  00F4               	movwf	___lmul@multiplicand
  7890  06C3  0863               	movf	_rpm+3,w
  7891  06C4  00F3               	movwf	___lmul@multiplier+3
  7892  06C5  0862               	movf	_rpm+2,w
  7893  06C6  00F2               	movwf	___lmul@multiplier+2
  7894  06C7  0861               	movf	_rpm+1,w
  7895  06C8  00F1               	movwf	___lmul@multiplier+1
  7896  06C9  0860               	movf	_rpm,w
  7897  06CA  00F0               	movwf	___lmul@multiplier
  7898  06CB  318D  25C0  3186   	fcall	___lmul
  7899  06CE  0873               	movf	?___lmul+3,w
  7900  06CF  0020               	movlb	0	; select bank0
  7901  06D0  00A3               	movwf	___xxtofl@val+3
  7902  06D1  0872               	movf	?___lmul+2,w
  7903  06D2  00A2               	movwf	___xxtofl@val+2
  7904  06D3  0871               	movf	?___lmul+1,w
  7905  06D4  00A1               	movwf	___xxtofl@val+1
  7906  06D5  0870               	movf	?___lmul,w
  7907  06D6  00A0               	movwf	___xxtofl@val
  7908  06D7  3001               	movlw	1
  7909  06D8  3187  2764  3186   	fcall	___xxtofl
  7910  06DB  0020               	movlb	0	; select bank0
  7911  06DC  0823               	movf	?___xxtofl+3,w
  7912  06DD  00B5               	movwf	___flmul@a+3
  7913  06DE  0822               	movf	?___xxtofl+2,w
  7914  06DF  00B4               	movwf	___flmul@a+2
  7915  06E0  0821               	movf	?___xxtofl+1,w
  7916  06E1  00B3               	movwf	___flmul@a+1
  7917  06E2  0820               	movf	?___xxtofl,w
  7918  06E3  00B2               	movwf	___flmul@a
  7919  06E4  303A               	movlw	58
  7920  06E5  00B1               	movwf	___flmul@b+3
  7921  06E6  3079               	movlw	121
  7922  06E7  00B0               	movwf	___flmul@b+2
  7923  06E8  3009               	movlw	9
  7924  06E9  00AF               	movwf	___flmul@b+1
  7925  06EA  306C               	movlw	108
  7926  06EB  00AE               	movwf	___flmul@b
  7927  06EC  3180  203D  3186   	fcall	___flmul
  7928  06EF  0020               	movlb	0	; select bank0
  7929  06F0  0831               	movf	?___flmul+3,w
  7930  06F1  00CB               	movwf	___fltol@f1+3
  7931  06F2  0830               	movf	?___flmul+2,w
  7932  06F3  00CA               	movwf	___fltol@f1+2
  7933  06F4  082F               	movf	?___flmul+1,w
  7934  06F5  00C9               	movwf	___fltol@f1+1
  7935  06F6  082E               	movf	?___flmul,w
  7936  06F7  00C8               	movwf	___fltol@f1
  7937  06F8  318F  2729  3186   	fcall	___fltol
  7938  06FB  0020               	movlb	0	; select bank0
  7939  06FC  084B               	movf	?___fltol+3,w
  7940  06FD  0022               	movlb	2	; select bank2
  7941  06FE  00D2               	movwf	(_speed+3)^(0+256)
  7942  06FF  0020               	movlb	0	; select bank0
  7943  0700  084A               	movf	?___fltol+2,w
  7944  0701  0022               	movlb	2	; select bank2
  7945  0702  00D1               	movwf	(_speed+2)^(0+256)
  7946  0703  0020               	movlb	0	; select bank0
  7947  0704  0849               	movf	?___fltol+1,w
  7948  0705  0022               	movlb	2	; select bank2
  7949  0706  00D0               	movwf	(_speed+1)^(0+256)
  7950  0707  0020               	movlb	0	; select bank0
  7951  0708  0848               	movf	?___fltol,w
  7952  0709  0022               	movlb	2	; select bank2
  7953  070A  00CF               	movwf	_speed^(0+256)
  7954                           
  7955                           ;main.c: 81:     counter = 0 ;
  7956  070B  3000               	movlw	0
  7957  070C  0020               	movlb	0	; select bank0
  7958  070D  00D4               	movwf	_counter+3
  7959  070E  3000               	movlw	0
  7960  070F  00D3               	movwf	_counter+2
  7961  0710  3000               	movlw	0
  7962  0711  00D2               	movwf	_counter+1
  7963  0712  3000               	movlw	0
  7964  0713  00D1               	movwf	_counter
  7965                           
  7966                           ;main.c: 82:     second = 0 ;
  7967  0714  3000               	movlw	0
  7968  0715  00D8               	movwf	_second+3
  7969  0716  3000               	movlw	0
  7970  0717  00D7               	movwf	_second+2
  7971  0718  3000               	movlw	0
  7972  0719  00D6               	movwf	_second+1
  7973  071A  3000               	movlw	0
  7974  071B  00D5               	movwf	_second
  7975                           
  7976                           ;main.c: 83:     distance = (distance + 83) * (0.000016) ;
  7977  071C  3053               	movlw	83
  7978  071D  0022               	movlb	2	; select bank2
  7979  071E  0753               	addwf	_distance^(0+256),w
  7980  071F  0020               	movlb	0	; select bank0
  7981  0720  00A0               	movwf	___xxtofl@val
  7982  0721  3000               	movlw	0
  7983  0722  0022               	movlb	2	; select bank2
  7984  0723  3D54               	addwfc	(_distance+1)^(0+256),w
  7985  0724  0020               	movlb	0	; select bank0
  7986  0725  00A1               	movwf	___xxtofl@val+1
  7987  0726  3000               	movlw	0
  7988  0727  0022               	movlb	2	; select bank2
  7989  0728  3D55               	addwfc	(_distance+2)^(0+256),w
  7990  0729  0020               	movlb	0	; select bank0
  7991  072A  00A2               	movwf	___xxtofl@val+2
  7992  072B  3000               	movlw	0
  7993  072C  0022               	movlb	2	; select bank2
  7994  072D  3D56               	addwfc	(_distance+3)^(0+256),w
  7995  072E  0020               	movlb	0	; select bank0
  7996  072F  00A3               	movwf	___xxtofl@val+3
  7997  0730  3001               	movlw	1
  7998  0731  3187  2764  3186   	fcall	___xxtofl
  7999  0734  0020               	movlb	0	; select bank0
  8000  0735  0823               	movf	?___xxtofl+3,w
  8001  0736  00B5               	movwf	___flmul@a+3
  8002  0737  0822               	movf	?___xxtofl+2,w
  8003  0738  00B4               	movwf	___flmul@a+2
  8004  0739  0821               	movf	?___xxtofl+1,w
  8005  073A  00B3               	movwf	___flmul@a+1
  8006  073B  0820               	movf	?___xxtofl,w
  8007  073C  00B2               	movwf	___flmul@a
  8008  073D  3037               	movlw	55
  8009  073E  00B1               	movwf	___flmul@b+3
  8010  073F  3086               	movlw	134
  8011  0740  00B0               	movwf	___flmul@b+2
  8012  0741  3037               	movlw	55
  8013  0742  00AF               	movwf	___flmul@b+1
  8014  0743  30BD               	movlw	189
  8015  0744  00AE               	movwf	___flmul@b
  8016  0745  3180  203D  3186   	fcall	___flmul
  8017  0748  0020               	movlb	0	; select bank0
  8018  0749  0831               	movf	?___flmul+3,w
  8019  074A  00CB               	movwf	___fltol@f1+3
  8020  074B  0830               	movf	?___flmul+2,w
  8021  074C  00CA               	movwf	___fltol@f1+2
  8022  074D  082F               	movf	?___flmul+1,w
  8023  074E  00C9               	movwf	___fltol@f1+1
  8024  074F  082E               	movf	?___flmul,w
  8025  0750  00C8               	movwf	___fltol@f1
  8026  0751  318F  2729         	fcall	___fltol
  8027  0753  0020               	movlb	0	; select bank0
  8028  0754  084B               	movf	?___fltol+3,w
  8029  0755  0022               	movlb	2	; select bank2
  8030  0756  00D6               	movwf	(_distance+3)^(0+256)
  8031  0757  0020               	movlb	0	; select bank0
  8032  0758  084A               	movf	?___fltol+2,w
  8033  0759  0022               	movlb	2	; select bank2
  8034  075A  00D5               	movwf	(_distance+2)^(0+256)
  8035  075B  0020               	movlb	0	; select bank0
  8036  075C  0849               	movf	?___fltol+1,w
  8037  075D  0022               	movlb	2	; select bank2
  8038  075E  00D4               	movwf	(_distance+1)^(0+256)
  8039  075F  0020               	movlb	0	; select bank0
  8040  0760  0848               	movf	?___fltol,w
  8041  0761  0022               	movlb	2	; select bank2
  8042  0762  00D3               	movwf	_distance^(0+256)
  8043  0763  0008               	return
  8044  0764                     __end_of_speedCalc:	
  8045                           
  8046                           	psect	text37
  8047  0764                     __ptext37:	
  8048 ;; *************** function ___xxtofl *****************
  8049 ;; Defined at:
  8050 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
  8051 ;; Parameters:    Size  Location     Type
  8052 ;;  sign            1    wreg     unsigned char 
  8053 ;;  val             4    0[BANK0 ] long 
  8054 ;; Auto vars:     Size  Location     Type
  8055 ;;  sign            1    8[BANK0 ] unsigned char 
  8056 ;;  arg             4   10[BANK0 ] unsigned long 
  8057 ;;  exp             1    9[BANK0 ] unsigned char 
  8058 ;; Return value:  Size  Location     Type
  8059 ;;                  4    0[BANK0 ] unsigned char 
  8060 ;; Registers used:
  8061 ;;		wreg, status,2, status,0
  8062 ;; Tracked objects:
  8063 ;;		On entry : 0/0
  8064 ;;		On exit  : 0/0
  8065 ;;		Unchanged: 0/0
  8066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8067 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8068 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8069 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8070 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8071 ;;Total ram usage:       14 bytes
  8072 ;; Hardware stack levels used:    1
  8073 ;; This function calls:
  8074 ;;		Nothing
  8075 ;; This function is called by:
  8076 ;;		_speedCalc
  8077 ;; This function uses a non-reentrant model
  8078 ;;
  8079                           
  8080                           
  8081                           ;psect for function ___xxtofl
  8082  0764                     ___xxtofl:	
  8083                           
  8084                           ;incstack = 0
  8085                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  8086                           ;___xxtofl@sign stored from wreg
  8087  0764  0020               	movlb	0	; select bank0
  8088  0765  00A8               	movwf	___xxtofl@sign
  8089  0766  0828               	movf	___xxtofl@sign,w
  8090  0767  1D03               	btfss	3,2
  8091  0768  1FA3               	btfss	___xxtofl@val+3,7
  8092  0769  2F7A               	goto	i1l2251
  8093  076A  0920               	comf	___xxtofl@val,w
  8094  076B  00AA               	movwf	___xxtofl@arg
  8095  076C  0921               	comf	___xxtofl@val+1,w
  8096  076D  00AB               	movwf	___xxtofl@arg+1
  8097  076E  0922               	comf	___xxtofl@val+2,w
  8098  076F  00AC               	movwf	___xxtofl@arg+2
  8099  0770  0923               	comf	___xxtofl@val+3,w
  8100  0771  00AD               	movwf	___xxtofl@arg+3
  8101  0772  0AAA               	incf	___xxtofl@arg,f
  8102  0773  1903               	skipnz
  8103  0774  0AAB               	incf	___xxtofl@arg+1,f
  8104  0775  1903               	skipnz
  8105  0776  0AAC               	incf	___xxtofl@arg+2,f
  8106  0777  1903               	skipnz
  8107  0778  0AAD               	incf	___xxtofl@arg+3,f
  8108  0779  2F82               	goto	i1l929
  8109  077A                     i1l2251:	
  8110  077A  0823               	movf	___xxtofl@val+3,w
  8111  077B  00AD               	movwf	___xxtofl@arg+3
  8112  077C  0822               	movf	___xxtofl@val+2,w
  8113  077D  00AC               	movwf	___xxtofl@arg+2
  8114  077E  0821               	movf	___xxtofl@val+1,w
  8115  077F  00AB               	movwf	___xxtofl@arg+1
  8116  0780  0820               	movf	___xxtofl@val,w
  8117  0781  00AA               	movwf	___xxtofl@arg
  8118  0782                     i1l929:	
  8119  0782  0823               	movf	___xxtofl@val+3,w
  8120  0783  0422               	iorwf	___xxtofl@val+2,w
  8121  0784  0421               	iorwf	___xxtofl@val+1,w
  8122  0785  0420               	iorwf	___xxtofl@val,w
  8123  0786  1D03               	skipz
  8124  0787  2F91               	goto	i1l2257
  8125  0788  3000               	movlw	0
  8126  0789  00A3               	movwf	?___xxtofl+3
  8127  078A  3000               	movlw	0
  8128  078B  00A2               	movwf	?___xxtofl+2
  8129  078C  3000               	movlw	0
  8130  078D  00A1               	movwf	?___xxtofl+1
  8131  078E  3000               	movlw	0
  8132  078F  00A0               	movwf	?___xxtofl
  8133  0790  0008               	return
  8134  0791                     i1l2257:	
  8135  0791  3096               	movlw	150
  8136  0792  00A4               	movwf	??___xxtofl
  8137  0793  0824               	movf	??___xxtofl,w
  8138  0794  00A9               	movwf	___xxtofl@exp
  8139  0795                     i1l2261:	
  8140  0795  30FE               	movlw	254
  8141  0796  052D               	andwf	___xxtofl@arg+3,w
  8142  0797  1903               	btfsc	3,2
  8143  0798  2FB8               	goto	i1l935
  8144  0799  3001               	movlw	1
  8145  079A  00A4               	movwf	??___xxtofl
  8146  079B  0824               	movf	??___xxtofl,w
  8147  079C  07A9               	addwf	___xxtofl@exp,f
  8148  079D  3001               	movlw	1
  8149  079E                     u231_25:	
  8150  079E  36AD               	lsrf	___xxtofl@arg+3,f
  8151  079F  0CAC               	rrf	___xxtofl@arg+2,f
  8152  07A0  0CAB               	rrf	___xxtofl@arg+1,f
  8153  07A1  0CAA               	rrf	___xxtofl@arg,f
  8154  07A2  0B89               	decfsz	9,f
  8155  07A3  2F9E               	goto	u231_25
  8156  07A4  2F95               	goto	i1l2261
  8157  07A5                     i1l2263:	
  8158  07A5  3001               	movlw	1
  8159  07A6  00A4               	movwf	??___xxtofl
  8160  07A7  0824               	movf	??___xxtofl,w
  8161  07A8  07A9               	addwf	___xxtofl@exp,f
  8162  07A9  3001               	movlw	1
  8163  07AA  07AA               	addwf	___xxtofl@arg,f
  8164  07AB  3000               	movlw	0
  8165  07AC  3DAB               	addwfc	___xxtofl@arg+1,f
  8166  07AD  3000               	movlw	0
  8167  07AE  3DAC               	addwfc	___xxtofl@arg+2,f
  8168  07AF  3000               	movlw	0
  8169  07B0  3DAD               	addwfc	___xxtofl@arg+3,f
  8170  07B1  3001               	movlw	1
  8171  07B2                     u233_25:	
  8172  07B2  36AD               	lsrf	___xxtofl@arg+3,f
  8173  07B3  0CAC               	rrf	___xxtofl@arg+2,f
  8174  07B4  0CAB               	rrf	___xxtofl@arg+1,f
  8175  07B5  0CAA               	rrf	___xxtofl@arg,f
  8176  07B6  0B89               	decfsz	9,f
  8177  07B7  2FB2               	goto	u233_25
  8178  07B8                     i1l935:	
  8179  07B8  30FF               	movlw	255
  8180  07B9  052D               	andwf	___xxtofl@arg+3,w
  8181  07BA  1903               	btfsc	3,2
  8182  07BB  2FCA               	goto	i1l2271
  8183  07BC  2FA5               	goto	i1l2263
  8184  07BD                     i1l2273:	
  8185  07BD  3002               	movlw	2
  8186  07BE  0229               	subwf	___xxtofl@exp,w
  8187  07BF  1C03               	btfss	3,0
  8188  07C0  2FCC               	goto	i1l942
  8189  07C1  3001               	movlw	1
  8190  07C2  02A9               	subwf	___xxtofl@exp,f
  8191  07C3  3001               	movlw	1
  8192  07C4                     u235_25:	
  8193  07C4  35AA               	lslf	___xxtofl@arg,f
  8194  07C5  0DAB               	rlf	___xxtofl@arg+1,f
  8195  07C6  0DAC               	rlf	___xxtofl@arg+2,f
  8196  07C7  0DAD               	rlf	___xxtofl@arg+3,f
  8197  07C8  0B89               	decfsz	9,f
  8198  07C9  2FC4               	goto	u235_25
  8199  07CA                     i1l2271:	
  8200  07CA  1FAC               	btfss	___xxtofl@arg+2,7
  8201  07CB  2FBD               	goto	i1l2273
  8202  07CC                     i1l942:	
  8203  07CC  1829               	btfsc	___xxtofl@exp,0
  8204  07CD  2FD6               	goto	i1l943
  8205  07CE  30FF               	movlw	255
  8206  07CF  05AA               	andwf	___xxtofl@arg,f
  8207  07D0  30FF               	movlw	255
  8208  07D1  05AB               	andwf	___xxtofl@arg+1,f
  8209  07D2  307F               	movlw	127
  8210  07D3  05AC               	andwf	___xxtofl@arg+2,f
  8211  07D4  30FF               	movlw	255
  8212  07D5  05AD               	andwf	___xxtofl@arg+3,f
  8213  07D6                     i1l943:	
  8214  07D6  1003               	clrc
  8215  07D7  0CA9               	rrf	___xxtofl@exp,f
  8216  07D8  0829               	movf	___xxtofl@exp,w
  8217  07D9  00A4               	movwf	??___xxtofl
  8218  07DA  01A5               	clrf	??___xxtofl+1
  8219  07DB  01A6               	clrf	??___xxtofl+2
  8220  07DC  01A7               	clrf	??___xxtofl+3
  8221  07DD  3018               	movlw	24
  8222  07DE                     u239_25:	
  8223  07DE  35A4               	lslf	??___xxtofl,f
  8224  07DF  0DA5               	rlf	??___xxtofl+1,f
  8225  07E0  0DA6               	rlf	??___xxtofl+2,f
  8226  07E1  0DA7               	rlf	??___xxtofl+3,f
  8227  07E2  0B89               	decfsz	9,f
  8228  07E3  2FDE               	goto	u239_25
  8229  07E4  0824               	movf	??___xxtofl,w
  8230  07E5  04AA               	iorwf	___xxtofl@arg,f
  8231  07E6  0825               	movf	??___xxtofl+1,w
  8232  07E7  04AB               	iorwf	___xxtofl@arg+1,f
  8233  07E8  0826               	movf	??___xxtofl+2,w
  8234  07E9  04AC               	iorwf	___xxtofl@arg+2,f
  8235  07EA  0827               	movf	??___xxtofl+3,w
  8236  07EB  04AD               	iorwf	___xxtofl@arg+3,f
  8237  07EC  0828               	movf	___xxtofl@sign,w
  8238  07ED  1D03               	btfss	3,2
  8239  07EE  1FA3               	btfss	___xxtofl@val+3,7
  8240  07EF  2FF1               	goto	i1l2285
  8241  07F0  17AD               	bsf	___xxtofl@arg+3,7
  8242  07F1                     i1l2285:	
  8243  07F1  082D               	movf	___xxtofl@arg+3,w
  8244  07F2  00A3               	movwf	?___xxtofl+3
  8245  07F3  082C               	movf	___xxtofl@arg+2,w
  8246  07F4  00A2               	movwf	?___xxtofl+2
  8247  07F5  082B               	movf	___xxtofl@arg+1,w
  8248  07F6  00A1               	movwf	?___xxtofl+1
  8249  07F7  082A               	movf	___xxtofl@arg,w
  8250  07F8  00A0               	movwf	?___xxtofl
  8251  07F9  0008               	return
  8252  07FA                     __end_of___xxtofl:	
  8253                           
  8254                           	psect	text38
  8255  0DC0                     __ptext38:	
  8256 ;; *************** function ___lmul *****************
  8257 ;; Defined at:
  8258 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul32.c"
  8259 ;; Parameters:    Size  Location     Type
  8260 ;;  multiplier      4    0[COMMON] unsigned long 
  8261 ;;  multiplicand    4    4[COMMON] unsigned long 
  8262 ;; Auto vars:     Size  Location     Type
  8263 ;;  product         4    8[COMMON] unsigned long 
  8264 ;; Return value:  Size  Location     Type
  8265 ;;                  4    0[COMMON] unsigned long 
  8266 ;; Registers used:
  8267 ;;		wreg, status,2, status,0
  8268 ;; Tracked objects:
  8269 ;;		On entry : 0/0
  8270 ;;		On exit  : 0/0
  8271 ;;		Unchanged: 0/0
  8272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8273 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8274 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8276 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8277 ;;Total ram usage:       12 bytes
  8278 ;; Hardware stack levels used:    1
  8279 ;; This function calls:
  8280 ;;		Nothing
  8281 ;; This function is called by:
  8282 ;;		_speedCalc
  8283 ;; This function uses a non-reentrant model
  8284 ;;
  8285                           
  8286                           
  8287                           ;psect for function ___lmul
  8288  0DC0                     ___lmul:	
  8289                           
  8290                           ;incstack = 0
  8291                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  8292  0DC0  3000               	movlw	0
  8293  0DC1  00FB               	movwf	___lmul@product+3
  8294  0DC2  3000               	movlw	0
  8295  0DC3  00FA               	movwf	___lmul@product+2
  8296  0DC4  3000               	movlw	0
  8297  0DC5  00F9               	movwf	___lmul@product+1
  8298  0DC6  3000               	movlw	0
  8299  0DC7  00F8               	movwf	___lmul@product
  8300  0DC8                     i1l2057:	
  8301  0DC8  1C70               	btfss	___lmul@multiplier,0
  8302  0DC9  2DD2               	goto	i1l2061
  8303  0DCA  0874               	movf	___lmul@multiplicand,w
  8304  0DCB  07F8               	addwf	___lmul@product,f
  8305  0DCC  0875               	movf	___lmul@multiplicand+1,w
  8306  0DCD  3DF9               	addwfc	___lmul@product+1,f
  8307  0DCE  0876               	movf	___lmul@multiplicand+2,w
  8308  0DCF  3DFA               	addwfc	___lmul@product+2,f
  8309  0DD0  0877               	movf	___lmul@multiplicand+3,w
  8310  0DD1  3DFB               	addwfc	___lmul@product+3,f
  8311  0DD2                     i1l2061:	
  8312  0DD2  3001               	movlw	1
  8313  0DD3                     u189_25:	
  8314  0DD3  35F4               	lslf	___lmul@multiplicand,f
  8315  0DD4  0DF5               	rlf	___lmul@multiplicand+1,f
  8316  0DD5  0DF6               	rlf	___lmul@multiplicand+2,f
  8317  0DD6  0DF7               	rlf	___lmul@multiplicand+3,f
  8318  0DD7  0B89               	decfsz	9,f
  8319  0DD8  2DD3               	goto	u189_25
  8320  0DD9  3001               	movlw	1
  8321  0DDA                     u190_25:	
  8322  0DDA  36F3               	lsrf	___lmul@multiplier+3,f
  8323  0DDB  0CF2               	rrf	___lmul@multiplier+2,f
  8324  0DDC  0CF1               	rrf	___lmul@multiplier+1,f
  8325  0DDD  0CF0               	rrf	___lmul@multiplier,f
  8326  0DDE  0B89               	decfsz	9,f
  8327  0DDF  2DDA               	goto	u190_25
  8328  0DE0  0873               	movf	___lmul@multiplier+3,w
  8329  0DE1  0472               	iorwf	___lmul@multiplier+2,w
  8330  0DE2  0471               	iorwf	___lmul@multiplier+1,w
  8331  0DE3  0470               	iorwf	___lmul@multiplier,w
  8332  0DE4  1D03               	skipz
  8333  0DE5  2DC8               	goto	i1l2057
  8334  0DE6  087B               	movf	___lmul@product+3,w
  8335  0DE7  00F3               	movwf	?___lmul+3
  8336  0DE8  087A               	movf	___lmul@product+2,w
  8337  0DE9  00F2               	movwf	?___lmul+2
  8338  0DEA  0879               	movf	___lmul@product+1,w
  8339  0DEB  00F1               	movwf	?___lmul+1
  8340  0DEC  0878               	movf	___lmul@product,w
  8341  0DED  00F0               	movwf	?___lmul
  8342  0DEE  0008               	return
  8343  0DEF                     __end_of___lmul:	
  8344                           
  8345                           	psect	text39
  8346  0F29                     __ptext39:	
  8347 ;; *************** function ___fltol *****************
  8348 ;; Defined at:
  8349 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
  8350 ;; Parameters:    Size  Location     Type
  8351 ;;  f1              4   40[BANK0 ] unsigned long 
  8352 ;; Auto vars:     Size  Location     Type
  8353 ;;  exp1            1   13[COMMON] unsigned char 
  8354 ;;  sign1           1   12[COMMON] unsigned char 
  8355 ;; Return value:  Size  Location     Type
  8356 ;;                  4   40[BANK0 ] long 
  8357 ;; Registers used:
  8358 ;;		wreg, status,2, status,0
  8359 ;; Tracked objects:
  8360 ;;		On entry : 0/0
  8361 ;;		On exit  : 0/0
  8362 ;;		Unchanged: 0/0
  8363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8364 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8365 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8366 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8367 ;;      Totals:         2       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8368 ;;Total ram usage:       11 bytes
  8369 ;; Hardware stack levels used:    1
  8370 ;; This function calls:
  8371 ;;		Nothing
  8372 ;; This function is called by:
  8373 ;;		_speedCalc
  8374 ;; This function uses a non-reentrant model
  8375 ;;
  8376                           
  8377                           
  8378                           ;psect for function ___fltol
  8379  0F29                     ___fltol:	
  8380                           
  8381                           ;incstack = 0
  8382                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  8383  0F29  1003               	clrc
  8384  0F2A  0020               	movlb	0	; select bank0
  8385  0F2B  0D4A               	rlf	___fltol@f1+2,w
  8386  0F2C  0D4B               	rlf	___fltol@f1+3,w
  8387  0F2D  00CC               	movwf	??___fltol
  8388  0F2E  084C               	movf	??___fltol,w
  8389  0F2F  00FD               	movwf	___fltol@exp1
  8390  0F30  087D               	movf	___fltol@exp1,w
  8391  0F31  1D03               	btfss	3,2
  8392  0F32  2F3C               	goto	i1l2075
  8393  0F33                     i1l2071:	
  8394  0F33  3000               	movlw	0
  8395  0F34  00CB               	movwf	?___fltol+3
  8396  0F35  3000               	movlw	0
  8397  0F36  00CA               	movwf	?___fltol+2
  8398  0F37  3000               	movlw	0
  8399  0F38  00C9               	movwf	?___fltol+1
  8400  0F39  3000               	movlw	0
  8401  0F3A  00C8               	movwf	?___fltol
  8402  0F3B  0008               	return
  8403  0F3C                     i1l2075:	
  8404  0F3C  0848               	movf	___fltol@f1,w
  8405  0F3D  00CC               	movwf	??___fltol
  8406  0F3E  0849               	movf	___fltol@f1+1,w
  8407  0F3F  00CD               	movwf	??___fltol+1
  8408  0F40  084A               	movf	___fltol@f1+2,w
  8409  0F41  00CE               	movwf	??___fltol+2
  8410  0F42  084B               	movf	___fltol@f1+3,w
  8411  0F43  00CF               	movwf	??___fltol+3
  8412  0F44  301F               	movlw	31
  8413  0F45                     u193_25:	
  8414  0F45  36CF               	lsrf	??___fltol+3,f
  8415  0F46  0CCE               	rrf	??___fltol+2,f
  8416  0F47  0CCD               	rrf	??___fltol+1,f
  8417  0F48  0CCC               	rrf	??___fltol,f
  8418  0F49  0B89               	decfsz	9,f
  8419  0F4A  2F45               	goto	u193_25
  8420  0F4B  084C               	movf	??___fltol,w
  8421  0F4C  00D0               	movwf	??___fltol+4
  8422  0F4D  0850               	movf	??___fltol+4,w
  8423  0F4E  00FC               	movwf	___fltol@sign1
  8424  0F4F  17CA               	bsf	___fltol@f1+2,7
  8425  0F50  30FF               	movlw	255
  8426  0F51  05C8               	andwf	___fltol@f1,f
  8427  0F52  30FF               	movlw	255
  8428  0F53  05C9               	andwf	___fltol@f1+1,f
  8429  0F54  30FF               	movlw	255
  8430  0F55  05CA               	andwf	___fltol@f1+2,f
  8431  0F56  3000               	movlw	0
  8432  0F57  05CB               	andwf	___fltol@f1+3,f
  8433  0F58  3096               	movlw	150
  8434  0F59  02FD               	subwf	___fltol@exp1,f
  8435  0F5A  1FFD               	btfss	___fltol@exp1,7
  8436  0F5B  2F6F               	goto	i1l2093
  8437  0F5C  087D               	movf	___fltol@exp1,w
  8438  0F5D  3A80               	xorlw	128
  8439  0F5E  3E97               	addlw	151
  8440  0F5F  1C03               	btfss	3,0
  8441  0F60  2F33               	goto	i1l2071
  8442  0F61                     i1l2091:	
  8443  0F61  3001               	movlw	1
  8444  0F62                     u196_25:	
  8445  0F62  36CB               	lsrf	___fltol@f1+3,f
  8446  0F63  0CCA               	rrf	___fltol@f1+2,f
  8447  0F64  0CC9               	rrf	___fltol@f1+1,f
  8448  0F65  0CC8               	rrf	___fltol@f1,f
  8449  0F66  0B89               	decfsz	9,f
  8450  0F67  2F62               	goto	u196_25
  8451  0F68  3001               	movlw	1
  8452  0F69  00CC               	movwf	??___fltol
  8453  0F6A  084C               	movf	??___fltol,w
  8454  0F6B  07FD               	addwf	___fltol@exp1,f
  8455  0F6C  1903               	btfsc	3,2
  8456  0F6D  2F80               	goto	i1l2101
  8457  0F6E  2F61               	goto	i1l2091
  8458  0F6F                     i1l2093:	
  8459  0F6F  3020               	movlw	32
  8460  0F70  027D               	subwf	___fltol@exp1,w
  8461  0F71  1803               	btfsc	3,0
  8462  0F72  2F33               	goto	i1l2071
  8463  0F73                     i1l695:	
  8464  0F73  087D               	movf	___fltol@exp1,w
  8465  0F74  1903               	btfsc	3,2
  8466  0F75  2F80               	goto	i1l2101
  8467  0F76  3001               	movlw	1
  8468  0F77                     u199_25:	
  8469  0F77  35C8               	lslf	___fltol@f1,f
  8470  0F78  0DC9               	rlf	___fltol@f1+1,f
  8471  0F79  0DCA               	rlf	___fltol@f1+2,f
  8472  0F7A  0DCB               	rlf	___fltol@f1+3,f
  8473  0F7B  0B89               	decfsz	9,f
  8474  0F7C  2F77               	goto	u199_25
  8475  0F7D  3001               	movlw	1
  8476  0F7E  02FD               	subwf	___fltol@exp1,f
  8477  0F7F  2F73               	goto	i1l695
  8478  0F80                     i1l2101:	
  8479  0F80  087C               	movf	___fltol@sign1,w
  8480  0F81  1903               	btfsc	3,2
  8481  0F82  0008               	return
  8482  0F83  09C8               	comf	___fltol@f1,f
  8483  0F84  09C9               	comf	___fltol@f1+1,f
  8484  0F85  09CA               	comf	___fltol@f1+2,f
  8485  0F86  09CB               	comf	___fltol@f1+3,f
  8486  0F87  0AC8               	incf	___fltol@f1,f
  8487  0F88  1903               	skipnz
  8488  0F89  0AC9               	incf	___fltol@f1+1,f
  8489  0F8A  1903               	skipnz
  8490  0F8B  0ACA               	incf	___fltol@f1+2,f
  8491  0F8C  1903               	skipnz
  8492  0F8D  0ACB               	incf	___fltol@f1+3,f
  8493  0F8E  0008               	return
  8494  0F8F                     __end_of___fltol:	
  8495                           
  8496                           	psect	text40
  8497  003D                     __ptext40:	
  8498 ;; *************** function ___flmul *****************
  8499 ;; Defined at:
  8500 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
  8501 ;; Parameters:    Size  Location     Type
  8502 ;;  b               4   14[BANK0 ] long 
  8503 ;;  a               4   18[BANK0 ] long 
  8504 ;; Auto vars:     Size  Location     Type
  8505 ;;  prod            4   34[BANK0 ] struct .
  8506 ;;  grs             4   28[BANK0 ] unsigned long 
  8507 ;;  temp            2   38[BANK0 ] struct .
  8508 ;;  bexp            1   33[BANK0 ] unsigned char 
  8509 ;;  aexp            1   32[BANK0 ] unsigned char 
  8510 ;;  sign            1   27[BANK0 ] unsigned char 
  8511 ;; Return value:  Size  Location     Type
  8512 ;;                  4   14[BANK0 ] unsigned char 
  8513 ;; Registers used:
  8514 ;;		wreg, status,2, status,0, pclath, cstack
  8515 ;; Tracked objects:
  8516 ;;		On entry : 0/0
  8517 ;;		On exit  : 0/0
  8518 ;;		Unchanged: 0/0
  8519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8520 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8521 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8522 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8523 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8524 ;;Total ram usage:       26 bytes
  8525 ;; Hardware stack levels used:    1
  8526 ;; Hardware stack levels required when called:    1
  8527 ;; This function calls:
  8528 ;;		__Umul8_16
  8529 ;; This function is called by:
  8530 ;;		_speedCalc
  8531 ;; This function uses a non-reentrant model
  8532 ;;
  8533                           
  8534                           
  8535                           ;psect for function ___flmul
  8536  003D                     ___flmul:	
  8537                           
  8538                           ;incstack = 0
  8539                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  8540  003D  0020               	movlb	0	; select bank0
  8541  003E  0831               	movf	___flmul@b+3,w
  8542  003F  3980               	andlw	128
  8543  0040  00B6               	movwf	??___flmul
  8544  0041  0836               	movf	??___flmul,w
  8545  0042  00BB               	movwf	___flmul@sign
  8546  0043  3531               	lslf	___flmul@b+3,w
  8547  0044  00B6               	movwf	??___flmul
  8548  0045  0836               	movf	??___flmul,w
  8549  0046  00C1               	movwf	___flmul@bexp
  8550  0047  1BB0               	btfsc	___flmul@b+2,7
  8551  0048  1441               	bsf	___flmul@bexp,0
  8552  0049  0841               	movf	___flmul@bexp,w
  8553  004A  1903               	btfsc	3,2
  8554  004B  2859               	goto	i1l2121
  8555  004C  0A41               	incf	___flmul@bexp,w
  8556  004D  1D03               	btfss	3,2
  8557  004E  2857               	goto	i1l2119
  8558  004F  3000               	movlw	0
  8559  0050  00B1               	movwf	___flmul@b+3
  8560  0051  3000               	movlw	0
  8561  0052  00B0               	movwf	___flmul@b+2
  8562  0053  3000               	movlw	0
  8563  0054  00AF               	movwf	___flmul@b+1
  8564  0055  3000               	movlw	0
  8565  0056  00AE               	movwf	___flmul@b
  8566  0057                     i1l2119:	
  8567  0057  17B0               	bsf	___flmul@b+2,7
  8568  0058  2861               	goto	i1l2123
  8569  0059                     i1l2121:	
  8570  0059  3000               	movlw	0
  8571  005A  00B1               	movwf	___flmul@b+3
  8572  005B  3000               	movlw	0
  8573  005C  00B0               	movwf	___flmul@b+2
  8574  005D  3000               	movlw	0
  8575  005E  00AF               	movwf	___flmul@b+1
  8576  005F  3000               	movlw	0
  8577  0060  00AE               	movwf	___flmul@b
  8578  0061                     i1l2123:	
  8579  0061  0835               	movf	___flmul@a+3,w
  8580  0062  3980               	andlw	128
  8581  0063  00B6               	movwf	??___flmul
  8582  0064  0836               	movf	??___flmul,w
  8583  0065  06BB               	xorwf	___flmul@sign,f
  8584  0066  3535               	lslf	___flmul@a+3,w
  8585  0067  00B6               	movwf	??___flmul
  8586  0068  0836               	movf	??___flmul,w
  8587  0069  00C0               	movwf	___flmul@aexp
  8588  006A  1BB4               	btfsc	___flmul@a+2,7
  8589  006B  1440               	bsf	___flmul@aexp,0
  8590  006C  0840               	movf	___flmul@aexp,w
  8591  006D  1903               	btfsc	3,2
  8592  006E  287C               	goto	i1l2139
  8593  006F  0A40               	incf	___flmul@aexp,w
  8594  0070  1D03               	btfss	3,2
  8595  0071  287A               	goto	i1l2137
  8596  0072  3000               	movlw	0
  8597  0073  00B5               	movwf	___flmul@a+3
  8598  0074  3000               	movlw	0
  8599  0075  00B4               	movwf	___flmul@a+2
  8600  0076  3000               	movlw	0
  8601  0077  00B3               	movwf	___flmul@a+1
  8602  0078  3000               	movlw	0
  8603  0079  00B2               	movwf	___flmul@a
  8604  007A                     i1l2137:	
  8605  007A  17B4               	bsf	___flmul@a+2,7
  8606  007B  2884               	goto	i1l2141
  8607  007C                     i1l2139:	
  8608  007C  3000               	movlw	0
  8609  007D  00B5               	movwf	___flmul@a+3
  8610  007E  3000               	movlw	0
  8611  007F  00B4               	movwf	___flmul@a+2
  8612  0080  3000               	movlw	0
  8613  0081  00B3               	movwf	___flmul@a+1
  8614  0082  3000               	movlw	0
  8615  0083  00B2               	movwf	___flmul@a
  8616  0084                     i1l2141:	
  8617  0084  0840               	movf	___flmul@aexp,w
  8618  0085  1D03               	btfss	3,2
  8619  0086  0841               	movf	___flmul@bexp,w
  8620  0087  1D03               	btfss	3,2
  8621  0088  2892               	goto	i1l2149
  8622  0089  3000               	movlw	0
  8623  008A  00B1               	movwf	?___flmul+3
  8624  008B  3000               	movlw	0
  8625  008C  00B0               	movwf	?___flmul+2
  8626  008D  3000               	movlw	0
  8627  008E  00AF               	movwf	?___flmul+1
  8628  008F  3000               	movlw	0
  8629  0090  00AE               	movwf	?___flmul
  8630  0091  0008               	return
  8631  0092                     i1l2149:	
  8632  0092  082E               	movf	___flmul@b,w
  8633  0093  00B6               	movwf	??___flmul
  8634  0094  0836               	movf	??___flmul,w
  8635  0095  00F0               	movwf	__Umul8_16@multiplicand
  8636  0096  0834               	movf	___flmul@a+2,w
  8637  0097  318D  2534  3180   	fcall	__Umul8_16
  8638  009A  0871               	movf	?__Umul8_16+1,w
  8639  009B  0020               	movlb	0	; select bank0
  8640  009C  00C7               	movwf	___flmul@temp+1
  8641  009D  0870               	movf	?__Umul8_16,w
  8642  009E  00C6               	movwf	___flmul@temp
  8643  009F  0846               	movf	___flmul@temp,w
  8644  00A0  00B6               	movwf	??___flmul
  8645  00A1  01B7               	clrf	??___flmul+1
  8646  00A2  01B8               	clrf	??___flmul+2
  8647  00A3  01B9               	clrf	??___flmul+3
  8648  00A4  0839               	movf	??___flmul+3,w
  8649  00A5  00BF               	movwf	___flmul@grs+3
  8650  00A6  0838               	movf	??___flmul+2,w
  8651  00A7  00BE               	movwf	___flmul@grs+2
  8652  00A8  0837               	movf	??___flmul+1,w
  8653  00A9  00BD               	movwf	___flmul@grs+1
  8654  00AA  0836               	movf	??___flmul,w
  8655  00AB  00BC               	movwf	___flmul@grs
  8656  00AC  0847               	movf	___flmul@temp+1,w
  8657  00AD  00B6               	movwf	??___flmul
  8658  00AE  01B7               	clrf	??___flmul+1
  8659  00AF  01B8               	clrf	??___flmul+2
  8660  00B0  01B9               	clrf	??___flmul+3
  8661  00B1  0839               	movf	??___flmul+3,w
  8662  00B2  00C5               	movwf	___flmul@prod+3
  8663  00B3  0838               	movf	??___flmul+2,w
  8664  00B4  00C4               	movwf	___flmul@prod+2
  8665  00B5  0837               	movf	??___flmul+1,w
  8666  00B6  00C3               	movwf	___flmul@prod+1
  8667  00B7  0836               	movf	??___flmul,w
  8668  00B8  00C2               	movwf	___flmul@prod
  8669  00B9  082F               	movf	___flmul@b+1,w
  8670  00BA  00B6               	movwf	??___flmul
  8671  00BB  0836               	movf	??___flmul,w
  8672  00BC  00F0               	movwf	__Umul8_16@multiplicand
  8673  00BD  0833               	movf	___flmul@a+1,w
  8674  00BE  318D  2534  3180   	fcall	__Umul8_16
  8675  00C1  0871               	movf	?__Umul8_16+1,w
  8676  00C2  0020               	movlb	0	; select bank0
  8677  00C3  00C7               	movwf	___flmul@temp+1
  8678  00C4  0870               	movf	?__Umul8_16,w
  8679  00C5  00C6               	movwf	___flmul@temp
  8680  00C6  0846               	movf	___flmul@temp,w
  8681  00C7  00B6               	movwf	??___flmul
  8682  00C8  01B7               	clrf	??___flmul+1
  8683  00C9  01B8               	clrf	??___flmul+2
  8684  00CA  01B9               	clrf	??___flmul+3
  8685  00CB  0836               	movf	??___flmul,w
  8686  00CC  07BC               	addwf	___flmul@grs,f
  8687  00CD  0837               	movf	??___flmul+1,w
  8688  00CE  3DBD               	addwfc	___flmul@grs+1,f
  8689  00CF  0838               	movf	??___flmul+2,w
  8690  00D0  3DBE               	addwfc	___flmul@grs+2,f
  8691  00D1  0839               	movf	??___flmul+3,w
  8692  00D2  3DBF               	addwfc	___flmul@grs+3,f
  8693  00D3  0847               	movf	___flmul@temp+1,w
  8694  00D4  00B6               	movwf	??___flmul
  8695  00D5  01B7               	clrf	??___flmul+1
  8696  00D6  01B8               	clrf	??___flmul+2
  8697  00D7  01B9               	clrf	??___flmul+3
  8698  00D8  0836               	movf	??___flmul,w
  8699  00D9  07C2               	addwf	___flmul@prod,f
  8700  00DA  0837               	movf	??___flmul+1,w
  8701  00DB  3DC3               	addwfc	___flmul@prod+1,f
  8702  00DC  0838               	movf	??___flmul+2,w
  8703  00DD  3DC4               	addwfc	___flmul@prod+2,f
  8704  00DE  0839               	movf	??___flmul+3,w
  8705  00DF  3DC5               	addwfc	___flmul@prod+3,f
  8706  00E0  0830               	movf	___flmul@b+2,w
  8707  00E1  00B6               	movwf	??___flmul
  8708  00E2  0836               	movf	??___flmul,w
  8709  00E3  00F0               	movwf	__Umul8_16@multiplicand
  8710  00E4  0832               	movf	___flmul@a,w
  8711  00E5  318D  2534  3180   	fcall	__Umul8_16
  8712  00E8  0871               	movf	?__Umul8_16+1,w
  8713  00E9  0020               	movlb	0	; select bank0
  8714  00EA  00C7               	movwf	___flmul@temp+1
  8715  00EB  0870               	movf	?__Umul8_16,w
  8716  00EC  00C6               	movwf	___flmul@temp
  8717  00ED  0846               	movf	___flmul@temp,w
  8718  00EE  00B6               	movwf	??___flmul
  8719  00EF  01B7               	clrf	??___flmul+1
  8720  00F0  01B8               	clrf	??___flmul+2
  8721  00F1  01B9               	clrf	??___flmul+3
  8722  00F2  0836               	movf	??___flmul,w
  8723  00F3  07BC               	addwf	___flmul@grs,f
  8724  00F4  0837               	movf	??___flmul+1,w
  8725  00F5  3DBD               	addwfc	___flmul@grs+1,f
  8726  00F6  0838               	movf	??___flmul+2,w
  8727  00F7  3DBE               	addwfc	___flmul@grs+2,f
  8728  00F8  0839               	movf	??___flmul+3,w
  8729  00F9  3DBF               	addwfc	___flmul@grs+3,f
  8730  00FA  0847               	movf	___flmul@temp+1,w
  8731  00FB  00B6               	movwf	??___flmul
  8732  00FC  01B7               	clrf	??___flmul+1
  8733  00FD  01B8               	clrf	??___flmul+2
  8734  00FE  01B9               	clrf	??___flmul+3
  8735  00FF  0836               	movf	??___flmul,w
  8736  0100  07C2               	addwf	___flmul@prod,f
  8737  0101  0837               	movf	??___flmul+1,w
  8738  0102  3DC3               	addwfc	___flmul@prod+1,f
  8739  0103  0838               	movf	??___flmul+2,w
  8740  0104  3DC4               	addwfc	___flmul@prod+2,f
  8741  0105  0839               	movf	??___flmul+3,w
  8742  0106  3DC5               	addwfc	___flmul@prod+3,f
  8743  0107  3008               	movlw	8
  8744  0108                     u210_25:	
  8745  0108  35BC               	lslf	___flmul@grs,f
  8746  0109  0DBD               	rlf	___flmul@grs+1,f
  8747  010A  0DBE               	rlf	___flmul@grs+2,f
  8748  010B  0DBF               	rlf	___flmul@grs+3,f
  8749  010C  0B89               	decfsz	9,f
  8750  010D  2908               	goto	u210_25
  8751  010E  082F               	movf	___flmul@b+1,w
  8752  010F  00B6               	movwf	??___flmul
  8753  0110  0836               	movf	??___flmul,w
  8754  0111  00F0               	movwf	__Umul8_16@multiplicand
  8755  0112  0832               	movf	___flmul@a,w
  8756  0113  318D  2534  3180   	fcall	__Umul8_16
  8757  0116  0871               	movf	?__Umul8_16+1,w
  8758  0117  0020               	movlb	0	; select bank0
  8759  0118  00C7               	movwf	___flmul@temp+1
  8760  0119  0870               	movf	?__Umul8_16,w
  8761  011A  00C6               	movwf	___flmul@temp
  8762  011B  0846               	movf	___flmul@temp,w
  8763  011C  07BC               	addwf	___flmul@grs,f
  8764  011D  0847               	movf	___flmul@temp+1,w
  8765  011E  3DBD               	addwfc	___flmul@grs+1,f
  8766  011F  3000               	movlw	0
  8767  0120  3DBE               	addwfc	___flmul@grs+2,f
  8768  0121  3DBF               	addwfc	___flmul@grs+3,f
  8769  0122  082E               	movf	___flmul@b,w
  8770  0123  00B6               	movwf	??___flmul
  8771  0124  0836               	movf	??___flmul,w
  8772  0125  00F0               	movwf	__Umul8_16@multiplicand
  8773  0126  0833               	movf	___flmul@a+1,w
  8774  0127  318D  2534  3180   	fcall	__Umul8_16
  8775  012A  0871               	movf	?__Umul8_16+1,w
  8776  012B  0020               	movlb	0	; select bank0
  8777  012C  00C7               	movwf	___flmul@temp+1
  8778  012D  0870               	movf	?__Umul8_16,w
  8779  012E  00C6               	movwf	___flmul@temp
  8780  012F  0846               	movf	___flmul@temp,w
  8781  0130  07BC               	addwf	___flmul@grs,f
  8782  0131  0847               	movf	___flmul@temp+1,w
  8783  0132  3DBD               	addwfc	___flmul@grs+1,f
  8784  0133  3000               	movlw	0
  8785  0134  3DBE               	addwfc	___flmul@grs+2,f
  8786  0135  3DBF               	addwfc	___flmul@grs+3,f
  8787  0136  3008               	movlw	8
  8788  0137                     u211_25:	
  8789  0137  35BC               	lslf	___flmul@grs,f
  8790  0138  0DBD               	rlf	___flmul@grs+1,f
  8791  0139  0DBE               	rlf	___flmul@grs+2,f
  8792  013A  0DBF               	rlf	___flmul@grs+3,f
  8793  013B  0B89               	decfsz	9,f
  8794  013C  2937               	goto	u211_25
  8795  013D  082E               	movf	___flmul@b,w
  8796  013E  00B6               	movwf	??___flmul
  8797  013F  0836               	movf	??___flmul,w
  8798  0140  00F0               	movwf	__Umul8_16@multiplicand
  8799  0141  0832               	movf	___flmul@a,w
  8800  0142  318D  2534  3180   	fcall	__Umul8_16
  8801  0145  0871               	movf	?__Umul8_16+1,w
  8802  0146  0020               	movlb	0	; select bank0
  8803  0147  00C7               	movwf	___flmul@temp+1
  8804  0148  0870               	movf	?__Umul8_16,w
  8805  0149  00C6               	movwf	___flmul@temp
  8806  014A  0846               	movf	___flmul@temp,w
  8807  014B  07BC               	addwf	___flmul@grs,f
  8808  014C  0847               	movf	___flmul@temp+1,w
  8809  014D  3DBD               	addwfc	___flmul@grs+1,f
  8810  014E  3000               	movlw	0
  8811  014F  3DBE               	addwfc	___flmul@grs+2,f
  8812  0150  3DBF               	addwfc	___flmul@grs+3,f
  8813  0151  082F               	movf	___flmul@b+1,w
  8814  0152  00B6               	movwf	??___flmul
  8815  0153  0836               	movf	??___flmul,w
  8816  0154  00F0               	movwf	__Umul8_16@multiplicand
  8817  0155  0834               	movf	___flmul@a+2,w
  8818  0156  318D  2534  3180   	fcall	__Umul8_16
  8819  0159  0871               	movf	?__Umul8_16+1,w
  8820  015A  0020               	movlb	0	; select bank0
  8821  015B  00C7               	movwf	___flmul@temp+1
  8822  015C  0870               	movf	?__Umul8_16,w
  8823  015D  00C6               	movwf	___flmul@temp
  8824  015E  0846               	movf	___flmul@temp,w
  8825  015F  07C2               	addwf	___flmul@prod,f
  8826  0160  0847               	movf	___flmul@temp+1,w
  8827  0161  3DC3               	addwfc	___flmul@prod+1,f
  8828  0162  3000               	movlw	0
  8829  0163  3DC4               	addwfc	___flmul@prod+2,f
  8830  0164  3DC5               	addwfc	___flmul@prod+3,f
  8831  0165  0830               	movf	___flmul@b+2,w
  8832  0166  00B6               	movwf	??___flmul
  8833  0167  0836               	movf	??___flmul,w
  8834  0168  00F0               	movwf	__Umul8_16@multiplicand
  8835  0169  0833               	movf	___flmul@a+1,w
  8836  016A  318D  2534  3180   	fcall	__Umul8_16
  8837  016D  0871               	movf	?__Umul8_16+1,w
  8838  016E  0020               	movlb	0	; select bank0
  8839  016F  00C7               	movwf	___flmul@temp+1
  8840  0170  0870               	movf	?__Umul8_16,w
  8841  0171  00C6               	movwf	___flmul@temp
  8842  0172  0846               	movf	___flmul@temp,w
  8843  0173  07C2               	addwf	___flmul@prod,f
  8844  0174  0847               	movf	___flmul@temp+1,w
  8845  0175  3DC3               	addwfc	___flmul@prod+1,f
  8846  0176  3000               	movlw	0
  8847  0177  3DC4               	addwfc	___flmul@prod+2,f
  8848  0178  3DC5               	addwfc	___flmul@prod+3,f
  8849  0179  0830               	movf	___flmul@b+2,w
  8850  017A  00B6               	movwf	??___flmul
  8851  017B  0836               	movf	??___flmul,w
  8852  017C  00F0               	movwf	__Umul8_16@multiplicand
  8853  017D  0834               	movf	___flmul@a+2,w
  8854  017E  318D  2534  3180   	fcall	__Umul8_16
  8855  0181  0871               	movf	?__Umul8_16+1,w
  8856  0182  0020               	movlb	0	; select bank0
  8857  0183  00C7               	movwf	___flmul@temp+1
  8858  0184  0870               	movf	?__Umul8_16,w
  8859  0185  00C6               	movwf	___flmul@temp
  8860  0186  0846               	movf	___flmul@temp,w
  8861  0187  00B6               	movwf	??___flmul
  8862  0188  0847               	movf	___flmul@temp+1,w
  8863  0189  00B7               	movwf	??___flmul+1
  8864  018A  01B8               	clrf	??___flmul+2
  8865  018B  01B9               	clrf	??___flmul+3
  8866  018C  3008               	movlw	8
  8867  018D                     u212_25:	
  8868  018D  35B6               	lslf	??___flmul,f
  8869  018E  0DB7               	rlf	??___flmul+1,f
  8870  018F  0DB8               	rlf	??___flmul+2,f
  8871  0190  0DB9               	rlf	??___flmul+3,f
  8872  0191  0B89               	decfsz	9,f
  8873  0192  298D               	goto	u212_25
  8874  0193  0836               	movf	??___flmul,w
  8875  0194  07C2               	addwf	___flmul@prod,f
  8876  0195  0837               	movf	??___flmul+1,w
  8877  0196  3DC3               	addwfc	___flmul@prod+1,f
  8878  0197  0838               	movf	??___flmul+2,w
  8879  0198  3DC4               	addwfc	___flmul@prod+2,f
  8880  0199  0839               	movf	??___flmul+3,w
  8881  019A  3DC5               	addwfc	___flmul@prod+3,f
  8882  019B  083C               	movf	___flmul@grs,w
  8883  019C  00B6               	movwf	??___flmul
  8884  019D  083D               	movf	___flmul@grs+1,w
  8885  019E  00B7               	movwf	??___flmul+1
  8886  019F  083E               	movf	___flmul@grs+2,w
  8887  01A0  00B8               	movwf	??___flmul+2
  8888  01A1  083F               	movf	___flmul@grs+3,w
  8889  01A2  00B9               	movwf	??___flmul+3
  8890  01A3  3018               	movlw	24
  8891  01A4                     u213_25:	
  8892  01A4  36B9               	lsrf	??___flmul+3,f
  8893  01A5  0CB8               	rrf	??___flmul+2,f
  8894  01A6  0CB7               	rrf	??___flmul+1,f
  8895  01A7  0CB6               	rrf	??___flmul,f
  8896  01A8  0B89               	decfsz	9,f
  8897  01A9  29A4               	goto	u213_25
  8898  01AA  0836               	movf	??___flmul,w
  8899  01AB  07C2               	addwf	___flmul@prod,f
  8900  01AC  0837               	movf	??___flmul+1,w
  8901  01AD  3DC3               	addwfc	___flmul@prod+1,f
  8902  01AE  0838               	movf	??___flmul+2,w
  8903  01AF  3DC4               	addwfc	___flmul@prod+2,f
  8904  01B0  0839               	movf	??___flmul+3,w
  8905  01B1  3DC5               	addwfc	___flmul@prod+3,f
  8906  01B2  3008               	movlw	8
  8907  01B3                     u214_25:	
  8908  01B3  35BC               	lslf	___flmul@grs,f
  8909  01B4  0DBD               	rlf	___flmul@grs+1,f
  8910  01B5  0DBE               	rlf	___flmul@grs+2,f
  8911  01B6  0DBF               	rlf	___flmul@grs+3,f
  8912  01B7  0B89               	decfsz	9,f
  8913  01B8  29B3               	goto	u214_25
  8914  01B9  0841               	movf	___flmul@bexp,w
  8915  01BA  0740               	addwf	___flmul@aexp,w
  8916  01BB  00B6               	movwf	??___flmul
  8917  01BC  01B7               	clrf	??___flmul+1
  8918  01BD  0DB7               	rlf	??___flmul+1,f
  8919  01BE  0836               	movf	??___flmul,w
  8920  01BF  3E82               	addlw	130
  8921  01C0  00C6               	movwf	___flmul@temp
  8922  01C1  30FF               	movlw	255
  8923  01C2  3D37               	addwfc	??___flmul+1,w
  8924  01C3  00C7               	movwf	___flmul@temp+1
  8925  01C4                     i1l2201:	
  8926  01C4  1BC4               	btfsc	___flmul@prod+2,7
  8927  01C5  29DB               	goto	i1l2203
  8928  01C6  3001               	movlw	1
  8929  01C7                     u215_25:	
  8930  01C7  35C2               	lslf	___flmul@prod,f
  8931  01C8  0DC3               	rlf	___flmul@prod+1,f
  8932  01C9  0DC4               	rlf	___flmul@prod+2,f
  8933  01CA  0DC5               	rlf	___flmul@prod+3,f
  8934  01CB  0B89               	decfsz	9,f
  8935  01CC  29C7               	goto	u215_25
  8936  01CD  1BBF               	btfsc	___flmul@grs+3,7
  8937  01CE  1442               	bsf	___flmul@prod,0
  8938  01CF  3001               	movlw	1
  8939  01D0                     u217_25:	
  8940  01D0  35BC               	lslf	___flmul@grs,f
  8941  01D1  0DBD               	rlf	___flmul@grs+1,f
  8942  01D2  0DBE               	rlf	___flmul@grs+2,f
  8943  01D3  0DBF               	rlf	___flmul@grs+3,f
  8944  01D4  0B89               	decfsz	9,f
  8945  01D5  29D0               	goto	u217_25
  8946  01D6  30FF               	movlw	255
  8947  01D7  07C6               	addwf	___flmul@temp,f
  8948  01D8  30FF               	movlw	255
  8949  01D9  3DC7               	addwfc	___flmul@temp+1,f
  8950  01DA  29C4               	goto	i1l2201
  8951  01DB                     i1l2203:	
  8952  01DB  01C0               	clrf	___flmul@aexp
  8953  01DC  1FBF               	btfss	___flmul@grs+3,7
  8954  01DD  29F4               	goto	i1l2213
  8955  01DE  30FF               	movlw	255
  8956  01DF  053C               	andwf	___flmul@grs,w
  8957  01E0  00B6               	movwf	??___flmul
  8958  01E1  30FF               	movlw	255
  8959  01E2  053D               	andwf	___flmul@grs+1,w
  8960  01E3  00B7               	movwf	??___flmul+1
  8961  01E4  30FF               	movlw	255
  8962  01E5  053E               	andwf	___flmul@grs+2,w
  8963  01E6  00B8               	movwf	??___flmul+2
  8964  01E7  307F               	movlw	127
  8965  01E8  053F               	andwf	___flmul@grs+3,w
  8966  01E9  00B9               	movwf	??___flmul+3
  8967  01EA  0839               	movf	??___flmul+3,w
  8968  01EB  0438               	iorwf	??___flmul+2,w
  8969  01EC  0437               	iorwf	??___flmul+1,w
  8970  01ED  0436               	iorwf	??___flmul,w
  8971  01EE  1903               	skipnz
  8972  01EF  1842               	btfsc	___flmul@prod,0
  8973  01F0  29F2               	goto	i1l2209
  8974  01F1  29F4               	goto	i1l2213
  8975  01F2                     i1l2209:	
  8976  01F2  01C0               	clrf	___flmul@aexp
  8977  01F3  0AC0               	incf	___flmul@aexp,f
  8978  01F4                     i1l2213:	
  8979  01F4  0840               	movf	___flmul@aexp,w
  8980  01F5  1903               	btfsc	3,2
  8981  01F6  2A1D               	goto	i1l2223
  8982  01F7  3001               	movlw	1
  8983  01F8  07C2               	addwf	___flmul@prod,f
  8984  01F9  3000               	movlw	0
  8985  01FA  3DC3               	addwfc	___flmul@prod+1,f
  8986  01FB  3000               	movlw	0
  8987  01FC  3DC4               	addwfc	___flmul@prod+2,f
  8988  01FD  3000               	movlw	0
  8989  01FE  3DC5               	addwfc	___flmul@prod+3,f
  8990  01FF  1C45               	btfss	___flmul@prod+3,0
  8991  0200  2A1D               	goto	i1l2223
  8992  0201  0842               	movf	___flmul@prod,w
  8993  0202  00B6               	movwf	??___flmul
  8994  0203  0843               	movf	___flmul@prod+1,w
  8995  0204  00B7               	movwf	??___flmul+1
  8996  0205  0844               	movf	___flmul@prod+2,w
  8997  0206  00B8               	movwf	??___flmul+2
  8998  0207  0845               	movf	___flmul@prod+3,w
  8999  0208  00B9               	movwf	??___flmul+3
  9000  0209  3001               	movlw	1
  9001  020A  00BA               	movwf	??___flmul+4
  9002  020B                     u224_25:	
  9003  020B  37B9               	asrf	??___flmul+3,f
  9004  020C  0CB8               	rrf	??___flmul+2,f
  9005  020D  0CB7               	rrf	??___flmul+1,f
  9006  020E  0CB6               	rrf	??___flmul,f
  9007  020F  0BBA               	decfsz	??___flmul+4,f
  9008  0210  2A0B               	goto	u224_25
  9009  0211  0839               	movf	??___flmul+3,w
  9010  0212  00C5               	movwf	___flmul@prod+3
  9011  0213  0838               	movf	??___flmul+2,w
  9012  0214  00C4               	movwf	___flmul@prod+2
  9013  0215  0837               	movf	??___flmul+1,w
  9014  0216  00C3               	movwf	___flmul@prod+1
  9015  0217  0836               	movf	??___flmul,w
  9016  0218  00C2               	movwf	___flmul@prod
  9017  0219  3001               	movlw	1
  9018  021A  07C6               	addwf	___flmul@temp,f
  9019  021B  3000               	movlw	0
  9020  021C  3DC7               	addwfc	___flmul@temp+1,f
  9021  021D                     i1l2223:	
  9022  021D  0847               	movf	___flmul@temp+1,w
  9023  021E  3A80               	xorlw	128
  9024  021F  00B6               	movwf	??___flmul
  9025  0220  3080               	movlw	128
  9026  0221  0236               	subwf	??___flmul,w
  9027  0222  1D03               	skipz
  9028  0223  2A26               	goto	u225_25
  9029  0224  30FF               	movlw	255
  9030  0225  0246               	subwf	___flmul@temp,w
  9031  0226                     u225_25:	
  9032  0226  1C03               	skipc
  9033  0227  2A32               	goto	i1l2227
  9034  0228  307F               	movlw	127
  9035  0229  0020               	movlb	0	; select bank0
  9036  022A  00C5               	movwf	___flmul@prod+3
  9037  022B  3080               	movlw	128
  9038  022C  00C4               	movwf	___flmul@prod+2
  9039  022D  3000               	movlw	0
  9040  022E  00C3               	movwf	___flmul@prod+1
  9041  022F  3000               	movlw	0
  9042  0230  00C2               	movwf	___flmul@prod
  9043  0231  2A5C               	goto	i1l903
  9044  0232                     i1l2227:	
  9045  0232  0020               	movlb	0	; select bank0
  9046  0233  0847               	movf	___flmul@temp+1,w
  9047  0234  3A80               	xorlw	128
  9048  0235  00B6               	movwf	??___flmul
  9049  0236  3080               	movlw	128
  9050  0237  0236               	subwf	??___flmul,w
  9051  0238  1D03               	skipz
  9052  0239  2A3C               	goto	u226_25
  9053  023A  3001               	movlw	1
  9054  023B  0246               	subwf	___flmul@temp,w
  9055  023C                     u226_25:	
  9056  023C  1803               	skipnc
  9057  023D  2A49               	goto	i1l2233
  9058  023E  3000               	movlw	0
  9059  023F  0020               	movlb	0	; select bank0
  9060  0240  00C5               	movwf	___flmul@prod+3
  9061  0241  3000               	movlw	0
  9062  0242  00C4               	movwf	___flmul@prod+2
  9063  0243  3000               	movlw	0
  9064  0244  00C3               	movwf	___flmul@prod+1
  9065  0245  3000               	movlw	0
  9066  0246  00C2               	movwf	___flmul@prod
  9067  0247  01BB               	clrf	___flmul@sign
  9068  0248  2A5C               	goto	i1l903
  9069  0249                     i1l2233:	
  9070  0249  0020               	movlb	0	; select bank0
  9071  024A  0846               	movf	___flmul@temp,w
  9072  024B  00B6               	movwf	??___flmul
  9073  024C  0836               	movf	??___flmul,w
  9074  024D  00C1               	movwf	___flmul@bexp
  9075  024E  30FF               	movlw	255
  9076  024F  05C2               	andwf	___flmul@prod,f
  9077  0250  30FF               	movlw	255
  9078  0251  05C3               	andwf	___flmul@prod+1,f
  9079  0252  307F               	movlw	127
  9080  0253  05C4               	andwf	___flmul@prod+2,f
  9081  0254  3000               	movlw	0
  9082  0255  05C5               	andwf	___flmul@prod+3,f
  9083  0256  1841               	btfsc	___flmul@bexp,0
  9084  0257  17C4               	bsf	___flmul@prod+2,7
  9085  0258  3641               	lsrf	___flmul@bexp,w
  9086  0259  00B6               	movwf	??___flmul
  9087  025A  0836               	movf	??___flmul,w
  9088  025B  00C5               	movwf	___flmul@prod+3
  9089  025C                     i1l903:	
  9090  025C  083B               	movf	___flmul@sign,w
  9091  025D  00B6               	movwf	??___flmul
  9092  025E  0836               	movf	??___flmul,w
  9093  025F  04C5               	iorwf	___flmul@prod+3,f
  9094  0260  0845               	movf	___flmul@prod+3,w
  9095  0261  00B1               	movwf	?___flmul+3
  9096  0262  0844               	movf	___flmul@prod+2,w
  9097  0263  00B0               	movwf	?___flmul+2
  9098  0264  0843               	movf	___flmul@prod+1,w
  9099  0265  00AF               	movwf	?___flmul+1
  9100  0266  0842               	movf	___flmul@prod,w
  9101  0267  00AE               	movwf	?___flmul
  9102  0268  0008               	return
  9103  0269                     __end_of___flmul:	
  9104                           
  9105                           	psect	text41
  9106  0D34                     __ptext41:	
  9107 ;; *************** function __Umul8_16 *****************
  9108 ;; Defined at:
  9109 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul8_16.c"
  9110 ;; Parameters:    Size  Location     Type
  9111 ;;  multiplier      1    wreg     unsigned char 
  9112 ;;  multiplicand    1    0[COMMON] unsigned char 
  9113 ;; Auto vars:     Size  Location     Type
  9114 ;;  multiplier      1    8[COMMON] unsigned char 
  9115 ;;  word_mpld       2    6[COMMON] unsigned int 
  9116 ;;  product         2    4[COMMON] unsigned int 
  9117 ;; Return value:  Size  Location     Type
  9118 ;;                  2    0[COMMON] unsigned int 
  9119 ;; Registers used:
  9120 ;;		wreg, status,2, status,0
  9121 ;; Tracked objects:
  9122 ;;		On entry : 0/0
  9123 ;;		On exit  : 0/0
  9124 ;;		Unchanged: 0/0
  9125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9126 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9127 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9128 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9129 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9130 ;;Total ram usage:        9 bytes
  9131 ;; Hardware stack levels used:    1
  9132 ;; This function calls:
  9133 ;;		Nothing
  9134 ;; This function is called by:
  9135 ;;		___flmul
  9136 ;; This function uses a non-reentrant model
  9137 ;;
  9138                           
  9139                           
  9140                           ;psect for function __Umul8_16
  9141  0D34                     __Umul8_16:	
  9142                           
  9143                           ;incstack = 0
  9144                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  9145                           ;__Umul8_16@multiplier stored from wreg
  9146  0D34  00F8               	movwf	__Umul8_16@multiplier
  9147  0D35  01F4               	clrf	__Umul8_16@product
  9148  0D36  01F5               	clrf	__Umul8_16@product+1
  9149  0D37  0870               	movf	__Umul8_16@multiplicand,w
  9150  0D38  00F2               	movwf	??__Umul8_16
  9151  0D39  01F3               	clrf	??__Umul8_16+1
  9152  0D3A  0872               	movf	??__Umul8_16,w
  9153  0D3B  00F6               	movwf	__Umul8_16@word_mpld
  9154  0D3C  0873               	movf	??__Umul8_16+1,w
  9155  0D3D  00F7               	movwf	__Umul8_16@word_mpld+1
  9156  0D3E                     i1l1987:	
  9157  0D3E  1C78               	btfss	__Umul8_16@multiplier,0
  9158  0D3F  2D44               	goto	i1l997
  9159  0D40  0876               	movf	__Umul8_16@word_mpld,w
  9160  0D41  07F4               	addwf	__Umul8_16@product,f
  9161  0D42  0877               	movf	__Umul8_16@word_mpld+1,w
  9162  0D43  3DF5               	addwfc	__Umul8_16@product+1,f
  9163  0D44                     i1l997:	
  9164  0D44  3001               	movlw	1
  9165  0D45                     u170_25:	
  9166  0D45  35F6               	lslf	__Umul8_16@word_mpld,f
  9167  0D46  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  9168  0D47  0B89               	decfsz	9,f
  9169  0D48  2D45               	goto	u170_25
  9170  0D49  1003               	clrc
  9171  0D4A  0CF8               	rrf	__Umul8_16@multiplier,f
  9172  0D4B  0878               	movf	__Umul8_16@multiplier,w
  9173  0D4C  1D03               	btfss	3,2
  9174  0D4D  2D3E               	goto	i1l1987
  9175  0D4E  0875               	movf	__Umul8_16@product+1,w
  9176  0D4F  00F1               	movwf	?__Umul8_16+1
  9177  0D50  0874               	movf	__Umul8_16@product,w
  9178  0D51  00F0               	movwf	?__Umul8_16
  9179  0D52  0008               	return
  9180  0D53                     __end_of__Umul8_16:	
  9181  007E                     btemp	set	126	;btemp
  9182  007E                     int$flags	set	126
  9183  007E                     wtemp0	set	126


Data Sizes:
    Strings     18
    Constant    0
    Data        32
    BSS         61
    Persistent  43
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     49      79
    BANK1            80     80      80
    BANK2            80     15      57
    BANK3            80      0      32
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    puts@s	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_3(CODE[3]), hrDisp(BANK2[13]), distanceDisp(BANK2[11]), speedDisp(BANK2[8]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_2(CODE[6]), STR_1(CODE[9]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK2[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK3[32]), STR_3(CODE[3]), hrDisp(BANK2[13]), distanceDisp(BANK2[11]), 
		 -> speedDisp(BANK2[8]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S987_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK2[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_2(CODE[6]), STR_1(CODE[9]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 9
		 -> STR_2(CODE[6]), STR_1(CODE[9]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 4
		 -> ?_printf(BANK2[2]), rpm(BANK0[4]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK2[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK2[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    writeString@string	PTR unsigned char  size(1) Largest target is 13
		 -> hrDisp(BANK2[13]), distanceDisp(BANK2[11]), speedDisp(BANK2[8]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timerISR(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timerISR(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    IOCCF7_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> speedCalc(), IOCCF7_DefaultInterruptHandler(), 

    IOCCF7_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> speedCalc(), Absolute function(), IOCCF7_DefaultInterruptHandler(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _speedCalc->___fltol
    ___xxtofl->___lmul
    ___fltol->___lmul
    ___flmul->___lmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _speedCalc->___fltol
    ___fltol->___flmul
    ___flmul->___xxtofl

Critical Paths under _main in BANK1

    _main->_printf
    _writeString->_puts
    _setCursor->_EUSART_Write
    _setCursor->_EUSART_is_tx_ready
    _resetCursor->_puts
    _puts->_fputs
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _abs->___aomod
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCCF7_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_printf
    _printf->_vfprintf

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   14344
                                             14 BANK2      1     1      0
         _IOCCF7_SetInterruptHandler
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                             _printf
                        _resetCursor
                          _setCursor
                        _writeString
 ---------------------------------------------------------------------------------
 (1) _writeString                                          1     1      0    2879
                                             24 BANK1      1     1      0
                 _EUSART_is_tx_ready
                               _puts
 ---------------------------------------------------------------------------------
 (1) _setCursor                                            4     3      1     612
                                              1 BANK1      4     3      1
                       _EUSART_Write
                 _EUSART_is_tx_ready
 ---------------------------------------------------------------------------------
 (2) _EUSART_is_tx_ready                                   1     1      0      24
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _resetCursor                                          0     0      0    2734
                               _puts
 ---------------------------------------------------------------------------------
 (2) _puts                                                 5     3      2    2734
                                             19 BANK1      5     3      2
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (1) _printf                                              10     4      6    7129
                                             79 BANK1      1     1      0
                                              5 BANK2      9     3      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    6772
                                             76 BANK1      3     0      3
                                              0 BANK2      5     5      0
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    6325
                                             58 BANK1     18    16      2
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    4723
                                             28 BANK1     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    3100
                                             19 BANK1      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     123
                                              0 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 (3) _fputs                                                9     6      3    1549
                                             10 BANK1      9     6      3
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     980
                                              2 BANK1      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      44
                                              1 BANK1      1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             19 BANK1      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     448
                                              0 BANK1     19     3     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     452
                                              0 BANK1     27    11     16
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     642
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0     174
                                              2 BANK1      1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     174
         _IOCCF7_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCCF7_SetInterruptHandler                           2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          0     0      0    3820
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                           _timerISR *
 ---------------------------------------------------------------------------------
 (12) _timerISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _PIN_MANAGER_IOC                                     0     0      0    3820
                         _IOCCF7_ISR
 ---------------------------------------------------------------------------------
 (12) _IOCCF7_ISR                                          0     0      0    3820
                   Absolute function *
     _IOCCF7_DefaultInterruptHandler *
                          _speedCalc *
 ---------------------------------------------------------------------------------
 (13) _speedCalc                                           0     0      0    3820
                            ___flmul
                            ___fltol
                             ___lmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (14) ___xxtofl                                           14    10      4     474
                                              0 BANK0     14    10      4
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (14) ___lmul                                             12     4      8     396
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (14) ___fltol                                            11     7      4     381
                                             12 COMMON     2     2      0
                                             40 BANK0      9     5      4
                            ___flmul (ARG)
                             ___lmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (14) ___flmul                                            26    18      8    2569
                                             14 BANK0     26    18      8
                          __Umul8_16
                             ___lmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (15) __Umul8_16                                           9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (13) _IOCCF7_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _IOCCF7_SetInterruptHandler
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCCF7_SetInterruptHandler
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _TMR0_SetInterruptHandler
   _printf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART_Write
             _fputs
               _fputc
                 _putch
                   _EUSART_Write
             _strlen
         _fputc
           _putch
             _EUSART_Write
   _resetCursor
     _puts
       _fputc
         _putch
           _EUSART_Write
       _fputs
         _fputc
           _putch
             _EUSART_Write
   _setCursor
     _EUSART_Write
     _EUSART_is_tx_ready
   _writeString
     _EUSART_is_tx_ready
     _puts
       _fputc
         _putch
           _EUSART_Write
       _fputs
         _fputc
           _putch
             _EUSART_Write

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
     _IOCCF7_ISR
       Absolute function(Fake) *
       _IOCCF7_DefaultInterruptHandler *
       _speedCalc *
         ___flmul
           __Umul8_16
           ___lmul (ARG)
           ___xxtofl (ARG)
             ___lmul (ARG)
         ___fltol
           ___flmul (ARG)
             __Umul8_16
             ___lmul (ARG)
             ___xxtofl (ARG)
               ___lmul (ARG)
           ___lmul (ARG)
           ___xxtofl (ARG)
             ___lmul (ARG)
         ___lmul
         ___xxtofl
           ___lmul (ARG)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _timerISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     31      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     50      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      F      39       9       71.3%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      20      11       40.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     106      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     106      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Mar 17 12:33:17 2019

                                  __CFG_CP$OFF 0000                                             l69 0C54  
                              _timer0ReloadVal 006E                            __Umul8_16@word_mpld 0076  
                                          l353 0E92                                            l444 0EEE  
                                          l452 02AF                                            l461 037B  
                                          l453 02B6                                            l607 068C  
                                          l447 0F0E                                            l457 02D1  
                                          l458 02E5                                            l594 05AD  
                                          _abs 0CE7                                            _pad 0ED3  
                                          _rpm 0060                 ?_EUSART_SetFramingErrorHandler 00A0  
                                 __CFG_BORV$LO 0000                                            wreg 0009  
                                 __CFG_IESO$ON 0000                                   ___flmul@aexp 0040  
                                 ___flmul@bexp 0041         __end_of_IOCCF7_DefaultInterruptHandler 0003  
      __size_of_IOCCF7_DefaultInterruptHandler 0001                 _IOCCF7_DefaultInterruptHandler 0002  
                                 ___flmul@sign 003B                                   ___flmul@temp 0046  
                                 ___flmul@prod 0042                                   __CFG_LVP$OFF 0000  
                                 __CFG_ZCD$OFF 0000                                   ___fltol@exp1 007D  
                                         ?_abs 00B3                                           l2015 02E0  
                                         l2041 038F                                           l2009 02C9  
                                         l2051 03A7                                           l2019 0312  
                                         l2029 02ED                                           l2037 0387  
                                         l2047 039A                                           l2333 046C  
                                         l2325 043C                                           l2317 03FF  
                                         l2343 0493                                           l2337 0470  
                                         l2353 04A3                                           l2521 0E67  
                                         l2347 0499                                           l2523 0E6C  
                                         l2531 0E7B                                           l2515 0E58  
                                         l2381 0C8E                                           l2525 0E71  
                                         l2541 0CBC                                           l1903 0EF0  
                                         l2527 0E76                                           l1921 04F4  
                                         l2713 0FCB                                           l1907 0F1D  
                                         l1925 051C                                           l1861 0EC1  
                                         l1927 0521                                           l1863 0ECA  
                                         l1937 0538                                           l1857 0E9E  
                                         l1873 0D9A                                           l2681 0E4E  
                                         l1947 0580                                           l1939 0547  
                                         l1971 0620                                           l1963 0613  
                                         l1875 0DBB                                           l1883 0D06  
                                         l1949 058C                                           l1973 062F  
                                         l1885 0D12                                           l1893 0EE4  
                                         ?_pad 00B3                                           l1959 05EB  
                                         l2679 0E2E                                           l2759 0E84  
                                         l1977 065F                                           l1897 0EEC  
                                         l1979 066B                                           STR_1 1000  
                                         STR_2 1009                                           STR_3 100F  
                                         u1405 0EBF                                           _LATA 010C  
                                         _LATB 010D                                           _LATC 010E  
                                         u1520 0529                                           u1455 0EFA  
                                         u1720 0285                                           u1730 0286  
                                         u1555 056D                                           u1475 0CF1  
                                         u1805 0385                                           u1655 064D  
                                         u1825 0301                                           u1835 030D  
                                         u1775 02C1                                           u2737 0CCB  
                                         u2747 0E63                                           _TMR0 0015  
                                         _WPUA 020C                                           _WPUB 020D  
                                         _WPUC 020E                                   __CFG_WRT$OFF 0000  
                                __CFG_FCMEN$ON 0000                                           abs@a 00B3  
                                         _dbuf 01A0                                           _main 0F8F  
                                         _dtoa 0269                                           _prec 005B  
                                         _nout 0157                                           pad@i 00B7  
                                         pad@p 00B4                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           pad@w 00B9  
                                         btemp 007E                                           _puts 0D19  
                                __CFG_BOREN$ON 0000                                           start 0014  
                                __CFG_MCLRE$ON 0000                                          ??_abs 00B5  
                                        ??_pad 00B6                        __end_of_TMR0_Initialize 0CE7  
               ??_TMR0_DefaultInterruptHandler 0070                                  ?_EUSART_Write 0070  
               __size_of_OSCILLATOR_Initialize 0007                  __end_of_OSCILLATOR_Initialize 0C1D  
                          __size_of_IOCCF7_ISR 000D                                  ___fltol@sign1 007C  
                              __end_of___aodiv 05BF                                          ?_main 0070  
                                        ?_dtoa 00BC                                __end_of___aomod 069E  
                                __CFG_WDTE$OFF 0000                                __end_of___flmul 0269  
                              __end_of___fltol 0F8F                                          ?_puts 00B3  
                                        i1l240 0012                                          i1l236 000D  
                                        i1l903 025C                                          i1l942 07CC  
                                        i1l695 0F73                                          i1l943 07D6  
                                        i1l935 07B8                                          i1l929 0782  
                                        i1l997 0D44                                   vfpfcnvrt@fmt 00DA  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TRISC 008E                                    _writeString 0CBA  
            __size_of_TMR0_SetInterruptHandler 0009                            ___lmul@multiplicand 0074  
                    ?_TMR0_SetInterruptHandler 00A0                               __end_of_TMR0_ISR 0C83  
                      __end_of_PIN_MANAGER_IOC 0C0A                                          _flags 005D  
                                        _fputc 0E93                                          _fputs 0D97  
                                        _speed 014F                                          pad@fp 00BB  
                                        _width 0059                                          _putch 0C0A  
                                        dtoa@d 00BC                                          dtoa@i 00D8  
                                        dtoa@n 00D0                                          dtoa@p 00C9  
                                        dtoa@s 00CE                                          dtoa@w 00CC  
                                        pclath 000A                                          puts@s 00B3  
                                        status 0003                                          wtemp0 007E  
                              __initialization 0016                                   __end_of_main 1000  
                                 __end_of_dtoa 03BA                                   __end_of_puts 0D34  
                               ??_EUSART_Write 00A0                                 __CFG_LPBOR$OFF 0000  
                  ?_INTERRUPT_InterruptManager 0070                                         ??_main 014E  
                                       ??_dtoa 00C4                                         ??_puts 00B5  
                               __CFG_PLLEN$OFF 0000              _EUSART_DefaultFramingErrorHandler 0000  
                   _EUSART_OverrunErrorHandler 006A                                         ?_fputc 00A2  
                                       ?_fputs 00AA                                         _ANSELA 018C  
                                       ?_putch 0070                                         _ANSELB 018D  
                                       _ANSELC 018E                   ??_IOCCF7_SetInterruptHandler 00A2  
                                       _BORCON 0116                                         _RC1REG 0199  
                                       _RC1STA 019D                                         i1l2101 0F80  
                                       i1l2201 01C4                                         i1l2121 0059  
                                       i1l2203 01DB                                         i1l2123 0061  
                                       _RB7PPS 0E9F                                         i1l2213 01F4  
                                       i1l2141 0084                                         i1l2061 0DD2  
                                       i1l2223 021D                                         i1l2119 0057  
                                       i1l2071 0F33                                         i1l2233 0249  
                                       i1l2209 01F2                                         i1l2137 007A  
                                       i1l2057 0DC8                                         _ODCONA 028C  
                                       _ODCONB 028D                                         i1l2227 0232  
                                       i1l2139 007C                                         i1l2091 0F61  
                                       i1l2075 0F3C                                         i1l2251 077A  
                                       _ODCONC 028E                                         i1l2149 0092  
                                       i1l2093 0F6F                                         i1l2261 0795  
                                       i1l2271 07CA                                         i1l2263 07A5  
                                       i1l2273 07BD                                         i1l2257 0791  
                                       i1l2441 0C72                                         i1l2285 07F1  
                                       u210_25 0108                                         u211_25 0137  
                                       i1l1987 0D3E                                         u212_25 018D  
                                       u213_25 01A4                                         u214_25 01B3  
                                       u215_25 01C7                                         u231_25 079E  
                                       u224_25 020B                                         u225_25 0226  
                                       u217_25 01D0                                         u233_25 07B2  
                                       u170_25 0D45                                         u226_25 023C  
                                       u235_25 07C4                     __end_of_EUSART_is_tx_ready 0C91  
                                       u190_25 0DDA                                         u239_25 07DE  
                                       u193_25 0F45                                         u196_25 0F62  
                                       u189_25 0DD3                                         u199_25 0F77  
                                       _OSCCON 0099                                         u160lld 05E8  
                                       _SPBRGH 019C                                         _SPBRGL 019B  
                                       u149lld 04F1                                         _TX1REG 019A  
                                       _TX1STA 019E                                   ?_resetCursor 0070  
                             __end_of___xxtofl 07FA                                 __CFG_PWRTE$OFF 0000  
                                 vfprintf@cfmt 0143                                         ___lmul 0DC0  
                                    ??___aodiv 00B0                                      ??___aomod 00B0  
                               __CFG_STVREN$ON 0000                                      ??___flmul 0036  
                                    ??___fltol 004C                                         _hrDisp 0120  
                             ?_TMR0_Initialize 0070                                         _second 0055  
                                       _printf 0CA5                                         pad@buf 00B3  
                                       dtoa@fp 00CB                                         _strlen 0D00  
          __size_of_IOCCF7_SetInterruptHandler 0009                                         fputc@c 00A2  
                                       fputs@c 00B0                                         fputs@i 00B1  
                                       fputs@s 00AA                             __size_of__Umul8_16 001F  
                             __end_of_timerISR 0CA5                               __end_of_vfprintf 0E56  
     TMR0_SetInterruptHandler@InterruptHandler 00A0     IOCCF7_SetInterruptHandler@InterruptHandler 00A0  
                             ?_PIN_MANAGER_IOC 0070                                   ??_IOCCF7_ISR 007E  
                                 ___xxtofl@arg 002A                                   ___xxtofl@exp 0029  
                            _SYSTEM_Initialize 0C5C                                   ___xxtofl@val 0020  
                      __end_of__initialization 0039                             ?_SYSTEM_Initialize 0070  
                                   ___fltol@f1 0048                                 __pcstackCOMMON 0070  
                                 __pidataBANK2 0D53                            ??_SYSTEM_Initialize 00A3  
                                    ?_TMR0_ISR 0070                                  __end_of_fputc 0ED3  
                                __end_of_fputs 0DC0                                  __end_of_putch 0C10  
                           __end_of_IOCCF7_ISR 0C75                                 _OPTION_REGbits 0095  
              ??_EUSART_SetOverrunErrorHandler 00A2                                        ??_fputc 00A5  
                    __end_of_SYSTEM_Initialize 0C68                                        ??_fputs 00AD  
                                      ??_putch 00A1                                     __pbssBANK0 0051  
                                   __pbssBANK2 014F                                     __pbssBANK3 01A0  
                         __end_of_EUSART_Write 0C5C                              __end_of__Umul8_16 0D53  
                                   __pmaintext 0F8F               __end_of_TMR0_SetInterruptHandler 0C52  
                                      ?___lmul 0070                                     ??_TMR0_ISR 0070  
                              __CFG_PPS1WAY$ON 0000                             __size_of_setCursor 003D  
                                   __pintentry 0004                                 ___lmul@product 0078  
                                      ?_printf 0145                                        ?_strlen 00A0  
                           __size_of_speedCalc 00C6                                __CFG_WDTCCS$SWC 0000  
                                    ?___xxtofl 0020                                   ?_writeString 0070  
                           __size_of_vfpfcnvrt 010E                                        _OSCTUNE 0098  
                                      _SLRCONA 030C                                        _SLRCONB 030D  
                                      _SLRCONC 030E             __end_of_IOCCF7_SetInterruptHandler 0C49  
                   _IOCCF7_SetInterruptHandler 0C40                       ??_EUSART_SetErrorHandler 00A2  
                         __size_of_resetCursor 0008                                      ?_timerISR 0070  
                                      ___aodiv 04C8                                        ___aomod 05BF  
                              __size_of___lmul 002F                                        ___flmul 003D  
                                      ___fltol 0F29                                      ?_vfprintf 00EC  
                                      __ptext1 0CBA                                        __ptext2 0E56  
                                      __ptext3 0C83                                        __ptext4 0C1D  
                                      __ptext5 0D19                                        __ptext6 0CA5  
                                      __ptext7 0E22                                        __ptext8 03BA  
                                      __ptext9 0269                                __size_of_printf 0015  
                              __size_of_strlen 0019                                        _counter 0051  
                        _OSCILLATOR_Initialize 0C16                                   __size_of_abs 0019  
                                 __size_of_pad 0056                                     ??___xxtofl 0024  
                     ??_PIN_MANAGER_Initialize 00A2                                      _IOCCFbits 0399  
                                    _IOCCNbits 0398                                      _IOCCPbits 0397  
                   __size_of_SYSTEM_Initialize 000C                                        clrloop0 0C11  
                         end_of_initialization 0039                              __end_of_setCursor 0E93  
        __end_of_EUSART_SetOverrunErrorHandler 0C40         __size_of_EUSART_SetOverrunErrorHandler 0009  
                _EUSART_SetOverrunErrorHandler 0C37                                        fputc@fp 00A4  
                                      init_ram 07FA                                        fputs@fp 00AC  
                                      initloop 07FB                              __end_of_speedCalc 0764  
                            _EUSART_Initialize 0D73                             ?_EUSART_Initialize 0070  
                            __end_of_vfpfcnvrt 04C8                                     ??_timerISR 0070  
                           _EUSART_is_tx_ready 0C83                                     ??_vfprintf 0140  
                                      strlen@a 00A3                                        strlen@s 00A4  
                          ??_EUSART_Initialize 00A2                                   _distanceDisp 012D  
                     _TMR0_SetInterruptHandler 0C49                            ?_EUSART_is_tx_ready 0070  
                             __CFG_FOSC$INTOSC 0000                                  ___xxtofl@sign 0028  
                        __size_of_EUSART_Write 000A                __size_of_EUSART_SetErrorHandler 0009  
                                  ___flmul@grs 003C                      __end_of_EUSART_Initialize 0D97  
                         ??_EUSART_is_tx_ready 00A0                                 __end_of___lmul 0DEF  
                   _EUSART_DefaultErrorHandler 0000                                    vfpfcnvrt@ap 00DB  
                                  vfpfcnvrt@fp 00EB                                    vfpfcnvrt@ll 00E1  
                                  vfpfcnvrt@vp 00E9                                   _EUSART_Write 0C52  
                            __size_of_TMR0_ISR 000E                         ?_OSCILLATOR_Initialize 0070  
                            writeString@string 00B8                                 __end_of_printf 0CBA  
                               __end_of_strlen 0D19                            start_initialization 0016  
                     __size_of_TMR0_Initialize 0018                __size_of_PIN_MANAGER_Initialize 0033  
                                  __end_of_abs 0D00                                    __end_of_pad 0F29  
                         __size_of_writeString 0015                         _EUSART_is_tx_ready$167 00A0  
                                  putch@txData 00A1                       __size_of_PIN_MANAGER_IOC 0006  
               ?_EUSART_SetOverrunErrorHandler 00A0                                    vfprintf@fmt 00EC  
                   _EUSART_FramingErrorHandler 006C                                       ??___lmul 0078  
                       _EUSART_SetErrorHandler 0C25                                      __Umul8_16 0D34  
                                  __pdataBANK2 0120                                       ??_printf 00EF  
                                     ??_strlen 00A2                                      ___flmul@a 0032  
                                    ___flmul@b 002E                                      ___latbits 0002  
                                __pcstackBANK0 0020                                  __pcstackBANK1 00A0  
                                __pcstackBANK2 0140                               ___aodiv@dividend 00A8  
                            __size_of___xxtofl 0096                    ?_IOCCF7_SetInterruptHandler 00A0  
                   __size_of_EUSART_Initialize 0024                          _TMR0_InterruptHandler 0064  
                                    __pnvBANK0 0064                         _PIN_MANAGER_Initialize 0DEF  
                                     ?___aodiv 00A0                                       ?___aomod 00A0  
                             ___aodiv@quotient 00B3                                       ?___flmul 002E  
                                     ?___fltol 0048                                     ?__Umul8_16 0070  
                                   setCursor@a 00A4                                     setCursor@b 00A1  
                            __size_of_timerISR 0014                   ??_INTERRUPT_InterruptManager 007E  
                            __size_of_vfprintf 0034                                       _BAUD1CON 019F  
                               __size_of_fputc 0040                                 __size_of_fputs 0029  
                               __size_of_putch 0006                              ??_TMR0_Initialize 00A2  
                                ??_resetCursor 00B8         EUSART_SetErrorHandler@interruptHandler 00A0  
                                    _setCursor 0E56                                      clear_ram0 0C10  
                            _eusartRxLastError 005F            __size_of_INTERRUPT_InterruptManager 0010  
                   ??_TMR0_SetInterruptHandler 00A2                                       _PIR1bits 0010  
              ??_EUSART_SetFramingErrorHandler 00A2                                      _puts$1033 00B7  
                                    _speedCalc 069E                                      _speedDisp 0138  
             ??_IOCCF7_DefaultInterruptHandler 0070                ?_IOCCF7_DefaultInterruptHandler 0070  
                         __CFG_WDTCPS$WDTCPS1F 0000                                       _TMR0_ISR 0C75  
            _EUSART_DefaultOverrunErrorHandler 0000                              ??_PIN_MANAGER_IOC 007E  
                                    _vfpfcnvrt 03BA                              ___lmul@multiplier 0070  
                                   ?_setCursor 00A1                                     vfprintf@ap 00EE  
                                   vfprintf@fp 0142                            __end_of_resetCursor 0C25  
                                   ?_speedCalc 0070                        ??_OSCILLATOR_Initialize 00A0  
                                  ??__Umul8_16 0072                            _EUSART_ErrorHandler 0068  
                             __size_of___aodiv 00F7                               __size_of___aomod 00DF  
                             __size_of___flmul 022C                               __size_of___fltol 0066  
                                   ?_vfpfcnvrt 00DA                                ___aodiv@divisor 00A0  
                              ___aodiv@counter 00B1                                       ___xxtofl 0764  
                                     _dtoa$687 00C7                                       __ptext10 0ED3  
                                     __ptext11 0D00                                       __ptext20 0CCF  
                                     __ptext12 0D97                                       __ptext21 0C49  
                                     __ptext13 0E93                                       __ptext30 0C75  
                                     __ptext22 0DEF                                       __ptext14 0C0A  
                                     __ptext31 0003                                       __ptext23 0C40  
                                     __ptext15 0C52                                       __ptext40 003D  
                                     __ptext32 0C91                                       __ptext24 0C16  
                                     __ptext16 0CE7                                       __ptext41 0D34  
                                     __ptext33 0C04                                       __ptext25 0D73  
                                     __ptext17 05BF                                       __ptext34 0C68  
                                     __ptext26 0C37                                       __ptext18 04C8  
                                     __ptext35 0002                                       __ptext27 0C2E  
                                     __ptext19 0C5C                                       __ptext36 069E  
                                     __ptext28 0C25                                       __ptext37 0764  
                                     __ptext38 0DC0                                       __ptext39 0F29  
                                     _distance 0153                                     _IOCCF7_ISR 0C68  
                                __size_of_main 0071                                  __size_of_dtoa 0151  
                                __size_of_puts 001B                    __size_of_EUSART_is_tx_ready 000E  
         __end_of_TMR0_DefaultInterruptHandler 0004          __size_of_TMR0_DefaultInterruptHandler 0001  
                 _TMR0_DefaultInterruptHandler 0003                           __CFG_WDTCWS$WDTCWSSW 0000  
                      ?_EUSART_SetErrorHandler 00A0                                     _RC1STAbits 019D  
EUSART_SetOverrunErrorHandler@interruptHandler 00A0                                       _timerISR 0C91  
                                     int$flags 007E                                       _vfprintf 0E22  
           __end_of_INTERRUPT_InterruptManager 0014                     _INTERRUPT_InterruptManager 0004  
                                    printf@fmt 0145          __end_of_EUSART_SetFramingErrorHandler 0C37  
       __size_of_EUSART_SetFramingErrorHandler 0009                  _EUSART_SetFramingErrorHandler 0C2E  
                             ___aomod@dividend 00A8                                  ??_writeString 00B8  
                                   _INTCONbits 000B                                       intlevel1 0000  
                      ?_PIN_MANAGER_Initialize 0070                                    _resetCursor 0C1D  
               __end_of_EUSART_SetErrorHandler 0C2E                                    ??_setCursor 00A2  
                            __CFG_CLKOUTEN$OFF 0000                  ?_TMR0_DefaultInterruptHandler 0070  
                                  ??_speedCalc 007E                                       printf@ap 014D  
EUSART_SetFramingErrorHandler@interruptHandler 00A0                                ___aomod@divisor 00A0  
                                  ??_vfpfcnvrt 00DC                                ___aomod@counter 00B1  
                                __pstringtext1 1000                                  __pstringtext2 1009  
                                __pstringtext3 100F                                  __pstringtext4 0000  
                       __Umul8_16@multiplicand 0070                                     _OPTION_REG 0095  
                              _TMR0_Initialize 0CCF                                     _TX1STAbits 019E  
                           EUSART_Write@txData 00A0                            __end_of_writeString 0CCF  
                                 ___aodiv@sign 00B2                 __end_of_PIN_MANAGER_Initialize 0E22  
                                  ?_IOCCF7_ISR 0070                                _PIN_MANAGER_IOC 0C04  
                         __Umul8_16@multiplier 0078                                   ___aomod@sign 00B2  
                      _IOCCF7_InterruptHandler 0066                              __Umul8_16@product 0074  
