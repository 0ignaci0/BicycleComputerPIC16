

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Apr 07 21:30:37 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1619
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
     7                           	psect	stringtext1,global,class=STRCODE,delta=2
     8                           	psect	stringtext2,global,class=STRCODE,delta=2
     9                           	psect	stringtext3,global,class=STRCODE,delta=2
    10                           	psect	stringtext4,global,class=STRCODE,delta=2
    11                           	psect	stringtext5,global,class=STRCODE,delta=2
    12                           	psect	stringtext6,global,class=STRCODE,delta=2
    13                           	psect	stringtext7,global,class=STRCODE,delta=2
    14                           	psect	stringtext8,global,class=STRCODE,delta=2
    15                           	psect	cinit,global,class=CODE,merge=1,delta=2
    16                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    18                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    19                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    20                           	psect	inittext,global,class=CODE,delta=2
    21                           	psect	clrtext,global,class=CODE,delta=2
    22                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    23                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    24                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    25                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    26                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    27                           	psect	text1,local,class=CODE,merge=1,delta=2
    28                           	psect	text2,local,class=CODE,merge=1,delta=2
    29                           	psect	text3,local,class=CODE,merge=1,delta=2
    30                           	psect	text4,local,class=CODE,merge=1,delta=2
    31                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text7,local,class=CODE,merge=1,delta=2
    34                           	psect	text8,local,class=CODE,merge=1,delta=2
    35                           	psect	text9,local,class=CODE,merge=1,delta=2
    36                           	psect	text10,local,class=CODE,merge=1,delta=2
    37                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text14,local,class=CODE,merge=1,delta=2
    41                           	psect	text15,local,class=CODE,merge=1,delta=2
    42                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    46                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    47                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    48                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    49                           	psect	text23,local,class=CODE,merge=1,delta=2
    50                           	psect	text24,local,class=CODE,merge=1,delta=2
    51                           	psect	text25,local,class=CODE,merge=1,delta=2
    52                           	psect	text26,local,class=CODE,merge=1,delta=2
    53                           	psect	text27,local,class=CODE,merge=1,delta=2
    54                           	psect	text28,local,class=CODE,merge=1,delta=2
    55                           	psect	text29,local,class=CODE,merge=1,delta=2
    56                           	psect	text30,local,class=CODE,merge=1,delta=2
    57                           	psect	text31,local,class=CODE,merge=1,delta=2
    58                           	psect	text32,local,class=CODE,merge=1,delta=2
    59                           	psect	intentry,global,class=CODE,delta=2
    60                           	psect	text34,local,class=CODE,merge=1,delta=2
    61                           	psect	text35,local,class=CODE,merge=1,delta=2
    62                           	psect	text36,local,class=CODE,merge=1,delta=2
    63                           	psect	text37,local,class=CODE,merge=1,delta=2
    64                           	psect	text38,local,class=CODE,merge=1,delta=2
    65                           	psect	text39,local,class=CODE,merge=1,delta=2
    66                           	psect	text40,local,class=CODE,merge=1,delta=2
    67                           	psect	text41,local,class=CODE,merge=1,delta=2,group=1
    68                           	psect	text42,local,class=CODE,merge=1,delta=2,group=1
    69                           	psect	text43,local,class=CODE,merge=1,delta=2,group=1
    70                           	psect	text44,local,class=CODE,merge=1,delta=2,group=1
    71                           	psect	text45,local,class=CODE,merge=1,delta=2,group=1
    72                           	psect	text46,local,class=CODE,merge=1,delta=2,group=1
    73                           	dabs	1,0x7E,2
    74  0000                     
    75                           ; Version 2.05
    76                           ; Generated 20/12/2018 GMT
    77                           ; 
    78                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    79                           ; All rights reserved.
    80                           ; 
    81                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    82                           ; 
    83                           ; Redistribution and use in source and binary forms, with or without modification, are
    84                           ; permitted provided that the following conditions are met:
    85                           ; 
    86                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    87                           ;        conditions and the following disclaimer.
    88                           ; 
    89                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    90                           ;        of conditions and the following disclaimer in the documentation and/or other
    91                           ;        materials provided with the distribution.
    92                           ; 
    93                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    94                           ;        software without specific prior written permission.
    95                           ; 
    96                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    97                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    98                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    99                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   100                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   101                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   102                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   103                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   104                           ; 
   105                           ; 
   106                           ; Code-generator required, PIC16F1619 Definitions
   107                           ; 
   108                           ; SFR Addresses
   109  0000                     	;# 
   110  0001                     	;# 
   111  0002                     	;# 
   112  0003                     	;# 
   113  0004                     	;# 
   114  0005                     	;# 
   115  0006                     	;# 
   116  0007                     	;# 
   117  0008                     	;# 
   118  0009                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000D                     	;# 
   123  000E                     	;# 
   124  0010                     	;# 
   125  0011                     	;# 
   126  0012                     	;# 
   127  0013                     	;# 
   128  0014                     	;# 
   129  0015                     	;# 
   130  0016                     	;# 
   131  0016                     	;# 
   132  0017                     	;# 
   133  0018                     	;# 
   134  0019                     	;# 
   135  001A                     	;# 
   136  001A                     	;# 
   137  001B                     	;# 
   138  001B                     	;# 
   139  001C                     	;# 
   140  001D                     	;# 
   141  001E                     	;# 
   142  001F                     	;# 
   143  008C                     	;# 
   144  008D                     	;# 
   145  008E                     	;# 
   146  0090                     	;# 
   147  0091                     	;# 
   148  0092                     	;# 
   149  0093                     	;# 
   150  0094                     	;# 
   151  0095                     	;# 
   152  0096                     	;# 
   153  0098                     	;# 
   154  0099                     	;# 
   155  009A                     	;# 
   156  009B                     	;# 
   157  009B                     	;# 
   158  009C                     	;# 
   159  009D                     	;# 
   160  009E                     	;# 
   161  009F                     	;# 
   162  010C                     	;# 
   163  010D                     	;# 
   164  010E                     	;# 
   165  0111                     	;# 
   166  0112                     	;# 
   167  0113                     	;# 
   168  0114                     	;# 
   169  0115                     	;# 
   170  0116                     	;# 
   171  0117                     	;# 
   172  0118                     	;# 
   173  0119                     	;# 
   174  011C                     	;# 
   175  018C                     	;# 
   176  018D                     	;# 
   177  018E                     	;# 
   178  0191                     	;# 
   179  0191                     	;# 
   180  0192                     	;# 
   181  0193                     	;# 
   182  0193                     	;# 
   183  0194                     	;# 
   184  0195                     	;# 
   185  0196                     	;# 
   186  0197                     	;# 
   187  0199                     	;# 
   188  0199                     	;# 
   189  0199                     	;# 
   190  019A                     	;# 
   191  019A                     	;# 
   192  019A                     	;# 
   193  019B                     	;# 
   194  019B                     	;# 
   195  019B                     	;# 
   196  019B                     	;# 
   197  019B                     	;# 
   198  019C                     	;# 
   199  019C                     	;# 
   200  019C                     	;# 
   201  019D                     	;# 
   202  019D                     	;# 
   203  019D                     	;# 
   204  019E                     	;# 
   205  019E                     	;# 
   206  019E                     	;# 
   207  019F                     	;# 
   208  019F                     	;# 
   209  019F                     	;# 
   210  019F                     	;# 
   211  019F                     	;# 
   212  020C                     	;# 
   213  020D                     	;# 
   214  020E                     	;# 
   215  0211                     	;# 
   216  0211                     	;# 
   217  0212                     	;# 
   218  0212                     	;# 
   219  0213                     	;# 
   220  0213                     	;# 
   221  0214                     	;# 
   222  0214                     	;# 
   223  0215                     	;# 
   224  0215                     	;# 
   225  0215                     	;# 
   226  0215                     	;# 
   227  0216                     	;# 
   228  0216                     	;# 
   229  0217                     	;# 
   230  0217                     	;# 
   231  028C                     	;# 
   232  028D                     	;# 
   233  028E                     	;# 
   234  0291                     	;# 
   235  0291                     	;# 
   236  0292                     	;# 
   237  0293                     	;# 
   238  0294                     	;# 
   239  0298                     	;# 
   240  0298                     	;# 
   241  0299                     	;# 
   242  029A                     	;# 
   243  029B                     	;# 
   244  029E                     	;# 
   245  030C                     	;# 
   246  030D                     	;# 
   247  030E                     	;# 
   248  038C                     	;# 
   249  038D                     	;# 
   250  038E                     	;# 
   251  0391                     	;# 
   252  0392                     	;# 
   253  0393                     	;# 
   254  0394                     	;# 
   255  0395                     	;# 
   256  0396                     	;# 
   257  0397                     	;# 
   258  0398                     	;# 
   259  0399                     	;# 
   260  040E                     	;# 
   261  0413                     	;# 
   262  0413                     	;# 
   263  0414                     	;# 
   264  0414                     	;# 
   265  0415                     	;# 
   266  0416                     	;# 
   267  0417                     	;# 
   268  0418                     	;# 
   269  041A                     	;# 
   270  041A                     	;# 
   271  041B                     	;# 
   272  041B                     	;# 
   273  041C                     	;# 
   274  041D                     	;# 
   275  041E                     	;# 
   276  041F                     	;# 
   277  0493                     	;# 
   278  0494                     	;# 
   279  0495                     	;# 
   280  0496                     	;# 
   281  049A                     	;# 
   282  049B                     	;# 
   283  049C                     	;# 
   284  049D                     	;# 
   285  058C                     	;# 
   286  058C                     	;# 
   287  058D                     	;# 
   288  058E                     	;# 
   289  058E                     	;# 
   290  058F                     	;# 
   291  0590                     	;# 
   292  0590                     	;# 
   293  0591                     	;# 
   294  0592                     	;# 
   295  0592                     	;# 
   296  0593                     	;# 
   297  0594                     	;# 
   298  0594                     	;# 
   299  0595                     	;# 
   300  0596                     	;# 
   301  0596                     	;# 
   302  0597                     	;# 
   303  0598                     	;# 
   304  0599                     	;# 
   305  059A                     	;# 
   306  059B                     	;# 
   307  059B                     	;# 
   308  059C                     	;# 
   309  059D                     	;# 
   310  060C                     	;# 
   311  060C                     	;# 
   312  060D                     	;# 
   313  060E                     	;# 
   314  060F                     	;# 
   315  060F                     	;# 
   316  0610                     	;# 
   317  0611                     	;# 
   318  0612                     	;# 
   319  0613                     	;# 
   320  0614                     	;# 
   321  0617                     	;# 
   322  0617                     	;# 
   323  0618                     	;# 
   324  0619                     	;# 
   325  061A                     	;# 
   326  061A                     	;# 
   327  061B                     	;# 
   328  061C                     	;# 
   329  0691                     	;# 
   330  0692                     	;# 
   331  0693                     	;# 
   332  0694                     	;# 
   333  0695                     	;# 
   334  0696                     	;# 
   335  0697                     	;# 
   336  0699                     	;# 
   337  069A                     	;# 
   338  0711                     	;# 
   339  0712                     	;# 
   340  0713                     	;# 
   341  0714                     	;# 
   342  0715                     	;# 
   343  0718                     	;# 
   344  0718                     	;# 
   345  0719                     	;# 
   346  071A                     	;# 
   347  071A                     	;# 
   348  071B                     	;# 
   349  071C                     	;# 
   350  071D                     	;# 
   351  0791                     	;# 
   352  0791                     	;# 
   353  0792                     	;# 
   354  0793                     	;# 
   355  0793                     	;# 
   356  0794                     	;# 
   357  0795                     	;# 
   358  0795                     	;# 
   359  0796                     	;# 
   360  0797                     	;# 
   361  0797                     	;# 
   362  0798                     	;# 
   363  0799                     	;# 
   364  079A                     	;# 
   365  080C                     	;# 
   366  080C                     	;# 
   367  080D                     	;# 
   368  080E                     	;# 
   369  080E                     	;# 
   370  080F                     	;# 
   371  0810                     	;# 
   372  0810                     	;# 
   373  0811                     	;# 
   374  0812                     	;# 
   375  0812                     	;# 
   376  0813                     	;# 
   377  0814                     	;# 
   378  0815                     	;# 
   379  0816                     	;# 
   380  0817                     	;# 
   381  0818                     	;# 
   382  0819                     	;# 
   383  081A                     	;# 
   384  081A                     	;# 
   385  081B                     	;# 
   386  081C                     	;# 
   387  081C                     	;# 
   388  081D                     	;# 
   389  088C                     	;# 
   390  088D                     	;# 
   391  088E                     	;# 
   392  088F                     	;# 
   393  088F                     	;# 
   394  0890                     	;# 
   395  0891                     	;# 
   396  0892                     	;# 
   397  0893                     	;# 
   398  0893                     	;# 
   399  0894                     	;# 
   400  0895                     	;# 
   401  0896                     	;# 
   402  0897                     	;# 
   403  0897                     	;# 
   404  0898                     	;# 
   405  0899                     	;# 
   406  0D8C                     	;# 
   407  0D8C                     	;# 
   408  0D8D                     	;# 
   409  0D8E                     	;# 
   410  0D8F                     	;# 
   411  0D8F                     	;# 
   412  0D90                     	;# 
   413  0D91                     	;# 
   414  0D92                     	;# 
   415  0D92                     	;# 
   416  0D93                     	;# 
   417  0D94                     	;# 
   418  0D95                     	;# 
   419  0D95                     	;# 
   420  0D96                     	;# 
   421  0D97                     	;# 
   422  0D98                     	;# 
   423  0D99                     	;# 
   424  0D9A                     	;# 
   425  0D9B                     	;# 
   426  0D9C                     	;# 
   427  0D9D                     	;# 
   428  0D9E                     	;# 
   429  0D9E                     	;# 
   430  0D9F                     	;# 
   431  0DA0                     	;# 
   432  0DA1                     	;# 
   433  0DA1                     	;# 
   434  0DA2                     	;# 
   435  0DA3                     	;# 
   436  0DA4                     	;# 
   437  0DA4                     	;# 
   438  0DA5                     	;# 
   439  0DA6                     	;# 
   440  0DA7                     	;# 
   441  0DA7                     	;# 
   442  0DA8                     	;# 
   443  0DA9                     	;# 
   444  0DAA                     	;# 
   445  0DAB                     	;# 
   446  0DAC                     	;# 
   447  0DAD                     	;# 
   448  0DAE                     	;# 
   449  0DAF                     	;# 
   450  0E0F                     	;# 
   451  0E10                     	;# 
   452  0E11                     	;# 
   453  0E12                     	;# 
   454  0E13                     	;# 
   455  0E14                     	;# 
   456  0E15                     	;# 
   457  0E16                     	;# 
   458  0E17                     	;# 
   459  0E18                     	;# 
   460  0E19                     	;# 
   461  0E1A                     	;# 
   462  0E1B                     	;# 
   463  0E1C                     	;# 
   464  0E1D                     	;# 
   465  0E1E                     	;# 
   466  0E1F                     	;# 
   467  0E20                     	;# 
   468  0E21                     	;# 
   469  0E22                     	;# 
   470  0E23                     	;# 
   471  0E24                     	;# 
   472  0E25                     	;# 
   473  0E26                     	;# 
   474  0E27                     	;# 
   475  0E28                     	;# 
   476  0E29                     	;# 
   477  0E2A                     	;# 
   478  0E2B                     	;# 
   479  0E2C                     	;# 
   480  0E2D                     	;# 
   481  0E2E                     	;# 
   482  0E90                     	;# 
   483  0E91                     	;# 
   484  0E92                     	;# 
   485  0E94                     	;# 
   486  0E95                     	;# 
   487  0E9C                     	;# 
   488  0E9D                     	;# 
   489  0E9E                     	;# 
   490  0E9F                     	;# 
   491  0EA0                     	;# 
   492  0EA1                     	;# 
   493  0EA2                     	;# 
   494  0EA3                     	;# 
   495  0EA4                     	;# 
   496  0EA5                     	;# 
   497  0EA6                     	;# 
   498  0EA7                     	;# 
   499  0F0F                     	;# 
   500  0F10                     	;# 
   501  0F11                     	;# 
   502  0F12                     	;# 
   503  0F13                     	;# 
   504  0F14                     	;# 
   505  0F15                     	;# 
   506  0F16                     	;# 
   507  0F17                     	;# 
   508  0F18                     	;# 
   509  0F19                     	;# 
   510  0F1A                     	;# 
   511  0F1B                     	;# 
   512  0F1C                     	;# 
   513  0F1D                     	;# 
   514  0F1E                     	;# 
   515  0F1F                     	;# 
   516  0F20                     	;# 
   517  0F21                     	;# 
   518  0F22                     	;# 
   519  0F23                     	;# 
   520  0F24                     	;# 
   521  0F25                     	;# 
   522  0F26                     	;# 
   523  0F27                     	;# 
   524  0F28                     	;# 
   525  0F29                     	;# 
   526  0F2A                     	;# 
   527  0F2B                     	;# 
   528  0F2C                     	;# 
   529  0F2D                     	;# 
   530  0F2E                     	;# 
   531  0F2F                     	;# 
   532  0F30                     	;# 
   533  0F31                     	;# 
   534  0F32                     	;# 
   535  0F33                     	;# 
   536  0F34                     	;# 
   537  0F35                     	;# 
   538  0F36                     	;# 
   539  0F37                     	;# 
   540  0FE4                     	;# 
   541  0FE5                     	;# 
   542  0FE6                     	;# 
   543  0FE7                     	;# 
   544  0FE8                     	;# 
   545  0FE9                     	;# 
   546  0FEA                     	;# 
   547  0FEB                     	;# 
   548  0FED                     	;# 
   549  0FEE                     	;# 
   550  0FEF                     	;# 
   551  0000                     	;# 
   552  0001                     	;# 
   553  0002                     	;# 
   554  0003                     	;# 
   555  0004                     	;# 
   556  0005                     	;# 
   557  0006                     	;# 
   558  0007                     	;# 
   559  0008                     	;# 
   560  0009                     	;# 
   561  000A                     	;# 
   562  000B                     	;# 
   563  000C                     	;# 
   564  000D                     	;# 
   565  000E                     	;# 
   566  0010                     	;# 
   567  0011                     	;# 
   568  0012                     	;# 
   569  0013                     	;# 
   570  0014                     	;# 
   571  0015                     	;# 
   572  0016                     	;# 
   573  0016                     	;# 
   574  0017                     	;# 
   575  0018                     	;# 
   576  0019                     	;# 
   577  001A                     	;# 
   578  001A                     	;# 
   579  001B                     	;# 
   580  001B                     	;# 
   581  001C                     	;# 
   582  001D                     	;# 
   583  001E                     	;# 
   584  001F                     	;# 
   585  008C                     	;# 
   586  008D                     	;# 
   587  008E                     	;# 
   588  0090                     	;# 
   589  0091                     	;# 
   590  0092                     	;# 
   591  0093                     	;# 
   592  0094                     	;# 
   593  0095                     	;# 
   594  0096                     	;# 
   595  0098                     	;# 
   596  0099                     	;# 
   597  009A                     	;# 
   598  009B                     	;# 
   599  009B                     	;# 
   600  009C                     	;# 
   601  009D                     	;# 
   602  009E                     	;# 
   603  009F                     	;# 
   604  010C                     	;# 
   605  010D                     	;# 
   606  010E                     	;# 
   607  0111                     	;# 
   608  0112                     	;# 
   609  0113                     	;# 
   610  0114                     	;# 
   611  0115                     	;# 
   612  0116                     	;# 
   613  0117                     	;# 
   614  0118                     	;# 
   615  0119                     	;# 
   616  011C                     	;# 
   617  018C                     	;# 
   618  018D                     	;# 
   619  018E                     	;# 
   620  0191                     	;# 
   621  0191                     	;# 
   622  0192                     	;# 
   623  0193                     	;# 
   624  0193                     	;# 
   625  0194                     	;# 
   626  0195                     	;# 
   627  0196                     	;# 
   628  0197                     	;# 
   629  0199                     	;# 
   630  0199                     	;# 
   631  0199                     	;# 
   632  019A                     	;# 
   633  019A                     	;# 
   634  019A                     	;# 
   635  019B                     	;# 
   636  019B                     	;# 
   637  019B                     	;# 
   638  019B                     	;# 
   639  019B                     	;# 
   640  019C                     	;# 
   641  019C                     	;# 
   642  019C                     	;# 
   643  019D                     	;# 
   644  019D                     	;# 
   645  019D                     	;# 
   646  019E                     	;# 
   647  019E                     	;# 
   648  019E                     	;# 
   649  019F                     	;# 
   650  019F                     	;# 
   651  019F                     	;# 
   652  019F                     	;# 
   653  019F                     	;# 
   654  020C                     	;# 
   655  020D                     	;# 
   656  020E                     	;# 
   657  0211                     	;# 
   658  0211                     	;# 
   659  0212                     	;# 
   660  0212                     	;# 
   661  0213                     	;# 
   662  0213                     	;# 
   663  0214                     	;# 
   664  0214                     	;# 
   665  0215                     	;# 
   666  0215                     	;# 
   667  0215                     	;# 
   668  0215                     	;# 
   669  0216                     	;# 
   670  0216                     	;# 
   671  0217                     	;# 
   672  0217                     	;# 
   673  028C                     	;# 
   674  028D                     	;# 
   675  028E                     	;# 
   676  0291                     	;# 
   677  0291                     	;# 
   678  0292                     	;# 
   679  0293                     	;# 
   680  0294                     	;# 
   681  0298                     	;# 
   682  0298                     	;# 
   683  0299                     	;# 
   684  029A                     	;# 
   685  029B                     	;# 
   686  029E                     	;# 
   687  030C                     	;# 
   688  030D                     	;# 
   689  030E                     	;# 
   690  038C                     	;# 
   691  038D                     	;# 
   692  038E                     	;# 
   693  0391                     	;# 
   694  0392                     	;# 
   695  0393                     	;# 
   696  0394                     	;# 
   697  0395                     	;# 
   698  0396                     	;# 
   699  0397                     	;# 
   700  0398                     	;# 
   701  0399                     	;# 
   702  040E                     	;# 
   703  0413                     	;# 
   704  0413                     	;# 
   705  0414                     	;# 
   706  0414                     	;# 
   707  0415                     	;# 
   708  0416                     	;# 
   709  0417                     	;# 
   710  0418                     	;# 
   711  041A                     	;# 
   712  041A                     	;# 
   713  041B                     	;# 
   714  041B                     	;# 
   715  041C                     	;# 
   716  041D                     	;# 
   717  041E                     	;# 
   718  041F                     	;# 
   719  0493                     	;# 
   720  0494                     	;# 
   721  0495                     	;# 
   722  0496                     	;# 
   723  049A                     	;# 
   724  049B                     	;# 
   725  049C                     	;# 
   726  049D                     	;# 
   727  058C                     	;# 
   728  058C                     	;# 
   729  058D                     	;# 
   730  058E                     	;# 
   731  058E                     	;# 
   732  058F                     	;# 
   733  0590                     	;# 
   734  0590                     	;# 
   735  0591                     	;# 
   736  0592                     	;# 
   737  0592                     	;# 
   738  0593                     	;# 
   739  0594                     	;# 
   740  0594                     	;# 
   741  0595                     	;# 
   742  0596                     	;# 
   743  0596                     	;# 
   744  0597                     	;# 
   745  0598                     	;# 
   746  0599                     	;# 
   747  059A                     	;# 
   748  059B                     	;# 
   749  059B                     	;# 
   750  059C                     	;# 
   751  059D                     	;# 
   752  060C                     	;# 
   753  060C                     	;# 
   754  060D                     	;# 
   755  060E                     	;# 
   756  060F                     	;# 
   757  060F                     	;# 
   758  0610                     	;# 
   759  0611                     	;# 
   760  0612                     	;# 
   761  0613                     	;# 
   762  0614                     	;# 
   763  0617                     	;# 
   764  0617                     	;# 
   765  0618                     	;# 
   766  0619                     	;# 
   767  061A                     	;# 
   768  061A                     	;# 
   769  061B                     	;# 
   770  061C                     	;# 
   771  0691                     	;# 
   772  0692                     	;# 
   773  0693                     	;# 
   774  0694                     	;# 
   775  0695                     	;# 
   776  0696                     	;# 
   777  0697                     	;# 
   778  0699                     	;# 
   779  069A                     	;# 
   780  0711                     	;# 
   781  0712                     	;# 
   782  0713                     	;# 
   783  0714                     	;# 
   784  0715                     	;# 
   785  0718                     	;# 
   786  0718                     	;# 
   787  0719                     	;# 
   788  071A                     	;# 
   789  071A                     	;# 
   790  071B                     	;# 
   791  071C                     	;# 
   792  071D                     	;# 
   793  0791                     	;# 
   794  0791                     	;# 
   795  0792                     	;# 
   796  0793                     	;# 
   797  0793                     	;# 
   798  0794                     	;# 
   799  0795                     	;# 
   800  0795                     	;# 
   801  0796                     	;# 
   802  0797                     	;# 
   803  0797                     	;# 
   804  0798                     	;# 
   805  0799                     	;# 
   806  079A                     	;# 
   807  080C                     	;# 
   808  080C                     	;# 
   809  080D                     	;# 
   810  080E                     	;# 
   811  080E                     	;# 
   812  080F                     	;# 
   813  0810                     	;# 
   814  0810                     	;# 
   815  0811                     	;# 
   816  0812                     	;# 
   817  0812                     	;# 
   818  0813                     	;# 
   819  0814                     	;# 
   820  0815                     	;# 
   821  0816                     	;# 
   822  0817                     	;# 
   823  0818                     	;# 
   824  0819                     	;# 
   825  081A                     	;# 
   826  081A                     	;# 
   827  081B                     	;# 
   828  081C                     	;# 
   829  081C                     	;# 
   830  081D                     	;# 
   831  088C                     	;# 
   832  088D                     	;# 
   833  088E                     	;# 
   834  088F                     	;# 
   835  088F                     	;# 
   836  0890                     	;# 
   837  0891                     	;# 
   838  0892                     	;# 
   839  0893                     	;# 
   840  0893                     	;# 
   841  0894                     	;# 
   842  0895                     	;# 
   843  0896                     	;# 
   844  0897                     	;# 
   845  0897                     	;# 
   846  0898                     	;# 
   847  0899                     	;# 
   848  0D8C                     	;# 
   849  0D8C                     	;# 
   850  0D8D                     	;# 
   851  0D8E                     	;# 
   852  0D8F                     	;# 
   853  0D8F                     	;# 
   854  0D90                     	;# 
   855  0D91                     	;# 
   856  0D92                     	;# 
   857  0D92                     	;# 
   858  0D93                     	;# 
   859  0D94                     	;# 
   860  0D95                     	;# 
   861  0D95                     	;# 
   862  0D96                     	;# 
   863  0D97                     	;# 
   864  0D98                     	;# 
   865  0D99                     	;# 
   866  0D9A                     	;# 
   867  0D9B                     	;# 
   868  0D9C                     	;# 
   869  0D9D                     	;# 
   870  0D9E                     	;# 
   871  0D9E                     	;# 
   872  0D9F                     	;# 
   873  0DA0                     	;# 
   874  0DA1                     	;# 
   875  0DA1                     	;# 
   876  0DA2                     	;# 
   877  0DA3                     	;# 
   878  0DA4                     	;# 
   879  0DA4                     	;# 
   880  0DA5                     	;# 
   881  0DA6                     	;# 
   882  0DA7                     	;# 
   883  0DA7                     	;# 
   884  0DA8                     	;# 
   885  0DA9                     	;# 
   886  0DAA                     	;# 
   887  0DAB                     	;# 
   888  0DAC                     	;# 
   889  0DAD                     	;# 
   890  0DAE                     	;# 
   891  0DAF                     	;# 
   892  0E0F                     	;# 
   893  0E10                     	;# 
   894  0E11                     	;# 
   895  0E12                     	;# 
   896  0E13                     	;# 
   897  0E14                     	;# 
   898  0E15                     	;# 
   899  0E16                     	;# 
   900  0E17                     	;# 
   901  0E18                     	;# 
   902  0E19                     	;# 
   903  0E1A                     	;# 
   904  0E1B                     	;# 
   905  0E1C                     	;# 
   906  0E1D                     	;# 
   907  0E1E                     	;# 
   908  0E1F                     	;# 
   909  0E20                     	;# 
   910  0E21                     	;# 
   911  0E22                     	;# 
   912  0E23                     	;# 
   913  0E24                     	;# 
   914  0E25                     	;# 
   915  0E26                     	;# 
   916  0E27                     	;# 
   917  0E28                     	;# 
   918  0E29                     	;# 
   919  0E2A                     	;# 
   920  0E2B                     	;# 
   921  0E2C                     	;# 
   922  0E2D                     	;# 
   923  0E2E                     	;# 
   924  0E90                     	;# 
   925  0E91                     	;# 
   926  0E92                     	;# 
   927  0E94                     	;# 
   928  0E95                     	;# 
   929  0E9C                     	;# 
   930  0E9D                     	;# 
   931  0E9E                     	;# 
   932  0E9F                     	;# 
   933  0EA0                     	;# 
   934  0EA1                     	;# 
   935  0EA2                     	;# 
   936  0EA3                     	;# 
   937  0EA4                     	;# 
   938  0EA5                     	;# 
   939  0EA6                     	;# 
   940  0EA7                     	;# 
   941  0F0F                     	;# 
   942  0F10                     	;# 
   943  0F11                     	;# 
   944  0F12                     	;# 
   945  0F13                     	;# 
   946  0F14                     	;# 
   947  0F15                     	;# 
   948  0F16                     	;# 
   949  0F17                     	;# 
   950  0F18                     	;# 
   951  0F19                     	;# 
   952  0F1A                     	;# 
   953  0F1B                     	;# 
   954  0F1C                     	;# 
   955  0F1D                     	;# 
   956  0F1E                     	;# 
   957  0F1F                     	;# 
   958  0F20                     	;# 
   959  0F21                     	;# 
   960  0F22                     	;# 
   961  0F23                     	;# 
   962  0F24                     	;# 
   963  0F25                     	;# 
   964  0F26                     	;# 
   965  0F27                     	;# 
   966  0F28                     	;# 
   967  0F29                     	;# 
   968  0F2A                     	;# 
   969  0F2B                     	;# 
   970  0F2C                     	;# 
   971  0F2D                     	;# 
   972  0F2E                     	;# 
   973  0F2F                     	;# 
   974  0F30                     	;# 
   975  0F31                     	;# 
   976  0F32                     	;# 
   977  0F33                     	;# 
   978  0F34                     	;# 
   979  0F35                     	;# 
   980  0F36                     	;# 
   981  0F37                     	;# 
   982  0FE4                     	;# 
   983  0FE5                     	;# 
   984  0FE6                     	;# 
   985  0FE7                     	;# 
   986  0FE8                     	;# 
   987  0FE9                     	;# 
   988  0FEA                     	;# 
   989  0FEB                     	;# 
   990  0FED                     	;# 
   991  0FEE                     	;# 
   992  0FEF                     	;# 
   993  0000                     	;# 
   994  0001                     	;# 
   995  0002                     	;# 
   996  0003                     	;# 
   997  0004                     	;# 
   998  0005                     	;# 
   999  0006                     	;# 
  1000  0007                     	;# 
  1001  0008                     	;# 
  1002  0009                     	;# 
  1003  000A                     	;# 
  1004  000B                     	;# 
  1005  000C                     	;# 
  1006  000D                     	;# 
  1007  000E                     	;# 
  1008  0010                     	;# 
  1009  0011                     	;# 
  1010  0012                     	;# 
  1011  0013                     	;# 
  1012  0014                     	;# 
  1013  0015                     	;# 
  1014  0016                     	;# 
  1015  0016                     	;# 
  1016  0017                     	;# 
  1017  0018                     	;# 
  1018  0019                     	;# 
  1019  001A                     	;# 
  1020  001A                     	;# 
  1021  001B                     	;# 
  1022  001B                     	;# 
  1023  001C                     	;# 
  1024  001D                     	;# 
  1025  001E                     	;# 
  1026  001F                     	;# 
  1027  008C                     	;# 
  1028  008D                     	;# 
  1029  008E                     	;# 
  1030  0090                     	;# 
  1031  0091                     	;# 
  1032  0092                     	;# 
  1033  0093                     	;# 
  1034  0094                     	;# 
  1035  0095                     	;# 
  1036  0096                     	;# 
  1037  0098                     	;# 
  1038  0099                     	;# 
  1039  009A                     	;# 
  1040  009B                     	;# 
  1041  009B                     	;# 
  1042  009C                     	;# 
  1043  009D                     	;# 
  1044  009E                     	;# 
  1045  009F                     	;# 
  1046  010C                     	;# 
  1047  010D                     	;# 
  1048  010E                     	;# 
  1049  0111                     	;# 
  1050  0112                     	;# 
  1051  0113                     	;# 
  1052  0114                     	;# 
  1053  0115                     	;# 
  1054  0116                     	;# 
  1055  0117                     	;# 
  1056  0118                     	;# 
  1057  0119                     	;# 
  1058  011C                     	;# 
  1059  018C                     	;# 
  1060  018D                     	;# 
  1061  018E                     	;# 
  1062  0191                     	;# 
  1063  0191                     	;# 
  1064  0192                     	;# 
  1065  0193                     	;# 
  1066  0193                     	;# 
  1067  0194                     	;# 
  1068  0195                     	;# 
  1069  0196                     	;# 
  1070  0197                     	;# 
  1071  0199                     	;# 
  1072  0199                     	;# 
  1073  0199                     	;# 
  1074  019A                     	;# 
  1075  019A                     	;# 
  1076  019A                     	;# 
  1077  019B                     	;# 
  1078  019B                     	;# 
  1079  019B                     	;# 
  1080  019B                     	;# 
  1081  019B                     	;# 
  1082  019C                     	;# 
  1083  019C                     	;# 
  1084  019C                     	;# 
  1085  019D                     	;# 
  1086  019D                     	;# 
  1087  019D                     	;# 
  1088  019E                     	;# 
  1089  019E                     	;# 
  1090  019E                     	;# 
  1091  019F                     	;# 
  1092  019F                     	;# 
  1093  019F                     	;# 
  1094  019F                     	;# 
  1095  019F                     	;# 
  1096  020C                     	;# 
  1097  020D                     	;# 
  1098  020E                     	;# 
  1099  0211                     	;# 
  1100  0211                     	;# 
  1101  0212                     	;# 
  1102  0212                     	;# 
  1103  0213                     	;# 
  1104  0213                     	;# 
  1105  0214                     	;# 
  1106  0214                     	;# 
  1107  0215                     	;# 
  1108  0215                     	;# 
  1109  0215                     	;# 
  1110  0215                     	;# 
  1111  0216                     	;# 
  1112  0216                     	;# 
  1113  0217                     	;# 
  1114  0217                     	;# 
  1115  028C                     	;# 
  1116  028D                     	;# 
  1117  028E                     	;# 
  1118  0291                     	;# 
  1119  0291                     	;# 
  1120  0292                     	;# 
  1121  0293                     	;# 
  1122  0294                     	;# 
  1123  0298                     	;# 
  1124  0298                     	;# 
  1125  0299                     	;# 
  1126  029A                     	;# 
  1127  029B                     	;# 
  1128  029E                     	;# 
  1129  030C                     	;# 
  1130  030D                     	;# 
  1131  030E                     	;# 
  1132  038C                     	;# 
  1133  038D                     	;# 
  1134  038E                     	;# 
  1135  0391                     	;# 
  1136  0392                     	;# 
  1137  0393                     	;# 
  1138  0394                     	;# 
  1139  0395                     	;# 
  1140  0396                     	;# 
  1141  0397                     	;# 
  1142  0398                     	;# 
  1143  0399                     	;# 
  1144  040E                     	;# 
  1145  0413                     	;# 
  1146  0413                     	;# 
  1147  0414                     	;# 
  1148  0414                     	;# 
  1149  0415                     	;# 
  1150  0416                     	;# 
  1151  0417                     	;# 
  1152  0418                     	;# 
  1153  041A                     	;# 
  1154  041A                     	;# 
  1155  041B                     	;# 
  1156  041B                     	;# 
  1157  041C                     	;# 
  1158  041D                     	;# 
  1159  041E                     	;# 
  1160  041F                     	;# 
  1161  0493                     	;# 
  1162  0494                     	;# 
  1163  0495                     	;# 
  1164  0496                     	;# 
  1165  049A                     	;# 
  1166  049B                     	;# 
  1167  049C                     	;# 
  1168  049D                     	;# 
  1169  058C                     	;# 
  1170  058C                     	;# 
  1171  058D                     	;# 
  1172  058E                     	;# 
  1173  058E                     	;# 
  1174  058F                     	;# 
  1175  0590                     	;# 
  1176  0590                     	;# 
  1177  0591                     	;# 
  1178  0592                     	;# 
  1179  0592                     	;# 
  1180  0593                     	;# 
  1181  0594                     	;# 
  1182  0594                     	;# 
  1183  0595                     	;# 
  1184  0596                     	;# 
  1185  0596                     	;# 
  1186  0597                     	;# 
  1187  0598                     	;# 
  1188  0599                     	;# 
  1189  059A                     	;# 
  1190  059B                     	;# 
  1191  059B                     	;# 
  1192  059C                     	;# 
  1193  059D                     	;# 
  1194  060C                     	;# 
  1195  060C                     	;# 
  1196  060D                     	;# 
  1197  060E                     	;# 
  1198  060F                     	;# 
  1199  060F                     	;# 
  1200  0610                     	;# 
  1201  0611                     	;# 
  1202  0612                     	;# 
  1203  0613                     	;# 
  1204  0614                     	;# 
  1205  0617                     	;# 
  1206  0617                     	;# 
  1207  0618                     	;# 
  1208  0619                     	;# 
  1209  061A                     	;# 
  1210  061A                     	;# 
  1211  061B                     	;# 
  1212  061C                     	;# 
  1213  0691                     	;# 
  1214  0692                     	;# 
  1215  0693                     	;# 
  1216  0694                     	;# 
  1217  0695                     	;# 
  1218  0696                     	;# 
  1219  0697                     	;# 
  1220  0699                     	;# 
  1221  069A                     	;# 
  1222  0711                     	;# 
  1223  0712                     	;# 
  1224  0713                     	;# 
  1225  0714                     	;# 
  1226  0715                     	;# 
  1227  0718                     	;# 
  1228  0718                     	;# 
  1229  0719                     	;# 
  1230  071A                     	;# 
  1231  071A                     	;# 
  1232  071B                     	;# 
  1233  071C                     	;# 
  1234  071D                     	;# 
  1235  0791                     	;# 
  1236  0791                     	;# 
  1237  0792                     	;# 
  1238  0793                     	;# 
  1239  0793                     	;# 
  1240  0794                     	;# 
  1241  0795                     	;# 
  1242  0795                     	;# 
  1243  0796                     	;# 
  1244  0797                     	;# 
  1245  0797                     	;# 
  1246  0798                     	;# 
  1247  0799                     	;# 
  1248  079A                     	;# 
  1249  080C                     	;# 
  1250  080C                     	;# 
  1251  080D                     	;# 
  1252  080E                     	;# 
  1253  080E                     	;# 
  1254  080F                     	;# 
  1255  0810                     	;# 
  1256  0810                     	;# 
  1257  0811                     	;# 
  1258  0812                     	;# 
  1259  0812                     	;# 
  1260  0813                     	;# 
  1261  0814                     	;# 
  1262  0815                     	;# 
  1263  0816                     	;# 
  1264  0817                     	;# 
  1265  0818                     	;# 
  1266  0819                     	;# 
  1267  081A                     	;# 
  1268  081A                     	;# 
  1269  081B                     	;# 
  1270  081C                     	;# 
  1271  081C                     	;# 
  1272  081D                     	;# 
  1273  088C                     	;# 
  1274  088D                     	;# 
  1275  088E                     	;# 
  1276  088F                     	;# 
  1277  088F                     	;# 
  1278  0890                     	;# 
  1279  0891                     	;# 
  1280  0892                     	;# 
  1281  0893                     	;# 
  1282  0893                     	;# 
  1283  0894                     	;# 
  1284  0895                     	;# 
  1285  0896                     	;# 
  1286  0897                     	;# 
  1287  0897                     	;# 
  1288  0898                     	;# 
  1289  0899                     	;# 
  1290  0D8C                     	;# 
  1291  0D8C                     	;# 
  1292  0D8D                     	;# 
  1293  0D8E                     	;# 
  1294  0D8F                     	;# 
  1295  0D8F                     	;# 
  1296  0D90                     	;# 
  1297  0D91                     	;# 
  1298  0D92                     	;# 
  1299  0D92                     	;# 
  1300  0D93                     	;# 
  1301  0D94                     	;# 
  1302  0D95                     	;# 
  1303  0D95                     	;# 
  1304  0D96                     	;# 
  1305  0D97                     	;# 
  1306  0D98                     	;# 
  1307  0D99                     	;# 
  1308  0D9A                     	;# 
  1309  0D9B                     	;# 
  1310  0D9C                     	;# 
  1311  0D9D                     	;# 
  1312  0D9E                     	;# 
  1313  0D9E                     	;# 
  1314  0D9F                     	;# 
  1315  0DA0                     	;# 
  1316  0DA1                     	;# 
  1317  0DA1                     	;# 
  1318  0DA2                     	;# 
  1319  0DA3                     	;# 
  1320  0DA4                     	;# 
  1321  0DA4                     	;# 
  1322  0DA5                     	;# 
  1323  0DA6                     	;# 
  1324  0DA7                     	;# 
  1325  0DA7                     	;# 
  1326  0DA8                     	;# 
  1327  0DA9                     	;# 
  1328  0DAA                     	;# 
  1329  0DAB                     	;# 
  1330  0DAC                     	;# 
  1331  0DAD                     	;# 
  1332  0DAE                     	;# 
  1333  0DAF                     	;# 
  1334  0E0F                     	;# 
  1335  0E10                     	;# 
  1336  0E11                     	;# 
  1337  0E12                     	;# 
  1338  0E13                     	;# 
  1339  0E14                     	;# 
  1340  0E15                     	;# 
  1341  0E16                     	;# 
  1342  0E17                     	;# 
  1343  0E18                     	;# 
  1344  0E19                     	;# 
  1345  0E1A                     	;# 
  1346  0E1B                     	;# 
  1347  0E1C                     	;# 
  1348  0E1D                     	;# 
  1349  0E1E                     	;# 
  1350  0E1F                     	;# 
  1351  0E20                     	;# 
  1352  0E21                     	;# 
  1353  0E22                     	;# 
  1354  0E23                     	;# 
  1355  0E24                     	;# 
  1356  0E25                     	;# 
  1357  0E26                     	;# 
  1358  0E27                     	;# 
  1359  0E28                     	;# 
  1360  0E29                     	;# 
  1361  0E2A                     	;# 
  1362  0E2B                     	;# 
  1363  0E2C                     	;# 
  1364  0E2D                     	;# 
  1365  0E2E                     	;# 
  1366  0E90                     	;# 
  1367  0E91                     	;# 
  1368  0E92                     	;# 
  1369  0E94                     	;# 
  1370  0E95                     	;# 
  1371  0E9C                     	;# 
  1372  0E9D                     	;# 
  1373  0E9E                     	;# 
  1374  0E9F                     	;# 
  1375  0EA0                     	;# 
  1376  0EA1                     	;# 
  1377  0EA2                     	;# 
  1378  0EA3                     	;# 
  1379  0EA4                     	;# 
  1380  0EA5                     	;# 
  1381  0EA6                     	;# 
  1382  0EA7                     	;# 
  1383  0F0F                     	;# 
  1384  0F10                     	;# 
  1385  0F11                     	;# 
  1386  0F12                     	;# 
  1387  0F13                     	;# 
  1388  0F14                     	;# 
  1389  0F15                     	;# 
  1390  0F16                     	;# 
  1391  0F17                     	;# 
  1392  0F18                     	;# 
  1393  0F19                     	;# 
  1394  0F1A                     	;# 
  1395  0F1B                     	;# 
  1396  0F1C                     	;# 
  1397  0F1D                     	;# 
  1398  0F1E                     	;# 
  1399  0F1F                     	;# 
  1400  0F20                     	;# 
  1401  0F21                     	;# 
  1402  0F22                     	;# 
  1403  0F23                     	;# 
  1404  0F24                     	;# 
  1405  0F25                     	;# 
  1406  0F26                     	;# 
  1407  0F27                     	;# 
  1408  0F28                     	;# 
  1409  0F29                     	;# 
  1410  0F2A                     	;# 
  1411  0F2B                     	;# 
  1412  0F2C                     	;# 
  1413  0F2D                     	;# 
  1414  0F2E                     	;# 
  1415  0F2F                     	;# 
  1416  0F30                     	;# 
  1417  0F31                     	;# 
  1418  0F32                     	;# 
  1419  0F33                     	;# 
  1420  0F34                     	;# 
  1421  0F35                     	;# 
  1422  0F36                     	;# 
  1423  0F37                     	;# 
  1424  0FE4                     	;# 
  1425  0FE5                     	;# 
  1426  0FE6                     	;# 
  1427  0FE7                     	;# 
  1428  0FE8                     	;# 
  1429  0FE9                     	;# 
  1430  0FEA                     	;# 
  1431  0FEB                     	;# 
  1432  0FED                     	;# 
  1433  0FEE                     	;# 
  1434  0FEF                     	;# 
  1435  0000                     	;# 
  1436  0001                     	;# 
  1437  0002                     	;# 
  1438  0003                     	;# 
  1439  0004                     	;# 
  1440  0005                     	;# 
  1441  0006                     	;# 
  1442  0007                     	;# 
  1443  0008                     	;# 
  1444  0009                     	;# 
  1445  000A                     	;# 
  1446  000B                     	;# 
  1447  000C                     	;# 
  1448  000D                     	;# 
  1449  000E                     	;# 
  1450  0010                     	;# 
  1451  0011                     	;# 
  1452  0012                     	;# 
  1453  0013                     	;# 
  1454  0014                     	;# 
  1455  0015                     	;# 
  1456  0016                     	;# 
  1457  0016                     	;# 
  1458  0017                     	;# 
  1459  0018                     	;# 
  1460  0019                     	;# 
  1461  001A                     	;# 
  1462  001A                     	;# 
  1463  001B                     	;# 
  1464  001B                     	;# 
  1465  001C                     	;# 
  1466  001D                     	;# 
  1467  001E                     	;# 
  1468  001F                     	;# 
  1469  008C                     	;# 
  1470  008D                     	;# 
  1471  008E                     	;# 
  1472  0090                     	;# 
  1473  0091                     	;# 
  1474  0092                     	;# 
  1475  0093                     	;# 
  1476  0094                     	;# 
  1477  0095                     	;# 
  1478  0096                     	;# 
  1479  0098                     	;# 
  1480  0099                     	;# 
  1481  009A                     	;# 
  1482  009B                     	;# 
  1483  009B                     	;# 
  1484  009C                     	;# 
  1485  009D                     	;# 
  1486  009E                     	;# 
  1487  009F                     	;# 
  1488  010C                     	;# 
  1489  010D                     	;# 
  1490  010E                     	;# 
  1491  0111                     	;# 
  1492  0112                     	;# 
  1493  0113                     	;# 
  1494  0114                     	;# 
  1495  0115                     	;# 
  1496  0116                     	;# 
  1497  0117                     	;# 
  1498  0118                     	;# 
  1499  0119                     	;# 
  1500  011C                     	;# 
  1501  018C                     	;# 
  1502  018D                     	;# 
  1503  018E                     	;# 
  1504  0191                     	;# 
  1505  0191                     	;# 
  1506  0192                     	;# 
  1507  0193                     	;# 
  1508  0193                     	;# 
  1509  0194                     	;# 
  1510  0195                     	;# 
  1511  0196                     	;# 
  1512  0197                     	;# 
  1513  0199                     	;# 
  1514  0199                     	;# 
  1515  0199                     	;# 
  1516  019A                     	;# 
  1517  019A                     	;# 
  1518  019A                     	;# 
  1519  019B                     	;# 
  1520  019B                     	;# 
  1521  019B                     	;# 
  1522  019B                     	;# 
  1523  019B                     	;# 
  1524  019C                     	;# 
  1525  019C                     	;# 
  1526  019C                     	;# 
  1527  019D                     	;# 
  1528  019D                     	;# 
  1529  019D                     	;# 
  1530  019E                     	;# 
  1531  019E                     	;# 
  1532  019E                     	;# 
  1533  019F                     	;# 
  1534  019F                     	;# 
  1535  019F                     	;# 
  1536  019F                     	;# 
  1537  019F                     	;# 
  1538  020C                     	;# 
  1539  020D                     	;# 
  1540  020E                     	;# 
  1541  0211                     	;# 
  1542  0211                     	;# 
  1543  0212                     	;# 
  1544  0212                     	;# 
  1545  0213                     	;# 
  1546  0213                     	;# 
  1547  0214                     	;# 
  1548  0214                     	;# 
  1549  0215                     	;# 
  1550  0215                     	;# 
  1551  0215                     	;# 
  1552  0215                     	;# 
  1553  0216                     	;# 
  1554  0216                     	;# 
  1555  0217                     	;# 
  1556  0217                     	;# 
  1557  028C                     	;# 
  1558  028D                     	;# 
  1559  028E                     	;# 
  1560  0291                     	;# 
  1561  0291                     	;# 
  1562  0292                     	;# 
  1563  0293                     	;# 
  1564  0294                     	;# 
  1565  0298                     	;# 
  1566  0298                     	;# 
  1567  0299                     	;# 
  1568  029A                     	;# 
  1569  029B                     	;# 
  1570  029E                     	;# 
  1571  030C                     	;# 
  1572  030D                     	;# 
  1573  030E                     	;# 
  1574  038C                     	;# 
  1575  038D                     	;# 
  1576  038E                     	;# 
  1577  0391                     	;# 
  1578  0392                     	;# 
  1579  0393                     	;# 
  1580  0394                     	;# 
  1581  0395                     	;# 
  1582  0396                     	;# 
  1583  0397                     	;# 
  1584  0398                     	;# 
  1585  0399                     	;# 
  1586  040E                     	;# 
  1587  0413                     	;# 
  1588  0413                     	;# 
  1589  0414                     	;# 
  1590  0414                     	;# 
  1591  0415                     	;# 
  1592  0416                     	;# 
  1593  0417                     	;# 
  1594  0418                     	;# 
  1595  041A                     	;# 
  1596  041A                     	;# 
  1597  041B                     	;# 
  1598  041B                     	;# 
  1599  041C                     	;# 
  1600  041D                     	;# 
  1601  041E                     	;# 
  1602  041F                     	;# 
  1603  0493                     	;# 
  1604  0494                     	;# 
  1605  0495                     	;# 
  1606  0496                     	;# 
  1607  049A                     	;# 
  1608  049B                     	;# 
  1609  049C                     	;# 
  1610  049D                     	;# 
  1611  058C                     	;# 
  1612  058C                     	;# 
  1613  058D                     	;# 
  1614  058E                     	;# 
  1615  058E                     	;# 
  1616  058F                     	;# 
  1617  0590                     	;# 
  1618  0590                     	;# 
  1619  0591                     	;# 
  1620  0592                     	;# 
  1621  0592                     	;# 
  1622  0593                     	;# 
  1623  0594                     	;# 
  1624  0594                     	;# 
  1625  0595                     	;# 
  1626  0596                     	;# 
  1627  0596                     	;# 
  1628  0597                     	;# 
  1629  0598                     	;# 
  1630  0599                     	;# 
  1631  059A                     	;# 
  1632  059B                     	;# 
  1633  059B                     	;# 
  1634  059C                     	;# 
  1635  059D                     	;# 
  1636  060C                     	;# 
  1637  060C                     	;# 
  1638  060D                     	;# 
  1639  060E                     	;# 
  1640  060F                     	;# 
  1641  060F                     	;# 
  1642  0610                     	;# 
  1643  0611                     	;# 
  1644  0612                     	;# 
  1645  0613                     	;# 
  1646  0614                     	;# 
  1647  0617                     	;# 
  1648  0617                     	;# 
  1649  0618                     	;# 
  1650  0619                     	;# 
  1651  061A                     	;# 
  1652  061A                     	;# 
  1653  061B                     	;# 
  1654  061C                     	;# 
  1655  0691                     	;# 
  1656  0692                     	;# 
  1657  0693                     	;# 
  1658  0694                     	;# 
  1659  0695                     	;# 
  1660  0696                     	;# 
  1661  0697                     	;# 
  1662  0699                     	;# 
  1663  069A                     	;# 
  1664  0711                     	;# 
  1665  0712                     	;# 
  1666  0713                     	;# 
  1667  0714                     	;# 
  1668  0715                     	;# 
  1669  0718                     	;# 
  1670  0718                     	;# 
  1671  0719                     	;# 
  1672  071A                     	;# 
  1673  071A                     	;# 
  1674  071B                     	;# 
  1675  071C                     	;# 
  1676  071D                     	;# 
  1677  0791                     	;# 
  1678  0791                     	;# 
  1679  0792                     	;# 
  1680  0793                     	;# 
  1681  0793                     	;# 
  1682  0794                     	;# 
  1683  0795                     	;# 
  1684  0795                     	;# 
  1685  0796                     	;# 
  1686  0797                     	;# 
  1687  0797                     	;# 
  1688  0798                     	;# 
  1689  0799                     	;# 
  1690  079A                     	;# 
  1691  080C                     	;# 
  1692  080C                     	;# 
  1693  080D                     	;# 
  1694  080E                     	;# 
  1695  080E                     	;# 
  1696  080F                     	;# 
  1697  0810                     	;# 
  1698  0810                     	;# 
  1699  0811                     	;# 
  1700  0812                     	;# 
  1701  0812                     	;# 
  1702  0813                     	;# 
  1703  0814                     	;# 
  1704  0815                     	;# 
  1705  0816                     	;# 
  1706  0817                     	;# 
  1707  0818                     	;# 
  1708  0819                     	;# 
  1709  081A                     	;# 
  1710  081A                     	;# 
  1711  081B                     	;# 
  1712  081C                     	;# 
  1713  081C                     	;# 
  1714  081D                     	;# 
  1715  088C                     	;# 
  1716  088D                     	;# 
  1717  088E                     	;# 
  1718  088F                     	;# 
  1719  088F                     	;# 
  1720  0890                     	;# 
  1721  0891                     	;# 
  1722  0892                     	;# 
  1723  0893                     	;# 
  1724  0893                     	;# 
  1725  0894                     	;# 
  1726  0895                     	;# 
  1727  0896                     	;# 
  1728  0897                     	;# 
  1729  0897                     	;# 
  1730  0898                     	;# 
  1731  0899                     	;# 
  1732  0D8C                     	;# 
  1733  0D8C                     	;# 
  1734  0D8D                     	;# 
  1735  0D8E                     	;# 
  1736  0D8F                     	;# 
  1737  0D8F                     	;# 
  1738  0D90                     	;# 
  1739  0D91                     	;# 
  1740  0D92                     	;# 
  1741  0D92                     	;# 
  1742  0D93                     	;# 
  1743  0D94                     	;# 
  1744  0D95                     	;# 
  1745  0D95                     	;# 
  1746  0D96                     	;# 
  1747  0D97                     	;# 
  1748  0D98                     	;# 
  1749  0D99                     	;# 
  1750  0D9A                     	;# 
  1751  0D9B                     	;# 
  1752  0D9C                     	;# 
  1753  0D9D                     	;# 
  1754  0D9E                     	;# 
  1755  0D9E                     	;# 
  1756  0D9F                     	;# 
  1757  0DA0                     	;# 
  1758  0DA1                     	;# 
  1759  0DA1                     	;# 
  1760  0DA2                     	;# 
  1761  0DA3                     	;# 
  1762  0DA4                     	;# 
  1763  0DA4                     	;# 
  1764  0DA5                     	;# 
  1765  0DA6                     	;# 
  1766  0DA7                     	;# 
  1767  0DA7                     	;# 
  1768  0DA8                     	;# 
  1769  0DA9                     	;# 
  1770  0DAA                     	;# 
  1771  0DAB                     	;# 
  1772  0DAC                     	;# 
  1773  0DAD                     	;# 
  1774  0DAE                     	;# 
  1775  0DAF                     	;# 
  1776  0E0F                     	;# 
  1777  0E10                     	;# 
  1778  0E11                     	;# 
  1779  0E12                     	;# 
  1780  0E13                     	;# 
  1781  0E14                     	;# 
  1782  0E15                     	;# 
  1783  0E16                     	;# 
  1784  0E17                     	;# 
  1785  0E18                     	;# 
  1786  0E19                     	;# 
  1787  0E1A                     	;# 
  1788  0E1B                     	;# 
  1789  0E1C                     	;# 
  1790  0E1D                     	;# 
  1791  0E1E                     	;# 
  1792  0E1F                     	;# 
  1793  0E20                     	;# 
  1794  0E21                     	;# 
  1795  0E22                     	;# 
  1796  0E23                     	;# 
  1797  0E24                     	;# 
  1798  0E25                     	;# 
  1799  0E26                     	;# 
  1800  0E27                     	;# 
  1801  0E28                     	;# 
  1802  0E29                     	;# 
  1803  0E2A                     	;# 
  1804  0E2B                     	;# 
  1805  0E2C                     	;# 
  1806  0E2D                     	;# 
  1807  0E2E                     	;# 
  1808  0E90                     	;# 
  1809  0E91                     	;# 
  1810  0E92                     	;# 
  1811  0E94                     	;# 
  1812  0E95                     	;# 
  1813  0E9C                     	;# 
  1814  0E9D                     	;# 
  1815  0E9E                     	;# 
  1816  0E9F                     	;# 
  1817  0EA0                     	;# 
  1818  0EA1                     	;# 
  1819  0EA2                     	;# 
  1820  0EA3                     	;# 
  1821  0EA4                     	;# 
  1822  0EA5                     	;# 
  1823  0EA6                     	;# 
  1824  0EA7                     	;# 
  1825  0F0F                     	;# 
  1826  0F10                     	;# 
  1827  0F11                     	;# 
  1828  0F12                     	;# 
  1829  0F13                     	;# 
  1830  0F14                     	;# 
  1831  0F15                     	;# 
  1832  0F16                     	;# 
  1833  0F17                     	;# 
  1834  0F18                     	;# 
  1835  0F19                     	;# 
  1836  0F1A                     	;# 
  1837  0F1B                     	;# 
  1838  0F1C                     	;# 
  1839  0F1D                     	;# 
  1840  0F1E                     	;# 
  1841  0F1F                     	;# 
  1842  0F20                     	;# 
  1843  0F21                     	;# 
  1844  0F22                     	;# 
  1845  0F23                     	;# 
  1846  0F24                     	;# 
  1847  0F25                     	;# 
  1848  0F26                     	;# 
  1849  0F27                     	;# 
  1850  0F28                     	;# 
  1851  0F29                     	;# 
  1852  0F2A                     	;# 
  1853  0F2B                     	;# 
  1854  0F2C                     	;# 
  1855  0F2D                     	;# 
  1856  0F2E                     	;# 
  1857  0F2F                     	;# 
  1858  0F30                     	;# 
  1859  0F31                     	;# 
  1860  0F32                     	;# 
  1861  0F33                     	;# 
  1862  0F34                     	;# 
  1863  0F35                     	;# 
  1864  0F36                     	;# 
  1865  0F37                     	;# 
  1866  0FE4                     	;# 
  1867  0FE5                     	;# 
  1868  0FE6                     	;# 
  1869  0FE7                     	;# 
  1870  0FE8                     	;# 
  1871  0FE9                     	;# 
  1872  0FEA                     	;# 
  1873  0FEB                     	;# 
  1874  0FED                     	;# 
  1875  0FEE                     	;# 
  1876  0FEF                     	;# 
  1877  0000                     	;# 
  1878  0001                     	;# 
  1879  0002                     	;# 
  1880  0003                     	;# 
  1881  0004                     	;# 
  1882  0005                     	;# 
  1883  0006                     	;# 
  1884  0007                     	;# 
  1885  0008                     	;# 
  1886  0009                     	;# 
  1887  000A                     	;# 
  1888  000B                     	;# 
  1889  000C                     	;# 
  1890  000D                     	;# 
  1891  000E                     	;# 
  1892  0010                     	;# 
  1893  0011                     	;# 
  1894  0012                     	;# 
  1895  0013                     	;# 
  1896  0014                     	;# 
  1897  0015                     	;# 
  1898  0016                     	;# 
  1899  0016                     	;# 
  1900  0017                     	;# 
  1901  0018                     	;# 
  1902  0019                     	;# 
  1903  001A                     	;# 
  1904  001A                     	;# 
  1905  001B                     	;# 
  1906  001B                     	;# 
  1907  001C                     	;# 
  1908  001D                     	;# 
  1909  001E                     	;# 
  1910  001F                     	;# 
  1911  008C                     	;# 
  1912  008D                     	;# 
  1913  008E                     	;# 
  1914  0090                     	;# 
  1915  0091                     	;# 
  1916  0092                     	;# 
  1917  0093                     	;# 
  1918  0094                     	;# 
  1919  0095                     	;# 
  1920  0096                     	;# 
  1921  0098                     	;# 
  1922  0099                     	;# 
  1923  009A                     	;# 
  1924  009B                     	;# 
  1925  009B                     	;# 
  1926  009C                     	;# 
  1927  009D                     	;# 
  1928  009E                     	;# 
  1929  009F                     	;# 
  1930  010C                     	;# 
  1931  010D                     	;# 
  1932  010E                     	;# 
  1933  0111                     	;# 
  1934  0112                     	;# 
  1935  0113                     	;# 
  1936  0114                     	;# 
  1937  0115                     	;# 
  1938  0116                     	;# 
  1939  0117                     	;# 
  1940  0118                     	;# 
  1941  0119                     	;# 
  1942  011C                     	;# 
  1943  018C                     	;# 
  1944  018D                     	;# 
  1945  018E                     	;# 
  1946  0191                     	;# 
  1947  0191                     	;# 
  1948  0192                     	;# 
  1949  0193                     	;# 
  1950  0193                     	;# 
  1951  0194                     	;# 
  1952  0195                     	;# 
  1953  0196                     	;# 
  1954  0197                     	;# 
  1955  0199                     	;# 
  1956  0199                     	;# 
  1957  0199                     	;# 
  1958  019A                     	;# 
  1959  019A                     	;# 
  1960  019A                     	;# 
  1961  019B                     	;# 
  1962  019B                     	;# 
  1963  019B                     	;# 
  1964  019B                     	;# 
  1965  019B                     	;# 
  1966  019C                     	;# 
  1967  019C                     	;# 
  1968  019C                     	;# 
  1969  019D                     	;# 
  1970  019D                     	;# 
  1971  019D                     	;# 
  1972  019E                     	;# 
  1973  019E                     	;# 
  1974  019E                     	;# 
  1975  019F                     	;# 
  1976  019F                     	;# 
  1977  019F                     	;# 
  1978  019F                     	;# 
  1979  019F                     	;# 
  1980  020C                     	;# 
  1981  020D                     	;# 
  1982  020E                     	;# 
  1983  0211                     	;# 
  1984  0211                     	;# 
  1985  0212                     	;# 
  1986  0212                     	;# 
  1987  0213                     	;# 
  1988  0213                     	;# 
  1989  0214                     	;# 
  1990  0214                     	;# 
  1991  0215                     	;# 
  1992  0215                     	;# 
  1993  0215                     	;# 
  1994  0215                     	;# 
  1995  0216                     	;# 
  1996  0216                     	;# 
  1997  0217                     	;# 
  1998  0217                     	;# 
  1999  028C                     	;# 
  2000  028D                     	;# 
  2001  028E                     	;# 
  2002  0291                     	;# 
  2003  0291                     	;# 
  2004  0292                     	;# 
  2005  0293                     	;# 
  2006  0294                     	;# 
  2007  0298                     	;# 
  2008  0298                     	;# 
  2009  0299                     	;# 
  2010  029A                     	;# 
  2011  029B                     	;# 
  2012  029E                     	;# 
  2013  030C                     	;# 
  2014  030D                     	;# 
  2015  030E                     	;# 
  2016  038C                     	;# 
  2017  038D                     	;# 
  2018  038E                     	;# 
  2019  0391                     	;# 
  2020  0392                     	;# 
  2021  0393                     	;# 
  2022  0394                     	;# 
  2023  0395                     	;# 
  2024  0396                     	;# 
  2025  0397                     	;# 
  2026  0398                     	;# 
  2027  0399                     	;# 
  2028  040E                     	;# 
  2029  0413                     	;# 
  2030  0413                     	;# 
  2031  0414                     	;# 
  2032  0414                     	;# 
  2033  0415                     	;# 
  2034  0416                     	;# 
  2035  0417                     	;# 
  2036  0418                     	;# 
  2037  041A                     	;# 
  2038  041A                     	;# 
  2039  041B                     	;# 
  2040  041B                     	;# 
  2041  041C                     	;# 
  2042  041D                     	;# 
  2043  041E                     	;# 
  2044  041F                     	;# 
  2045  0493                     	;# 
  2046  0494                     	;# 
  2047  0495                     	;# 
  2048  0496                     	;# 
  2049  049A                     	;# 
  2050  049B                     	;# 
  2051  049C                     	;# 
  2052  049D                     	;# 
  2053  058C                     	;# 
  2054  058C                     	;# 
  2055  058D                     	;# 
  2056  058E                     	;# 
  2057  058E                     	;# 
  2058  058F                     	;# 
  2059  0590                     	;# 
  2060  0590                     	;# 
  2061  0591                     	;# 
  2062  0592                     	;# 
  2063  0592                     	;# 
  2064  0593                     	;# 
  2065  0594                     	;# 
  2066  0594                     	;# 
  2067  0595                     	;# 
  2068  0596                     	;# 
  2069  0596                     	;# 
  2070  0597                     	;# 
  2071  0598                     	;# 
  2072  0599                     	;# 
  2073  059A                     	;# 
  2074  059B                     	;# 
  2075  059B                     	;# 
  2076  059C                     	;# 
  2077  059D                     	;# 
  2078  060C                     	;# 
  2079  060C                     	;# 
  2080  060D                     	;# 
  2081  060E                     	;# 
  2082  060F                     	;# 
  2083  060F                     	;# 
  2084  0610                     	;# 
  2085  0611                     	;# 
  2086  0612                     	;# 
  2087  0613                     	;# 
  2088  0614                     	;# 
  2089  0617                     	;# 
  2090  0617                     	;# 
  2091  0618                     	;# 
  2092  0619                     	;# 
  2093  061A                     	;# 
  2094  061A                     	;# 
  2095  061B                     	;# 
  2096  061C                     	;# 
  2097  0691                     	;# 
  2098  0692                     	;# 
  2099  0693                     	;# 
  2100  0694                     	;# 
  2101  0695                     	;# 
  2102  0696                     	;# 
  2103  0697                     	;# 
  2104  0699                     	;# 
  2105  069A                     	;# 
  2106  0711                     	;# 
  2107  0712                     	;# 
  2108  0713                     	;# 
  2109  0714                     	;# 
  2110  0715                     	;# 
  2111  0718                     	;# 
  2112  0718                     	;# 
  2113  0719                     	;# 
  2114  071A                     	;# 
  2115  071A                     	;# 
  2116  071B                     	;# 
  2117  071C                     	;# 
  2118  071D                     	;# 
  2119  0791                     	;# 
  2120  0791                     	;# 
  2121  0792                     	;# 
  2122  0793                     	;# 
  2123  0793                     	;# 
  2124  0794                     	;# 
  2125  0795                     	;# 
  2126  0795                     	;# 
  2127  0796                     	;# 
  2128  0797                     	;# 
  2129  0797                     	;# 
  2130  0798                     	;# 
  2131  0799                     	;# 
  2132  079A                     	;# 
  2133  080C                     	;# 
  2134  080C                     	;# 
  2135  080D                     	;# 
  2136  080E                     	;# 
  2137  080E                     	;# 
  2138  080F                     	;# 
  2139  0810                     	;# 
  2140  0810                     	;# 
  2141  0811                     	;# 
  2142  0812                     	;# 
  2143  0812                     	;# 
  2144  0813                     	;# 
  2145  0814                     	;# 
  2146  0815                     	;# 
  2147  0816                     	;# 
  2148  0817                     	;# 
  2149  0818                     	;# 
  2150  0819                     	;# 
  2151  081A                     	;# 
  2152  081A                     	;# 
  2153  081B                     	;# 
  2154  081C                     	;# 
  2155  081C                     	;# 
  2156  081D                     	;# 
  2157  088C                     	;# 
  2158  088D                     	;# 
  2159  088E                     	;# 
  2160  088F                     	;# 
  2161  088F                     	;# 
  2162  0890                     	;# 
  2163  0891                     	;# 
  2164  0892                     	;# 
  2165  0893                     	;# 
  2166  0893                     	;# 
  2167  0894                     	;# 
  2168  0895                     	;# 
  2169  0896                     	;# 
  2170  0897                     	;# 
  2171  0897                     	;# 
  2172  0898                     	;# 
  2173  0899                     	;# 
  2174  0D8C                     	;# 
  2175  0D8C                     	;# 
  2176  0D8D                     	;# 
  2177  0D8E                     	;# 
  2178  0D8F                     	;# 
  2179  0D8F                     	;# 
  2180  0D90                     	;# 
  2181  0D91                     	;# 
  2182  0D92                     	;# 
  2183  0D92                     	;# 
  2184  0D93                     	;# 
  2185  0D94                     	;# 
  2186  0D95                     	;# 
  2187  0D95                     	;# 
  2188  0D96                     	;# 
  2189  0D97                     	;# 
  2190  0D98                     	;# 
  2191  0D99                     	;# 
  2192  0D9A                     	;# 
  2193  0D9B                     	;# 
  2194  0D9C                     	;# 
  2195  0D9D                     	;# 
  2196  0D9E                     	;# 
  2197  0D9E                     	;# 
  2198  0D9F                     	;# 
  2199  0DA0                     	;# 
  2200  0DA1                     	;# 
  2201  0DA1                     	;# 
  2202  0DA2                     	;# 
  2203  0DA3                     	;# 
  2204  0DA4                     	;# 
  2205  0DA4                     	;# 
  2206  0DA5                     	;# 
  2207  0DA6                     	;# 
  2208  0DA7                     	;# 
  2209  0DA7                     	;# 
  2210  0DA8                     	;# 
  2211  0DA9                     	;# 
  2212  0DAA                     	;# 
  2213  0DAB                     	;# 
  2214  0DAC                     	;# 
  2215  0DAD                     	;# 
  2216  0DAE                     	;# 
  2217  0DAF                     	;# 
  2218  0E0F                     	;# 
  2219  0E10                     	;# 
  2220  0E11                     	;# 
  2221  0E12                     	;# 
  2222  0E13                     	;# 
  2223  0E14                     	;# 
  2224  0E15                     	;# 
  2225  0E16                     	;# 
  2226  0E17                     	;# 
  2227  0E18                     	;# 
  2228  0E19                     	;# 
  2229  0E1A                     	;# 
  2230  0E1B                     	;# 
  2231  0E1C                     	;# 
  2232  0E1D                     	;# 
  2233  0E1E                     	;# 
  2234  0E1F                     	;# 
  2235  0E20                     	;# 
  2236  0E21                     	;# 
  2237  0E22                     	;# 
  2238  0E23                     	;# 
  2239  0E24                     	;# 
  2240  0E25                     	;# 
  2241  0E26                     	;# 
  2242  0E27                     	;# 
  2243  0E28                     	;# 
  2244  0E29                     	;# 
  2245  0E2A                     	;# 
  2246  0E2B                     	;# 
  2247  0E2C                     	;# 
  2248  0E2D                     	;# 
  2249  0E2E                     	;# 
  2250  0E90                     	;# 
  2251  0E91                     	;# 
  2252  0E92                     	;# 
  2253  0E94                     	;# 
  2254  0E95                     	;# 
  2255  0E9C                     	;# 
  2256  0E9D                     	;# 
  2257  0E9E                     	;# 
  2258  0E9F                     	;# 
  2259  0EA0                     	;# 
  2260  0EA1                     	;# 
  2261  0EA2                     	;# 
  2262  0EA3                     	;# 
  2263  0EA4                     	;# 
  2264  0EA5                     	;# 
  2265  0EA6                     	;# 
  2266  0EA7                     	;# 
  2267  0F0F                     	;# 
  2268  0F10                     	;# 
  2269  0F11                     	;# 
  2270  0F12                     	;# 
  2271  0F13                     	;# 
  2272  0F14                     	;# 
  2273  0F15                     	;# 
  2274  0F16                     	;# 
  2275  0F17                     	;# 
  2276  0F18                     	;# 
  2277  0F19                     	;# 
  2278  0F1A                     	;# 
  2279  0F1B                     	;# 
  2280  0F1C                     	;# 
  2281  0F1D                     	;# 
  2282  0F1E                     	;# 
  2283  0F1F                     	;# 
  2284  0F20                     	;# 
  2285  0F21                     	;# 
  2286  0F22                     	;# 
  2287  0F23                     	;# 
  2288  0F24                     	;# 
  2289  0F25                     	;# 
  2290  0F26                     	;# 
  2291  0F27                     	;# 
  2292  0F28                     	;# 
  2293  0F29                     	;# 
  2294  0F2A                     	;# 
  2295  0F2B                     	;# 
  2296  0F2C                     	;# 
  2297  0F2D                     	;# 
  2298  0F2E                     	;# 
  2299  0F2F                     	;# 
  2300  0F30                     	;# 
  2301  0F31                     	;# 
  2302  0F32                     	;# 
  2303  0F33                     	;# 
  2304  0F34                     	;# 
  2305  0F35                     	;# 
  2306  0F36                     	;# 
  2307  0F37                     	;# 
  2308  0FE4                     	;# 
  2309  0FE5                     	;# 
  2310  0FE6                     	;# 
  2311  0FE7                     	;# 
  2312  0FE8                     	;# 
  2313  0FE9                     	;# 
  2314  0FEA                     	;# 
  2315  0FEB                     	;# 
  2316  0FED                     	;# 
  2317  0FEE                     	;# 
  2318  0FEF                     	;# 
  2319  0000                     	;# 
  2320  0001                     	;# 
  2321  0002                     	;# 
  2322  0003                     	;# 
  2323  0004                     	;# 
  2324  0005                     	;# 
  2325  0006                     	;# 
  2326  0007                     	;# 
  2327  0008                     	;# 
  2328  0009                     	;# 
  2329  000A                     	;# 
  2330  000B                     	;# 
  2331  000C                     	;# 
  2332  000D                     	;# 
  2333  000E                     	;# 
  2334  0010                     	;# 
  2335  0011                     	;# 
  2336  0012                     	;# 
  2337  0013                     	;# 
  2338  0014                     	;# 
  2339  0015                     	;# 
  2340  0016                     	;# 
  2341  0016                     	;# 
  2342  0017                     	;# 
  2343  0018                     	;# 
  2344  0019                     	;# 
  2345  001A                     	;# 
  2346  001A                     	;# 
  2347  001B                     	;# 
  2348  001B                     	;# 
  2349  001C                     	;# 
  2350  001D                     	;# 
  2351  001E                     	;# 
  2352  001F                     	;# 
  2353  008C                     	;# 
  2354  008D                     	;# 
  2355  008E                     	;# 
  2356  0090                     	;# 
  2357  0091                     	;# 
  2358  0092                     	;# 
  2359  0093                     	;# 
  2360  0094                     	;# 
  2361  0095                     	;# 
  2362  0096                     	;# 
  2363  0098                     	;# 
  2364  0099                     	;# 
  2365  009A                     	;# 
  2366  009B                     	;# 
  2367  009B                     	;# 
  2368  009C                     	;# 
  2369  009D                     	;# 
  2370  009E                     	;# 
  2371  009F                     	;# 
  2372  010C                     	;# 
  2373  010D                     	;# 
  2374  010E                     	;# 
  2375  0111                     	;# 
  2376  0112                     	;# 
  2377  0113                     	;# 
  2378  0114                     	;# 
  2379  0115                     	;# 
  2380  0116                     	;# 
  2381  0117                     	;# 
  2382  0118                     	;# 
  2383  0119                     	;# 
  2384  011C                     	;# 
  2385  018C                     	;# 
  2386  018D                     	;# 
  2387  018E                     	;# 
  2388  0191                     	;# 
  2389  0191                     	;# 
  2390  0192                     	;# 
  2391  0193                     	;# 
  2392  0193                     	;# 
  2393  0194                     	;# 
  2394  0195                     	;# 
  2395  0196                     	;# 
  2396  0197                     	;# 
  2397  0199                     	;# 
  2398  0199                     	;# 
  2399  0199                     	;# 
  2400  019A                     	;# 
  2401  019A                     	;# 
  2402  019A                     	;# 
  2403  019B                     	;# 
  2404  019B                     	;# 
  2405  019B                     	;# 
  2406  019B                     	;# 
  2407  019B                     	;# 
  2408  019C                     	;# 
  2409  019C                     	;# 
  2410  019C                     	;# 
  2411  019D                     	;# 
  2412  019D                     	;# 
  2413  019D                     	;# 
  2414  019E                     	;# 
  2415  019E                     	;# 
  2416  019E                     	;# 
  2417  019F                     	;# 
  2418  019F                     	;# 
  2419  019F                     	;# 
  2420  019F                     	;# 
  2421  019F                     	;# 
  2422  020C                     	;# 
  2423  020D                     	;# 
  2424  020E                     	;# 
  2425  0211                     	;# 
  2426  0211                     	;# 
  2427  0212                     	;# 
  2428  0212                     	;# 
  2429  0213                     	;# 
  2430  0213                     	;# 
  2431  0214                     	;# 
  2432  0214                     	;# 
  2433  0215                     	;# 
  2434  0215                     	;# 
  2435  0215                     	;# 
  2436  0215                     	;# 
  2437  0216                     	;# 
  2438  0216                     	;# 
  2439  0217                     	;# 
  2440  0217                     	;# 
  2441  028C                     	;# 
  2442  028D                     	;# 
  2443  028E                     	;# 
  2444  0291                     	;# 
  2445  0291                     	;# 
  2446  0292                     	;# 
  2447  0293                     	;# 
  2448  0294                     	;# 
  2449  0298                     	;# 
  2450  0298                     	;# 
  2451  0299                     	;# 
  2452  029A                     	;# 
  2453  029B                     	;# 
  2454  029E                     	;# 
  2455  030C                     	;# 
  2456  030D                     	;# 
  2457  030E                     	;# 
  2458  038C                     	;# 
  2459  038D                     	;# 
  2460  038E                     	;# 
  2461  0391                     	;# 
  2462  0392                     	;# 
  2463  0393                     	;# 
  2464  0394                     	;# 
  2465  0395                     	;# 
  2466  0396                     	;# 
  2467  0397                     	;# 
  2468  0398                     	;# 
  2469  0399                     	;# 
  2470  040E                     	;# 
  2471  0413                     	;# 
  2472  0413                     	;# 
  2473  0414                     	;# 
  2474  0414                     	;# 
  2475  0415                     	;# 
  2476  0416                     	;# 
  2477  0417                     	;# 
  2478  0418                     	;# 
  2479  041A                     	;# 
  2480  041A                     	;# 
  2481  041B                     	;# 
  2482  041B                     	;# 
  2483  041C                     	;# 
  2484  041D                     	;# 
  2485  041E                     	;# 
  2486  041F                     	;# 
  2487  0493                     	;# 
  2488  0494                     	;# 
  2489  0495                     	;# 
  2490  0496                     	;# 
  2491  049A                     	;# 
  2492  049B                     	;# 
  2493  049C                     	;# 
  2494  049D                     	;# 
  2495  058C                     	;# 
  2496  058C                     	;# 
  2497  058D                     	;# 
  2498  058E                     	;# 
  2499  058E                     	;# 
  2500  058F                     	;# 
  2501  0590                     	;# 
  2502  0590                     	;# 
  2503  0591                     	;# 
  2504  0592                     	;# 
  2505  0592                     	;# 
  2506  0593                     	;# 
  2507  0594                     	;# 
  2508  0594                     	;# 
  2509  0595                     	;# 
  2510  0596                     	;# 
  2511  0596                     	;# 
  2512  0597                     	;# 
  2513  0598                     	;# 
  2514  0599                     	;# 
  2515  059A                     	;# 
  2516  059B                     	;# 
  2517  059B                     	;# 
  2518  059C                     	;# 
  2519  059D                     	;# 
  2520  060C                     	;# 
  2521  060C                     	;# 
  2522  060D                     	;# 
  2523  060E                     	;# 
  2524  060F                     	;# 
  2525  060F                     	;# 
  2526  0610                     	;# 
  2527  0611                     	;# 
  2528  0612                     	;# 
  2529  0613                     	;# 
  2530  0614                     	;# 
  2531  0617                     	;# 
  2532  0617                     	;# 
  2533  0618                     	;# 
  2534  0619                     	;# 
  2535  061A                     	;# 
  2536  061A                     	;# 
  2537  061B                     	;# 
  2538  061C                     	;# 
  2539  0691                     	;# 
  2540  0692                     	;# 
  2541  0693                     	;# 
  2542  0694                     	;# 
  2543  0695                     	;# 
  2544  0696                     	;# 
  2545  0697                     	;# 
  2546  0699                     	;# 
  2547  069A                     	;# 
  2548  0711                     	;# 
  2549  0712                     	;# 
  2550  0713                     	;# 
  2551  0714                     	;# 
  2552  0715                     	;# 
  2553  0718                     	;# 
  2554  0718                     	;# 
  2555  0719                     	;# 
  2556  071A                     	;# 
  2557  071A                     	;# 
  2558  071B                     	;# 
  2559  071C                     	;# 
  2560  071D                     	;# 
  2561  0791                     	;# 
  2562  0791                     	;# 
  2563  0792                     	;# 
  2564  0793                     	;# 
  2565  0793                     	;# 
  2566  0794                     	;# 
  2567  0795                     	;# 
  2568  0795                     	;# 
  2569  0796                     	;# 
  2570  0797                     	;# 
  2571  0797                     	;# 
  2572  0798                     	;# 
  2573  0799                     	;# 
  2574  079A                     	;# 
  2575  080C                     	;# 
  2576  080C                     	;# 
  2577  080D                     	;# 
  2578  080E                     	;# 
  2579  080E                     	;# 
  2580  080F                     	;# 
  2581  0810                     	;# 
  2582  0810                     	;# 
  2583  0811                     	;# 
  2584  0812                     	;# 
  2585  0812                     	;# 
  2586  0813                     	;# 
  2587  0814                     	;# 
  2588  0815                     	;# 
  2589  0816                     	;# 
  2590  0817                     	;# 
  2591  0818                     	;# 
  2592  0819                     	;# 
  2593  081A                     	;# 
  2594  081A                     	;# 
  2595  081B                     	;# 
  2596  081C                     	;# 
  2597  081C                     	;# 
  2598  081D                     	;# 
  2599  088C                     	;# 
  2600  088D                     	;# 
  2601  088E                     	;# 
  2602  088F                     	;# 
  2603  088F                     	;# 
  2604  0890                     	;# 
  2605  0891                     	;# 
  2606  0892                     	;# 
  2607  0893                     	;# 
  2608  0893                     	;# 
  2609  0894                     	;# 
  2610  0895                     	;# 
  2611  0896                     	;# 
  2612  0897                     	;# 
  2613  0897                     	;# 
  2614  0898                     	;# 
  2615  0899                     	;# 
  2616  0D8C                     	;# 
  2617  0D8C                     	;# 
  2618  0D8D                     	;# 
  2619  0D8E                     	;# 
  2620  0D8F                     	;# 
  2621  0D8F                     	;# 
  2622  0D90                     	;# 
  2623  0D91                     	;# 
  2624  0D92                     	;# 
  2625  0D92                     	;# 
  2626  0D93                     	;# 
  2627  0D94                     	;# 
  2628  0D95                     	;# 
  2629  0D95                     	;# 
  2630  0D96                     	;# 
  2631  0D97                     	;# 
  2632  0D98                     	;# 
  2633  0D99                     	;# 
  2634  0D9A                     	;# 
  2635  0D9B                     	;# 
  2636  0D9C                     	;# 
  2637  0D9D                     	;# 
  2638  0D9E                     	;# 
  2639  0D9E                     	;# 
  2640  0D9F                     	;# 
  2641  0DA0                     	;# 
  2642  0DA1                     	;# 
  2643  0DA1                     	;# 
  2644  0DA2                     	;# 
  2645  0DA3                     	;# 
  2646  0DA4                     	;# 
  2647  0DA4                     	;# 
  2648  0DA5                     	;# 
  2649  0DA6                     	;# 
  2650  0DA7                     	;# 
  2651  0DA7                     	;# 
  2652  0DA8                     	;# 
  2653  0DA9                     	;# 
  2654  0DAA                     	;# 
  2655  0DAB                     	;# 
  2656  0DAC                     	;# 
  2657  0DAD                     	;# 
  2658  0DAE                     	;# 
  2659  0DAF                     	;# 
  2660  0E0F                     	;# 
  2661  0E10                     	;# 
  2662  0E11                     	;# 
  2663  0E12                     	;# 
  2664  0E13                     	;# 
  2665  0E14                     	;# 
  2666  0E15                     	;# 
  2667  0E16                     	;# 
  2668  0E17                     	;# 
  2669  0E18                     	;# 
  2670  0E19                     	;# 
  2671  0E1A                     	;# 
  2672  0E1B                     	;# 
  2673  0E1C                     	;# 
  2674  0E1D                     	;# 
  2675  0E1E                     	;# 
  2676  0E1F                     	;# 
  2677  0E20                     	;# 
  2678  0E21                     	;# 
  2679  0E22                     	;# 
  2680  0E23                     	;# 
  2681  0E24                     	;# 
  2682  0E25                     	;# 
  2683  0E26                     	;# 
  2684  0E27                     	;# 
  2685  0E28                     	;# 
  2686  0E29                     	;# 
  2687  0E2A                     	;# 
  2688  0E2B                     	;# 
  2689  0E2C                     	;# 
  2690  0E2D                     	;# 
  2691  0E2E                     	;# 
  2692  0E90                     	;# 
  2693  0E91                     	;# 
  2694  0E92                     	;# 
  2695  0E94                     	;# 
  2696  0E95                     	;# 
  2697  0E9C                     	;# 
  2698  0E9D                     	;# 
  2699  0E9E                     	;# 
  2700  0E9F                     	;# 
  2701  0EA0                     	;# 
  2702  0EA1                     	;# 
  2703  0EA2                     	;# 
  2704  0EA3                     	;# 
  2705  0EA4                     	;# 
  2706  0EA5                     	;# 
  2707  0EA6                     	;# 
  2708  0EA7                     	;# 
  2709  0F0F                     	;# 
  2710  0F10                     	;# 
  2711  0F11                     	;# 
  2712  0F12                     	;# 
  2713  0F13                     	;# 
  2714  0F14                     	;# 
  2715  0F15                     	;# 
  2716  0F16                     	;# 
  2717  0F17                     	;# 
  2718  0F18                     	;# 
  2719  0F19                     	;# 
  2720  0F1A                     	;# 
  2721  0F1B                     	;# 
  2722  0F1C                     	;# 
  2723  0F1D                     	;# 
  2724  0F1E                     	;# 
  2725  0F1F                     	;# 
  2726  0F20                     	;# 
  2727  0F21                     	;# 
  2728  0F22                     	;# 
  2729  0F23                     	;# 
  2730  0F24                     	;# 
  2731  0F25                     	;# 
  2732  0F26                     	;# 
  2733  0F27                     	;# 
  2734  0F28                     	;# 
  2735  0F29                     	;# 
  2736  0F2A                     	;# 
  2737  0F2B                     	;# 
  2738  0F2C                     	;# 
  2739  0F2D                     	;# 
  2740  0F2E                     	;# 
  2741  0F2F                     	;# 
  2742  0F30                     	;# 
  2743  0F31                     	;# 
  2744  0F32                     	;# 
  2745  0F33                     	;# 
  2746  0F34                     	;# 
  2747  0F35                     	;# 
  2748  0F36                     	;# 
  2749  0F37                     	;# 
  2750  0FE4                     	;# 
  2751  0FE5                     	;# 
  2752  0FE6                     	;# 
  2753  0FE7                     	;# 
  2754  0FE8                     	;# 
  2755  0FE9                     	;# 
  2756  0FEA                     	;# 
  2757  0FEB                     	;# 
  2758  0FED                     	;# 
  2759  0FEE                     	;# 
  2760  0FEF                     	;# 
  2761  0000                     	;# 
  2762  0001                     	;# 
  2763  0002                     	;# 
  2764  0003                     	;# 
  2765  0004                     	;# 
  2766  0005                     	;# 
  2767  0006                     	;# 
  2768  0007                     	;# 
  2769  0008                     	;# 
  2770  0009                     	;# 
  2771  000A                     	;# 
  2772  000B                     	;# 
  2773  000C                     	;# 
  2774  000D                     	;# 
  2775  000E                     	;# 
  2776  0010                     	;# 
  2777  0011                     	;# 
  2778  0012                     	;# 
  2779  0013                     	;# 
  2780  0014                     	;# 
  2781  0015                     	;# 
  2782  0016                     	;# 
  2783  0016                     	;# 
  2784  0017                     	;# 
  2785  0018                     	;# 
  2786  0019                     	;# 
  2787  001A                     	;# 
  2788  001A                     	;# 
  2789  001B                     	;# 
  2790  001B                     	;# 
  2791  001C                     	;# 
  2792  001D                     	;# 
  2793  001E                     	;# 
  2794  001F                     	;# 
  2795  008C                     	;# 
  2796  008D                     	;# 
  2797  008E                     	;# 
  2798  0090                     	;# 
  2799  0091                     	;# 
  2800  0092                     	;# 
  2801  0093                     	;# 
  2802  0094                     	;# 
  2803  0095                     	;# 
  2804  0096                     	;# 
  2805  0098                     	;# 
  2806  0099                     	;# 
  2807  009A                     	;# 
  2808  009B                     	;# 
  2809  009B                     	;# 
  2810  009C                     	;# 
  2811  009D                     	;# 
  2812  009E                     	;# 
  2813  009F                     	;# 
  2814  010C                     	;# 
  2815  010D                     	;# 
  2816  010E                     	;# 
  2817  0111                     	;# 
  2818  0112                     	;# 
  2819  0113                     	;# 
  2820  0114                     	;# 
  2821  0115                     	;# 
  2822  0116                     	;# 
  2823  0117                     	;# 
  2824  0118                     	;# 
  2825  0119                     	;# 
  2826  011C                     	;# 
  2827  018C                     	;# 
  2828  018D                     	;# 
  2829  018E                     	;# 
  2830  0191                     	;# 
  2831  0191                     	;# 
  2832  0192                     	;# 
  2833  0193                     	;# 
  2834  0193                     	;# 
  2835  0194                     	;# 
  2836  0195                     	;# 
  2837  0196                     	;# 
  2838  0197                     	;# 
  2839  0199                     	;# 
  2840  0199                     	;# 
  2841  0199                     	;# 
  2842  019A                     	;# 
  2843  019A                     	;# 
  2844  019A                     	;# 
  2845  019B                     	;# 
  2846  019B                     	;# 
  2847  019B                     	;# 
  2848  019B                     	;# 
  2849  019B                     	;# 
  2850  019C                     	;# 
  2851  019C                     	;# 
  2852  019C                     	;# 
  2853  019D                     	;# 
  2854  019D                     	;# 
  2855  019D                     	;# 
  2856  019E                     	;# 
  2857  019E                     	;# 
  2858  019E                     	;# 
  2859  019F                     	;# 
  2860  019F                     	;# 
  2861  019F                     	;# 
  2862  019F                     	;# 
  2863  019F                     	;# 
  2864  020C                     	;# 
  2865  020D                     	;# 
  2866  020E                     	;# 
  2867  0211                     	;# 
  2868  0211                     	;# 
  2869  0212                     	;# 
  2870  0212                     	;# 
  2871  0213                     	;# 
  2872  0213                     	;# 
  2873  0214                     	;# 
  2874  0214                     	;# 
  2875  0215                     	;# 
  2876  0215                     	;# 
  2877  0215                     	;# 
  2878  0215                     	;# 
  2879  0216                     	;# 
  2880  0216                     	;# 
  2881  0217                     	;# 
  2882  0217                     	;# 
  2883  028C                     	;# 
  2884  028D                     	;# 
  2885  028E                     	;# 
  2886  0291                     	;# 
  2887  0291                     	;# 
  2888  0292                     	;# 
  2889  0293                     	;# 
  2890  0294                     	;# 
  2891  0298                     	;# 
  2892  0298                     	;# 
  2893  0299                     	;# 
  2894  029A                     	;# 
  2895  029B                     	;# 
  2896  029E                     	;# 
  2897  030C                     	;# 
  2898  030D                     	;# 
  2899  030E                     	;# 
  2900  038C                     	;# 
  2901  038D                     	;# 
  2902  038E                     	;# 
  2903  0391                     	;# 
  2904  0392                     	;# 
  2905  0393                     	;# 
  2906  0394                     	;# 
  2907  0395                     	;# 
  2908  0396                     	;# 
  2909  0397                     	;# 
  2910  0398                     	;# 
  2911  0399                     	;# 
  2912  040E                     	;# 
  2913  0413                     	;# 
  2914  0413                     	;# 
  2915  0414                     	;# 
  2916  0414                     	;# 
  2917  0415                     	;# 
  2918  0416                     	;# 
  2919  0417                     	;# 
  2920  0418                     	;# 
  2921  041A                     	;# 
  2922  041A                     	;# 
  2923  041B                     	;# 
  2924  041B                     	;# 
  2925  041C                     	;# 
  2926  041D                     	;# 
  2927  041E                     	;# 
  2928  041F                     	;# 
  2929  0493                     	;# 
  2930  0494                     	;# 
  2931  0495                     	;# 
  2932  0496                     	;# 
  2933  049A                     	;# 
  2934  049B                     	;# 
  2935  049C                     	;# 
  2936  049D                     	;# 
  2937  058C                     	;# 
  2938  058C                     	;# 
  2939  058D                     	;# 
  2940  058E                     	;# 
  2941  058E                     	;# 
  2942  058F                     	;# 
  2943  0590                     	;# 
  2944  0590                     	;# 
  2945  0591                     	;# 
  2946  0592                     	;# 
  2947  0592                     	;# 
  2948  0593                     	;# 
  2949  0594                     	;# 
  2950  0594                     	;# 
  2951  0595                     	;# 
  2952  0596                     	;# 
  2953  0596                     	;# 
  2954  0597                     	;# 
  2955  0598                     	;# 
  2956  0599                     	;# 
  2957  059A                     	;# 
  2958  059B                     	;# 
  2959  059B                     	;# 
  2960  059C                     	;# 
  2961  059D                     	;# 
  2962  060C                     	;# 
  2963  060C                     	;# 
  2964  060D                     	;# 
  2965  060E                     	;# 
  2966  060F                     	;# 
  2967  060F                     	;# 
  2968  0610                     	;# 
  2969  0611                     	;# 
  2970  0612                     	;# 
  2971  0613                     	;# 
  2972  0614                     	;# 
  2973  0617                     	;# 
  2974  0617                     	;# 
  2975  0618                     	;# 
  2976  0619                     	;# 
  2977  061A                     	;# 
  2978  061A                     	;# 
  2979  061B                     	;# 
  2980  061C                     	;# 
  2981  0691                     	;# 
  2982  0692                     	;# 
  2983  0693                     	;# 
  2984  0694                     	;# 
  2985  0695                     	;# 
  2986  0696                     	;# 
  2987  0697                     	;# 
  2988  0699                     	;# 
  2989  069A                     	;# 
  2990  0711                     	;# 
  2991  0712                     	;# 
  2992  0713                     	;# 
  2993  0714                     	;# 
  2994  0715                     	;# 
  2995  0718                     	;# 
  2996  0718                     	;# 
  2997  0719                     	;# 
  2998  071A                     	;# 
  2999  071A                     	;# 
  3000  071B                     	;# 
  3001  071C                     	;# 
  3002  071D                     	;# 
  3003  0791                     	;# 
  3004  0791                     	;# 
  3005  0792                     	;# 
  3006  0793                     	;# 
  3007  0793                     	;# 
  3008  0794                     	;# 
  3009  0795                     	;# 
  3010  0795                     	;# 
  3011  0796                     	;# 
  3012  0797                     	;# 
  3013  0797                     	;# 
  3014  0798                     	;# 
  3015  0799                     	;# 
  3016  079A                     	;# 
  3017  080C                     	;# 
  3018  080C                     	;# 
  3019  080D                     	;# 
  3020  080E                     	;# 
  3021  080E                     	;# 
  3022  080F                     	;# 
  3023  0810                     	;# 
  3024  0810                     	;# 
  3025  0811                     	;# 
  3026  0812                     	;# 
  3027  0812                     	;# 
  3028  0813                     	;# 
  3029  0814                     	;# 
  3030  0815                     	;# 
  3031  0816                     	;# 
  3032  0817                     	;# 
  3033  0818                     	;# 
  3034  0819                     	;# 
  3035  081A                     	;# 
  3036  081A                     	;# 
  3037  081B                     	;# 
  3038  081C                     	;# 
  3039  081C                     	;# 
  3040  081D                     	;# 
  3041  088C                     	;# 
  3042  088D                     	;# 
  3043  088E                     	;# 
  3044  088F                     	;# 
  3045  088F                     	;# 
  3046  0890                     	;# 
  3047  0891                     	;# 
  3048  0892                     	;# 
  3049  0893                     	;# 
  3050  0893                     	;# 
  3051  0894                     	;# 
  3052  0895                     	;# 
  3053  0896                     	;# 
  3054  0897                     	;# 
  3055  0897                     	;# 
  3056  0898                     	;# 
  3057  0899                     	;# 
  3058  0D8C                     	;# 
  3059  0D8C                     	;# 
  3060  0D8D                     	;# 
  3061  0D8E                     	;# 
  3062  0D8F                     	;# 
  3063  0D8F                     	;# 
  3064  0D90                     	;# 
  3065  0D91                     	;# 
  3066  0D92                     	;# 
  3067  0D92                     	;# 
  3068  0D93                     	;# 
  3069  0D94                     	;# 
  3070  0D95                     	;# 
  3071  0D95                     	;# 
  3072  0D96                     	;# 
  3073  0D97                     	;# 
  3074  0D98                     	;# 
  3075  0D99                     	;# 
  3076  0D9A                     	;# 
  3077  0D9B                     	;# 
  3078  0D9C                     	;# 
  3079  0D9D                     	;# 
  3080  0D9E                     	;# 
  3081  0D9E                     	;# 
  3082  0D9F                     	;# 
  3083  0DA0                     	;# 
  3084  0DA1                     	;# 
  3085  0DA1                     	;# 
  3086  0DA2                     	;# 
  3087  0DA3                     	;# 
  3088  0DA4                     	;# 
  3089  0DA4                     	;# 
  3090  0DA5                     	;# 
  3091  0DA6                     	;# 
  3092  0DA7                     	;# 
  3093  0DA7                     	;# 
  3094  0DA8                     	;# 
  3095  0DA9                     	;# 
  3096  0DAA                     	;# 
  3097  0DAB                     	;# 
  3098  0DAC                     	;# 
  3099  0DAD                     	;# 
  3100  0DAE                     	;# 
  3101  0DAF                     	;# 
  3102  0E0F                     	;# 
  3103  0E10                     	;# 
  3104  0E11                     	;# 
  3105  0E12                     	;# 
  3106  0E13                     	;# 
  3107  0E14                     	;# 
  3108  0E15                     	;# 
  3109  0E16                     	;# 
  3110  0E17                     	;# 
  3111  0E18                     	;# 
  3112  0E19                     	;# 
  3113  0E1A                     	;# 
  3114  0E1B                     	;# 
  3115  0E1C                     	;# 
  3116  0E1D                     	;# 
  3117  0E1E                     	;# 
  3118  0E1F                     	;# 
  3119  0E20                     	;# 
  3120  0E21                     	;# 
  3121  0E22                     	;# 
  3122  0E23                     	;# 
  3123  0E24                     	;# 
  3124  0E25                     	;# 
  3125  0E26                     	;# 
  3126  0E27                     	;# 
  3127  0E28                     	;# 
  3128  0E29                     	;# 
  3129  0E2A                     	;# 
  3130  0E2B                     	;# 
  3131  0E2C                     	;# 
  3132  0E2D                     	;# 
  3133  0E2E                     	;# 
  3134  0E90                     	;# 
  3135  0E91                     	;# 
  3136  0E92                     	;# 
  3137  0E94                     	;# 
  3138  0E95                     	;# 
  3139  0E9C                     	;# 
  3140  0E9D                     	;# 
  3141  0E9E                     	;# 
  3142  0E9F                     	;# 
  3143  0EA0                     	;# 
  3144  0EA1                     	;# 
  3145  0EA2                     	;# 
  3146  0EA3                     	;# 
  3147  0EA4                     	;# 
  3148  0EA5                     	;# 
  3149  0EA6                     	;# 
  3150  0EA7                     	;# 
  3151  0F0F                     	;# 
  3152  0F10                     	;# 
  3153  0F11                     	;# 
  3154  0F12                     	;# 
  3155  0F13                     	;# 
  3156  0F14                     	;# 
  3157  0F15                     	;# 
  3158  0F16                     	;# 
  3159  0F17                     	;# 
  3160  0F18                     	;# 
  3161  0F19                     	;# 
  3162  0F1A                     	;# 
  3163  0F1B                     	;# 
  3164  0F1C                     	;# 
  3165  0F1D                     	;# 
  3166  0F1E                     	;# 
  3167  0F1F                     	;# 
  3168  0F20                     	;# 
  3169  0F21                     	;# 
  3170  0F22                     	;# 
  3171  0F23                     	;# 
  3172  0F24                     	;# 
  3173  0F25                     	;# 
  3174  0F26                     	;# 
  3175  0F27                     	;# 
  3176  0F28                     	;# 
  3177  0F29                     	;# 
  3178  0F2A                     	;# 
  3179  0F2B                     	;# 
  3180  0F2C                     	;# 
  3181  0F2D                     	;# 
  3182  0F2E                     	;# 
  3183  0F2F                     	;# 
  3184  0F30                     	;# 
  3185  0F31                     	;# 
  3186  0F32                     	;# 
  3187  0F33                     	;# 
  3188  0F34                     	;# 
  3189  0F35                     	;# 
  3190  0F36                     	;# 
  3191  0F37                     	;# 
  3192  0FE4                     	;# 
  3193  0FE5                     	;# 
  3194  0FE6                     	;# 
  3195  0FE7                     	;# 
  3196  0FE8                     	;# 
  3197  0FE9                     	;# 
  3198  0FEA                     	;# 
  3199  0FEB                     	;# 
  3200  0FED                     	;# 
  3201  0FEE                     	;# 
  3202  0FEF                     	;# 
  3203                           
  3204 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  3205  0000                     
  3206 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  3207  0000                     
  3208 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  3209  0000                     
  3210                           	psect	idataBANK2
  3211  1762                     __pidataBANK2:	
  3212                           
  3213                           ;initializer for _hrDisp
  3214  1762  3448               	retlw	72
  3215  1763  3465               	retlw	101
  3216  1764  3461               	retlw	97
  3217  1765  3472               	retlw	114
  3218  1766  3474               	retlw	116
  3219  1767  3420               	retlw	32
  3220  1768  3452               	retlw	82
  3221  1769  3461               	retlw	97
  3222  176A  3474               	retlw	116
  3223  176B  3465               	retlw	101
  3224  176C  343A               	retlw	58
  3225  176D  3420               	retlw	32
  3226  176E  3400               	retlw	0
  3227                           
  3228                           ;initializer for _distanceDisp
  3229  176F  3444               	retlw	68
  3230  1770  3469               	retlw	105
  3231  1771  3473               	retlw	115
  3232  1772  3474               	retlw	116
  3233  1773  3461               	retlw	97
  3234  1774  346E               	retlw	110
  3235  1775  3463               	retlw	99
  3236  1776  3465               	retlw	101
  3237  1777  343A               	retlw	58
  3238  1778  3420               	retlw	32
  3239  1779  3400               	retlw	0
  3240                           
  3241                           ;initializer for _speedDisp
  3242  177A  3453               	retlw	83
  3243  177B  3470               	retlw	112
  3244  177C  3465               	retlw	101
  3245  177D  3465               	retlw	101
  3246  177E  3464               	retlw	100
  3247  177F  343A               	retlw	58
  3248  1780  3420               	retlw	32
  3249  1781  3400               	retlw	0
  3250                           
  3251                           	psect	nvBANK0
  3252  005F                     __pnvBANK0:	
  3253  005F                     _timer0ReloadVal:	
  3254  005F                     	ds	1
  3255                           
  3256                           	psect	nvBANK2
  3257  015C                     __pnvBANK2:	
  3258  015C                     _TMR0_InterruptHandler:	
  3259  015C                     	ds	2
  3260  015E                     _IOCCF7_InterruptHandler:	
  3261  015E                     	ds	2
  3262  0160                     _EUSART_ErrorHandler:	
  3263  0160                     	ds	2
  3264  0162                     _EUSART_OverrunErrorHandler:	
  3265  0162                     	ds	2
  3266  0164                     _EUSART_FramingErrorHandler:	
  3267  0164                     	ds	2
  3268  0015                     _TMR0	set	21
  3269  000B                     _INTCONbits	set	11
  3270  0010                     _PIR1bits	set	16
  3271  0095                     _OPTION_REG	set	149
  3272  0095                     _OPTION_REGbits	set	149
  3273  008E                     _TRISC	set	142
  3274  008D                     _TRISB	set	141
  3275  008C                     _TRISA	set	140
  3276  0098                     _OSCTUNE	set	152
  3277  0099                     _OSCCON	set	153
  3278  010E                     _LATC	set	270
  3279  010D                     _LATB	set	269
  3280  010C                     _LATA	set	268
  3281  0116                     _BORCON	set	278
  3282  018C                     _ANSELA	set	396
  3283  018D                     _ANSELB	set	397
  3284  018E                     _ANSELC	set	398
  3285  019A                     _TX1REG	set	410
  3286  0199                     _RC1REG	set	409
  3287  019D                     _RC1STAbits	set	413
  3288  019E                     _TX1STAbits	set	414
  3289  019C                     _SPBRGH	set	412
  3290  019B                     _SPBRGL	set	411
  3291  019E                     _TX1STA	set	414
  3292  019D                     _RC1STA	set	413
  3293  019F                     _BAUD1CON	set	415
  3294  020E                     _WPUC	set	526
  3295  020C                     _WPUA	set	524
  3296  020D                     _WPUB	set	525
  3297  028E                     _ODCONC	set	654
  3298  028D                     _ODCONB	set	653
  3299  028C                     _ODCONA	set	652
  3300  030E                     _SLRCONC	set	782
  3301  030D                     _SLRCONB	set	781
  3302  030C                     _SLRCONA	set	780
  3303  0397                     _IOCCPbits	set	919
  3304  0398                     _IOCCNbits	set	920
  3305  0399                     _IOCCFbits	set	921
  3306  0E9F                     _RB7PPS	set	3743
  3307                           
  3308                           	psect	stringtext1
  3309  1800                     __pstringtext1:	
  3310  1800                     STR_3:	
  3311  1800  3430               	retlw	48	;'0'
  3312  1801  3420               	retlw	32	;' '
  3313  1802  346B               	retlw	107	;'k'
  3314  1803  3470               	retlw	112	;'p'
  3315  1804  3468               	retlw	104	;'h'
  3316  1805  3420               	retlw	32	;' '
  3317  1806  3420               	retlw	32	;' '
  3318  1807  3420               	retlw	32	;' '
  3319  1808  3420               	retlw	32	;' '
  3320  1809  3420               	retlw	32	;' '
  3321  180A  3420               	retlw	32	;' '
  3322  180B  3420               	retlw	32	;' '
  3323  180C  3420               	retlw	32	;' '
  3324  180D  3400               	retlw	0
  3325                           
  3326                           	psect	stringtext2
  3327  180E                     __pstringtext2:	
  3328  180E                     STR_2:	
  3329  180E  3425               	retlw	37	;'%'
  3330  180F  3464               	retlw	100	;'d'
  3331  1810  342E               	retlw	46	;'.'
  3332  1811  3425               	retlw	37	;'%'
  3333  1812  3464               	retlw	100	;'d'
  3334  1813  3420               	retlw	32	;' '
  3335  1814  346B               	retlw	107	;'k'
  3336  1815  3470               	retlw	112	;'p'
  3337  1816  3468               	retlw	104	;'h'
  3338  1817  3420               	retlw	32	;' '
  3339  1818  3420               	retlw	32	;' '
  3340  1819  3420               	retlw	32	;' '
  3341  181A  3400               	retlw	0
  3342                           
  3343                           	psect	stringtext3
  3344  181B                     __pstringtext3:	
  3345  181B                     STR_1:	
  3346  181B  3425               	retlw	37	;'%'
  3347  181C  3464               	retlw	100	;'d'
  3348  181D  3420               	retlw	32	;' '
  3349  181E  346B               	retlw	107	;'k'
  3350  181F  3470               	retlw	112	;'p'
  3351  1820  3468               	retlw	104	;'h'
  3352  1821  3420               	retlw	32	;' '
  3353  1822  3420               	retlw	32	;' '
  3354  1823  3420               	retlw	32	;' '
  3355  1824  3420               	retlw	32	;' '
  3356  1825  3420               	retlw	32	;' '
  3357  1826  3400               	retlw	0
  3358                           
  3359                           	psect	stringtext4
  3360  1827                     __pstringtext4:	
  3361  1827                     STR_5:	
  3362  1827  3425               	retlw	37	;'%'
  3363  1828  3464               	retlw	100	;'d'
  3364  1829  3420               	retlw	32	;' '
  3365  182A  346D               	retlw	109	;'m'
  3366  182B  3420               	retlw	32	;' '
  3367  182C  3420               	retlw	32	;' '
  3368  182D  3420               	retlw	32	;' '
  3369  182E  3420               	retlw	32	;' '
  3370  182F  3420               	retlw	32	;' '
  3371  1830  3400               	retlw	0
  3372                           
  3373                           	psect	stringtext5
  3374  1831                     __pstringtext5:	
  3375  1831                     STR_6:	
  3376  1831  3425               	retlw	37	;'%'
  3377  1832  3464               	retlw	100	;'d'
  3378  1833  3420               	retlw	32	;' '
  3379  1834  3462               	retlw	98	;'b'
  3380  1835  3470               	retlw	112	;'p'
  3381  1836  346D               	retlw	109	;'m'
  3382  1837  3420               	retlw	32	;' '
  3383  1838  3420               	retlw	32	;' '
  3384  1839  3420               	retlw	32	;' '
  3385  183A  3400               	retlw	0
  3386                           
  3387                           	psect	stringtext6
  3388  183B                     __pstringtext6:	
  3389  183B                     STR_4:	
  3390  183B  3425               	retlw	37	;'%'
  3391  183C  3464               	retlw	100	;'d'
  3392  183D  342E               	retlw	46	;'.'
  3393  183E  3425               	retlw	37	;'%'
  3394  183F  3464               	retlw	100	;'d'
  3395  1840  3420               	retlw	32	;' '
  3396  1841  346B               	retlw	107	;'k'
  3397  1842  346D               	retlw	109	;'m'
  3398  1843  3400               	retlw	0
  3399                           
  3400                           	psect	stringtext7
  3401  1844                     __pstringtext7:	
  3402  1844                     STR_7:	
  3403  1844  347C               	retlw	124	;'|'
  3404  1845  342D               	retlw	45	;'-'
  3405  1846  3400               	retlw	0
  3406                           
  3407                           	psect	stringtext8
  3408  0000                     __pstringtext8:	
  3409                           
  3410                           ; #config settings
  3411  0000                     
  3412                           	psect	cinit
  3413  0016                     start_initialization:	
  3414  0016                     __initialization:	
  3415                           
  3416                           ; Initialize objects allocated to BANK2
  3417  0016  3062               	movlw	low __pidataBANK2
  3418  0017  0084               	movwf	4
  3419  0018  3097               	movlw	(high __pidataBANK2)| (0+128)
  3420  0019  0085               	movwf	5
  3421  001A  3020               	movlw	low __pdataBANK2
  3422  001B  0086               	movwf	6
  3423  001C  3001               	movlw	high __pdataBANK2
  3424  001D  0087               	movwf	7
  3425  001E  3020               	movlw	32
  3426  001F  3196  2638  3180   	fcall	init_ram
  3427                           
  3428                           ; Clear objects allocated to BANK0
  3429  0022  3040               	movlw	low __pbssBANK0
  3430  0023  0084               	movwf	4
  3431  0024  3000               	movlw	high __pbssBANK0
  3432  0025  0085               	movwf	5
  3433  0026  301F               	movlw	31
  3434  0027  3196  2632  3180   	fcall	clear_ram0
  3435                           
  3436                           ; Clear objects allocated to BANK2
  3437  002A  3050               	movlw	low __pbssBANK2
  3438  002B  0084               	movwf	4
  3439  002C  3001               	movlw	high __pbssBANK2
  3440  002D  0085               	movwf	5
  3441  002E  300C               	movlw	12
  3442  002F  3196  2632  3180   	fcall	clear_ram0
  3443                           
  3444                           ; Clear objects allocated to BANK3
  3445  0032  30A0               	movlw	low __pbssBANK3
  3446  0033  0084               	movwf	4
  3447  0034  3001               	movlw	high __pbssBANK3
  3448  0035  0085               	movwf	5
  3449  0036  3020               	movlw	32
  3450  0037  3196  2632         	fcall	clear_ram0
  3451  0039                     end_of_initialization:	
  3452                           ;End of C runtime variable initialization code
  3453                           
  3454  0039                     __end_of__initialization:	
  3455  0039  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3456  003A  0020               	movlb	0
  3457  003B  3184  2C52         	ljmp	_main	;jump to C main() function
  3458                           
  3459                           	psect	bssBANK0
  3460  0040                     __pbssBANK0:	
  3461  0040                     _distance:	
  3462  0040                     	ds	4
  3463  0044                     _speed:	
  3464  0044                     	ds	4
  3465  0048                     _nout:	
  3466  0048                     	ds	2
  3467  004A                     _width:	
  3468  004A                     	ds	2
  3469  004C                     _prec:	
  3470  004C                     	ds	2
  3471  004E                     _flags:	
  3472  004E                     	ds	2
  3473  0050                     _hrInt:	
  3474  0050                     	ds	2
  3475  0052                     _speedLo:	
  3476  0052                     	ds	2
  3477  0054                     _distLo:	
  3478  0054                     	ds	2
  3479  0056                     _distHi:	
  3480  0056                     	ds	2
  3481  0058                     _speedInt:	
  3482  0058                     	ds	2
  3483  005A                     _eusartRxLastError:	
  3484  005A                     	ds	1
  3485  005B                     _counter:	
  3486  005B                     	ds	4
  3487                           
  3488                           	psect	bssBANK2
  3489  0150                     __pbssBANK2:	
  3490  0150                     _heartRate:	
  3491  0150                     	ds	4
  3492  0154                     _adcCounter:	
  3493  0154                     	ds	4
  3494  0158                     _rpm:	
  3495  0158                     	ds	4
  3496                           
  3497                           	psect	dataBANK2
  3498  0120                     __pdataBANK2:	
  3499  0120                     _hrDisp:	
  3500  0120                     	ds	13
  3501  012D                     _distanceDisp:	
  3502  012D                     	ds	11
  3503  0138                     _speedDisp:	
  3504  0138                     	ds	8
  3505                           
  3506                           	psect	bssBANK3
  3507  01A0                     __pbssBANK3:	
  3508  01A0                     _dbuf:	
  3509  01A0                     	ds	32
  3510                           
  3511                           	psect	inittext
  3512  1638                     init_ram:	
  3513  1638  00FE               	movwf	126
  3514  1639                     initloop:	
  3515  1639  0012               	moviw fsr0++
  3516  163A  001E               	movwi fsr1++
  3517  163B  0BFE               	decfsz	126,f
  3518  163C  2E39               	goto	initloop
  3519  163D  3400               	retlw	0
  3520                           
  3521                           	psect	clrtext
  3522  1632                     clear_ram0:	
  3523                           ;	Called with FSR0 containing the base address, and
  3524                           ;	WREG with the size to clear
  3525                           
  3526  1632  0064               	clrwdt	;clear the watchdog before getting into this loop
  3527  1633                     clrloop0:	
  3528  1633  0180               	clrf	0	;clear RAM location pointed to by FSR
  3529  1634  3101               	addfsr 0,1
  3530  1635  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3531  1636  2E33               	goto	clrloop0	;have we reached the end yet?
  3532  1637  3400               	retlw	0	;all done for this memory range, return
  3533                           
  3534                           	psect	cstackBANK2
  3535  0140                     __pcstackBANK2:	
  3536  0140                     ??_vfprintf:	
  3537                           
  3538                           ; 1 bytes @ 0x0
  3539  0140                     	ds	2
  3540  0142                     vfprintf@fp:	
  3541                           
  3542                           ; 1 bytes @ 0x2
  3543  0142                     	ds	1
  3544  0143                     vfprintf@cfmt:	
  3545                           
  3546                           ; 2 bytes @ 0x3
  3547  0143                     	ds	2
  3548  0145                     ?_printf:	
  3549  0145                     printf@fmt:	
  3550                           ; 2 bytes @ 0x5
  3551                           
  3552                           
  3553                           ; 2 bytes @ 0x5
  3554  0145                     	ds	8
  3555  014D                     printf@ap:	
  3556                           
  3557                           ; 1 bytes @ 0xD
  3558  014D                     	ds	1
  3559  014E                     ??_main:	
  3560                           
  3561                           ; 1 bytes @ 0xE
  3562  014E                     	ds	2
  3563                           
  3564                           	psect	cstackBANK1
  3565  00A0                     __pcstackBANK1:	
  3566  00A0                     ?___flge:	
  3567  00A0                     ?_EUSART_SetFramingErrorHandler:	
  3568                           ; 1 bit 
  3569                           
  3570  00A0                     ?_EUSART_SetOverrunErrorHandler:	
  3571                           ; 1 bytes @ 0x0
  3572                           
  3573  00A0                     ?_EUSART_SetErrorHandler:	
  3574                           ; 1 bytes @ 0x0
  3575                           
  3576  00A0                     ??_OSCILLATOR_Initialize:	
  3577                           ; 1 bytes @ 0x0
  3578                           
  3579  00A0                     ?_IOCCF7_SetInterruptHandler:	
  3580                           ; 1 bytes @ 0x0
  3581                           
  3582  00A0                     ?_TMR0_SetInterruptHandler:	
  3583                           ; 1 bytes @ 0x0
  3584                           
  3585  00A0                     ??_EUSART_is_tx_ready:	
  3586                           ; 1 bytes @ 0x0
  3587                           
  3588  00A0                     ??_EUSART_Write:	
  3589                           ; 1 bytes @ 0x0
  3590                           
  3591  00A0                     ?_strlen:	
  3592                           ; 1 bytes @ 0x0
  3593                           
  3594  00A0                     ?___fldiv:	
  3595                           ; 2 bytes @ 0x0
  3596                           
  3597  00A0                     ?___aodiv:	
  3598                           ; 4 bytes @ 0x0
  3599                           
  3600  00A0                     ?___aomod:	
  3601                           ; 8 bytes @ 0x0
  3602                           
  3603  00A0                     _EUSART_is_tx_ready$167:	
  3604                           ; 8 bytes @ 0x0
  3605                           
  3606  00A0                     EUSART_Write@txData:	
  3607                           ; 1 bytes @ 0x0
  3608                           
  3609  00A0                     EUSART_SetFramingErrorHandler@interruptHandler:	
  3610                           ; 1 bytes @ 0x0
  3611                           
  3612  00A0                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  3613                           ; 2 bytes @ 0x0
  3614                           
  3615  00A0                     EUSART_SetErrorHandler@interruptHandler:	
  3616                           ; 2 bytes @ 0x0
  3617                           
  3618  00A0                     IOCCF7_SetInterruptHandler@InterruptHandler:	
  3619                           ; 2 bytes @ 0x0
  3620                           
  3621  00A0                     TMR0_SetInterruptHandler@InterruptHandler:	
  3622                           ; 2 bytes @ 0x0
  3623                           
  3624  00A0                     ___flge@ff1:	
  3625                           ; 2 bytes @ 0x0
  3626                           
  3627  00A0                     ___fldiv@a:	
  3628                           ; 4 bytes @ 0x0
  3629                           
  3630  00A0                     ___aodiv@divisor:	
  3631                           ; 4 bytes @ 0x0
  3632                           
  3633  00A0                     ___aomod@divisor:	
  3634                           ; 8 bytes @ 0x0
  3635                           
  3636                           
  3637                           ; 8 bytes @ 0x0
  3638  00A0                     	ds	1
  3639  00A1                     ?_setCursor:	
  3640  00A1                     ??_putch:	
  3641                           ; 1 bytes @ 0x1
  3642                           
  3643  00A1                     putch@txData:	
  3644                           ; 1 bytes @ 0x1
  3645                           
  3646  00A1                     setCursor@b:	
  3647                           ; 1 bytes @ 0x1
  3648                           
  3649                           
  3650                           ; 1 bytes @ 0x1
  3651  00A1                     	ds	1
  3652  00A2                     ??_EUSART_SetFramingErrorHandler:	
  3653  00A2                     ??_EUSART_SetOverrunErrorHandler:	
  3654                           ; 1 bytes @ 0x2
  3655                           
  3656  00A2                     ??_EUSART_SetErrorHandler:	
  3657                           ; 1 bytes @ 0x2
  3658                           
  3659  00A2                     ??_PIN_MANAGER_Initialize:	
  3660                           ; 1 bytes @ 0x2
  3661                           
  3662  00A2                     ??_TMR0_Initialize:	
  3663                           ; 1 bytes @ 0x2
  3664                           
  3665  00A2                     ??_IOCCF7_SetInterruptHandler:	
  3666                           ; 1 bytes @ 0x2
  3667                           
  3668  00A2                     ??_TMR0_SetInterruptHandler:	
  3669                           ; 1 bytes @ 0x2
  3670                           
  3671  00A2                     ??_setCursor:	
  3672                           ; 1 bytes @ 0x2
  3673                           
  3674  00A2                     ??_strlen:	
  3675                           ; 1 bytes @ 0x2
  3676                           
  3677  00A2                     ??_EUSART_Initialize:	
  3678                           ; 1 bytes @ 0x2
  3679                           
  3680  00A2                     ?_fputc:	
  3681                           ; 1 bytes @ 0x2
  3682                           
  3683  00A2                     fputc@c:	
  3684                           ; 2 bytes @ 0x2
  3685                           
  3686                           
  3687                           ; 2 bytes @ 0x2
  3688  00A2                     	ds	1
  3689  00A3                     ??_SYSTEM_Initialize:	
  3690  00A3                     strlen@a:	
  3691                           ; 1 bytes @ 0x3
  3692                           
  3693                           
  3694                           ; 1 bytes @ 0x3
  3695  00A3                     	ds	1
  3696  00A4                     setCursor@a:	
  3697  00A4                     fputc@fp:	
  3698                           ; 1 bytes @ 0x4
  3699                           
  3700  00A4                     strlen@s:	
  3701                           ; 1 bytes @ 0x4
  3702                           
  3703  00A4                     ___flge@ff2:	
  3704                           ; 1 bytes @ 0x4
  3705                           
  3706  00A4                     ___fldiv@b:	
  3707                           ; 4 bytes @ 0x4
  3708                           
  3709                           
  3710                           ; 4 bytes @ 0x4
  3711  00A4                     	ds	1
  3712  00A5                     ??_fputc:	
  3713                           
  3714                           ; 1 bytes @ 0x5
  3715  00A5                     	ds	3
  3716  00A8                     ??___flge:	
  3717  00A8                     ??___fldiv:	
  3718                           ; 1 bytes @ 0x8
  3719                           
  3720  00A8                     ___aodiv@dividend:	
  3721                           ; 1 bytes @ 0x8
  3722                           
  3723  00A8                     ___aomod@dividend:	
  3724                           ; 8 bytes @ 0x8
  3725                           
  3726                           
  3727                           ; 8 bytes @ 0x8
  3728  00A8                     	ds	2
  3729  00AA                     ?_fputs:	
  3730  00AA                     fputs@s:	
  3731                           ; 2 bytes @ 0xA
  3732                           
  3733                           
  3734                           ; 2 bytes @ 0xA
  3735  00AA                     	ds	2
  3736  00AC                     fputs@fp:	
  3737                           
  3738                           ; 1 bytes @ 0xC
  3739  00AC                     	ds	1
  3740  00AD                     ??_fputs:	
  3741  00AD                     ___fldiv@rem:	
  3742                           ; 1 bytes @ 0xD
  3743                           
  3744                           
  3745                           ; 4 bytes @ 0xD
  3746  00AD                     	ds	3
  3747  00B0                     ??___aodiv:	
  3748  00B0                     ??___aomod:	
  3749                           ; 1 bytes @ 0x10
  3750                           
  3751  00B0                     fputs@c:	
  3752                           ; 1 bytes @ 0x10
  3753                           
  3754                           
  3755                           ; 1 bytes @ 0x10
  3756  00B0                     	ds	1
  3757  00B1                     ___aodiv@counter:	
  3758  00B1                     ___aomod@counter:	
  3759                           ; 1 bytes @ 0x11
  3760                           
  3761  00B1                     ___fldiv@sign:	
  3762                           ; 1 bytes @ 0x11
  3763                           
  3764  00B1                     fputs@i:	
  3765                           ; 1 bytes @ 0x11
  3766                           
  3767                           
  3768                           ; 2 bytes @ 0x11
  3769  00B1                     	ds	1
  3770  00B2                     ___aodiv@sign:	
  3771  00B2                     ___aomod@sign:	
  3772                           ; 1 bytes @ 0x12
  3773                           
  3774  00B2                     ___fldiv@new_exp:	
  3775                           ; 1 bytes @ 0x12
  3776                           
  3777                           
  3778                           ; 2 bytes @ 0x12
  3779  00B2                     	ds	1
  3780  00B3                     ?_puts:	
  3781  00B3                     ?_abs:	
  3782                           ; 2 bytes @ 0x13
  3783                           
  3784  00B3                     ?_pad:	
  3785                           ; 2 bytes @ 0x13
  3786                           
  3787  00B3                     pad@buf:	
  3788                           ; 2 bytes @ 0x13
  3789                           
  3790  00B3                     abs@a:	
  3791                           ; 1 bytes @ 0x13
  3792                           
  3793  00B3                     puts@s:	
  3794                           ; 2 bytes @ 0x13
  3795                           
  3796  00B3                     ___aodiv@quotient:	
  3797                           ; 2 bytes @ 0x13
  3798                           
  3799                           
  3800                           ; 8 bytes @ 0x13
  3801  00B3                     	ds	1
  3802  00B4                     pad@p:	
  3803  00B4                     ___fldiv@grs:	
  3804                           ; 2 bytes @ 0x14
  3805                           
  3806                           
  3807                           ; 4 bytes @ 0x14
  3808  00B4                     	ds	1
  3809  00B5                     ??_puts:	
  3810  00B5                     ??_abs:	
  3811                           ; 1 bytes @ 0x15
  3812                           
  3813                           
  3814                           ; 1 bytes @ 0x15
  3815  00B5                     	ds	1
  3816  00B6                     ??_pad:	
  3817                           
  3818                           ; 1 bytes @ 0x16
  3819  00B6                     	ds	1
  3820  00B7                     _puts$1046:	
  3821  00B7                     pad@i:	
  3822                           ; 1 bytes @ 0x17
  3823                           
  3824                           
  3825                           ; 2 bytes @ 0x17
  3826  00B7                     	ds	1
  3827  00B8                     ??_resetCursor:	
  3828  00B8                     ??_writeString:	
  3829                           ; 1 bytes @ 0x18
  3830                           
  3831  00B8                     writeString@string:	
  3832                           ; 1 bytes @ 0x18
  3833                           
  3834  00B8                     ___fldiv@bexp:	
  3835                           ; 1 bytes @ 0x18
  3836                           
  3837                           
  3838                           ; 1 bytes @ 0x18
  3839  00B8                     	ds	1
  3840  00B9                     ___fldiv@aexp:	
  3841  00B9                     pad@w:	
  3842                           ; 1 bytes @ 0x19
  3843                           
  3844                           
  3845                           ; 2 bytes @ 0x19
  3846  00B9                     	ds	1
  3847  00BA                     ?___fltol:	
  3848  00BA                     ___fltol@f1:	
  3849                           ; 4 bytes @ 0x1A
  3850                           
  3851                           
  3852                           ; 4 bytes @ 0x1A
  3853  00BA                     	ds	1
  3854  00BB                     pad@fp:	
  3855                           
  3856                           ; 1 bytes @ 0x1B
  3857  00BB                     	ds	1
  3858  00BC                     ?_dtoa:	
  3859  00BC                     dtoa@d:	
  3860                           ; 2 bytes @ 0x1C
  3861                           
  3862                           
  3863                           ; 8 bytes @ 0x1C
  3864  00BC                     	ds	2
  3865  00BE                     ??___fltol:	
  3866                           
  3867                           ; 1 bytes @ 0x1E
  3868  00BE                     	ds	5
  3869  00C3                     ___fltol@sign1:	
  3870                           
  3871                           ; 1 bytes @ 0x23
  3872  00C3                     	ds	1
  3873  00C4                     ??_dtoa:	
  3874  00C4                     ___fltol@exp1:	
  3875                           ; 1 bytes @ 0x24
  3876                           
  3877                           
  3878                           ; 1 bytes @ 0x24
  3879  00C4                     	ds	1
  3880  00C5                     ?___awmod:	
  3881  00C5                     ___awmod@divisor:	
  3882                           ; 2 bytes @ 0x25
  3883                           
  3884                           
  3885                           ; 2 bytes @ 0x25
  3886  00C5                     	ds	2
  3887  00C7                     _dtoa$700:	
  3888  00C7                     ___awmod@dividend:	
  3889                           ; 2 bytes @ 0x27
  3890                           
  3891                           
  3892                           ; 2 bytes @ 0x27
  3893  00C7                     	ds	2
  3894  00C9                     ??___awmod:	
  3895  00C9                     dtoa@fp:	
  3896                           ; 1 bytes @ 0x29
  3897                           
  3898                           
  3899                           ; 1 bytes @ 0x29
  3900  00C9                     	ds	1
  3901  00CA                     ___awmod@counter:	
  3902  00CA                     dtoa@p:	
  3903                           ; 1 bytes @ 0x2A
  3904                           
  3905                           
  3906                           ; 2 bytes @ 0x2A
  3907  00CA                     	ds	1
  3908  00CB                     ___awmod@sign:	
  3909                           
  3910                           ; 1 bytes @ 0x2B
  3911  00CB                     	ds	1
  3912  00CC                     dtoa@w:	
  3913                           
  3914                           ; 2 bytes @ 0x2C
  3915  00CC                     	ds	2
  3916  00CE                     dtoa@s:	
  3917                           
  3918                           ; 2 bytes @ 0x2E
  3919  00CE                     	ds	2
  3920  00D0                     dtoa@n:	
  3921                           
  3922                           ; 8 bytes @ 0x30
  3923  00D0                     	ds	8
  3924  00D8                     dtoa@i:	
  3925                           
  3926                           ; 2 bytes @ 0x38
  3927  00D8                     	ds	2
  3928  00DA                     ?_vfpfcnvrt:	
  3929  00DA                     vfpfcnvrt@fmt:	
  3930                           ; 2 bytes @ 0x3A
  3931                           
  3932                           
  3933                           ; 1 bytes @ 0x3A
  3934  00DA                     	ds	1
  3935  00DB                     vfpfcnvrt@ap:	
  3936                           
  3937                           ; 1 bytes @ 0x3B
  3938  00DB                     	ds	1
  3939  00DC                     ??_vfpfcnvrt:	
  3940                           
  3941                           ; 1 bytes @ 0x3C
  3942  00DC                     	ds	5
  3943  00E1                     vfpfcnvrt@ll:	
  3944                           
  3945                           ; 8 bytes @ 0x41
  3946  00E1                     	ds	8
  3947  00E9                     vfpfcnvrt@vp:	
  3948                           
  3949                           ; 2 bytes @ 0x49
  3950  00E9                     	ds	2
  3951  00EB                     vfpfcnvrt@fp:	
  3952                           
  3953                           ; 1 bytes @ 0x4B
  3954  00EB                     	ds	1
  3955  00EC                     ?_vfprintf:	
  3956  00EC                     vfprintf@fmt:	
  3957                           ; 2 bytes @ 0x4C
  3958                           
  3959                           
  3960                           ; 2 bytes @ 0x4C
  3961  00EC                     	ds	2
  3962  00EE                     vfprintf@ap:	
  3963                           
  3964                           ; 1 bytes @ 0x4E
  3965  00EE                     	ds	1
  3966  00EF                     ??_printf:	
  3967                           
  3968                           ; 1 bytes @ 0x4F
  3969  00EF                     	ds	1
  3970                           
  3971                           	psect	cstackCOMMON
  3972  0070                     __pcstackCOMMON:	
  3973  0070                     ?_PIN_MANAGER_Initialize:	
  3974  0070                     ?_OSCILLATOR_Initialize:	
  3975                           ; 1 bytes @ 0x0
  3976                           
  3977  0070                     ?_TMR0_Initialize:	
  3978                           ; 1 bytes @ 0x0
  3979                           
  3980  0070                     ?_IOCCF7_DefaultInterruptHandler:	
  3981                           ; 1 bytes @ 0x0
  3982                           
  3983  0070                     ??_IOCCF7_DefaultInterruptHandler:	
  3984                           ; 1 bytes @ 0x0
  3985                           
  3986  0070                     ?_IOCCF7_ISR:	
  3987                           ; 1 bytes @ 0x0
  3988                           
  3989  0070                     ?_TMR0_DefaultInterruptHandler:	
  3990                           ; 1 bytes @ 0x0
  3991                           
  3992  0070                     ??_TMR0_DefaultInterruptHandler:	
  3993                           ; 1 bytes @ 0x0
  3994                           
  3995  0070                     ?_timerISR:	
  3996                           ; 1 bytes @ 0x0
  3997                           
  3998  0070                     ??_timerISR:	
  3999                           ; 1 bytes @ 0x0
  4000                           
  4001  0070                     ?_speedCalc:	
  4002                           ; 1 bytes @ 0x0
  4003                           
  4004  0070                     ?_resetCursor:	
  4005                           ; 1 bytes @ 0x0
  4006                           
  4007  0070                     ?_writeString:	
  4008                           ; 1 bytes @ 0x0
  4009                           
  4010  0070                     ?_EUSART_Initialize:	
  4011                           ; 1 bytes @ 0x0
  4012                           
  4013  0070                     ?_EUSART_is_tx_ready:	
  4014                           ; 1 bytes @ 0x0
  4015                           
  4016  0070                     ?_EUSART_Write:	
  4017                           ; 1 bytes @ 0x0
  4018                           
  4019  0070                     ?_putch:	
  4020                           ; 1 bytes @ 0x0
  4021                           
  4022  0070                     ?_SYSTEM_Initialize:	
  4023                           ; 1 bytes @ 0x0
  4024                           
  4025  0070                     ?_PIN_MANAGER_IOC:	
  4026                           ; 1 bytes @ 0x0
  4027                           
  4028  0070                     ?_TMR0_ISR:	
  4029                           ; 1 bytes @ 0x0
  4030                           
  4031  0070                     ??_TMR0_ISR:	
  4032                           ; 1 bytes @ 0x0
  4033                           
  4034  0070                     ?_INTERRUPT_InterruptManager:	
  4035                           ; 1 bytes @ 0x0
  4036                           
  4037  0070                     ?_main:	
  4038                           ; 1 bytes @ 0x0
  4039                           
  4040  0070                     ?__Umul8_16:	
  4041                           ; 1 bytes @ 0x0
  4042                           
  4043  0070                     ?___aldiv:	
  4044                           ; 2 bytes @ 0x0
  4045                           
  4046  0070                     ?___fladd:	
  4047                           ; 4 bytes @ 0x0
  4048                           
  4049  0070                     __Umul8_16@multiplicand:	
  4050                           ; 4 bytes @ 0x0
  4051                           
  4052  0070                     ___aldiv@divisor:	
  4053                           ; 1 bytes @ 0x0
  4054                           
  4055  0070                     ___fladd@b:	
  4056                           ; 4 bytes @ 0x0
  4057                           
  4058                           
  4059                           ; 4 bytes @ 0x0
  4060  0070                     	ds	2
  4061  0072                     ??__Umul8_16:	
  4062                           
  4063                           ; 1 bytes @ 0x2
  4064  0072                     	ds	2
  4065  0074                     __Umul8_16@product:	
  4066  0074                     ___aldiv@dividend:	
  4067                           ; 2 bytes @ 0x4
  4068                           
  4069  0074                     ___fladd@a:	
  4070                           ; 4 bytes @ 0x4
  4071                           
  4072                           
  4073                           ; 4 bytes @ 0x4
  4074  0074                     	ds	2
  4075  0076                     __Umul8_16@word_mpld:	
  4076                           
  4077                           ; 2 bytes @ 0x6
  4078  0076                     	ds	2
  4079  0078                     ??___aldiv:	
  4080  0078                     ___fladd@signs:	
  4081                           ; 1 bytes @ 0x8
  4082                           
  4083  0078                     __Umul8_16@multiplier:	
  4084                           ; 1 bytes @ 0x8
  4085                           
  4086                           
  4087                           ; 1 bytes @ 0x8
  4088  0078                     	ds	1
  4089  0079                     ??___lmul:	
  4090  0079                     ??___flmul:	
  4091                           ; 1 bytes @ 0x9
  4092                           
  4093  0079                     ___fladd@aexp:	
  4094                           ; 1 bytes @ 0x9
  4095                           
  4096  0079                     ___lmul@product:	
  4097                           ; 1 bytes @ 0x9
  4098                           
  4099                           
  4100                           ; 4 bytes @ 0x9
  4101  0079                     	ds	1
  4102  007A                     ___fladd@bexp:	
  4103                           
  4104                           ; 1 bytes @ 0xA
  4105  007A                     	ds	1
  4106  007B                     ___fladd@grs:	
  4107                           
  4108                           ; 1 bytes @ 0xB
  4109  007B                     	ds	3
  4110  007E                     ??_IOCCF7_ISR:	
  4111  007E                     ??_speedCalc:	
  4112                           ; 1 bytes @ 0xE
  4113                           
  4114  007E                     ??_PIN_MANAGER_IOC:	
  4115                           ; 1 bytes @ 0xE
  4116                           
  4117  007E                     ??_INTERRUPT_InterruptManager:	
  4118                           ; 1 bytes @ 0xE
  4119                           
  4120                           
  4121                           	psect	cstackBANK0
  4122  0020                     __pcstackBANK0:	
  4123                           ; 1 bytes @ 0xE
  4124                           
  4125  0020                     ??___fladd:	
  4126  0020                     ?___flmul:	
  4127                           ; 1 bytes @ 0x0
  4128                           
  4129  0020                     ___aldiv@counter:	
  4130                           ; 4 bytes @ 0x0
  4131                           
  4132  0020                     ___flmul@b:	
  4133                           ; 1 bytes @ 0x0
  4134                           
  4135                           
  4136                           ; 4 bytes @ 0x0
  4137  0020                     	ds	1
  4138  0021                     ___aldiv@sign:	
  4139                           
  4140                           ; 1 bytes @ 0x1
  4141  0021                     	ds	1
  4142  0022                     ___aldiv@quotient:	
  4143                           
  4144                           ; 4 bytes @ 0x2
  4145  0022                     	ds	2
  4146  0024                     ___flmul@a:	
  4147                           
  4148                           ; 4 bytes @ 0x4
  4149  0024                     	ds	2
  4150  0026                     ?___lmul:	
  4151  0026                     ___lmul@multiplier:	
  4152                           ; 4 bytes @ 0x6
  4153                           
  4154                           
  4155                           ; 4 bytes @ 0x6
  4156  0026                     	ds	2
  4157  0028                     ___flmul@sign:	
  4158                           
  4159                           ; 1 bytes @ 0x8
  4160  0028                     	ds	1
  4161  0029                     ___flmul@grs:	
  4162                           
  4163                           ; 4 bytes @ 0x9
  4164  0029                     	ds	1
  4165  002A                     ___lmul@multiplicand:	
  4166                           
  4167                           ; 4 bytes @ 0xA
  4168  002A                     	ds	3
  4169  002D                     ___flmul@aexp:	
  4170                           
  4171                           ; 1 bytes @ 0xD
  4172  002D                     	ds	1
  4173  002E                     ?___xxtofl:	
  4174  002E                     ___flmul@bexp:	
  4175                           ; 4 bytes @ 0xE
  4176                           
  4177  002E                     ___xxtofl@val:	
  4178                           ; 1 bytes @ 0xE
  4179                           
  4180                           
  4181                           ; 4 bytes @ 0xE
  4182  002E                     	ds	1
  4183  002F                     ___flmul@prod:	
  4184                           
  4185                           ; 4 bytes @ 0xF
  4186  002F                     	ds	3
  4187  0032                     ??___xxtofl:	
  4188                           
  4189                           ; 1 bytes @ 0x12
  4190  0032                     	ds	1
  4191  0033                     ___flmul@temp:	
  4192                           
  4193                           ; 2 bytes @ 0x13
  4194  0033                     	ds	3
  4195  0036                     ___xxtofl@sign:	
  4196                           
  4197                           ; 1 bytes @ 0x16
  4198  0036                     	ds	1
  4199  0037                     ___xxtofl@exp:	
  4200                           
  4201                           ; 1 bytes @ 0x17
  4202  0037                     	ds	1
  4203  0038                     ___xxtofl@arg:	
  4204                           
  4205                           ; 4 bytes @ 0x18
  4206  0038                     	ds	4
  4207  003C                     _speedCalc$1227:	
  4208                           
  4209                           ; 4 bytes @ 0x1C
  4210  003C                     	ds	4
  4211                           
  4212                           	psect	maintext
  4213  0452                     __pmaintext:	
  4214 ;;
  4215 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  4216 ;;
  4217 ;; *************** function _main *****************
  4218 ;; Defined at:
  4219 ;;		line 34 in file "main.c"
  4220 ;; Parameters:    Size  Location     Type
  4221 ;;		None
  4222 ;; Auto vars:     Size  Location     Type
  4223 ;;		None
  4224 ;; Return value:  Size  Location     Type
  4225 ;;                  1    wreg      void 
  4226 ;; Registers used:
  4227 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4228 ;; Tracked objects:
  4229 ;;		On entry : B1F/0
  4230 ;;		On exit  : 0/0
  4231 ;;		Unchanged: 0/0
  4232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4235 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  4236 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  4237 ;;Total ram usage:        2 bytes
  4238 ;; Hardware stack levels required when called:   15
  4239 ;; This function calls:
  4240 ;;		_IOCCF7_SetInterruptHandler
  4241 ;;		_SYSTEM_Initialize
  4242 ;;		_TMR0_SetInterruptHandler
  4243 ;;		___awmod
  4244 ;;		___fldiv
  4245 ;;		___flge
  4246 ;;		___fltol
  4247 ;;		_printf
  4248 ;;		_resetCursor
  4249 ;;		_setCursor
  4250 ;;		_writeString
  4251 ;; This function is called by:
  4252 ;;		Startup code after reset
  4253 ;; This function uses a non-reentrant model
  4254 ;;
  4255                           
  4256                           
  4257                           ;psect for function _main
  4258  0452                     _main:	
  4259                           
  4260                           ;main.c: 37:     SYSTEM_Initialize();
  4261                           
  4262                           ;incstack = 0
  4263                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4264  0452  3196  267A  3184   	fcall	_SYSTEM_Initialize
  4265                           
  4266                           ;main.c: 40:     TMR0_SetInterruptHandler( timerISR ) ;
  4267  0455  30A1               	movlw	low _timerISR
  4268  0456  0021               	movlb	1	; select bank1
  4269  0457  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler^(0+128)
  4270  0458  3016               	movlw	high _timerISR
  4271  0459  00A1               	movwf	(TMR0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  4272  045A  3196  2671  3184   	fcall	_TMR0_SetInterruptHandler
  4273                           
  4274                           ;main.c: 41:     IOCCF7_SetInterruptHandler( speedCalc ) ;
  4275  045D  3021               	movlw	low _speedCalc
  4276  045E  0021               	movlb	1	; select bank1
  4277  045F  00A0               	movwf	IOCCF7_SetInterruptHandler@InterruptHandler^(0+128)
  4278  0460  300B               	movlw	high _speedCalc
  4279  0461  00A1               	movwf	(IOCCF7_SetInterruptHandler@InterruptHandler^(0+128)+1)
  4280  0462  3196  2668  3184   	fcall	_IOCCF7_SetInterruptHandler
  4281                           
  4282                           ;main.c: 44:     _delay((unsigned long)((1000)*(16000000/4000.0))) ;
  4283  0465  3015               	movlw	21
  4284  0466  0022               	movlb	2	; select bank2
  4285  0467  00CF               	movwf	(??_main^(0+256)+1)
  4286  0468  304B               	movlw	75
  4287  0469  00CE               	movwf	??_main^(0+256)
  4288  046A  30BE               	movlw	190
  4289  046B                     u5897:	
  4290  046B  0B89               	decfsz	9,f
  4291  046C  2C6B               	goto	u5897
  4292  046D  0BCE               	decfsz	??_main^(0+256),f
  4293  046E  2C6B               	goto	u5897
  4294  046F  0BCF               	decfsz	(??_main^(0+256)+1),f
  4295  0470  2C6B               	goto	u5897
  4296  0471  0000               	nop
  4297                           
  4298                           ;main.c: 45:     resetCursor() ;
  4299  0472  3196  2645  3184   	fcall	_resetCursor
  4300                           
  4301                           ;main.c: 51:     (INTCONbits.GIE = 1);
  4302  0475  178B               	bsf	11,7	;volatile
  4303                           
  4304                           ;main.c: 52:     (INTCONbits.PEIE = 1);
  4305  0476  170B               	bsf	11,6	;volatile
  4306  0477                     l4275:	
  4307                           
  4308                           ;main.c: 55:         setCursor(1,0) ;
  4309  0477  0021               	movlb	1	; select bank1
  4310  0478  01A1               	clrf	setCursor@b^(0+128)
  4311  0479  3001               	movlw	1
  4312  047A  3188  2074  3184   	fcall	_setCursor
  4313                           
  4314                           ;main.c: 56:         writeString(speedDisp);
  4315  047D  3038               	movlw	(low (_speedDisp| (0+256)))& (0+255)
  4316  047E  3196  26C9  3184   	fcall	_writeString
  4317                           
  4318                           ;main.c: 57:         setCursor(2,0) ;
  4319  0481  0021               	movlb	1	; select bank1
  4320  0482  01A1               	clrf	setCursor@b^(0+128)
  4321  0483  3002               	movlw	2
  4322  0484  3188  2074  3184   	fcall	_setCursor
  4323                           
  4324                           ;main.c: 58:         writeString(distanceDisp);
  4325  0487  302D               	movlw	(low (_distanceDisp| (0+256)))& (0+255)
  4326  0488  3196  26C9  3184   	fcall	_writeString
  4327                           
  4328                           ;main.c: 59:         setCursor(3,0) ;
  4329  048B  0021               	movlb	1	; select bank1
  4330  048C  01A1               	clrf	setCursor@b^(0+128)
  4331  048D  3003               	movlw	3
  4332  048E  3188  2074  3184   	fcall	_setCursor
  4333                           
  4334                           ;main.c: 60:         writeString(hrDisp);
  4335  0491  3020               	movlw	(low (_hrDisp| (0+256)))& (0+255)
  4336  0492  3196  26C9  3184   	fcall	_writeString
  4337                           
  4338                           ;main.c: 61:         setCursor(4,0) ;
  4339  0495  0021               	movlb	1	; select bank1
  4340  0496  01A1               	clrf	setCursor@b^(0+128)
  4341  0497  3004               	movlw	4
  4342  0498  3188  2074  3184   	fcall	_setCursor
  4343                           
  4344                           ;main.c: 73:         setCursor(1,7) ;
  4345  049B  3007               	movlw	7
  4346  049C  0022               	movlb	2	; select bank2
  4347  049D  00CE               	movwf	??_main^(0+256)
  4348  049E  084E               	movf	??_main^(0+256),w
  4349  049F  0021               	movlb	1	; select bank1
  4350  04A0  00A1               	movwf	setCursor@b^(0+128)
  4351  04A1  3001               	movlw	1
  4352  04A2  3188  2074  3184   	fcall	_setCursor
  4353                           
  4354                           ;main.c: 74:         if( counter <= 15000 ){
  4355  04A5  0020               	movlb	0	; select bank0
  4356  04A6  1BDE               	btfsc	_counter+3,7	;volatile
  4357  04A7  2CB4               	goto	l4295
  4358  04A8  085E               	movf	_counter+3,w	;volatile
  4359  04A9  1D03               	btfss	3,2
  4360  04AA  2D1C               	goto	l4303
  4361  04AB  085D               	movf	_counter+2,w	;volatile
  4362  04AC  1D03               	btfss	3,2
  4363  04AD  2D1C               	goto	l4303
  4364  04AE  3099               	movlw	153
  4365  04AF  025B               	subwf	_counter,w	;volatile
  4366  04B0  303A               	movlw	58
  4367  04B1  3B5C               	subwfb	_counter+1,w	;volatile
  4368  04B2  1803               	btfsc	3,0
  4369  04B3  2D1C               	goto	l4303
  4370  04B4                     l4295:	
  4371                           
  4372                           ;main.c: 75:             speedLo = (int)speed % 1 ;
  4373  04B4  01D2               	clrf	_speedLo	;volatile
  4374  04B5  01D3               	clrf	_speedLo+1	;volatile
  4375                           
  4376                           ;main.c: 76:             if( speed >= 10 ){
  4377  04B6  0847               	movf	_speed+3,w	;volatile
  4378  04B7  0021               	movlb	1	; select bank1
  4379  04B8  00A3               	movwf	(___flge@ff1+3)^(0+128)
  4380  04B9  0020               	movlb	0	; select bank0
  4381  04BA  0846               	movf	_speed+2,w	;volatile
  4382  04BB  0021               	movlb	1	; select bank1
  4383  04BC  00A2               	movwf	(___flge@ff1+2)^(0+128)
  4384  04BD  0020               	movlb	0	; select bank0
  4385  04BE  0845               	movf	_speed+1,w	;volatile
  4386  04BF  0021               	movlb	1	; select bank1
  4387  04C0  00A1               	movwf	(___flge@ff1+1)^(0+128)
  4388  04C1  0020               	movlb	0	; select bank0
  4389  04C2  0844               	movf	_speed,w	;volatile
  4390  04C3  0021               	movlb	1	; select bank1
  4391  04C4  00A0               	movwf	___flge@ff1^(0+128)
  4392  04C5  3041               	movlw	65
  4393  04C6  00A7               	movwf	(___flge@ff2+3)^(0+128)
  4394  04C7  3020               	movlw	32
  4395  04C8  00A6               	movwf	(___flge@ff2+2)^(0+128)
  4396  04C9  3000               	movlw	0
  4397  04CA  00A5               	movwf	(___flge@ff2+1)^(0+128)
  4398  04CB  3000               	movlw	0
  4399  04CC  00A4               	movwf	___flge@ff2^(0+128)
  4400  04CD  3189  218D  3184   	fcall	___flge
  4401  04D0  1C03               	btfss	3,0
  4402  04D1  2CF3               	goto	l4301
  4403                           
  4404                           ;main.c: 77:                 printf( "%d kph     ", (int)speed ) ;
  4405  04D2  301B               	movlw	low (STR_1| (0+32768))
  4406  04D3  0022               	movlb	2	; select bank2
  4407  04D4  00C5               	movwf	printf@fmt^(0+256)
  4408  04D5  3098               	movlw	high (STR_1| (0+32768))
  4409  04D6  00C6               	movwf	(printf@fmt^(0+256)+1)
  4410  04D7  0020               	movlb	0	; select bank0
  4411  04D8  0847               	movf	_speed+3,w	;volatile
  4412  04D9  0021               	movlb	1	; select bank1
  4413  04DA  00BD               	movwf	(___fltol@f1+3)^(0+128)
  4414  04DB  0020               	movlb	0	; select bank0
  4415  04DC  0846               	movf	_speed+2,w	;volatile
  4416  04DD  0021               	movlb	1	; select bank1
  4417  04DE  00BC               	movwf	(___fltol@f1+2)^(0+128)
  4418  04DF  0020               	movlb	0	; select bank0
  4419  04E0  0845               	movf	_speed+1,w	;volatile
  4420  04E1  0021               	movlb	1	; select bank1
  4421  04E2  00BB               	movwf	(___fltol@f1+1)^(0+128)
  4422  04E3  0020               	movlb	0	; select bank0
  4423  04E4  0844               	movf	_speed,w	;volatile
  4424  04E5  0021               	movlb	1	; select bank1
  4425  04E6  00BA               	movwf	___fltol@f1^(0+128)
  4426  04E7  3187  278B  3184   	fcall	___fltol
  4427  04EA  0021               	movlb	1	; select bank1
  4428  04EB  083B               	movf	(?___fltol+1)^(0+128),w
  4429  04EC  0022               	movlb	2	; select bank2
  4430  04ED  00C8               	movwf	((?_printf+1)^(0+256)+2)
  4431  04EE  0021               	movlb	1	; select bank1
  4432  04EF  083A               	movf	?___fltol^(0+128),w
  4433  04F0  0022               	movlb	2	; select bank2
  4434  04F1  00C7               	movwf	(?_printf^(0+256)+2)
  4435  04F2  2D21               	goto	L1
  4436  04F3                     l4301:	
  4437                           ;main.c: 78:             }
  4438                           
  4439                           
  4440                           ;main.c: 81:                 printf( "%d.%d kph   " , (int)speed , speedLo ) ;
  4441  04F3  300E               	movlw	low (STR_2| (0+32768))
  4442  04F4  0022               	movlb	2	; select bank2
  4443  04F5  00C5               	movwf	printf@fmt^(0+256)
  4444  04F6  3098               	movlw	high (STR_2| (0+32768))
  4445  04F7  00C6               	movwf	(printf@fmt^(0+256)+1)
  4446  04F8  0020               	movlb	0	; select bank0
  4447  04F9  0847               	movf	_speed+3,w	;volatile
  4448  04FA  0021               	movlb	1	; select bank1
  4449  04FB  00BD               	movwf	(___fltol@f1+3)^(0+128)
  4450  04FC  0020               	movlb	0	; select bank0
  4451  04FD  0846               	movf	_speed+2,w	;volatile
  4452  04FE  0021               	movlb	1	; select bank1
  4453  04FF  00BC               	movwf	(___fltol@f1+2)^(0+128)
  4454  0500  0020               	movlb	0	; select bank0
  4455  0501  0845               	movf	_speed+1,w	;volatile
  4456  0502  0021               	movlb	1	; select bank1
  4457  0503  00BB               	movwf	(___fltol@f1+1)^(0+128)
  4458  0504  0020               	movlb	0	; select bank0
  4459  0505  0844               	movf	_speed,w	;volatile
  4460  0506  0021               	movlb	1	; select bank1
  4461  0507  00BA               	movwf	___fltol@f1^(0+128)
  4462  0508  3187  278B  3184   	fcall	___fltol
  4463  050B  0021               	movlb	1	; select bank1
  4464  050C  083B               	movf	(?___fltol+1)^(0+128),w
  4465  050D  0022               	movlb	2	; select bank2
  4466  050E  00C8               	movwf	((?_printf+1)^(0+256)+2)
  4467  050F  0021               	movlb	1	; select bank1
  4468  0510  083A               	movf	?___fltol^(0+128),w
  4469  0511  0022               	movlb	2	; select bank2
  4470  0512  00C7               	movwf	(?_printf^(0+256)+2)
  4471  0513  0020               	movlb	0	; select bank0
  4472  0514  0853               	movf	_speedLo+1,w	;volatile
  4473  0515  0022               	movlb	2	; select bank2
  4474  0516  00CA               	movwf	((?_printf+1)^(0+256)+4)
  4475  0517  0020               	movlb	0	; select bank0
  4476  0518  0852               	movf	_speedLo,w	;volatile
  4477  0519  0022               	movlb	2	; select bank2
  4478  051A  00C9               	movwf	(?_printf^(0+256)+4)
  4479  051B  2D21               	goto	L1
  4480  051C                     l4303:	
  4481                           
  4482                           ;main.c: 85:             printf( "0 kph        " ) ;
  4483  051C  3000               	movlw	low (STR_3| (0+32768))
  4484  051D  0022               	movlb	2	; select bank2
  4485  051E  00C5               	movwf	printf@fmt^(0+256)
  4486  051F  3098               	movlw	high (STR_3| (0+32768))
  4487  0520  00C6               	movwf	(printf@fmt^(0+256)+1)
  4488  0521                     L1:	
  4489  0521  3196  26B4  3184   	fcall	_printf
  4490                           
  4491                           ;main.c: 89:         setCursor(2,10) ;
  4492  0524  300A               	movlw	10
  4493  0525  0022               	movlb	2	; select bank2
  4494  0526  00CE               	movwf	??_main^(0+256)
  4495  0527  084E               	movf	??_main^(0+256),w
  4496  0528  0021               	movlb	1	; select bank1
  4497  0529  00A1               	movwf	setCursor@b^(0+128)
  4498  052A  3002               	movlw	2
  4499  052B  3188  2074  3184   	fcall	_setCursor
  4500                           
  4501                           ;main.c: 90:         if( distance > 1000 ){
  4502  052E  3044               	movlw	68
  4503  052F  0021               	movlb	1	; select bank1
  4504  0530  00A3               	movwf	(___flge@ff1+3)^(0+128)
  4505  0531  307A               	movlw	122
  4506  0532  00A2               	movwf	(___flge@ff1+2)^(0+128)
  4507  0533  3000               	movlw	0
  4508  0534  00A1               	movwf	(___flge@ff1+1)^(0+128)
  4509  0535  3000               	movlw	0
  4510  0536  00A0               	movwf	___flge@ff1^(0+128)
  4511  0537  0020               	movlb	0	; select bank0
  4512  0538  0843               	movf	_distance+3,w	;volatile
  4513  0539  0021               	movlb	1	; select bank1
  4514  053A  00A7               	movwf	(___flge@ff2+3)^(0+128)
  4515  053B  0020               	movlb	0	; select bank0
  4516  053C  0842               	movf	_distance+2,w	;volatile
  4517  053D  0021               	movlb	1	; select bank1
  4518  053E  00A6               	movwf	(___flge@ff2+2)^(0+128)
  4519  053F  0020               	movlb	0	; select bank0
  4520  0540  0841               	movf	_distance+1,w	;volatile
  4521  0541  0021               	movlb	1	; select bank1
  4522  0542  00A5               	movwf	(___flge@ff2+1)^(0+128)
  4523  0543  0020               	movlb	0	; select bank0
  4524  0544  0840               	movf	_distance,w	;volatile
  4525  0545  0021               	movlb	1	; select bank1
  4526  0546  00A4               	movwf	___flge@ff2^(0+128)
  4527  0547  3189  218D  3184   	fcall	___flge
  4528  054A  1803               	btfsc	3,0
  4529  054B  2DB8               	goto	l4313
  4530                           
  4531                           ;main.c: 91:             distLo = (int)distance % 1000 ;
  4532  054C  30E8               	movlw	232
  4533  054D  0021               	movlb	1	; select bank1
  4534  054E  00C5               	movwf	___awmod@divisor^(0+128)
  4535  054F  3003               	movlw	3
  4536  0550  00C6               	movwf	(___awmod@divisor^(0+128)+1)
  4537  0551  0020               	movlb	0	; select bank0
  4538  0552  0843               	movf	_distance+3,w	;volatile
  4539  0553  0021               	movlb	1	; select bank1
  4540  0554  00BD               	movwf	(___fltol@f1+3)^(0+128)
  4541  0555  0020               	movlb	0	; select bank0
  4542  0556  0842               	movf	_distance+2,w	;volatile
  4543  0557  0021               	movlb	1	; select bank1
  4544  0558  00BC               	movwf	(___fltol@f1+2)^(0+128)
  4545  0559  0020               	movlb	0	; select bank0
  4546  055A  0841               	movf	_distance+1,w	;volatile
  4547  055B  0021               	movlb	1	; select bank1
  4548  055C  00BB               	movwf	(___fltol@f1+1)^(0+128)
  4549  055D  0020               	movlb	0	; select bank0
  4550  055E  0840               	movf	_distance,w	;volatile
  4551  055F  0021               	movlb	1	; select bank1
  4552  0560  00BA               	movwf	___fltol@f1^(0+128)
  4553  0561  3187  278B  3184   	fcall	___fltol
  4554  0564  0021               	movlb	1	; select bank1
  4555  0565  083B               	movf	(?___fltol+1)^(0+128),w
  4556  0566  00C8               	movwf	(___awmod@dividend+1)^(0+128)
  4557  0567  083A               	movf	?___fltol^(0+128),w
  4558  0568  00C7               	movwf	___awmod@dividend^(0+128)
  4559  0569  3188  20F1  3184   	fcall	___awmod
  4560  056C  0021               	movlb	1	; select bank1
  4561  056D  0846               	movf	(?___awmod+1)^(0+128),w
  4562  056E  0020               	movlb	0	; select bank0
  4563  056F  00D5               	movwf	_distLo+1	;volatile
  4564  0570  0021               	movlb	1	; select bank1
  4565  0571  0845               	movf	?___awmod^(0+128),w
  4566  0572  0020               	movlb	0	; select bank0
  4567  0573  00D4               	movwf	_distLo	;volatile
  4568                           
  4569                           ;main.c: 92:             distHi = distance / 1000 ;
  4570  0574  0843               	movf	_distance+3,w	;volatile
  4571  0575  0021               	movlb	1	; select bank1
  4572  0576  00A7               	movwf	(___fldiv@b+3)^(0+128)
  4573  0577  0020               	movlb	0	; select bank0
  4574  0578  0842               	movf	_distance+2,w	;volatile
  4575  0579  0021               	movlb	1	; select bank1
  4576  057A  00A6               	movwf	(___fldiv@b+2)^(0+128)
  4577  057B  0020               	movlb	0	; select bank0
  4578  057C  0841               	movf	_distance+1,w	;volatile
  4579  057D  0021               	movlb	1	; select bank1
  4580  057E  00A5               	movwf	(___fldiv@b+1)^(0+128)
  4581  057F  0020               	movlb	0	; select bank0
  4582  0580  0840               	movf	_distance,w	;volatile
  4583  0581  0021               	movlb	1	; select bank1
  4584  0582  00A4               	movwf	___fldiv@b^(0+128)
  4585  0583  3044               	movlw	68
  4586  0584  00A3               	movwf	(___fldiv@a+3)^(0+128)
  4587  0585  307A               	movlw	122
  4588  0586  00A2               	movwf	(___fldiv@a+2)^(0+128)
  4589  0587  3000               	movlw	0
  4590  0588  00A1               	movwf	(___fldiv@a+1)^(0+128)
  4591  0589  3000               	movlw	0
  4592  058A  00A0               	movwf	___fldiv@a^(0+128)
  4593  058B  3186  2611  3184   	fcall	___fldiv
  4594  058E  0021               	movlb	1	; select bank1
  4595  058F  0823               	movf	(?___fldiv+3)^(0+128),w
  4596  0590  00BD               	movwf	(___fltol@f1+3)^(0+128)
  4597  0591  0822               	movf	(?___fldiv+2)^(0+128),w
  4598  0592  00BC               	movwf	(___fltol@f1+2)^(0+128)
  4599  0593  0821               	movf	(?___fldiv+1)^(0+128),w
  4600  0594  00BB               	movwf	(___fltol@f1+1)^(0+128)
  4601  0595  0820               	movf	?___fldiv^(0+128),w
  4602  0596  00BA               	movwf	___fltol@f1^(0+128)
  4603  0597  3187  278B  3184   	fcall	___fltol
  4604  059A  0021               	movlb	1	; select bank1
  4605  059B  083B               	movf	(?___fltol+1)^(0+128),w
  4606  059C  0020               	movlb	0	; select bank0
  4607  059D  00D7               	movwf	_distHi+1	;volatile
  4608  059E  0021               	movlb	1	; select bank1
  4609  059F  083A               	movf	?___fltol^(0+128),w
  4610  05A0  0020               	movlb	0	; select bank0
  4611  05A1  00D6               	movwf	_distHi	;volatile
  4612                           
  4613                           ;main.c: 93:             printf( "%d.%d km" , distHi, distLo );
  4614  05A2  303B               	movlw	low (STR_4| (0+32768))
  4615  05A3  0022               	movlb	2	; select bank2
  4616  05A4  00C5               	movwf	printf@fmt^(0+256)
  4617  05A5  3098               	movlw	high (STR_4| (0+32768))
  4618  05A6  00C6               	movwf	(printf@fmt^(0+256)+1)
  4619  05A7  0020               	movlb	0	; select bank0
  4620  05A8  0857               	movf	_distHi+1,w	;volatile
  4621  05A9  0022               	movlb	2	; select bank2
  4622  05AA  00C8               	movwf	((?_printf+1)^(0+256)+2)
  4623  05AB  0020               	movlb	0	; select bank0
  4624  05AC  0856               	movf	_distHi,w	;volatile
  4625  05AD  0022               	movlb	2	; select bank2
  4626  05AE  00C7               	movwf	(?_printf^(0+256)+2)
  4627  05AF  0020               	movlb	0	; select bank0
  4628  05B0  0855               	movf	_distLo+1,w	;volatile
  4629  05B1  0022               	movlb	2	; select bank2
  4630  05B2  00CA               	movwf	((?_printf+1)^(0+256)+4)
  4631  05B3  0020               	movlb	0	; select bank0
  4632  05B4  0854               	movf	_distLo,w	;volatile
  4633  05B5  0022               	movlb	2	; select bank2
  4634  05B6  00C9               	movwf	(?_printf^(0+256)+4)
  4635  05B7  2DD8               	goto	L2
  4636  05B8                     l4313:	
  4637                           ;main.c: 94:         }
  4638                           
  4639                           
  4640                           ;main.c: 96:             printf( "%d m     " , (int)distance ) ;
  4641  05B8  3027               	movlw	low (STR_5| (0+32768))
  4642  05B9  0022               	movlb	2	; select bank2
  4643  05BA  00C5               	movwf	printf@fmt^(0+256)
  4644  05BB  3098               	movlw	high (STR_5| (0+32768))
  4645  05BC  00C6               	movwf	(printf@fmt^(0+256)+1)
  4646  05BD  0020               	movlb	0	; select bank0
  4647  05BE  0843               	movf	_distance+3,w	;volatile
  4648  05BF  0021               	movlb	1	; select bank1
  4649  05C0  00BD               	movwf	(___fltol@f1+3)^(0+128)
  4650  05C1  0020               	movlb	0	; select bank0
  4651  05C2  0842               	movf	_distance+2,w	;volatile
  4652  05C3  0021               	movlb	1	; select bank1
  4653  05C4  00BC               	movwf	(___fltol@f1+2)^(0+128)
  4654  05C5  0020               	movlb	0	; select bank0
  4655  05C6  0841               	movf	_distance+1,w	;volatile
  4656  05C7  0021               	movlb	1	; select bank1
  4657  05C8  00BB               	movwf	(___fltol@f1+1)^(0+128)
  4658  05C9  0020               	movlb	0	; select bank0
  4659  05CA  0840               	movf	_distance,w	;volatile
  4660  05CB  0021               	movlb	1	; select bank1
  4661  05CC  00BA               	movwf	___fltol@f1^(0+128)
  4662  05CD  3187  278B  3184   	fcall	___fltol
  4663  05D0  0021               	movlb	1	; select bank1
  4664  05D1  083B               	movf	(?___fltol+1)^(0+128),w
  4665  05D2  0022               	movlb	2	; select bank2
  4666  05D3  00C8               	movwf	((?_printf+1)^(0+256)+2)
  4667  05D4  0021               	movlb	1	; select bank1
  4668  05D5  083A               	movf	?___fltol^(0+128),w
  4669  05D6  0022               	movlb	2	; select bank2
  4670  05D7  00C7               	movwf	(?_printf^(0+256)+2)
  4671  05D8                     L2:	
  4672  05D8  3196  26B4  3184   	fcall	_printf
  4673                           
  4674                           ;main.c: 100:         setCursor(3,13) ;
  4675  05DB  300D               	movlw	13
  4676  05DC  0022               	movlb	2	; select bank2
  4677  05DD  00CE               	movwf	??_main^(0+256)
  4678  05DE  084E               	movf	??_main^(0+256),w
  4679  05DF  0021               	movlb	1	; select bank1
  4680  05E0  00A1               	movwf	setCursor@b^(0+128)
  4681  05E1  3003               	movlw	3
  4682  05E2  3188  2074  3184   	fcall	_setCursor
  4683                           
  4684                           ;main.c: 101:         hrInt = heartRate ;
  4685  05E5  0022               	movlb	2	; select bank2
  4686  05E6  0853               	movf	(_heartRate+3)^(0+256),w	;volatile
  4687  05E7  0021               	movlb	1	; select bank1
  4688  05E8  00BD               	movwf	(___fltol@f1+3)^(0+128)
  4689  05E9  0022               	movlb	2	; select bank2
  4690  05EA  0852               	movf	(_heartRate+2)^(0+256),w	;volatile
  4691  05EB  0021               	movlb	1	; select bank1
  4692  05EC  00BC               	movwf	(___fltol@f1+2)^(0+128)
  4693  05ED  0022               	movlb	2	; select bank2
  4694  05EE  0851               	movf	(_heartRate+1)^(0+256),w	;volatile
  4695  05EF  0021               	movlb	1	; select bank1
  4696  05F0  00BB               	movwf	(___fltol@f1+1)^(0+128)
  4697  05F1  0022               	movlb	2	; select bank2
  4698  05F2  0850               	movf	_heartRate^(0+256),w	;volatile
  4699  05F3  0021               	movlb	1	; select bank1
  4700  05F4  00BA               	movwf	___fltol@f1^(0+128)
  4701  05F5  3187  278B  3184   	fcall	___fltol
  4702  05F8  0021               	movlb	1	; select bank1
  4703  05F9  083B               	movf	(?___fltol+1)^(0+128),w
  4704  05FA  0020               	movlb	0	; select bank0
  4705  05FB  00D1               	movwf	_hrInt+1	;volatile
  4706  05FC  0021               	movlb	1	; select bank1
  4707  05FD  083A               	movf	?___fltol^(0+128),w
  4708  05FE  0020               	movlb	0	; select bank0
  4709  05FF  00D0               	movwf	_hrInt	;volatile
  4710                           
  4711                           ;main.c: 102:         printf( "%d bpm   " , hrInt ) ;
  4712  0600  3031               	movlw	low (STR_6| (0+32768))
  4713  0601  0022               	movlb	2	; select bank2
  4714  0602  00C5               	movwf	printf@fmt^(0+256)
  4715  0603  3098               	movlw	high (STR_6| (0+32768))
  4716  0604  00C6               	movwf	(printf@fmt^(0+256)+1)
  4717  0605  0020               	movlb	0	; select bank0
  4718  0606  0851               	movf	_hrInt+1,w	;volatile
  4719  0607  0022               	movlb	2	; select bank2
  4720  0608  00C8               	movwf	((?_printf+1)^(0+256)+2)
  4721  0609  0020               	movlb	0	; select bank0
  4722  060A  0850               	movf	_hrInt,w	;volatile
  4723  060B  0022               	movlb	2	; select bank2
  4724  060C  00C7               	movwf	(?_printf^(0+256)+2)
  4725  060D  3196  26B4  3184   	fcall	_printf
  4726  0610  2C77               	goto	l4275
  4727  0611                     __end_of_main:	
  4728                           
  4729                           	psect	text1
  4730  16C9                     __ptext1:	
  4731 ;; *************** function _writeString *****************
  4732 ;; Defined at:
  4733 ;;		line 61 in file "displayOptions.c"
  4734 ;; Parameters:    Size  Location     Type
  4735 ;;  string          1    wreg     PTR unsigned char 
  4736 ;;		 -> hrDisp(13), distanceDisp(11), speedDisp(8), 
  4737 ;; Auto vars:     Size  Location     Type
  4738 ;;  string          1   24[BANK1 ] PTR unsigned char 
  4739 ;;		 -> hrDisp(13), distanceDisp(11), speedDisp(8), 
  4740 ;; Return value:  Size  Location     Type
  4741 ;;                  1    wreg      void 
  4742 ;; Registers used:
  4743 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4744 ;; Tracked objects:
  4745 ;;		On entry : 0/0
  4746 ;;		On exit  : 0/0
  4747 ;;		Unchanged: 0/0
  4748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4750 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4752 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4753 ;;Total ram usage:        1 bytes
  4754 ;; Hardware stack levels used:    1
  4755 ;; Hardware stack levels required when called:   11
  4756 ;; This function calls:
  4757 ;;		_EUSART_is_tx_ready
  4758 ;;		_puts
  4759 ;; This function is called by:
  4760 ;;		_main
  4761 ;; This function uses a non-reentrant model
  4762 ;;
  4763                           
  4764                           
  4765                           ;psect for function _writeString
  4766  16C9                     _writeString:	
  4767                           
  4768                           ;incstack = 0
  4769                           ; Regs used in _writeString: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4770                           ;writeString@string stored from wreg
  4771  16C9  0021               	movlb	1	; select bank1
  4772  16CA  00B8               	movwf	writeString@string^(0+128)
  4773  16CB                     l3989:	
  4774                           ;displayOptions.c: 62:     while( !EUSART_is_tx_ready() ) ;
  4775                           
  4776  16CB  3196  2693  3196   	fcall	_EUSART_is_tx_ready
  4777  16CE  3A00               	xorlw	0
  4778  16CF  1903               	skipnz
  4779  16D0  2ECB               	goto	l3989
  4780                           
  4781                           ;displayOptions.c: 63:     puts( string );
  4782  16D1  0021               	movlb	1	; select bank1
  4783  16D2  0838               	movf	writeString@string^(0+128),w
  4784  16D3  00B3               	movwf	puts@s^(0+128)
  4785  16D4  3001               	movlw	1
  4786  16D5  00B4               	movwf	(puts@s+1)^(0+128)
  4787  16D6  3197  2728  3196   	fcall	_puts
  4788                           
  4789                           ;displayOptions.c: 64:     _delay((unsigned long)((200)*(16000000/4000000.0)));
  4790  16D9  30A0               	movlw	160
  4791  16DA                     u5907:	
  4792  16DA  3200               	nop2
  4793  16DB  0B89               	decfsz	9,f
  4794  16DC  2EDA               	goto	u5907
  4795  16DD  0008               	return
  4796  16DE                     __end_of_writeString:	
  4797                           
  4798                           	psect	text2
  4799  0874                     __ptext2:	
  4800 ;; *************** function _setCursor *****************
  4801 ;; Defined at:
  4802 ;;		line 73 in file "displayOptions.c"
  4803 ;; Parameters:    Size  Location     Type
  4804 ;;  a               1    wreg     unsigned char 
  4805 ;;  b               1    1[BANK1 ] unsigned char 
  4806 ;; Auto vars:     Size  Location     Type
  4807 ;;  a               1    4[BANK1 ] unsigned char 
  4808 ;; Return value:  Size  Location     Type
  4809 ;;                  1    wreg      void 
  4810 ;; Registers used:
  4811 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4812 ;; Tracked objects:
  4813 ;;		On entry : 0/0
  4814 ;;		On exit  : 0/0
  4815 ;;		Unchanged: 0/0
  4816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4817 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4818 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4819 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4820 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4821 ;;Total ram usage:        4 bytes
  4822 ;; Hardware stack levels used:    1
  4823 ;; Hardware stack levels required when called:    7
  4824 ;; This function calls:
  4825 ;;		_EUSART_Write
  4826 ;;		_EUSART_is_tx_ready
  4827 ;; This function is called by:
  4828 ;;		_main
  4829 ;; This function uses a non-reentrant model
  4830 ;;
  4831                           
  4832                           
  4833                           ;psect for function _setCursor
  4834  0874                     _setCursor:	
  4835                           
  4836                           ;incstack = 0
  4837                           ; Regs used in _setCursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4838                           ;setCursor@a stored from wreg
  4839  0874  0021               	movlb	1	; select bank1
  4840  0875  00A4               	movwf	setCursor@a^(0+128)
  4841  0876                     l3963:	
  4842                           ;displayOptions.c: 74:     while( !EUSART_is_tx_ready() ) ;
  4843                           
  4844  0876  3196  2693  3188   	fcall	_EUSART_is_tx_ready
  4845  0879  3A00               	xorlw	0
  4846  087A  1903               	skipnz
  4847  087B  2876               	goto	l3963
  4848                           
  4849                           ;displayOptions.c: 75:     EUSART_Write( 254 );
  4850  087C  30FE               	movlw	254
  4851  087D  3188  2000  3188   	fcall	_EUSART_Write
  4852                           
  4853                           ;displayOptions.c: 76:     _delay((unsigned long)((200)*(16000000/4000000.0)));
  4854  0880  30A0               	movlw	160
  4855  0881                     u5917:	
  4856  0881  3200               	nop2
  4857  0882  0B89               	decfsz	9,f
  4858  0883  2881               	goto	u5917
  4859                           
  4860                           ;displayOptions.c: 77:     switch ( a ){
  4861  0884  2899               	goto	l3979
  4862  0885                     l3969:	
  4863                           
  4864                           ;displayOptions.c: 79:         {;displayOptions.c: 80:             EUSART_Write(128 + 0 
      +                          + b) ;
  4865  0885  0821               	movf	setCursor@b^(0+128),w
  4866  0886  3E80               	addlw	128
  4867  0887  3188  2000         	fcall	_EUSART_Write
  4868                           
  4869                           ;displayOptions.c: 81:             break ;
  4870  0889  0008               	return
  4871  088A                     l3971:	
  4872                           
  4873                           ;displayOptions.c: 84:         {;displayOptions.c: 85:            EUSART_Write(128 + 64 
      +                          + b) ;
  4874  088A  0821               	movf	setCursor@b^(0+128),w
  4875  088B  3EC0               	addlw	192
  4876  088C  3188  2000         	fcall	_EUSART_Write
  4877                           
  4878                           ;displayOptions.c: 86:            break ;
  4879  088E  0008               	return
  4880  088F                     l3973:	
  4881                           
  4882                           ;displayOptions.c: 89:         {;displayOptions.c: 90:             EUSART_Write(128 + 20
      +                           + b) ;
  4883  088F  0821               	movf	setCursor@b^(0+128),w
  4884  0890  3E94               	addlw	148
  4885  0891  3188  2000         	fcall	_EUSART_Write
  4886                           
  4887                           ;displayOptions.c: 91:             break ;
  4888  0893  0008               	return
  4889  0894                     l3975:	
  4890                           
  4891                           ;displayOptions.c: 94:         {;displayOptions.c: 95:             EUSART_Write(128 + 84
      +                           + b) ;
  4892  0894  0821               	movf	setCursor@b^(0+128),w
  4893  0895  3ED4               	addlw	212
  4894  0896  3188  2000         	fcall	_EUSART_Write
  4895                           
  4896                           ;displayOptions.c: 96:             break ;
  4897  0898  0008               	return
  4898  0899                     l3979:	
  4899  0899  0021               	movlb	1	; select bank1
  4900  089A  0824               	movf	setCursor@a^(0+128),w
  4901  089B  00A2               	movwf	??_setCursor^(0+128)
  4902  089C  01A3               	clrf	(??_setCursor^(0+128)+1)
  4903                           
  4904                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4905                           ; Switch size 1, requested type "simple"
  4906                           ; Number of cases is 1, Range of values is 0 to 0
  4907                           ; switch strategies available:
  4908                           ; Name         Instructions Cycles
  4909                           ; simple_byte            4     3 (average)
  4910                           ; direct_byte            8     6 (fixed)
  4911                           ; jumptable            260     6 (fixed)
  4912                           ;	Chosen strategy is simple_byte
  4913  089D  0823               	movf	(??_setCursor+1)^(0+128),w
  4914  089E  3A00               	xorlw	0	; case 0
  4915  089F  1903               	skipnz
  4916  08A0  28A2               	goto	l4363
  4917  08A1  28B0               	goto	l373
  4918  08A2                     l4363:	
  4919                           
  4920                           ; Switch size 1, requested type "simple"
  4921                           ; Number of cases is 4, Range of values is 1 to 4
  4922                           ; switch strategies available:
  4923                           ; Name         Instructions Cycles
  4924                           ; simple_byte           13     7 (average)
  4925                           ; direct_byte           17     9 (fixed)
  4926                           ; jumptable            263     9 (fixed)
  4927                           ;	Chosen strategy is simple_byte
  4928  08A2  0822               	movf	??_setCursor^(0+128),w
  4929  08A3  3A01               	xorlw	1	; case 1
  4930  08A4  1903               	skipnz
  4931  08A5  2885               	goto	l3969
  4932  08A6  3A03               	xorlw	3	; case 2
  4933  08A7  1903               	skipnz
  4934  08A8  288A               	goto	l3971
  4935  08A9  3A01               	xorlw	1	; case 3
  4936  08AA  1903               	skipnz
  4937  08AB  288F               	goto	l3973
  4938  08AC  3A07               	xorlw	7	; case 4
  4939  08AD  1903               	skipnz
  4940  08AE  2894               	goto	l3975
  4941  08AF  28B0               	goto	l373
  4942  08B0                     l373:	
  4943  08B0  0008               	return
  4944  08B1                     __end_of_setCursor:	
  4945                           
  4946                           	psect	text3
  4947  1693                     __ptext3:	
  4948 ;; *************** function _EUSART_is_tx_ready *****************
  4949 ;; Defined at:
  4950 ;;		line 93 in file "mcc_generated_files/eusart.c"
  4951 ;; Parameters:    Size  Location     Type
  4952 ;;		None
  4953 ;; Auto vars:     Size  Location     Type
  4954 ;;		None
  4955 ;; Return value:  Size  Location     Type
  4956 ;;                  1    wreg      _Bool 
  4957 ;; Registers used:
  4958 ;;		wreg, status,2
  4959 ;; Tracked objects:
  4960 ;;		On entry : 0/0
  4961 ;;		On exit  : 0/0
  4962 ;;		Unchanged: 0/0
  4963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4965 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4967 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4968 ;;Total ram usage:        1 bytes
  4969 ;; Hardware stack levels used:    1
  4970 ;; Hardware stack levels required when called:    6
  4971 ;; This function calls:
  4972 ;;		Nothing
  4973 ;; This function is called by:
  4974 ;;		_writeString
  4975 ;;		_setCursor
  4976 ;;		_backlightBrightness
  4977 ;;		_writePrintf
  4978 ;; This function uses a non-reentrant model
  4979 ;;
  4980                           
  4981                           
  4982                           ;psect for function _EUSART_is_tx_ready
  4983  1693                     _EUSART_is_tx_ready:	
  4984                           
  4985                           ;mcc_generated_files/eusart.c: 95:     return (_Bool)(PIR1bits.TXIF && TX1STAbits.TXEN);
  4986                           
  4987                           ;incstack = 0
  4988                           ; Regs used in _EUSART_is_tx_ready: [wreg+status,2]
  4989  1693  0021               	movlb	1	; select bank1
  4990  1694  01A0               	clrf	_EUSART_is_tx_ready$167^(0+128)
  4991  1695  0020               	movlb	0	; select bank0
  4992  1696  1E10               	btfss	16,4	;volatile
  4993  1697  2E9E               	goto	l3877
  4994  1698  0023               	movlb	3	; select bank3
  4995  1699  1E9E               	btfss	30,5	;volatile
  4996  169A  2E9E               	goto	l3877
  4997  169B  0021               	movlb	1	; select bank1
  4998  169C  01A0               	clrf	_EUSART_is_tx_ready$167^(0+128)
  4999  169D  0AA0               	incf	_EUSART_is_tx_ready$167^(0+128),f
  5000  169E                     l3877:	
  5001  169E  0021               	movlb	1	; select bank1
  5002  169F  0820               	movf	_EUSART_is_tx_ready$167^(0+128),w
  5003  16A0  0008               	return
  5004  16A1                     __end_of_EUSART_is_tx_ready:	
  5005                           
  5006                           	psect	text4
  5007  1645                     __ptext4:	
  5008 ;; *************** function _resetCursor *****************
  5009 ;; Defined at:
  5010 ;;		line 57 in file "displayOptions.c"
  5011 ;; Parameters:    Size  Location     Type
  5012 ;;		None
  5013 ;; Auto vars:     Size  Location     Type
  5014 ;;		None
  5015 ;; Return value:  Size  Location     Type
  5016 ;;                  1    wreg      void 
  5017 ;; Registers used:
  5018 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5019 ;; Tracked objects:
  5020 ;;		On entry : 0/0
  5021 ;;		On exit  : 0/0
  5022 ;;		Unchanged: 0/0
  5023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5028 ;;Total ram usage:        0 bytes
  5029 ;; Hardware stack levels used:    1
  5030 ;; Hardware stack levels required when called:   11
  5031 ;; This function calls:
  5032 ;;		_puts
  5033 ;; This function is called by:
  5034 ;;		_main
  5035 ;; This function uses a non-reentrant model
  5036 ;;
  5037                           
  5038                           
  5039                           ;psect for function _resetCursor
  5040  1645                     _resetCursor:	
  5041                           
  5042                           ;displayOptions.c: 58:     puts("|-");
  5043                           
  5044                           ;incstack = 0
  5045                           ; Regs used in _resetCursor: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5046  1645  3044               	movlw	low (STR_7| (0+32768))
  5047  1646  0021               	movlb	1	; select bank1
  5048  1647  00B3               	movwf	puts@s^(0+128)
  5049  1648  3098               	movlw	high (STR_7| (0+32768))
  5050  1649  00B4               	movwf	(puts@s^(0+128)+1)
  5051  164A  3197  2728         	fcall	_puts
  5052  164C  0008               	return
  5053  164D                     __end_of_resetCursor:	
  5054                           
  5055                           	psect	text5
  5056  1728                     __ptext5:	
  5057 ;; *************** function _puts *****************
  5058 ;; Defined at:
  5059 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\puts.c"
  5060 ;; Parameters:    Size  Location     Type
  5061 ;;  s               2   19[BANK1 ] PTR const unsigned char 
  5062 ;;		 -> STR_7(3), hrDisp(13), distanceDisp(11), speedDisp(8), 
  5063 ;; Auto vars:     Size  Location     Type
  5064 ;;  r               2    0        int 
  5065 ;; Return value:  Size  Location     Type
  5066 ;;                  2   19[BANK1 ] int 
  5067 ;; Registers used:
  5068 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5069 ;; Tracked objects:
  5070 ;;		On entry : 0/0
  5071 ;;		On exit  : 0/0
  5072 ;;		Unchanged: 0/0
  5073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5074 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5075 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5077 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  5078 ;;Total ram usage:        5 bytes
  5079 ;; Hardware stack levels used:    1
  5080 ;; Hardware stack levels required when called:   10
  5081 ;; This function calls:
  5082 ;;		_fputc
  5083 ;;		_fputs
  5084 ;; This function is called by:
  5085 ;;		_resetCursor
  5086 ;;		_writeString
  5087 ;; This function uses a non-reentrant model
  5088 ;;
  5089                           
  5090                           
  5091                           ;psect for function _puts
  5092  1728                     _puts:	
  5093                           
  5094                           ;incstack = 0
  5095                           ; Regs used in _puts: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5096  1728  0021               	movlb	1	; select bank1
  5097  1729  01B7               	clrf	_puts$1046^(0+128)
  5098  172A  0AB7               	incf	_puts$1046^(0+128),f
  5099  172B  0834               	movf	(puts@s+1)^(0+128),w
  5100  172C  00AB               	movwf	(fputs@s+1)^(0+128)
  5101  172D  0833               	movf	puts@s^(0+128),w
  5102  172E  00AA               	movwf	fputs@s^(0+128)
  5103  172F  01AC               	clrf	fputs@fp^(0+128)
  5104  1730  3197  27A7  3197   	fcall	_fputs
  5105  1733  0021               	movlb	1	; select bank1
  5106  1734  1BAB               	btfsc	(?_fputs+1)^(0+128),7
  5107  1735  0008               	return
  5108  1736  300A               	movlw	10
  5109  1737  00A2               	movwf	fputc@c^(0+128)
  5110  1738  3000               	movlw	0
  5111  1739  00A3               	movwf	(fputc@c^(0+128)+1)
  5112  173A  01A4               	clrf	fputc@fp^(0+128)
  5113  173B  3188  20B1  3197   	fcall	_fputc
  5114  173E  0021               	movlb	1	; select bank1
  5115  173F  1BA3               	btfsc	(?_fputc+1)^(0+128),7
  5116  1740  0008               	return
  5117  1741  01B7               	clrf	_puts$1046^(0+128)
  5118  1742  0008               	return
  5119  1743                     __end_of_puts:	
  5120                           
  5121                           	psect	text6
  5122  16B4                     __ptext6:	
  5123 ;; *************** function _printf *****************
  5124 ;; Defined at:
  5125 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  5126 ;; Parameters:    Size  Location     Type
  5127 ;;  fmt             2    5[BANK2 ] PTR const unsigned char 
  5128 ;;		 -> STR_6(10), STR_5(10), STR_4(9), STR_3(14), 
  5129 ;;		 -> STR_2(13), STR_1(12), 
  5130 ;; Auto vars:     Size  Location     Type
  5131 ;;  ret             2    0        int 
  5132 ;;  ap              1   13[BANK2 ] PTR void [1]
  5133 ;;		 -> ?_printf(2), 
  5134 ;; Return value:  Size  Location     Type
  5135 ;;                  2    5[BANK2 ] int 
  5136 ;; Registers used:
  5137 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5138 ;; Tracked objects:
  5139 ;;		On entry : 0/0
  5140 ;;		On exit  : 0/0
  5141 ;;		Unchanged: 0/0
  5142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5143 ;;      Params:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0
  5144 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  5145 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5146 ;;      Totals:         0       0       1       9       0       0       0       0       0       0       0       0       
      +0       0
  5147 ;;Total ram usage:       10 bytes
  5148 ;; Hardware stack levels used:    1
  5149 ;; Hardware stack levels required when called:   14
  5150 ;; This function calls:
  5151 ;;		_vfprintf
  5152 ;; This function is called by:
  5153 ;;		_main
  5154 ;;		_writePrintf
  5155 ;; This function uses a non-reentrant model
  5156 ;;
  5157                           
  5158                           
  5159                           ;psect for function _printf
  5160  16B4                     _printf:	
  5161                           
  5162                           ;incstack = 0
  5163                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5164  16B4  3047               	movlw	(low ((?_printf| (0+256)+2)))& (0+255)
  5165  16B5  0021               	movlb	1	; select bank1
  5166  16B6  00EF               	movwf	??_printf^(0+128)
  5167  16B7  086F               	movf	??_printf^(0+128),w
  5168  16B8  0022               	movlb	2	; select bank2
  5169  16B9  00CD               	movwf	printf@ap^(0+256)
  5170  16BA  0846               	movf	(printf@fmt+1)^(0+256),w
  5171  16BB  0021               	movlb	1	; select bank1
  5172  16BC  00ED               	movwf	(vfprintf@fmt+1)^(0+128)
  5173  16BD  0022               	movlb	2	; select bank2
  5174  16BE  0845               	movf	printf@fmt^(0+256),w
  5175  16BF  0021               	movlb	1	; select bank1
  5176  16C0  00EC               	movwf	vfprintf@fmt^(0+128)
  5177  16C1  304D               	movlw	(low (printf@ap| (0+256)))& (0+255)
  5178  16C2  00EF               	movwf	??_printf^(0+128)
  5179  16C3  086F               	movf	??_printf^(0+128),w
  5180  16C4  00EE               	movwf	vfprintf@ap^(0+128)
  5181  16C5  3000               	movlw	0
  5182  16C6  3188  203D         	fcall	_vfprintf
  5183  16C8  0008               	return
  5184  16C9                     __end_of_printf:	
  5185                           
  5186                           	psect	text7
  5187  083D                     __ptext7:	
  5188 ;; *************** function _vfprintf *****************
  5189 ;; Defined at:
  5190 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5191 ;; Parameters:    Size  Location     Type
  5192 ;;  fp              1    wreg     PTR struct _IO_FILE
  5193 ;;		 -> NULL(0), 
  5194 ;;  fmt             2   76[BANK1 ] PTR const unsigned char 
  5195 ;;		 -> STR_6(10), STR_5(10), STR_4(9), STR_3(14), 
  5196 ;;		 -> STR_2(13), STR_1(12), 
  5197 ;;  ap              1   78[BANK1 ] PTR PTR void 
  5198 ;;		 -> printf@ap(1), 
  5199 ;; Auto vars:     Size  Location     Type
  5200 ;;  fp              1    2[BANK2 ] PTR struct _IO_FILE
  5201 ;;		 -> NULL(0), 
  5202 ;;  cfmt            2    3[BANK2 ] PTR unsigned char 
  5203 ;;		 -> STR_6(10), STR_5(10), STR_4(9), STR_3(14), 
  5204 ;;		 -> STR_2(13), STR_1(12), 
  5205 ;; Return value:  Size  Location     Type
  5206 ;;                  2   76[BANK1 ] int 
  5207 ;; Registers used:
  5208 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5209 ;; Tracked objects:
  5210 ;;		On entry : 0/0
  5211 ;;		On exit  : 0/0
  5212 ;;		Unchanged: 0/0
  5213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5214 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5215 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  5216 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  5217 ;;      Totals:         0       0       3       5       0       0       0       0       0       0       0       0       
      +0       0
  5218 ;;Total ram usage:        8 bytes
  5219 ;; Hardware stack levels used:    1
  5220 ;; Hardware stack levels required when called:   13
  5221 ;; This function calls:
  5222 ;;		_vfpfcnvrt
  5223 ;; This function is called by:
  5224 ;;		_printf
  5225 ;; This function uses a non-reentrant model
  5226 ;;
  5227                           
  5228                           
  5229                           ;psect for function _vfprintf
  5230  083D                     _vfprintf:	
  5231                           
  5232                           ;incstack = 0
  5233                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5234                           ;vfprintf@fp stored from wreg
  5235  083D  0022               	movlb	2	; select bank2
  5236  083E  00C2               	movwf	vfprintf@fp^(0+256)
  5237                           
  5238                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  5239  083F  0021               	movlb	1	; select bank1
  5240  0840  086D               	movf	(vfprintf@fmt+1)^(0+128),w
  5241  0841  0022               	movlb	2	; select bank2
  5242  0842  00C4               	movwf	(vfprintf@cfmt+1)^(0+256)
  5243  0843  0021               	movlb	1	; select bank1
  5244  0844  086C               	movf	vfprintf@fmt^(0+128),w
  5245  0845  0022               	movlb	2	; select bank2
  5246  0846  00C3               	movwf	vfprintf@cfmt^(0+256)
  5247                           
  5248                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  5249  0847  0020               	movlb	0	; select bank0
  5250  0848  01C8               	clrf	_nout
  5251  0849  01C9               	clrf	_nout+1
  5252  084A                     l3951:	
  5253                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  5254                           
  5255                           
  5256                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  5257  084A  0022               	movlb	2	; select bank2
  5258  084B  0843               	movf	vfprintf@cfmt^(0+256),w
  5259  084C  0084               	movwf	4
  5260  084D  0844               	movf	(vfprintf@cfmt+1)^(0+256),w
  5261  084E  0085               	movwf	5
  5262  084F  0012               	moviw fsr0++
  5263  0850  1903               	btfsc	3,2
  5264  0851  286B               	goto	l3953
  5265                           
  5266                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  5267  0852  3043               	movlw	(low (vfprintf@cfmt| (0+256)))& (0+255)
  5268  0853  00C0               	movwf	??_vfprintf^(0+256)
  5269  0854  0840               	movf	??_vfprintf^(0+256),w
  5270  0855  0021               	movlb	1	; select bank1
  5271  0856  00DA               	movwf	vfpfcnvrt@fmt^(0+128)
  5272  0857  086E               	movf	vfprintf@ap^(0+128),w
  5273  0858  0022               	movlb	2	; select bank2
  5274  0859  00C1               	movwf	(??_vfprintf+1)^(0+256)
  5275  085A  0841               	movf	(??_vfprintf+1)^(0+256),w
  5276  085B  0021               	movlb	1	; select bank1
  5277  085C  00DB               	movwf	vfpfcnvrt@ap^(0+128)
  5278  085D  0022               	movlb	2	; select bank2
  5279  085E  0842               	movf	vfprintf@fp^(0+256),w
  5280  085F  318D  25A1  3188   	fcall	_vfpfcnvrt
  5281  0862  0021               	movlb	1	; select bank1
  5282  0863  085A               	movf	?_vfpfcnvrt^(0+128),w
  5283  0864  0020               	movlb	0	; select bank0
  5284  0865  07C8               	addwf	_nout,f
  5285  0866  0021               	movlb	1	; select bank1
  5286  0867  085B               	movf	(?_vfpfcnvrt+1)^(0+128),w
  5287  0868  0020               	movlb	0	; select bank0
  5288  0869  3DC9               	addwfc	_nout+1,f
  5289  086A  284A               	goto	l3951
  5290  086B                     l3953:	
  5291                           
  5292                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  5293  086B  0020               	movlb	0	; select bank0
  5294  086C  0849               	movf	_nout+1,w
  5295  086D  0021               	movlb	1	; select bank1
  5296  086E  00ED               	movwf	(?_vfprintf+1)^(0+128)
  5297  086F  0020               	movlb	0	; select bank0
  5298  0870  0848               	movf	_nout,w
  5299  0871  0021               	movlb	1	; select bank1
  5300  0872  00EC               	movwf	?_vfprintf^(0+128)
  5301  0873  0008               	return
  5302  0874                     __end_of_vfprintf:	
  5303                           
  5304                           	psect	text8
  5305  0DA1                     __ptext8:	
  5306 ;; *************** function _vfpfcnvrt *****************
  5307 ;; Defined at:
  5308 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5309 ;; Parameters:    Size  Location     Type
  5310 ;;  fp              1    wreg     PTR struct _IO_FILE
  5311 ;;		 -> NULL(0), 
  5312 ;;  fmt             1   58[BANK1 ] PTR PTR unsigned char 
  5313 ;;		 -> vfprintf@cfmt(2), 
  5314 ;;  ap              1   59[BANK1 ] PTR PTR void 
  5315 ;;		 -> printf@ap(1), 
  5316 ;; Auto vars:     Size  Location     Type
  5317 ;;  fp              1   75[BANK1 ] PTR struct _IO_FILE
  5318 ;;		 -> NULL(0), 
  5319 ;;  ll              8   65[BANK1 ] long long 
  5320 ;;  llu             8    0        unsigned long long 
  5321 ;;  f               4    0        unsigned long long 
  5322 ;;  ct              3    0        unsigned char [3]
  5323 ;;  vp              2   73[BANK1 ] PTR void 
  5324 ;;		 -> ?_printf(2), rpm(4), counter(4), 
  5325 ;;  i               2    0        int 
  5326 ;;  done            2    0        int 
  5327 ;;  cp              2    0        PTR unsigned char 
  5328 ;;  c               1    0        unsigned char 
  5329 ;; Return value:  Size  Location     Type
  5330 ;;                  2   58[BANK1 ] int 
  5331 ;; Registers used:
  5332 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5333 ;; Tracked objects:
  5334 ;;		On entry : 0/0
  5335 ;;		On exit  : 0/0
  5336 ;;		Unchanged: 0/0
  5337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5338 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5339 ;;      Locals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0
  5340 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  5341 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0
  5342 ;;Total ram usage:       18 bytes
  5343 ;; Hardware stack levels used:    1
  5344 ;; Hardware stack levels required when called:   12
  5345 ;; This function calls:
  5346 ;;		_dtoa
  5347 ;;		_fputc
  5348 ;; This function is called by:
  5349 ;;		_vfprintf
  5350 ;; This function uses a non-reentrant model
  5351 ;;
  5352                           
  5353                           
  5354                           ;psect for function _vfpfcnvrt
  5355  0DA1                     _vfpfcnvrt:	
  5356                           
  5357                           ;incstack = 0
  5358                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5359                           ;vfpfcnvrt@fp stored from wreg
  5360  0DA1  0021               	movlb	1	; select bank1
  5361  0DA2  00EB               	movwf	vfpfcnvrt@fp^(0+128)
  5362                           
  5363                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  5364  0DA3  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5365  0DA4  0086               	movwf	6
  5366  0DA5  3001               	movlw	1	; select bank2/3
  5367  0DA6  0087               	movwf	7
  5368  0DA7  3F40               	moviw [0]fsr1
  5369  0DA8  00DC               	movwf	??_vfpfcnvrt^(0+128)
  5370  0DA9  3F41               	moviw [1]fsr1
  5371  0DAA  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5372  0DAB  085C               	movf	??_vfpfcnvrt^(0+128),w
  5373  0DAC  0084               	movwf	4
  5374  0DAD  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5375  0DAE  0085               	movwf	5
  5376  0DAF  0012               	moviw fsr0++
  5377  0DB0  3A25               	xorlw	37
  5378  0DB1  1D03               	btfss	3,2
  5379  0DB2  2E8A               	goto	l3851
  5380                           
  5381                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  5382  0DB3  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5383  0DB4  0086               	movwf	6
  5384  0DB5  3001               	movlw	1	; select bank2/3
  5385  0DB6  0087               	movwf	7
  5386  0DB7  3001               	movlw	1
  5387  0DB8  0781               	addwf	1,f
  5388  0DB9  3141               	addfsr 1,1
  5389  0DBA  1803               	skipnc
  5390  0DBB  0A81               	incf	1,f
  5391                           
  5392                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  5393  0DBC  0020               	movlb	0	; select bank0
  5394  0DBD  01CA               	clrf	_width
  5395  0DBE  01CB               	clrf	_width+1
  5396  0DBF  01CE               	clrf	_flags
  5397  0DC0  01CF               	clrf	_flags+1
  5398                           
  5399                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  5400  0DC1  30FF               	movlw	255
  5401  0DC2  00CC               	movwf	_prec
  5402  0DC3  30FF               	movlw	255
  5403  0DC4  00CD               	movwf	_prec+1
  5404                           
  5405                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  5406  0DC5  0021               	movlb	1	; select bank1
  5407  0DC6  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5408  0DC7  0086               	movwf	6
  5409  0DC8  3001               	movlw	1	; select bank2/3
  5410  0DC9  0087               	movwf	7
  5411  0DCA  3F40               	moviw [0]fsr1
  5412  0DCB  00DC               	movwf	??_vfpfcnvrt^(0+128)
  5413  0DCC  3F41               	moviw [1]fsr1
  5414  0DCD  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5415  0DCE  085C               	movf	??_vfpfcnvrt^(0+128),w
  5416  0DCF  0084               	movwf	4
  5417  0DD0  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5418  0DD1  0085               	movwf	5
  5419  0DD2  0012               	moviw fsr0++
  5420  0DD3  3A64               	xorlw	100
  5421  0DD4  1903               	btfsc	3,2
  5422  0DD5  2DE6               	goto	l3815
  5423  0DD6  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5424  0DD7  0086               	movwf	6
  5425  0DD8  3001               	movlw	1	; select bank2/3
  5426  0DD9  0087               	movwf	7
  5427  0DDA  3F40               	moviw [0]fsr1
  5428  0DDB  00DC               	movwf	??_vfpfcnvrt^(0+128)
  5429  0DDC  3F41               	moviw [1]fsr1
  5430  0DDD  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5431  0DDE  085C               	movf	??_vfpfcnvrt^(0+128),w
  5432  0DDF  0084               	movwf	4
  5433  0DE0  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5434  0DE1  0085               	movwf	5
  5435  0DE2  0012               	moviw fsr0++
  5436  0DE3  3A69               	xorlw	105
  5437  0DE4  1D03               	btfss	3,2
  5438  0DE5  2E23               	goto	l3823
  5439  0DE6                     l3815:	
  5440                           
  5441                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  5442  0DE6  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5443  0DE7  0086               	movwf	6
  5444  0DE8  3001               	movlw	1	; select bank2/3
  5445  0DE9  0087               	movwf	7
  5446  0DEA  3001               	movlw	1
  5447  0DEB  0781               	addwf	1,f
  5448  0DEC  3141               	addfsr 1,1
  5449  0DED  1803               	skipnc
  5450  0DEE  0A81               	incf	1,f
  5451                           
  5452                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  5453  0DEF  085B               	movf	vfpfcnvrt@ap^(0+128),w
  5454  0DF0  0086               	movwf	6
  5455  0DF1  3001               	movlw	1	; select bank2/3
  5456  0DF2  0087               	movwf	7
  5457  0DF3  0801               	movf	1,w
  5458  0DF4  0084               	movwf	4
  5459  0DF5  3001               	movlw	1	; select bank2/3
  5460  0DF6  0085               	movwf	5
  5461  0DF7  3002               	movlw	2
  5462  0DF8  0781               	addwf	1,f
  5463  0DF9  3F00               	moviw [0]fsr0
  5464  0DFA  00DC               	movwf	??_vfpfcnvrt^(0+128)
  5465  0DFB  3F01               	moviw [1]fsr0
  5466  0DFC  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5467  0DFD  085C               	movf	??_vfpfcnvrt^(0+128),w
  5468  0DFE  00E1               	movwf	vfpfcnvrt@ll^(0+128)
  5469  0DFF  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5470  0E00  00E2               	movwf	(vfpfcnvrt@ll+1)^(0+128)
  5471  0E01  0D89               	rlf	9,f
  5472  0E02  3B89               	subwfb	9,f
  5473  0E03  0989               	comf	9,f
  5474  0E04  00E3               	movwf	(vfpfcnvrt@ll+2)^(0+128)
  5475  0E05  00E4               	movwf	(vfpfcnvrt@ll+3)^(0+128)
  5476  0E06  00E5               	movwf	(vfpfcnvrt@ll+4)^(0+128)
  5477  0E07  00E6               	movwf	(vfpfcnvrt@ll+5)^(0+128)
  5478  0E08  00E7               	movwf	(vfpfcnvrt@ll+6)^(0+128)
  5479  0E09  00E8               	movwf	(vfpfcnvrt@ll+7)^(0+128)
  5480                           
  5481                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  5482  0E0A  0861               	movf	vfpfcnvrt@ll^(0+128),w
  5483  0E0B  00BC               	movwf	dtoa@d^(0+128)
  5484  0E0C  0862               	movf	(vfpfcnvrt@ll+1)^(0+128),w
  5485  0E0D  00BD               	movwf	(dtoa@d+1)^(0+128)
  5486  0E0E  0863               	movf	(vfpfcnvrt@ll+2)^(0+128),w
  5487  0E0F  00BE               	movwf	(dtoa@d+2)^(0+128)
  5488  0E10  0864               	movf	(vfpfcnvrt@ll+3)^(0+128),w
  5489  0E11  00BF               	movwf	(dtoa@d+3)^(0+128)
  5490  0E12  0865               	movf	(vfpfcnvrt@ll+4)^(0+128),w
  5491  0E13  00C0               	movwf	(dtoa@d+4)^(0+128)
  5492  0E14  0866               	movf	(vfpfcnvrt@ll+5)^(0+128),w
  5493  0E15  00C1               	movwf	(dtoa@d+5)^(0+128)
  5494  0E16  0867               	movf	(vfpfcnvrt@ll+6)^(0+128),w
  5495  0E17  00C2               	movwf	(dtoa@d+6)^(0+128)
  5496  0E18  0868               	movf	(vfpfcnvrt@ll+7)^(0+128),w
  5497  0E19  00C3               	movwf	(dtoa@d+7)^(0+128)
  5498  0E1A  086B               	movf	vfpfcnvrt@fp^(0+128),w
  5499  0E1B  318E  26AF         	fcall	_dtoa
  5500  0E1D  0021               	movlb	1	; select bank1
  5501  0E1E  083D               	movf	(?_dtoa+1)^(0+128),w
  5502  0E1F  00DB               	movwf	(?_vfpfcnvrt+1)^(0+128)
  5503  0E20  083C               	movf	?_dtoa^(0+128),w
  5504  0E21  00DA               	movwf	?_vfpfcnvrt^(0+128)
  5505  0E22  0008               	return
  5506  0E23                     l3823:	
  5507                           
  5508                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1077:      
      +                             if (*fmt[0] == 'n') {
  5509  0E23  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5510  0E24  0086               	movwf	6
  5511  0E25  3001               	movlw	1	; select bank2/3
  5512  0E26  0087               	movwf	7
  5513  0E27  3F40               	moviw [0]fsr1
  5514  0E28  00DC               	movwf	??_vfpfcnvrt^(0+128)
  5515  0E29  3F41               	moviw [1]fsr1
  5516  0E2A  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5517  0E2B  085C               	movf	??_vfpfcnvrt^(0+128),w
  5518  0E2C  0084               	movwf	4
  5519  0E2D  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5520  0E2E  0085               	movwf	5
  5521  0E2F  0012               	moviw fsr0++
  5522  0E30  3A6E               	xorlw	110
  5523  0E31  1D03               	btfss	3,2
  5524  0E32  2E57               	goto	l3835
  5525                           
  5526                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1078:      
      +                                 ++*fmt;
  5527  0E33  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5528  0E34  0086               	movwf	6
  5529  0E35  3001               	movlw	1	; select bank2/3
  5530  0E36  0087               	movwf	7
  5531  0E37  3001               	movlw	1
  5532  0E38  0781               	addwf	1,f
  5533  0E39  3141               	addfsr 1,1
  5534  0E3A  1803               	skipnc
  5535  0E3B  0A81               	incf	1,f
  5536                           
  5537                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1079:      
      +                                 vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
  5538  0E3C  085B               	movf	vfpfcnvrt@ap^(0+128),w
  5539  0E3D  0086               	movwf	6
  5540  0E3E  3001               	movlw	1	; select bank2/3
  5541  0E3F  0087               	movwf	7
  5542  0E40  0801               	movf	1,w
  5543  0E41  0084               	movwf	4
  5544  0E42  3001               	movlw	1	; select bank2/3
  5545  0E43  0085               	movwf	5
  5546  0E44  3002               	movlw	2
  5547  0E45  0781               	addwf	1,f
  5548  0E46  3F00               	moviw [0]fsr0
  5549  0E47  00E9               	movwf	vfpfcnvrt@vp^(0+128)
  5550  0E48  3F01               	moviw [1]fsr0
  5551  0E49  00EA               	movwf	(vfpfcnvrt@vp+1)^(0+128)
  5552                           
  5553                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1080:      
      +                                 *(int *)vp = nout;
  5554  0E4A  0869               	movf	vfpfcnvrt@vp^(0+128),w
  5555  0E4B  0086               	movwf	6
  5556  0E4C  086A               	movf	(vfpfcnvrt@vp+1)^(0+128),w
  5557  0E4D  0087               	movwf	7
  5558  0E4E  0020               	movlb	0	; select bank0
  5559  0E4F  0848               	movf	_nout,w
  5560  0E50  3FC0               	movwi [0]fsr1
  5561  0E51  0849               	movf	_nout+1,w
  5562  0E52  3FC1               	movwi [1]fsr1
  5563  0E53                     l3831:	
  5564                           
  5565                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1081:      
      +                                 return 0;
  5566  0E53  0021               	movlb	1	; select bank1
  5567  0E54  01DA               	clrf	?_vfpfcnvrt^(0+128)
  5568  0E55  01DB               	clrf	(?_vfpfcnvrt+1)^(0+128)
  5569  0E56  0008               	return
  5570  0E57                     l3835:	
  5571                           
  5572                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  5573  0E57  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5574  0E58  0086               	movwf	6
  5575  0E59  3001               	movlw	1	; select bank2/3
  5576  0E5A  0087               	movwf	7
  5577  0E5B  3F40               	moviw [0]fsr1
  5578  0E5C  00DC               	movwf	??_vfpfcnvrt^(0+128)
  5579  0E5D  3F41               	moviw [1]fsr1
  5580  0E5E  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5581  0E5F  085C               	movf	??_vfpfcnvrt^(0+128),w
  5582  0E60  0084               	movwf	4
  5583  0E61  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5584  0E62  0085               	movwf	5
  5585  0E63  0012               	moviw fsr0++
  5586  0E64  3A25               	xorlw	37
  5587  0E65  1D03               	btfss	3,2
  5588  0E66  2E80               	goto	l3845
  5589                           
  5590                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  5591  0E67  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5592  0E68  0086               	movwf	6
  5593  0E69  3001               	movlw	1	; select bank2/3
  5594  0E6A  0087               	movwf	7
  5595  0E6B  3001               	movlw	1
  5596  0E6C  0781               	addwf	1,f
  5597  0E6D  3141               	addfsr 1,1
  5598  0E6E  1803               	skipnc
  5599  0E6F  0A81               	incf	1,f
  5600                           
  5601                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  5602  0E70  3025               	movlw	37
  5603  0E71  00A2               	movwf	fputc@c^(0+128)
  5604  0E72  3000               	movlw	0
  5605  0E73  00A3               	movwf	(fputc@c^(0+128)+1)
  5606  0E74  086B               	movf	vfpfcnvrt@fp^(0+128),w
  5607  0E75  00DC               	movwf	??_vfpfcnvrt^(0+128)
  5608  0E76  085C               	movf	??_vfpfcnvrt^(0+128),w
  5609  0E77  00A4               	movwf	fputc@fp^(0+128)
  5610  0E78  3188  20B1         	fcall	_fputc
  5611  0E7A                     l3841:	
  5612                           
  5613                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  5614  0E7A  3001               	movlw	1
  5615  0E7B  0021               	movlb	1	; select bank1
  5616  0E7C  00DA               	movwf	?_vfpfcnvrt^(0+128)
  5617  0E7D  3000               	movlw	0
  5618  0E7E  00DB               	movwf	(?_vfpfcnvrt^(0+128)+1)
  5619  0E7F  0008               	return
  5620  0E80                     l3845:	
  5621                           
  5622                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  5623  0E80  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5624  0E81  0086               	movwf	6
  5625  0E82  3001               	movlw	1	; select bank2/3
  5626  0E83  0087               	movwf	7
  5627  0E84  3001               	movlw	1
  5628  0E85  0781               	addwf	1,f
  5629  0E86  3141               	addfsr 1,1
  5630  0E87  1803               	skipnc
  5631  0E88  0A81               	incf	1,f
  5632  0E89  2E53               	goto	l3831
  5633  0E8A                     l3851:	
  5634                           
  5635                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  5636  0E8A  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5637  0E8B  0086               	movwf	6
  5638  0E8C  3001               	movlw	1	; select bank2/3
  5639  0E8D  0087               	movwf	7
  5640  0E8E  3F40               	moviw [0]fsr1
  5641  0E8F  00DC               	movwf	??_vfpfcnvrt^(0+128)
  5642  0E90  3F41               	moviw [1]fsr1
  5643  0E91  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5644  0E92  085C               	movf	??_vfpfcnvrt^(0+128),w
  5645  0E93  0084               	movwf	4
  5646  0E94  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5647  0E95  0085               	movwf	5
  5648  0E96  0800               	movf	0,w	;code access
  5649  0E97  00DE               	movwf	(??_vfpfcnvrt+2)^(0+128)
  5650  0E98  01DF               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  5651  0E99  085E               	movf	(??_vfpfcnvrt+2)^(0+128),w
  5652  0E9A  00A2               	movwf	fputc@c^(0+128)
  5653  0E9B  085F               	movf	(??_vfpfcnvrt+3)^(0+128),w
  5654  0E9C  00A3               	movwf	(fputc@c+1)^(0+128)
  5655  0E9D  086B               	movf	vfpfcnvrt@fp^(0+128),w
  5656  0E9E  00E0               	movwf	(??_vfpfcnvrt+4)^(0+128)
  5657  0E9F  0860               	movf	(??_vfpfcnvrt+4)^(0+128),w
  5658  0EA0  00A4               	movwf	fputc@fp^(0+128)
  5659  0EA1  3188  20B1  318D   	fcall	_fputc
  5660                           
  5661                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  5662  0EA4  0021               	movlb	1	; select bank1
  5663  0EA5  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5664  0EA6  0086               	movwf	6
  5665  0EA7  3001               	movlw	1	; select bank2/3
  5666  0EA8  0087               	movwf	7
  5667  0EA9  3001               	movlw	1
  5668  0EAA  0781               	addwf	1,f
  5669  0EAB  3141               	addfsr 1,1
  5670  0EAC  1803               	skipnc
  5671  0EAD  0A81               	incf	1,f
  5672  0EAE  2E7A               	goto	l3841
  5673  0EAF                     __end_of_vfpfcnvrt:	
  5674                           
  5675                           	psect	text9
  5676  0EAF                     __ptext9:	
  5677 ;; *************** function _dtoa *****************
  5678 ;; Defined at:
  5679 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5680 ;; Parameters:    Size  Location     Type
  5681 ;;  fp              1    wreg     PTR struct _IO_FILE
  5682 ;;		 -> NULL(0), 
  5683 ;;  d               8   28[BANK1 ] long long 
  5684 ;; Auto vars:     Size  Location     Type
  5685 ;;  fp              1   41[BANK1 ] PTR struct _IO_FILE
  5686 ;;		 -> NULL(0), 
  5687 ;;  n               8   48[BANK1 ] long long 
  5688 ;;  i               2   56[BANK1 ] int 
  5689 ;;  s               2   46[BANK1 ] int 
  5690 ;;  w               2   44[BANK1 ] int 
  5691 ;;  p               2   42[BANK1 ] int 
  5692 ;; Return value:  Size  Location     Type
  5693 ;;                  2   28[BANK1 ] int 
  5694 ;; Registers used:
  5695 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5696 ;; Tracked objects:
  5697 ;;		On entry : 0/0
  5698 ;;		On exit  : 0/0
  5699 ;;		Unchanged: 0/0
  5700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5701 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  5702 ;;      Locals:         0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0
  5703 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5704 ;;      Totals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0
  5705 ;;Total ram usage:       30 bytes
  5706 ;; Hardware stack levels used:    1
  5707 ;; Hardware stack levels required when called:   11
  5708 ;; This function calls:
  5709 ;;		___aodiv
  5710 ;;		___aomod
  5711 ;;		_abs
  5712 ;;		_pad
  5713 ;; This function is called by:
  5714 ;;		_vfpfcnvrt
  5715 ;; This function uses a non-reentrant model
  5716 ;;
  5717                           
  5718                           
  5719                           ;psect for function _dtoa
  5720  0EAF                     _dtoa:	
  5721                           
  5722                           ;incstack = 0
  5723                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5724                           ;dtoa@fp stored from wreg
  5725  0EAF  0021               	movlb	1	; select bank1
  5726  0EB0  00C9               	movwf	dtoa@fp^(0+128)
  5727                           
  5728                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  5729  0EB1  083C               	movf	dtoa@d^(0+128),w
  5730  0EB2  00D0               	movwf	dtoa@n^(0+128)
  5731  0EB3  083D               	movf	(dtoa@d+1)^(0+128),w
  5732  0EB4  00D1               	movwf	(dtoa@n+1)^(0+128)
  5733  0EB5  083E               	movf	(dtoa@d+2)^(0+128),w
  5734  0EB6  00D2               	movwf	(dtoa@n+2)^(0+128)
  5735  0EB7  083F               	movf	(dtoa@d+3)^(0+128),w
  5736  0EB8  00D3               	movwf	(dtoa@n+3)^(0+128)
  5737  0EB9  0840               	movf	(dtoa@d+4)^(0+128),w
  5738  0EBA  00D4               	movwf	(dtoa@n+4)^(0+128)
  5739  0EBB  0841               	movf	(dtoa@d+5)^(0+128),w
  5740  0EBC  00D5               	movwf	(dtoa@n+5)^(0+128)
  5741  0EBD  0842               	movf	(dtoa@d+6)^(0+128),w
  5742  0EBE  00D6               	movwf	(dtoa@n+6)^(0+128)
  5743  0EBF  0843               	movf	(dtoa@d+7)^(0+128),w
  5744  0EC0  00D7               	movwf	(dtoa@n+7)^(0+128)
  5745                           
  5746                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  5747  0EC1  30D0               	movlw	low dtoa@n
  5748  0EC2  0086               	movwf	6
  5749  0EC3  3000               	movlw	high dtoa@n
  5750  0EC4  0087               	movwf	7
  5751  0EC5  3F47               	moviw [7]fsr1
  5752  0EC6  00C4               	movwf	??_dtoa^(0+128)
  5753  0EC7  1FC4               	btfss	??_dtoa^(0+128),7
  5754  0EC8  2ECB               	goto	u5000
  5755  0EC9  3001               	movlw	1
  5756  0ECA  2ECC               	goto	u5010
  5757  0ECB                     u5000:	
  5758  0ECB  3000               	movlw	0
  5759  0ECC                     u5010:	
  5760  0ECC  0021               	movlb	1	; select bank1
  5761  0ECD  00C5               	movwf	(??_dtoa+1)^(0+128)
  5762  0ECE  01C6               	clrf	((??_dtoa+1)^(0+128)+1)
  5763  0ECF  0845               	movf	(??_dtoa+1)^(0+128),w
  5764  0ED0  00CE               	movwf	dtoa@s^(0+128)
  5765  0ED1  0846               	movf	(??_dtoa+2)^(0+128),w
  5766  0ED2  00CF               	movwf	(dtoa@s+1)^(0+128)
  5767                           
  5768                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  5769  0ED3  084E               	movf	dtoa@s^(0+128),w
  5770  0ED4  044F               	iorwf	(dtoa@s+1)^(0+128),w
  5771  0ED5  1903               	btfsc	3,2
  5772  0ED6  2EF5               	goto	l472
  5773                           
  5774                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  5775  0ED7  09D0               	comf	dtoa@n^(0+128),f
  5776  0ED8  09D1               	comf	(dtoa@n+1)^(0+128),f
  5777  0ED9  09D2               	comf	(dtoa@n+2)^(0+128),f
  5778  0EDA  09D3               	comf	(dtoa@n+3)^(0+128),f
  5779  0EDB  09D4               	comf	(dtoa@n+4)^(0+128),f
  5780  0EDC  09D5               	comf	(dtoa@n+5)^(0+128),f
  5781  0EDD  09D6               	comf	(dtoa@n+6)^(0+128),f
  5782  0EDE  09D7               	comf	(dtoa@n+7)^(0+128),f
  5783  0EDF  0AD0               	incf	dtoa@n^(0+128),f
  5784  0EE0  1D03               	skipz
  5785  0EE1  2EF5               	goto	l472
  5786  0EE2  0AD1               	incf	(dtoa@n+1)^(0+128),f
  5787  0EE3  1D03               	skipz
  5788  0EE4  2EF5               	goto	l472
  5789  0EE5  0AD2               	incf	(dtoa@n+2)^(0+128),f
  5790  0EE6  1D03               	skipz
  5791  0EE7  2EF5               	goto	l472
  5792  0EE8  0AD3               	incf	(dtoa@n+3)^(0+128),f
  5793  0EE9  1D03               	skipz
  5794  0EEA  2EF5               	goto	l472
  5795  0EEB  0AD4               	incf	(dtoa@n+4)^(0+128),f
  5796  0EEC  1D03               	skipz
  5797  0EED  2EF5               	goto	l472
  5798  0EEE  0AD5               	incf	(dtoa@n+5)^(0+128),f
  5799  0EEF  1D03               	skipz
  5800  0EF0  2EF5               	goto	l472
  5801  0EF1  0AD6               	incf	(dtoa@n+6)^(0+128),f
  5802  0EF2  1D03               	skipz
  5803  0EF3  2EF5               	goto	l472
  5804  0EF4  0AD7               	incf	(dtoa@n+7)^(0+128),f
  5805  0EF5                     l472:	
  5806                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 284:     }
  5807                           
  5808                           
  5809                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  5810  0EF5  0020               	movlb	0	; select bank0
  5811  0EF6  1BCD               	btfsc	_prec+1,7
  5812  0EF7  2EFC               	goto	l473
  5813                           
  5814                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  5815  0EF8  30FD               	movlw	253
  5816  0EF9  05CE               	andwf	_flags,f
  5817  0EFA  30FF               	movlw	255
  5818  0EFB  05CF               	andwf	_flags+1,f
  5819  0EFC                     l473:	
  5820                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 289:     }
  5821                           
  5822                           
  5823                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  5824  0EFC  084D               	movf	_prec+1,w
  5825  0EFD  3A80               	xorlw	128
  5826  0EFE  0021               	movlb	1	; select bank1
  5827  0EFF  00C4               	movwf	??_dtoa^(0+128)
  5828  0F00  3080               	movlw	128
  5829  0F01  0244               	subwf	??_dtoa^(0+128),w
  5830  0F02  1D03               	skipz
  5831  0F03  2F07               	goto	u5055
  5832  0F04  3001               	movlw	1
  5833  0F05  0020               	movlb	0	; select bank0
  5834  0F06  024C               	subwf	_prec,w
  5835  0F07                     u5055:	
  5836  0F07  1803               	skipnc
  5837  0F08  2F0F               	goto	l3747
  5838  0F09  3001               	movlw	1
  5839  0F0A  0021               	movlb	1	; select bank1
  5840  0F0B  00CA               	movwf	dtoa@p^(0+128)
  5841  0F0C  3000               	movlw	0
  5842  0F0D  00CB               	movwf	(dtoa@p^(0+128)+1)
  5843  0F0E  2F17               	goto	l477
  5844  0F0F                     l3747:	
  5845  0F0F  0020               	movlb	0	; select bank0
  5846  0F10  084D               	movf	_prec+1,w
  5847  0F11  0021               	movlb	1	; select bank1
  5848  0F12  00CB               	movwf	(dtoa@p+1)^(0+128)
  5849  0F13  0020               	movlb	0	; select bank0
  5850  0F14  084C               	movf	_prec,w
  5851  0F15  0021               	movlb	1	; select bank1
  5852  0F16  00CA               	movwf	dtoa@p^(0+128)
  5853  0F17                     l477:	
  5854                           
  5855                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  5856  0F17  0020               	movlb	0	; select bank0
  5857  0F18  084B               	movf	_width+1,w
  5858  0F19  0021               	movlb	1	; select bank1
  5859  0F1A  00CD               	movwf	(dtoa@w+1)^(0+128)
  5860  0F1B  0020               	movlb	0	; select bank0
  5861  0F1C  084A               	movf	_width,w
  5862  0F1D  0021               	movlb	1	; select bank1
  5863  0F1E  00CC               	movwf	dtoa@w^(0+128)
  5864                           
  5865                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  5866  0F1F  084E               	movf	dtoa@s^(0+128),w
  5867  0F20  044F               	iorwf	(dtoa@s+1)^(0+128),w
  5868  0F21  1D03               	btfss	3,2
  5869  0F22  2F26               	goto	l3753
  5870  0F23  0020               	movlb	0	; select bank0
  5871  0F24  1D4E               	btfss	_flags,2
  5872  0F25  2F2B               	goto	l478
  5873  0F26                     l3753:	
  5874                           
  5875                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  5876  0F26  30FF               	movlw	255
  5877  0F27  0021               	movlb	1	; select bank1
  5878  0F28  07CC               	addwf	dtoa@w^(0+128),f
  5879  0F29  30FF               	movlw	255
  5880  0F2A  3DCD               	addwfc	(dtoa@w+1)^(0+128),f
  5881  0F2B                     l478:	
  5882                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 294:     }
  5883                           
  5884                           
  5885                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  5886  0F2B  301F               	movlw	31
  5887  0F2C  0021               	movlb	1	; select bank1
  5888  0F2D  00D8               	movwf	dtoa@i^(0+128)
  5889  0F2E  3000               	movlw	0
  5890  0F2F  00D9               	movwf	(dtoa@i^(0+128)+1)
  5891                           
  5892                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  5893  0F30  0023               	movlb	3	; select bank3
  5894  0F31  01BF               	clrf	(_dbuf^(0+384)+31)
  5895                           
  5896                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5897  0F32  2FC1               	goto	l481
  5898  0F33                     l3767:	
  5899  0F33  0021               	movlb	1	; select bank1
  5900  0F34  0850               	movf	dtoa@n^(0+128),w
  5901  0F35  0451               	iorwf	(dtoa@n+1)^(0+128),w
  5902  0F36  0452               	iorwf	(dtoa@n+2)^(0+128),w
  5903  0F37  0453               	iorwf	(dtoa@n+3)^(0+128),w
  5904  0F38  0454               	iorwf	(dtoa@n+4)^(0+128),w
  5905  0F39  0455               	iorwf	(dtoa@n+5)^(0+128),w
  5906  0F3A  0456               	iorwf	(dtoa@n+6)^(0+128),w
  5907  0F3B  0457               	iorwf	(dtoa@n+7)^(0+128),w
  5908  0F3C  1D03               	skipz
  5909  0F3D  2F58               	goto	l3757
  5910  0F3E  084B               	movf	(dtoa@p+1)^(0+128),w
  5911  0F3F  3A80               	xorlw	128
  5912  0F40  00C4               	movwf	??_dtoa^(0+128)
  5913  0F41  3080               	movlw	128
  5914  0F42  0244               	subwf	??_dtoa^(0+128),w
  5915  0F43  1D03               	skipz
  5916  0F44  2F47               	goto	u5105
  5917  0F45  3001               	movlw	1
  5918  0F46  024A               	subwf	dtoa@p^(0+128),w
  5919  0F47                     u5105:	
  5920  0F47  1803               	skipnc
  5921  0F48  2F58               	goto	l3757
  5922  0F49  0021               	movlb	1	; select bank1
  5923  0F4A  084D               	movf	(dtoa@w+1)^(0+128),w
  5924  0F4B  3A80               	xorlw	128
  5925  0F4C  00C4               	movwf	??_dtoa^(0+128)
  5926  0F4D  3080               	movlw	128
  5927  0F4E  0244               	subwf	??_dtoa^(0+128),w
  5928  0F4F  1D03               	skipz
  5929  0F50  2F53               	goto	u5115
  5930  0F51  3001               	movlw	1
  5931  0F52  024C               	subwf	dtoa@w^(0+128),w
  5932  0F53                     u5115:	
  5933  0F53  1C03               	skipc
  5934  0F54  2FCD               	goto	l3775
  5935  0F55  0020               	movlb	0	; select bank0
  5936  0F56  1CCE               	btfss	_flags,1
  5937  0F57  2FCD               	goto	l3775
  5938  0F58                     l3757:	
  5939                           
  5940                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  5941  0F58  30FF               	movlw	255
  5942  0F59  0021               	movlb	1	; select bank1
  5943  0F5A  07D8               	addwf	dtoa@i^(0+128),f
  5944  0F5B  30FF               	movlw	255
  5945  0F5C  3DD9               	addwfc	(dtoa@i+1)^(0+128),f
  5946                           
  5947                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  5948  0F5D  300A               	movlw	10
  5949  0F5E  00A0               	movwf	___aomod@divisor^(0+128)
  5950  0F5F  01A1               	clrf	(___aomod@divisor+1)^(0+128)
  5951  0F60  01A2               	clrf	(___aomod@divisor+2)^(0+128)
  5952  0F61  01A3               	clrf	(___aomod@divisor+3)^(0+128)
  5953  0F62  01A4               	clrf	(___aomod@divisor+4)^(0+128)
  5954  0F63  01A5               	clrf	(___aomod@divisor+5)^(0+128)
  5955  0F64  01A6               	clrf	(___aomod@divisor+6)^(0+128)
  5956  0F65  01A7               	clrf	(___aomod@divisor+7)^(0+128)
  5957  0F66  0850               	movf	dtoa@n^(0+128),w
  5958  0F67  00A8               	movwf	___aomod@dividend^(0+128)
  5959  0F68  0851               	movf	(dtoa@n+1)^(0+128),w
  5960  0F69  00A9               	movwf	(___aomod@dividend+1)^(0+128)
  5961  0F6A  0852               	movf	(dtoa@n+2)^(0+128),w
  5962  0F6B  00AA               	movwf	(___aomod@dividend+2)^(0+128)
  5963  0F6C  0853               	movf	(dtoa@n+3)^(0+128),w
  5964  0F6D  00AB               	movwf	(___aomod@dividend+3)^(0+128)
  5965  0F6E  0854               	movf	(dtoa@n+4)^(0+128),w
  5966  0F6F  00AC               	movwf	(___aomod@dividend+4)^(0+128)
  5967  0F70  0855               	movf	(dtoa@n+5)^(0+128),w
  5968  0F71  00AD               	movwf	(___aomod@dividend+5)^(0+128)
  5969  0F72  0856               	movf	(dtoa@n+6)^(0+128),w
  5970  0F73  00AE               	movwf	(___aomod@dividend+6)^(0+128)
  5971  0F74  0857               	movf	(dtoa@n+7)^(0+128),w
  5972  0F75  00AF               	movwf	(___aomod@dividend+7)^(0+128)
  5973  0F76  318B  23CB  318E   	fcall	___aomod
  5974  0F79  0021               	movlb	1	; select bank1
  5975  0F7A  0821               	movf	(?___aomod+1)^(0+128),w
  5976  0F7B  00B4               	movwf	(abs@a+1)^(0+128)
  5977  0F7C  0820               	movf	?___aomod^(0+128),w
  5978  0F7D  00B3               	movwf	abs@a^(0+128)
  5979  0F7E  3196  26F6  318E   	fcall	_abs
  5980  0F81  0021               	movlb	1	; select bank1
  5981  0F82  0833               	movf	?_abs^(0+128),w
  5982  0F83  3E30               	addlw	48
  5983  0F84  00C4               	movwf	??_dtoa^(0+128)
  5984  0F85  0858               	movf	dtoa@i^(0+128),w
  5985  0F86  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5986  0F87  0086               	movwf	6
  5987  0F88  3001               	movlw	1	; select bank3/4
  5988  0F89  0087               	movwf	7
  5989  0F8A  0844               	movf	??_dtoa^(0+128),w
  5990  0F8B  0081               	movwf	1
  5991                           
  5992                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  5993  0F8C  30FF               	movlw	255
  5994  0F8D  07CA               	addwf	dtoa@p^(0+128),f
  5995  0F8E  30FF               	movlw	255
  5996  0F8F  3DCB               	addwfc	(dtoa@p+1)^(0+128),f
  5997                           
  5998                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  5999  0F90  30FF               	movlw	255
  6000  0F91  07CC               	addwf	dtoa@w^(0+128),f
  6001  0F92  30FF               	movlw	255
  6002  0F93  3DCD               	addwfc	(dtoa@w+1)^(0+128),f
  6003                           
  6004                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  6005  0F94  300A               	movlw	10
  6006  0F95  00A0               	movwf	___aodiv@divisor^(0+128)
  6007  0F96  01A1               	clrf	(___aodiv@divisor+1)^(0+128)
  6008  0F97  01A2               	clrf	(___aodiv@divisor+2)^(0+128)
  6009  0F98  01A3               	clrf	(___aodiv@divisor+3)^(0+128)
  6010  0F99  01A4               	clrf	(___aodiv@divisor+4)^(0+128)
  6011  0F9A  01A5               	clrf	(___aodiv@divisor+5)^(0+128)
  6012  0F9B  01A6               	clrf	(___aodiv@divisor+6)^(0+128)
  6013  0F9C  01A7               	clrf	(___aodiv@divisor+7)^(0+128)
  6014  0F9D  0850               	movf	dtoa@n^(0+128),w
  6015  0F9E  00A8               	movwf	___aodiv@dividend^(0+128)
  6016  0F9F  0851               	movf	(dtoa@n+1)^(0+128),w
  6017  0FA0  00A9               	movwf	(___aodiv@dividend+1)^(0+128)
  6018  0FA1  0852               	movf	(dtoa@n+2)^(0+128),w
  6019  0FA2  00AA               	movwf	(___aodiv@dividend+2)^(0+128)
  6020  0FA3  0853               	movf	(dtoa@n+3)^(0+128),w
  6021  0FA4  00AB               	movwf	(___aodiv@dividend+3)^(0+128)
  6022  0FA5  0854               	movf	(dtoa@n+4)^(0+128),w
  6023  0FA6  00AC               	movwf	(___aodiv@dividend+4)^(0+128)
  6024  0FA7  0855               	movf	(dtoa@n+5)^(0+128),w
  6025  0FA8  00AD               	movwf	(___aodiv@dividend+5)^(0+128)
  6026  0FA9  0856               	movf	(dtoa@n+6)^(0+128),w
  6027  0FAA  00AE               	movwf	(___aodiv@dividend+6)^(0+128)
  6028  0FAB  0857               	movf	(dtoa@n+7)^(0+128),w
  6029  0FAC  00AF               	movwf	(___aodiv@dividend+7)^(0+128)
  6030  0FAD  318C  24AA  318E   	fcall	___aodiv
  6031  0FB0  0021               	movlb	1	; select bank1
  6032  0FB1  0820               	movf	?___aodiv^(0+128),w
  6033  0FB2  00D0               	movwf	dtoa@n^(0+128)
  6034  0FB3  0821               	movf	(?___aodiv+1)^(0+128),w
  6035  0FB4  00D1               	movwf	(dtoa@n+1)^(0+128)
  6036  0FB5  0822               	movf	(?___aodiv+2)^(0+128),w
  6037  0FB6  00D2               	movwf	(dtoa@n+2)^(0+128)
  6038  0FB7  0823               	movf	(?___aodiv+3)^(0+128),w
  6039  0FB8  00D3               	movwf	(dtoa@n+3)^(0+128)
  6040  0FB9  0824               	movf	(?___aodiv+4)^(0+128),w
  6041  0FBA  00D4               	movwf	(dtoa@n+4)^(0+128)
  6042  0FBB  0825               	movf	(?___aodiv+5)^(0+128),w
  6043  0FBC  00D5               	movwf	(dtoa@n+5)^(0+128)
  6044  0FBD  0826               	movf	(?___aodiv+6)^(0+128),w
  6045  0FBE  00D6               	movwf	(dtoa@n+6)^(0+128)
  6046  0FBF  0827               	movf	(?___aodiv+7)^(0+128),w
  6047  0FC0  00D7               	movwf	(dtoa@n+7)^(0+128)
  6048  0FC1                     l481:	
  6049                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 305:     }
  6050                           
  6051                           
  6052                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6053  0FC1  0021               	movlb	1	; select bank1
  6054  0FC2  0859               	movf	(dtoa@i+1)^(0+128),w
  6055  0FC3  3A80               	xorlw	128
  6056  0FC4  00C4               	movwf	??_dtoa^(0+128)
  6057  0FC5  3080               	movlw	128
  6058  0FC6  0244               	subwf	??_dtoa^(0+128),w
  6059  0FC7  1D03               	skipz
  6060  0FC8  2FCB               	goto	u5085
  6061  0FC9  3001               	movlw	1
  6062  0FCA  0258               	subwf	dtoa@i^(0+128),w
  6063  0FCB                     u5085:	
  6064  0FCB  1803               	btfsc	3,0
  6065  0FCC  2F33               	goto	l3767
  6066  0FCD                     l3775:	
  6067                           
  6068                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  6069  0FCD  0021               	movlb	1	; select bank1
  6070  0FCE  084E               	movf	dtoa@s^(0+128),w
  6071  0FCF  044F               	iorwf	(dtoa@s+1)^(0+128),w
  6072  0FD0  1D03               	btfss	3,2
  6073  0FD1  2FD5               	goto	l3779
  6074  0FD2  0020               	movlb	0	; select bank0
  6075  0FD3  1D4E               	btfss	_flags,2
  6076  0FD4  2FED               	goto	l3789
  6077  0FD5                     l3779:	
  6078                           
  6079                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  6080  0FD5  30FF               	movlw	255
  6081  0FD6  0021               	movlb	1	; select bank1
  6082  0FD7  07D8               	addwf	dtoa@i^(0+128),f
  6083  0FD8  30FF               	movlw	255
  6084  0FD9  3DD9               	addwfc	(dtoa@i+1)^(0+128),f
  6085                           
  6086                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  6087  0FDA  084E               	movf	dtoa@s^(0+128),w
  6088  0FDB  044F               	iorwf	(dtoa@s+1)^(0+128),w
  6089  0FDC  1D03               	btfss	3,2
  6090  0FDD  2FE0               	goto	l3785
  6091  0FDE  302B               	movlw	43
  6092  0FDF  2FE1               	goto	L3
  6093  0FE0                     l3785:	
  6094  0FE0  302D               	movlw	45
  6095  0FE1                     L3:	
  6096  0FE1  00C7               	movwf	_dtoa$700^(0+128)
  6097  0FE2  3000               	movlw	0
  6098  0FE3  00C8               	movwf	(_dtoa$700^(0+128)+1)
  6099  0FE4  0847               	movf	_dtoa$700^(0+128),w
  6100  0FE5  00C4               	movwf	??_dtoa^(0+128)
  6101  0FE6  0858               	movf	dtoa@i^(0+128),w
  6102  0FE7  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6103  0FE8  0086               	movwf	6
  6104  0FE9  3001               	movlw	1	; select bank3/4
  6105  0FEA  0087               	movwf	7
  6106  0FEB  0844               	movf	??_dtoa^(0+128),w
  6107  0FEC  0081               	movwf	1
  6108  0FED                     l3789:	
  6109                           
  6110                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  6111  0FED  0021               	movlb	1	; select bank1
  6112  0FEE  0858               	movf	dtoa@i^(0+128),w
  6113  0FEF  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6114  0FF0  00C4               	movwf	??_dtoa^(0+128)
  6115  0FF1  0844               	movf	??_dtoa^(0+128),w
  6116  0FF2  00B3               	movwf	pad@buf^(0+128)
  6117  0FF3  084D               	movf	(dtoa@w+1)^(0+128),w
  6118  0FF4  00B5               	movwf	(pad@p+1)^(0+128)
  6119  0FF5  084C               	movf	dtoa@w^(0+128),w
  6120  0FF6  00B4               	movwf	pad@p^(0+128)
  6121  0FF7  0849               	movf	dtoa@fp^(0+128),w
  6122  0FF8  3189  2137         	fcall	_pad
  6123  0FFA  0021               	movlb	1	; select bank1
  6124  0FFB  0834               	movf	(?_pad+1)^(0+128),w
  6125  0FFC  00BD               	movwf	(?_dtoa+1)^(0+128)
  6126  0FFD  0833               	movf	?_pad^(0+128),w
  6127  0FFE  00BC               	movwf	?_dtoa^(0+128)
  6128  0FFF  0008               	return
  6129  1000                     __end_of_dtoa:	
  6130                           
  6131                           	psect	text10
  6132  0937                     __ptext10:	
  6133 ;; *************** function _pad *****************
  6134 ;; Defined at:
  6135 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6136 ;; Parameters:    Size  Location     Type
  6137 ;;  fp              1    wreg     PTR struct _IO_FILE
  6138 ;;		 -> NULL(0), 
  6139 ;;  buf             1   19[BANK1 ] PTR unsigned char 
  6140 ;;		 -> dbuf(32), 
  6141 ;;  p               2   20[BANK1 ] int 
  6142 ;; Auto vars:     Size  Location     Type
  6143 ;;  fp              1   27[BANK1 ] PTR struct _IO_FILE
  6144 ;;		 -> NULL(0), 
  6145 ;;  w               2   25[BANK1 ] int 
  6146 ;;  i               2   23[BANK1 ] int 
  6147 ;; Return value:  Size  Location     Type
  6148 ;;                  2   19[BANK1 ] int 
  6149 ;; Registers used:
  6150 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6151 ;; Tracked objects:
  6152 ;;		On entry : 0/0
  6153 ;;		On exit  : 0/0
  6154 ;;		Unchanged: 0/0
  6155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6156 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6157 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  6158 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6159 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  6160 ;;Total ram usage:        9 bytes
  6161 ;; Hardware stack levels used:    1
  6162 ;; Hardware stack levels required when called:   10
  6163 ;; This function calls:
  6164 ;;		_fputc
  6165 ;;		_fputs
  6166 ;;		_strlen
  6167 ;; This function is called by:
  6168 ;;		_dtoa
  6169 ;; This function uses a non-reentrant model
  6170 ;;
  6171                           
  6172                           
  6173                           ;psect for function _pad
  6174  0937                     _pad:	
  6175                           
  6176                           ;incstack = 0
  6177                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6178                           ;pad@fp stored from wreg
  6179  0937  0021               	movlb	1	; select bank1
  6180  0938  00BB               	movwf	pad@fp^(0+128)
  6181                           
  6182                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  6183  0939  0020               	movlb	0	; select bank0
  6184  093A  1C4E               	btfss	_flags,0
  6185  093B  2948               	goto	l3645
  6186                           
  6187                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  6188  093C  0021               	movlb	1	; select bank1
  6189  093D  0833               	movf	pad@buf^(0+128),w
  6190  093E  00AA               	movwf	fputs@s^(0+128)
  6191  093F  3001               	movlw	1
  6192  0940  00AB               	movwf	(fputs@s+1)^(0+128)
  6193  0941  083B               	movf	pad@fp^(0+128),w
  6194  0942  00B6               	movwf	??_pad^(0+128)
  6195  0943  0836               	movf	??_pad^(0+128),w
  6196  0944  00AC               	movwf	fputs@fp^(0+128)
  6197  0945  3197  27A7  3189   	fcall	_fputs
  6198  0948                     l3645:	
  6199                           
  6200                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  6201  0948  0021               	movlb	1	; select bank1
  6202  0949  1BB5               	btfsc	(pad@p+1)^(0+128),7
  6203  094A  2950               	goto	l3649
  6204  094B  0835               	movf	(pad@p+1)^(0+128),w
  6205  094C  00BA               	movwf	(pad@w+1)^(0+128)
  6206  094D  0834               	movf	pad@p^(0+128),w
  6207  094E  00B9               	movwf	pad@w^(0+128)
  6208  094F  2952               	goto	l464
  6209  0950                     l3649:	
  6210  0950  01B9               	clrf	pad@w^(0+128)
  6211  0951  01BA               	clrf	(pad@w+1)^(0+128)
  6212  0952                     l464:	
  6213                           
  6214                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  6215  0952  01B7               	clrf	pad@i^(0+128)
  6216  0953  01B8               	clrf	(pad@i+1)^(0+128)
  6217  0954                     l3655:	
  6218                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  6219                           
  6220                           
  6221                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  6222  0954  0838               	movf	(pad@i+1)^(0+128),w
  6223  0955  3A80               	xorlw	128
  6224  0956  00B6               	movwf	??_pad^(0+128)
  6225  0957  083A               	movf	(pad@w+1)^(0+128),w
  6226  0958  3A80               	xorlw	128
  6227  0959  0236               	subwf	??_pad^(0+128),w
  6228  095A  1D03               	skipz
  6229  095B  295E               	goto	u4765
  6230  095C  0839               	movf	pad@w^(0+128),w
  6231  095D  0237               	subwf	pad@i^(0+128),w
  6232  095E                     u4765:	
  6233  095E  1803               	btfsc	3,0
  6234  095F  2972               	goto	l467
  6235                           
  6236                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  6237  0960  3020               	movlw	32
  6238  0961  0021               	movlb	1	; select bank1
  6239  0962  00A2               	movwf	fputc@c^(0+128)
  6240  0963  3000               	movlw	0
  6241  0964  00A3               	movwf	(fputc@c^(0+128)+1)
  6242  0965  083B               	movf	pad@fp^(0+128),w
  6243  0966  00B6               	movwf	??_pad^(0+128)
  6244  0967  0836               	movf	??_pad^(0+128),w
  6245  0968  00A4               	movwf	fputc@fp^(0+128)
  6246  0969  3188  20B1  3189   	fcall	_fputc
  6247                           
  6248                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  6249  096C  3001               	movlw	1
  6250  096D  0021               	movlb	1	; select bank1
  6251  096E  07B7               	addwf	pad@i^(0+128),f
  6252  096F  3000               	movlw	0
  6253  0970  3DB8               	addwfc	(pad@i+1)^(0+128),f
  6254  0971  2954               	goto	l3655
  6255  0972                     l467:	
  6256                           
  6257                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  6258  0972  0020               	movlb	0	; select bank0
  6259  0973  184E               	btfsc	_flags,0
  6260  0974  2981               	goto	l3659
  6261                           
  6262                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  6263  0975  0021               	movlb	1	; select bank1
  6264  0976  0833               	movf	pad@buf^(0+128),w
  6265  0977  00AA               	movwf	fputs@s^(0+128)
  6266  0978  3001               	movlw	1
  6267  0979  00AB               	movwf	(fputs@s+1)^(0+128)
  6268  097A  083B               	movf	pad@fp^(0+128),w
  6269  097B  00B6               	movwf	??_pad^(0+128)
  6270  097C  0836               	movf	??_pad^(0+128),w
  6271  097D  00AC               	movwf	fputs@fp^(0+128)
  6272  097E  3197  27A7  3189   	fcall	_fputs
  6273  0981                     l3659:	
  6274                           
  6275                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  6276  0981  0021               	movlb	1	; select bank1
  6277  0982  0833               	movf	pad@buf^(0+128),w
  6278  0983  3197  270F         	fcall	_strlen
  6279  0985  0021               	movlb	1	; select bank1
  6280  0986  0839               	movf	pad@w^(0+128),w
  6281  0987  0720               	addwf	?_strlen^(0+128),w
  6282  0988  00B3               	movwf	?_pad^(0+128)
  6283  0989  083A               	movf	(pad@w+1)^(0+128),w
  6284  098A  3D21               	addwfc	(?_strlen+1)^(0+128),w
  6285  098B  00B4               	movwf	(?_pad+1)^(0+128)
  6286  098C  0008               	return
  6287  098D                     __end_of_pad:	
  6288                           
  6289                           	psect	text11
  6290  170F                     __ptext11:	
  6291 ;; *************** function _strlen *****************
  6292 ;; Defined at:
  6293 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  6294 ;; Parameters:    Size  Location     Type
  6295 ;;  s               1    wreg     PTR const unsigned char 
  6296 ;;		 -> dbuf(32), 
  6297 ;; Auto vars:     Size  Location     Type
  6298 ;;  s               1    4[BANK1 ] PTR const unsigned char 
  6299 ;;		 -> dbuf(32), 
  6300 ;;  a               1    3[BANK1 ] PTR const unsigned char 
  6301 ;;		 -> dbuf(32), 
  6302 ;; Return value:  Size  Location     Type
  6303 ;;                  2    0[BANK1 ] unsigned int 
  6304 ;; Registers used:
  6305 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6306 ;; Tracked objects:
  6307 ;;		On entry : 0/0
  6308 ;;		On exit  : 0/0
  6309 ;;		Unchanged: 0/0
  6310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6311 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6312 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6313 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6314 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  6315 ;;Total ram usage:        5 bytes
  6316 ;; Hardware stack levels used:    1
  6317 ;; Hardware stack levels required when called:    6
  6318 ;; This function calls:
  6319 ;;		Nothing
  6320 ;; This function is called by:
  6321 ;;		_pad
  6322 ;; This function uses a non-reentrant model
  6323 ;;
  6324                           
  6325                           
  6326                           ;psect for function _strlen
  6327  170F                     _strlen:	
  6328                           
  6329                           ;incstack = 0
  6330                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  6331                           ;strlen@s stored from wreg
  6332  170F  0021               	movlb	1	; select bank1
  6333  1710  00A4               	movwf	strlen@s^(0+128)
  6334  1711  0824               	movf	strlen@s^(0+128),w
  6335  1712  00A2               	movwf	??_strlen^(0+128)
  6336  1713  0822               	movf	??_strlen^(0+128),w
  6337  1714  00A3               	movwf	strlen@a^(0+128)
  6338  1715                     l3635:	
  6339  1715  0824               	movf	strlen@s^(0+128),w
  6340  1716  0086               	movwf	6
  6341  1717  3001               	movlw	1	; select bank2/3
  6342  1718  0087               	movwf	7
  6343  1719  0801               	movf	1,w
  6344  171A  1903               	btfsc	3,2
  6345  171B  2F21               	goto	l3637
  6346  171C  3001               	movlw	1
  6347  171D  00A2               	movwf	??_strlen^(0+128)
  6348  171E  0822               	movf	??_strlen^(0+128),w
  6349  171F  07A4               	addwf	strlen@s^(0+128),f
  6350  1720  2F15               	goto	l3635
  6351  1721                     l3637:	
  6352  1721  0823               	movf	strlen@a^(0+128),w
  6353  1722  0224               	subwf	strlen@s^(0+128),w
  6354  1723  00A0               	movwf	?_strlen^(0+128)
  6355  1724  01A1               	clrf	(?_strlen+1)^(0+128)
  6356  1725  1BA0               	btfsc	?_strlen^(0+128),7
  6357  1726  03A1               	decf	(?_strlen+1)^(0+128),f
  6358  1727  0008               	return
  6359  1728                     __end_of_strlen:	
  6360                           
  6361                           	psect	text12
  6362  17A7                     __ptext12:	
  6363 ;; *************** function _fputs *****************
  6364 ;; Defined at:
  6365 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  6366 ;; Parameters:    Size  Location     Type
  6367 ;;  s               2   10[BANK1 ] PTR const unsigned char 
  6368 ;;		 -> dbuf(32), STR_7(3), hrDisp(13), distanceDisp(11), 
  6369 ;;		 -> speedDisp(8), 
  6370 ;;  fp              1   12[BANK1 ] PTR struct _IO_FILE
  6371 ;;		 -> NULL(0), 
  6372 ;; Auto vars:     Size  Location     Type
  6373 ;;  i               2   17[BANK1 ] int 
  6374 ;;  c               1   16[BANK1 ] unsigned char 
  6375 ;; Return value:  Size  Location     Type
  6376 ;;                  2   10[BANK1 ] int 
  6377 ;; Registers used:
  6378 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6379 ;; Tracked objects:
  6380 ;;		On entry : 0/0
  6381 ;;		On exit  : 0/0
  6382 ;;		Unchanged: 0/0
  6383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6384 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6385 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6386 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6387 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  6388 ;;Total ram usage:        9 bytes
  6389 ;; Hardware stack levels used:    1
  6390 ;; Hardware stack levels required when called:    9
  6391 ;; This function calls:
  6392 ;;		_fputc
  6393 ;; This function is called by:
  6394 ;;		_pad
  6395 ;;		_puts
  6396 ;; This function uses a non-reentrant model
  6397 ;;
  6398                           
  6399                           
  6400                           ;psect for function _fputs
  6401  17A7                     _fputs:	
  6402                           
  6403                           ;incstack = 0
  6404                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6405  17A7  0021               	movlb	1	; select bank1
  6406  17A8  01B1               	clrf	fputs@i^(0+128)
  6407  17A9  01B2               	clrf	(fputs@i+1)^(0+128)
  6408  17AA                     l3625:	
  6409  17AA  082A               	movf	fputs@s^(0+128),w
  6410  17AB  0731               	addwf	fputs@i^(0+128),w
  6411  17AC  0084               	movwf	4
  6412  17AD  082B               	movf	(fputs@s+1)^(0+128),w
  6413  17AE  3D32               	addwfc	(fputs@i+1)^(0+128),w
  6414  17AF  0085               	movwf	5
  6415  17B0  0800               	movf	0,w	;code access
  6416  17B1  00AD               	movwf	??_fputs^(0+128)
  6417  17B2  082D               	movf	??_fputs^(0+128),w
  6418  17B3  00B0               	movwf	fputs@c^(0+128)
  6419  17B4  0830               	movf	fputs@c^(0+128),w
  6420  17B5  1903               	btfsc	3,2
  6421  17B6  2FCB               	goto	l3627
  6422  17B7  0830               	movf	fputs@c^(0+128),w
  6423  17B8  00AD               	movwf	??_fputs^(0+128)
  6424  17B9  01AE               	clrf	(??_fputs^(0+128)+1)
  6425  17BA  082D               	movf	??_fputs^(0+128),w
  6426  17BB  00A2               	movwf	fputc@c^(0+128)
  6427  17BC  082E               	movf	(??_fputs+1)^(0+128),w
  6428  17BD  00A3               	movwf	(fputc@c+1)^(0+128)
  6429  17BE  082C               	movf	fputs@fp^(0+128),w
  6430  17BF  00AF               	movwf	(??_fputs+2)^(0+128)
  6431  17C0  082F               	movf	(??_fputs+2)^(0+128),w
  6432  17C1  00A4               	movwf	fputc@fp^(0+128)
  6433  17C2  3188  20B1  3197   	fcall	_fputc
  6434  17C5  3001               	movlw	1
  6435  17C6  0021               	movlb	1	; select bank1
  6436  17C7  07B1               	addwf	fputs@i^(0+128),f
  6437  17C8  3000               	movlw	0
  6438  17C9  3DB2               	addwfc	(fputs@i+1)^(0+128),f
  6439  17CA  2FAA               	goto	l3625
  6440  17CB                     l3627:	
  6441  17CB  0832               	movf	(fputs@i+1)^(0+128),w
  6442  17CC  00AB               	movwf	(?_fputs+1)^(0+128)
  6443  17CD  0831               	movf	fputs@i^(0+128),w
  6444  17CE  00AA               	movwf	?_fputs^(0+128)
  6445  17CF  0008               	return
  6446  17D0                     __end_of_fputs:	
  6447                           
  6448                           	psect	text13
  6449  08B1                     __ptext13:	
  6450 ;; *************** function _fputc *****************
  6451 ;; Defined at:
  6452 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  6453 ;; Parameters:    Size  Location     Type
  6454 ;;  c               2    2[BANK1 ] int 
  6455 ;;  fp              1    4[BANK1 ] PTR struct _IO_FILE
  6456 ;;		 -> NULL(0), 
  6457 ;; Auto vars:     Size  Location     Type
  6458 ;;		None
  6459 ;; Return value:  Size  Location     Type
  6460 ;;                  2    2[BANK1 ] int 
  6461 ;; Registers used:
  6462 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6463 ;; Tracked objects:
  6464 ;;		On entry : 0/0
  6465 ;;		On exit  : 0/0
  6466 ;;		Unchanged: 0/0
  6467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6468 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6470 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  6471 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  6472 ;;Total ram usage:        8 bytes
  6473 ;; Hardware stack levels used:    1
  6474 ;; Hardware stack levels required when called:    8
  6475 ;; This function calls:
  6476 ;;		_putch
  6477 ;; This function is called by:
  6478 ;;		_pad
  6479 ;;		_vfpfcnvrt
  6480 ;;		_fputs
  6481 ;;		_puts
  6482 ;; This function uses a non-reentrant model
  6483 ;;
  6484                           
  6485                           
  6486                           ;psect for function _fputc
  6487  08B1                     _fputc:	
  6488                           
  6489                           ;incstack = 0
  6490                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6491  08B1  0021               	movlb	1	; select bank1
  6492  08B2  0824               	movf	fputc@fp^(0+128),w
  6493  08B3  1D03               	btfss	3,2
  6494  08B4  0824               	movf	fputc@fp^(0+128),w
  6495  08B5  1D03               	btfss	3,2
  6496  08B6  28BC               	goto	l3609
  6497  08B7  0822               	movf	fputc@c^(0+128),w
  6498  08B8  3196  262C  3188   	fcall	_putch
  6499  08BB  28E8               	goto	l3615
  6500  08BC                     l3609:	
  6501  08BC  0824               	movf	fputc@fp^(0+128),w
  6502  08BD  3E03               	addlw	3
  6503  08BE  0086               	movwf	6
  6504  08BF  0187               	clrf	7
  6505  08C0  0016               	moviw fsr1++
  6506  08C1  0401               	iorwf	1,w
  6507  08C2  1903               	btfsc	3,2
  6508  08C3  28DF               	goto	l3613
  6509  08C4  0824               	movf	fputc@fp^(0+128),w
  6510  08C5  3E03               	addlw	3
  6511  08C6  0086               	movwf	6
  6512  08C7  0187               	clrf	7
  6513  08C8  3F40               	moviw [0]fsr1
  6514  08C9  00A5               	movwf	??_fputc^(0+128)
  6515  08CA  3F41               	moviw [1]fsr1
  6516  08CB  00A6               	movwf	(??_fputc^(0+128)+1)
  6517  08CC  0A24               	incf	fputc@fp^(0+128),w
  6518  08CD  0086               	movwf	6
  6519  08CE  0187               	clrf	7
  6520  08CF  3F40               	moviw [0]fsr1
  6521  08D0  00A7               	movwf	(??_fputc+2)^(0+128)
  6522  08D1  3F41               	moviw [1]fsr1
  6523  08D2  00A8               	movwf	((??_fputc+2)^(0+128)+1)
  6524  08D3  0828               	movf	(??_fputc+3)^(0+128),w
  6525  08D4  3A80               	xorlw	128
  6526  08D5  00A9               	movwf	(??_fputc+4)^(0+128)
  6527  08D6  0826               	movf	(??_fputc+1)^(0+128),w
  6528  08D7  3A80               	xorlw	128
  6529  08D8  0229               	subwf	(??_fputc+4)^(0+128),w
  6530  08D9  1D03               	skipz
  6531  08DA  28DD               	goto	u4715
  6532  08DB  0825               	movf	??_fputc^(0+128),w
  6533  08DC  0227               	subwf	(??_fputc+2)^(0+128),w
  6534  08DD                     u4715:	
  6535  08DD  1803               	skipnc
  6536  08DE  28E8               	goto	l3615
  6537  08DF                     l3613:	
  6538  08DF  0021               	movlb	1	; select bank1
  6539  08E0  0A24               	incf	fputc@fp^(0+128),w
  6540  08E1  0086               	movwf	6
  6541  08E2  0187               	clrf	7
  6542  08E3  3001               	movlw	1
  6543  08E4  0781               	addwf	1,f
  6544  08E5  3141               	addfsr 1,1
  6545  08E6  1803               	skipnc
  6546  08E7  0A81               	incf	1,f
  6547  08E8                     l3615:	
  6548  08E8  0021               	movlb	1	; select bank1
  6549  08E9  0822               	movf	fputc@c^(0+128),w
  6550  08EA  00A5               	movwf	??_fputc^(0+128)
  6551  08EB  01A6               	clrf	(??_fputc^(0+128)+1)
  6552  08EC  0825               	movf	??_fputc^(0+128),w
  6553  08ED  00A2               	movwf	?_fputc^(0+128)
  6554  08EE  0826               	movf	(??_fputc+1)^(0+128),w
  6555  08EF  00A3               	movwf	(?_fputc+1)^(0+128)
  6556  08F0  0008               	return
  6557  08F1                     __end_of_fputc:	
  6558                           
  6559                           	psect	text14
  6560  162C                     __ptext14:	
  6561 ;; *************** function _putch *****************
  6562 ;; Defined at:
  6563 ;;		line 151 in file "mcc_generated_files/eusart.c"
  6564 ;; Parameters:    Size  Location     Type
  6565 ;;  txData          1    wreg     unsigned char 
  6566 ;; Auto vars:     Size  Location     Type
  6567 ;;  txData          1    1[BANK1 ] unsigned char 
  6568 ;; Return value:  Size  Location     Type
  6569 ;;                  1    wreg      void 
  6570 ;; Registers used:
  6571 ;;		wreg, status,2, status,0, pclath, cstack
  6572 ;; Tracked objects:
  6573 ;;		On entry : 0/0
  6574 ;;		On exit  : 0/0
  6575 ;;		Unchanged: 0/0
  6576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6578 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6580 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6581 ;;Total ram usage:        1 bytes
  6582 ;; Hardware stack levels used:    1
  6583 ;; Hardware stack levels required when called:    7
  6584 ;; This function calls:
  6585 ;;		_EUSART_Write
  6586 ;; This function is called by:
  6587 ;;		_fputc
  6588 ;; This function uses a non-reentrant model
  6589 ;;
  6590                           
  6591                           
  6592                           ;psect for function _putch
  6593  162C                     _putch:	
  6594                           
  6595                           ;incstack = 0
  6596                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  6597                           ;putch@txData stored from wreg
  6598  162C  0021               	movlb	1	; select bank1
  6599  162D  00A1               	movwf	putch@txData^(0+128)
  6600                           
  6601                           ;mcc_generated_files/eusart.c: 151: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 152: {;mcc_generated_files/eusart.c: 153:     EUSART_Write(txData);
  6602  162E  0821               	movf	putch@txData^(0+128),w
  6603  162F  3188  2000         	fcall	_EUSART_Write
  6604  1631  0008               	return
  6605  1632                     __end_of_putch:	
  6606                           
  6607                           	psect	text15
  6608  0800                     __ptext15:	
  6609 ;; *************** function _EUSART_Write *****************
  6610 ;; Defined at:
  6611 ;;		line 137 in file "mcc_generated_files/eusart.c"
  6612 ;; Parameters:    Size  Location     Type
  6613 ;;  txData          1    wreg     unsigned char 
  6614 ;; Auto vars:     Size  Location     Type
  6615 ;;  txData          1    0[BANK1 ] unsigned char 
  6616 ;; Return value:  Size  Location     Type
  6617 ;;                  1    wreg      void 
  6618 ;; Registers used:
  6619 ;;		wreg
  6620 ;; Tracked objects:
  6621 ;;		On entry : 0/0
  6622 ;;		On exit  : 0/0
  6623 ;;		Unchanged: 0/0
  6624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6626 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6628 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6629 ;;Total ram usage:        1 bytes
  6630 ;; Hardware stack levels used:    1
  6631 ;; Hardware stack levels required when called:    6
  6632 ;; This function calls:
  6633 ;;		Nothing
  6634 ;; This function is called by:
  6635 ;;		_putch
  6636 ;;		_setCursor
  6637 ;;		_backlightBrightness
  6638 ;; This function uses a non-reentrant model
  6639 ;;
  6640                           
  6641                           
  6642                           ;psect for function _EUSART_Write
  6643  0800                     _EUSART_Write:	
  6644                           
  6645                           ;incstack = 0
  6646                           ; Regs used in _EUSART_Write: [wreg]
  6647                           ;EUSART_Write@txData stored from wreg
  6648  0800  0021               	movlb	1	; select bank1
  6649  0801  00A0               	movwf	EUSART_Write@txData^(0+128)
  6650  0802                     l69:	
  6651                           ;mcc_generated_files/eusart.c: 140:     {;mcc_generated_files/eusart.c: 141:     }
  6652                           
  6653                           
  6654                           ;mcc_generated_files/eusart.c: 139:     while(0 == PIR1bits.TXIF)
  6655  0802  0020               	movlb	0	; select bank0
  6656  0803  1E10               	btfss	16,4	;volatile
  6657  0804  2802               	goto	l69
  6658                           
  6659                           ;mcc_generated_files/eusart.c: 143:     TX1REG = txData;
  6660  0805  0021               	movlb	1	; select bank1
  6661  0806  0820               	movf	EUSART_Write@txData^(0+128),w
  6662  0807  0023               	movlb	3	; select bank3
  6663  0808  009A               	movwf	26	;volatile
  6664  0809  0008               	return
  6665  080A                     __end_of_EUSART_Write:	
  6666                           
  6667                           	psect	text16
  6668  16F6                     __ptext16:	
  6669 ;; *************** function _abs *****************
  6670 ;; Defined at:
  6671 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  6672 ;; Parameters:    Size  Location     Type
  6673 ;;  a               2   19[BANK1 ] int 
  6674 ;; Auto vars:     Size  Location     Type
  6675 ;;		None
  6676 ;; Return value:  Size  Location     Type
  6677 ;;                  2   19[BANK1 ] int 
  6678 ;; Registers used:
  6679 ;;		wreg, status,2, status,0
  6680 ;; Tracked objects:
  6681 ;;		On entry : 0/0
  6682 ;;		On exit  : 0/0
  6683 ;;		Unchanged: 0/0
  6684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6685 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6687 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6688 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  6689 ;;Total ram usage:        4 bytes
  6690 ;; Hardware stack levels used:    1
  6691 ;; Hardware stack levels required when called:    6
  6692 ;; This function calls:
  6693 ;;		Nothing
  6694 ;; This function is called by:
  6695 ;;		_dtoa
  6696 ;; This function uses a non-reentrant model
  6697 ;;
  6698                           
  6699                           
  6700                           ;psect for function _abs
  6701  16F6                     _abs:	
  6702                           
  6703                           ;incstack = 0
  6704                           ; Regs used in _abs: [wreg+status,2+status,0]
  6705  16F6  0021               	movlb	1	; select bank1
  6706  16F7  0834               	movf	(abs@a+1)^(0+128),w
  6707  16F8  3A80               	xorlw	128
  6708  16F9  00B5               	movwf	??_abs^(0+128)
  6709  16FA  3080               	movlw	128
  6710  16FB  0235               	subwf	??_abs^(0+128),w
  6711  16FC  1D03               	skipz
  6712  16FD  2F00               	goto	u4785
  6713  16FE  3001               	movlw	1
  6714  16FF  0233               	subwf	abs@a^(0+128),w
  6715  1700                     u4785:	
  6716  1700  1803               	skipnc
  6717  1701  0008               	return
  6718  1702  0021               	movlb	1	; select bank1
  6719  1703  0933               	comf	abs@a^(0+128),w
  6720  1704  00B5               	movwf	??_abs^(0+128)
  6721  1705  0934               	comf	(abs@a+1)^(0+128),w
  6722  1706  00B6               	movwf	(??_abs^(0+128)+1)
  6723  1707  0AB5               	incf	??_abs^(0+128),f
  6724  1708  1903               	skipnz
  6725  1709  0AB6               	incf	(??_abs^(0+128)+1),f
  6726  170A  0835               	movf	??_abs^(0+128),w
  6727  170B  00B3               	movwf	?_abs^(0+128)
  6728  170C  0836               	movf	(??_abs+1)^(0+128),w
  6729  170D  00B4               	movwf	(?_abs+1)^(0+128)
  6730  170E  0008               	return
  6731  170F                     __end_of_abs:	
  6732                           
  6733                           	psect	text17
  6734  0BCB                     __ptext17:	
  6735 ;; *************** function ___aomod *****************
  6736 ;; Defined at:
  6737 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  6738 ;; Parameters:    Size  Location     Type
  6739 ;;  divisor         8    0[BANK1 ] long long 
  6740 ;;  dividend        8    8[BANK1 ] long long 
  6741 ;; Auto vars:     Size  Location     Type
  6742 ;;  sign            1   18[BANK1 ] unsigned char 
  6743 ;;  counter         1   17[BANK1 ] unsigned char 
  6744 ;; Return value:  Size  Location     Type
  6745 ;;                  8    0[BANK1 ] long long 
  6746 ;; Registers used:
  6747 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6748 ;; Tracked objects:
  6749 ;;		On entry : 0/0
  6750 ;;		On exit  : 0/0
  6751 ;;		Unchanged: 0/0
  6752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6753 ;;      Params:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  6754 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6755 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6756 ;;      Totals:         0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0
  6757 ;;Total ram usage:       19 bytes
  6758 ;; Hardware stack levels used:    1
  6759 ;; Hardware stack levels required when called:    6
  6760 ;; This function calls:
  6761 ;;		Nothing
  6762 ;; This function is called by:
  6763 ;;		_dtoa
  6764 ;; This function uses a non-reentrant model
  6765 ;;
  6766                           
  6767                           
  6768                           ;psect for function ___aomod
  6769  0BCB                     ___aomod:	
  6770                           
  6771                           ;incstack = 0
  6772                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  6773  0BCB  0021               	movlb	1	; select bank1
  6774  0BCC  01B2               	clrf	___aomod@sign^(0+128)
  6775  0BCD  30A8               	movlw	low ___aomod@dividend
  6776  0BCE  0086               	movwf	6
  6777  0BCF  3000               	movlw	high ___aomod@dividend
  6778  0BD0  0087               	movwf	7
  6779  0BD1  3F47               	moviw [7]fsr1
  6780  0BD2  00B0               	movwf	??___aomod^(0+128)
  6781  0BD3  1FB0               	btfss	??___aomod^(0+128),7
  6782  0BD4  2BF7               	goto	l3711
  6783  0BD5  0021               	movlb	1	; select bank1
  6784  0BD6  09A8               	comf	___aomod@dividend^(0+128),f
  6785  0BD7  09A9               	comf	(___aomod@dividend+1)^(0+128),f
  6786  0BD8  09AA               	comf	(___aomod@dividend+2)^(0+128),f
  6787  0BD9  09AB               	comf	(___aomod@dividend+3)^(0+128),f
  6788  0BDA  09AC               	comf	(___aomod@dividend+4)^(0+128),f
  6789  0BDB  09AD               	comf	(___aomod@dividend+5)^(0+128),f
  6790  0BDC  09AE               	comf	(___aomod@dividend+6)^(0+128),f
  6791  0BDD  09AF               	comf	(___aomod@dividend+7)^(0+128),f
  6792  0BDE  0AA8               	incf	___aomod@dividend^(0+128),f
  6793  0BDF  1D03               	skipz
  6794  0BE0  2BF4               	goto	u491lld
  6795  0BE1  0AA9               	incf	(___aomod@dividend+1)^(0+128),f
  6796  0BE2  1D03               	skipz
  6797  0BE3  2BF4               	goto	u491lld
  6798  0BE4  0AAA               	incf	(___aomod@dividend+2)^(0+128),f
  6799  0BE5  1D03               	skipz
  6800  0BE6  2BF4               	goto	u491lld
  6801  0BE7  0AAB               	incf	(___aomod@dividend+3)^(0+128),f
  6802  0BE8  1D03               	skipz
  6803  0BE9  2BF4               	goto	u491lld
  6804  0BEA  0AAC               	incf	(___aomod@dividend+4)^(0+128),f
  6805  0BEB  1D03               	skipz
  6806  0BEC  2BF4               	goto	u491lld
  6807  0BED  0AAD               	incf	(___aomod@dividend+5)^(0+128),f
  6808  0BEE  1D03               	skipz
  6809  0BEF  2BF4               	goto	u491lld
  6810  0BF0  0AAE               	incf	(___aomod@dividend+6)^(0+128),f
  6811  0BF1  1D03               	skipz
  6812  0BF2  2BF4               	goto	u491lld
  6813  0BF3  0AAF               	incf	(___aomod@dividend+7)^(0+128),f
  6814  0BF4                     u491lld:	
  6815  0BF4  0021               	movlb	1	; select bank1
  6816  0BF5  01B2               	clrf	___aomod@sign^(0+128)
  6817  0BF6  0AB2               	incf	___aomod@sign^(0+128),f
  6818  0BF7                     l3711:	
  6819  0BF7  30A0               	movlw	low ___aomod@divisor
  6820  0BF8  0086               	movwf	6
  6821  0BF9  3000               	movlw	high ___aomod@divisor
  6822  0BFA  0087               	movwf	7
  6823  0BFB  3F47               	moviw [7]fsr1
  6824  0BFC  0021               	movlb	1	; select bank1
  6825  0BFD  00B0               	movwf	??___aomod^(0+128)
  6826  0BFE  1FB0               	btfss	??___aomod^(0+128),7
  6827  0BFF  2C1F               	goto	l3715
  6828  0C00  0021               	movlb	1	; select bank1
  6829  0C01  09A0               	comf	___aomod@divisor^(0+128),f
  6830  0C02  09A1               	comf	(___aomod@divisor+1)^(0+128),f
  6831  0C03  09A2               	comf	(___aomod@divisor+2)^(0+128),f
  6832  0C04  09A3               	comf	(___aomod@divisor+3)^(0+128),f
  6833  0C05  09A4               	comf	(___aomod@divisor+4)^(0+128),f
  6834  0C06  09A5               	comf	(___aomod@divisor+5)^(0+128),f
  6835  0C07  09A6               	comf	(___aomod@divisor+6)^(0+128),f
  6836  0C08  09A7               	comf	(___aomod@divisor+7)^(0+128),f
  6837  0C09  0AA0               	incf	___aomod@divisor^(0+128),f
  6838  0C0A  1D03               	skipz
  6839  0C0B  2C1F               	goto	l3715
  6840  0C0C  0AA1               	incf	(___aomod@divisor+1)^(0+128),f
  6841  0C0D  1D03               	skipz
  6842  0C0E  2C1F               	goto	l3715
  6843  0C0F  0AA2               	incf	(___aomod@divisor+2)^(0+128),f
  6844  0C10  1D03               	skipz
  6845  0C11  2C1F               	goto	l3715
  6846  0C12  0AA3               	incf	(___aomod@divisor+3)^(0+128),f
  6847  0C13  1D03               	skipz
  6848  0C14  2C1F               	goto	l3715
  6849  0C15  0AA4               	incf	(___aomod@divisor+4)^(0+128),f
  6850  0C16  1D03               	skipz
  6851  0C17  2C1F               	goto	l3715
  6852  0C18  0AA5               	incf	(___aomod@divisor+5)^(0+128),f
  6853  0C19  1D03               	skipz
  6854  0C1A  2C1F               	goto	l3715
  6855  0C1B  0AA6               	incf	(___aomod@divisor+6)^(0+128),f
  6856  0C1C  1D03               	skipz
  6857  0C1D  2C1F               	goto	l3715
  6858  0C1E  0AA7               	incf	(___aomod@divisor+7)^(0+128),f
  6859  0C1F                     l3715:	
  6860  0C1F  0021               	movlb	1	; select bank1
  6861  0C20  0820               	movf	___aomod@divisor^(0+128),w
  6862  0C21  0421               	iorwf	(___aomod@divisor+1)^(0+128),w
  6863  0C22  0422               	iorwf	(___aomod@divisor+2)^(0+128),w
  6864  0C23  0423               	iorwf	(___aomod@divisor+3)^(0+128),w
  6865  0C24  0424               	iorwf	(___aomod@divisor+4)^(0+128),w
  6866  0C25  0425               	iorwf	(___aomod@divisor+5)^(0+128),w
  6867  0C26  0426               	iorwf	(___aomod@divisor+6)^(0+128),w
  6868  0C27  0427               	iorwf	(___aomod@divisor+7)^(0+128),w
  6869  0C28  1903               	skipnz
  6870  0C29  2C77               	goto	l3731
  6871  0C2A  01B1               	clrf	___aomod@counter^(0+128)
  6872  0C2B  0AB1               	incf	___aomod@counter^(0+128),f
  6873  0C2C                     l3723:	
  6874  0C2C  1BA7               	btfsc	(___aomod@divisor+7)^(0+128),7
  6875  0C2D  2C3B               	goto	l3725
  6876  0C2E  35A0               	lslf	___aomod@divisor^(0+128),f
  6877  0C2F  0DA1               	rlf	(___aomod@divisor+1)^(0+128),f
  6878  0C30  0DA2               	rlf	(___aomod@divisor+2)^(0+128),f
  6879  0C31  0DA3               	rlf	(___aomod@divisor+3)^(0+128),f
  6880  0C32  0DA4               	rlf	(___aomod@divisor+4)^(0+128),f
  6881  0C33  0DA5               	rlf	(___aomod@divisor+5)^(0+128),f
  6882  0C34  0DA6               	rlf	(___aomod@divisor+6)^(0+128),f
  6883  0C35  0DA7               	rlf	(___aomod@divisor+7)^(0+128),f
  6884  0C36  3001               	movlw	1
  6885  0C37  00B0               	movwf	??___aomod^(0+128)
  6886  0C38  0830               	movf	??___aomod^(0+128),w
  6887  0C39  07B1               	addwf	___aomod@counter^(0+128),f
  6888  0C3A  2C2C               	goto	l3723
  6889  0C3B                     l3725:	
  6890  0C3B  0827               	movf	(___aomod@divisor+7)^(0+128),w
  6891  0C3C  022F               	subwf	(___aomod@dividend+7)^(0+128),w
  6892  0C3D  1D03               	skipz
  6893  0C3E  2C59               	goto	u4965
  6894  0C3F  0826               	movf	(___aomod@divisor+6)^(0+128),w
  6895  0C40  022E               	subwf	(___aomod@dividend+6)^(0+128),w
  6896  0C41  1D03               	skipz
  6897  0C42  2C59               	goto	u4965
  6898  0C43  0825               	movf	(___aomod@divisor+5)^(0+128),w
  6899  0C44  022D               	subwf	(___aomod@dividend+5)^(0+128),w
  6900  0C45  1D03               	skipz
  6901  0C46  2C59               	goto	u4965
  6902  0C47  0824               	movf	(___aomod@divisor+4)^(0+128),w
  6903  0C48  022C               	subwf	(___aomod@dividend+4)^(0+128),w
  6904  0C49  1D03               	skipz
  6905  0C4A  2C59               	goto	u4965
  6906  0C4B  0823               	movf	(___aomod@divisor+3)^(0+128),w
  6907  0C4C  022B               	subwf	(___aomod@dividend+3)^(0+128),w
  6908  0C4D  1D03               	skipz
  6909  0C4E  2C59               	goto	u4965
  6910  0C4F  0822               	movf	(___aomod@divisor+2)^(0+128),w
  6911  0C50  022A               	subwf	(___aomod@dividend+2)^(0+128),w
  6912  0C51  1D03               	skipz
  6913  0C52  2C59               	goto	u4965
  6914  0C53  0821               	movf	(___aomod@divisor+1)^(0+128),w
  6915  0C54  0229               	subwf	(___aomod@dividend+1)^(0+128),w
  6916  0C55  1D03               	skipz
  6917  0C56  2C59               	goto	u4965
  6918  0C57  0820               	movf	___aomod@divisor^(0+128),w
  6919  0C58  0228               	subwf	___aomod@dividend^(0+128),w
  6920  0C59                     u4965:	
  6921  0C59  1C03               	skipc
  6922  0C5A  2C6B               	goto	l3729
  6923  0C5B  0820               	movf	___aomod@divisor^(0+128),w
  6924  0C5C  02A8               	subwf	___aomod@dividend^(0+128),f
  6925  0C5D  0821               	movf	(___aomod@divisor+1)^(0+128),w
  6926  0C5E  3BA9               	subwfb	(___aomod@dividend+1)^(0+128),f
  6927  0C5F  0822               	movf	(___aomod@divisor+2)^(0+128),w
  6928  0C60  3BAA               	subwfb	(___aomod@dividend+2)^(0+128),f
  6929  0C61  0823               	movf	(___aomod@divisor+3)^(0+128),w
  6930  0C62  3BAB               	subwfb	(___aomod@dividend+3)^(0+128),f
  6931  0C63  0824               	movf	(___aomod@divisor+4)^(0+128),w
  6932  0C64  3BAC               	subwfb	(___aomod@dividend+4)^(0+128),f
  6933  0C65  0825               	movf	(___aomod@divisor+5)^(0+128),w
  6934  0C66  3BAD               	subwfb	(___aomod@dividend+5)^(0+128),f
  6935  0C67  0826               	movf	(___aomod@divisor+6)^(0+128),w
  6936  0C68  3BAE               	subwfb	(___aomod@dividend+6)^(0+128),f
  6937  0C69  0827               	movf	(___aomod@divisor+7)^(0+128),w
  6938  0C6A  3BAF               	subwfb	(___aomod@dividend+7)^(0+128),f
  6939  0C6B                     l3729:	
  6940  0C6B  36A7               	lsrf	(___aomod@divisor+7)^(0+128),f
  6941  0C6C  0CA6               	rrf	(___aomod@divisor+6)^(0+128),f
  6942  0C6D  0CA5               	rrf	(___aomod@divisor+5)^(0+128),f
  6943  0C6E  0CA4               	rrf	(___aomod@divisor+4)^(0+128),f
  6944  0C6F  0CA3               	rrf	(___aomod@divisor+3)^(0+128),f
  6945  0C70  0CA2               	rrf	(___aomod@divisor+2)^(0+128),f
  6946  0C71  0CA1               	rrf	(___aomod@divisor+1)^(0+128),f
  6947  0C72  0CA0               	rrf	___aomod@divisor^(0+128),f
  6948  0C73  3001               	movlw	1
  6949  0C74  02B1               	subwf	___aomod@counter^(0+128),f
  6950  0C75  1D03               	btfss	3,2
  6951  0C76  2C3B               	goto	l3725
  6952  0C77                     l3731:	
  6953  0C77  0832               	movf	___aomod@sign^(0+128),w
  6954  0C78  1903               	btfsc	3,2
  6955  0C79  2C98               	goto	l627
  6956  0C7A  09A8               	comf	___aomod@dividend^(0+128),f
  6957  0C7B  09A9               	comf	(___aomod@dividend+1)^(0+128),f
  6958  0C7C  09AA               	comf	(___aomod@dividend+2)^(0+128),f
  6959  0C7D  09AB               	comf	(___aomod@dividend+3)^(0+128),f
  6960  0C7E  09AC               	comf	(___aomod@dividend+4)^(0+128),f
  6961  0C7F  09AD               	comf	(___aomod@dividend+5)^(0+128),f
  6962  0C80  09AE               	comf	(___aomod@dividend+6)^(0+128),f
  6963  0C81  09AF               	comf	(___aomod@dividend+7)^(0+128),f
  6964  0C82  0AA8               	incf	___aomod@dividend^(0+128),f
  6965  0C83  1D03               	skipz
  6966  0C84  2C98               	goto	l627
  6967  0C85  0AA9               	incf	(___aomod@dividend+1)^(0+128),f
  6968  0C86  1D03               	skipz
  6969  0C87  2C98               	goto	l627
  6970  0C88  0AAA               	incf	(___aomod@dividend+2)^(0+128),f
  6971  0C89  1D03               	skipz
  6972  0C8A  2C98               	goto	l627
  6973  0C8B  0AAB               	incf	(___aomod@dividend+3)^(0+128),f
  6974  0C8C  1D03               	skipz
  6975  0C8D  2C98               	goto	l627
  6976  0C8E  0AAC               	incf	(___aomod@dividend+4)^(0+128),f
  6977  0C8F  1D03               	skipz
  6978  0C90  2C98               	goto	l627
  6979  0C91  0AAD               	incf	(___aomod@dividend+5)^(0+128),f
  6980  0C92  1D03               	skipz
  6981  0C93  2C98               	goto	l627
  6982  0C94  0AAE               	incf	(___aomod@dividend+6)^(0+128),f
  6983  0C95  1D03               	skipz
  6984  0C96  2C98               	goto	l627
  6985  0C97  0AAF               	incf	(___aomod@dividend+7)^(0+128),f
  6986  0C98                     l627:	
  6987  0C98  0021               	movlb	1	; select bank1
  6988  0C99  0828               	movf	___aomod@dividend^(0+128),w
  6989  0C9A  00A0               	movwf	?___aomod^(0+128)
  6990  0C9B  0829               	movf	(___aomod@dividend+1)^(0+128),w
  6991  0C9C  00A1               	movwf	(?___aomod+1)^(0+128)
  6992  0C9D  082A               	movf	(___aomod@dividend+2)^(0+128),w
  6993  0C9E  00A2               	movwf	(?___aomod+2)^(0+128)
  6994  0C9F  082B               	movf	(___aomod@dividend+3)^(0+128),w
  6995  0CA0  00A3               	movwf	(?___aomod+3)^(0+128)
  6996  0CA1  082C               	movf	(___aomod@dividend+4)^(0+128),w
  6997  0CA2  00A4               	movwf	(?___aomod+4)^(0+128)
  6998  0CA3  082D               	movf	(___aomod@dividend+5)^(0+128),w
  6999  0CA4  00A5               	movwf	(?___aomod+5)^(0+128)
  7000  0CA5  082E               	movf	(___aomod@dividend+6)^(0+128),w
  7001  0CA6  00A6               	movwf	(?___aomod+6)^(0+128)
  7002  0CA7  082F               	movf	(___aomod@dividend+7)^(0+128),w
  7003  0CA8  00A7               	movwf	(?___aomod+7)^(0+128)
  7004  0CA9  0008               	return
  7005  0CAA                     __end_of___aomod:	
  7006                           
  7007                           	psect	text18
  7008  0CAA                     __ptext18:	
  7009 ;; *************** function ___aodiv *****************
  7010 ;; Defined at:
  7011 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  7012 ;; Parameters:    Size  Location     Type
  7013 ;;  divisor         8    0[BANK1 ] long long 
  7014 ;;  dividend        8    8[BANK1 ] long long 
  7015 ;; Auto vars:     Size  Location     Type
  7016 ;;  quotient        8   19[BANK1 ] long long 
  7017 ;;  sign            1   18[BANK1 ] unsigned char 
  7018 ;;  counter         1   17[BANK1 ] unsigned char 
  7019 ;; Return value:  Size  Location     Type
  7020 ;;                  8    0[BANK1 ] long long 
  7021 ;; Registers used:
  7022 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7023 ;; Tracked objects:
  7024 ;;		On entry : 0/0
  7025 ;;		On exit  : 0/0
  7026 ;;		Unchanged: 0/0
  7027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7028 ;;      Params:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  7029 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  7030 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7031 ;;      Totals:         0       0      27       0       0       0       0       0       0       0       0       0       
      +0       0
  7032 ;;Total ram usage:       27 bytes
  7033 ;; Hardware stack levels used:    1
  7034 ;; Hardware stack levels required when called:    6
  7035 ;; This function calls:
  7036 ;;		Nothing
  7037 ;; This function is called by:
  7038 ;;		_dtoa
  7039 ;; This function uses a non-reentrant model
  7040 ;;
  7041                           
  7042                           
  7043                           ;psect for function ___aodiv
  7044  0CAA                     ___aodiv:	
  7045                           
  7046                           ;incstack = 0
  7047                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  7048  0CAA  0021               	movlb	1	; select bank1
  7049  0CAB  01B2               	clrf	___aodiv@sign^(0+128)
  7050  0CAC  30A0               	movlw	low ___aodiv@divisor
  7051  0CAD  0086               	movwf	6
  7052  0CAE  3000               	movlw	high ___aodiv@divisor
  7053  0CAF  0087               	movwf	7
  7054  0CB0  3F47               	moviw [7]fsr1
  7055  0CB1  00B0               	movwf	??___aodiv^(0+128)
  7056  0CB2  1FB0               	btfss	??___aodiv^(0+128),7
  7057  0CB3  2CD6               	goto	l3673
  7058  0CB4  0021               	movlb	1	; select bank1
  7059  0CB5  09A0               	comf	___aodiv@divisor^(0+128),f
  7060  0CB6  09A1               	comf	(___aodiv@divisor+1)^(0+128),f
  7061  0CB7  09A2               	comf	(___aodiv@divisor+2)^(0+128),f
  7062  0CB8  09A3               	comf	(___aodiv@divisor+3)^(0+128),f
  7063  0CB9  09A4               	comf	(___aodiv@divisor+4)^(0+128),f
  7064  0CBA  09A5               	comf	(___aodiv@divisor+5)^(0+128),f
  7065  0CBB  09A6               	comf	(___aodiv@divisor+6)^(0+128),f
  7066  0CBC  09A7               	comf	(___aodiv@divisor+7)^(0+128),f
  7067  0CBD  0AA0               	incf	___aodiv@divisor^(0+128),f
  7068  0CBE  1D03               	skipz
  7069  0CBF  2CD3               	goto	u480lld
  7070  0CC0  0AA1               	incf	(___aodiv@divisor+1)^(0+128),f
  7071  0CC1  1D03               	skipz
  7072  0CC2  2CD3               	goto	u480lld
  7073  0CC3  0AA2               	incf	(___aodiv@divisor+2)^(0+128),f
  7074  0CC4  1D03               	skipz
  7075  0CC5  2CD3               	goto	u480lld
  7076  0CC6  0AA3               	incf	(___aodiv@divisor+3)^(0+128),f
  7077  0CC7  1D03               	skipz
  7078  0CC8  2CD3               	goto	u480lld
  7079  0CC9  0AA4               	incf	(___aodiv@divisor+4)^(0+128),f
  7080  0CCA  1D03               	skipz
  7081  0CCB  2CD3               	goto	u480lld
  7082  0CCC  0AA5               	incf	(___aodiv@divisor+5)^(0+128),f
  7083  0CCD  1D03               	skipz
  7084  0CCE  2CD3               	goto	u480lld
  7085  0CCF  0AA6               	incf	(___aodiv@divisor+6)^(0+128),f
  7086  0CD0  1D03               	skipz
  7087  0CD1  2CD3               	goto	u480lld
  7088  0CD2  0AA7               	incf	(___aodiv@divisor+7)^(0+128),f
  7089  0CD3                     u480lld:	
  7090  0CD3  0021               	movlb	1	; select bank1
  7091  0CD4  01B2               	clrf	___aodiv@sign^(0+128)
  7092  0CD5  0AB2               	incf	___aodiv@sign^(0+128),f
  7093  0CD6                     l3673:	
  7094  0CD6  30A8               	movlw	low ___aodiv@dividend
  7095  0CD7  0086               	movwf	6
  7096  0CD8  3000               	movlw	high ___aodiv@dividend
  7097  0CD9  0087               	movwf	7
  7098  0CDA  3F47               	moviw [7]fsr1
  7099  0CDB  0021               	movlb	1	; select bank1
  7100  0CDC  00B0               	movwf	??___aodiv^(0+128)
  7101  0CDD  1FB0               	btfss	??___aodiv^(0+128),7
  7102  0CDE  2D03               	goto	l3679
  7103  0CDF  0021               	movlb	1	; select bank1
  7104  0CE0  09A8               	comf	___aodiv@dividend^(0+128),f
  7105  0CE1  09A9               	comf	(___aodiv@dividend+1)^(0+128),f
  7106  0CE2  09AA               	comf	(___aodiv@dividend+2)^(0+128),f
  7107  0CE3  09AB               	comf	(___aodiv@dividend+3)^(0+128),f
  7108  0CE4  09AC               	comf	(___aodiv@dividend+4)^(0+128),f
  7109  0CE5  09AD               	comf	(___aodiv@dividend+5)^(0+128),f
  7110  0CE6  09AE               	comf	(___aodiv@dividend+6)^(0+128),f
  7111  0CE7  09AF               	comf	(___aodiv@dividend+7)^(0+128),f
  7112  0CE8  0AA8               	incf	___aodiv@dividend^(0+128),f
  7113  0CE9  1D03               	skipz
  7114  0CEA  2CFE               	goto	l3677
  7115  0CEB  0AA9               	incf	(___aodiv@dividend+1)^(0+128),f
  7116  0CEC  1D03               	skipz
  7117  0CED  2CFE               	goto	l3677
  7118  0CEE  0AAA               	incf	(___aodiv@dividend+2)^(0+128),f
  7119  0CEF  1D03               	skipz
  7120  0CF0  2CFE               	goto	l3677
  7121  0CF1  0AAB               	incf	(___aodiv@dividend+3)^(0+128),f
  7122  0CF2  1D03               	skipz
  7123  0CF3  2CFE               	goto	l3677
  7124  0CF4  0AAC               	incf	(___aodiv@dividend+4)^(0+128),f
  7125  0CF5  1D03               	skipz
  7126  0CF6  2CFE               	goto	l3677
  7127  0CF7  0AAD               	incf	(___aodiv@dividend+5)^(0+128),f
  7128  0CF8  1D03               	skipz
  7129  0CF9  2CFE               	goto	l3677
  7130  0CFA  0AAE               	incf	(___aodiv@dividend+6)^(0+128),f
  7131  0CFB  1D03               	skipz
  7132  0CFC  2CFE               	goto	l3677
  7133  0CFD  0AAF               	incf	(___aodiv@dividend+7)^(0+128),f
  7134  0CFE                     l3677:	
  7135  0CFE  3001               	movlw	1
  7136  0CFF  0021               	movlb	1	; select bank1
  7137  0D00  00B0               	movwf	??___aodiv^(0+128)
  7138  0D01  0830               	movf	??___aodiv^(0+128),w
  7139  0D02  06B2               	xorwf	___aodiv@sign^(0+128),f
  7140  0D03                     l3679:	
  7141  0D03  30B3               	movlw	low ___aodiv@quotient
  7142  0D04  0086               	movwf	6
  7143  0D05  3000               	movlw	high ___aodiv@quotient
  7144  0D06  0087               	movwf	7
  7145  0D07  3008               	movlw	8
  7146  0D08  0021               	movlb	1	; select bank1
  7147  0D09  00B0               	movwf	??___aodiv^(0+128)
  7148  0D0A  3000               	movlw	0
  7149  0D0B                     u4830:	
  7150  0D0B  001E               	movwi fsr1++
  7151  0D0C  0BB0               	decfsz	??___aodiv^(0+128),f
  7152  0D0D  2D0B               	goto	u4830
  7153  0D0E  0820               	movf	___aodiv@divisor^(0+128),w
  7154  0D0F  0421               	iorwf	(___aodiv@divisor+1)^(0+128),w
  7155  0D10  0422               	iorwf	(___aodiv@divisor+2)^(0+128),w
  7156  0D11  0423               	iorwf	(___aodiv@divisor+3)^(0+128),w
  7157  0D12  0424               	iorwf	(___aodiv@divisor+4)^(0+128),w
  7158  0D13  0425               	iorwf	(___aodiv@divisor+5)^(0+128),w
  7159  0D14  0426               	iorwf	(___aodiv@divisor+6)^(0+128),w
  7160  0D15  0427               	iorwf	(___aodiv@divisor+7)^(0+128),w
  7161  0D16  1903               	skipnz
  7162  0D17  2D6E               	goto	l3701
  7163  0D18  01B1               	clrf	___aodiv@counter^(0+128)
  7164  0D19  0AB1               	incf	___aodiv@counter^(0+128),f
  7165  0D1A                     l3689:	
  7166  0D1A  1BA7               	btfsc	(___aodiv@divisor+7)^(0+128),7
  7167  0D1B  2D29               	goto	l3691
  7168  0D1C  35A0               	lslf	___aodiv@divisor^(0+128),f
  7169  0D1D  0DA1               	rlf	(___aodiv@divisor+1)^(0+128),f
  7170  0D1E  0DA2               	rlf	(___aodiv@divisor+2)^(0+128),f
  7171  0D1F  0DA3               	rlf	(___aodiv@divisor+3)^(0+128),f
  7172  0D20  0DA4               	rlf	(___aodiv@divisor+4)^(0+128),f
  7173  0D21  0DA5               	rlf	(___aodiv@divisor+5)^(0+128),f
  7174  0D22  0DA6               	rlf	(___aodiv@divisor+6)^(0+128),f
  7175  0D23  0DA7               	rlf	(___aodiv@divisor+7)^(0+128),f
  7176  0D24  3001               	movlw	1
  7177  0D25  00B0               	movwf	??___aodiv^(0+128)
  7178  0D26  0830               	movf	??___aodiv^(0+128),w
  7179  0D27  07B1               	addwf	___aodiv@counter^(0+128),f
  7180  0D28  2D1A               	goto	l3689
  7181  0D29                     l3691:	
  7182  0D29  35B3               	lslf	___aodiv@quotient^(0+128),f
  7183  0D2A  0DB4               	rlf	(___aodiv@quotient+1)^(0+128),f
  7184  0D2B  0DB5               	rlf	(___aodiv@quotient+2)^(0+128),f
  7185  0D2C  0DB6               	rlf	(___aodiv@quotient+3)^(0+128),f
  7186  0D2D  0DB7               	rlf	(___aodiv@quotient+4)^(0+128),f
  7187  0D2E  0DB8               	rlf	(___aodiv@quotient+5)^(0+128),f
  7188  0D2F  0DB9               	rlf	(___aodiv@quotient+6)^(0+128),f
  7189  0D30  0DBA               	rlf	(___aodiv@quotient+7)^(0+128),f
  7190  0D31  0827               	movf	(___aodiv@divisor+7)^(0+128),w
  7191  0D32  022F               	subwf	(___aodiv@dividend+7)^(0+128),w
  7192  0D33  1D03               	skipz
  7193  0D34  2D4F               	goto	u4865
  7194  0D35  0826               	movf	(___aodiv@divisor+6)^(0+128),w
  7195  0D36  022E               	subwf	(___aodiv@dividend+6)^(0+128),w
  7196  0D37  1D03               	skipz
  7197  0D38  2D4F               	goto	u4865
  7198  0D39  0825               	movf	(___aodiv@divisor+5)^(0+128),w
  7199  0D3A  022D               	subwf	(___aodiv@dividend+5)^(0+128),w
  7200  0D3B  1D03               	skipz
  7201  0D3C  2D4F               	goto	u4865
  7202  0D3D  0824               	movf	(___aodiv@divisor+4)^(0+128),w
  7203  0D3E  022C               	subwf	(___aodiv@dividend+4)^(0+128),w
  7204  0D3F  1D03               	skipz
  7205  0D40  2D4F               	goto	u4865
  7206  0D41  0823               	movf	(___aodiv@divisor+3)^(0+128),w
  7207  0D42  022B               	subwf	(___aodiv@dividend+3)^(0+128),w
  7208  0D43  1D03               	skipz
  7209  0D44  2D4F               	goto	u4865
  7210  0D45  0822               	movf	(___aodiv@divisor+2)^(0+128),w
  7211  0D46  022A               	subwf	(___aodiv@dividend+2)^(0+128),w
  7212  0D47  1D03               	skipz
  7213  0D48  2D4F               	goto	u4865
  7214  0D49  0821               	movf	(___aodiv@divisor+1)^(0+128),w
  7215  0D4A  0229               	subwf	(___aodiv@dividend+1)^(0+128),w
  7216  0D4B  1D03               	skipz
  7217  0D4C  2D4F               	goto	u4865
  7218  0D4D  0820               	movf	___aodiv@divisor^(0+128),w
  7219  0D4E  0228               	subwf	___aodiv@dividend^(0+128),w
  7220  0D4F                     u4865:	
  7221  0D4F  1C03               	skipc
  7222  0D50  2D62               	goto	l3699
  7223  0D51  0820               	movf	___aodiv@divisor^(0+128),w
  7224  0D52  02A8               	subwf	___aodiv@dividend^(0+128),f
  7225  0D53  0821               	movf	(___aodiv@divisor+1)^(0+128),w
  7226  0D54  3BA9               	subwfb	(___aodiv@dividend+1)^(0+128),f
  7227  0D55  0822               	movf	(___aodiv@divisor+2)^(0+128),w
  7228  0D56  3BAA               	subwfb	(___aodiv@dividend+2)^(0+128),f
  7229  0D57  0823               	movf	(___aodiv@divisor+3)^(0+128),w
  7230  0D58  3BAB               	subwfb	(___aodiv@dividend+3)^(0+128),f
  7231  0D59  0824               	movf	(___aodiv@divisor+4)^(0+128),w
  7232  0D5A  3BAC               	subwfb	(___aodiv@dividend+4)^(0+128),f
  7233  0D5B  0825               	movf	(___aodiv@divisor+5)^(0+128),w
  7234  0D5C  3BAD               	subwfb	(___aodiv@dividend+5)^(0+128),f
  7235  0D5D  0826               	movf	(___aodiv@divisor+6)^(0+128),w
  7236  0D5E  3BAE               	subwfb	(___aodiv@dividend+6)^(0+128),f
  7237  0D5F  0827               	movf	(___aodiv@divisor+7)^(0+128),w
  7238  0D60  3BAF               	subwfb	(___aodiv@dividend+7)^(0+128),f
  7239  0D61  1433               	bsf	___aodiv@quotient^(0+128),0
  7240  0D62                     l3699:	
  7241  0D62  36A7               	lsrf	(___aodiv@divisor+7)^(0+128),f
  7242  0D63  0CA6               	rrf	(___aodiv@divisor+6)^(0+128),f
  7243  0D64  0CA5               	rrf	(___aodiv@divisor+5)^(0+128),f
  7244  0D65  0CA4               	rrf	(___aodiv@divisor+4)^(0+128),f
  7245  0D66  0CA3               	rrf	(___aodiv@divisor+3)^(0+128),f
  7246  0D67  0CA2               	rrf	(___aodiv@divisor+2)^(0+128),f
  7247  0D68  0CA1               	rrf	(___aodiv@divisor+1)^(0+128),f
  7248  0D69  0CA0               	rrf	___aodiv@divisor^(0+128),f
  7249  0D6A  3001               	movlw	1
  7250  0D6B  02B1               	subwf	___aodiv@counter^(0+128),f
  7251  0D6C  1D03               	btfss	3,2
  7252  0D6D  2D29               	goto	l3691
  7253  0D6E                     l3701:	
  7254  0D6E  0832               	movf	___aodiv@sign^(0+128),w
  7255  0D6F  1903               	btfsc	3,2
  7256  0D70  2D8F               	goto	l614
  7257  0D71  09B3               	comf	___aodiv@quotient^(0+128),f
  7258  0D72  09B4               	comf	(___aodiv@quotient+1)^(0+128),f
  7259  0D73  09B5               	comf	(___aodiv@quotient+2)^(0+128),f
  7260  0D74  09B6               	comf	(___aodiv@quotient+3)^(0+128),f
  7261  0D75  09B7               	comf	(___aodiv@quotient+4)^(0+128),f
  7262  0D76  09B8               	comf	(___aodiv@quotient+5)^(0+128),f
  7263  0D77  09B9               	comf	(___aodiv@quotient+6)^(0+128),f
  7264  0D78  09BA               	comf	(___aodiv@quotient+7)^(0+128),f
  7265  0D79  0AB3               	incf	___aodiv@quotient^(0+128),f
  7266  0D7A  1D03               	skipz
  7267  0D7B  2D8F               	goto	l614
  7268  0D7C  0AB4               	incf	(___aodiv@quotient+1)^(0+128),f
  7269  0D7D  1D03               	skipz
  7270  0D7E  2D8F               	goto	l614
  7271  0D7F  0AB5               	incf	(___aodiv@quotient+2)^(0+128),f
  7272  0D80  1D03               	skipz
  7273  0D81  2D8F               	goto	l614
  7274  0D82  0AB6               	incf	(___aodiv@quotient+3)^(0+128),f
  7275  0D83  1D03               	skipz
  7276  0D84  2D8F               	goto	l614
  7277  0D85  0AB7               	incf	(___aodiv@quotient+4)^(0+128),f
  7278  0D86  1D03               	skipz
  7279  0D87  2D8F               	goto	l614
  7280  0D88  0AB8               	incf	(___aodiv@quotient+5)^(0+128),f
  7281  0D89  1D03               	skipz
  7282  0D8A  2D8F               	goto	l614
  7283  0D8B  0AB9               	incf	(___aodiv@quotient+6)^(0+128),f
  7284  0D8C  1D03               	skipz
  7285  0D8D  2D8F               	goto	l614
  7286  0D8E  0ABA               	incf	(___aodiv@quotient+7)^(0+128),f
  7287  0D8F                     l614:	
  7288  0D8F  0021               	movlb	1	; select bank1
  7289  0D90  0833               	movf	___aodiv@quotient^(0+128),w
  7290  0D91  00A0               	movwf	?___aodiv^(0+128)
  7291  0D92  0834               	movf	(___aodiv@quotient+1)^(0+128),w
  7292  0D93  00A1               	movwf	(?___aodiv+1)^(0+128)
  7293  0D94  0835               	movf	(___aodiv@quotient+2)^(0+128),w
  7294  0D95  00A2               	movwf	(?___aodiv+2)^(0+128)
  7295  0D96  0836               	movf	(___aodiv@quotient+3)^(0+128),w
  7296  0D97  00A3               	movwf	(?___aodiv+3)^(0+128)
  7297  0D98  0837               	movf	(___aodiv@quotient+4)^(0+128),w
  7298  0D99  00A4               	movwf	(?___aodiv+4)^(0+128)
  7299  0D9A  0838               	movf	(___aodiv@quotient+5)^(0+128),w
  7300  0D9B  00A5               	movwf	(?___aodiv+5)^(0+128)
  7301  0D9C  0839               	movf	(___aodiv@quotient+6)^(0+128),w
  7302  0D9D  00A6               	movwf	(?___aodiv+6)^(0+128)
  7303  0D9E  083A               	movf	(___aodiv@quotient+7)^(0+128),w
  7304  0D9F  00A7               	movwf	(?___aodiv+7)^(0+128)
  7305  0DA0  0008               	return
  7306  0DA1                     __end_of___aodiv:	
  7307                           
  7308                           	psect	text19
  7309  078B                     __ptext19:	
  7310 ;; *************** function ___fltol *****************
  7311 ;; Defined at:
  7312 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
  7313 ;; Parameters:    Size  Location     Type
  7314 ;;  f1              4   26[BANK1 ] long long 
  7315 ;; Auto vars:     Size  Location     Type
  7316 ;;  exp1            1   36[BANK1 ] unsigned char 
  7317 ;;  sign1           1   35[BANK1 ] unsigned char 
  7318 ;; Return value:  Size  Location     Type
  7319 ;;                  4   26[BANK1 ] long 
  7320 ;; Registers used:
  7321 ;;		wreg, status,2, status,0
  7322 ;; Tracked objects:
  7323 ;;		On entry : 0/0
  7324 ;;		On exit  : 0/0
  7325 ;;		Unchanged: 0/0
  7326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7327 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  7328 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7329 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  7330 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0
  7331 ;;Total ram usage:       11 bytes
  7332 ;; Hardware stack levels used:    1
  7333 ;; Hardware stack levels required when called:    6
  7334 ;; This function calls:
  7335 ;;		Nothing
  7336 ;; This function is called by:
  7337 ;;		_main
  7338 ;; This function uses a non-reentrant model
  7339 ;;
  7340                           
  7341                           
  7342                           ;psect for function ___fltol
  7343  078B                     ___fltol:	
  7344                           
  7345                           ;incstack = 0
  7346                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7347  078B  1003               	clrc
  7348  078C  0021               	movlb	1	; select bank1
  7349  078D  0D3C               	rlf	(___fltol@f1+2)^(0+128),w
  7350  078E  0D3D               	rlf	(___fltol@f1+3)^(0+128),w
  7351  078F  00BE               	movwf	??___fltol^(0+128)
  7352  0790  083E               	movf	??___fltol^(0+128),w
  7353  0791  00C4               	movwf	___fltol@exp1^(0+128)
  7354  0792  0844               	movf	___fltol@exp1^(0+128),w
  7355  0793  1D03               	btfss	3,2
  7356  0794  2F9E               	goto	l4095
  7357  0795                     l4091:	
  7358  0795  3000               	movlw	0
  7359  0796  00BD               	movwf	(?___fltol+3)^(0+128)
  7360  0797  3000               	movlw	0
  7361  0798  00BC               	movwf	(?___fltol+2)^(0+128)
  7362  0799  3000               	movlw	0
  7363  079A  00BB               	movwf	(?___fltol+1)^(0+128)
  7364  079B  3000               	movlw	0
  7365  079C  00BA               	movwf	?___fltol^(0+128)
  7366  079D  0008               	return
  7367  079E                     l4095:	
  7368  079E  083A               	movf	___fltol@f1^(0+128),w
  7369  079F  00BE               	movwf	??___fltol^(0+128)
  7370  07A0  083B               	movf	(___fltol@f1+1)^(0+128),w
  7371  07A1  00BF               	movwf	(??___fltol^(0+128)+1)
  7372  07A2  083C               	movf	(___fltol@f1+2)^(0+128),w
  7373  07A3  00C0               	movwf	(??___fltol^(0+128)+2)
  7374  07A4  083D               	movf	(___fltol@f1+3)^(0+128),w
  7375  07A5  00C1               	movwf	(??___fltol^(0+128)+3)
  7376  07A6  301F               	movlw	31
  7377  07A7                     u5475:	
  7378  07A7  36C1               	lsrf	(??___fltol^(0+128)+3),f
  7379  07A8  0CC0               	rrf	(??___fltol^(0+128)+2),f
  7380  07A9  0CBF               	rrf	(??___fltol^(0+128)+1),f
  7381  07AA  0CBE               	rrf	??___fltol^(0+128),f
  7382  07AB  0B89               	decfsz	9,f
  7383  07AC  2FA7               	goto	u5475
  7384  07AD  083E               	movf	??___fltol^(0+128),w
  7385  07AE  00C2               	movwf	(??___fltol+4)^(0+128)
  7386  07AF  0842               	movf	(??___fltol+4)^(0+128),w
  7387  07B0  00C3               	movwf	___fltol@sign1^(0+128)
  7388  07B1  17BC               	bsf	(___fltol@f1^(0+128)+2),7
  7389  07B2  30FF               	movlw	255
  7390  07B3  05BA               	andwf	___fltol@f1^(0+128),f
  7391  07B4  30FF               	movlw	255
  7392  07B5  05BB               	andwf	(___fltol@f1+1)^(0+128),f
  7393  07B6  30FF               	movlw	255
  7394  07B7  05BC               	andwf	(___fltol@f1+2)^(0+128),f
  7395  07B8  3000               	movlw	0
  7396  07B9  05BD               	andwf	(___fltol@f1+3)^(0+128),f
  7397  07BA  3096               	movlw	150
  7398  07BB  02C4               	subwf	___fltol@exp1^(0+128),f
  7399  07BC  1FC4               	btfss	___fltol@exp1^(0+128),7
  7400  07BD  2FD1               	goto	l4113
  7401  07BE  0844               	movf	___fltol@exp1^(0+128),w
  7402  07BF  3A80               	xorlw	128
  7403  07C0  3E97               	addlw	151
  7404  07C1  1C03               	btfss	3,0
  7405  07C2  2F95               	goto	l4091
  7406  07C3                     l4111:	
  7407  07C3  3001               	movlw	1
  7408  07C4                     u5505:	
  7409  07C4  36BD               	lsrf	(___fltol@f1+3)^(0+128),f
  7410  07C5  0CBC               	rrf	(___fltol@f1+2)^(0+128),f
  7411  07C6  0CBB               	rrf	(___fltol@f1+1)^(0+128),f
  7412  07C7  0CBA               	rrf	___fltol@f1^(0+128),f
  7413  07C8  0B89               	decfsz	9,f
  7414  07C9  2FC4               	goto	u5505
  7415  07CA  3001               	movlw	1
  7416  07CB  00BE               	movwf	??___fltol^(0+128)
  7417  07CC  083E               	movf	??___fltol^(0+128),w
  7418  07CD  07C4               	addwf	___fltol@exp1^(0+128),f
  7419  07CE  1903               	btfsc	3,2
  7420  07CF  2FE2               	goto	l4121
  7421  07D0  2FC3               	goto	l4111
  7422  07D1                     l4113:	
  7423  07D1  3020               	movlw	32
  7424  07D2  0244               	subwf	___fltol@exp1^(0+128),w
  7425  07D3  1803               	btfsc	3,0
  7426  07D4  2F95               	goto	l4091
  7427  07D5                     l715:	
  7428  07D5  0844               	movf	___fltol@exp1^(0+128),w
  7429  07D6  1903               	btfsc	3,2
  7430  07D7  2FE2               	goto	l4121
  7431  07D8  3001               	movlw	1
  7432  07D9                     u5535:	
  7433  07D9  35BA               	lslf	___fltol@f1^(0+128),f
  7434  07DA  0DBB               	rlf	(___fltol@f1+1)^(0+128),f
  7435  07DB  0DBC               	rlf	(___fltol@f1+2)^(0+128),f
  7436  07DC  0DBD               	rlf	(___fltol@f1+3)^(0+128),f
  7437  07DD  0B89               	decfsz	9,f
  7438  07DE  2FD9               	goto	u5535
  7439  07DF  3001               	movlw	1
  7440  07E0  02C4               	subwf	___fltol@exp1^(0+128),f
  7441  07E1  2FD5               	goto	l715
  7442  07E2                     l4121:	
  7443  07E2  0843               	movf	___fltol@sign1^(0+128),w
  7444  07E3  1903               	btfsc	3,2
  7445  07E4  0008               	return
  7446  07E5  09BA               	comf	___fltol@f1^(0+128),f
  7447  07E6  09BB               	comf	(___fltol@f1+1)^(0+128),f
  7448  07E7  09BC               	comf	(___fltol@f1+2)^(0+128),f
  7449  07E8  09BD               	comf	(___fltol@f1+3)^(0+128),f
  7450  07E9  0ABA               	incf	___fltol@f1^(0+128),f
  7451  07EA  1903               	skipnz
  7452  07EB  0ABB               	incf	(___fltol@f1+1)^(0+128),f
  7453  07EC  1903               	skipnz
  7454  07ED  0ABC               	incf	(___fltol@f1+2)^(0+128),f
  7455  07EE  1903               	skipnz
  7456  07EF  0ABD               	incf	(___fltol@f1+3)^(0+128),f
  7457  07F0  0008               	return
  7458  07F1                     __end_of___fltol:	
  7459                           
  7460                           	psect	text20
  7461  098D                     __ptext20:	
  7462 ;; *************** function ___flge *****************
  7463 ;; Defined at:
  7464 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
  7465 ;; Parameters:    Size  Location     Type
  7466 ;;  ff1             4    0[BANK1 ] long 
  7467 ;;  ff2             4    4[BANK1 ] long 
  7468 ;; Auto vars:     Size  Location     Type
  7469 ;;		None
  7470 ;; Return value:  Size  Location     Type
  7471 ;;		None               void
  7472 ;; Registers used:
  7473 ;;		wreg, status,2, status,0
  7474 ;; Tracked objects:
  7475 ;;		On entry : 0/0
  7476 ;;		On exit  : 0/0
  7477 ;;		Unchanged: 0/0
  7478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7479 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  7480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7481 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  7482 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  7483 ;;Total ram usage:       12 bytes
  7484 ;; Hardware stack levels used:    1
  7485 ;; Hardware stack levels required when called:    6
  7486 ;; This function calls:
  7487 ;;		Nothing
  7488 ;; This function is called by:
  7489 ;;		_main
  7490 ;; This function uses a non-reentrant model
  7491 ;;
  7492                           
  7493                           
  7494                           ;psect for function ___flge
  7495  098D                     ___flge:	
  7496                           
  7497                           ;incstack = 0
  7498                           ; Regs used in ___flge: [wreg+status,2+status,0]
  7499  098D  3000               	movlw	0
  7500  098E  0021               	movlb	1	; select bank1
  7501  098F  0520               	andwf	___flge@ff1^(0+128),w
  7502  0990  00A8               	movwf	??___flge^(0+128)
  7503  0991  3000               	movlw	0
  7504  0992  0521               	andwf	(___flge@ff1+1)^(0+128),w
  7505  0993  00A9               	movwf	(??___flge^(0+128)+1)
  7506  0994  3080               	movlw	128
  7507  0995  0522               	andwf	(___flge@ff1+2)^(0+128),w
  7508  0996  00AA               	movwf	(??___flge^(0+128)+2)
  7509  0997  307F               	movlw	127
  7510  0998  0523               	andwf	(___flge@ff1+3)^(0+128),w
  7511  0999  00AB               	movwf	(??___flge^(0+128)+3)
  7512  099A  082B               	movf	(??___flge+3)^(0+128),w
  7513  099B  042A               	iorwf	(??___flge+2)^(0+128),w
  7514  099C  0429               	iorwf	(??___flge+1)^(0+128),w
  7515  099D  0428               	iorwf	??___flge^(0+128),w
  7516  099E  1D03               	skipz
  7517  099F  29A8               	goto	l692
  7518  09A0  3000               	movlw	0
  7519  09A1  00A3               	movwf	(___flge@ff1+3)^(0+128)
  7520  09A2  3000               	movlw	0
  7521  09A3  00A2               	movwf	(___flge@ff1+2)^(0+128)
  7522  09A4  3000               	movlw	0
  7523  09A5  00A1               	movwf	(___flge@ff1+1)^(0+128)
  7524  09A6  3000               	movlw	0
  7525  09A7  00A0               	movwf	___flge@ff1^(0+128)
  7526  09A8                     l692:	
  7527  09A8  3000               	movlw	0
  7528  09A9  0524               	andwf	___flge@ff2^(0+128),w
  7529  09AA  00A8               	movwf	??___flge^(0+128)
  7530  09AB  3000               	movlw	0
  7531  09AC  0525               	andwf	(___flge@ff2+1)^(0+128),w
  7532  09AD  00A9               	movwf	(??___flge^(0+128)+1)
  7533  09AE  3080               	movlw	128
  7534  09AF  0526               	andwf	(___flge@ff2+2)^(0+128),w
  7535  09B0  00AA               	movwf	(??___flge^(0+128)+2)
  7536  09B1  307F               	movlw	127
  7537  09B2  0527               	andwf	(___flge@ff2+3)^(0+128),w
  7538  09B3  00AB               	movwf	(??___flge^(0+128)+3)
  7539  09B4  082B               	movf	(??___flge+3)^(0+128),w
  7540  09B5  042A               	iorwf	(??___flge+2)^(0+128),w
  7541  09B6  0429               	iorwf	(??___flge+1)^(0+128),w
  7542  09B7  0428               	iorwf	??___flge^(0+128),w
  7543  09B8  1D03               	skipz
  7544  09B9  29C2               	goto	l4075
  7545  09BA  3000               	movlw	0
  7546  09BB  00A7               	movwf	(___flge@ff2+3)^(0+128)
  7547  09BC  3000               	movlw	0
  7548  09BD  00A6               	movwf	(___flge@ff2+2)^(0+128)
  7549  09BE  3000               	movlw	0
  7550  09BF  00A5               	movwf	(___flge@ff2+1)^(0+128)
  7551  09C0  3000               	movlw	0
  7552  09C1  00A4               	movwf	___flge@ff2^(0+128)
  7553  09C2                     l4075:	
  7554  09C2  1FA3               	btfss	(___flge@ff1+3)^(0+128),7
  7555  09C3  29DC               	goto	l4079
  7556  09C4  3000               	movlw	0
  7557  09C5  00A8               	movwf	??___flge^(0+128)
  7558  09C6  3000               	movlw	0
  7559  09C7  00A9               	movwf	(??___flge^(0+128)+1)
  7560  09C8  3000               	movlw	0
  7561  09C9  00AA               	movwf	(??___flge^(0+128)+2)
  7562  09CA  3080               	movlw	128
  7563  09CB  00AB               	movwf	(??___flge^(0+128)+3)
  7564  09CC  0820               	movf	___flge@ff1^(0+128),w
  7565  09CD  02A8               	subwf	??___flge^(0+128),f
  7566  09CE  0821               	movf	(___flge@ff1+1)^(0+128),w
  7567  09CF  3BA9               	subwfb	(??___flge^(0+128)+1),f
  7568  09D0  0822               	movf	(___flge@ff1+2)^(0+128),w
  7569  09D1  3BAA               	subwfb	(??___flge^(0+128)+2),f
  7570  09D2  0823               	movf	(___flge@ff1+3)^(0+128),w
  7571  09D3  3BAB               	subwfb	(??___flge^(0+128)+3),f
  7572  09D4  082B               	movf	(??___flge+3)^(0+128),w
  7573  09D5  00A3               	movwf	(___flge@ff1+3)^(0+128)
  7574  09D6  082A               	movf	(??___flge+2)^(0+128),w
  7575  09D7  00A2               	movwf	(___flge@ff1+2)^(0+128)
  7576  09D8  0829               	movf	(??___flge+1)^(0+128),w
  7577  09D9  00A1               	movwf	(___flge@ff1+1)^(0+128)
  7578  09DA  0828               	movf	??___flge^(0+128),w
  7579  09DB  00A0               	movwf	___flge@ff1^(0+128)
  7580  09DC                     l4079:	
  7581  09DC  1FA7               	btfss	(___flge@ff2+3)^(0+128),7
  7582  09DD  29F6               	goto	l695
  7583  09DE  3000               	movlw	0
  7584  09DF  00A8               	movwf	??___flge^(0+128)
  7585  09E0  3000               	movlw	0
  7586  09E1  00A9               	movwf	(??___flge^(0+128)+1)
  7587  09E2  3000               	movlw	0
  7588  09E3  00AA               	movwf	(??___flge^(0+128)+2)
  7589  09E4  3080               	movlw	128
  7590  09E5  00AB               	movwf	(??___flge^(0+128)+3)
  7591  09E6  0824               	movf	___flge@ff2^(0+128),w
  7592  09E7  02A8               	subwf	??___flge^(0+128),f
  7593  09E8  0825               	movf	(___flge@ff2+1)^(0+128),w
  7594  09E9  3BA9               	subwfb	(??___flge^(0+128)+1),f
  7595  09EA  0826               	movf	(___flge@ff2+2)^(0+128),w
  7596  09EB  3BAA               	subwfb	(??___flge^(0+128)+2),f
  7597  09EC  0827               	movf	(___flge@ff2+3)^(0+128),w
  7598  09ED  3BAB               	subwfb	(??___flge^(0+128)+3),f
  7599  09EE  082B               	movf	(??___flge+3)^(0+128),w
  7600  09EF  00A7               	movwf	(___flge@ff2+3)^(0+128)
  7601  09F0  082A               	movf	(??___flge+2)^(0+128),w
  7602  09F1  00A6               	movwf	(___flge@ff2+2)^(0+128)
  7603  09F2  0829               	movf	(??___flge+1)^(0+128),w
  7604  09F3  00A5               	movwf	(___flge@ff2+1)^(0+128)
  7605  09F4  0828               	movf	??___flge^(0+128),w
  7606  09F5  00A4               	movwf	___flge@ff2^(0+128)
  7607  09F6                     l695:	
  7608  09F6  3080               	movlw	128
  7609  09F7  06A3               	xorwf	(___flge@ff1+3)^(0+128),f
  7610  09F8  3080               	movlw	128
  7611  09F9  06A7               	xorwf	(___flge@ff2+3)^(0+128),f
  7612  09FA  0827               	movf	(___flge@ff2+3)^(0+128),w
  7613  09FB  0223               	subwf	(___flge@ff1+3)^(0+128),w
  7614  09FC  1D03               	skipz
  7615  09FD  0008               	return
  7616  09FE  0826               	movf	(___flge@ff2+2)^(0+128),w
  7617  09FF  0222               	subwf	(___flge@ff1+2)^(0+128),w
  7618  0A00  1D03               	skipz
  7619  0A01  0008               	return
  7620  0A02  0825               	movf	(___flge@ff2+1)^(0+128),w
  7621  0A03  0221               	subwf	(___flge@ff1+1)^(0+128),w
  7622  0A04  1D03               	skipz
  7623  0A05  0008               	return
  7624  0A06  0824               	movf	___flge@ff2^(0+128),w
  7625  0A07  0220               	subwf	___flge@ff1^(0+128),w
  7626  0A08  0008               	return
  7627  0A09                     __end_of___flge:	
  7628                           
  7629                           	psect	text21
  7630  0611                     __ptext21:	
  7631 ;; *************** function ___fldiv *****************
  7632 ;; Defined at:
  7633 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
  7634 ;; Parameters:    Size  Location     Type
  7635 ;;  a               4    0[BANK1 ] long 
  7636 ;;  b               4    4[BANK1 ] long 
  7637 ;; Auto vars:     Size  Location     Type
  7638 ;;  grs             4   20[BANK1 ] unsigned long 
  7639 ;;  rem             4   13[BANK1 ] unsigned long 
  7640 ;;  new_exp         2   18[BANK1 ] int 
  7641 ;;  aexp            1   25[BANK1 ] unsigned char 
  7642 ;;  bexp            1   24[BANK1 ] unsigned char 
  7643 ;;  sign            1   17[BANK1 ] unsigned char 
  7644 ;; Return value:  Size  Location     Type
  7645 ;;                  4    0[BANK1 ] unsigned char 
  7646 ;; Registers used:
  7647 ;;		wreg, status,2, status,0
  7648 ;; Tracked objects:
  7649 ;;		On entry : 0/0
  7650 ;;		On exit  : 0/0
  7651 ;;		Unchanged: 0/0
  7652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7653 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  7654 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
  7655 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  7656 ;;      Totals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0
  7657 ;;Total ram usage:       26 bytes
  7658 ;; Hardware stack levels used:    1
  7659 ;; Hardware stack levels required when called:    6
  7660 ;; This function calls:
  7661 ;;		Nothing
  7662 ;; This function is called by:
  7663 ;;		_main
  7664 ;; This function uses a non-reentrant model
  7665 ;;
  7666                           
  7667                           
  7668                           ;psect for function ___fldiv
  7669  0611                     ___fldiv:	
  7670                           
  7671                           ;incstack = 0
  7672                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
  7673  0611  0021               	movlb	1	; select bank1
  7674  0612  0827               	movf	(___fldiv@b^(0+128)+3),w
  7675  0613  3980               	andlw	128
  7676  0614  00A8               	movwf	??___fldiv^(0+128)
  7677  0615  0828               	movf	??___fldiv^(0+128),w
  7678  0616  00B1               	movwf	___fldiv@sign^(0+128)
  7679  0617  3527               	lslf	(___fldiv@b^(0+128)+3),w
  7680  0618  00A8               	movwf	??___fldiv^(0+128)
  7681  0619  0828               	movf	??___fldiv^(0+128),w
  7682  061A  00B8               	movwf	___fldiv@bexp^(0+128)
  7683  061B  1BA6               	btfsc	(___fldiv@b^(0+128)+2),7
  7684  061C  1438               	bsf	___fldiv@bexp^(0+128),0
  7685  061D  0838               	movf	___fldiv@bexp^(0+128),w
  7686  061E  1903               	btfsc	3,2
  7687  061F  2E2E               	goto	l4143
  7688  0620  0A38               	incf	___fldiv@bexp^(0+128),w
  7689  0621  1D03               	btfss	3,2
  7690  0622  2E2B               	goto	l4139
  7691  0623  3000               	movlw	0
  7692  0624  00A7               	movwf	(___fldiv@b+3)^(0+128)
  7693  0625  3000               	movlw	0
  7694  0626  00A6               	movwf	(___fldiv@b+2)^(0+128)
  7695  0627  3000               	movlw	0
  7696  0628  00A5               	movwf	(___fldiv@b+1)^(0+128)
  7697  0629  3000               	movlw	0
  7698  062A  00A4               	movwf	___fldiv@b^(0+128)
  7699  062B                     l4139:	
  7700  062B  17A6               	bsf	(___fldiv@b^(0+128)+2),7
  7701  062C  01A7               	clrf	(___fldiv@b^(0+128)+3)
  7702  062D  2E36               	goto	l4145
  7703  062E                     l4143:	
  7704  062E  3000               	movlw	0
  7705  062F  00A7               	movwf	(___fldiv@b+3)^(0+128)
  7706  0630  3000               	movlw	0
  7707  0631  00A6               	movwf	(___fldiv@b+2)^(0+128)
  7708  0632  3000               	movlw	0
  7709  0633  00A5               	movwf	(___fldiv@b+1)^(0+128)
  7710  0634  3000               	movlw	0
  7711  0635  00A4               	movwf	___fldiv@b^(0+128)
  7712  0636                     l4145:	
  7713  0636  0823               	movf	(___fldiv@a^(0+128)+3),w
  7714  0637  3980               	andlw	128
  7715  0638  00A8               	movwf	??___fldiv^(0+128)
  7716  0639  0828               	movf	??___fldiv^(0+128),w
  7717  063A  06B1               	xorwf	___fldiv@sign^(0+128),f
  7718  063B  3523               	lslf	(___fldiv@a^(0+128)+3),w
  7719  063C  00A8               	movwf	??___fldiv^(0+128)
  7720  063D  0828               	movf	??___fldiv^(0+128),w
  7721  063E  00B9               	movwf	___fldiv@aexp^(0+128)
  7722  063F  1BA2               	btfsc	(___fldiv@a^(0+128)+2),7
  7723  0640  1439               	bsf	___fldiv@aexp^(0+128),0
  7724  0641  0839               	movf	___fldiv@aexp^(0+128),w
  7725  0642  1903               	btfsc	3,2
  7726  0643  2E52               	goto	l4163
  7727  0644  0A39               	incf	___fldiv@aexp^(0+128),w
  7728  0645  1D03               	btfss	3,2
  7729  0646  2E4F               	goto	l4159
  7730  0647  3000               	movlw	0
  7731  0648  00A3               	movwf	(___fldiv@a+3)^(0+128)
  7732  0649  3000               	movlw	0
  7733  064A  00A2               	movwf	(___fldiv@a+2)^(0+128)
  7734  064B  3000               	movlw	0
  7735  064C  00A1               	movwf	(___fldiv@a+1)^(0+128)
  7736  064D  3000               	movlw	0
  7737  064E  00A0               	movwf	___fldiv@a^(0+128)
  7738  064F                     l4159:	
  7739  064F  17A2               	bsf	(___fldiv@a^(0+128)+2),7
  7740  0650  01A3               	clrf	(___fldiv@a^(0+128)+3)
  7741  0651  2E5A               	goto	l871
  7742  0652                     l4163:	
  7743  0652  3000               	movlw	0
  7744  0653  00A3               	movwf	(___fldiv@a+3)^(0+128)
  7745  0654  3000               	movlw	0
  7746  0655  00A2               	movwf	(___fldiv@a+2)^(0+128)
  7747  0656  3000               	movlw	0
  7748  0657  00A1               	movwf	(___fldiv@a+1)^(0+128)
  7749  0658  3000               	movlw	0
  7750  0659  00A0               	movwf	___fldiv@a^(0+128)
  7751  065A                     l871:	
  7752  065A  0823               	movf	(___fldiv@a+3)^(0+128),w
  7753  065B  0422               	iorwf	(___fldiv@a+2)^(0+128),w
  7754  065C  0421               	iorwf	(___fldiv@a+1)^(0+128),w
  7755  065D  0420               	iorwf	___fldiv@a^(0+128),w
  7756  065E  1D03               	skipz
  7757  065F  2E79               	goto	l4173
  7758  0660  3000               	movlw	0
  7759  0661  00A7               	movwf	(___fldiv@b+3)^(0+128)
  7760  0662  3000               	movlw	0
  7761  0663  00A6               	movwf	(___fldiv@b+2)^(0+128)
  7762  0664  3000               	movlw	0
  7763  0665  00A5               	movwf	(___fldiv@b+1)^(0+128)
  7764  0666  3000               	movlw	0
  7765  0667  00A4               	movwf	___fldiv@b^(0+128)
  7766  0668  3080               	movlw	128
  7767  0669  04A6               	iorwf	(___fldiv@b^(0+128)+2),f
  7768  066A  307F               	movlw	127
  7769  066B  04A7               	iorwf	((___fldiv@b+1)^(0+128)+2),f
  7770  066C                     L5:	
  7771  066C  0831               	movf	___fldiv@sign^(0+128),w
  7772  066D  00A8               	movwf	??___fldiv^(0+128)
  7773  066E  0828               	movf	??___fldiv^(0+128),w
  7774  066F  04A7               	iorwf	(___fldiv@b^(0+128)+3),f
  7775  0670  0827               	movf	(___fldiv@b+3)^(0+128),w
  7776  0671  00A3               	movwf	(?___fldiv+3)^(0+128)
  7777  0672  0826               	movf	(___fldiv@b+2)^(0+128),w
  7778  0673  00A2               	movwf	(?___fldiv+2)^(0+128)
  7779  0674  0825               	movf	(___fldiv@b+1)^(0+128),w
  7780  0675  00A1               	movwf	(?___fldiv+1)^(0+128)
  7781  0676  0824               	movf	___fldiv@b^(0+128),w
  7782  0677  00A0               	movwf	?___fldiv^(0+128)
  7783  0678  0008               	return
  7784  0679                     l4173:	
  7785  0679  0838               	movf	___fldiv@bexp^(0+128),w
  7786  067A  1D03               	btfss	3,2
  7787  067B  2E85               	goto	l4179
  7788  067C  3000               	movlw	0
  7789  067D  00A3               	movwf	(?___fldiv+3)^(0+128)
  7790  067E  3000               	movlw	0
  7791  067F  00A2               	movwf	(?___fldiv+2)^(0+128)
  7792  0680  3000               	movlw	0
  7793  0681  00A1               	movwf	(?___fldiv+1)^(0+128)
  7794  0682  3000               	movlw	0
  7795  0683  00A0               	movwf	?___fldiv^(0+128)
  7796  0684  0008               	return
  7797  0685                     l4179:	
  7798  0685  0838               	movf	___fldiv@bexp^(0+128),w
  7799  0686  00A8               	movwf	??___fldiv^(0+128)
  7800  0687  01A9               	clrf	(??___fldiv^(0+128)+1)
  7801  0688  0829               	movf	(??___fldiv+1)^(0+128),w
  7802  0689  00AB               	movwf	((??___fldiv+2)^(0+128)+1)
  7803  068A  0839               	movf	___fldiv@aexp^(0+128),w
  7804  068B  0228               	subwf	??___fldiv^(0+128),w
  7805  068C  00AA               	movwf	(??___fldiv+2)^(0+128)
  7806  068D  1C03               	skipc
  7807  068E  03AB               	decf	((??___fldiv+2)^(0+128)+1),f
  7808  068F  082A               	movf	(??___fldiv+2)^(0+128),w
  7809  0690  3E7F               	addlw	127
  7810  0691  00B2               	movwf	___fldiv@new_exp^(0+128)
  7811  0692  3000               	movlw	0
  7812  0693  3D2B               	addwfc	(??___fldiv+3)^(0+128),w
  7813  0694  00B3               	movwf	(___fldiv@new_exp+1)^(0+128)
  7814  0695  0827               	movf	(___fldiv@b+3)^(0+128),w
  7815  0696  00B0               	movwf	(___fldiv@rem+3)^(0+128)
  7816  0697  0826               	movf	(___fldiv@b+2)^(0+128),w
  7817  0698  00AF               	movwf	(___fldiv@rem+2)^(0+128)
  7818  0699  0825               	movf	(___fldiv@b+1)^(0+128),w
  7819  069A  00AE               	movwf	(___fldiv@rem+1)^(0+128)
  7820  069B  0824               	movf	___fldiv@b^(0+128),w
  7821  069C  00AD               	movwf	___fldiv@rem^(0+128)
  7822  069D  3000               	movlw	0
  7823  069E  00A7               	movwf	(___fldiv@b+3)^(0+128)
  7824  069F  3000               	movlw	0
  7825  06A0  00A6               	movwf	(___fldiv@b+2)^(0+128)
  7826  06A1  3000               	movlw	0
  7827  06A2  00A5               	movwf	(___fldiv@b+1)^(0+128)
  7828  06A3  3000               	movlw	0
  7829  06A4  00A4               	movwf	___fldiv@b^(0+128)
  7830  06A5  3000               	movlw	0
  7831  06A6  00B7               	movwf	(___fldiv@grs+3)^(0+128)
  7832  06A7  3000               	movlw	0
  7833  06A8  00B6               	movwf	(___fldiv@grs+2)^(0+128)
  7834  06A9  3000               	movlw	0
  7835  06AA  00B5               	movwf	(___fldiv@grs+1)^(0+128)
  7836  06AB  3000               	movlw	0
  7837  06AC  00B4               	movwf	___fldiv@grs^(0+128)
  7838  06AD  01B9               	clrf	___fldiv@aexp^(0+128)
  7839  06AE                     l4207:	
  7840  06AE  301A               	movlw	26
  7841  06AF  0239               	subwf	___fldiv@aexp^(0+128),w
  7842  06B0  1803               	btfsc	3,0
  7843  06B1  2EEA               	goto	l4209
  7844  06B2  0839               	movf	___fldiv@aexp^(0+128),w
  7845  06B3  1903               	btfsc	3,2
  7846  06B4  2ECC               	goto	l4199
  7847  06B5  3001               	movlw	1
  7848  06B6                     u5655:	
  7849  06B6  35AD               	lslf	___fldiv@rem^(0+128),f
  7850  06B7  0DAE               	rlf	(___fldiv@rem+1)^(0+128),f
  7851  06B8  0DAF               	rlf	(___fldiv@rem+2)^(0+128),f
  7852  06B9  0DB0               	rlf	(___fldiv@rem+3)^(0+128),f
  7853  06BA  0B89               	decfsz	9,f
  7854  06BB  2EB6               	goto	u5655
  7855  06BC  3001               	movlw	1
  7856  06BD                     u5665:	
  7857  06BD  35A4               	lslf	___fldiv@b^(0+128),f
  7858  06BE  0DA5               	rlf	(___fldiv@b+1)^(0+128),f
  7859  06BF  0DA6               	rlf	(___fldiv@b+2)^(0+128),f
  7860  06C0  0DA7               	rlf	(___fldiv@b+3)^(0+128),f
  7861  06C1  0B89               	decfsz	9,f
  7862  06C2  2EBD               	goto	u5665
  7863  06C3  1BB7               	btfsc	(___fldiv@grs+3)^(0+128),7
  7864  06C4  1424               	bsf	___fldiv@b^(0+128),0
  7865  06C5  3001               	movlw	1
  7866  06C6                     u5685:	
  7867  06C6  35B4               	lslf	___fldiv@grs^(0+128),f
  7868  06C7  0DB5               	rlf	(___fldiv@grs+1)^(0+128),f
  7869  06C8  0DB6               	rlf	(___fldiv@grs+2)^(0+128),f
  7870  06C9  0DB7               	rlf	(___fldiv@grs+3)^(0+128),f
  7871  06CA  0B89               	decfsz	9,f
  7872  06CB  2EC6               	goto	u5685
  7873  06CC                     l4199:	
  7874  06CC  0823               	movf	(___fldiv@a+3)^(0+128),w
  7875  06CD  0230               	subwf	(___fldiv@rem+3)^(0+128),w
  7876  06CE  1D03               	skipz
  7877  06CF  2EDA               	goto	u5695
  7878  06D0  0822               	movf	(___fldiv@a+2)^(0+128),w
  7879  06D1  022F               	subwf	(___fldiv@rem+2)^(0+128),w
  7880  06D2  1D03               	skipz
  7881  06D3  2EDA               	goto	u5695
  7882  06D4  0821               	movf	(___fldiv@a+1)^(0+128),w
  7883  06D5  022E               	subwf	(___fldiv@rem+1)^(0+128),w
  7884  06D6  1D03               	skipz
  7885  06D7  2EDA               	goto	u5695
  7886  06D8  0820               	movf	___fldiv@a^(0+128),w
  7887  06D9  022D               	subwf	___fldiv@rem^(0+128),w
  7888  06DA                     u5695:	
  7889  06DA  1C03               	skipc
  7890  06DB  2EE5               	goto	l4205
  7891  06DC  1737               	bsf	(___fldiv@grs^(0+128)+3),6
  7892  06DD  0820               	movf	___fldiv@a^(0+128),w
  7893  06DE  02AD               	subwf	___fldiv@rem^(0+128),f
  7894  06DF  0821               	movf	(___fldiv@a+1)^(0+128),w
  7895  06E0  3BAE               	subwfb	(___fldiv@rem+1)^(0+128),f
  7896  06E1  0822               	movf	(___fldiv@a+2)^(0+128),w
  7897  06E2  3BAF               	subwfb	(___fldiv@rem+2)^(0+128),f
  7898  06E3  0823               	movf	(___fldiv@a+3)^(0+128),w
  7899  06E4  3BB0               	subwfb	(___fldiv@rem+3)^(0+128),f
  7900  06E5                     l4205:	
  7901  06E5  3001               	movlw	1
  7902  06E6  00A8               	movwf	??___fldiv^(0+128)
  7903  06E7  0828               	movf	??___fldiv^(0+128),w
  7904  06E8  07B9               	addwf	___fldiv@aexp^(0+128),f
  7905  06E9  2EAE               	goto	l4207
  7906  06EA                     l4209:	
  7907  06EA  0830               	movf	(___fldiv@rem+3)^(0+128),w
  7908  06EB  042F               	iorwf	(___fldiv@rem+2)^(0+128),w
  7909  06EC  042E               	iorwf	(___fldiv@rem+1)^(0+128),w
  7910  06ED  042D               	iorwf	___fldiv@rem^(0+128),w
  7911  06EE  1D03               	btfss	3,2
  7912  06EF  1434               	bsf	___fldiv@grs^(0+128),0
  7913  06F0                     l4223:	
  7914  06F0  1BA6               	btfsc	(___fldiv@b+2)^(0+128),7
  7915  06F1  2F07               	goto	l4225
  7916  06F2  3001               	movlw	1
  7917  06F3                     u5725:	
  7918  06F3  35A4               	lslf	___fldiv@b^(0+128),f
  7919  06F4  0DA5               	rlf	(___fldiv@b+1)^(0+128),f
  7920  06F5  0DA6               	rlf	(___fldiv@b+2)^(0+128),f
  7921  06F6  0DA7               	rlf	(___fldiv@b+3)^(0+128),f
  7922  06F7  0B89               	decfsz	9,f
  7923  06F8  2EF3               	goto	u5725
  7924  06F9  1BB7               	btfsc	(___fldiv@grs+3)^(0+128),7
  7925  06FA  1424               	bsf	___fldiv@b^(0+128),0
  7926  06FB  3001               	movlw	1
  7927  06FC                     u5745:	
  7928  06FC  35B4               	lslf	___fldiv@grs^(0+128),f
  7929  06FD  0DB5               	rlf	(___fldiv@grs+1)^(0+128),f
  7930  06FE  0DB6               	rlf	(___fldiv@grs+2)^(0+128),f
  7931  06FF  0DB7               	rlf	(___fldiv@grs+3)^(0+128),f
  7932  0700  0B89               	decfsz	9,f
  7933  0701  2EFC               	goto	u5745
  7934  0702  30FF               	movlw	255
  7935  0703  07B2               	addwf	___fldiv@new_exp^(0+128),f
  7936  0704  30FF               	movlw	255
  7937  0705  3DB3               	addwfc	(___fldiv@new_exp+1)^(0+128),f
  7938  0706  2EF0               	goto	l4223
  7939  0707                     l4225:	
  7940  0707  01B9               	clrf	___fldiv@aexp^(0+128)
  7941  0708  1FB7               	btfss	(___fldiv@grs+3)^(0+128),7
  7942  0709  2F20               	goto	l4235
  7943  070A  30FF               	movlw	255
  7944  070B  0534               	andwf	___fldiv@grs^(0+128),w
  7945  070C  00A8               	movwf	??___fldiv^(0+128)
  7946  070D  30FF               	movlw	255
  7947  070E  0535               	andwf	(___fldiv@grs+1)^(0+128),w
  7948  070F  00A9               	movwf	(??___fldiv^(0+128)+1)
  7949  0710  30FF               	movlw	255
  7950  0711  0536               	andwf	(___fldiv@grs+2)^(0+128),w
  7951  0712  00AA               	movwf	(??___fldiv^(0+128)+2)
  7952  0713  307F               	movlw	127
  7953  0714  0537               	andwf	(___fldiv@grs+3)^(0+128),w
  7954  0715  00AB               	movwf	(??___fldiv^(0+128)+3)
  7955  0716  082B               	movf	(??___fldiv+3)^(0+128),w
  7956  0717  042A               	iorwf	(??___fldiv+2)^(0+128),w
  7957  0718  0429               	iorwf	(??___fldiv+1)^(0+128),w
  7958  0719  0428               	iorwf	??___fldiv^(0+128),w
  7959  071A  1903               	skipnz
  7960  071B  1824               	btfsc	___fldiv@b^(0+128),0
  7961  071C  2F1E               	goto	l4231
  7962  071D  2F20               	goto	l4235
  7963  071E                     l4231:	
  7964  071E  01B9               	clrf	___fldiv@aexp^(0+128)
  7965  071F  0AB9               	incf	___fldiv@aexp^(0+128),f
  7966  0720                     l4235:	
  7967  0720  0839               	movf	___fldiv@aexp^(0+128),w
  7968  0721  1903               	btfsc	3,2
  7969  0722  2F49               	goto	l4245
  7970  0723  3001               	movlw	1
  7971  0724  07A4               	addwf	___fldiv@b^(0+128),f
  7972  0725  3000               	movlw	0
  7973  0726  3DA5               	addwfc	(___fldiv@b+1)^(0+128),f
  7974  0727  3000               	movlw	0
  7975  0728  3DA6               	addwfc	(___fldiv@b+2)^(0+128),f
  7976  0729  3000               	movlw	0
  7977  072A  3DA7               	addwfc	(___fldiv@b+3)^(0+128),f
  7978  072B  1C27               	btfss	(___fldiv@b+3)^(0+128),0
  7979  072C  2F49               	goto	l4245
  7980  072D  0824               	movf	___fldiv@b^(0+128),w
  7981  072E  00A8               	movwf	??___fldiv^(0+128)
  7982  072F  0825               	movf	(___fldiv@b+1)^(0+128),w
  7983  0730  00A9               	movwf	(??___fldiv^(0+128)+1)
  7984  0731  0826               	movf	(___fldiv@b+2)^(0+128),w
  7985  0732  00AA               	movwf	(??___fldiv^(0+128)+2)
  7986  0733  0827               	movf	(___fldiv@b+3)^(0+128),w
  7987  0734  00AB               	movwf	(??___fldiv^(0+128)+3)
  7988  0735  3001               	movlw	1
  7989  0736  00AC               	movwf	(??___fldiv+4)^(0+128)
  7990  0737                     u5815:	
  7991  0737  37AB               	asrf	(??___fldiv^(0+128)+3),f
  7992  0738  0CAA               	rrf	(??___fldiv^(0+128)+2),f
  7993  0739  0CA9               	rrf	(??___fldiv^(0+128)+1),f
  7994  073A  0CA8               	rrf	??___fldiv^(0+128),f
  7995  073B  0BAC               	decfsz	(??___fldiv+4)^(0+128),f
  7996  073C  2F37               	goto	u5815
  7997  073D  082B               	movf	(??___fldiv+3)^(0+128),w
  7998  073E  00A7               	movwf	(___fldiv@b+3)^(0+128)
  7999  073F  082A               	movf	(??___fldiv+2)^(0+128),w
  8000  0740  00A6               	movwf	(___fldiv@b+2)^(0+128)
  8001  0741  0829               	movf	(??___fldiv+1)^(0+128),w
  8002  0742  00A5               	movwf	(___fldiv@b+1)^(0+128)
  8003  0743  0828               	movf	??___fldiv^(0+128),w
  8004  0744  00A4               	movwf	___fldiv@b^(0+128)
  8005  0745  3001               	movlw	1
  8006  0746  07B2               	addwf	___fldiv@new_exp^(0+128),f
  8007  0747  3000               	movlw	0
  8008  0748  3DB3               	addwfc	(___fldiv@new_exp+1)^(0+128),f
  8009  0749                     l4245:	
  8010  0749  0833               	movf	(___fldiv@new_exp+1)^(0+128),w
  8011  074A  3A80               	xorlw	128
  8012  074B  00A8               	movwf	??___fldiv^(0+128)
  8013  074C  3080               	movlw	128
  8014  074D  0228               	subwf	??___fldiv^(0+128),w
  8015  074E  1D03               	skipz
  8016  074F  2F52               	goto	u5825
  8017  0750  30FF               	movlw	255
  8018  0751  0232               	subwf	___fldiv@new_exp^(0+128),w
  8019  0752                     u5825:	
  8020  0752  1C03               	skipc
  8021  0753  2F61               	goto	l892
  8022  0754  30FF               	movlw	255
  8023  0755  0021               	movlb	1	; select bank1
  8024  0756  00B2               	movwf	___fldiv@new_exp^(0+128)
  8025  0757  3000               	movlw	0
  8026  0758  00B3               	movwf	(___fldiv@new_exp^(0+128)+1)
  8027  0759  3000               	movlw	0
  8028  075A  00A7               	movwf	(___fldiv@b+3)^(0+128)
  8029  075B  3000               	movlw	0
  8030  075C  00A6               	movwf	(___fldiv@b+2)^(0+128)
  8031  075D  3000               	movlw	0
  8032  075E  00A5               	movwf	(___fldiv@b+1)^(0+128)
  8033  075F  3000               	movlw	0
  8034  0760  00A4               	movwf	___fldiv@b^(0+128)
  8035  0761                     l892:	
  8036  0761  0021               	movlb	1	; select bank1
  8037  0762  0833               	movf	(___fldiv@new_exp+1)^(0+128),w
  8038  0763  3A80               	xorlw	128
  8039  0764  00A8               	movwf	??___fldiv^(0+128)
  8040  0765  3080               	movlw	128
  8041  0766  0228               	subwf	??___fldiv^(0+128),w
  8042  0767  1D03               	skipz
  8043  0768  2F6B               	goto	u5835
  8044  0769  3001               	movlw	1
  8045  076A  0232               	subwf	___fldiv@new_exp^(0+128),w
  8046  076B                     u5835:	
  8047  076B  1803               	skipnc
  8048  076C  2F79               	goto	l893
  8049  076D  0021               	movlb	1	; select bank1
  8050  076E  01B2               	clrf	___fldiv@new_exp^(0+128)
  8051  076F  01B3               	clrf	(___fldiv@new_exp+1)^(0+128)
  8052  0770  3000               	movlw	0
  8053  0771  00A7               	movwf	(___fldiv@b+3)^(0+128)
  8054  0772  3000               	movlw	0
  8055  0773  00A6               	movwf	(___fldiv@b+2)^(0+128)
  8056  0774  3000               	movlw	0
  8057  0775  00A5               	movwf	(___fldiv@b+1)^(0+128)
  8058  0776  3000               	movlw	0
  8059  0777  00A4               	movwf	___fldiv@b^(0+128)
  8060  0778  01B1               	clrf	___fldiv@sign^(0+128)
  8061  0779                     l893:	
  8062  0779  0021               	movlb	1	; select bank1
  8063  077A  0832               	movf	___fldiv@new_exp^(0+128),w
  8064  077B  00A8               	movwf	??___fldiv^(0+128)
  8065  077C  0828               	movf	??___fldiv^(0+128),w
  8066  077D  00B8               	movwf	___fldiv@bexp^(0+128)
  8067  077E  1C38               	btfss	___fldiv@bexp^(0+128),0
  8068  077F  2F82               	goto	l4259
  8069  0780  17A6               	bsf	(___fldiv@b^(0+128)+2),7
  8070  0781  2F86               	goto	l895
  8071  0782                     l4259:	
  8072  0782  307F               	movlw	127
  8073  0783  00A8               	movwf	??___fldiv^(0+128)
  8074  0784  0828               	movf	??___fldiv^(0+128),w
  8075  0785  05A6               	andwf	(___fldiv@b^(0+128)+2),f
  8076  0786                     l895:	
  8077  0786  3638               	lsrf	___fldiv@bexp^(0+128),w
  8078  0787  00A8               	movwf	??___fldiv^(0+128)
  8079  0788  0828               	movf	??___fldiv^(0+128),w
  8080  0789  00A7               	movwf	(___fldiv@b^(0+128)+3)
  8081  078A  2E6C               	goto	L5
  8082  078B                     __end_of___fldiv:	
  8083                           
  8084                           	psect	text22
  8085  08F1                     __ptext22:	
  8086 ;; *************** function ___awmod *****************
  8087 ;; Defined at:
  8088 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
  8089 ;; Parameters:    Size  Location     Type
  8090 ;;  divisor         2   37[BANK1 ] int 
  8091 ;;  dividend        2   39[BANK1 ] int 
  8092 ;; Auto vars:     Size  Location     Type
  8093 ;;  sign            1   43[BANK1 ] unsigned char 
  8094 ;;  counter         1   42[BANK1 ] unsigned char 
  8095 ;; Return value:  Size  Location     Type
  8096 ;;                  2   37[BANK1 ] int 
  8097 ;; Registers used:
  8098 ;;		wreg, status,2, status,0
  8099 ;; Tracked objects:
  8100 ;;		On entry : 0/0
  8101 ;;		On exit  : 0/0
  8102 ;;		Unchanged: 0/0
  8103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8104 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8105 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8106 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8107 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  8108 ;;Total ram usage:        7 bytes
  8109 ;; Hardware stack levels used:    1
  8110 ;; Hardware stack levels required when called:    6
  8111 ;; This function calls:
  8112 ;;		Nothing
  8113 ;; This function is called by:
  8114 ;;		_main
  8115 ;; This function uses a non-reentrant model
  8116 ;;
  8117                           
  8118                           
  8119                           ;psect for function ___awmod
  8120  08F1                     ___awmod:	
  8121                           
  8122                           ;incstack = 0
  8123                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  8124  08F1  0021               	movlb	1	; select bank1
  8125  08F2  01CB               	clrf	___awmod@sign^(0+128)
  8126  08F3  1FC8               	btfss	(___awmod@dividend+1)^(0+128),7
  8127  08F4  28FC               	goto	l4039
  8128  08F5  09C7               	comf	___awmod@dividend^(0+128),f
  8129  08F6  09C8               	comf	(___awmod@dividend+1)^(0+128),f
  8130  08F7  0AC7               	incf	___awmod@dividend^(0+128),f
  8131  08F8  1903               	skipnz
  8132  08F9  0AC8               	incf	(___awmod@dividend+1)^(0+128),f
  8133  08FA  01CB               	clrf	___awmod@sign^(0+128)
  8134  08FB  0ACB               	incf	___awmod@sign^(0+128),f
  8135  08FC                     l4039:	
  8136  08FC  1FC6               	btfss	(___awmod@divisor+1)^(0+128),7
  8137  08FD  2903               	goto	l4043
  8138  08FE  09C5               	comf	___awmod@divisor^(0+128),f
  8139  08FF  09C6               	comf	(___awmod@divisor+1)^(0+128),f
  8140  0900  0AC5               	incf	___awmod@divisor^(0+128),f
  8141  0901  1903               	skipnz
  8142  0902  0AC6               	incf	(___awmod@divisor+1)^(0+128),f
  8143  0903                     l4043:	
  8144  0903  0845               	movf	___awmod@divisor^(0+128),w
  8145  0904  0446               	iorwf	(___awmod@divisor+1)^(0+128),w
  8146  0905  1903               	btfsc	3,2
  8147  0906  292A               	goto	l4061
  8148  0907  01CA               	clrf	___awmod@counter^(0+128)
  8149  0908  0ACA               	incf	___awmod@counter^(0+128),f
  8150  0909                     l4051:	
  8151  0909  1BC6               	btfsc	(___awmod@divisor+1)^(0+128),7
  8152  090A  2915               	goto	l4053
  8153  090B  3001               	movlw	1
  8154  090C                     u5355:	
  8155  090C  35C5               	lslf	___awmod@divisor^(0+128),f
  8156  090D  0DC6               	rlf	(___awmod@divisor+1)^(0+128),f
  8157  090E  0B89               	decfsz	9,f
  8158  090F  290C               	goto	u5355
  8159  0910  3001               	movlw	1
  8160  0911  00C9               	movwf	??___awmod^(0+128)
  8161  0912  0849               	movf	??___awmod^(0+128),w
  8162  0913  07CA               	addwf	___awmod@counter^(0+128),f
  8163  0914  2909               	goto	l4051
  8164  0915                     l4053:	
  8165  0915  0846               	movf	(___awmod@divisor+1)^(0+128),w
  8166  0916  0248               	subwf	(___awmod@dividend+1)^(0+128),w
  8167  0917  1D03               	skipz
  8168  0918  291B               	goto	u5375
  8169  0919  0845               	movf	___awmod@divisor^(0+128),w
  8170  091A  0247               	subwf	___awmod@dividend^(0+128),w
  8171  091B                     u5375:	
  8172  091B  1C03               	skipc
  8173  091C  2921               	goto	l4057
  8174  091D  0845               	movf	___awmod@divisor^(0+128),w
  8175  091E  02C7               	subwf	___awmod@dividend^(0+128),f
  8176  091F  0846               	movf	(___awmod@divisor+1)^(0+128),w
  8177  0920  3BC8               	subwfb	(___awmod@dividend+1)^(0+128),f
  8178  0921                     l4057:	
  8179  0921  3001               	movlw	1
  8180  0922                     u5385:	
  8181  0922  36C6               	lsrf	(___awmod@divisor+1)^(0+128),f
  8182  0923  0CC5               	rrf	___awmod@divisor^(0+128),f
  8183  0924  0B89               	decfsz	9,f
  8184  0925  2922               	goto	u5385
  8185  0926  3001               	movlw	1
  8186  0927  02CA               	subwf	___awmod@counter^(0+128),f
  8187  0928  1D03               	btfss	3,2
  8188  0929  2915               	goto	l4053
  8189  092A                     l4061:	
  8190  092A  084B               	movf	___awmod@sign^(0+128),w
  8191  092B  1903               	btfsc	3,2
  8192  092C  2932               	goto	l4065
  8193  092D  09C7               	comf	___awmod@dividend^(0+128),f
  8194  092E  09C8               	comf	(___awmod@dividend+1)^(0+128),f
  8195  092F  0AC7               	incf	___awmod@dividend^(0+128),f
  8196  0930  1903               	skipnz
  8197  0931  0AC8               	incf	(___awmod@dividend+1)^(0+128),f
  8198  0932                     l4065:	
  8199  0932  0848               	movf	(___awmod@dividend+1)^(0+128),w
  8200  0933  00C6               	movwf	(?___awmod+1)^(0+128)
  8201  0934  0847               	movf	___awmod@dividend^(0+128),w
  8202  0935  00C5               	movwf	?___awmod^(0+128)
  8203  0936  0008               	return
  8204  0937                     __end_of___awmod:	
  8205                           
  8206                           	psect	text23
  8207  167A                     __ptext23:	
  8208 ;; *************** function _SYSTEM_Initialize *****************
  8209 ;; Defined at:
  8210 ;;		line 4 in file "mcc_generated_files/mcc.c"
  8211 ;; Parameters:    Size  Location     Type
  8212 ;;		None
  8213 ;; Auto vars:     Size  Location     Type
  8214 ;;		None
  8215 ;; Return value:  Size  Location     Type
  8216 ;;                  1    wreg      void 
  8217 ;; Registers used:
  8218 ;;		wreg, status,2, status,0, pclath, cstack
  8219 ;; Tracked objects:
  8220 ;;		On entry : 0/0
  8221 ;;		On exit  : 0/0
  8222 ;;		Unchanged: 0/0
  8223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8228 ;;Total ram usage:        0 bytes
  8229 ;; Hardware stack levels used:    1
  8230 ;; Hardware stack levels required when called:    8
  8231 ;; This function calls:
  8232 ;;		_EUSART_Initialize
  8233 ;;		_OSCILLATOR_Initialize
  8234 ;;		_PIN_MANAGER_Initialize
  8235 ;;		_TMR0_Initialize
  8236 ;; This function is called by:
  8237 ;;		_main
  8238 ;; This function uses a non-reentrant model
  8239 ;;
  8240                           
  8241                           
  8242                           ;psect for function _SYSTEM_Initialize
  8243  167A                     _SYSTEM_Initialize:	
  8244                           
  8245                           ;mcc_generated_files/mcc.c: 6:     PIN_MANAGER_Initialize();
  8246                           
  8247                           ;incstack = 0
  8248                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8249  167A  3188  200A  3196   	fcall	_PIN_MANAGER_Initialize
  8250                           
  8251                           ;mcc_generated_files/mcc.c: 7:     OSCILLATOR_Initialize();
  8252  167D  3196  263E  3196   	fcall	_OSCILLATOR_Initialize
  8253                           
  8254                           ;mcc_generated_files/mcc.c: 8:     TMR0_Initialize();
  8255  1680  3196  26DE  3196   	fcall	_TMR0_Initialize
  8256                           
  8257                           ;mcc_generated_files/mcc.c: 9:     EUSART_Initialize();
  8258  1683  3197  2782         	fcall	_EUSART_Initialize
  8259  1685  0008               	return
  8260  1686                     __end_of_SYSTEM_Initialize:	
  8261                           
  8262                           	psect	text24
  8263  16DE                     __ptext24:	
  8264 ;; *************** function _TMR0_Initialize *****************
  8265 ;; Defined at:
  8266 ;;		line 18 in file "mcc_generated_files/tmr0.c"
  8267 ;; Parameters:    Size  Location     Type
  8268 ;;		None
  8269 ;; Auto vars:     Size  Location     Type
  8270 ;;		None
  8271 ;; Return value:  Size  Location     Type
  8272 ;;                  1    wreg      void 
  8273 ;; Registers used:
  8274 ;;		wreg, status,2, status,0, pclath, cstack
  8275 ;; Tracked objects:
  8276 ;;		On entry : 0/0
  8277 ;;		On exit  : 0/0
  8278 ;;		Unchanged: 0/0
  8279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8282 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8283 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8284 ;;Total ram usage:        1 bytes
  8285 ;; Hardware stack levels used:    1
  8286 ;; Hardware stack levels required when called:    7
  8287 ;; This function calls:
  8288 ;;		_TMR0_SetInterruptHandler
  8289 ;; This function is called by:
  8290 ;;		_SYSTEM_Initialize
  8291 ;; This function uses a non-reentrant model
  8292 ;;
  8293                           
  8294                           
  8295                           ;psect for function _TMR0_Initialize
  8296  16DE                     _TMR0_Initialize:	
  8297                           
  8298                           ;mcc_generated_files/tmr0.c: 23:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD4 
      +                          & 0x3F));
  8299                           
  8300                           ;incstack = 0
  8301                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8302  16DE  0021               	movlb	1	; select bank1
  8303  16DF  0815               	movf	21,w	;volatile
  8304  16E0  39C0               	andlw	192
  8305  16E1  3814               	iorlw	20
  8306  16E2  0095               	movwf	21	;volatile
  8307                           
  8308                           ;mcc_generated_files/tmr0.c: 26:     TMR0 = 0x83;
  8309  16E3  3083               	movlw	131
  8310  16E4  0020               	movlb	0	; select bank0
  8311  16E5  0095               	movwf	21	;volatile
  8312                           
  8313                           ;mcc_generated_files/tmr0.c: 29:     timer0ReloadVal= 131;
  8314  16E6  3083               	movlw	131
  8315  16E7  0021               	movlb	1	; select bank1
  8316  16E8  00A2               	movwf	??_TMR0_Initialize^(0+128)
  8317  16E9  0822               	movf	??_TMR0_Initialize^(0+128),w
  8318  16EA  0020               	movlb	0	; select bank0
  8319  16EB  00DF               	movwf	_timer0ReloadVal	;volatile
  8320                           
  8321                           ;mcc_generated_files/tmr0.c: 32:     INTCONbits.TMR0IF = 0;
  8322  16EC  110B               	bcf	11,2	;volatile
  8323                           
  8324                           ;mcc_generated_files/tmr0.c: 35:     INTCONbits.TMR0IE = 1;
  8325  16ED  168B               	bsf	11,5	;volatile
  8326                           
  8327                           ;mcc_generated_files/tmr0.c: 38:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  8328  16EE  3003               	movlw	low _TMR0_DefaultInterruptHandler
  8329  16EF  0021               	movlb	1	; select bank1
  8330  16F0  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler^(0+128)
  8331  16F1  3000               	movlw	high _TMR0_DefaultInterruptHandler
  8332  16F2  00A1               	movwf	(TMR0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  8333  16F3  3196  2671         	fcall	_TMR0_SetInterruptHandler
  8334  16F5  0008               	return
  8335  16F6                     __end_of_TMR0_Initialize:	
  8336                           
  8337                           	psect	text25
  8338  1671                     __ptext25:	
  8339 ;; *************** function _TMR0_SetInterruptHandler *****************
  8340 ;; Defined at:
  8341 ;;		line 79 in file "mcc_generated_files/tmr0.c"
  8342 ;; Parameters:    Size  Location     Type
  8343 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  8344 ;;		 -> timerISR(1), TMR0_DefaultInterruptHandler(1), 
  8345 ;; Auto vars:     Size  Location     Type
  8346 ;;		None
  8347 ;; Return value:  Size  Location     Type
  8348 ;;                  1    wreg      void 
  8349 ;; Registers used:
  8350 ;;		wreg
  8351 ;; Tracked objects:
  8352 ;;		On entry : 0/0
  8353 ;;		On exit  : 0/0
  8354 ;;		Unchanged: 0/0
  8355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8356 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8359 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8360 ;;Total ram usage:        2 bytes
  8361 ;; Hardware stack levels used:    1
  8362 ;; Hardware stack levels required when called:    6
  8363 ;; This function calls:
  8364 ;;		Nothing
  8365 ;; This function is called by:
  8366 ;;		_TMR0_Initialize
  8367 ;;		_main
  8368 ;; This function uses a non-reentrant model
  8369 ;;
  8370                           
  8371                           
  8372                           ;psect for function _TMR0_SetInterruptHandler
  8373  1671                     _TMR0_SetInterruptHandler:	
  8374                           
  8375                           ;mcc_generated_files/tmr0.c: 80:     TMR0_InterruptHandler = InterruptHandler;
  8376                           
  8377                           ;incstack = 0
  8378                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  8379  1671  0021               	movlb	1	; select bank1
  8380  1672  0821               	movf	(TMR0_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  8381  1673  0022               	movlb	2	; select bank2
  8382  1674  00DD               	movwf	(_TMR0_InterruptHandler+1)^(0+256)
  8383  1675  0021               	movlb	1	; select bank1
  8384  1676  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler^(0+128),w
  8385  1677  0022               	movlb	2	; select bank2
  8386  1678  00DC               	movwf	_TMR0_InterruptHandler^(0+256)
  8387  1679  0008               	return
  8388  167A                     __end_of_TMR0_SetInterruptHandler:	
  8389                           
  8390                           	psect	text26
  8391  080A                     __ptext26:	
  8392 ;; *************** function _PIN_MANAGER_Initialize *****************
  8393 ;; Defined at:
  8394 ;;		line 6 in file "mcc_generated_files/pin_manager.c"
  8395 ;; Parameters:    Size  Location     Type
  8396 ;;		None
  8397 ;; Auto vars:     Size  Location     Type
  8398 ;;		None
  8399 ;; Return value:  Size  Location     Type
  8400 ;;                  1    wreg      void 
  8401 ;; Registers used:
  8402 ;;		wreg, status,2, status,0, pclath, cstack
  8403 ;; Tracked objects:
  8404 ;;		On entry : 0/0
  8405 ;;		On exit  : 0/0
  8406 ;;		Unchanged: 0/0
  8407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8411 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8412 ;;Total ram usage:        0 bytes
  8413 ;; Hardware stack levels used:    1
  8414 ;; Hardware stack levels required when called:    7
  8415 ;; This function calls:
  8416 ;;		_IOCCF7_SetInterruptHandler
  8417 ;; This function is called by:
  8418 ;;		_SYSTEM_Initialize
  8419 ;; This function uses a non-reentrant model
  8420 ;;
  8421                           
  8422                           
  8423                           ;psect for function _PIN_MANAGER_Initialize
  8424  080A                     _PIN_MANAGER_Initialize:	
  8425                           
  8426                           ;mcc_generated_files/pin_manager.c: 11:     LATA = 0x00;
  8427                           
  8428                           ;incstack = 0
  8429                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8430  080A  0022               	movlb	2	; select bank2
  8431  080B  018C               	clrf	12	;volatile
  8432                           
  8433                           ;mcc_generated_files/pin_manager.c: 12:     LATB = 0x00;
  8434  080C  018D               	clrf	13	;volatile
  8435                           
  8436                           ;mcc_generated_files/pin_manager.c: 13:     LATC = 0x00;
  8437  080D  018E               	clrf	14	;volatile
  8438                           
  8439                           ;mcc_generated_files/pin_manager.c: 18:     TRISA = 0x37;
  8440  080E  3037               	movlw	55
  8441  080F  0021               	movlb	1	; select bank1
  8442  0810  008C               	movwf	12	;volatile
  8443                           
  8444                           ;mcc_generated_files/pin_manager.c: 19:     TRISB = 0x70;
  8445  0811  3070               	movlw	112
  8446  0812  008D               	movwf	13	;volatile
  8447                           
  8448                           ;mcc_generated_files/pin_manager.c: 20:     TRISC = 0xFF;
  8449  0813  30FF               	movlw	255
  8450  0814  008E               	movwf	14	;volatile
  8451                           
  8452                           ;mcc_generated_files/pin_manager.c: 25:     ANSELC = 0x4F;
  8453  0815  304F               	movlw	79
  8454  0816  0023               	movlb	3	; select bank3
  8455  0817  008E               	movwf	14	;volatile
  8456                           
  8457                           ;mcc_generated_files/pin_manager.c: 26:     ANSELB = 0x70;
  8458  0818  3070               	movlw	112
  8459  0819  008D               	movwf	13	;volatile
  8460                           
  8461                           ;mcc_generated_files/pin_manager.c: 27:     ANSELA = 0x17;
  8462  081A  3017               	movlw	23
  8463  081B  008C               	movwf	12	;volatile
  8464                           
  8465                           ;mcc_generated_files/pin_manager.c: 32:     WPUB = 0x00;
  8466  081C  0024               	movlb	4	; select bank4
  8467  081D  018D               	clrf	13	;volatile
  8468                           
  8469                           ;mcc_generated_files/pin_manager.c: 33:     WPUA = 0x00;
  8470  081E  018C               	clrf	12	;volatile
  8471                           
  8472                           ;mcc_generated_files/pin_manager.c: 34:     WPUC = 0x00;
  8473  081F  018E               	clrf	14	;volatile
  8474                           
  8475                           ;mcc_generated_files/pin_manager.c: 35:     OPTION_REGbits.nWPUEN = 1;
  8476  0820  0021               	movlb	1	; select bank1
  8477  0821  1795               	bsf	21,7	;volatile
  8478                           
  8479                           ;mcc_generated_files/pin_manager.c: 40:     ODCONA = 0x00;
  8480  0822  0025               	movlb	5	; select bank5
  8481  0823  018C               	clrf	12	;volatile
  8482                           
  8483                           ;mcc_generated_files/pin_manager.c: 41:     ODCONB = 0x00;
  8484  0824  018D               	clrf	13	;volatile
  8485                           
  8486                           ;mcc_generated_files/pin_manager.c: 42:     ODCONC = 0x00;
  8487  0825  018E               	clrf	14	;volatile
  8488                           
  8489                           ;mcc_generated_files/pin_manager.c: 47:     SLRCONA = 0x37;
  8490  0826  3037               	movlw	55
  8491  0827  0026               	movlb	6	; select bank6
  8492  0828  008C               	movwf	12	;volatile
  8493                           
  8494                           ;mcc_generated_files/pin_manager.c: 48:     SLRCONB = 0xF0;
  8495  0829  30F0               	movlw	240
  8496  082A  008D               	movwf	13	;volatile
  8497                           
  8498                           ;mcc_generated_files/pin_manager.c: 49:     SLRCONC = 0xFF;
  8499  082B  30FF               	movlw	255
  8500  082C  008E               	movwf	14	;volatile
  8501                           
  8502                           ;mcc_generated_files/pin_manager.c: 56:     IOCCFbits.IOCCF7 = 0;
  8503  082D  0027               	movlb	7	; select bank7
  8504  082E  1399               	bcf	25,7	;volatile
  8505                           
  8506                           ;mcc_generated_files/pin_manager.c: 58:     IOCCNbits.IOCCN7 = 0;
  8507  082F  1398               	bcf	24,7	;volatile
  8508                           
  8509                           ;mcc_generated_files/pin_manager.c: 60:     IOCCPbits.IOCCP7 = 1;
  8510  0830  1797               	bsf	23,7	;volatile
  8511                           
  8512                           ;mcc_generated_files/pin_manager.c: 65:     IOCCF7_SetInterruptHandler(IOCCF7_DefaultInt
      +                          erruptHandler);
  8513  0831  3002               	movlw	low _IOCCF7_DefaultInterruptHandler
  8514  0832  0021               	movlb	1	; select bank1
  8515  0833  00A0               	movwf	IOCCF7_SetInterruptHandler@InterruptHandler^(0+128)
  8516  0834  3000               	movlw	high _IOCCF7_DefaultInterruptHandler
  8517  0835  00A1               	movwf	(IOCCF7_SetInterruptHandler@InterruptHandler^(0+128)+1)
  8518  0836  3196  2668         	fcall	_IOCCF7_SetInterruptHandler
  8519                           
  8520                           ;mcc_generated_files/pin_manager.c: 68:     INTCONbits.IOCIE = 1;
  8521  0838  158B               	bsf	11,3	;volatile
  8522                           
  8523                           ;mcc_generated_files/pin_manager.c: 71:     RB7PPS = 0x12;
  8524  0839  3012               	movlw	18
  8525  083A  003D               	movlb	29	; select bank29
  8526  083B  009F               	movwf	31	;volatile
  8527  083C  0008               	return
  8528  083D                     __end_of_PIN_MANAGER_Initialize:	
  8529                           
  8530                           	psect	text27
  8531  1668                     __ptext27:	
  8532 ;; *************** function _IOCCF7_SetInterruptHandler *****************
  8533 ;; Defined at:
  8534 ;;		line 101 in file "mcc_generated_files/pin_manager.c"
  8535 ;; Parameters:    Size  Location     Type
  8536 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  8537 ;;		 -> speedCalc(1), IOCCF7_DefaultInterruptHandler(1), 
  8538 ;; Auto vars:     Size  Location     Type
  8539 ;;		None
  8540 ;; Return value:  Size  Location     Type
  8541 ;;                  1    wreg      void 
  8542 ;; Registers used:
  8543 ;;		wreg
  8544 ;; Tracked objects:
  8545 ;;		On entry : 0/0
  8546 ;;		On exit  : 0/0
  8547 ;;		Unchanged: 0/0
  8548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8549 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8552 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8553 ;;Total ram usage:        2 bytes
  8554 ;; Hardware stack levels used:    1
  8555 ;; Hardware stack levels required when called:    6
  8556 ;; This function calls:
  8557 ;;		Nothing
  8558 ;; This function is called by:
  8559 ;;		_PIN_MANAGER_Initialize
  8560 ;;		_main
  8561 ;; This function uses a non-reentrant model
  8562 ;;
  8563                           
  8564                           
  8565                           ;psect for function _IOCCF7_SetInterruptHandler
  8566  1668                     _IOCCF7_SetInterruptHandler:	
  8567                           
  8568                           ;mcc_generated_files/pin_manager.c: 102:     IOCCF7_InterruptHandler = InterruptHandler;
  8569                           
  8570                           ;incstack = 0
  8571                           ; Regs used in _IOCCF7_SetInterruptHandler: [wreg]
  8572  1668  0021               	movlb	1	; select bank1
  8573  1669  0821               	movf	(IOCCF7_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  8574  166A  0022               	movlb	2	; select bank2
  8575  166B  00DF               	movwf	(_IOCCF7_InterruptHandler+1)^(0+256)
  8576  166C  0021               	movlb	1	; select bank1
  8577  166D  0820               	movf	IOCCF7_SetInterruptHandler@InterruptHandler^(0+128),w
  8578  166E  0022               	movlb	2	; select bank2
  8579  166F  00DE               	movwf	_IOCCF7_InterruptHandler^(0+256)
  8580  1670  0008               	return
  8581  1671                     __end_of_IOCCF7_SetInterruptHandler:	
  8582                           
  8583                           	psect	text28
  8584  163E                     __ptext28:	
  8585 ;; *************** function _OSCILLATOR_Initialize *****************
  8586 ;; Defined at:
  8587 ;;		line 12 in file "mcc_generated_files/mcc.c"
  8588 ;; Parameters:    Size  Location     Type
  8589 ;;		None
  8590 ;; Auto vars:     Size  Location     Type
  8591 ;;		None
  8592 ;; Return value:  Size  Location     Type
  8593 ;;                  1    wreg      void 
  8594 ;; Registers used:
  8595 ;;		wreg, status,2
  8596 ;; Tracked objects:
  8597 ;;		On entry : 0/0
  8598 ;;		On exit  : 0/0
  8599 ;;		Unchanged: 0/0
  8600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8605 ;;Total ram usage:        0 bytes
  8606 ;; Hardware stack levels used:    1
  8607 ;; Hardware stack levels required when called:    6
  8608 ;; This function calls:
  8609 ;;		Nothing
  8610 ;; This function is called by:
  8611 ;;		_SYSTEM_Initialize
  8612 ;; This function uses a non-reentrant model
  8613 ;;
  8614                           
  8615                           
  8616                           ;psect for function _OSCILLATOR_Initialize
  8617  163E                     _OSCILLATOR_Initialize:	
  8618                           
  8619                           ;mcc_generated_files/mcc.c: 15:     OSCCON = 0x7A;
  8620                           
  8621                           ;incstack = 0
  8622                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  8623  163E  307A               	movlw	122
  8624  163F  0021               	movlb	1	; select bank1
  8625  1640  0099               	movwf	25	;volatile
  8626                           
  8627                           ;mcc_generated_files/mcc.c: 17:     OSCTUNE = 0x00;
  8628  1641  0198               	clrf	24	;volatile
  8629                           
  8630                           ;mcc_generated_files/mcc.c: 19:     BORCON = 0x00;
  8631  1642  0022               	movlb	2	; select bank2
  8632  1643  0196               	clrf	22	;volatile
  8633  1644  0008               	return
  8634  1645                     __end_of_OSCILLATOR_Initialize:	
  8635                           
  8636                           	psect	text29
  8637  1782                     __ptext29:	
  8638 ;; *************** function _EUSART_Initialize *****************
  8639 ;; Defined at:
  8640 ;;		line 65 in file "mcc_generated_files/eusart.c"
  8641 ;; Parameters:    Size  Location     Type
  8642 ;;		None
  8643 ;; Auto vars:     Size  Location     Type
  8644 ;;		None
  8645 ;; Return value:  Size  Location     Type
  8646 ;;                  1    wreg      void 
  8647 ;; Registers used:
  8648 ;;		wreg, status,2, status,0, pclath, cstack
  8649 ;; Tracked objects:
  8650 ;;		On entry : 0/0
  8651 ;;		On exit  : 0/0
  8652 ;;		Unchanged: 0/0
  8653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8657 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8658 ;;Total ram usage:        0 bytes
  8659 ;; Hardware stack levels used:    1
  8660 ;; Hardware stack levels required when called:    7
  8661 ;; This function calls:
  8662 ;;		_EUSART_SetErrorHandler
  8663 ;;		_EUSART_SetFramingErrorHandler
  8664 ;;		_EUSART_SetOverrunErrorHandler
  8665 ;; This function is called by:
  8666 ;;		_SYSTEM_Initialize
  8667 ;; This function uses a non-reentrant model
  8668 ;;
  8669                           
  8670                           
  8671                           ;psect for function _EUSART_Initialize
  8672  1782                     _EUSART_Initialize:	
  8673                           
  8674                           ;mcc_generated_files/eusart.c: 70:     BAUD1CON = 0x08;
  8675                           
  8676                           ;incstack = 0
  8677                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8678  1782  3008               	movlw	8
  8679  1783  0023               	movlb	3	; select bank3
  8680  1784  009F               	movwf	31	;volatile
  8681                           
  8682                           ;mcc_generated_files/eusart.c: 73:     RC1STA = 0x80;
  8683  1785  3080               	movlw	128
  8684  1786  009D               	movwf	29	;volatile
  8685                           
  8686                           ;mcc_generated_files/eusart.c: 76:     TX1STA = 0x24;
  8687  1787  3024               	movlw	36
  8688  1788  009E               	movwf	30	;volatile
  8689                           
  8690                           ;mcc_generated_files/eusart.c: 79:     SPBRGL = 0xA0;
  8691  1789  30A0               	movlw	160
  8692  178A  009B               	movwf	27	;volatile
  8693                           
  8694                           ;mcc_generated_files/eusart.c: 82:     SPBRGH = 0x01;
  8695  178B  3001               	movlw	1
  8696  178C  009C               	movwf	28	;volatile
  8697                           
  8698                           ;mcc_generated_files/eusart.c: 85:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  8699  178D  3000               	movlw	0
  8700  178E  0021               	movlb	1	; select bank1
  8701  178F  00A0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128)
  8702  1790  3000               	movlw	0
  8703  1791  00A1               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler^(0+128)+1)
  8704  1792  3196  2656  3197   	fcall	_EUSART_SetFramingErrorHandler
  8705                           
  8706                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  8707  1795  3000               	movlw	0
  8708  1796  0021               	movlb	1	; select bank1
  8709  1797  00A0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)
  8710  1798  3000               	movlw	0
  8711  1799  00A1               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)+1)
  8712  179A  3196  265F  3197   	fcall	_EUSART_SetOverrunErrorHandler
  8713                           
  8714                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  8715  179D  3000               	movlw	0
  8716  179E  0021               	movlb	1	; select bank1
  8717  179F  00A0               	movwf	EUSART_SetErrorHandler@interruptHandler^(0+128)
  8718  17A0  3000               	movlw	0
  8719  17A1  00A1               	movwf	(EUSART_SetErrorHandler@interruptHandler^(0+128)+1)
  8720  17A2  3196  264D         	fcall	_EUSART_SetErrorHandler
  8721                           
  8722                           ;mcc_generated_files/eusart.c: 89:     eusartRxLastError.status = 0;
  8723  17A4  0020               	movlb	0	; select bank0
  8724  17A5  01DA               	clrf	_eusartRxLastError	;volatile
  8725  17A6  0008               	return
  8726  17A7                     __end_of_EUSART_Initialize:	
  8727                           
  8728                           	psect	text30
  8729  165F                     __ptext30:	
  8730 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  8731 ;; Defined at:
  8732 ;;		line 175 in file "mcc_generated_files/eusart.c"
  8733 ;; Parameters:    Size  Location     Type
  8734 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  8735 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  8736 ;; Auto vars:     Size  Location     Type
  8737 ;;		None
  8738 ;; Return value:  Size  Location     Type
  8739 ;;                  1    wreg      void 
  8740 ;; Registers used:
  8741 ;;		wreg
  8742 ;; Tracked objects:
  8743 ;;		On entry : 0/0
  8744 ;;		On exit  : 0/0
  8745 ;;		Unchanged: 0/0
  8746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8747 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8750 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8751 ;;Total ram usage:        2 bytes
  8752 ;; Hardware stack levels used:    1
  8753 ;; Hardware stack levels required when called:    6
  8754 ;; This function calls:
  8755 ;;		Nothing
  8756 ;; This function is called by:
  8757 ;;		_EUSART_Initialize
  8758 ;; This function uses a non-reentrant model
  8759 ;;
  8760                           
  8761                           
  8762                           ;psect for function _EUSART_SetOverrunErrorHandler
  8763  165F                     _EUSART_SetOverrunErrorHandler:	
  8764                           
  8765                           ;mcc_generated_files/eusart.c: 176:     EUSART_OverrunErrorHandler = interruptHandler;
  8766                           
  8767                           ;incstack = 0
  8768                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  8769  165F  0021               	movlb	1	; select bank1
  8770  1660  0821               	movf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^(0+128),w
  8771  1661  0022               	movlb	2	; select bank2
  8772  1662  00E3               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+256)
  8773  1663  0021               	movlb	1	; select bank1
  8774  1664  0820               	movf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128),w
  8775  1665  0022               	movlb	2	; select bank2
  8776  1666  00E2               	movwf	_EUSART_OverrunErrorHandler^(0+256)
  8777  1667  0008               	return
  8778  1668                     __end_of_EUSART_SetOverrunErrorHandler:	
  8779                           
  8780                           	psect	text31
  8781  1656                     __ptext31:	
  8782 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  8783 ;; Defined at:
  8784 ;;		line 171 in file "mcc_generated_files/eusart.c"
  8785 ;; Parameters:    Size  Location     Type
  8786 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  8787 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  8788 ;; Auto vars:     Size  Location     Type
  8789 ;;		None
  8790 ;; Return value:  Size  Location     Type
  8791 ;;                  1    wreg      void 
  8792 ;; Registers used:
  8793 ;;		wreg
  8794 ;; Tracked objects:
  8795 ;;		On entry : 0/0
  8796 ;;		On exit  : 0/0
  8797 ;;		Unchanged: 0/0
  8798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8799 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8802 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8803 ;;Total ram usage:        2 bytes
  8804 ;; Hardware stack levels used:    1
  8805 ;; Hardware stack levels required when called:    6
  8806 ;; This function calls:
  8807 ;;		Nothing
  8808 ;; This function is called by:
  8809 ;;		_EUSART_Initialize
  8810 ;; This function uses a non-reentrant model
  8811 ;;
  8812                           
  8813                           
  8814                           ;psect for function _EUSART_SetFramingErrorHandler
  8815  1656                     _EUSART_SetFramingErrorHandler:	
  8816                           
  8817                           ;mcc_generated_files/eusart.c: 172:     EUSART_FramingErrorHandler = interruptHandler;
  8818                           
  8819                           ;incstack = 0
  8820                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  8821  1656  0021               	movlb	1	; select bank1
  8822  1657  0821               	movf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^(0+128),w
  8823  1658  0022               	movlb	2	; select bank2
  8824  1659  00E5               	movwf	(_EUSART_FramingErrorHandler+1)^(0+256)
  8825  165A  0021               	movlb	1	; select bank1
  8826  165B  0820               	movf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128),w
  8827  165C  0022               	movlb	2	; select bank2
  8828  165D  00E4               	movwf	_EUSART_FramingErrorHandler^(0+256)
  8829  165E  0008               	return
  8830  165F                     __end_of_EUSART_SetFramingErrorHandler:	
  8831                           
  8832                           	psect	text32
  8833  164D                     __ptext32:	
  8834 ;; *************** function _EUSART_SetErrorHandler *****************
  8835 ;; Defined at:
  8836 ;;		line 179 in file "mcc_generated_files/eusart.c"
  8837 ;; Parameters:    Size  Location     Type
  8838 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  8839 ;;		 -> EUSART_DefaultErrorHandler(1), 
  8840 ;; Auto vars:     Size  Location     Type
  8841 ;;		None
  8842 ;; Return value:  Size  Location     Type
  8843 ;;                  1    wreg      void 
  8844 ;; Registers used:
  8845 ;;		wreg
  8846 ;; Tracked objects:
  8847 ;;		On entry : 0/0
  8848 ;;		On exit  : 0/0
  8849 ;;		Unchanged: 0/0
  8850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8851 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8854 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8855 ;;Total ram usage:        2 bytes
  8856 ;; Hardware stack levels used:    1
  8857 ;; Hardware stack levels required when called:    6
  8858 ;; This function calls:
  8859 ;;		Nothing
  8860 ;; This function is called by:
  8861 ;;		_EUSART_Initialize
  8862 ;; This function uses a non-reentrant model
  8863 ;;
  8864                           
  8865                           
  8866                           ;psect for function _EUSART_SetErrorHandler
  8867  164D                     _EUSART_SetErrorHandler:	
  8868                           
  8869                           ;mcc_generated_files/eusart.c: 180:     EUSART_ErrorHandler = interruptHandler;
  8870                           
  8871                           ;incstack = 0
  8872                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  8873  164D  0021               	movlb	1	; select bank1
  8874  164E  0821               	movf	(EUSART_SetErrorHandler@interruptHandler+1)^(0+128),w
  8875  164F  0022               	movlb	2	; select bank2
  8876  1650  00E1               	movwf	(_EUSART_ErrorHandler+1)^(0+256)
  8877  1651  0021               	movlb	1	; select bank1
  8878  1652  0820               	movf	EUSART_SetErrorHandler@interruptHandler^(0+128),w
  8879  1653  0022               	movlb	2	; select bank2
  8880  1654  00E0               	movwf	_EUSART_ErrorHandler^(0+256)
  8881  1655  0008               	return
  8882  1656                     __end_of_EUSART_SetErrorHandler:	
  8883                           
  8884                           	psect	intentry
  8885  0004                     __pintentry:	
  8886 ;; *************** function _INTERRUPT_InterruptManager *****************
  8887 ;; Defined at:
  8888 ;;		line 4 in file "mcc_generated_files/interrupt_manager.c"
  8889 ;; Parameters:    Size  Location     Type
  8890 ;;		None
  8891 ;; Auto vars:     Size  Location     Type
  8892 ;;		None
  8893 ;; Return value:  Size  Location     Type
  8894 ;;                  1    wreg      void 
  8895 ;; Registers used:
  8896 ;;		wreg, status,2, status,0, pclath, cstack
  8897 ;; Tracked objects:
  8898 ;;		On entry : 0/0
  8899 ;;		On exit  : 0/0
  8900 ;;		Unchanged: 0/0
  8901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8905 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8906 ;;Total ram usage:        0 bytes
  8907 ;; Hardware stack levels used:    1
  8908 ;; Hardware stack levels required when called:    5
  8909 ;; This function calls:
  8910 ;;		_PIN_MANAGER_IOC
  8911 ;;		_TMR0_ISR
  8912 ;; This function is called by:
  8913 ;;		Interrupt level 1
  8914 ;; This function uses a non-reentrant model
  8915 ;;
  8916                           
  8917  0004                     _INTERRUPT_InterruptManager:	
  8918                           
  8919                           ;incstack = 0
  8920  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  8921                           
  8922                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  8923  0005  3180               	pagesel	$
  8924                           
  8925                           ;mcc_generated_files/interrupt_manager.c: 7:     if(INTCONbits.TMR0IE == 1 && INTCONbits
      +                          .TMR0IF == 1)
  8926  0006  1A8B               	btfsc	11,5	;volatile
  8927  0007  1D0B               	btfss	11,2	;volatile
  8928  0008  280D               	goto	i1l236
  8929                           
  8930                           ;mcc_generated_files/interrupt_manager.c: 8:     {;mcc_generated_files/interrupt_manager
      +                          .c: 9:         TMR0_ISR();
  8931  0009  3187  27F1  3180   	fcall	_TMR0_ISR
  8932                           
  8933                           ;mcc_generated_files/interrupt_manager.c: 10:     }
  8934  000C  2812               	goto	i1l240
  8935  000D                     i1l236:	
  8936                           ;mcc_generated_files/interrupt_manager.c: 11:     else if(INTCONbits.IOCIE == 1 && INTCO
      +                          Nbits.IOCIF == 1)
  8937                           
  8938  000D  198B               	btfsc	11,3	;volatile
  8939  000E  1C0B               	btfss	11,0	;volatile
  8940  000F  2812               	goto	i1l240
  8941                           
  8942                           ;mcc_generated_files/interrupt_manager.c: 12:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 13:         PIN_MANAGER_IOC();
  8943  0010  3196  2626         	fcall	_PIN_MANAGER_IOC
  8944  0012                     i1l240:	
  8945                           ;mcc_generated_files/interrupt_manager.c: 14:     }
  8946                           
  8947  0012  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  8948  0013  0009               	retfie
  8949  0014                     __end_of_INTERRUPT_InterruptManager:	
  8950                           
  8951                           	psect	text34
  8952  07F1                     __ptext34:	
  8953 ;; *************** function _TMR0_ISR *****************
  8954 ;; Defined at:
  8955 ;;		line 62 in file "mcc_generated_files/tmr0.c"
  8956 ;; Parameters:    Size  Location     Type
  8957 ;;		None
  8958 ;; Auto vars:     Size  Location     Type
  8959 ;;		None
  8960 ;; Return value:  Size  Location     Type
  8961 ;;                  1    wreg      void 
  8962 ;; Registers used:
  8963 ;;		wreg, status,2, status,0, pclath, cstack
  8964 ;; Tracked objects:
  8965 ;;		On entry : 0/0
  8966 ;;		On exit  : 0/0
  8967 ;;		Unchanged: 0/0
  8968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8972 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8973 ;;Total ram usage:        0 bytes
  8974 ;; Hardware stack levels used:    1
  8975 ;; Hardware stack levels required when called:    1
  8976 ;; This function calls:
  8977 ;;		Absolute function
  8978 ;;		_TMR0_DefaultInterruptHandler
  8979 ;;		_timerISR
  8980 ;; This function is called by:
  8981 ;;		_INTERRUPT_InterruptManager
  8982 ;; This function uses a non-reentrant model
  8983 ;;
  8984                           
  8985                           
  8986                           ;psect for function _TMR0_ISR
  8987  07F1                     _TMR0_ISR:	
  8988                           
  8989                           ;mcc_generated_files/tmr0.c: 66:     INTCONbits.TMR0IF = 0;
  8990                           
  8991                           ;incstack = 0
  8992                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  8993  07F1  110B               	bcf	11,2	;volatile
  8994                           
  8995                           ;mcc_generated_files/tmr0.c: 68:     TMR0 = timer0ReloadVal;
  8996  07F2  0020               	movlb	0	; select bank0
  8997  07F3  085F               	movf	_timer0ReloadVal,w	;volatile
  8998  07F4  0095               	movwf	21	;volatile
  8999                           
  9000                           ;mcc_generated_files/tmr0.c: 70:     if(TMR0_InterruptHandler)
  9001  07F5  0022               	movlb	2	; select bank2
  9002  07F6  085C               	movf	_TMR0_InterruptHandler^(0+256),w
  9003  07F7  045D               	iorwf	(_TMR0_InterruptHandler+1)^(0+256),w
  9004  07F8  1903               	btfsc	3,2
  9005  07F9  0008               	return
  9006                           
  9007                           ;mcc_generated_files/tmr0.c: 71:     {;mcc_generated_files/tmr0.c: 72:         TMR0_Inte
      +                          rruptHandler();
  9008  07FA  085D               	movf	(_TMR0_InterruptHandler+1)^(0+256),w
  9009  07FB  008A               	movwf	10
  9010  07FC  085C               	movf	_TMR0_InterruptHandler^(0+256),w
  9011  07FD  000A               	callw
  9012  07FE  3187               	pagesel	$
  9013  07FF  0008               	return
  9014  0800                     __end_of_TMR0_ISR:	
  9015                           
  9016                           	psect	text35
  9017  0003                     __ptext35:	
  9018 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  9019 ;; Defined at:
  9020 ;;		line 83 in file "mcc_generated_files/tmr0.c"
  9021 ;; Parameters:    Size  Location     Type
  9022 ;;		None
  9023 ;; Auto vars:     Size  Location     Type
  9024 ;;		None
  9025 ;; Return value:  Size  Location     Type
  9026 ;;                  1    wreg      void 
  9027 ;; Registers used:
  9028 ;;		None
  9029 ;; Tracked objects:
  9030 ;;		On entry : 0/0
  9031 ;;		On exit  : 0/0
  9032 ;;		Unchanged: 0/0
  9033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9038 ;;Total ram usage:        0 bytes
  9039 ;; Hardware stack levels used:    1
  9040 ;; This function calls:
  9041 ;;		Nothing
  9042 ;; This function is called by:
  9043 ;;		_TMR0_Initialize
  9044 ;;		_TMR0_ISR
  9045 ;; This function uses a non-reentrant model
  9046 ;;
  9047                           
  9048                           
  9049                           ;psect for function _TMR0_DefaultInterruptHandler
  9050  0003                     _TMR0_DefaultInterruptHandler:	
  9051                           
  9052                           ;incstack = 0
  9053                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  9054  0003  0008               	return
  9055  0004                     __end_of_TMR0_DefaultInterruptHandler:	
  9056                           
  9057                           	psect	text36
  9058  16A1                     __ptext36:	
  9059 ;; *************** function _timerISR *****************
  9060 ;; Defined at:
  9061 ;;		line 108 in file "main.c"
  9062 ;; Parameters:    Size  Location     Type
  9063 ;;		None
  9064 ;; Auto vars:     Size  Location     Type
  9065 ;;		None
  9066 ;; Return value:  Size  Location     Type
  9067 ;;                  1    wreg      void 
  9068 ;; Registers used:
  9069 ;;		wreg
  9070 ;; Tracked objects:
  9071 ;;		On entry : 0/0
  9072 ;;		On exit  : 0/0
  9073 ;;		Unchanged: 0/0
  9074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9079 ;;Total ram usage:        0 bytes
  9080 ;; Hardware stack levels used:    1
  9081 ;; This function calls:
  9082 ;;		Nothing
  9083 ;; This function is called by:
  9084 ;;		_main
  9085 ;;		_TMR0_ISR
  9086 ;; This function uses a non-reentrant model
  9087 ;;
  9088                           
  9089                           
  9090                           ;psect for function _timerISR
  9091  16A1                     _timerISR:	
  9092                           
  9093                           ;main.c: 109:     counter++ ;
  9094                           
  9095                           ;incstack = 0
  9096                           ; Regs used in _timerISR: [wreg]
  9097  16A1  3001               	movlw	1
  9098  16A2  0020               	movlb	0	; select bank0
  9099  16A3  07DB               	addwf	_counter,f	;volatile
  9100  16A4  3000               	movlw	0
  9101  16A5  3DDC               	addwfc	_counter+1,f	;volatile
  9102  16A6  3000               	movlw	0
  9103  16A7  3DDD               	addwfc	_counter+2,f	;volatile
  9104  16A8  3000               	movlw	0
  9105  16A9  3DDE               	addwfc	_counter+3,f	;volatile
  9106                           
  9107                           ;main.c: 110:     adcCounter++ ;
  9108  16AA  3001               	movlw	1
  9109  16AB  0022               	movlb	2	; select bank2
  9110  16AC  07D4               	addwf	_adcCounter^(0+256),f	;volatile
  9111  16AD  3000               	movlw	0
  9112  16AE  3DD5               	addwfc	(_adcCounter+1)^(0+256),f	;volatile
  9113  16AF  3000               	movlw	0
  9114  16B0  3DD6               	addwfc	(_adcCounter+2)^(0+256),f	;volatile
  9115  16B1  3000               	movlw	0
  9116  16B2  3DD7               	addwfc	(_adcCounter+3)^(0+256),f	;volatile
  9117  16B3  0008               	return
  9118  16B4                     __end_of_timerISR:	
  9119                           
  9120                           	psect	text37
  9121  1626                     __ptext37:	
  9122 ;; *************** function _PIN_MANAGER_IOC *****************
  9123 ;; Defined at:
  9124 ;;		line 74 in file "mcc_generated_files/pin_manager.c"
  9125 ;; Parameters:    Size  Location     Type
  9126 ;;		None
  9127 ;; Auto vars:     Size  Location     Type
  9128 ;;		None
  9129 ;; Return value:  Size  Location     Type
  9130 ;;                  1    wreg      void 
  9131 ;; Registers used:
  9132 ;;		wreg, status,2, status,0, pclath, cstack
  9133 ;; Tracked objects:
  9134 ;;		On entry : 0/0
  9135 ;;		On exit  : 0/0
  9136 ;;		Unchanged: 0/0
  9137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9142 ;;Total ram usage:        0 bytes
  9143 ;; Hardware stack levels used:    1
  9144 ;; Hardware stack levels required when called:    4
  9145 ;; This function calls:
  9146 ;;		_IOCCF7_ISR
  9147 ;; This function is called by:
  9148 ;;		_INTERRUPT_InterruptManager
  9149 ;; This function uses a non-reentrant model
  9150 ;;
  9151                           
  9152                           
  9153                           ;psect for function _PIN_MANAGER_IOC
  9154  1626                     _PIN_MANAGER_IOC:	
  9155                           
  9156                           ;mcc_generated_files/pin_manager.c: 77:     if(IOCCFbits.IOCCF7 == 1)
  9157                           
  9158                           ;incstack = 0
  9159                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
  9160  1626  0027               	movlb	7	; select bank7
  9161  1627  1F99               	btfss	25,7	;volatile
  9162  1628  0008               	return
  9163                           
  9164                           ;mcc_generated_files/pin_manager.c: 78:     {;mcc_generated_files/pin_manager.c: 79:    
      +                               IOCCF7_ISR();
  9165  1629  3196  2686         	fcall	_IOCCF7_ISR
  9166  162B  0008               	return
  9167  162C                     __end_of_PIN_MANAGER_IOC:	
  9168                           
  9169                           	psect	text38
  9170  1686                     __ptext38:	
  9171 ;; *************** function _IOCCF7_ISR *****************
  9172 ;; Defined at:
  9173 ;;		line 86 in file "mcc_generated_files/pin_manager.c"
  9174 ;; Parameters:    Size  Location     Type
  9175 ;;		None
  9176 ;; Auto vars:     Size  Location     Type
  9177 ;;		None
  9178 ;; Return value:  Size  Location     Type
  9179 ;;                  1    wreg      void 
  9180 ;; Registers used:
  9181 ;;		wreg, status,2, status,0, pclath, cstack
  9182 ;; Tracked objects:
  9183 ;;		On entry : 0/0
  9184 ;;		On exit  : 0/0
  9185 ;;		Unchanged: 0/0
  9186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9191 ;;Total ram usage:        0 bytes
  9192 ;; Hardware stack levels used:    1
  9193 ;; Hardware stack levels required when called:    3
  9194 ;; This function calls:
  9195 ;;		Absolute function
  9196 ;;		_IOCCF7_DefaultInterruptHandler
  9197 ;;		_speedCalc
  9198 ;; This function is called by:
  9199 ;;		_PIN_MANAGER_IOC
  9200 ;; This function uses a non-reentrant model
  9201 ;;
  9202                           
  9203                           
  9204                           ;psect for function _IOCCF7_ISR
  9205  1686                     _IOCCF7_ISR:	
  9206                           
  9207                           ;mcc_generated_files/pin_manager.c: 91:     if(IOCCF7_InterruptHandler)
  9208                           
  9209                           ;incstack = 0
  9210                           ; Regs used in _IOCCF7_ISR: [wreg+status,2+status,0+pclath+cstack]
  9211  1686  0022               	movlb	2	; select bank2
  9212  1687  085E               	movf	_IOCCF7_InterruptHandler^(0+256),w
  9213  1688  045F               	iorwf	(_IOCCF7_InterruptHandler+1)^(0+256),w
  9214  1689  1903               	btfsc	3,2
  9215  168A  2E90               	goto	i1l3109
  9216                           
  9217                           ;mcc_generated_files/pin_manager.c: 92:     {;mcc_generated_files/pin_manager.c: 93:    
      +                               IOCCF7_InterruptHandler();
  9218  168B  085F               	movf	(_IOCCF7_InterruptHandler+1)^(0+256),w
  9219  168C  008A               	movwf	10
  9220  168D  085E               	movf	_IOCCF7_InterruptHandler^(0+256),w
  9221  168E  000A               	callw
  9222  168F  3196               	pagesel	$
  9223  1690                     i1l3109:	
  9224                           
  9225                           ;mcc_generated_files/pin_manager.c: 95:     IOCCFbits.IOCCF7 = 0;
  9226  1690  0027               	movlb	7	; select bank7
  9227  1691  1399               	bcf	25,7	;volatile
  9228  1692  0008               	return
  9229  1693                     __end_of_IOCCF7_ISR:	
  9230                           
  9231                           	psect	text39
  9232  0002                     __ptext39:	
  9233 ;; *************** function _IOCCF7_DefaultInterruptHandler *****************
  9234 ;; Defined at:
  9235 ;;		line 108 in file "mcc_generated_files/pin_manager.c"
  9236 ;; Parameters:    Size  Location     Type
  9237 ;;		None
  9238 ;; Auto vars:     Size  Location     Type
  9239 ;;		None
  9240 ;; Return value:  Size  Location     Type
  9241 ;;                  1    wreg      void 
  9242 ;; Registers used:
  9243 ;;		None
  9244 ;; Tracked objects:
  9245 ;;		On entry : 0/0
  9246 ;;		On exit  : 0/0
  9247 ;;		Unchanged: 0/0
  9248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9253 ;;Total ram usage:        0 bytes
  9254 ;; Hardware stack levels used:    1
  9255 ;; This function calls:
  9256 ;;		Nothing
  9257 ;; This function is called by:
  9258 ;;		_PIN_MANAGER_Initialize
  9259 ;;		_IOCCF7_ISR
  9260 ;; This function uses a non-reentrant model
  9261 ;;
  9262                           
  9263                           
  9264                           ;psect for function _IOCCF7_DefaultInterruptHandler
  9265  0002                     _IOCCF7_DefaultInterruptHandler:	
  9266                           
  9267                           ;incstack = 0
  9268                           ; Regs used in _IOCCF7_DefaultInterruptHandler: []
  9269  0002  0008               	return
  9270  0003                     __end_of_IOCCF7_DefaultInterruptHandler:	
  9271                           
  9272                           	psect	text40
  9273  0B21                     __ptext40:	
  9274 ;; *************** function _speedCalc *****************
  9275 ;; Defined at:
  9276 ;;		line 113 in file "main.c"
  9277 ;; Parameters:    Size  Location     Type
  9278 ;;		None
  9279 ;; Auto vars:     Size  Location     Type
  9280 ;;		None
  9281 ;; Return value:  Size  Location     Type
  9282 ;;                  1    wreg      void 
  9283 ;; Registers used:
  9284 ;;		wreg, status,2, status,0, pclath, cstack
  9285 ;; Tracked objects:
  9286 ;;		On entry : 0/0
  9287 ;;		On exit  : 0/0
  9288 ;;		Unchanged: 0/0
  9289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9291 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9293 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9294 ;;Total ram usage:        4 bytes
  9295 ;; Hardware stack levels used:    1
  9296 ;; Hardware stack levels required when called:    2
  9297 ;; This function calls:
  9298 ;;		___aldiv
  9299 ;;		___fladd
  9300 ;;		___flmul
  9301 ;;		___lmul
  9302 ;;		___xxtofl
  9303 ;; This function is called by:
  9304 ;;		_main
  9305 ;;		_IOCCF7_ISR
  9306 ;; This function uses a non-reentrant model
  9307 ;;
  9308                           
  9309                           
  9310                           ;psect for function _speedCalc
  9311  0B21                     _speedCalc:	
  9312                           
  9313                           ;main.c: 115:     rpm = ( ( 1000 / counter ) * 60 ) ;
  9314                           
  9315                           ;incstack = 0
  9316                           ; Regs used in _speedCalc: [wreg+status,2+status,0+pclath+cstack]
  9317  0B21  3000               	movlw	0
  9318  0B22  0020               	movlb	0	; select bank0
  9319  0B23  00AD               	movwf	___lmul@multiplicand+3
  9320  0B24  3000               	movlw	0
  9321  0B25  00AC               	movwf	___lmul@multiplicand+2
  9322  0B26  3000               	movlw	0
  9323  0B27  00AB               	movwf	___lmul@multiplicand+1
  9324  0B28  303C               	movlw	60
  9325  0B29  00AA               	movwf	___lmul@multiplicand
  9326  0B2A  3000               	movlw	0
  9327  0B2B  00F7               	movwf	___aldiv@dividend+3
  9328  0B2C  3000               	movlw	0
  9329  0B2D  00F6               	movwf	___aldiv@dividend+2
  9330  0B2E  3003               	movlw	3
  9331  0B2F  00F5               	movwf	___aldiv@dividend+1
  9332  0B30  30E8               	movlw	232
  9333  0B31  00F4               	movwf	___aldiv@dividend
  9334  0B32  085E               	movf	_counter+3,w	;volatile
  9335  0B33  00F3               	movwf	___aldiv@divisor+3
  9336  0B34  085D               	movf	_counter+2,w	;volatile
  9337  0B35  00F2               	movwf	___aldiv@divisor+2
  9338  0B36  085C               	movf	_counter+1,w	;volatile
  9339  0B37  00F1               	movwf	___aldiv@divisor+1
  9340  0B38  085B               	movf	_counter,w	;volatile
  9341  0B39  00F0               	movwf	___aldiv@divisor
  9342  0B3A  318A  2209  318B   	fcall	___aldiv
  9343  0B3D  0873               	movf	?___aldiv+3,w
  9344  0B3E  0020               	movlb	0	; select bank0
  9345  0B3F  00A9               	movwf	___lmul@multiplier+3
  9346  0B40  0872               	movf	?___aldiv+2,w
  9347  0B41  00A8               	movwf	___lmul@multiplier+2
  9348  0B42  0871               	movf	?___aldiv+1,w
  9349  0B43  00A7               	movwf	___lmul@multiplier+1
  9350  0B44  0870               	movf	?___aldiv,w
  9351  0B45  00A6               	movwf	___lmul@multiplier
  9352  0B46  3197  27D0  318B   	fcall	___lmul
  9353  0B49  0020               	movlb	0	; select bank0
  9354  0B4A  0829               	movf	?___lmul+3,w
  9355  0B4B  00B1               	movwf	___xxtofl@val+3
  9356  0B4C  0828               	movf	?___lmul+2,w
  9357  0B4D  00B0               	movwf	___xxtofl@val+2
  9358  0B4E  0827               	movf	?___lmul+1,w
  9359  0B4F  00AF               	movwf	___xxtofl@val+1
  9360  0B50  0826               	movf	?___lmul,w
  9361  0B51  00AE               	movwf	___xxtofl@val
  9362  0B52  3001               	movlw	1
  9363  0B53  318A  228B  318B   	fcall	___xxtofl
  9364  0B56  0020               	movlb	0	; select bank0
  9365  0B57  0831               	movf	?___xxtofl+3,w
  9366  0B58  0022               	movlb	2	; select bank2
  9367  0B59  00DB               	movwf	(_rpm+3)^(0+256)	;volatile
  9368  0B5A  0020               	movlb	0	; select bank0
  9369  0B5B  0830               	movf	?___xxtofl+2,w
  9370  0B5C  0022               	movlb	2	; select bank2
  9371  0B5D  00DA               	movwf	(_rpm+2)^(0+256)	;volatile
  9372  0B5E  0020               	movlb	0	; select bank0
  9373  0B5F  082F               	movf	?___xxtofl+1,w
  9374  0B60  0022               	movlb	2	; select bank2
  9375  0B61  00D9               	movwf	(_rpm+1)^(0+256)	;volatile
  9376  0B62  0020               	movlb	0	; select bank0
  9377  0B63  082E               	movf	?___xxtofl,w
  9378  0B64  0022               	movlb	2	; select bank2
  9379  0B65  00D8               	movwf	_rpm^(0+256)	;volatile
  9380                           
  9381                           ;main.c: 118:     speed = 2 * rpm * (0.06) ;
  9382  0B66  3040               	movlw	64
  9383  0B67  0020               	movlb	0	; select bank0
  9384  0B68  00A3               	movwf	___flmul@b+3
  9385  0B69  3000               	movlw	0
  9386  0B6A  00A2               	movwf	___flmul@b+2
  9387  0B6B  3000               	movlw	0
  9388  0B6C  00A1               	movwf	___flmul@b+1
  9389  0B6D  3000               	movlw	0
  9390  0B6E  00A0               	movwf	___flmul@b
  9391  0B6F  0022               	movlb	2	; select bank2
  9392  0B70  085B               	movf	(_rpm+3)^(0+256),w	;volatile
  9393  0B71  0020               	movlb	0	; select bank0
  9394  0B72  00A7               	movwf	___flmul@a+3
  9395  0B73  0022               	movlb	2	; select bank2
  9396  0B74  085A               	movf	(_rpm+2)^(0+256),w	;volatile
  9397  0B75  0020               	movlb	0	; select bank0
  9398  0B76  00A6               	movwf	___flmul@a+2
  9399  0B77  0022               	movlb	2	; select bank2
  9400  0B78  0859               	movf	(_rpm+1)^(0+256),w	;volatile
  9401  0B79  0020               	movlb	0	; select bank0
  9402  0B7A  00A5               	movwf	___flmul@a+1
  9403  0B7B  0022               	movlb	2	; select bank2
  9404  0B7C  0858               	movf	_rpm^(0+256),w	;volatile
  9405  0B7D  0020               	movlb	0	; select bank0
  9406  0B7E  00A4               	movwf	___flmul@a
  9407  0B7F  3180  203D  318B   	fcall	___flmul
  9408  0B82  0020               	movlb	0	; select bank0
  9409  0B83  0823               	movf	?___flmul+3,w
  9410  0B84  00BF               	movwf	_speedCalc$1227+3
  9411  0B85  0822               	movf	?___flmul+2,w
  9412  0B86  00BE               	movwf	_speedCalc$1227+2
  9413  0B87  0821               	movf	?___flmul+1,w
  9414  0B88  00BD               	movwf	_speedCalc$1227+1
  9415  0B89  0820               	movf	?___flmul,w
  9416  0B8A  00BC               	movwf	_speedCalc$1227
  9417                           
  9418                           ;main.c: 118:     speed = 2 * rpm * (0.06) ;
  9419  0B8B  303D               	movlw	61
  9420  0B8C  00A3               	movwf	___flmul@b+3
  9421  0B8D  3075               	movlw	117
  9422  0B8E  00A2               	movwf	___flmul@b+2
  9423  0B8F  30C2               	movlw	194
  9424  0B90  00A1               	movwf	___flmul@b+1
  9425  0B91  308F               	movlw	143
  9426  0B92  00A0               	movwf	___flmul@b
  9427  0B93  083F               	movf	_speedCalc$1227+3,w
  9428  0B94  00A7               	movwf	___flmul@a+3
  9429  0B95  083E               	movf	_speedCalc$1227+2,w
  9430  0B96  00A6               	movwf	___flmul@a+2
  9431  0B97  083D               	movf	_speedCalc$1227+1,w
  9432  0B98  00A5               	movwf	___flmul@a+1
  9433  0B99  083C               	movf	_speedCalc$1227,w
  9434  0B9A  00A4               	movwf	___flmul@a
  9435  0B9B  3180  203D  318B   	fcall	___flmul
  9436  0B9E  0020               	movlb	0	; select bank0
  9437  0B9F  0823               	movf	?___flmul+3,w
  9438  0BA0  00C7               	movwf	_speed+3	;volatile
  9439  0BA1  0822               	movf	?___flmul+2,w
  9440  0BA2  00C6               	movwf	_speed+2	;volatile
  9441  0BA3  0821               	movf	?___flmul+1,w
  9442  0BA4  00C5               	movwf	_speed+1	;volatile
  9443  0BA5  0820               	movf	?___flmul,w
  9444  0BA6  00C4               	movwf	_speed	;volatile
  9445                           
  9446                           ;main.c: 121:     counter = 0 ;
  9447  0BA7  3000               	movlw	0
  9448  0BA8  00DE               	movwf	_counter+3	;volatile
  9449  0BA9  3000               	movlw	0
  9450  0BAA  00DD               	movwf	_counter+2	;volatile
  9451  0BAB  3000               	movlw	0
  9452  0BAC  00DC               	movwf	_counter+1	;volatile
  9453  0BAD  3000               	movlw	0
  9454  0BAE  00DB               	movwf	_counter	;volatile
  9455                           
  9456                           ;main.c: 122:     distance = distance + 2 ;
  9457  0BAF  3040               	movlw	64
  9458  0BB0  00F3               	movwf	___fladd@b+3
  9459  0BB1  3000               	movlw	0
  9460  0BB2  00F2               	movwf	___fladd@b+2
  9461  0BB3  3000               	movlw	0
  9462  0BB4  00F1               	movwf	___fladd@b+1
  9463  0BB5  3000               	movlw	0
  9464  0BB6  00F0               	movwf	___fladd@b
  9465  0BB7  0843               	movf	_distance+3,w	;volatile
  9466  0BB8  00F7               	movwf	___fladd@a+3
  9467  0BB9  0842               	movf	_distance+2,w	;volatile
  9468  0BBA  00F6               	movwf	___fladd@a+2
  9469  0BBB  0841               	movf	_distance+1,w	;volatile
  9470  0BBC  00F5               	movwf	___fladd@a+1
  9471  0BBD  0840               	movf	_distance,w	;volatile
  9472  0BBE  00F4               	movwf	___fladd@a
  9473  0BBF  3182  2269         	fcall	___fladd
  9474  0BC1  0873               	movf	?___fladd+3,w
  9475  0BC2  0020               	movlb	0	; select bank0
  9476  0BC3  00C3               	movwf	_distance+3	;volatile
  9477  0BC4  0872               	movf	?___fladd+2,w
  9478  0BC5  00C2               	movwf	_distance+2	;volatile
  9479  0BC6  0871               	movf	?___fladd+1,w
  9480  0BC7  00C1               	movwf	_distance+1	;volatile
  9481  0BC8  0870               	movf	?___fladd,w
  9482  0BC9  00C0               	movwf	_distance	;volatile
  9483  0BCA  0008               	return
  9484  0BCB                     __end_of_speedCalc:	
  9485                           
  9486                           	psect	text41
  9487  0A8B                     __ptext41:	
  9488 ;; *************** function ___xxtofl *****************
  9489 ;; Defined at:
  9490 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
  9491 ;; Parameters:    Size  Location     Type
  9492 ;;  sign            1    wreg     unsigned char 
  9493 ;;  val             4   14[BANK0 ] long 
  9494 ;; Auto vars:     Size  Location     Type
  9495 ;;  sign            1   22[BANK0 ] unsigned char 
  9496 ;;  arg             4   24[BANK0 ] unsigned long 
  9497 ;;  exp             1   23[BANK0 ] unsigned char 
  9498 ;; Return value:  Size  Location     Type
  9499 ;;                  4   14[BANK0 ] unsigned char 
  9500 ;; Registers used:
  9501 ;;		wreg, status,2, status,0
  9502 ;; Tracked objects:
  9503 ;;		On entry : 0/0
  9504 ;;		On exit  : 0/0
  9505 ;;		Unchanged: 0/0
  9506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9507 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9508 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9509 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9510 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9511 ;;Total ram usage:       14 bytes
  9512 ;; Hardware stack levels used:    1
  9513 ;; This function calls:
  9514 ;;		Nothing
  9515 ;; This function is called by:
  9516 ;;		_speedCalc
  9517 ;; This function uses a non-reentrant model
  9518 ;;
  9519                           
  9520                           
  9521                           ;psect for function ___xxtofl
  9522  0A8B                     ___xxtofl:	
  9523                           
  9524                           ;incstack = 0
  9525                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  9526                           ;___xxtofl@sign stored from wreg
  9527  0A8B  0020               	movlb	0	; select bank0
  9528  0A8C  00B6               	movwf	___xxtofl@sign
  9529  0A8D  0836               	movf	___xxtofl@sign,w
  9530  0A8E  1D03               	btfss	3,2
  9531  0A8F  1FB1               	btfss	___xxtofl@val+3,7
  9532  0A90  2AA1               	goto	i1l2921
  9533  0A91  092E               	comf	___xxtofl@val,w
  9534  0A92  00B8               	movwf	___xxtofl@arg
  9535  0A93  092F               	comf	___xxtofl@val+1,w
  9536  0A94  00B9               	movwf	___xxtofl@arg+1
  9537  0A95  0930               	comf	___xxtofl@val+2,w
  9538  0A96  00BA               	movwf	___xxtofl@arg+2
  9539  0A97  0931               	comf	___xxtofl@val+3,w
  9540  0A98  00BB               	movwf	___xxtofl@arg+3
  9541  0A99  0AB8               	incf	___xxtofl@arg,f
  9542  0A9A  1903               	skipnz
  9543  0A9B  0AB9               	incf	___xxtofl@arg+1,f
  9544  0A9C  1903               	skipnz
  9545  0A9D  0ABA               	incf	___xxtofl@arg+2,f
  9546  0A9E  1903               	skipnz
  9547  0A9F  0ABB               	incf	___xxtofl@arg+3,f
  9548  0AA0  2AA9               	goto	i1l949
  9549  0AA1                     i1l2921:	
  9550  0AA1  0831               	movf	___xxtofl@val+3,w
  9551  0AA2  00BB               	movwf	___xxtofl@arg+3
  9552  0AA3  0830               	movf	___xxtofl@val+2,w
  9553  0AA4  00BA               	movwf	___xxtofl@arg+2
  9554  0AA5  082F               	movf	___xxtofl@val+1,w
  9555  0AA6  00B9               	movwf	___xxtofl@arg+1
  9556  0AA7  082E               	movf	___xxtofl@val,w
  9557  0AA8  00B8               	movwf	___xxtofl@arg
  9558  0AA9                     i1l949:	
  9559  0AA9  0831               	movf	___xxtofl@val+3,w
  9560  0AAA  0430               	iorwf	___xxtofl@val+2,w
  9561  0AAB  042F               	iorwf	___xxtofl@val+1,w
  9562  0AAC  042E               	iorwf	___xxtofl@val,w
  9563  0AAD  1D03               	skipz
  9564  0AAE  2AB8               	goto	i1l2927
  9565  0AAF  3000               	movlw	0
  9566  0AB0  00B1               	movwf	?___xxtofl+3
  9567  0AB1  3000               	movlw	0
  9568  0AB2  00B0               	movwf	?___xxtofl+2
  9569  0AB3  3000               	movlw	0
  9570  0AB4  00AF               	movwf	?___xxtofl+1
  9571  0AB5  3000               	movlw	0
  9572  0AB6  00AE               	movwf	?___xxtofl
  9573  0AB7  0008               	return
  9574  0AB8                     i1l2927:	
  9575  0AB8  3096               	movlw	150
  9576  0AB9  00B2               	movwf	??___xxtofl
  9577  0ABA  0832               	movf	??___xxtofl,w
  9578  0ABB  00B7               	movwf	___xxtofl@exp
  9579  0ABC                     i1l2931:	
  9580  0ABC  30FE               	movlw	254
  9581  0ABD  053B               	andwf	___xxtofl@arg+3,w
  9582  0ABE  1903               	btfsc	3,2
  9583  0ABF  2ADF               	goto	i1l955
  9584  0AC0  3001               	movlw	1
  9585  0AC1  00B2               	movwf	??___xxtofl
  9586  0AC2  0832               	movf	??___xxtofl,w
  9587  0AC3  07B7               	addwf	___xxtofl@exp,f
  9588  0AC4  3001               	movlw	1
  9589  0AC5                     u372_25:	
  9590  0AC5  36BB               	lsrf	___xxtofl@arg+3,f
  9591  0AC6  0CBA               	rrf	___xxtofl@arg+2,f
  9592  0AC7  0CB9               	rrf	___xxtofl@arg+1,f
  9593  0AC8  0CB8               	rrf	___xxtofl@arg,f
  9594  0AC9  0B89               	decfsz	9,f
  9595  0ACA  2AC5               	goto	u372_25
  9596  0ACB  2ABC               	goto	i1l2931
  9597  0ACC                     i1l2933:	
  9598  0ACC  3001               	movlw	1
  9599  0ACD  00B2               	movwf	??___xxtofl
  9600  0ACE  0832               	movf	??___xxtofl,w
  9601  0ACF  07B7               	addwf	___xxtofl@exp,f
  9602  0AD0  3001               	movlw	1
  9603  0AD1  07B8               	addwf	___xxtofl@arg,f
  9604  0AD2  3000               	movlw	0
  9605  0AD3  3DB9               	addwfc	___xxtofl@arg+1,f
  9606  0AD4  3000               	movlw	0
  9607  0AD5  3DBA               	addwfc	___xxtofl@arg+2,f
  9608  0AD6  3000               	movlw	0
  9609  0AD7  3DBB               	addwfc	___xxtofl@arg+3,f
  9610  0AD8  3001               	movlw	1
  9611  0AD9                     u374_25:	
  9612  0AD9  36BB               	lsrf	___xxtofl@arg+3,f
  9613  0ADA  0CBA               	rrf	___xxtofl@arg+2,f
  9614  0ADB  0CB9               	rrf	___xxtofl@arg+1,f
  9615  0ADC  0CB8               	rrf	___xxtofl@arg,f
  9616  0ADD  0B89               	decfsz	9,f
  9617  0ADE  2AD9               	goto	u374_25
  9618  0ADF                     i1l955:	
  9619  0ADF  30FF               	movlw	255
  9620  0AE0  053B               	andwf	___xxtofl@arg+3,w
  9621  0AE1  1903               	btfsc	3,2
  9622  0AE2  2AF1               	goto	i1l2941
  9623  0AE3  2ACC               	goto	i1l2933
  9624  0AE4                     i1l2943:	
  9625  0AE4  3002               	movlw	2
  9626  0AE5  0237               	subwf	___xxtofl@exp,w
  9627  0AE6  1C03               	btfss	3,0
  9628  0AE7  2AF3               	goto	i1l962
  9629  0AE8  3001               	movlw	1
  9630  0AE9  02B7               	subwf	___xxtofl@exp,f
  9631  0AEA  3001               	movlw	1
  9632  0AEB                     u376_25:	
  9633  0AEB  35B8               	lslf	___xxtofl@arg,f
  9634  0AEC  0DB9               	rlf	___xxtofl@arg+1,f
  9635  0AED  0DBA               	rlf	___xxtofl@arg+2,f
  9636  0AEE  0DBB               	rlf	___xxtofl@arg+3,f
  9637  0AEF  0B89               	decfsz	9,f
  9638  0AF0  2AEB               	goto	u376_25
  9639  0AF1                     i1l2941:	
  9640  0AF1  1FBA               	btfss	___xxtofl@arg+2,7
  9641  0AF2  2AE4               	goto	i1l2943
  9642  0AF3                     i1l962:	
  9643  0AF3  1837               	btfsc	___xxtofl@exp,0
  9644  0AF4  2AFD               	goto	i1l963
  9645  0AF5  30FF               	movlw	255
  9646  0AF6  05B8               	andwf	___xxtofl@arg,f
  9647  0AF7  30FF               	movlw	255
  9648  0AF8  05B9               	andwf	___xxtofl@arg+1,f
  9649  0AF9  307F               	movlw	127
  9650  0AFA  05BA               	andwf	___xxtofl@arg+2,f
  9651  0AFB  30FF               	movlw	255
  9652  0AFC  05BB               	andwf	___xxtofl@arg+3,f
  9653  0AFD                     i1l963:	
  9654  0AFD  1003               	clrc
  9655  0AFE  0CB7               	rrf	___xxtofl@exp,f
  9656  0AFF  0837               	movf	___xxtofl@exp,w
  9657  0B00  00B2               	movwf	??___xxtofl
  9658  0B01  01B3               	clrf	??___xxtofl+1
  9659  0B02  01B4               	clrf	??___xxtofl+2
  9660  0B03  01B5               	clrf	??___xxtofl+3
  9661  0B04  3018               	movlw	24
  9662  0B05                     u380_25:	
  9663  0B05  35B2               	lslf	??___xxtofl,f
  9664  0B06  0DB3               	rlf	??___xxtofl+1,f
  9665  0B07  0DB4               	rlf	??___xxtofl+2,f
  9666  0B08  0DB5               	rlf	??___xxtofl+3,f
  9667  0B09  0B89               	decfsz	9,f
  9668  0B0A  2B05               	goto	u380_25
  9669  0B0B  0832               	movf	??___xxtofl,w
  9670  0B0C  04B8               	iorwf	___xxtofl@arg,f
  9671  0B0D  0833               	movf	??___xxtofl+1,w
  9672  0B0E  04B9               	iorwf	___xxtofl@arg+1,f
  9673  0B0F  0834               	movf	??___xxtofl+2,w
  9674  0B10  04BA               	iorwf	___xxtofl@arg+2,f
  9675  0B11  0835               	movf	??___xxtofl+3,w
  9676  0B12  04BB               	iorwf	___xxtofl@arg+3,f
  9677  0B13  0836               	movf	___xxtofl@sign,w
  9678  0B14  1D03               	btfss	3,2
  9679  0B15  1FB1               	btfss	___xxtofl@val+3,7
  9680  0B16  2B18               	goto	i1l2955
  9681  0B17  17BB               	bsf	___xxtofl@arg+3,7
  9682  0B18                     i1l2955:	
  9683  0B18  083B               	movf	___xxtofl@arg+3,w
  9684  0B19  00B1               	movwf	?___xxtofl+3
  9685  0B1A  083A               	movf	___xxtofl@arg+2,w
  9686  0B1B  00B0               	movwf	?___xxtofl+2
  9687  0B1C  0839               	movf	___xxtofl@arg+1,w
  9688  0B1D  00AF               	movwf	?___xxtofl+1
  9689  0B1E  0838               	movf	___xxtofl@arg,w
  9690  0B1F  00AE               	movwf	?___xxtofl
  9691  0B20  0008               	return
  9692  0B21                     __end_of___xxtofl:	
  9693                           
  9694                           	psect	text42
  9695  17D0                     __ptext42:	
  9696 ;; *************** function ___lmul *****************
  9697 ;; Defined at:
  9698 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul32.c"
  9699 ;; Parameters:    Size  Location     Type
  9700 ;;  multiplier      4    6[BANK0 ] unsigned long 
  9701 ;;  multiplicand    4   10[BANK0 ] unsigned long 
  9702 ;; Auto vars:     Size  Location     Type
  9703 ;;  product         4    9[COMMON] unsigned long 
  9704 ;; Return value:  Size  Location     Type
  9705 ;;                  4    6[BANK0 ] unsigned long 
  9706 ;; Registers used:
  9707 ;;		wreg, status,2, status,0
  9708 ;; Tracked objects:
  9709 ;;		On entry : 0/0
  9710 ;;		On exit  : 0/0
  9711 ;;		Unchanged: 0/0
  9712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9713 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9714 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9716 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9717 ;;Total ram usage:       12 bytes
  9718 ;; Hardware stack levels used:    1
  9719 ;; This function calls:
  9720 ;;		Nothing
  9721 ;; This function is called by:
  9722 ;;		_speedCalc
  9723 ;; This function uses a non-reentrant model
  9724 ;;
  9725                           
  9726                           
  9727                           ;psect for function ___lmul
  9728  17D0                     ___lmul:	
  9729                           
  9730                           ;incstack = 0
  9731                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  9732  17D0  3000               	movlw	0
  9733  17D1  00FC               	movwf	___lmul@product+3
  9734  17D2  3000               	movlw	0
  9735  17D3  00FB               	movwf	___lmul@product+2
  9736  17D4  3000               	movlw	0
  9737  17D5  00FA               	movwf	___lmul@product+1
  9738  17D6  3000               	movlw	0
  9739  17D7  00F9               	movwf	___lmul@product
  9740  17D8                     i1l2529:	
  9741  17D8  0020               	movlb	0	; select bank0
  9742  17D9  1C26               	btfss	___lmul@multiplier,0
  9743  17DA  2FE3               	goto	i1l2533
  9744  17DB  082A               	movf	___lmul@multiplicand,w
  9745  17DC  07F9               	addwf	___lmul@product,f
  9746  17DD  082B               	movf	___lmul@multiplicand+1,w
  9747  17DE  3DFA               	addwfc	___lmul@product+1,f
  9748  17DF  082C               	movf	___lmul@multiplicand+2,w
  9749  17E0  3DFB               	addwfc	___lmul@product+2,f
  9750  17E1  082D               	movf	___lmul@multiplicand+3,w
  9751  17E2  3DFC               	addwfc	___lmul@product+3,f
  9752  17E3                     i1l2533:	
  9753  17E3  3001               	movlw	1
  9754  17E4                     u287_25:	
  9755  17E4  35AA               	lslf	___lmul@multiplicand,f
  9756  17E5  0DAB               	rlf	___lmul@multiplicand+1,f
  9757  17E6  0DAC               	rlf	___lmul@multiplicand+2,f
  9758  17E7  0DAD               	rlf	___lmul@multiplicand+3,f
  9759  17E8  0B89               	decfsz	9,f
  9760  17E9  2FE4               	goto	u287_25
  9761  17EA  3001               	movlw	1
  9762  17EB                     u288_25:	
  9763  17EB  36A9               	lsrf	___lmul@multiplier+3,f
  9764  17EC  0CA8               	rrf	___lmul@multiplier+2,f
  9765  17ED  0CA7               	rrf	___lmul@multiplier+1,f
  9766  17EE  0CA6               	rrf	___lmul@multiplier,f
  9767  17EF  0B89               	decfsz	9,f
  9768  17F0  2FEB               	goto	u288_25
  9769  17F1  0829               	movf	___lmul@multiplier+3,w
  9770  17F2  0428               	iorwf	___lmul@multiplier+2,w
  9771  17F3  0427               	iorwf	___lmul@multiplier+1,w
  9772  17F4  0426               	iorwf	___lmul@multiplier,w
  9773  17F5  1D03               	skipz
  9774  17F6  2FD8               	goto	i1l2529
  9775  17F7  087C               	movf	___lmul@product+3,w
  9776  17F8  00A9               	movwf	?___lmul+3
  9777  17F9  087B               	movf	___lmul@product+2,w
  9778  17FA  00A8               	movwf	?___lmul+2
  9779  17FB  087A               	movf	___lmul@product+1,w
  9780  17FC  00A7               	movwf	?___lmul+1
  9781  17FD  0879               	movf	___lmul@product,w
  9782  17FE  00A6               	movwf	?___lmul
  9783  17FF  0008               	return
  9784  1800                     __end_of___lmul:	
  9785                           
  9786                           	psect	text43
  9787  003D                     __ptext43:	
  9788 ;; *************** function ___flmul *****************
  9789 ;; Defined at:
  9790 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
  9791 ;; Parameters:    Size  Location     Type
  9792 ;;  b               4    0[BANK0 ] unsigned long 
  9793 ;;  a               4    4[BANK0 ] unsigned long 
  9794 ;; Auto vars:     Size  Location     Type
  9795 ;;  prod            4   15[BANK0 ] struct .
  9796 ;;  grs             4    9[BANK0 ] unsigned long 
  9797 ;;  temp            2   19[BANK0 ] struct .
  9798 ;;  bexp            1   14[BANK0 ] unsigned char 
  9799 ;;  aexp            1   13[BANK0 ] unsigned char 
  9800 ;;  sign            1    8[BANK0 ] unsigned char 
  9801 ;; Return value:  Size  Location     Type
  9802 ;;                  4    0[BANK0 ] unsigned char 
  9803 ;; Registers used:
  9804 ;;		wreg, status,2, status,0, pclath, cstack
  9805 ;; Tracked objects:
  9806 ;;		On entry : 0/0
  9807 ;;		On exit  : 0/0
  9808 ;;		Unchanged: 0/0
  9809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9810 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9811 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9812 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9813 ;;      Totals:         5      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9814 ;;Total ram usage:       26 bytes
  9815 ;; Hardware stack levels used:    1
  9816 ;; Hardware stack levels required when called:    1
  9817 ;; This function calls:
  9818 ;;		__Umul8_16
  9819 ;; This function is called by:
  9820 ;;		_speedCalc
  9821 ;; This function uses a non-reentrant model
  9822 ;;
  9823                           
  9824                           
  9825                           ;psect for function ___flmul
  9826  003D                     ___flmul:	
  9827                           
  9828                           ;incstack = 0
  9829                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  9830  003D  0020               	movlb	0	; select bank0
  9831  003E  0823               	movf	___flmul@b+3,w
  9832  003F  3980               	andlw	128
  9833  0040  00F9               	movwf	??___flmul
  9834  0041  0879               	movf	??___flmul,w
  9835  0042  00A8               	movwf	___flmul@sign
  9836  0043  3523               	lslf	___flmul@b+3,w
  9837  0044  00F9               	movwf	??___flmul
  9838  0045  0879               	movf	??___flmul,w
  9839  0046  00AE               	movwf	___flmul@bexp
  9840  0047  1BA2               	btfsc	___flmul@b+2,7
  9841  0048  142E               	bsf	___flmul@bexp,0
  9842  0049  082E               	movf	___flmul@bexp,w
  9843  004A  1903               	btfsc	3,2
  9844  004B  2859               	goto	i1l2791
  9845  004C  0A2E               	incf	___flmul@bexp,w
  9846  004D  1D03               	btfss	3,2
  9847  004E  2857               	goto	i1l2789
  9848  004F  3000               	movlw	0
  9849  0050  00A3               	movwf	___flmul@b+3
  9850  0051  3000               	movlw	0
  9851  0052  00A2               	movwf	___flmul@b+2
  9852  0053  3000               	movlw	0
  9853  0054  00A1               	movwf	___flmul@b+1
  9854  0055  3000               	movlw	0
  9855  0056  00A0               	movwf	___flmul@b
  9856  0057                     i1l2789:	
  9857  0057  17A2               	bsf	___flmul@b+2,7
  9858  0058  2861               	goto	i1l2793
  9859  0059                     i1l2791:	
  9860  0059  3000               	movlw	0
  9861  005A  00A3               	movwf	___flmul@b+3
  9862  005B  3000               	movlw	0
  9863  005C  00A2               	movwf	___flmul@b+2
  9864  005D  3000               	movlw	0
  9865  005E  00A1               	movwf	___flmul@b+1
  9866  005F  3000               	movlw	0
  9867  0060  00A0               	movwf	___flmul@b
  9868  0061                     i1l2793:	
  9869  0061  0827               	movf	___flmul@a+3,w
  9870  0062  3980               	andlw	128
  9871  0063  00F9               	movwf	??___flmul
  9872  0064  0879               	movf	??___flmul,w
  9873  0065  06A8               	xorwf	___flmul@sign,f
  9874  0066  3527               	lslf	___flmul@a+3,w
  9875  0067  00F9               	movwf	??___flmul
  9876  0068  0879               	movf	??___flmul,w
  9877  0069  00AD               	movwf	___flmul@aexp
  9878  006A  1BA6               	btfsc	___flmul@a+2,7
  9879  006B  142D               	bsf	___flmul@aexp,0
  9880  006C  082D               	movf	___flmul@aexp,w
  9881  006D  1903               	btfsc	3,2
  9882  006E  287C               	goto	i1l2809
  9883  006F  0A2D               	incf	___flmul@aexp,w
  9884  0070  1D03               	btfss	3,2
  9885  0071  287A               	goto	i1l2807
  9886  0072  3000               	movlw	0
  9887  0073  00A7               	movwf	___flmul@a+3
  9888  0074  3000               	movlw	0
  9889  0075  00A6               	movwf	___flmul@a+2
  9890  0076  3000               	movlw	0
  9891  0077  00A5               	movwf	___flmul@a+1
  9892  0078  3000               	movlw	0
  9893  0079  00A4               	movwf	___flmul@a
  9894  007A                     i1l2807:	
  9895  007A  17A6               	bsf	___flmul@a+2,7
  9896  007B  2884               	goto	i1l2811
  9897  007C                     i1l2809:	
  9898  007C  3000               	movlw	0
  9899  007D  00A7               	movwf	___flmul@a+3
  9900  007E  3000               	movlw	0
  9901  007F  00A6               	movwf	___flmul@a+2
  9902  0080  3000               	movlw	0
  9903  0081  00A5               	movwf	___flmul@a+1
  9904  0082  3000               	movlw	0
  9905  0083  00A4               	movwf	___flmul@a
  9906  0084                     i1l2811:	
  9907  0084  082D               	movf	___flmul@aexp,w
  9908  0085  1D03               	btfss	3,2
  9909  0086  082E               	movf	___flmul@bexp,w
  9910  0087  1D03               	btfss	3,2
  9911  0088  2892               	goto	i1l2819
  9912  0089  3000               	movlw	0
  9913  008A  00A3               	movwf	?___flmul+3
  9914  008B  3000               	movlw	0
  9915  008C  00A2               	movwf	?___flmul+2
  9916  008D  3000               	movlw	0
  9917  008E  00A1               	movwf	?___flmul+1
  9918  008F  3000               	movlw	0
  9919  0090  00A0               	movwf	?___flmul
  9920  0091  0008               	return
  9921  0092                     i1l2819:	
  9922  0092  0820               	movf	___flmul@b,w
  9923  0093  00F9               	movwf	??___flmul
  9924  0094  0879               	movf	??___flmul,w
  9925  0095  00F0               	movwf	__Umul8_16@multiplicand
  9926  0096  0826               	movf	___flmul@a+2,w
  9927  0097  3197  2743  3180   	fcall	__Umul8_16
  9928  009A  0871               	movf	?__Umul8_16+1,w
  9929  009B  0020               	movlb	0	; select bank0
  9930  009C  00B4               	movwf	___flmul@temp+1
  9931  009D  0870               	movf	?__Umul8_16,w
  9932  009E  00B3               	movwf	___flmul@temp
  9933  009F  0833               	movf	___flmul@temp,w
  9934  00A0  00F9               	movwf	??___flmul
  9935  00A1  01FA               	clrf	??___flmul+1
  9936  00A2  01FB               	clrf	??___flmul+2
  9937  00A3  01FC               	clrf	??___flmul+3
  9938  00A4  087C               	movf	??___flmul+3,w
  9939  00A5  00AC               	movwf	___flmul@grs+3
  9940  00A6  087B               	movf	??___flmul+2,w
  9941  00A7  00AB               	movwf	___flmul@grs+2
  9942  00A8  087A               	movf	??___flmul+1,w
  9943  00A9  00AA               	movwf	___flmul@grs+1
  9944  00AA  0879               	movf	??___flmul,w
  9945  00AB  00A9               	movwf	___flmul@grs
  9946  00AC  0834               	movf	___flmul@temp+1,w
  9947  00AD  00F9               	movwf	??___flmul
  9948  00AE  01FA               	clrf	??___flmul+1
  9949  00AF  01FB               	clrf	??___flmul+2
  9950  00B0  01FC               	clrf	??___flmul+3
  9951  00B1  087C               	movf	??___flmul+3,w
  9952  00B2  00B2               	movwf	___flmul@prod+3
  9953  00B3  087B               	movf	??___flmul+2,w
  9954  00B4  00B1               	movwf	___flmul@prod+2
  9955  00B5  087A               	movf	??___flmul+1,w
  9956  00B6  00B0               	movwf	___flmul@prod+1
  9957  00B7  0879               	movf	??___flmul,w
  9958  00B8  00AF               	movwf	___flmul@prod
  9959  00B9  0821               	movf	___flmul@b+1,w
  9960  00BA  00F9               	movwf	??___flmul
  9961  00BB  0879               	movf	??___flmul,w
  9962  00BC  00F0               	movwf	__Umul8_16@multiplicand
  9963  00BD  0825               	movf	___flmul@a+1,w
  9964  00BE  3197  2743  3180   	fcall	__Umul8_16
  9965  00C1  0871               	movf	?__Umul8_16+1,w
  9966  00C2  0020               	movlb	0	; select bank0
  9967  00C3  00B4               	movwf	___flmul@temp+1
  9968  00C4  0870               	movf	?__Umul8_16,w
  9969  00C5  00B3               	movwf	___flmul@temp
  9970  00C6  0833               	movf	___flmul@temp,w
  9971  00C7  00F9               	movwf	??___flmul
  9972  00C8  01FA               	clrf	??___flmul+1
  9973  00C9  01FB               	clrf	??___flmul+2
  9974  00CA  01FC               	clrf	??___flmul+3
  9975  00CB  0879               	movf	??___flmul,w
  9976  00CC  07A9               	addwf	___flmul@grs,f
  9977  00CD  087A               	movf	??___flmul+1,w
  9978  00CE  3DAA               	addwfc	___flmul@grs+1,f
  9979  00CF  087B               	movf	??___flmul+2,w
  9980  00D0  3DAB               	addwfc	___flmul@grs+2,f
  9981  00D1  087C               	movf	??___flmul+3,w
  9982  00D2  3DAC               	addwfc	___flmul@grs+3,f
  9983  00D3  0834               	movf	___flmul@temp+1,w
  9984  00D4  00F9               	movwf	??___flmul
  9985  00D5  01FA               	clrf	??___flmul+1
  9986  00D6  01FB               	clrf	??___flmul+2
  9987  00D7  01FC               	clrf	??___flmul+3
  9988  00D8  0879               	movf	??___flmul,w
  9989  00D9  07AF               	addwf	___flmul@prod,f
  9990  00DA  087A               	movf	??___flmul+1,w
  9991  00DB  3DB0               	addwfc	___flmul@prod+1,f
  9992  00DC  087B               	movf	??___flmul+2,w
  9993  00DD  3DB1               	addwfc	___flmul@prod+2,f
  9994  00DE  087C               	movf	??___flmul+3,w
  9995  00DF  3DB2               	addwfc	___flmul@prod+3,f
  9996  00E0  0822               	movf	___flmul@b+2,w
  9997  00E1  00F9               	movwf	??___flmul
  9998  00E2  0879               	movf	??___flmul,w
  9999  00E3  00F0               	movwf	__Umul8_16@multiplicand
 10000  00E4  0824               	movf	___flmul@a,w
 10001  00E5  3197  2743  3180   	fcall	__Umul8_16
 10002  00E8  0871               	movf	?__Umul8_16+1,w
 10003  00E9  0020               	movlb	0	; select bank0
 10004  00EA  00B4               	movwf	___flmul@temp+1
 10005  00EB  0870               	movf	?__Umul8_16,w
 10006  00EC  00B3               	movwf	___flmul@temp
 10007  00ED  0833               	movf	___flmul@temp,w
 10008  00EE  00F9               	movwf	??___flmul
 10009  00EF  01FA               	clrf	??___flmul+1
 10010  00F0  01FB               	clrf	??___flmul+2
 10011  00F1  01FC               	clrf	??___flmul+3
 10012  00F2  0879               	movf	??___flmul,w
 10013  00F3  07A9               	addwf	___flmul@grs,f
 10014  00F4  087A               	movf	??___flmul+1,w
 10015  00F5  3DAA               	addwfc	___flmul@grs+1,f
 10016  00F6  087B               	movf	??___flmul+2,w
 10017  00F7  3DAB               	addwfc	___flmul@grs+2,f
 10018  00F8  087C               	movf	??___flmul+3,w
 10019  00F9  3DAC               	addwfc	___flmul@grs+3,f
 10020  00FA  0834               	movf	___flmul@temp+1,w
 10021  00FB  00F9               	movwf	??___flmul
 10022  00FC  01FA               	clrf	??___flmul+1
 10023  00FD  01FB               	clrf	??___flmul+2
 10024  00FE  01FC               	clrf	??___flmul+3
 10025  00FF  0879               	movf	??___flmul,w
 10026  0100  07AF               	addwf	___flmul@prod,f
 10027  0101  087A               	movf	??___flmul+1,w
 10028  0102  3DB0               	addwfc	___flmul@prod+1,f
 10029  0103  087B               	movf	??___flmul+2,w
 10030  0104  3DB1               	addwfc	___flmul@prod+2,f
 10031  0105  087C               	movf	??___flmul+3,w
 10032  0106  3DB2               	addwfc	___flmul@prod+3,f
 10033  0107  3008               	movlw	8
 10034  0108                     u351_25:	
 10035  0108  35A9               	lslf	___flmul@grs,f
 10036  0109  0DAA               	rlf	___flmul@grs+1,f
 10037  010A  0DAB               	rlf	___flmul@grs+2,f
 10038  010B  0DAC               	rlf	___flmul@grs+3,f
 10039  010C  0B89               	decfsz	9,f
 10040  010D  2908               	goto	u351_25
 10041  010E  0821               	movf	___flmul@b+1,w
 10042  010F  00F9               	movwf	??___flmul
 10043  0110  0879               	movf	??___flmul,w
 10044  0111  00F0               	movwf	__Umul8_16@multiplicand
 10045  0112  0824               	movf	___flmul@a,w
 10046  0113  3197  2743  3180   	fcall	__Umul8_16
 10047  0116  0871               	movf	?__Umul8_16+1,w
 10048  0117  0020               	movlb	0	; select bank0
 10049  0118  00B4               	movwf	___flmul@temp+1
 10050  0119  0870               	movf	?__Umul8_16,w
 10051  011A  00B3               	movwf	___flmul@temp
 10052  011B  0833               	movf	___flmul@temp,w
 10053  011C  07A9               	addwf	___flmul@grs,f
 10054  011D  0834               	movf	___flmul@temp+1,w
 10055  011E  3DAA               	addwfc	___flmul@grs+1,f
 10056  011F  3000               	movlw	0
 10057  0120  3DAB               	addwfc	___flmul@grs+2,f
 10058  0121  3DAC               	addwfc	___flmul@grs+3,f
 10059  0122  0820               	movf	___flmul@b,w
 10060  0123  00F9               	movwf	??___flmul
 10061  0124  0879               	movf	??___flmul,w
 10062  0125  00F0               	movwf	__Umul8_16@multiplicand
 10063  0126  0825               	movf	___flmul@a+1,w
 10064  0127  3197  2743  3180   	fcall	__Umul8_16
 10065  012A  0871               	movf	?__Umul8_16+1,w
 10066  012B  0020               	movlb	0	; select bank0
 10067  012C  00B4               	movwf	___flmul@temp+1
 10068  012D  0870               	movf	?__Umul8_16,w
 10069  012E  00B3               	movwf	___flmul@temp
 10070  012F  0833               	movf	___flmul@temp,w
 10071  0130  07A9               	addwf	___flmul@grs,f
 10072  0131  0834               	movf	___flmul@temp+1,w
 10073  0132  3DAA               	addwfc	___flmul@grs+1,f
 10074  0133  3000               	movlw	0
 10075  0134  3DAB               	addwfc	___flmul@grs+2,f
 10076  0135  3DAC               	addwfc	___flmul@grs+3,f
 10077  0136  3008               	movlw	8
 10078  0137                     u352_25:	
 10079  0137  35A9               	lslf	___flmul@grs,f
 10080  0138  0DAA               	rlf	___flmul@grs+1,f
 10081  0139  0DAB               	rlf	___flmul@grs+2,f
 10082  013A  0DAC               	rlf	___flmul@grs+3,f
 10083  013B  0B89               	decfsz	9,f
 10084  013C  2937               	goto	u352_25
 10085  013D  0820               	movf	___flmul@b,w
 10086  013E  00F9               	movwf	??___flmul
 10087  013F  0879               	movf	??___flmul,w
 10088  0140  00F0               	movwf	__Umul8_16@multiplicand
 10089  0141  0824               	movf	___flmul@a,w
 10090  0142  3197  2743  3180   	fcall	__Umul8_16
 10091  0145  0871               	movf	?__Umul8_16+1,w
 10092  0146  0020               	movlb	0	; select bank0
 10093  0147  00B4               	movwf	___flmul@temp+1
 10094  0148  0870               	movf	?__Umul8_16,w
 10095  0149  00B3               	movwf	___flmul@temp
 10096  014A  0833               	movf	___flmul@temp,w
 10097  014B  07A9               	addwf	___flmul@grs,f
 10098  014C  0834               	movf	___flmul@temp+1,w
 10099  014D  3DAA               	addwfc	___flmul@grs+1,f
 10100  014E  3000               	movlw	0
 10101  014F  3DAB               	addwfc	___flmul@grs+2,f
 10102  0150  3DAC               	addwfc	___flmul@grs+3,f
 10103  0151  0821               	movf	___flmul@b+1,w
 10104  0152  00F9               	movwf	??___flmul
 10105  0153  0879               	movf	??___flmul,w
 10106  0154  00F0               	movwf	__Umul8_16@multiplicand
 10107  0155  0826               	movf	___flmul@a+2,w
 10108  0156  3197  2743  3180   	fcall	__Umul8_16
 10109  0159  0871               	movf	?__Umul8_16+1,w
 10110  015A  0020               	movlb	0	; select bank0
 10111  015B  00B4               	movwf	___flmul@temp+1
 10112  015C  0870               	movf	?__Umul8_16,w
 10113  015D  00B3               	movwf	___flmul@temp
 10114  015E  0833               	movf	___flmul@temp,w
 10115  015F  07AF               	addwf	___flmul@prod,f
 10116  0160  0834               	movf	___flmul@temp+1,w
 10117  0161  3DB0               	addwfc	___flmul@prod+1,f
 10118  0162  3000               	movlw	0
 10119  0163  3DB1               	addwfc	___flmul@prod+2,f
 10120  0164  3DB2               	addwfc	___flmul@prod+3,f
 10121  0165  0822               	movf	___flmul@b+2,w
 10122  0166  00F9               	movwf	??___flmul
 10123  0167  0879               	movf	??___flmul,w
 10124  0168  00F0               	movwf	__Umul8_16@multiplicand
 10125  0169  0825               	movf	___flmul@a+1,w
 10126  016A  3197  2743  3180   	fcall	__Umul8_16
 10127  016D  0871               	movf	?__Umul8_16+1,w
 10128  016E  0020               	movlb	0	; select bank0
 10129  016F  00B4               	movwf	___flmul@temp+1
 10130  0170  0870               	movf	?__Umul8_16,w
 10131  0171  00B3               	movwf	___flmul@temp
 10132  0172  0833               	movf	___flmul@temp,w
 10133  0173  07AF               	addwf	___flmul@prod,f
 10134  0174  0834               	movf	___flmul@temp+1,w
 10135  0175  3DB0               	addwfc	___flmul@prod+1,f
 10136  0176  3000               	movlw	0
 10137  0177  3DB1               	addwfc	___flmul@prod+2,f
 10138  0178  3DB2               	addwfc	___flmul@prod+3,f
 10139  0179  0822               	movf	___flmul@b+2,w
 10140  017A  00F9               	movwf	??___flmul
 10141  017B  0879               	movf	??___flmul,w
 10142  017C  00F0               	movwf	__Umul8_16@multiplicand
 10143  017D  0826               	movf	___flmul@a+2,w
 10144  017E  3197  2743  3180   	fcall	__Umul8_16
 10145  0181  0871               	movf	?__Umul8_16+1,w
 10146  0182  0020               	movlb	0	; select bank0
 10147  0183  00B4               	movwf	___flmul@temp+1
 10148  0184  0870               	movf	?__Umul8_16,w
 10149  0185  00B3               	movwf	___flmul@temp
 10150  0186  0833               	movf	___flmul@temp,w
 10151  0187  00F9               	movwf	??___flmul
 10152  0188  0834               	movf	___flmul@temp+1,w
 10153  0189  00FA               	movwf	??___flmul+1
 10154  018A  01FB               	clrf	??___flmul+2
 10155  018B  01FC               	clrf	??___flmul+3
 10156  018C  3008               	movlw	8
 10157  018D                     u353_25:	
 10158  018D  35F9               	lslf	??___flmul,f
 10159  018E  0DFA               	rlf	??___flmul+1,f
 10160  018F  0DFB               	rlf	??___flmul+2,f
 10161  0190  0DFC               	rlf	??___flmul+3,f
 10162  0191  0B89               	decfsz	9,f
 10163  0192  298D               	goto	u353_25
 10164  0193  0879               	movf	??___flmul,w
 10165  0194  07AF               	addwf	___flmul@prod,f
 10166  0195  087A               	movf	??___flmul+1,w
 10167  0196  3DB0               	addwfc	___flmul@prod+1,f
 10168  0197  087B               	movf	??___flmul+2,w
 10169  0198  3DB1               	addwfc	___flmul@prod+2,f
 10170  0199  087C               	movf	??___flmul+3,w
 10171  019A  3DB2               	addwfc	___flmul@prod+3,f
 10172  019B  0829               	movf	___flmul@grs,w
 10173  019C  00F9               	movwf	??___flmul
 10174  019D  082A               	movf	___flmul@grs+1,w
 10175  019E  00FA               	movwf	??___flmul+1
 10176  019F  082B               	movf	___flmul@grs+2,w
 10177  01A0  00FB               	movwf	??___flmul+2
 10178  01A1  082C               	movf	___flmul@grs+3,w
 10179  01A2  00FC               	movwf	??___flmul+3
 10180  01A3  3018               	movlw	24
 10181  01A4                     u354_25:	
 10182  01A4  36FC               	lsrf	??___flmul+3,f
 10183  01A5  0CFB               	rrf	??___flmul+2,f
 10184  01A6  0CFA               	rrf	??___flmul+1,f
 10185  01A7  0CF9               	rrf	??___flmul,f
 10186  01A8  0B89               	decfsz	9,f
 10187  01A9  29A4               	goto	u354_25
 10188  01AA  0879               	movf	??___flmul,w
 10189  01AB  07AF               	addwf	___flmul@prod,f
 10190  01AC  087A               	movf	??___flmul+1,w
 10191  01AD  3DB0               	addwfc	___flmul@prod+1,f
 10192  01AE  087B               	movf	??___flmul+2,w
 10193  01AF  3DB1               	addwfc	___flmul@prod+2,f
 10194  01B0  087C               	movf	??___flmul+3,w
 10195  01B1  3DB2               	addwfc	___flmul@prod+3,f
 10196  01B2  3008               	movlw	8
 10197  01B3                     u355_25:	
 10198  01B3  35A9               	lslf	___flmul@grs,f
 10199  01B4  0DAA               	rlf	___flmul@grs+1,f
 10200  01B5  0DAB               	rlf	___flmul@grs+2,f
 10201  01B6  0DAC               	rlf	___flmul@grs+3,f
 10202  01B7  0B89               	decfsz	9,f
 10203  01B8  29B3               	goto	u355_25
 10204  01B9  082E               	movf	___flmul@bexp,w
 10205  01BA  072D               	addwf	___flmul@aexp,w
 10206  01BB  00F9               	movwf	??___flmul
 10207  01BC  01FA               	clrf	??___flmul+1
 10208  01BD  0DFA               	rlf	??___flmul+1,f
 10209  01BE  0879               	movf	??___flmul,w
 10210  01BF  3E82               	addlw	130
 10211  01C0  00B3               	movwf	___flmul@temp
 10212  01C1  30FF               	movlw	255
 10213  01C2  3D7A               	addwfc	??___flmul+1,w
 10214  01C3  00B4               	movwf	___flmul@temp+1
 10215  01C4                     i1l2871:	
 10216  01C4  1BB1               	btfsc	___flmul@prod+2,7
 10217  01C5  29DB               	goto	i1l2873
 10218  01C6  3001               	movlw	1
 10219  01C7                     u356_25:	
 10220  01C7  35AF               	lslf	___flmul@prod,f
 10221  01C8  0DB0               	rlf	___flmul@prod+1,f
 10222  01C9  0DB1               	rlf	___flmul@prod+2,f
 10223  01CA  0DB2               	rlf	___flmul@prod+3,f
 10224  01CB  0B89               	decfsz	9,f
 10225  01CC  29C7               	goto	u356_25
 10226  01CD  1BAC               	btfsc	___flmul@grs+3,7
 10227  01CE  142F               	bsf	___flmul@prod,0
 10228  01CF  3001               	movlw	1
 10229  01D0                     u358_25:	
 10230  01D0  35A9               	lslf	___flmul@grs,f
 10231  01D1  0DAA               	rlf	___flmul@grs+1,f
 10232  01D2  0DAB               	rlf	___flmul@grs+2,f
 10233  01D3  0DAC               	rlf	___flmul@grs+3,f
 10234  01D4  0B89               	decfsz	9,f
 10235  01D5  29D0               	goto	u358_25
 10236  01D6  30FF               	movlw	255
 10237  01D7  07B3               	addwf	___flmul@temp,f
 10238  01D8  30FF               	movlw	255
 10239  01D9  3DB4               	addwfc	___flmul@temp+1,f
 10240  01DA  29C4               	goto	i1l2871
 10241  01DB                     i1l2873:	
 10242  01DB  01AD               	clrf	___flmul@aexp
 10243  01DC  1FAC               	btfss	___flmul@grs+3,7
 10244  01DD  29F4               	goto	i1l2883
 10245  01DE  30FF               	movlw	255
 10246  01DF  0529               	andwf	___flmul@grs,w
 10247  01E0  00F9               	movwf	??___flmul
 10248  01E1  30FF               	movlw	255
 10249  01E2  052A               	andwf	___flmul@grs+1,w
 10250  01E3  00FA               	movwf	??___flmul+1
 10251  01E4  30FF               	movlw	255
 10252  01E5  052B               	andwf	___flmul@grs+2,w
 10253  01E6  00FB               	movwf	??___flmul+2
 10254  01E7  307F               	movlw	127
 10255  01E8  052C               	andwf	___flmul@grs+3,w
 10256  01E9  00FC               	movwf	??___flmul+3
 10257  01EA  087C               	movf	??___flmul+3,w
 10258  01EB  047B               	iorwf	??___flmul+2,w
 10259  01EC  047A               	iorwf	??___flmul+1,w
 10260  01ED  0479               	iorwf	??___flmul,w
 10261  01EE  1903               	skipnz
 10262  01EF  182F               	btfsc	___flmul@prod,0
 10263  01F0  29F2               	goto	i1l2879
 10264  01F1  29F4               	goto	i1l2883
 10265  01F2                     i1l2879:	
 10266  01F2  01AD               	clrf	___flmul@aexp
 10267  01F3  0AAD               	incf	___flmul@aexp,f
 10268  01F4                     i1l2883:	
 10269  01F4  082D               	movf	___flmul@aexp,w
 10270  01F5  1903               	btfsc	3,2
 10271  01F6  2A1D               	goto	i1l2893
 10272  01F7  3001               	movlw	1
 10273  01F8  07AF               	addwf	___flmul@prod,f
 10274  01F9  3000               	movlw	0
 10275  01FA  3DB0               	addwfc	___flmul@prod+1,f
 10276  01FB  3000               	movlw	0
 10277  01FC  3DB1               	addwfc	___flmul@prod+2,f
 10278  01FD  3000               	movlw	0
 10279  01FE  3DB2               	addwfc	___flmul@prod+3,f
 10280  01FF  1C32               	btfss	___flmul@prod+3,0
 10281  0200  2A1D               	goto	i1l2893
 10282  0201  082F               	movf	___flmul@prod,w
 10283  0202  00F9               	movwf	??___flmul
 10284  0203  0830               	movf	___flmul@prod+1,w
 10285  0204  00FA               	movwf	??___flmul+1
 10286  0205  0831               	movf	___flmul@prod+2,w
 10287  0206  00FB               	movwf	??___flmul+2
 10288  0207  0832               	movf	___flmul@prod+3,w
 10289  0208  00FC               	movwf	??___flmul+3
 10290  0209  3001               	movlw	1
 10291  020A  00FD               	movwf	??___flmul+4
 10292  020B                     u365_25:	
 10293  020B  37FC               	asrf	??___flmul+3,f
 10294  020C  0CFB               	rrf	??___flmul+2,f
 10295  020D  0CFA               	rrf	??___flmul+1,f
 10296  020E  0CF9               	rrf	??___flmul,f
 10297  020F  0BFD               	decfsz	??___flmul+4,f
 10298  0210  2A0B               	goto	u365_25
 10299  0211  087C               	movf	??___flmul+3,w
 10300  0212  00B2               	movwf	___flmul@prod+3
 10301  0213  087B               	movf	??___flmul+2,w
 10302  0214  00B1               	movwf	___flmul@prod+2
 10303  0215  087A               	movf	??___flmul+1,w
 10304  0216  00B0               	movwf	___flmul@prod+1
 10305  0217  0879               	movf	??___flmul,w
 10306  0218  00AF               	movwf	___flmul@prod
 10307  0219  3001               	movlw	1
 10308  021A  07B3               	addwf	___flmul@temp,f
 10309  021B  3000               	movlw	0
 10310  021C  3DB4               	addwfc	___flmul@temp+1,f
 10311  021D                     i1l2893:	
 10312  021D  0834               	movf	___flmul@temp+1,w
 10313  021E  3A80               	xorlw	128
 10314  021F  00F9               	movwf	??___flmul
 10315  0220  3080               	movlw	128
 10316  0221  0279               	subwf	??___flmul,w
 10317  0222  1D03               	skipz
 10318  0223  2A26               	goto	u366_25
 10319  0224  30FF               	movlw	255
 10320  0225  0233               	subwf	___flmul@temp,w
 10321  0226                     u366_25:	
 10322  0226  1C03               	skipc
 10323  0227  2A32               	goto	i1l2897
 10324  0228  307F               	movlw	127
 10325  0229  0020               	movlb	0	; select bank0
 10326  022A  00B2               	movwf	___flmul@prod+3
 10327  022B  3080               	movlw	128
 10328  022C  00B1               	movwf	___flmul@prod+2
 10329  022D  3000               	movlw	0
 10330  022E  00B0               	movwf	___flmul@prod+1
 10331  022F  3000               	movlw	0
 10332  0230  00AF               	movwf	___flmul@prod
 10333  0231  2A5C               	goto	i1l923
 10334  0232                     i1l2897:	
 10335  0232  0020               	movlb	0	; select bank0
 10336  0233  0834               	movf	___flmul@temp+1,w
 10337  0234  3A80               	xorlw	128
 10338  0235  00F9               	movwf	??___flmul
 10339  0236  3080               	movlw	128
 10340  0237  0279               	subwf	??___flmul,w
 10341  0238  1D03               	skipz
 10342  0239  2A3C               	goto	u367_25
 10343  023A  3001               	movlw	1
 10344  023B  0233               	subwf	___flmul@temp,w
 10345  023C                     u367_25:	
 10346  023C  1803               	skipnc
 10347  023D  2A49               	goto	i1l2903
 10348  023E  3000               	movlw	0
 10349  023F  0020               	movlb	0	; select bank0
 10350  0240  00B2               	movwf	___flmul@prod+3
 10351  0241  3000               	movlw	0
 10352  0242  00B1               	movwf	___flmul@prod+2
 10353  0243  3000               	movlw	0
 10354  0244  00B0               	movwf	___flmul@prod+1
 10355  0245  3000               	movlw	0
 10356  0246  00AF               	movwf	___flmul@prod
 10357  0247  01A8               	clrf	___flmul@sign
 10358  0248  2A5C               	goto	i1l923
 10359  0249                     i1l2903:	
 10360  0249  0020               	movlb	0	; select bank0
 10361  024A  0833               	movf	___flmul@temp,w
 10362  024B  00F9               	movwf	??___flmul
 10363  024C  0879               	movf	??___flmul,w
 10364  024D  00AE               	movwf	___flmul@bexp
 10365  024E  30FF               	movlw	255
 10366  024F  05AF               	andwf	___flmul@prod,f
 10367  0250  30FF               	movlw	255
 10368  0251  05B0               	andwf	___flmul@prod+1,f
 10369  0252  307F               	movlw	127
 10370  0253  05B1               	andwf	___flmul@prod+2,f
 10371  0254  3000               	movlw	0
 10372  0255  05B2               	andwf	___flmul@prod+3,f
 10373  0256  182E               	btfsc	___flmul@bexp,0
 10374  0257  17B1               	bsf	___flmul@prod+2,7
 10375  0258  362E               	lsrf	___flmul@bexp,w
 10376  0259  00F9               	movwf	??___flmul
 10377  025A  0879               	movf	??___flmul,w
 10378  025B  00B2               	movwf	___flmul@prod+3
 10379  025C                     i1l923:	
 10380  025C  0828               	movf	___flmul@sign,w
 10381  025D  00F9               	movwf	??___flmul
 10382  025E  0879               	movf	??___flmul,w
 10383  025F  04B2               	iorwf	___flmul@prod+3,f
 10384  0260  0832               	movf	___flmul@prod+3,w
 10385  0261  00A3               	movwf	?___flmul+3
 10386  0262  0831               	movf	___flmul@prod+2,w
 10387  0263  00A2               	movwf	?___flmul+2
 10388  0264  0830               	movf	___flmul@prod+1,w
 10389  0265  00A1               	movwf	?___flmul+1
 10390  0266  082F               	movf	___flmul@prod,w
 10391  0267  00A0               	movwf	?___flmul
 10392  0268  0008               	return
 10393  0269                     __end_of___flmul:	
 10394                           
 10395                           	psect	text44
 10396  1743                     __ptext44:	
 10397 ;; *************** function __Umul8_16 *****************
 10398 ;; Defined at:
 10399 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul8_16.c"
 10400 ;; Parameters:    Size  Location     Type
 10401 ;;  multiplier      1    wreg     unsigned char 
 10402 ;;  multiplicand    1    0[COMMON] unsigned char 
 10403 ;; Auto vars:     Size  Location     Type
 10404 ;;  multiplier      1    8[COMMON] unsigned char 
 10405 ;;  word_mpld       2    6[COMMON] unsigned int 
 10406 ;;  product         2    4[COMMON] unsigned int 
 10407 ;; Return value:  Size  Location     Type
 10408 ;;                  2    0[COMMON] unsigned int 
 10409 ;; Registers used:
 10410 ;;		wreg, status,2, status,0
 10411 ;; Tracked objects:
 10412 ;;		On entry : 0/0
 10413 ;;		On exit  : 0/0
 10414 ;;		Unchanged: 0/0
 10415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10416 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10417 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10418 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10419 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10420 ;;Total ram usage:        9 bytes
 10421 ;; Hardware stack levels used:    1
 10422 ;; This function calls:
 10423 ;;		Nothing
 10424 ;; This function is called by:
 10425 ;;		___flmul
 10426 ;; This function uses a non-reentrant model
 10427 ;;
 10428                           
 10429                           
 10430                           ;psect for function __Umul8_16
 10431  1743                     __Umul8_16:	
 10432                           
 10433                           ;incstack = 0
 10434                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 10435                           ;__Umul8_16@multiplier stored from wreg
 10436  1743  00F8               	movwf	__Umul8_16@multiplier
 10437  1744  01F4               	clrf	__Umul8_16@product
 10438  1745  01F5               	clrf	__Umul8_16@product+1
 10439  1746  0870               	movf	__Umul8_16@multiplicand,w
 10440  1747  00F2               	movwf	??__Umul8_16
 10441  1748  01F3               	clrf	??__Umul8_16+1
 10442  1749  0872               	movf	??__Umul8_16,w
 10443  174A  00F6               	movwf	__Umul8_16@word_mpld
 10444  174B  0873               	movf	??__Umul8_16+1,w
 10445  174C  00F7               	movwf	__Umul8_16@word_mpld+1
 10446  174D                     i1l2459:	
 10447  174D  1C78               	btfss	__Umul8_16@multiplier,0
 10448  174E  2F53               	goto	i1l1017
 10449  174F  0876               	movf	__Umul8_16@word_mpld,w
 10450  1750  07F4               	addwf	__Umul8_16@product,f
 10451  1751  0877               	movf	__Umul8_16@word_mpld+1,w
 10452  1752  3DF5               	addwfc	__Umul8_16@product+1,f
 10453  1753                     i1l1017:	
 10454  1753  3001               	movlw	1
 10455  1754                     u268_25:	
 10456  1754  35F6               	lslf	__Umul8_16@word_mpld,f
 10457  1755  0DF7               	rlf	__Umul8_16@word_mpld+1,f
 10458  1756  0B89               	decfsz	9,f
 10459  1757  2F54               	goto	u268_25
 10460  1758  1003               	clrc
 10461  1759  0CF8               	rrf	__Umul8_16@multiplier,f
 10462  175A  0878               	movf	__Umul8_16@multiplier,w
 10463  175B  1D03               	btfss	3,2
 10464  175C  2F4D               	goto	i1l2459
 10465  175D  0875               	movf	__Umul8_16@product+1,w
 10466  175E  00F1               	movwf	?__Umul8_16+1
 10467  175F  0874               	movf	__Umul8_16@product,w
 10468  1760  00F0               	movwf	?__Umul8_16
 10469  1761  0008               	return
 10470  1762                     __end_of__Umul8_16:	
 10471                           
 10472                           	psect	text45
 10473  0269                     __ptext45:	
 10474 ;; *************** function ___fladd *****************
 10475 ;; Defined at:
 10476 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 10477 ;; Parameters:    Size  Location     Type
 10478 ;;  b               4    0[COMMON] unsigned int 
 10479 ;;  a               4    4[COMMON] unsigned int 
 10480 ;; Auto vars:     Size  Location     Type
 10481 ;;  grs             1   11[COMMON] unsigned char 
 10482 ;;  bexp            1   10[COMMON] unsigned char 
 10483 ;;  aexp            1    9[COMMON] unsigned char 
 10484 ;;  signs           1    8[COMMON] unsigned char 
 10485 ;; Return value:  Size  Location     Type
 10486 ;;                  4    0[COMMON] unsigned char 
 10487 ;; Registers used:
 10488 ;;		wreg, status,2, status,0
 10489 ;; Tracked objects:
 10490 ;;		On entry : 0/0
 10491 ;;		On exit  : 0/0
 10492 ;;		Unchanged: 0/0
 10493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10494 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10495 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10496 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10497 ;;      Totals:        12       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10498 ;;Total ram usage:       20 bytes
 10499 ;; Hardware stack levels used:    1
 10500 ;; This function calls:
 10501 ;;		Nothing
 10502 ;; This function is called by:
 10503 ;;		_speedCalc
 10504 ;; This function uses a non-reentrant model
 10505 ;;
 10506                           
 10507                           
 10508                           ;psect for function ___fladd
 10509  0269                     ___fladd:	
 10510                           
 10511                           ;incstack = 0
 10512                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 10513  0269  0873               	movf	___fladd@b+3,w
 10514  026A  3980               	andlw	128
 10515  026B  0020               	movlb	0	; select bank0
 10516  026C  00A0               	movwf	??___fladd
 10517  026D  0820               	movf	??___fladd,w
 10518  026E  00F8               	movwf	___fladd@signs
 10519  026F  3573               	lslf	___fladd@b+3,w
 10520  0270  00A0               	movwf	??___fladd
 10521  0271  0820               	movf	??___fladd,w
 10522  0272  00FA               	movwf	___fladd@bexp
 10523  0273  1BF2               	btfsc	___fladd@b+2,7
 10524  0274  147A               	bsf	___fladd@bexp,0
 10525  0275  087A               	movf	___fladd@bexp,w
 10526  0276  1903               	btfsc	3,2
 10527  0277  2A86               	goto	i1l2599
 10528  0278  0A7A               	incf	___fladd@bexp,w
 10529  0279  1D03               	btfss	3,2
 10530  027A  2A83               	goto	i1l2595
 10531  027B  3000               	movlw	0
 10532  027C  00F3               	movwf	___fladd@b+3
 10533  027D  3000               	movlw	0
 10534  027E  00F2               	movwf	___fladd@b+2
 10535  027F  3000               	movlw	0
 10536  0280  00F1               	movwf	___fladd@b+1
 10537  0281  3000               	movlw	0
 10538  0282  00F0               	movwf	___fladd@b
 10539  0283                     i1l2595:	
 10540  0283  17F2               	bsf	___fladd@b+2,7
 10541  0284  01F3               	clrf	___fladd@b+3
 10542  0285  2A8E               	goto	i1l2601
 10543  0286                     i1l2599:	
 10544  0286  3000               	movlw	0
 10545  0287  00F3               	movwf	___fladd@b+3
 10546  0288  3000               	movlw	0
 10547  0289  00F2               	movwf	___fladd@b+2
 10548  028A  3000               	movlw	0
 10549  028B  00F1               	movwf	___fladd@b+1
 10550  028C  3000               	movlw	0
 10551  028D  00F0               	movwf	___fladd@b
 10552  028E                     i1l2601:	
 10553  028E  0877               	movf	___fladd@a+3,w
 10554  028F  3980               	andlw	128
 10555  0290  00A0               	movwf	??___fladd
 10556  0291  0820               	movf	??___fladd,w
 10557  0292  00F9               	movwf	___fladd@aexp
 10558  0293  0879               	movf	___fladd@aexp,w
 10559  0294  0678               	xorwf	___fladd@signs,w
 10560  0295  1D03               	btfss	3,2
 10561  0296  1778               	bsf	___fladd@signs,6
 10562  0297  3577               	lslf	___fladd@a+3,w
 10563  0298  00A0               	movwf	??___fladd
 10564  0299  0820               	movf	??___fladd,w
 10565  029A  00F9               	movwf	___fladd@aexp
 10566  029B  1BF6               	btfsc	___fladd@a+2,7
 10567  029C  1479               	bsf	___fladd@aexp,0
 10568  029D  0879               	movf	___fladd@aexp,w
 10569  029E  1903               	btfsc	3,2
 10570  029F  2AAE               	goto	i1l2623
 10571  02A0  0A79               	incf	___fladd@aexp,w
 10572  02A1  1D03               	btfss	3,2
 10573  02A2  2AAB               	goto	i1l2619
 10574  02A3  3000               	movlw	0
 10575  02A4  00F7               	movwf	___fladd@a+3
 10576  02A5  3000               	movlw	0
 10577  02A6  00F6               	movwf	___fladd@a+2
 10578  02A7  3000               	movlw	0
 10579  02A8  00F5               	movwf	___fladd@a+1
 10580  02A9  3000               	movlw	0
 10581  02AA  00F4               	movwf	___fladd@a
 10582  02AB                     i1l2619:	
 10583  02AB  17F6               	bsf	___fladd@a+2,7
 10584  02AC  01F7               	clrf	___fladd@a+3
 10585  02AD  2AB6               	goto	i1l815
 10586  02AE                     i1l2623:	
 10587  02AE  3000               	movlw	0
 10588  02AF  00F7               	movwf	___fladd@a+3
 10589  02B0  3000               	movlw	0
 10590  02B1  00F6               	movwf	___fladd@a+2
 10591  02B2  3000               	movlw	0
 10592  02B3  00F5               	movwf	___fladd@a+1
 10593  02B4  3000               	movlw	0
 10594  02B5  00F4               	movwf	___fladd@a
 10595  02B6                     i1l815:	
 10596  02B6  087A               	movf	___fladd@bexp,w
 10597  02B7  0279               	subwf	___fladd@aexp,w
 10598  02B8  1803               	skipnc
 10599  02B9  2AFC               	goto	i1l2659
 10600  02BA  1F78               	btfss	___fladd@signs,6
 10601  02BB  2AC0               	goto	i1l2629
 10602  02BC  3080               	movlw	128
 10603  02BD  00A0               	movwf	??___fladd
 10604  02BE  0820               	movf	??___fladd,w
 10605  02BF  06F8               	xorwf	___fladd@signs,f
 10606  02C0                     i1l2629:	
 10607  02C0  087A               	movf	___fladd@bexp,w
 10608  02C1  00A0               	movwf	??___fladd
 10609  02C2  0820               	movf	??___fladd,w
 10610  02C3  00FB               	movwf	___fladd@grs
 10611  02C4  0879               	movf	___fladd@aexp,w
 10612  02C5  00A0               	movwf	??___fladd
 10613  02C6  0820               	movf	??___fladd,w
 10614  02C7  00FA               	movwf	___fladd@bexp
 10615  02C8  087B               	movf	___fladd@grs,w
 10616  02C9  00A0               	movwf	??___fladd
 10617  02CA  0820               	movf	??___fladd,w
 10618  02CB  00F9               	movwf	___fladd@aexp
 10619  02CC  0870               	movf	___fladd@b,w
 10620  02CD  00A0               	movwf	??___fladd
 10621  02CE  0820               	movf	??___fladd,w
 10622  02CF  00FB               	movwf	___fladd@grs
 10623  02D0  0874               	movf	___fladd@a,w
 10624  02D1  00A0               	movwf	??___fladd
 10625  02D2  0820               	movf	??___fladd,w
 10626  02D3  00F0               	movwf	___fladd@b
 10627  02D4  087B               	movf	___fladd@grs,w
 10628  02D5  00A0               	movwf	??___fladd
 10629  02D6  0820               	movf	??___fladd,w
 10630  02D7  00F4               	movwf	___fladd@a
 10631  02D8  0871               	movf	___fladd@b+1,w
 10632  02D9  00A0               	movwf	??___fladd
 10633  02DA  0820               	movf	??___fladd,w
 10634  02DB  00FB               	movwf	___fladd@grs
 10635  02DC  0875               	movf	___fladd@a+1,w
 10636  02DD  00A0               	movwf	??___fladd
 10637  02DE  0820               	movf	??___fladd,w
 10638  02DF  00F1               	movwf	___fladd@b+1
 10639  02E0  087B               	movf	___fladd@grs,w
 10640  02E1  00A0               	movwf	??___fladd
 10641  02E2  0820               	movf	??___fladd,w
 10642  02E3  00F5               	movwf	___fladd@a+1
 10643  02E4  0872               	movf	___fladd@b+2,w
 10644  02E5  00A0               	movwf	??___fladd
 10645  02E6  0820               	movf	??___fladd,w
 10646  02E7  00FB               	movwf	___fladd@grs
 10647  02E8  0876               	movf	___fladd@a+2,w
 10648  02E9  00A0               	movwf	??___fladd
 10649  02EA  0820               	movf	??___fladd,w
 10650  02EB  00F2               	movwf	___fladd@b+2
 10651  02EC  087B               	movf	___fladd@grs,w
 10652  02ED  00A0               	movwf	??___fladd
 10653  02EE  0820               	movf	??___fladd,w
 10654  02EF  00F6               	movwf	___fladd@a+2
 10655  02F0  0873               	movf	___fladd@b+3,w
 10656  02F1  00A0               	movwf	??___fladd
 10657  02F2  0820               	movf	??___fladd,w
 10658  02F3  00FB               	movwf	___fladd@grs
 10659  02F4  0877               	movf	___fladd@a+3,w
 10660  02F5  00A0               	movwf	??___fladd
 10661  02F6  0820               	movf	??___fladd,w
 10662  02F7  00F3               	movwf	___fladd@b+3
 10663  02F8  087B               	movf	___fladd@grs,w
 10664  02F9  00A0               	movwf	??___fladd
 10665  02FA  0820               	movf	??___fladd,w
 10666  02FB  00F7               	movwf	___fladd@a+3
 10667  02FC                     i1l2659:	
 10668  02FC  01FB               	clrf	___fladd@grs
 10669  02FD  0879               	movf	___fladd@aexp,w
 10670  02FE  00A0               	movwf	??___fladd
 10671  02FF  01A1               	clrf	??___fladd+1
 10672  0300  0821               	movf	??___fladd+1,w
 10673  0301  00A3               	movwf	??___fladd+3
 10674  0302  087A               	movf	___fladd@bexp,w
 10675  0303  0220               	subwf	??___fladd,w
 10676  0304  00A2               	movwf	??___fladd+2
 10677  0305  1C03               	skipc
 10678  0306  03A3               	decf	??___fladd+3,f
 10679  0307  0823               	movf	??___fladd+3,w
 10680  0308  3A80               	xorlw	128
 10681  0309  00A4               	movwf	??___fladd+4
 10682  030A  3080               	movlw	128
 10683  030B  0224               	subwf	??___fladd+4,w
 10684  030C  1D03               	skipz
 10685  030D  2B10               	goto	u309_25
 10686  030E  301A               	movlw	26
 10687  030F  0222               	subwf	??___fladd+2,w
 10688  0310                     u309_25:	
 10689  0310  1C03               	skipc
 10690  0311  2B46               	goto	i1l2677
 10691  0312  0873               	movf	___fladd@b+3,w
 10692  0313  0472               	iorwf	___fladd@b+2,w
 10693  0314  0471               	iorwf	___fladd@b+1,w
 10694  0315  0470               	iorwf	___fladd@b,w
 10695  0316  1903               	btfsc	3,2
 10696  0317  2B1A               	goto	u310_20
 10697  0318  3001               	movlw	1
 10698  0319  2B1B               	goto	u311_20
 10699  031A                     u310_20:	
 10700  031A  3000               	movlw	0
 10701  031B                     u311_20:	
 10702  031B  0020               	movlb	0	; select bank0
 10703  031C  00A0               	movwf	??___fladd
 10704  031D  0820               	movf	??___fladd,w
 10705  031E  00FB               	movwf	___fladd@grs
 10706  031F  3000               	movlw	0
 10707  0320  00F3               	movwf	___fladd@b+3
 10708  0321  3000               	movlw	0
 10709  0322  00F2               	movwf	___fladd@b+2
 10710  0323  3000               	movlw	0
 10711  0324  00F1               	movwf	___fladd@b+1
 10712  0325  3000               	movlw	0
 10713  0326  00F0               	movwf	___fladd@b
 10714  0327  0879               	movf	___fladd@aexp,w
 10715  0328  00A0               	movwf	??___fladd
 10716  0329  0820               	movf	??___fladd,w
 10717  032A  00FA               	movwf	___fladd@bexp
 10718  032B  2B4A               	goto	i1l819
 10719  032C                     i1l821:	
 10720  032C  1C7B               	btfss	___fladd@grs,0
 10721  032D  2B35               	goto	i1l2667
 10722  032E  367B               	lsrf	___fladd@grs,w
 10723  032F  3801               	iorlw	1
 10724  0330  0020               	movlb	0	; select bank0
 10725  0331  00A0               	movwf	??___fladd
 10726  0332  0820               	movf	??___fladd,w
 10727  0333  00FB               	movwf	___fladd@grs
 10728  0334  2B37               	goto	i1l2669
 10729  0335                     i1l2667:	
 10730  0335  1003               	clrc
 10731  0336  0CFB               	rrf	___fladd@grs,f
 10732  0337                     i1l2669:	
 10733  0337  1870               	btfsc	___fladd@b,0
 10734  0338  17FB               	bsf	___fladd@grs,7
 10735  0339  3001               	movlw	1
 10736  033A  0020               	movlb	0	; select bank0
 10737  033B  00A0               	movwf	??___fladd
 10738  033C                     u314_25:	
 10739  033C  37F3               	asrf	___fladd@b+3,f
 10740  033D  0CF2               	rrf	___fladd@b+2,f
 10741  033E  0CF1               	rrf	___fladd@b+1,f
 10742  033F  0CF0               	rrf	___fladd@b,f
 10743  0340  0BA0               	decfsz	??___fladd& (0+127),f
 10744  0341  2B3C               	goto	u314_25
 10745  0342  3001               	movlw	1
 10746  0343  00A0               	movwf	??___fladd
 10747  0344  0820               	movf	??___fladd,w
 10748  0345  07FA               	addwf	___fladd@bexp,f
 10749  0346                     i1l2677:	
 10750  0346  0879               	movf	___fladd@aexp,w
 10751  0347  027A               	subwf	___fladd@bexp,w
 10752  0348  1C03               	skipc
 10753  0349  2B2C               	goto	i1l821
 10754  034A                     i1l819:	
 10755  034A  1B78               	btfsc	___fladd@signs,6
 10756  034B  2B7D               	goto	i1l2703
 10757  034C  087A               	movf	___fladd@bexp,w
 10758  034D  1D03               	btfss	3,2
 10759  034E  2B58               	goto	i1l2685
 10760  034F  3000               	movlw	0
 10761  0350  00F3               	movwf	?___fladd+3
 10762  0351  3000               	movlw	0
 10763  0352  00F2               	movwf	?___fladd+2
 10764  0353  3000               	movlw	0
 10765  0354  00F1               	movwf	?___fladd+1
 10766  0355  3000               	movlw	0
 10767  0356  00F0               	movwf	?___fladd
 10768  0357  0008               	return
 10769  0358                     i1l2685:	
 10770  0358  0874               	movf	___fladd@a,w
 10771  0359  07F0               	addwf	___fladd@b,f
 10772  035A  0875               	movf	___fladd@a+1,w
 10773  035B  3DF1               	addwfc	___fladd@b+1,f
 10774  035C  0876               	movf	___fladd@a+2,w
 10775  035D  3DF2               	addwfc	___fladd@b+2,f
 10776  035E  0877               	movf	___fladd@a+3,w
 10777  035F  3DF3               	addwfc	___fladd@b+3,f
 10778  0360  1C73               	btfss	___fladd@b+3,0
 10779  0361  2BF8               	goto	i1l2737
 10780  0362  1C7B               	btfss	___fladd@grs,0
 10781  0363  2B6B               	goto	i1l2693
 10782  0364  367B               	lsrf	___fladd@grs,w
 10783  0365  3801               	iorlw	1
 10784  0366  0020               	movlb	0	; select bank0
 10785  0367  00A0               	movwf	??___fladd
 10786  0368  0820               	movf	??___fladd,w
 10787  0369  00FB               	movwf	___fladd@grs
 10788  036A  2B6D               	goto	i1l2695
 10789  036B                     i1l2693:	
 10790  036B  1003               	clrc
 10791  036C  0CFB               	rrf	___fladd@grs,f
 10792  036D                     i1l2695:	
 10793  036D  1870               	btfsc	___fladd@b,0
 10794  036E  17FB               	bsf	___fladd@grs,7
 10795  036F  3001               	movlw	1
 10796  0370  0020               	movlb	0	; select bank0
 10797  0371  00A0               	movwf	??___fladd
 10798  0372                     u321_25:	
 10799  0372  37F3               	asrf	___fladd@b+3,f
 10800  0373  0CF2               	rrf	___fladd@b+2,f
 10801  0374  0CF1               	rrf	___fladd@b+1,f
 10802  0375  0CF0               	rrf	___fladd@b,f
 10803  0376  0BA0               	decfsz	??___fladd& (0+127),f
 10804  0377  2B72               	goto	u321_25
 10805  0378  3001               	movlw	1
 10806  0379  00A0               	movwf	??___fladd
 10807  037A  0820               	movf	??___fladd,w
 10808  037B  07FA               	addwf	___fladd@bexp,f
 10809  037C  2BF8               	goto	i1l2737
 10810  037D                     i1l2703:	
 10811  037D  0873               	movf	___fladd@b+3,w
 10812  037E  3A80               	xorlw	128
 10813  037F  0020               	movlb	0	; select bank0
 10814  0380  00A0               	movwf	??___fladd
 10815  0381  0877               	movf	___fladd@a+3,w
 10816  0382  3A80               	xorlw	128
 10817  0383  0220               	subwf	??___fladd,w
 10818  0384  1D03               	skipz
 10819  0385  2B90               	goto	u322_23
 10820  0386  0876               	movf	___fladd@a+2,w
 10821  0387  0272               	subwf	___fladd@b+2,w
 10822  0388  1D03               	skipz
 10823  0389  2B90               	goto	u322_23
 10824  038A  0875               	movf	___fladd@a+1,w
 10825  038B  0271               	subwf	___fladd@b+1,w
 10826  038C  1D03               	skipz
 10827  038D  2B90               	goto	u322_23
 10828  038E  0874               	movf	___fladd@a,w
 10829  038F  0270               	subwf	___fladd@b,w
 10830  0390                     u322_23:	
 10831  0390  1803               	skipnc
 10832  0391  2BC8               	goto	i1l2713
 10833  0392  30FF               	movlw	255
 10834  0393  00A0               	movwf	??___fladd
 10835  0394  30FF               	movlw	255
 10836  0395  00A1               	movwf	??___fladd+1
 10837  0396  30FF               	movlw	255
 10838  0397  00A2               	movwf	??___fladd+2
 10839  0398  30FF               	movlw	255
 10840  0399  00A3               	movwf	??___fladd+3
 10841  039A  0870               	movf	___fladd@b,w
 10842  039B  0274               	subwf	___fladd@a,w
 10843  039C  00A4               	movwf	??___fladd+4
 10844  039D  0871               	movf	___fladd@b+1,w
 10845  039E  3B75               	subwfb	___fladd@a+1,w
 10846  039F  00A5               	movwf	??___fladd+5
 10847  03A0  0872               	movf	___fladd@b+2,w
 10848  03A1  3B76               	subwfb	___fladd@a+2,w
 10849  03A2  00A6               	movwf	??___fladd+6
 10850  03A3  0873               	movf	___fladd@b+3,w
 10851  03A4  3B77               	subwfb	___fladd@a+3,w
 10852  03A5  00A7               	movwf	??___fladd+7
 10853  03A6  0824               	movf	??___fladd+4,w
 10854  03A7  07A0               	addwf	??___fladd,f
 10855  03A8  0825               	movf	??___fladd+5,w
 10856  03A9  3DA1               	addwfc	??___fladd+1,f
 10857  03AA  0826               	movf	??___fladd+6,w
 10858  03AB  3DA2               	addwfc	??___fladd+2,f
 10859  03AC  0827               	movf	??___fladd+7,w
 10860  03AD  3DA3               	addwfc	??___fladd+3,f
 10861  03AE  0823               	movf	??___fladd+3,w
 10862  03AF  00F3               	movwf	___fladd@b+3
 10863  03B0  0822               	movf	??___fladd+2,w
 10864  03B1  00F2               	movwf	___fladd@b+2
 10865  03B2  0821               	movf	??___fladd+1,w
 10866  03B3  00F1               	movwf	___fladd@b+1
 10867  03B4  0820               	movf	??___fladd,w
 10868  03B5  00F0               	movwf	___fladd@b
 10869  03B6  3080               	movlw	128
 10870  03B7  00A0               	movwf	??___fladd
 10871  03B8  0820               	movf	??___fladd,w
 10872  03B9  06F8               	xorwf	___fladd@signs,f
 10873  03BA  09FB               	comf	___fladd@grs,f
 10874  03BB  0AFB               	incf	___fladd@grs,f
 10875  03BC  087B               	movf	___fladd@grs,w
 10876  03BD  1D03               	btfss	3,2
 10877  03BE  2BD0               	goto	i1l836
 10878  03BF  3001               	movlw	1
 10879  03C0  07F0               	addwf	___fladd@b,f
 10880  03C1  3000               	movlw	0
 10881  03C2  3DF1               	addwfc	___fladd@b+1,f
 10882  03C3  3000               	movlw	0
 10883  03C4  3DF2               	addwfc	___fladd@b+2,f
 10884  03C5  3000               	movlw	0
 10885  03C6  3DF3               	addwfc	___fladd@b+3,f
 10886  03C7  2BD0               	goto	i1l836
 10887  03C8                     i1l2713:	
 10888  03C8  0874               	movf	___fladd@a,w
 10889  03C9  02F0               	subwf	___fladd@b,f
 10890  03CA  0875               	movf	___fladd@a+1,w
 10891  03CB  3BF1               	subwfb	___fladd@b+1,f
 10892  03CC  0876               	movf	___fladd@a+2,w
 10893  03CD  3BF2               	subwfb	___fladd@b+2,f
 10894  03CE  0877               	movf	___fladd@a+3,w
 10895  03CF  3BF3               	subwfb	___fladd@b+3,f
 10896  03D0                     i1l836:	
 10897  03D0  0873               	movf	___fladd@b+3,w
 10898  03D1  0472               	iorwf	___fladd@b+2,w
 10899  03D2  0471               	iorwf	___fladd@b+1,w
 10900  03D3  0470               	iorwf	___fladd@b,w
 10901  03D4  1D03               	skipz
 10902  03D5  2BF6               	goto	i1l2735
 10903  03D6  087B               	movf	___fladd@grs,w
 10904  03D7  1D03               	btfss	3,2
 10905  03D8  2BF6               	goto	i1l2735
 10906  03D9  3000               	movlw	0
 10907  03DA  00F3               	movwf	?___fladd+3
 10908  03DB  3000               	movlw	0
 10909  03DC  00F2               	movwf	?___fladd+2
 10910  03DD  3000               	movlw	0
 10911  03DE  00F1               	movwf	?___fladd+1
 10912  03DF  3000               	movlw	0
 10913  03E0  00F0               	movwf	?___fladd
 10914  03E1  0008               	return
 10915  03E2                     i1l2721:	
 10916  03E2  3001               	movlw	1
 10917  03E3                     u326_25:	
 10918  03E3  35F0               	lslf	___fladd@b,f
 10919  03E4  0DF1               	rlf	___fladd@b+1,f
 10920  03E5  0DF2               	rlf	___fladd@b+2,f
 10921  03E6  0DF3               	rlf	___fladd@b+3,f
 10922  03E7  0B89               	decfsz	9,f
 10923  03E8  2BE3               	goto	u326_25
 10924  03E9  1BFB               	btfsc	___fladd@grs,7
 10925  03EA  1470               	bsf	___fladd@b,0
 10926  03EB  1C7B               	btfss	___fladd@grs,0
 10927  03EC  2BEF               	goto	i1l2729
 10928  03ED  1403               	setc
 10929  03EE  2BF0               	goto	L6
 10930  03EF                     i1l2729:	
 10931  03EF  1003               	clrc
 10932  03F0                     L6:	
 10933  03F0  0DFB               	rlf	___fladd@grs,f
 10934  03F1  087A               	movf	___fladd@bexp,w
 10935  03F2  1903               	btfsc	3,2
 10936  03F3  2BF6               	goto	i1l2735
 10937  03F4  3001               	movlw	1
 10938  03F5  02FA               	subwf	___fladd@bexp,f
 10939  03F6                     i1l2735:	
 10940  03F6  1FF2               	btfss	___fladd@b+2,7
 10941  03F7  2BE2               	goto	i1l2721
 10942  03F8                     i1l2737:	
 10943  03F8  01F9               	clrf	___fladd@aexp
 10944  03F9  1FFB               	btfss	___fladd@grs,7
 10945  03FA  2C03               	goto	i1l2747
 10946  03FB  087B               	movf	___fladd@grs,w
 10947  03FC  397F               	andlw	127
 10948  03FD  1903               	btfsc	3,2
 10949  03FE  1870               	btfsc	___fladd@b,0
 10950  03FF  2C01               	goto	i1l2743
 10951  0400  2C03               	goto	i1l2747
 10952  0401                     i1l2743:	
 10953  0401  01F9               	clrf	___fladd@aexp
 10954  0402  0AF9               	incf	___fladd@aexp,f
 10955  0403                     i1l2747:	
 10956  0403  0879               	movf	___fladd@aexp,w
 10957  0404  1903               	btfsc	3,2
 10958  0405  2C30               	goto	i1l849
 10959  0406  3001               	movlw	1
 10960  0407  07F0               	addwf	___fladd@b,f
 10961  0408  3000               	movlw	0
 10962  0409  3DF1               	addwfc	___fladd@b+1,f
 10963  040A  3000               	movlw	0
 10964  040B  3DF2               	addwfc	___fladd@b+2,f
 10965  040C  3000               	movlw	0
 10966  040D  3DF3               	addwfc	___fladd@b+3,f
 10967  040E  1C73               	btfss	___fladd@b+3,0
 10968  040F  2C30               	goto	i1l849
 10969  0410  0870               	movf	___fladd@b,w
 10970  0411  0020               	movlb	0	; select bank0
 10971  0412  00A0               	movwf	??___fladd
 10972  0413  0871               	movf	___fladd@b+1,w
 10973  0414  00A1               	movwf	??___fladd+1
 10974  0415  0872               	movf	___fladd@b+2,w
 10975  0416  00A2               	movwf	??___fladd+2
 10976  0417  0873               	movf	___fladd@b+3,w
 10977  0418  00A3               	movwf	??___fladd+3
 10978  0419  3001               	movlw	1
 10979  041A  00A4               	movwf	??___fladd+4
 10980  041B                     u336_25:	
 10981  041B  37A3               	asrf	??___fladd+3,f
 10982  041C  0CA2               	rrf	??___fladd+2,f
 10983  041D  0CA1               	rrf	??___fladd+1,f
 10984  041E  0CA0               	rrf	??___fladd,f
 10985  041F  0BA4               	decfsz	??___fladd+4,f
 10986  0420  2C1B               	goto	u336_25
 10987  0421  0823               	movf	??___fladd+3,w
 10988  0422  00F3               	movwf	___fladd@b+3
 10989  0423  0822               	movf	??___fladd+2,w
 10990  0424  00F2               	movwf	___fladd@b+2
 10991  0425  0821               	movf	??___fladd+1,w
 10992  0426  00F1               	movwf	___fladd@b+1
 10993  0427  0820               	movf	??___fladd,w
 10994  0428  00F0               	movwf	___fladd@b
 10995  0429  0A7A               	incf	___fladd@bexp,w
 10996  042A  1903               	btfsc	3,2
 10997  042B  2C30               	goto	i1l849
 10998  042C  3001               	movlw	1
 10999  042D  00A0               	movwf	??___fladd
 11000  042E  0820               	movf	??___fladd,w
 11001  042F  07FA               	addwf	___fladd@bexp,f
 11002  0430                     i1l849:	
 11003  0430  0A7A               	incf	___fladd@bexp,w
 11004  0431  1D03               	btfss	3,2
 11005  0432  087A               	movf	___fladd@bexp,w
 11006  0433  1D03               	btfss	3,2
 11007  0434  2C40               	goto	i1l2765
 11008  0435  3000               	movlw	0
 11009  0436  00F3               	movwf	___fladd@b+3
 11010  0437  3000               	movlw	0
 11011  0438  00F2               	movwf	___fladd@b+2
 11012  0439  3000               	movlw	0
 11013  043A  00F1               	movwf	___fladd@b+1
 11014  043B  3000               	movlw	0
 11015  043C  00F0               	movwf	___fladd@b
 11016  043D  087A               	movf	___fladd@bexp,w
 11017  043E  1903               	btfsc	3,2
 11018  043F  01F8               	clrf	___fladd@signs
 11019  0440                     i1l2765:	
 11020  0440  1C7A               	btfss	___fladd@bexp,0
 11021  0441  2C44               	goto	i1l2769
 11022  0442  17F2               	bsf	___fladd@b+2,7
 11023  0443  2C49               	goto	i1l857
 11024  0444                     i1l2769:	
 11025  0444  307F               	movlw	127
 11026  0445  0020               	movlb	0	; select bank0
 11027  0446  00A0               	movwf	??___fladd
 11028  0447  0820               	movf	??___fladd,w
 11029  0448  05F2               	andwf	___fladd@b+2,f
 11030  0449                     i1l857:	
 11031  0449  367A               	lsrf	___fladd@bexp,w
 11032  044A  0020               	movlb	0	; select bank0
 11033  044B  00A0               	movwf	??___fladd
 11034  044C  0820               	movf	??___fladd,w
 11035  044D  00F3               	movwf	___fladd@b+3
 11036  044E  1FF8               	btfss	___fladd@signs,7
 11037  044F  0008               	return
 11038  0450  17F3               	bsf	___fladd@b+3,7
 11039  0451  0008               	return
 11040  0452                     __end_of___fladd:	
 11041                           
 11042                           	psect	text46
 11043  0A09                     __ptext46:	
 11044 ;; *************** function ___aldiv *****************
 11045 ;; Defined at:
 11046 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aldiv.c"
 11047 ;; Parameters:    Size  Location     Type
 11048 ;;  divisor         4    0[COMMON] long 
 11049 ;;  dividend        4    4[COMMON] long 
 11050 ;; Auto vars:     Size  Location     Type
 11051 ;;  quotient        4    2[BANK0 ] long 
 11052 ;;  sign            1    1[BANK0 ] unsigned char 
 11053 ;;  counter         1    0[BANK0 ] unsigned char 
 11054 ;; Return value:  Size  Location     Type
 11055 ;;                  4    0[COMMON] long 
 11056 ;; Registers used:
 11057 ;;		wreg, status,2, status,0
 11058 ;; Tracked objects:
 11059 ;;		On entry : 0/0
 11060 ;;		On exit  : 0/0
 11061 ;;		Unchanged: 0/0
 11062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11063 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11064 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11065 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11066 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11067 ;;Total ram usage:       15 bytes
 11068 ;; Hardware stack levels used:    1
 11069 ;; This function calls:
 11070 ;;		Nothing
 11071 ;; This function is called by:
 11072 ;;		_speedCalc
 11073 ;; This function uses a non-reentrant model
 11074 ;;
 11075                           
 11076                           
 11077                           ;psect for function ___aldiv
 11078  0A09                     ___aldiv:	
 11079                           
 11080                           ;incstack = 0
 11081                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 11082  0A09  0020               	movlb	0	; select bank0
 11083  0A0A  01A1               	clrf	___aldiv@sign
 11084  0A0B  1FF3               	btfss	___aldiv@divisor+3,7
 11085  0A0C  2A1A               	goto	i1l579
 11086  0A0D  09F0               	comf	___aldiv@divisor,f
 11087  0A0E  09F1               	comf	___aldiv@divisor+1,f
 11088  0A0F  09F2               	comf	___aldiv@divisor+2,f
 11089  0A10  09F3               	comf	___aldiv@divisor+3,f
 11090  0A11  0AF0               	incf	___aldiv@divisor,f
 11091  0A12  1903               	skipnz
 11092  0A13  0AF1               	incf	___aldiv@divisor+1,f
 11093  0A14  1903               	skipnz
 11094  0A15  0AF2               	incf	___aldiv@divisor+2,f
 11095  0A16  1903               	skipnz
 11096  0A17  0AF3               	incf	___aldiv@divisor+3,f
 11097  0A18  01A1               	clrf	___aldiv@sign
 11098  0A19  0AA1               	incf	___aldiv@sign,f
 11099  0A1A                     i1l579:	
 11100  0A1A  1FF7               	btfss	___aldiv@dividend+3,7
 11101  0A1B  2A2B               	goto	i1l2551
 11102  0A1C  09F4               	comf	___aldiv@dividend,f
 11103  0A1D  09F5               	comf	___aldiv@dividend+1,f
 11104  0A1E  09F6               	comf	___aldiv@dividend+2,f
 11105  0A1F  09F7               	comf	___aldiv@dividend+3,f
 11106  0A20  0AF4               	incf	___aldiv@dividend,f
 11107  0A21  1903               	skipnz
 11108  0A22  0AF5               	incf	___aldiv@dividend+1,f
 11109  0A23  1903               	skipnz
 11110  0A24  0AF6               	incf	___aldiv@dividend+2,f
 11111  0A25  1903               	skipnz
 11112  0A26  0AF7               	incf	___aldiv@dividend+3,f
 11113  0A27  3001               	movlw	1
 11114  0A28  00F8               	movwf	??___aldiv
 11115  0A29  0878               	movf	??___aldiv,w
 11116  0A2A  06A1               	xorwf	___aldiv@sign,f
 11117  0A2B                     i1l2551:	
 11118  0A2B  3000               	movlw	0
 11119  0A2C  00A5               	movwf	___aldiv@quotient+3
 11120  0A2D  3000               	movlw	0
 11121  0A2E  00A4               	movwf	___aldiv@quotient+2
 11122  0A2F  3000               	movlw	0
 11123  0A30  00A3               	movwf	___aldiv@quotient+1
 11124  0A31  3000               	movlw	0
 11125  0A32  00A2               	movwf	___aldiv@quotient
 11126  0A33  0873               	movf	___aldiv@divisor+3,w
 11127  0A34  0472               	iorwf	___aldiv@divisor+2,w
 11128  0A35  0471               	iorwf	___aldiv@divisor+1,w
 11129  0A36  0470               	iorwf	___aldiv@divisor,w
 11130  0A37  1903               	skipnz
 11131  0A38  2A74               	goto	i1l2573
 11132  0A39  01A0               	clrf	___aldiv@counter
 11133  0A3A  0AA0               	incf	___aldiv@counter,f
 11134  0A3B                     i1l2559:	
 11135  0A3B  1BF3               	btfsc	___aldiv@divisor+3,7
 11136  0A3C  2A49               	goto	i1l2561
 11137  0A3D  3001               	movlw	1
 11138  0A3E                     u293_25:	
 11139  0A3E  35F0               	lslf	___aldiv@divisor,f
 11140  0A3F  0DF1               	rlf	___aldiv@divisor+1,f
 11141  0A40  0DF2               	rlf	___aldiv@divisor+2,f
 11142  0A41  0DF3               	rlf	___aldiv@divisor+3,f
 11143  0A42  0B89               	decfsz	9,f
 11144  0A43  2A3E               	goto	u293_25
 11145  0A44  3001               	movlw	1
 11146  0A45  00F8               	movwf	??___aldiv
 11147  0A46  0878               	movf	??___aldiv,w
 11148  0A47  07A0               	addwf	___aldiv@counter,f
 11149  0A48  2A3B               	goto	i1l2559
 11150  0A49                     i1l2561:	
 11151  0A49  3001               	movlw	1
 11152  0A4A                     u295_25:	
 11153  0A4A  35A2               	lslf	___aldiv@quotient,f
 11154  0A4B  0DA3               	rlf	___aldiv@quotient+1,f
 11155  0A4C  0DA4               	rlf	___aldiv@quotient+2,f
 11156  0A4D  0DA5               	rlf	___aldiv@quotient+3,f
 11157  0A4E  0B89               	decfsz	9,f
 11158  0A4F  2A4A               	goto	u295_25
 11159  0A50  0873               	movf	___aldiv@divisor+3,w
 11160  0A51  0277               	subwf	___aldiv@dividend+3,w
 11161  0A52  1D03               	skipz
 11162  0A53  2A5E               	goto	u296_25
 11163  0A54  0872               	movf	___aldiv@divisor+2,w
 11164  0A55  0276               	subwf	___aldiv@dividend+2,w
 11165  0A56  1D03               	skipz
 11166  0A57  2A5E               	goto	u296_25
 11167  0A58  0871               	movf	___aldiv@divisor+1,w
 11168  0A59  0275               	subwf	___aldiv@dividend+1,w
 11169  0A5A  1D03               	skipz
 11170  0A5B  2A5E               	goto	u296_25
 11171  0A5C  0870               	movf	___aldiv@divisor,w
 11172  0A5D  0274               	subwf	___aldiv@dividend,w
 11173  0A5E                     u296_25:	
 11174  0A5E  1C03               	skipc
 11175  0A5F  2A69               	goto	i1l2569
 11176  0A60  0870               	movf	___aldiv@divisor,w
 11177  0A61  02F4               	subwf	___aldiv@dividend,f
 11178  0A62  0871               	movf	___aldiv@divisor+1,w
 11179  0A63  3BF5               	subwfb	___aldiv@dividend+1,f
 11180  0A64  0872               	movf	___aldiv@divisor+2,w
 11181  0A65  3BF6               	subwfb	___aldiv@dividend+2,f
 11182  0A66  0873               	movf	___aldiv@divisor+3,w
 11183  0A67  3BF7               	subwfb	___aldiv@dividend+3,f
 11184  0A68  1422               	bsf	___aldiv@quotient,0
 11185  0A69                     i1l2569:	
 11186  0A69  3001               	movlw	1
 11187  0A6A                     u297_25:	
 11188  0A6A  36F3               	lsrf	___aldiv@divisor+3,f
 11189  0A6B  0CF2               	rrf	___aldiv@divisor+2,f
 11190  0A6C  0CF1               	rrf	___aldiv@divisor+1,f
 11191  0A6D  0CF0               	rrf	___aldiv@divisor,f
 11192  0A6E  0B89               	decfsz	9,f
 11193  0A6F  2A6A               	goto	u297_25
 11194  0A70  3001               	movlw	1
 11195  0A71  02A0               	subwf	___aldiv@counter,f
 11196  0A72  1D03               	btfss	3,2
 11197  0A73  2A49               	goto	i1l2561
 11198  0A74                     i1l2573:	
 11199  0A74  0821               	movf	___aldiv@sign,w
 11200  0A75  1903               	btfsc	3,2
 11201  0A76  2A82               	goto	i1l2577
 11202  0A77  09A2               	comf	___aldiv@quotient,f
 11203  0A78  09A3               	comf	___aldiv@quotient+1,f
 11204  0A79  09A4               	comf	___aldiv@quotient+2,f
 11205  0A7A  09A5               	comf	___aldiv@quotient+3,f
 11206  0A7B  0AA2               	incf	___aldiv@quotient,f
 11207  0A7C  1903               	skipnz
 11208  0A7D  0AA3               	incf	___aldiv@quotient+1,f
 11209  0A7E  1903               	skipnz
 11210  0A7F  0AA4               	incf	___aldiv@quotient+2,f
 11211  0A80  1903               	skipnz
 11212  0A81  0AA5               	incf	___aldiv@quotient+3,f
 11213  0A82                     i1l2577:	
 11214  0A82  0825               	movf	___aldiv@quotient+3,w
 11215  0A83  00F3               	movwf	?___aldiv+3
 11216  0A84  0824               	movf	___aldiv@quotient+2,w
 11217  0A85  00F2               	movwf	?___aldiv+2
 11218  0A86  0823               	movf	___aldiv@quotient+1,w
 11219  0A87  00F1               	movwf	?___aldiv+1
 11220  0A88  0822               	movf	___aldiv@quotient,w
 11221  0A89  00F0               	movwf	?___aldiv
 11222  0A8A  0008               	return
 11223  0A8B                     __end_of___aldiv:	
 11224  007E                     btemp	set	126	;btemp
 11225  007E                     int$flags	set	126
 11226  007E                     wtemp0	set	126


Data Sizes:
    Strings     71
    Constant    0
    Data        32
    BSS         75
    Persistent  43
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     32      64
    BANK1            80     80      80
    BANK2            80     16      70
    BANK3            80      0      32
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    puts@s	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_7(CODE[3]), hrDisp(BANK2[13]), distanceDisp(BANK2[11]), speedDisp(BANK2[8]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_6(CODE[10]), STR_5(CODE[10]), STR_4(CODE[9]), STR_3(CODE[14]), 
		 -> STR_2(CODE[13]), STR_1(CODE[12]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK2[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK3[32]), STR_7(CODE[3]), hrDisp(BANK2[13]), distanceDisp(BANK2[11]), 
		 -> speedDisp(BANK2[8]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S1000_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK2[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_6(CODE[10]), STR_5(CODE[10]), STR_4(CODE[9]), STR_3(CODE[14]), 
		 -> STR_2(CODE[13]), STR_1(CODE[12]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 14
		 -> STR_6(CODE[10]), STR_5(CODE[10]), STR_4(CODE[9]), STR_3(CODE[14]), 
		 -> STR_2(CODE[13]), STR_1(CODE[12]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 4
		 -> ?_printf(BANK2[2]), rpm(BANK2[4]), counter(BANK0[4]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK2[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK2[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    writeString@string	PTR unsigned char  size(1) Largest target is 13
		 -> hrDisp(BANK2[13]), distanceDisp(BANK2[11]), speedDisp(BANK2[8]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timerISR(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timerISR(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    IOCCF7_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> speedCalc(), IOCCF7_DefaultInterruptHandler(), 

    IOCCF7_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> speedCalc(), Absolute function(), IOCCF7_DefaultInterruptHandler(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _speedCalc->___flmul
    ___xxtofl->___lmul
    ___lmul->___aldiv
    ___flmul->__Umul8_16

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _IOCCF7_ISR->_speedCalc
    _speedCalc->___xxtofl
    ___xxtofl->___lmul
    ___lmul->___aldiv

Critical Paths under _main in BANK1

    _main->_printf
    _writeString->_puts
    _setCursor->_EUSART_Write
    _setCursor->_EUSART_is_tx_ready
    _resetCursor->_puts
    _puts->_fputs
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _abs->___aomod
    ___fltol->___fldiv
    ___awmod->___fltol
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCCF7_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_printf
    _printf->_vfprintf

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   22292
                                             14 BANK2      2     2      0
         _IOCCF7_SetInterruptHandler
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                            ___awmod
                            ___fldiv
                             ___flge
                            ___fltol
                             _printf
                        _resetCursor
                          _setCursor
                        _writeString
 ---------------------------------------------------------------------------------
 (1) _writeString                                          1     1      0    3558
                                             24 BANK1      1     1      0
                 _EUSART_is_tx_ready
                               _puts
 ---------------------------------------------------------------------------------
 (1) _setCursor                                            4     3      1     853
                                              1 BANK1      4     3      1
                       _EUSART_Write
                 _EUSART_is_tx_ready
 ---------------------------------------------------------------------------------
 (2) _EUSART_is_tx_ready                                   1     1      0      37
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _resetCursor                                          0     0      0    3382
                               _puts
 ---------------------------------------------------------------------------------
 (2) _puts                                                 5     3      2    3382
                                             19 BANK1      5     3      2
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (1) _printf                                              10     4      6    9313
                                             79 BANK1      1     1      0
                                              5 BANK2      9     3      6
                            ___fltol (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    8596
                                             76 BANK1      3     0      3
                                              0 BANK2      5     5      0
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    8149
                                             58 BANK1     18    16      2
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    6109
                                             28 BANK1     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    3878
                                             19 BANK1      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     166
                                              0 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 (3) _fputs                                                9     6      3    1914
                                             10 BANK1      9     6      3
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3    1210
                                              2 BANK1      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      62
                                              1 BANK1      1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             19 BANK1      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     613
                                              0 BANK1     19     3     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     625
                                              0 BANK1     27    11     16
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             11     7      4     877
                                             26 BANK1     11     7      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flge                                              12     4      8     626
                                              0 BANK1     12     4      8
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1863
                                              0 BANK1     26    18      8
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     613
                                             37 BANK1      7     3      4
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     785
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0     211
                                              2 BANK1      1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     211
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     211
         _IOCCF7_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCCF7_SetInterruptHandler                           2     0      2     211
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     363
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          0     0      0    5948
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                           _timerISR *
 ---------------------------------------------------------------------------------
 (12) _timerISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _PIN_MANAGER_IOC                                     0     0      0    5948
                         _IOCCF7_ISR
 ---------------------------------------------------------------------------------
 (12) _IOCCF7_ISR                                          0     0      0    5948
                   Absolute function *
     _IOCCF7_DefaultInterruptHandler *
                          _speedCalc *
 ---------------------------------------------------------------------------------
 (13) _speedCalc                                           4     4      0    5948
                                             28 BANK0      4     4      0
                            ___aldiv
                            ___fladd
                            ___flmul
                             ___lmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (14) ___xxtofl                                           14    10      4     398
                                             14 BANK0     14    10      4
                            ___aldiv (ARG)
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (14) ___lmul                                             12     4      8     244
                                              9 COMMON     4     4      0
                                              6 BANK0      8     0      8
                            ___aldiv (ARG)
 ---------------------------------------------------------------------------------
 (14) ___flmul                                            26    18      8    2569
                                              9 COMMON     5     5      0
                                              0 BANK0     21    13      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (15) __Umul8_16                                           9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (14) ___fladd                                            20    12      8    2262
                                              0 COMMON    12     4      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (14) ___aldiv                                            15     7      8     452
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (13) _IOCCF7_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _IOCCF7_SetInterruptHandler
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCCF7_SetInterruptHandler
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _TMR0_SetInterruptHandler
   ___awmod
     ___fltol (ARG)
       ___fldiv (ARG)
   ___fldiv
   ___flge
   ___fltol
     ___fldiv (ARG)
   _printf
     ___fltol (ARG)
       ___fldiv (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART_Write
             _fputs
               _fputc
                 _putch
                   _EUSART_Write
             _strlen
         _fputc
           _putch
             _EUSART_Write
   _resetCursor
     _puts
       _fputc
         _putch
           _EUSART_Write
       _fputs
         _fputc
           _putch
             _EUSART_Write
   _setCursor
     _EUSART_Write
     _EUSART_is_tx_ready
   _writeString
     _EUSART_is_tx_ready
     _puts
       _fputc
         _putch
           _EUSART_Write
       _fputs
         _fputc
           _putch
             _EUSART_Write

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
     _IOCCF7_ISR
       Absolute function(Fake) *
       _IOCCF7_DefaultInterruptHandler *
       _speedCalc *
         ___aldiv
         ___fladd
         ___flmul
           __Umul8_16
         ___lmul
           ___aldiv (ARG)
         ___xxtofl
           ___aldiv (ARG)
           ___lmul (ARG)
             ___aldiv (ARG)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _timerISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     20      40       5       80.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     50      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     10      46       9       87.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      20      11       40.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     104      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     104      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Apr 07 21:30:37 2019

                                 ___fldiv@aexp 00B9                                   ___fldiv@bexp 00B8  
                                 ___fldiv@sign 00B1                                    __CFG_CP$OFF 0000  
                                           l69 0802                                _timer0ReloadVal 005F  
                          __Umul8_16@word_mpld 0076                                            l373 08B0  
                                          l614 0D8F                                            l464 0952  
                                          l472 0EF5                                            l481 0FC1  
                                          l473 0EFC                                            l715 07D5  
                                          l627 0C98                                            l467 0972  
                                          l477 0F17                                            l478 0F2B  
                                          l692 09A8                                            l871 065A  
                                          l695 09F6                                            l892 0761  
                                          l893 0779                                            l895 0786  
                                          _abs 16F6                                            _pad 0937  
                                          _rpm 0158                 ?_EUSART_SetFramingErrorHandler 00A0  
                                 ___awmod@sign 00CB                                   __CFG_BORV$LO 0000  
                                          wreg 0009                                   __CFG_IESO$ON 0000  
                                 ___flmul@aexp 002D                                   ___flmul@bexp 002E  
       __end_of_IOCCF7_DefaultInterruptHandler 0003        __size_of_IOCCF7_DefaultInterruptHandler 0001  
               _IOCCF7_DefaultInterruptHandler 0002                                   ___flmul@sign 0028  
                                 ___flmul@temp 0033                                   ___flmul@prod 002F  
                                 __CFG_LVP$OFF 0000                                   __CFG_ZCD$OFF 0000  
                                 ___fltol@exp1 00C4                                           ?_abs 00B3  
                                         l4111 07C3                                           l4121 07E2  
                                         l4113 07D1                                           l4051 0909  
                                         l4043 0903                                           l4053 0915  
                                         l4061 092A                                           l4205 06E5  
                                         l4301 04F3                                           l4039 08FC  
                                         l4231 071E                                           l4223 06F0  
                                         l4207 06AE                                           l4143 062E  
                                         l4303 051C                                           l4065 0932  
                                         l4057 0921                                           l4225 0707  
                                         l4209 06EA                                           l4145 0636  
                                         l4313 05B8                                           l4235 0720  
                                         l4163 0652                                           l4139 062B  
                                         l4075 09C2                                           l4091 0795  
                                         l4245 0749                                           l4173 0679  
                                         l3701 0D6E                                           l3613 08DF  
                                         l4159 064F                                           l4079 09DC  
                                         l4095 079E                                           l3711 0BF7  
                                         l3615 08E8                                           l3609 08BC  
                                         l3625 17AA                                           l4259 0782  
                                         l4179 0685                                           l3723 0C2C  
                                         l3731 0C77                                           l3715 0C1F  
                                         l3627 17CB                                           l3635 1715  
                                         l4363 08A2                                           l4275 0477  
                                         l3725 0C3B                                           l3637 1721  
                                         l3645 0948                                           ?_pad 00B3  
                                         l4199 06CC                                           l3655 0954  
                                         l3831 0E53                                           l3823 0E23  
                                         l3815 0DE6                                           l4295 04B4  
                                         l3673 0CD6                                           l3729 0C6B  
                                         l3649 0950                                           l3753 0F26  
                                         l3841 0E7A                                           l3691 0D29  
                                         l3659 0981                                           l3747 0F0F  
                                         l3835 0E57                                           l3851 0E8A  
                                         l3677 0CFE                                           l3757 0F58  
                                         l3845 0E80                                           l3679 0D03  
                                         l3767 0F33                                           l3775 0FCD  
                                         l3951 084A                                           l3689 0D1A  
                                         l3785 0FE0                                           l3953 086B  
                                         l3699 0D62                                           l3779 0FD5  
                                         l3971 088A                                           l3963 0876  
                                         l3789 0FED                                           l3877 169E  
                                         l3973 088F                                           l3975 0894  
                                         l3969 0885                                           l3979 0899  
                                         l3989 16CB                                           STR_1 181B  
                                         STR_2 180E                                           STR_3 1800  
                                         STR_4 183B                                           STR_5 1827  
                                         STR_6 1831                                           STR_7 1844  
                                         _LATA 010C                                           _LATB 010D  
                                         _LATC 010E                                           u5000 0ECB  
                                         u5010 0ECC                                           u5105 0F47  
                                         u5115 0F53                                           u5055 0F07  
                                         u5085 0FCB                                           u5505 07C4  
                                         u5355 090C                                           u4715 08DD  
                                         u4830 0D0B                                           u5375 091B  
                                         u5535 07D9                                           u5385 0922  
                                         u5475 07A7                                           u5725 06F3  
                                         u4765 095E                                           u5815 0737  
                                         u5655 06B6                                           u5825 0752  
                                         u5745 06FC                                           u5665 06BD  
                                         u4865 0D4F                                           u4785 1700  
                                         u5835 076B                                           u5907 16DA  
                                         u5685 06C6                                           u4965 0C59  
                                         u5917 0881                                           u5695 06DA  
                                         u5897 046B                                           _TMR0 0015  
                                         _WPUA 020C                                           _WPUB 020D  
                                         _WPUC 020E                                   __CFG_WRT$OFF 0000  
                                __CFG_FCMEN$ON 0000                                           abs@a 00B3  
                                         _dbuf 01A0                                           _main 0452  
                                         _dtoa 0EAF                                           _prec 004C  
                                         _nout 0048                                           pad@i 00B7  
                                         pad@p 00B4                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           pad@w 00B9  
                                         btemp 007E                                           _puts 1728  
                                __CFG_BOREN$ON 0000                                           start 0014  
                              ___fldiv@new_exp 00B2                                  __CFG_MCLRE$ON 0000  
                                        ??_abs 00B5                                          ??_pad 00B6  
                      __end_of_TMR0_Initialize 16F6                 ??_TMR0_DefaultInterruptHandler 0070  
                                ?_EUSART_Write 0070                 __size_of_OSCILLATOR_Initialize 0007  
                __end_of_OSCILLATOR_Initialize 1645                            __size_of_IOCCF7_ISR 000D  
                                ___fltol@sign1 00C3                                __end_of___aldiv 0A8B  
                              __end_of___aodiv 0DA1                                __end_of___fladd 0452  
                                        ?_main 0070                                          ?_dtoa 00BC  
                              __end_of___aomod 0CAA                                __end_of___fldiv 078B  
                                __CFG_WDTE$OFF 0000                                __end_of___awmod 0937  
                              __end_of___flmul 0269                                __end_of___fltol 07F1  
                                        ?_puts 00B3                                          i1l240 0012  
                                        i1l236 000D                                          i1l821 032C  
                                        i1l815 02B6                                          i1l579 0A1A  
                                        i1l819 034A                                          i1l923 025C  
                                        i1l836 03D0                                          i1l857 0449  
                                        i1l849 0430                                          i1l962 0AF3  
                                        i1l963 0AFD                                          i1l955 0ADF  
                                        i1l949 0AA9                                   vfpfcnvrt@fmt 00DA  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TRISC 008E                                    _writeString 16C9  
            __size_of_TMR0_SetInterruptHandler 0009                            ___lmul@multiplicand 002A  
                    ?_TMR0_SetInterruptHandler 00A0                               __end_of_TMR0_ISR 0800  
                      __end_of_PIN_MANAGER_IOC 162C                                          _hrInt 0050  
                                        _flags 004E                                          _fputc 08B1  
                                        _fputs 17A7                                          _speed 0044  
                                        pad@fp 00BB                                          _width 004A  
                                        _putch 162C                                          dtoa@d 00BC  
                                        dtoa@i 00D8                                          dtoa@n 00D0  
                                        dtoa@p 00CA                                          dtoa@s 00CE  
                                        dtoa@w 00CC                                          pclath 000A  
                                        puts@s 00B3                                          status 0003  
                                        wtemp0 007E                                __initialization 0016  
                                 __end_of_main 0611                                   __end_of_dtoa 1000  
                                 __end_of_puts 1743                                 ??_EUSART_Write 00A0  
                               __CFG_LPBOR$OFF 0000                    ?_INTERRUPT_InterruptManager 0070  
                                       ??_main 014E                                         ??_dtoa 00C4  
                                       ??_puts 00B5                                 __CFG_PLLEN$OFF 0000  
            _EUSART_DefaultFramingErrorHandler 0000                     _EUSART_OverrunErrorHandler 0162  
                                       ?_fputc 00A2                                         ?_fputs 00AA  
                                       _ANSELA 018C                                         ?_putch 0070  
                                       _ANSELB 018D                                         _ANSELC 018E  
                 ??_IOCCF7_SetInterruptHandler 00A2                                         _BORCON 0116  
                                       _RC1REG 0199                                         _RC1STA 019D  
                                       i1l1017 1753                                         _RB7PPS 0E9F  
                                       _ODCONA 028C                                         _ODCONB 028D  
                                       _ODCONC 028E                                         i1l3109 1690  
                                       i1l2601 028E                                         i1l2533 17E3  
                                       i1l2551 0A2B                                         i1l2703 037D  
                                       i1l2623 02AE                                         i1l2561 0A49  
                                       i1l2721 03E2                                         i1l2713 03C8  
                                       i1l2529 17D8                                         i1l2619 02AB  
                                       i1l2459 174D                                         i1l2811 0084  
                                       i1l2573 0A74                                         i1l2629 02C0  
                                       i1l2559 0A3B                                         i1l2743 0401  
                                       i1l2735 03F6                                         i1l2903 0249  
                                       i1l2807 007A                                         i1l2577 0A82  
                                       i1l2569 0A69                                         i1l2729 03EF  
                                       i1l2737 03F8                                         i1l2809 007C  
                                       i1l2921 0AA1                                         i1l2747 0403  
                                       i1l2667 0335                                         i1l2659 02FC  
                                       i1l2595 0283                                         i1l2819 0092  
                                       i1l2931 0ABC                                         i1l2765 0440  
                                       i1l2693 036B                                         i1l2685 0358  
                                       i1l2669 0337                                         i1l2677 0346  
                                       i1l2941 0AF1                                         i1l2933 0ACC  
                                       i1l2695 036D                                         i1l2599 0286  
                                       i1l2871 01C4                                         i1l2791 0059  
                                       i1l2943 0AE4                                         i1l2927 0AB8  
                                       i1l2769 0444                                         i1l2873 01DB  
                                       i1l2793 0061                                         i1l2883 01F4  
                                       i1l2955 0B18                                         i1l2893 021D  
                                       i1l2789 0057                                         i1l2879 01F2  
                                       i1l2897 0232                                         u310_20 031A  
                                       u311_20 031B                                         u321_25 0372  
                                       u322_23 0390                                         u314_25 033C  
                   __end_of_EUSART_is_tx_ready 16A1                                         u309_25 0310  
                                       u326_25 03E3                                         u351_25 0108  
                                       u336_25 041B                                         u352_25 0137  
                                       u353_25 018D                                         u354_25 01A4  
                                       u355_25 01B3                                         u268_25 1754  
                                       u356_25 01C7                                         u380_25 0B05  
                                       u372_25 0AC5                                         u293_25 0A3E  
                                       u365_25 020B                                         u366_25 0226  
                                       u358_25 01D0                                         u374_25 0AD9  
                                       u295_25 0A4A                                         u367_25 023C  
                                       u287_25 17E4                                         u296_25 0A5E  
                                       u288_25 17EB                                         u376_25 0AEB  
                                       u297_25 0A6A                                         _OSCCON 0099  
                                       _SPBRGH 019C                                         _SPBRGL 019B  
                                       _TX1REG 019A                                         _TX1STA 019E  
                                 ?_resetCursor 0070                                         u480lld 0CD3  
                                       u491lld 0BF4                               __end_of___xxtofl 0B21  
                               __CFG_PWRTE$OFF 0000                                   vfprintf@cfmt 0143  
                                       ___flge 098D                                         ___lmul 17D0  
                                    ??___aldiv 0078                                      ??___aodiv 00B0  
                                    ??___fladd 0020                                      ??___aomod 00B0  
                                    ??___fldiv 00A8                                 __CFG_STVREN$ON 0000  
                                    ??___awmod 00C9                                      ??___flmul 0079  
                                    ??___fltol 00BE                                         _hrDisp 0120  
                                       _distHi 0056                                         _distLo 0054  
                             ?_TMR0_Initialize 0070                                ___awmod@divisor 00C5  
                              ___awmod@counter 00CA                                         _printf 16B4  
                                       pad@buf 00B3                                         dtoa@fp 00C9  
                                       _strlen 170F            __size_of_IOCCF7_SetInterruptHandler 0009  
                                       fputc@c 00A2                                         fputs@c 00B0  
                                       fputs@i 00B1                                         fputs@s 00AA  
                           __size_of__Umul8_16 001F                               __end_of_timerISR 16B4  
                             __end_of_vfprintf 0874       TMR0_SetInterruptHandler@InterruptHandler 00A0  
   IOCCF7_SetInterruptHandler@InterruptHandler 00A0                               ?_PIN_MANAGER_IOC 0070  
                                 ??_IOCCF7_ISR 007E                                     ___flge@ff1 00A0  
                                   ___flge@ff2 00A4                                   ___xxtofl@arg 0038  
                                 ___xxtofl@exp 0037                              _SYSTEM_Initialize 167A  
                                 ___xxtofl@val 002E                        __end_of__initialization 0039  
                                   _adcCounter 0154                             ?_SYSTEM_Initialize 0070  
                                   ___fltol@f1 00BA                                 __pcstackCOMMON 0070  
                                 __pidataBANK2 1762                            ??_SYSTEM_Initialize 00A3  
                                    ?_TMR0_ISR 0070                                  __end_of_fputc 08F1  
                                __end_of_fputs 17D0                                  __end_of_putch 1632  
                           __end_of_IOCCF7_ISR 1693                                 _OPTION_REGbits 0095  
              ??_EUSART_SetOverrunErrorHandler 00A2                                        ??_fputc 00A5  
                    __end_of_SYSTEM_Initialize 1686                                        ??_fputs 00AD  
                                      ??_putch 00A1                                     __pbssBANK0 0040  
                                   __pbssBANK2 0150                                     __pbssBANK3 01A0  
                         __end_of_EUSART_Write 080A                              __end_of__Umul8_16 1762  
                                   __pmaintext 0452                                        ?___flge 00A0  
             __end_of_TMR0_SetInterruptHandler 167A                                        ?___lmul 0026  
                                   ??_TMR0_ISR 0070                                __CFG_PPS1WAY$ON 0000  
                           __size_of_setCursor 003D                                     __pintentry 0004  
                               ___lmul@product 0079                                        ?_printf 0145  
                                      ?_strlen 00A0                             __size_of_speedCalc 00AA  
                              __CFG_WDTCCS$SWC 0000                                      ?___xxtofl 002E  
                                 ?_writeString 0070                             __size_of_vfpfcnvrt 010E  
                                      _OSCTUNE 0098                                        _SLRCONA 030C  
                                      _SLRCONB 030D                                        _SLRCONC 030E  
           __end_of_IOCCF7_SetInterruptHandler 1671                     _IOCCF7_SetInterruptHandler 1668  
                     ??_EUSART_SetErrorHandler 00A2                           __size_of_resetCursor 0008  
                                    ?_timerISR 0070                                        ___aldiv 0A09  
                              __size_of___flge 007C                                        ___aodiv 0CAA  
                                      ___fladd 0269                                        ___aomod 0BCB  
                                      ___fldiv 0611                                __size_of___lmul 0030  
                                      ___awmod 08F1                                        ___flmul 003D  
                                      ___fltol 078B                                      ?_vfprintf 00EC  
                                      __ptext1 16C9                                        __ptext2 0874  
                                      __ptext3 1693                                        __ptext4 1645  
                                      __ptext5 1728                                        __ptext6 16B4  
                                      __ptext7 083D                                        __ptext8 0DA1  
                                      __ptext9 0EAF                                __size_of_printf 0015  
                              __size_of_strlen 0019                                        _counter 005B  
                        _OSCILLATOR_Initialize 163E                                   __size_of_abs 0019  
                                 __size_of_pad 0056                                     ??___xxtofl 0032  
                             ___awmod@dividend 00C7                               ___aldiv@dividend 0074  
                     ??_PIN_MANAGER_Initialize 00A2                                      _IOCCFbits 0399  
                                    _IOCCNbits 0398                                        _speedLo 0052  
                                    _IOCCPbits 0397                     __size_of_SYSTEM_Initialize 000C  
                                      clrloop0 1633                           end_of_initialization 0039  
                            __end_of_setCursor 08B1          __end_of_EUSART_SetOverrunErrorHandler 1668  
       __size_of_EUSART_SetOverrunErrorHandler 0009                  _EUSART_SetOverrunErrorHandler 165F  
                                      fputc@fp 00A4                                        init_ram 1638  
                                      fputs@fp 00AC                                        initloop 1639  
                            __end_of_speedCalc 0BCB                              _EUSART_Initialize 1782  
                           ?_EUSART_Initialize 0070                              __end_of_vfpfcnvrt 0EAF  
                                   ??_timerISR 0070                               ___aldiv@quotient 0022  
                           _EUSART_is_tx_ready 1693                                     ??_vfprintf 0140  
                                      strlen@a 00A3                                        strlen@s 00A4  
                          ??_EUSART_Initialize 00A2                                   _distanceDisp 012D  
                     _TMR0_SetInterruptHandler 1671                            ?_EUSART_is_tx_ready 0070  
                                  ___fladd@grs 007B                               __CFG_FOSC$INTOSC 0000  
                                ___xxtofl@sign 0036                          __size_of_EUSART_Write 000A  
                                  ___fldiv@grs 00B4                                    ___fldiv@rem 00AD  
              __size_of_EUSART_SetErrorHandler 0009                                    ___flmul@grs 0029  
                    __end_of_EUSART_Initialize 17A7                           ??_EUSART_is_tx_ready 00A0  
                               _speedCalc$1227 003C                                 __end_of___flge 0A09  
                               __end_of___lmul 1800                     _EUSART_DefaultErrorHandler 0000  
                                  vfpfcnvrt@ap 00DB                                    vfpfcnvrt@fp 00EB  
                                  vfpfcnvrt@ll 00E1                                    vfpfcnvrt@vp 00E9  
                                 _EUSART_Write 0800                              __size_of_TMR0_ISR 000F  
                       ?_OSCILLATOR_Initialize 0070                              writeString@string 00B8  
                               __end_of_printf 16C9                                 __end_of_strlen 1728  
                          start_initialization 0016                       __size_of_TMR0_Initialize 0018  
              __size_of_PIN_MANAGER_Initialize 0033                                    __end_of_abs 170F  
                                  __end_of_pad 098D                           __size_of_writeString 0015  
                       _EUSART_is_tx_ready$167 00A0                                    putch@txData 00A1  
                     __size_of_PIN_MANAGER_IOC 0006                 ?_EUSART_SetOverrunErrorHandler 00A0  
                                  vfprintf@fmt 00EC                     _EUSART_FramingErrorHandler 0164  
                                     ??___flge 00A8                                       ??___lmul 0079  
                       _EUSART_SetErrorHandler 164D                                      __Umul8_16 1743  
                                  __pdataBANK2 0120                                       ??_printf 00EF  
                                     ??_strlen 00A2                                      ___fladd@a 0074  
                                    ___fladd@b 0070                                      ___fldiv@a 00A0  
                                    ___fldiv@b 00A4                                      ___flmul@a 0024  
                                    ___flmul@b 0020                                      ___latbits 0002  
                                __pcstackBANK0 0020                                  __pcstackBANK1 00A0  
                                __pcstackBANK2 0140                               ___aodiv@dividend 00A8  
                            __size_of___xxtofl 0096                    ?_IOCCF7_SetInterruptHandler 00A0  
                   __size_of_EUSART_Initialize 0025                          _TMR0_InterruptHandler 015C  
                                    __pnvBANK0 005F                                      __pnvBANK2 015C  
                       _PIN_MANAGER_Initialize 080A                                       ?___aldiv 0070  
                                     ?___aodiv 00A0                                       ?___fladd 0070  
                                     ?___aomod 00A0                                       ?___fldiv 00A0  
                             ___aodiv@quotient 00B3                                       ?___awmod 00C5  
                                     ?___flmul 0020                                       ?___fltol 00BA  
                                    _heartRate 0150                                     ?__Umul8_16 0070  
                                   setCursor@a 00A4                                     setCursor@b 00A1  
                            __size_of_timerISR 0013                   ??_INTERRUPT_InterruptManager 007E  
                            __size_of_vfprintf 0037                                       _BAUD1CON 019F  
                               __size_of_fputc 0040                                 __size_of_fputs 0029  
                               __size_of_putch 0006                                ___aldiv@divisor 0070  
                            ??_TMR0_Initialize 00A2                                  ??_resetCursor 00B8  
                              ___aldiv@counter 0020         EUSART_SetErrorHandler@interruptHandler 00A0  
                                    _setCursor 0874                                      clear_ram0 1632  
                            _eusartRxLastError 005A            __size_of_INTERRUPT_InterruptManager 0010  
                   ??_TMR0_SetInterruptHandler 00A2                                       _PIR1bits 0010  
              ??_EUSART_SetFramingErrorHandler 00A2                                      _puts$1046 00B7  
                                    _speedCalc 0B21                                      _speedDisp 0138  
             ??_IOCCF7_DefaultInterruptHandler 0070                ?_IOCCF7_DefaultInterruptHandler 0070  
                         __CFG_WDTCPS$WDTCPS1F 0000                                       _TMR0_ISR 07F1  
            _EUSART_DefaultOverrunErrorHandler 0000                              ??_PIN_MANAGER_IOC 007E  
                                    _vfpfcnvrt 0DA1                              ___lmul@multiplier 0026  
                                   ?_setCursor 00A1                                     vfprintf@ap 00EE  
                                   vfprintf@fp 0142                            __end_of_resetCursor 164D  
                                   ?_speedCalc 0070                        ??_OSCILLATOR_Initialize 00A0  
                                  ??__Umul8_16 0072                            _EUSART_ErrorHandler 0160  
                             __size_of___aldiv 0082                               __size_of___aodiv 00F7  
                             __size_of___fladd 01E9                               __size_of___aomod 00DF  
                             __size_of___fldiv 017A                               __size_of___awmod 0046  
                             __size_of___flmul 022C                               __size_of___fltol 0066  
                                   ?_vfpfcnvrt 00DA                                ___aodiv@divisor 00A0  
                              ___aodiv@counter 00B1                                       ___xxtofl 0A8B  
                                     _dtoa$700 00C7                                       __ptext10 0937  
                                     __ptext11 170F                                       __ptext20 098D  
                                     __ptext12 17A7                                       __ptext21 0611  
                                     __ptext13 08B1                                       __ptext30 165F  
                                     __ptext22 08F1                                       __ptext14 162C  
                                     __ptext31 1656                                       __ptext23 167A  
                                     __ptext15 0800                                       __ptext40 0B21  
                                     __ptext32 164D                                       __ptext24 16DE  
                                     __ptext16 16F6                                       __ptext41 0A8B  
                                     __ptext25 1671                                       __ptext17 0BCB  
                                     __ptext42 17D0                                       __ptext34 07F1  
                                     __ptext26 080A                                       __ptext18 0CAA  
                                     __ptext43 003D                                       __ptext35 0003  
                                     __ptext27 1668                                       __ptext19 078B  
                                     __ptext44 1743                                       __ptext36 16A1  
                                     __ptext28 163E                                       __ptext45 0269  
                                     __ptext37 1626                                       __ptext29 1782  
                                     __ptext46 0A09                                       __ptext38 1686  
                                     __ptext39 0002                                       _distance 0040  
                                   _IOCCF7_ISR 1686                                  __size_of_main 01BF  
                                __size_of_dtoa 0151                                  __size_of_puts 001B  
                  __size_of_EUSART_is_tx_ready 000E           __end_of_TMR0_DefaultInterruptHandler 0004  
        __size_of_TMR0_DefaultInterruptHandler 0001                   _TMR0_DefaultInterruptHandler 0003  
                         __CFG_WDTCWS$WDTCWSSW 0000                        ?_EUSART_SetErrorHandler 00A0  
                                   _RC1STAbits 019D  EUSART_SetOverrunErrorHandler@interruptHandler 00A0  
                                     _timerISR 16A1                                       _speedInt 0058  
                                     int$flags 007E                                       _vfprintf 083D  
           __end_of_INTERRUPT_InterruptManager 0014                     _INTERRUPT_InterruptManager 0004  
                                    printf@fmt 0145          __end_of_EUSART_SetFramingErrorHandler 165F  
       __size_of_EUSART_SetFramingErrorHandler 0009                  _EUSART_SetFramingErrorHandler 1656  
                             ___aomod@dividend 00A8                                  ??_writeString 00B8  
                                   _INTCONbits 000B                                       intlevel1 0000  
                      ?_PIN_MANAGER_Initialize 0070                                    _resetCursor 1645  
               __end_of_EUSART_SetErrorHandler 1656                                    ??_setCursor 00A2  
                            __CFG_CLKOUTEN$OFF 0000                  ?_TMR0_DefaultInterruptHandler 0070  
                                  ??_speedCalc 007E                                       printf@ap 014D  
EUSART_SetFramingErrorHandler@interruptHandler 00A0                                ___aomod@divisor 00A0  
                                  ??_vfpfcnvrt 00DC                                ___aomod@counter 00B1  
                                __pstringtext1 1800                                  __pstringtext2 180E  
                                __pstringtext3 181B                                  __pstringtext4 1827  
                                __pstringtext5 1831                                  __pstringtext6 183B  
                                __pstringtext7 1844                                  __pstringtext8 0000  
                       __Umul8_16@multiplicand 0070                                     _OPTION_REG 0095  
                              _TMR0_Initialize 16DE                                   ___aldiv@sign 0021  
                                   _TX1STAbits 019E                                  ___fladd@signs 0078  
                           EUSART_Write@txData 00A0                            __end_of_writeString 16DE  
                                 ___aodiv@sign 00B2                 __end_of_PIN_MANAGER_Initialize 083D  
                                  ?_IOCCF7_ISR 0070                                   ___fladd@aexp 0079  
                                 ___fladd@bexp 007A                                _PIN_MANAGER_IOC 1626  
                         __Umul8_16@multiplier 0078                                   ___aomod@sign 00B2  
                      _IOCCF7_InterruptHandler 015E                              __Umul8_16@product 0074  
