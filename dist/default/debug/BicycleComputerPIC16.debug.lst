

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Apr 13 13:02:01 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1619
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	idataBANK3,global,class=CODE,delta=2
     7                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
     8                           	psect	stringtext1,global,class=STRCODE,delta=2
     9                           	psect	stringtext2,global,class=STRCODE,delta=2
    10                           	psect	stringtext3,global,class=STRCODE,delta=2
    11                           	psect	stringtext4,global,class=STRCODE,delta=2
    12                           	psect	stringtext5,global,class=STRCODE,delta=2
    13                           	psect	stringtext6,global,class=STRCODE,delta=2
    14                           	psect	cinit,global,class=CODE,merge=1,delta=2
    15                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    18                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    19                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    20                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    21                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    22                           	psect	inittext,global,class=CODE,delta=2
    23                           	psect	clrtext,global,class=CODE,delta=2
    24                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    25                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    26                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    27                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    28                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    29                           	psect	text1,local,class=CODE,merge=1,delta=2
    30                           	psect	text2,local,class=CODE,merge=1,delta=2
    31                           	psect	text3,local,class=CODE,merge=1,delta=2
    32                           	psect	text4,local,class=CODE,merge=1,delta=2
    33                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text7,local,class=CODE,merge=1,delta=2
    36                           	psect	text8,local,class=CODE,merge=1,delta=2
    37                           	psect	text9,local,class=CODE,merge=1,delta=2
    38                           	psect	text10,local,class=CODE,merge=1,delta=2
    39                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text14,local,class=CODE,merge=1,delta=2
    43                           	psect	text15,local,class=CODE,merge=1,delta=2
    44                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    46                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    47                           	psect	text19,local,class=CODE,merge=1,delta=2
    48                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    49                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    50                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    51                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    52                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    53                           	psect	text25,local,class=CODE,merge=1,delta=2
    54                           	psect	text26,local,class=CODE,merge=1,delta=2
    55                           	psect	text27,local,class=CODE,merge=1,delta=2
    56                           	psect	text28,local,class=CODE,merge=1,delta=2
    57                           	psect	text29,local,class=CODE,merge=1,delta=2
    58                           	psect	text30,local,class=CODE,merge=1,delta=2
    59                           	psect	text31,local,class=CODE,merge=1,delta=2
    60                           	psect	text32,local,class=CODE,merge=1,delta=2
    61                           	psect	text33,local,class=CODE,merge=1,delta=2
    62                           	psect	text34,local,class=CODE,merge=1,delta=2
    63                           	psect	text35,local,class=CODE,merge=1,delta=2
    64                           	psect	text36,local,class=CODE,merge=1,delta=2
    65                           	psect	intentry,global,class=CODE,delta=2
    66                           	psect	text38,local,class=CODE,merge=1,delta=2
    67                           	psect	text39,local,class=CODE,merge=1,delta=2
    68                           	psect	text40,local,class=CODE,merge=1,delta=2
    69                           	psect	text41,local,class=CODE,merge=1,delta=2,group=1
    70                           	psect	text42,local,class=CODE,merge=1,delta=2
    71                           	psect	text43,local,class=CODE,merge=1,delta=2
    72                           	psect	text44,local,class=CODE,merge=1,delta=2
    73                           	psect	text45,local,class=CODE,merge=1,delta=2
    74                           	psect	text46,local,class=CODE,merge=1,delta=2
    75                           	psect	text47,local,class=CODE,merge=1,delta=2,group=1
    76                           	psect	text48,local,class=CODE,merge=1,delta=2,group=1
    77                           	psect	text49,local,class=CODE,merge=1,delta=2,group=1
    78                           	psect	text50,local,class=CODE,merge=1,delta=2,group=1
    79                           	psect	text51,local,class=CODE,merge=1,delta=2,group=1
    80                           	dabs	1,0x7E,2
    81  0000                     
    82                           ; Version 2.05
    83                           ; Generated 20/12/2018 GMT
    84                           ; 
    85                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    86                           ; All rights reserved.
    87                           ; 
    88                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    89                           ; 
    90                           ; Redistribution and use in source and binary forms, with or without modification, are
    91                           ; permitted provided that the following conditions are met:
    92                           ; 
    93                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    94                           ;        conditions and the following disclaimer.
    95                           ; 
    96                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    97                           ;        of conditions and the following disclaimer in the documentation and/or other
    98                           ;        materials provided with the distribution.
    99                           ; 
   100                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   101                           ;        software without specific prior written permission.
   102                           ; 
   103                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   104                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   105                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   106                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   107                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   108                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   109                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   110                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   111                           ; 
   112                           ; 
   113                           ; Code-generator required, PIC16F1619 Definitions
   114                           ; 
   115                           ; SFR Addresses
   116  0000                     	;# 
   117  0001                     	;# 
   118  0002                     	;# 
   119  0003                     	;# 
   120  0004                     	;# 
   121  0005                     	;# 
   122  0006                     	;# 
   123  0007                     	;# 
   124  0008                     	;# 
   125  0009                     	;# 
   126  000A                     	;# 
   127  000B                     	;# 
   128  000C                     	;# 
   129  000D                     	;# 
   130  000E                     	;# 
   131  0010                     	;# 
   132  0011                     	;# 
   133  0012                     	;# 
   134  0013                     	;# 
   135  0014                     	;# 
   136  0015                     	;# 
   137  0016                     	;# 
   138  0016                     	;# 
   139  0017                     	;# 
   140  0018                     	;# 
   141  0019                     	;# 
   142  001A                     	;# 
   143  001A                     	;# 
   144  001B                     	;# 
   145  001B                     	;# 
   146  001C                     	;# 
   147  001D                     	;# 
   148  001E                     	;# 
   149  001F                     	;# 
   150  008C                     	;# 
   151  008D                     	;# 
   152  008E                     	;# 
   153  0090                     	;# 
   154  0091                     	;# 
   155  0092                     	;# 
   156  0093                     	;# 
   157  0094                     	;# 
   158  0095                     	;# 
   159  0096                     	;# 
   160  0098                     	;# 
   161  0099                     	;# 
   162  009A                     	;# 
   163  009B                     	;# 
   164  009B                     	;# 
   165  009C                     	;# 
   166  009D                     	;# 
   167  009E                     	;# 
   168  009F                     	;# 
   169  010C                     	;# 
   170  010D                     	;# 
   171  010E                     	;# 
   172  0111                     	;# 
   173  0112                     	;# 
   174  0113                     	;# 
   175  0114                     	;# 
   176  0115                     	;# 
   177  0116                     	;# 
   178  0117                     	;# 
   179  0118                     	;# 
   180  0119                     	;# 
   181  011C                     	;# 
   182  018C                     	;# 
   183  018D                     	;# 
   184  018E                     	;# 
   185  0191                     	;# 
   186  0191                     	;# 
   187  0192                     	;# 
   188  0193                     	;# 
   189  0193                     	;# 
   190  0194                     	;# 
   191  0195                     	;# 
   192  0196                     	;# 
   193  0197                     	;# 
   194  0199                     	;# 
   195  0199                     	;# 
   196  0199                     	;# 
   197  019A                     	;# 
   198  019A                     	;# 
   199  019A                     	;# 
   200  019B                     	;# 
   201  019B                     	;# 
   202  019B                     	;# 
   203  019B                     	;# 
   204  019B                     	;# 
   205  019C                     	;# 
   206  019C                     	;# 
   207  019C                     	;# 
   208  019D                     	;# 
   209  019D                     	;# 
   210  019D                     	;# 
   211  019E                     	;# 
   212  019E                     	;# 
   213  019E                     	;# 
   214  019F                     	;# 
   215  019F                     	;# 
   216  019F                     	;# 
   217  019F                     	;# 
   218  019F                     	;# 
   219  020C                     	;# 
   220  020D                     	;# 
   221  020E                     	;# 
   222  0211                     	;# 
   223  0211                     	;# 
   224  0212                     	;# 
   225  0212                     	;# 
   226  0213                     	;# 
   227  0213                     	;# 
   228  0214                     	;# 
   229  0214                     	;# 
   230  0215                     	;# 
   231  0215                     	;# 
   232  0215                     	;# 
   233  0215                     	;# 
   234  0216                     	;# 
   235  0216                     	;# 
   236  0217                     	;# 
   237  0217                     	;# 
   238  028C                     	;# 
   239  028D                     	;# 
   240  028E                     	;# 
   241  0291                     	;# 
   242  0291                     	;# 
   243  0292                     	;# 
   244  0293                     	;# 
   245  0294                     	;# 
   246  0298                     	;# 
   247  0298                     	;# 
   248  0299                     	;# 
   249  029A                     	;# 
   250  029B                     	;# 
   251  029E                     	;# 
   252  030C                     	;# 
   253  030D                     	;# 
   254  030E                     	;# 
   255  038C                     	;# 
   256  038D                     	;# 
   257  038E                     	;# 
   258  0391                     	;# 
   259  0392                     	;# 
   260  0393                     	;# 
   261  0394                     	;# 
   262  0395                     	;# 
   263  0396                     	;# 
   264  0397                     	;# 
   265  0398                     	;# 
   266  0399                     	;# 
   267  040E                     	;# 
   268  0413                     	;# 
   269  0413                     	;# 
   270  0414                     	;# 
   271  0414                     	;# 
   272  0415                     	;# 
   273  0416                     	;# 
   274  0417                     	;# 
   275  0418                     	;# 
   276  041A                     	;# 
   277  041A                     	;# 
   278  041B                     	;# 
   279  041B                     	;# 
   280  041C                     	;# 
   281  041D                     	;# 
   282  041E                     	;# 
   283  041F                     	;# 
   284  0493                     	;# 
   285  0494                     	;# 
   286  0495                     	;# 
   287  0496                     	;# 
   288  049A                     	;# 
   289  049B                     	;# 
   290  049C                     	;# 
   291  049D                     	;# 
   292  058C                     	;# 
   293  058C                     	;# 
   294  058D                     	;# 
   295  058E                     	;# 
   296  058E                     	;# 
   297  058F                     	;# 
   298  0590                     	;# 
   299  0590                     	;# 
   300  0591                     	;# 
   301  0592                     	;# 
   302  0592                     	;# 
   303  0593                     	;# 
   304  0594                     	;# 
   305  0594                     	;# 
   306  0595                     	;# 
   307  0596                     	;# 
   308  0596                     	;# 
   309  0597                     	;# 
   310  0598                     	;# 
   311  0599                     	;# 
   312  059A                     	;# 
   313  059B                     	;# 
   314  059B                     	;# 
   315  059C                     	;# 
   316  059D                     	;# 
   317  060C                     	;# 
   318  060C                     	;# 
   319  060D                     	;# 
   320  060E                     	;# 
   321  060F                     	;# 
   322  060F                     	;# 
   323  0610                     	;# 
   324  0611                     	;# 
   325  0612                     	;# 
   326  0613                     	;# 
   327  0614                     	;# 
   328  0617                     	;# 
   329  0617                     	;# 
   330  0618                     	;# 
   331  0619                     	;# 
   332  061A                     	;# 
   333  061A                     	;# 
   334  061B                     	;# 
   335  061C                     	;# 
   336  0691                     	;# 
   337  0692                     	;# 
   338  0693                     	;# 
   339  0694                     	;# 
   340  0695                     	;# 
   341  0696                     	;# 
   342  0697                     	;# 
   343  0699                     	;# 
   344  069A                     	;# 
   345  0711                     	;# 
   346  0712                     	;# 
   347  0713                     	;# 
   348  0714                     	;# 
   349  0715                     	;# 
   350  0718                     	;# 
   351  0718                     	;# 
   352  0719                     	;# 
   353  071A                     	;# 
   354  071A                     	;# 
   355  071B                     	;# 
   356  071C                     	;# 
   357  071D                     	;# 
   358  0791                     	;# 
   359  0791                     	;# 
   360  0792                     	;# 
   361  0793                     	;# 
   362  0793                     	;# 
   363  0794                     	;# 
   364  0795                     	;# 
   365  0795                     	;# 
   366  0796                     	;# 
   367  0797                     	;# 
   368  0797                     	;# 
   369  0798                     	;# 
   370  0799                     	;# 
   371  079A                     	;# 
   372  080C                     	;# 
   373  080C                     	;# 
   374  080D                     	;# 
   375  080E                     	;# 
   376  080E                     	;# 
   377  080F                     	;# 
   378  0810                     	;# 
   379  0810                     	;# 
   380  0811                     	;# 
   381  0812                     	;# 
   382  0812                     	;# 
   383  0813                     	;# 
   384  0814                     	;# 
   385  0815                     	;# 
   386  0816                     	;# 
   387  0817                     	;# 
   388  0818                     	;# 
   389  0819                     	;# 
   390  081A                     	;# 
   391  081A                     	;# 
   392  081B                     	;# 
   393  081C                     	;# 
   394  081C                     	;# 
   395  081D                     	;# 
   396  088C                     	;# 
   397  088D                     	;# 
   398  088E                     	;# 
   399  088F                     	;# 
   400  088F                     	;# 
   401  0890                     	;# 
   402  0891                     	;# 
   403  0892                     	;# 
   404  0893                     	;# 
   405  0893                     	;# 
   406  0894                     	;# 
   407  0895                     	;# 
   408  0896                     	;# 
   409  0897                     	;# 
   410  0897                     	;# 
   411  0898                     	;# 
   412  0899                     	;# 
   413  0D8C                     	;# 
   414  0D8C                     	;# 
   415  0D8D                     	;# 
   416  0D8E                     	;# 
   417  0D8F                     	;# 
   418  0D8F                     	;# 
   419  0D90                     	;# 
   420  0D91                     	;# 
   421  0D92                     	;# 
   422  0D92                     	;# 
   423  0D93                     	;# 
   424  0D94                     	;# 
   425  0D95                     	;# 
   426  0D95                     	;# 
   427  0D96                     	;# 
   428  0D97                     	;# 
   429  0D98                     	;# 
   430  0D99                     	;# 
   431  0D9A                     	;# 
   432  0D9B                     	;# 
   433  0D9C                     	;# 
   434  0D9D                     	;# 
   435  0D9E                     	;# 
   436  0D9E                     	;# 
   437  0D9F                     	;# 
   438  0DA0                     	;# 
   439  0DA1                     	;# 
   440  0DA1                     	;# 
   441  0DA2                     	;# 
   442  0DA3                     	;# 
   443  0DA4                     	;# 
   444  0DA4                     	;# 
   445  0DA5                     	;# 
   446  0DA6                     	;# 
   447  0DA7                     	;# 
   448  0DA7                     	;# 
   449  0DA8                     	;# 
   450  0DA9                     	;# 
   451  0DAA                     	;# 
   452  0DAB                     	;# 
   453  0DAC                     	;# 
   454  0DAD                     	;# 
   455  0DAE                     	;# 
   456  0DAF                     	;# 
   457  0E0F                     	;# 
   458  0E10                     	;# 
   459  0E11                     	;# 
   460  0E12                     	;# 
   461  0E13                     	;# 
   462  0E14                     	;# 
   463  0E15                     	;# 
   464  0E16                     	;# 
   465  0E17                     	;# 
   466  0E18                     	;# 
   467  0E19                     	;# 
   468  0E1A                     	;# 
   469  0E1B                     	;# 
   470  0E1C                     	;# 
   471  0E1D                     	;# 
   472  0E1E                     	;# 
   473  0E1F                     	;# 
   474  0E20                     	;# 
   475  0E21                     	;# 
   476  0E22                     	;# 
   477  0E23                     	;# 
   478  0E24                     	;# 
   479  0E25                     	;# 
   480  0E26                     	;# 
   481  0E27                     	;# 
   482  0E28                     	;# 
   483  0E29                     	;# 
   484  0E2A                     	;# 
   485  0E2B                     	;# 
   486  0E2C                     	;# 
   487  0E2D                     	;# 
   488  0E2E                     	;# 
   489  0E90                     	;# 
   490  0E91                     	;# 
   491  0E92                     	;# 
   492  0E94                     	;# 
   493  0E95                     	;# 
   494  0E9C                     	;# 
   495  0E9D                     	;# 
   496  0E9E                     	;# 
   497  0E9F                     	;# 
   498  0EA0                     	;# 
   499  0EA1                     	;# 
   500  0EA2                     	;# 
   501  0EA3                     	;# 
   502  0EA4                     	;# 
   503  0EA5                     	;# 
   504  0EA6                     	;# 
   505  0EA7                     	;# 
   506  0F0F                     	;# 
   507  0F10                     	;# 
   508  0F11                     	;# 
   509  0F12                     	;# 
   510  0F13                     	;# 
   511  0F14                     	;# 
   512  0F15                     	;# 
   513  0F16                     	;# 
   514  0F17                     	;# 
   515  0F18                     	;# 
   516  0F19                     	;# 
   517  0F1A                     	;# 
   518  0F1B                     	;# 
   519  0F1C                     	;# 
   520  0F1D                     	;# 
   521  0F1E                     	;# 
   522  0F1F                     	;# 
   523  0F20                     	;# 
   524  0F21                     	;# 
   525  0F22                     	;# 
   526  0F23                     	;# 
   527  0F24                     	;# 
   528  0F25                     	;# 
   529  0F26                     	;# 
   530  0F27                     	;# 
   531  0F28                     	;# 
   532  0F29                     	;# 
   533  0F2A                     	;# 
   534  0F2B                     	;# 
   535  0F2C                     	;# 
   536  0F2D                     	;# 
   537  0F2E                     	;# 
   538  0F2F                     	;# 
   539  0F30                     	;# 
   540  0F31                     	;# 
   541  0F32                     	;# 
   542  0F33                     	;# 
   543  0F34                     	;# 
   544  0F35                     	;# 
   545  0F36                     	;# 
   546  0F37                     	;# 
   547  0FE4                     	;# 
   548  0FE5                     	;# 
   549  0FE6                     	;# 
   550  0FE7                     	;# 
   551  0FE8                     	;# 
   552  0FE9                     	;# 
   553  0FEA                     	;# 
   554  0FEB                     	;# 
   555  0FED                     	;# 
   556  0FEE                     	;# 
   557  0FEF                     	;# 
   558  0000                     	;# 
   559  0001                     	;# 
   560  0002                     	;# 
   561  0003                     	;# 
   562  0004                     	;# 
   563  0005                     	;# 
   564  0006                     	;# 
   565  0007                     	;# 
   566  0008                     	;# 
   567  0009                     	;# 
   568  000A                     	;# 
   569  000B                     	;# 
   570  000C                     	;# 
   571  000D                     	;# 
   572  000E                     	;# 
   573  0010                     	;# 
   574  0011                     	;# 
   575  0012                     	;# 
   576  0013                     	;# 
   577  0014                     	;# 
   578  0015                     	;# 
   579  0016                     	;# 
   580  0016                     	;# 
   581  0017                     	;# 
   582  0018                     	;# 
   583  0019                     	;# 
   584  001A                     	;# 
   585  001A                     	;# 
   586  001B                     	;# 
   587  001B                     	;# 
   588  001C                     	;# 
   589  001D                     	;# 
   590  001E                     	;# 
   591  001F                     	;# 
   592  008C                     	;# 
   593  008D                     	;# 
   594  008E                     	;# 
   595  0090                     	;# 
   596  0091                     	;# 
   597  0092                     	;# 
   598  0093                     	;# 
   599  0094                     	;# 
   600  0095                     	;# 
   601  0096                     	;# 
   602  0098                     	;# 
   603  0099                     	;# 
   604  009A                     	;# 
   605  009B                     	;# 
   606  009B                     	;# 
   607  009C                     	;# 
   608  009D                     	;# 
   609  009E                     	;# 
   610  009F                     	;# 
   611  010C                     	;# 
   612  010D                     	;# 
   613  010E                     	;# 
   614  0111                     	;# 
   615  0112                     	;# 
   616  0113                     	;# 
   617  0114                     	;# 
   618  0115                     	;# 
   619  0116                     	;# 
   620  0117                     	;# 
   621  0118                     	;# 
   622  0119                     	;# 
   623  011C                     	;# 
   624  018C                     	;# 
   625  018D                     	;# 
   626  018E                     	;# 
   627  0191                     	;# 
   628  0191                     	;# 
   629  0192                     	;# 
   630  0193                     	;# 
   631  0193                     	;# 
   632  0194                     	;# 
   633  0195                     	;# 
   634  0196                     	;# 
   635  0197                     	;# 
   636  0199                     	;# 
   637  0199                     	;# 
   638  0199                     	;# 
   639  019A                     	;# 
   640  019A                     	;# 
   641  019A                     	;# 
   642  019B                     	;# 
   643  019B                     	;# 
   644  019B                     	;# 
   645  019B                     	;# 
   646  019B                     	;# 
   647  019C                     	;# 
   648  019C                     	;# 
   649  019C                     	;# 
   650  019D                     	;# 
   651  019D                     	;# 
   652  019D                     	;# 
   653  019E                     	;# 
   654  019E                     	;# 
   655  019E                     	;# 
   656  019F                     	;# 
   657  019F                     	;# 
   658  019F                     	;# 
   659  019F                     	;# 
   660  019F                     	;# 
   661  020C                     	;# 
   662  020D                     	;# 
   663  020E                     	;# 
   664  0211                     	;# 
   665  0211                     	;# 
   666  0212                     	;# 
   667  0212                     	;# 
   668  0213                     	;# 
   669  0213                     	;# 
   670  0214                     	;# 
   671  0214                     	;# 
   672  0215                     	;# 
   673  0215                     	;# 
   674  0215                     	;# 
   675  0215                     	;# 
   676  0216                     	;# 
   677  0216                     	;# 
   678  0217                     	;# 
   679  0217                     	;# 
   680  028C                     	;# 
   681  028D                     	;# 
   682  028E                     	;# 
   683  0291                     	;# 
   684  0291                     	;# 
   685  0292                     	;# 
   686  0293                     	;# 
   687  0294                     	;# 
   688  0298                     	;# 
   689  0298                     	;# 
   690  0299                     	;# 
   691  029A                     	;# 
   692  029B                     	;# 
   693  029E                     	;# 
   694  030C                     	;# 
   695  030D                     	;# 
   696  030E                     	;# 
   697  038C                     	;# 
   698  038D                     	;# 
   699  038E                     	;# 
   700  0391                     	;# 
   701  0392                     	;# 
   702  0393                     	;# 
   703  0394                     	;# 
   704  0395                     	;# 
   705  0396                     	;# 
   706  0397                     	;# 
   707  0398                     	;# 
   708  0399                     	;# 
   709  040E                     	;# 
   710  0413                     	;# 
   711  0413                     	;# 
   712  0414                     	;# 
   713  0414                     	;# 
   714  0415                     	;# 
   715  0416                     	;# 
   716  0417                     	;# 
   717  0418                     	;# 
   718  041A                     	;# 
   719  041A                     	;# 
   720  041B                     	;# 
   721  041B                     	;# 
   722  041C                     	;# 
   723  041D                     	;# 
   724  041E                     	;# 
   725  041F                     	;# 
   726  0493                     	;# 
   727  0494                     	;# 
   728  0495                     	;# 
   729  0496                     	;# 
   730  049A                     	;# 
   731  049B                     	;# 
   732  049C                     	;# 
   733  049D                     	;# 
   734  058C                     	;# 
   735  058C                     	;# 
   736  058D                     	;# 
   737  058E                     	;# 
   738  058E                     	;# 
   739  058F                     	;# 
   740  0590                     	;# 
   741  0590                     	;# 
   742  0591                     	;# 
   743  0592                     	;# 
   744  0592                     	;# 
   745  0593                     	;# 
   746  0594                     	;# 
   747  0594                     	;# 
   748  0595                     	;# 
   749  0596                     	;# 
   750  0596                     	;# 
   751  0597                     	;# 
   752  0598                     	;# 
   753  0599                     	;# 
   754  059A                     	;# 
   755  059B                     	;# 
   756  059B                     	;# 
   757  059C                     	;# 
   758  059D                     	;# 
   759  060C                     	;# 
   760  060C                     	;# 
   761  060D                     	;# 
   762  060E                     	;# 
   763  060F                     	;# 
   764  060F                     	;# 
   765  0610                     	;# 
   766  0611                     	;# 
   767  0612                     	;# 
   768  0613                     	;# 
   769  0614                     	;# 
   770  0617                     	;# 
   771  0617                     	;# 
   772  0618                     	;# 
   773  0619                     	;# 
   774  061A                     	;# 
   775  061A                     	;# 
   776  061B                     	;# 
   777  061C                     	;# 
   778  0691                     	;# 
   779  0692                     	;# 
   780  0693                     	;# 
   781  0694                     	;# 
   782  0695                     	;# 
   783  0696                     	;# 
   784  0697                     	;# 
   785  0699                     	;# 
   786  069A                     	;# 
   787  0711                     	;# 
   788  0712                     	;# 
   789  0713                     	;# 
   790  0714                     	;# 
   791  0715                     	;# 
   792  0718                     	;# 
   793  0718                     	;# 
   794  0719                     	;# 
   795  071A                     	;# 
   796  071A                     	;# 
   797  071B                     	;# 
   798  071C                     	;# 
   799  071D                     	;# 
   800  0791                     	;# 
   801  0791                     	;# 
   802  0792                     	;# 
   803  0793                     	;# 
   804  0793                     	;# 
   805  0794                     	;# 
   806  0795                     	;# 
   807  0795                     	;# 
   808  0796                     	;# 
   809  0797                     	;# 
   810  0797                     	;# 
   811  0798                     	;# 
   812  0799                     	;# 
   813  079A                     	;# 
   814  080C                     	;# 
   815  080C                     	;# 
   816  080D                     	;# 
   817  080E                     	;# 
   818  080E                     	;# 
   819  080F                     	;# 
   820  0810                     	;# 
   821  0810                     	;# 
   822  0811                     	;# 
   823  0812                     	;# 
   824  0812                     	;# 
   825  0813                     	;# 
   826  0814                     	;# 
   827  0815                     	;# 
   828  0816                     	;# 
   829  0817                     	;# 
   830  0818                     	;# 
   831  0819                     	;# 
   832  081A                     	;# 
   833  081A                     	;# 
   834  081B                     	;# 
   835  081C                     	;# 
   836  081C                     	;# 
   837  081D                     	;# 
   838  088C                     	;# 
   839  088D                     	;# 
   840  088E                     	;# 
   841  088F                     	;# 
   842  088F                     	;# 
   843  0890                     	;# 
   844  0891                     	;# 
   845  0892                     	;# 
   846  0893                     	;# 
   847  0893                     	;# 
   848  0894                     	;# 
   849  0895                     	;# 
   850  0896                     	;# 
   851  0897                     	;# 
   852  0897                     	;# 
   853  0898                     	;# 
   854  0899                     	;# 
   855  0D8C                     	;# 
   856  0D8C                     	;# 
   857  0D8D                     	;# 
   858  0D8E                     	;# 
   859  0D8F                     	;# 
   860  0D8F                     	;# 
   861  0D90                     	;# 
   862  0D91                     	;# 
   863  0D92                     	;# 
   864  0D92                     	;# 
   865  0D93                     	;# 
   866  0D94                     	;# 
   867  0D95                     	;# 
   868  0D95                     	;# 
   869  0D96                     	;# 
   870  0D97                     	;# 
   871  0D98                     	;# 
   872  0D99                     	;# 
   873  0D9A                     	;# 
   874  0D9B                     	;# 
   875  0D9C                     	;# 
   876  0D9D                     	;# 
   877  0D9E                     	;# 
   878  0D9E                     	;# 
   879  0D9F                     	;# 
   880  0DA0                     	;# 
   881  0DA1                     	;# 
   882  0DA1                     	;# 
   883  0DA2                     	;# 
   884  0DA3                     	;# 
   885  0DA4                     	;# 
   886  0DA4                     	;# 
   887  0DA5                     	;# 
   888  0DA6                     	;# 
   889  0DA7                     	;# 
   890  0DA7                     	;# 
   891  0DA8                     	;# 
   892  0DA9                     	;# 
   893  0DAA                     	;# 
   894  0DAB                     	;# 
   895  0DAC                     	;# 
   896  0DAD                     	;# 
   897  0DAE                     	;# 
   898  0DAF                     	;# 
   899  0E0F                     	;# 
   900  0E10                     	;# 
   901  0E11                     	;# 
   902  0E12                     	;# 
   903  0E13                     	;# 
   904  0E14                     	;# 
   905  0E15                     	;# 
   906  0E16                     	;# 
   907  0E17                     	;# 
   908  0E18                     	;# 
   909  0E19                     	;# 
   910  0E1A                     	;# 
   911  0E1B                     	;# 
   912  0E1C                     	;# 
   913  0E1D                     	;# 
   914  0E1E                     	;# 
   915  0E1F                     	;# 
   916  0E20                     	;# 
   917  0E21                     	;# 
   918  0E22                     	;# 
   919  0E23                     	;# 
   920  0E24                     	;# 
   921  0E25                     	;# 
   922  0E26                     	;# 
   923  0E27                     	;# 
   924  0E28                     	;# 
   925  0E29                     	;# 
   926  0E2A                     	;# 
   927  0E2B                     	;# 
   928  0E2C                     	;# 
   929  0E2D                     	;# 
   930  0E2E                     	;# 
   931  0E90                     	;# 
   932  0E91                     	;# 
   933  0E92                     	;# 
   934  0E94                     	;# 
   935  0E95                     	;# 
   936  0E9C                     	;# 
   937  0E9D                     	;# 
   938  0E9E                     	;# 
   939  0E9F                     	;# 
   940  0EA0                     	;# 
   941  0EA1                     	;# 
   942  0EA2                     	;# 
   943  0EA3                     	;# 
   944  0EA4                     	;# 
   945  0EA5                     	;# 
   946  0EA6                     	;# 
   947  0EA7                     	;# 
   948  0F0F                     	;# 
   949  0F10                     	;# 
   950  0F11                     	;# 
   951  0F12                     	;# 
   952  0F13                     	;# 
   953  0F14                     	;# 
   954  0F15                     	;# 
   955  0F16                     	;# 
   956  0F17                     	;# 
   957  0F18                     	;# 
   958  0F19                     	;# 
   959  0F1A                     	;# 
   960  0F1B                     	;# 
   961  0F1C                     	;# 
   962  0F1D                     	;# 
   963  0F1E                     	;# 
   964  0F1F                     	;# 
   965  0F20                     	;# 
   966  0F21                     	;# 
   967  0F22                     	;# 
   968  0F23                     	;# 
   969  0F24                     	;# 
   970  0F25                     	;# 
   971  0F26                     	;# 
   972  0F27                     	;# 
   973  0F28                     	;# 
   974  0F29                     	;# 
   975  0F2A                     	;# 
   976  0F2B                     	;# 
   977  0F2C                     	;# 
   978  0F2D                     	;# 
   979  0F2E                     	;# 
   980  0F2F                     	;# 
   981  0F30                     	;# 
   982  0F31                     	;# 
   983  0F32                     	;# 
   984  0F33                     	;# 
   985  0F34                     	;# 
   986  0F35                     	;# 
   987  0F36                     	;# 
   988  0F37                     	;# 
   989  0FE4                     	;# 
   990  0FE5                     	;# 
   991  0FE6                     	;# 
   992  0FE7                     	;# 
   993  0FE8                     	;# 
   994  0FE9                     	;# 
   995  0FEA                     	;# 
   996  0FEB                     	;# 
   997  0FED                     	;# 
   998  0FEE                     	;# 
   999  0FEF                     	;# 
  1000  0000                     	;# 
  1001  0001                     	;# 
  1002  0002                     	;# 
  1003  0003                     	;# 
  1004  0004                     	;# 
  1005  0005                     	;# 
  1006  0006                     	;# 
  1007  0007                     	;# 
  1008  0008                     	;# 
  1009  0009                     	;# 
  1010  000A                     	;# 
  1011  000B                     	;# 
  1012  000C                     	;# 
  1013  000D                     	;# 
  1014  000E                     	;# 
  1015  0010                     	;# 
  1016  0011                     	;# 
  1017  0012                     	;# 
  1018  0013                     	;# 
  1019  0014                     	;# 
  1020  0015                     	;# 
  1021  0016                     	;# 
  1022  0016                     	;# 
  1023  0017                     	;# 
  1024  0018                     	;# 
  1025  0019                     	;# 
  1026  001A                     	;# 
  1027  001A                     	;# 
  1028  001B                     	;# 
  1029  001B                     	;# 
  1030  001C                     	;# 
  1031  001D                     	;# 
  1032  001E                     	;# 
  1033  001F                     	;# 
  1034  008C                     	;# 
  1035  008D                     	;# 
  1036  008E                     	;# 
  1037  0090                     	;# 
  1038  0091                     	;# 
  1039  0092                     	;# 
  1040  0093                     	;# 
  1041  0094                     	;# 
  1042  0095                     	;# 
  1043  0096                     	;# 
  1044  0098                     	;# 
  1045  0099                     	;# 
  1046  009A                     	;# 
  1047  009B                     	;# 
  1048  009B                     	;# 
  1049  009C                     	;# 
  1050  009D                     	;# 
  1051  009E                     	;# 
  1052  009F                     	;# 
  1053  010C                     	;# 
  1054  010D                     	;# 
  1055  010E                     	;# 
  1056  0111                     	;# 
  1057  0112                     	;# 
  1058  0113                     	;# 
  1059  0114                     	;# 
  1060  0115                     	;# 
  1061  0116                     	;# 
  1062  0117                     	;# 
  1063  0118                     	;# 
  1064  0119                     	;# 
  1065  011C                     	;# 
  1066  018C                     	;# 
  1067  018D                     	;# 
  1068  018E                     	;# 
  1069  0191                     	;# 
  1070  0191                     	;# 
  1071  0192                     	;# 
  1072  0193                     	;# 
  1073  0193                     	;# 
  1074  0194                     	;# 
  1075  0195                     	;# 
  1076  0196                     	;# 
  1077  0197                     	;# 
  1078  0199                     	;# 
  1079  0199                     	;# 
  1080  0199                     	;# 
  1081  019A                     	;# 
  1082  019A                     	;# 
  1083  019A                     	;# 
  1084  019B                     	;# 
  1085  019B                     	;# 
  1086  019B                     	;# 
  1087  019B                     	;# 
  1088  019B                     	;# 
  1089  019C                     	;# 
  1090  019C                     	;# 
  1091  019C                     	;# 
  1092  019D                     	;# 
  1093  019D                     	;# 
  1094  019D                     	;# 
  1095  019E                     	;# 
  1096  019E                     	;# 
  1097  019E                     	;# 
  1098  019F                     	;# 
  1099  019F                     	;# 
  1100  019F                     	;# 
  1101  019F                     	;# 
  1102  019F                     	;# 
  1103  020C                     	;# 
  1104  020D                     	;# 
  1105  020E                     	;# 
  1106  0211                     	;# 
  1107  0211                     	;# 
  1108  0212                     	;# 
  1109  0212                     	;# 
  1110  0213                     	;# 
  1111  0213                     	;# 
  1112  0214                     	;# 
  1113  0214                     	;# 
  1114  0215                     	;# 
  1115  0215                     	;# 
  1116  0215                     	;# 
  1117  0215                     	;# 
  1118  0216                     	;# 
  1119  0216                     	;# 
  1120  0217                     	;# 
  1121  0217                     	;# 
  1122  028C                     	;# 
  1123  028D                     	;# 
  1124  028E                     	;# 
  1125  0291                     	;# 
  1126  0291                     	;# 
  1127  0292                     	;# 
  1128  0293                     	;# 
  1129  0294                     	;# 
  1130  0298                     	;# 
  1131  0298                     	;# 
  1132  0299                     	;# 
  1133  029A                     	;# 
  1134  029B                     	;# 
  1135  029E                     	;# 
  1136  030C                     	;# 
  1137  030D                     	;# 
  1138  030E                     	;# 
  1139  038C                     	;# 
  1140  038D                     	;# 
  1141  038E                     	;# 
  1142  0391                     	;# 
  1143  0392                     	;# 
  1144  0393                     	;# 
  1145  0394                     	;# 
  1146  0395                     	;# 
  1147  0396                     	;# 
  1148  0397                     	;# 
  1149  0398                     	;# 
  1150  0399                     	;# 
  1151  040E                     	;# 
  1152  0413                     	;# 
  1153  0413                     	;# 
  1154  0414                     	;# 
  1155  0414                     	;# 
  1156  0415                     	;# 
  1157  0416                     	;# 
  1158  0417                     	;# 
  1159  0418                     	;# 
  1160  041A                     	;# 
  1161  041A                     	;# 
  1162  041B                     	;# 
  1163  041B                     	;# 
  1164  041C                     	;# 
  1165  041D                     	;# 
  1166  041E                     	;# 
  1167  041F                     	;# 
  1168  0493                     	;# 
  1169  0494                     	;# 
  1170  0495                     	;# 
  1171  0496                     	;# 
  1172  049A                     	;# 
  1173  049B                     	;# 
  1174  049C                     	;# 
  1175  049D                     	;# 
  1176  058C                     	;# 
  1177  058C                     	;# 
  1178  058D                     	;# 
  1179  058E                     	;# 
  1180  058E                     	;# 
  1181  058F                     	;# 
  1182  0590                     	;# 
  1183  0590                     	;# 
  1184  0591                     	;# 
  1185  0592                     	;# 
  1186  0592                     	;# 
  1187  0593                     	;# 
  1188  0594                     	;# 
  1189  0594                     	;# 
  1190  0595                     	;# 
  1191  0596                     	;# 
  1192  0596                     	;# 
  1193  0597                     	;# 
  1194  0598                     	;# 
  1195  0599                     	;# 
  1196  059A                     	;# 
  1197  059B                     	;# 
  1198  059B                     	;# 
  1199  059C                     	;# 
  1200  059D                     	;# 
  1201  060C                     	;# 
  1202  060C                     	;# 
  1203  060D                     	;# 
  1204  060E                     	;# 
  1205  060F                     	;# 
  1206  060F                     	;# 
  1207  0610                     	;# 
  1208  0611                     	;# 
  1209  0612                     	;# 
  1210  0613                     	;# 
  1211  0614                     	;# 
  1212  0617                     	;# 
  1213  0617                     	;# 
  1214  0618                     	;# 
  1215  0619                     	;# 
  1216  061A                     	;# 
  1217  061A                     	;# 
  1218  061B                     	;# 
  1219  061C                     	;# 
  1220  0691                     	;# 
  1221  0692                     	;# 
  1222  0693                     	;# 
  1223  0694                     	;# 
  1224  0695                     	;# 
  1225  0696                     	;# 
  1226  0697                     	;# 
  1227  0699                     	;# 
  1228  069A                     	;# 
  1229  0711                     	;# 
  1230  0712                     	;# 
  1231  0713                     	;# 
  1232  0714                     	;# 
  1233  0715                     	;# 
  1234  0718                     	;# 
  1235  0718                     	;# 
  1236  0719                     	;# 
  1237  071A                     	;# 
  1238  071A                     	;# 
  1239  071B                     	;# 
  1240  071C                     	;# 
  1241  071D                     	;# 
  1242  0791                     	;# 
  1243  0791                     	;# 
  1244  0792                     	;# 
  1245  0793                     	;# 
  1246  0793                     	;# 
  1247  0794                     	;# 
  1248  0795                     	;# 
  1249  0795                     	;# 
  1250  0796                     	;# 
  1251  0797                     	;# 
  1252  0797                     	;# 
  1253  0798                     	;# 
  1254  0799                     	;# 
  1255  079A                     	;# 
  1256  080C                     	;# 
  1257  080C                     	;# 
  1258  080D                     	;# 
  1259  080E                     	;# 
  1260  080E                     	;# 
  1261  080F                     	;# 
  1262  0810                     	;# 
  1263  0810                     	;# 
  1264  0811                     	;# 
  1265  0812                     	;# 
  1266  0812                     	;# 
  1267  0813                     	;# 
  1268  0814                     	;# 
  1269  0815                     	;# 
  1270  0816                     	;# 
  1271  0817                     	;# 
  1272  0818                     	;# 
  1273  0819                     	;# 
  1274  081A                     	;# 
  1275  081A                     	;# 
  1276  081B                     	;# 
  1277  081C                     	;# 
  1278  081C                     	;# 
  1279  081D                     	;# 
  1280  088C                     	;# 
  1281  088D                     	;# 
  1282  088E                     	;# 
  1283  088F                     	;# 
  1284  088F                     	;# 
  1285  0890                     	;# 
  1286  0891                     	;# 
  1287  0892                     	;# 
  1288  0893                     	;# 
  1289  0893                     	;# 
  1290  0894                     	;# 
  1291  0895                     	;# 
  1292  0896                     	;# 
  1293  0897                     	;# 
  1294  0897                     	;# 
  1295  0898                     	;# 
  1296  0899                     	;# 
  1297  0D8C                     	;# 
  1298  0D8C                     	;# 
  1299  0D8D                     	;# 
  1300  0D8E                     	;# 
  1301  0D8F                     	;# 
  1302  0D8F                     	;# 
  1303  0D90                     	;# 
  1304  0D91                     	;# 
  1305  0D92                     	;# 
  1306  0D92                     	;# 
  1307  0D93                     	;# 
  1308  0D94                     	;# 
  1309  0D95                     	;# 
  1310  0D95                     	;# 
  1311  0D96                     	;# 
  1312  0D97                     	;# 
  1313  0D98                     	;# 
  1314  0D99                     	;# 
  1315  0D9A                     	;# 
  1316  0D9B                     	;# 
  1317  0D9C                     	;# 
  1318  0D9D                     	;# 
  1319  0D9E                     	;# 
  1320  0D9E                     	;# 
  1321  0D9F                     	;# 
  1322  0DA0                     	;# 
  1323  0DA1                     	;# 
  1324  0DA1                     	;# 
  1325  0DA2                     	;# 
  1326  0DA3                     	;# 
  1327  0DA4                     	;# 
  1328  0DA4                     	;# 
  1329  0DA5                     	;# 
  1330  0DA6                     	;# 
  1331  0DA7                     	;# 
  1332  0DA7                     	;# 
  1333  0DA8                     	;# 
  1334  0DA9                     	;# 
  1335  0DAA                     	;# 
  1336  0DAB                     	;# 
  1337  0DAC                     	;# 
  1338  0DAD                     	;# 
  1339  0DAE                     	;# 
  1340  0DAF                     	;# 
  1341  0E0F                     	;# 
  1342  0E10                     	;# 
  1343  0E11                     	;# 
  1344  0E12                     	;# 
  1345  0E13                     	;# 
  1346  0E14                     	;# 
  1347  0E15                     	;# 
  1348  0E16                     	;# 
  1349  0E17                     	;# 
  1350  0E18                     	;# 
  1351  0E19                     	;# 
  1352  0E1A                     	;# 
  1353  0E1B                     	;# 
  1354  0E1C                     	;# 
  1355  0E1D                     	;# 
  1356  0E1E                     	;# 
  1357  0E1F                     	;# 
  1358  0E20                     	;# 
  1359  0E21                     	;# 
  1360  0E22                     	;# 
  1361  0E23                     	;# 
  1362  0E24                     	;# 
  1363  0E25                     	;# 
  1364  0E26                     	;# 
  1365  0E27                     	;# 
  1366  0E28                     	;# 
  1367  0E29                     	;# 
  1368  0E2A                     	;# 
  1369  0E2B                     	;# 
  1370  0E2C                     	;# 
  1371  0E2D                     	;# 
  1372  0E2E                     	;# 
  1373  0E90                     	;# 
  1374  0E91                     	;# 
  1375  0E92                     	;# 
  1376  0E94                     	;# 
  1377  0E95                     	;# 
  1378  0E9C                     	;# 
  1379  0E9D                     	;# 
  1380  0E9E                     	;# 
  1381  0E9F                     	;# 
  1382  0EA0                     	;# 
  1383  0EA1                     	;# 
  1384  0EA2                     	;# 
  1385  0EA3                     	;# 
  1386  0EA4                     	;# 
  1387  0EA5                     	;# 
  1388  0EA6                     	;# 
  1389  0EA7                     	;# 
  1390  0F0F                     	;# 
  1391  0F10                     	;# 
  1392  0F11                     	;# 
  1393  0F12                     	;# 
  1394  0F13                     	;# 
  1395  0F14                     	;# 
  1396  0F15                     	;# 
  1397  0F16                     	;# 
  1398  0F17                     	;# 
  1399  0F18                     	;# 
  1400  0F19                     	;# 
  1401  0F1A                     	;# 
  1402  0F1B                     	;# 
  1403  0F1C                     	;# 
  1404  0F1D                     	;# 
  1405  0F1E                     	;# 
  1406  0F1F                     	;# 
  1407  0F20                     	;# 
  1408  0F21                     	;# 
  1409  0F22                     	;# 
  1410  0F23                     	;# 
  1411  0F24                     	;# 
  1412  0F25                     	;# 
  1413  0F26                     	;# 
  1414  0F27                     	;# 
  1415  0F28                     	;# 
  1416  0F29                     	;# 
  1417  0F2A                     	;# 
  1418  0F2B                     	;# 
  1419  0F2C                     	;# 
  1420  0F2D                     	;# 
  1421  0F2E                     	;# 
  1422  0F2F                     	;# 
  1423  0F30                     	;# 
  1424  0F31                     	;# 
  1425  0F32                     	;# 
  1426  0F33                     	;# 
  1427  0F34                     	;# 
  1428  0F35                     	;# 
  1429  0F36                     	;# 
  1430  0F37                     	;# 
  1431  0FE4                     	;# 
  1432  0FE5                     	;# 
  1433  0FE6                     	;# 
  1434  0FE7                     	;# 
  1435  0FE8                     	;# 
  1436  0FE9                     	;# 
  1437  0FEA                     	;# 
  1438  0FEB                     	;# 
  1439  0FED                     	;# 
  1440  0FEE                     	;# 
  1441  0FEF                     	;# 
  1442  0000                     	;# 
  1443  0001                     	;# 
  1444  0002                     	;# 
  1445  0003                     	;# 
  1446  0004                     	;# 
  1447  0005                     	;# 
  1448  0006                     	;# 
  1449  0007                     	;# 
  1450  0008                     	;# 
  1451  0009                     	;# 
  1452  000A                     	;# 
  1453  000B                     	;# 
  1454  000C                     	;# 
  1455  000D                     	;# 
  1456  000E                     	;# 
  1457  0010                     	;# 
  1458  0011                     	;# 
  1459  0012                     	;# 
  1460  0013                     	;# 
  1461  0014                     	;# 
  1462  0015                     	;# 
  1463  0016                     	;# 
  1464  0016                     	;# 
  1465  0017                     	;# 
  1466  0018                     	;# 
  1467  0019                     	;# 
  1468  001A                     	;# 
  1469  001A                     	;# 
  1470  001B                     	;# 
  1471  001B                     	;# 
  1472  001C                     	;# 
  1473  001D                     	;# 
  1474  001E                     	;# 
  1475  001F                     	;# 
  1476  008C                     	;# 
  1477  008D                     	;# 
  1478  008E                     	;# 
  1479  0090                     	;# 
  1480  0091                     	;# 
  1481  0092                     	;# 
  1482  0093                     	;# 
  1483  0094                     	;# 
  1484  0095                     	;# 
  1485  0096                     	;# 
  1486  0098                     	;# 
  1487  0099                     	;# 
  1488  009A                     	;# 
  1489  009B                     	;# 
  1490  009B                     	;# 
  1491  009C                     	;# 
  1492  009D                     	;# 
  1493  009E                     	;# 
  1494  009F                     	;# 
  1495  010C                     	;# 
  1496  010D                     	;# 
  1497  010E                     	;# 
  1498  0111                     	;# 
  1499  0112                     	;# 
  1500  0113                     	;# 
  1501  0114                     	;# 
  1502  0115                     	;# 
  1503  0116                     	;# 
  1504  0117                     	;# 
  1505  0118                     	;# 
  1506  0119                     	;# 
  1507  011C                     	;# 
  1508  018C                     	;# 
  1509  018D                     	;# 
  1510  018E                     	;# 
  1511  0191                     	;# 
  1512  0191                     	;# 
  1513  0192                     	;# 
  1514  0193                     	;# 
  1515  0193                     	;# 
  1516  0194                     	;# 
  1517  0195                     	;# 
  1518  0196                     	;# 
  1519  0197                     	;# 
  1520  0199                     	;# 
  1521  0199                     	;# 
  1522  0199                     	;# 
  1523  019A                     	;# 
  1524  019A                     	;# 
  1525  019A                     	;# 
  1526  019B                     	;# 
  1527  019B                     	;# 
  1528  019B                     	;# 
  1529  019B                     	;# 
  1530  019B                     	;# 
  1531  019C                     	;# 
  1532  019C                     	;# 
  1533  019C                     	;# 
  1534  019D                     	;# 
  1535  019D                     	;# 
  1536  019D                     	;# 
  1537  019E                     	;# 
  1538  019E                     	;# 
  1539  019E                     	;# 
  1540  019F                     	;# 
  1541  019F                     	;# 
  1542  019F                     	;# 
  1543  019F                     	;# 
  1544  019F                     	;# 
  1545  020C                     	;# 
  1546  020D                     	;# 
  1547  020E                     	;# 
  1548  0211                     	;# 
  1549  0211                     	;# 
  1550  0212                     	;# 
  1551  0212                     	;# 
  1552  0213                     	;# 
  1553  0213                     	;# 
  1554  0214                     	;# 
  1555  0214                     	;# 
  1556  0215                     	;# 
  1557  0215                     	;# 
  1558  0215                     	;# 
  1559  0215                     	;# 
  1560  0216                     	;# 
  1561  0216                     	;# 
  1562  0217                     	;# 
  1563  0217                     	;# 
  1564  028C                     	;# 
  1565  028D                     	;# 
  1566  028E                     	;# 
  1567  0291                     	;# 
  1568  0291                     	;# 
  1569  0292                     	;# 
  1570  0293                     	;# 
  1571  0294                     	;# 
  1572  0298                     	;# 
  1573  0298                     	;# 
  1574  0299                     	;# 
  1575  029A                     	;# 
  1576  029B                     	;# 
  1577  029E                     	;# 
  1578  030C                     	;# 
  1579  030D                     	;# 
  1580  030E                     	;# 
  1581  038C                     	;# 
  1582  038D                     	;# 
  1583  038E                     	;# 
  1584  0391                     	;# 
  1585  0392                     	;# 
  1586  0393                     	;# 
  1587  0394                     	;# 
  1588  0395                     	;# 
  1589  0396                     	;# 
  1590  0397                     	;# 
  1591  0398                     	;# 
  1592  0399                     	;# 
  1593  040E                     	;# 
  1594  0413                     	;# 
  1595  0413                     	;# 
  1596  0414                     	;# 
  1597  0414                     	;# 
  1598  0415                     	;# 
  1599  0416                     	;# 
  1600  0417                     	;# 
  1601  0418                     	;# 
  1602  041A                     	;# 
  1603  041A                     	;# 
  1604  041B                     	;# 
  1605  041B                     	;# 
  1606  041C                     	;# 
  1607  041D                     	;# 
  1608  041E                     	;# 
  1609  041F                     	;# 
  1610  0493                     	;# 
  1611  0494                     	;# 
  1612  0495                     	;# 
  1613  0496                     	;# 
  1614  049A                     	;# 
  1615  049B                     	;# 
  1616  049C                     	;# 
  1617  049D                     	;# 
  1618  058C                     	;# 
  1619  058C                     	;# 
  1620  058D                     	;# 
  1621  058E                     	;# 
  1622  058E                     	;# 
  1623  058F                     	;# 
  1624  0590                     	;# 
  1625  0590                     	;# 
  1626  0591                     	;# 
  1627  0592                     	;# 
  1628  0592                     	;# 
  1629  0593                     	;# 
  1630  0594                     	;# 
  1631  0594                     	;# 
  1632  0595                     	;# 
  1633  0596                     	;# 
  1634  0596                     	;# 
  1635  0597                     	;# 
  1636  0598                     	;# 
  1637  0599                     	;# 
  1638  059A                     	;# 
  1639  059B                     	;# 
  1640  059B                     	;# 
  1641  059C                     	;# 
  1642  059D                     	;# 
  1643  060C                     	;# 
  1644  060C                     	;# 
  1645  060D                     	;# 
  1646  060E                     	;# 
  1647  060F                     	;# 
  1648  060F                     	;# 
  1649  0610                     	;# 
  1650  0611                     	;# 
  1651  0612                     	;# 
  1652  0613                     	;# 
  1653  0614                     	;# 
  1654  0617                     	;# 
  1655  0617                     	;# 
  1656  0618                     	;# 
  1657  0619                     	;# 
  1658  061A                     	;# 
  1659  061A                     	;# 
  1660  061B                     	;# 
  1661  061C                     	;# 
  1662  0691                     	;# 
  1663  0692                     	;# 
  1664  0693                     	;# 
  1665  0694                     	;# 
  1666  0695                     	;# 
  1667  0696                     	;# 
  1668  0697                     	;# 
  1669  0699                     	;# 
  1670  069A                     	;# 
  1671  0711                     	;# 
  1672  0712                     	;# 
  1673  0713                     	;# 
  1674  0714                     	;# 
  1675  0715                     	;# 
  1676  0718                     	;# 
  1677  0718                     	;# 
  1678  0719                     	;# 
  1679  071A                     	;# 
  1680  071A                     	;# 
  1681  071B                     	;# 
  1682  071C                     	;# 
  1683  071D                     	;# 
  1684  0791                     	;# 
  1685  0791                     	;# 
  1686  0792                     	;# 
  1687  0793                     	;# 
  1688  0793                     	;# 
  1689  0794                     	;# 
  1690  0795                     	;# 
  1691  0795                     	;# 
  1692  0796                     	;# 
  1693  0797                     	;# 
  1694  0797                     	;# 
  1695  0798                     	;# 
  1696  0799                     	;# 
  1697  079A                     	;# 
  1698  080C                     	;# 
  1699  080C                     	;# 
  1700  080D                     	;# 
  1701  080E                     	;# 
  1702  080E                     	;# 
  1703  080F                     	;# 
  1704  0810                     	;# 
  1705  0810                     	;# 
  1706  0811                     	;# 
  1707  0812                     	;# 
  1708  0812                     	;# 
  1709  0813                     	;# 
  1710  0814                     	;# 
  1711  0815                     	;# 
  1712  0816                     	;# 
  1713  0817                     	;# 
  1714  0818                     	;# 
  1715  0819                     	;# 
  1716  081A                     	;# 
  1717  081A                     	;# 
  1718  081B                     	;# 
  1719  081C                     	;# 
  1720  081C                     	;# 
  1721  081D                     	;# 
  1722  088C                     	;# 
  1723  088D                     	;# 
  1724  088E                     	;# 
  1725  088F                     	;# 
  1726  088F                     	;# 
  1727  0890                     	;# 
  1728  0891                     	;# 
  1729  0892                     	;# 
  1730  0893                     	;# 
  1731  0893                     	;# 
  1732  0894                     	;# 
  1733  0895                     	;# 
  1734  0896                     	;# 
  1735  0897                     	;# 
  1736  0897                     	;# 
  1737  0898                     	;# 
  1738  0899                     	;# 
  1739  0D8C                     	;# 
  1740  0D8C                     	;# 
  1741  0D8D                     	;# 
  1742  0D8E                     	;# 
  1743  0D8F                     	;# 
  1744  0D8F                     	;# 
  1745  0D90                     	;# 
  1746  0D91                     	;# 
  1747  0D92                     	;# 
  1748  0D92                     	;# 
  1749  0D93                     	;# 
  1750  0D94                     	;# 
  1751  0D95                     	;# 
  1752  0D95                     	;# 
  1753  0D96                     	;# 
  1754  0D97                     	;# 
  1755  0D98                     	;# 
  1756  0D99                     	;# 
  1757  0D9A                     	;# 
  1758  0D9B                     	;# 
  1759  0D9C                     	;# 
  1760  0D9D                     	;# 
  1761  0D9E                     	;# 
  1762  0D9E                     	;# 
  1763  0D9F                     	;# 
  1764  0DA0                     	;# 
  1765  0DA1                     	;# 
  1766  0DA1                     	;# 
  1767  0DA2                     	;# 
  1768  0DA3                     	;# 
  1769  0DA4                     	;# 
  1770  0DA4                     	;# 
  1771  0DA5                     	;# 
  1772  0DA6                     	;# 
  1773  0DA7                     	;# 
  1774  0DA7                     	;# 
  1775  0DA8                     	;# 
  1776  0DA9                     	;# 
  1777  0DAA                     	;# 
  1778  0DAB                     	;# 
  1779  0DAC                     	;# 
  1780  0DAD                     	;# 
  1781  0DAE                     	;# 
  1782  0DAF                     	;# 
  1783  0E0F                     	;# 
  1784  0E10                     	;# 
  1785  0E11                     	;# 
  1786  0E12                     	;# 
  1787  0E13                     	;# 
  1788  0E14                     	;# 
  1789  0E15                     	;# 
  1790  0E16                     	;# 
  1791  0E17                     	;# 
  1792  0E18                     	;# 
  1793  0E19                     	;# 
  1794  0E1A                     	;# 
  1795  0E1B                     	;# 
  1796  0E1C                     	;# 
  1797  0E1D                     	;# 
  1798  0E1E                     	;# 
  1799  0E1F                     	;# 
  1800  0E20                     	;# 
  1801  0E21                     	;# 
  1802  0E22                     	;# 
  1803  0E23                     	;# 
  1804  0E24                     	;# 
  1805  0E25                     	;# 
  1806  0E26                     	;# 
  1807  0E27                     	;# 
  1808  0E28                     	;# 
  1809  0E29                     	;# 
  1810  0E2A                     	;# 
  1811  0E2B                     	;# 
  1812  0E2C                     	;# 
  1813  0E2D                     	;# 
  1814  0E2E                     	;# 
  1815  0E90                     	;# 
  1816  0E91                     	;# 
  1817  0E92                     	;# 
  1818  0E94                     	;# 
  1819  0E95                     	;# 
  1820  0E9C                     	;# 
  1821  0E9D                     	;# 
  1822  0E9E                     	;# 
  1823  0E9F                     	;# 
  1824  0EA0                     	;# 
  1825  0EA1                     	;# 
  1826  0EA2                     	;# 
  1827  0EA3                     	;# 
  1828  0EA4                     	;# 
  1829  0EA5                     	;# 
  1830  0EA6                     	;# 
  1831  0EA7                     	;# 
  1832  0F0F                     	;# 
  1833  0F10                     	;# 
  1834  0F11                     	;# 
  1835  0F12                     	;# 
  1836  0F13                     	;# 
  1837  0F14                     	;# 
  1838  0F15                     	;# 
  1839  0F16                     	;# 
  1840  0F17                     	;# 
  1841  0F18                     	;# 
  1842  0F19                     	;# 
  1843  0F1A                     	;# 
  1844  0F1B                     	;# 
  1845  0F1C                     	;# 
  1846  0F1D                     	;# 
  1847  0F1E                     	;# 
  1848  0F1F                     	;# 
  1849  0F20                     	;# 
  1850  0F21                     	;# 
  1851  0F22                     	;# 
  1852  0F23                     	;# 
  1853  0F24                     	;# 
  1854  0F25                     	;# 
  1855  0F26                     	;# 
  1856  0F27                     	;# 
  1857  0F28                     	;# 
  1858  0F29                     	;# 
  1859  0F2A                     	;# 
  1860  0F2B                     	;# 
  1861  0F2C                     	;# 
  1862  0F2D                     	;# 
  1863  0F2E                     	;# 
  1864  0F2F                     	;# 
  1865  0F30                     	;# 
  1866  0F31                     	;# 
  1867  0F32                     	;# 
  1868  0F33                     	;# 
  1869  0F34                     	;# 
  1870  0F35                     	;# 
  1871  0F36                     	;# 
  1872  0F37                     	;# 
  1873  0FE4                     	;# 
  1874  0FE5                     	;# 
  1875  0FE6                     	;# 
  1876  0FE7                     	;# 
  1877  0FE8                     	;# 
  1878  0FE9                     	;# 
  1879  0FEA                     	;# 
  1880  0FEB                     	;# 
  1881  0FED                     	;# 
  1882  0FEE                     	;# 
  1883  0FEF                     	;# 
  1884  0000                     	;# 
  1885  0001                     	;# 
  1886  0002                     	;# 
  1887  0003                     	;# 
  1888  0004                     	;# 
  1889  0005                     	;# 
  1890  0006                     	;# 
  1891  0007                     	;# 
  1892  0008                     	;# 
  1893  0009                     	;# 
  1894  000A                     	;# 
  1895  000B                     	;# 
  1896  000C                     	;# 
  1897  000D                     	;# 
  1898  000E                     	;# 
  1899  0010                     	;# 
  1900  0011                     	;# 
  1901  0012                     	;# 
  1902  0013                     	;# 
  1903  0014                     	;# 
  1904  0015                     	;# 
  1905  0016                     	;# 
  1906  0016                     	;# 
  1907  0017                     	;# 
  1908  0018                     	;# 
  1909  0019                     	;# 
  1910  001A                     	;# 
  1911  001A                     	;# 
  1912  001B                     	;# 
  1913  001B                     	;# 
  1914  001C                     	;# 
  1915  001D                     	;# 
  1916  001E                     	;# 
  1917  001F                     	;# 
  1918  008C                     	;# 
  1919  008D                     	;# 
  1920  008E                     	;# 
  1921  0090                     	;# 
  1922  0091                     	;# 
  1923  0092                     	;# 
  1924  0093                     	;# 
  1925  0094                     	;# 
  1926  0095                     	;# 
  1927  0096                     	;# 
  1928  0098                     	;# 
  1929  0099                     	;# 
  1930  009A                     	;# 
  1931  009B                     	;# 
  1932  009B                     	;# 
  1933  009C                     	;# 
  1934  009D                     	;# 
  1935  009E                     	;# 
  1936  009F                     	;# 
  1937  010C                     	;# 
  1938  010D                     	;# 
  1939  010E                     	;# 
  1940  0111                     	;# 
  1941  0112                     	;# 
  1942  0113                     	;# 
  1943  0114                     	;# 
  1944  0115                     	;# 
  1945  0116                     	;# 
  1946  0117                     	;# 
  1947  0118                     	;# 
  1948  0119                     	;# 
  1949  011C                     	;# 
  1950  018C                     	;# 
  1951  018D                     	;# 
  1952  018E                     	;# 
  1953  0191                     	;# 
  1954  0191                     	;# 
  1955  0192                     	;# 
  1956  0193                     	;# 
  1957  0193                     	;# 
  1958  0194                     	;# 
  1959  0195                     	;# 
  1960  0196                     	;# 
  1961  0197                     	;# 
  1962  0199                     	;# 
  1963  0199                     	;# 
  1964  0199                     	;# 
  1965  019A                     	;# 
  1966  019A                     	;# 
  1967  019A                     	;# 
  1968  019B                     	;# 
  1969  019B                     	;# 
  1970  019B                     	;# 
  1971  019B                     	;# 
  1972  019B                     	;# 
  1973  019C                     	;# 
  1974  019C                     	;# 
  1975  019C                     	;# 
  1976  019D                     	;# 
  1977  019D                     	;# 
  1978  019D                     	;# 
  1979  019E                     	;# 
  1980  019E                     	;# 
  1981  019E                     	;# 
  1982  019F                     	;# 
  1983  019F                     	;# 
  1984  019F                     	;# 
  1985  019F                     	;# 
  1986  019F                     	;# 
  1987  020C                     	;# 
  1988  020D                     	;# 
  1989  020E                     	;# 
  1990  0211                     	;# 
  1991  0211                     	;# 
  1992  0212                     	;# 
  1993  0212                     	;# 
  1994  0213                     	;# 
  1995  0213                     	;# 
  1996  0214                     	;# 
  1997  0214                     	;# 
  1998  0215                     	;# 
  1999  0215                     	;# 
  2000  0215                     	;# 
  2001  0215                     	;# 
  2002  0216                     	;# 
  2003  0216                     	;# 
  2004  0217                     	;# 
  2005  0217                     	;# 
  2006  028C                     	;# 
  2007  028D                     	;# 
  2008  028E                     	;# 
  2009  0291                     	;# 
  2010  0291                     	;# 
  2011  0292                     	;# 
  2012  0293                     	;# 
  2013  0294                     	;# 
  2014  0298                     	;# 
  2015  0298                     	;# 
  2016  0299                     	;# 
  2017  029A                     	;# 
  2018  029B                     	;# 
  2019  029E                     	;# 
  2020  030C                     	;# 
  2021  030D                     	;# 
  2022  030E                     	;# 
  2023  038C                     	;# 
  2024  038D                     	;# 
  2025  038E                     	;# 
  2026  0391                     	;# 
  2027  0392                     	;# 
  2028  0393                     	;# 
  2029  0394                     	;# 
  2030  0395                     	;# 
  2031  0396                     	;# 
  2032  0397                     	;# 
  2033  0398                     	;# 
  2034  0399                     	;# 
  2035  040E                     	;# 
  2036  0413                     	;# 
  2037  0413                     	;# 
  2038  0414                     	;# 
  2039  0414                     	;# 
  2040  0415                     	;# 
  2041  0416                     	;# 
  2042  0417                     	;# 
  2043  0418                     	;# 
  2044  041A                     	;# 
  2045  041A                     	;# 
  2046  041B                     	;# 
  2047  041B                     	;# 
  2048  041C                     	;# 
  2049  041D                     	;# 
  2050  041E                     	;# 
  2051  041F                     	;# 
  2052  0493                     	;# 
  2053  0494                     	;# 
  2054  0495                     	;# 
  2055  0496                     	;# 
  2056  049A                     	;# 
  2057  049B                     	;# 
  2058  049C                     	;# 
  2059  049D                     	;# 
  2060  058C                     	;# 
  2061  058C                     	;# 
  2062  058D                     	;# 
  2063  058E                     	;# 
  2064  058E                     	;# 
  2065  058F                     	;# 
  2066  0590                     	;# 
  2067  0590                     	;# 
  2068  0591                     	;# 
  2069  0592                     	;# 
  2070  0592                     	;# 
  2071  0593                     	;# 
  2072  0594                     	;# 
  2073  0594                     	;# 
  2074  0595                     	;# 
  2075  0596                     	;# 
  2076  0596                     	;# 
  2077  0597                     	;# 
  2078  0598                     	;# 
  2079  0599                     	;# 
  2080  059A                     	;# 
  2081  059B                     	;# 
  2082  059B                     	;# 
  2083  059C                     	;# 
  2084  059D                     	;# 
  2085  060C                     	;# 
  2086  060C                     	;# 
  2087  060D                     	;# 
  2088  060E                     	;# 
  2089  060F                     	;# 
  2090  060F                     	;# 
  2091  0610                     	;# 
  2092  0611                     	;# 
  2093  0612                     	;# 
  2094  0613                     	;# 
  2095  0614                     	;# 
  2096  0617                     	;# 
  2097  0617                     	;# 
  2098  0618                     	;# 
  2099  0619                     	;# 
  2100  061A                     	;# 
  2101  061A                     	;# 
  2102  061B                     	;# 
  2103  061C                     	;# 
  2104  0691                     	;# 
  2105  0692                     	;# 
  2106  0693                     	;# 
  2107  0694                     	;# 
  2108  0695                     	;# 
  2109  0696                     	;# 
  2110  0697                     	;# 
  2111  0699                     	;# 
  2112  069A                     	;# 
  2113  0711                     	;# 
  2114  0712                     	;# 
  2115  0713                     	;# 
  2116  0714                     	;# 
  2117  0715                     	;# 
  2118  0718                     	;# 
  2119  0718                     	;# 
  2120  0719                     	;# 
  2121  071A                     	;# 
  2122  071A                     	;# 
  2123  071B                     	;# 
  2124  071C                     	;# 
  2125  071D                     	;# 
  2126  0791                     	;# 
  2127  0791                     	;# 
  2128  0792                     	;# 
  2129  0793                     	;# 
  2130  0793                     	;# 
  2131  0794                     	;# 
  2132  0795                     	;# 
  2133  0795                     	;# 
  2134  0796                     	;# 
  2135  0797                     	;# 
  2136  0797                     	;# 
  2137  0798                     	;# 
  2138  0799                     	;# 
  2139  079A                     	;# 
  2140  080C                     	;# 
  2141  080C                     	;# 
  2142  080D                     	;# 
  2143  080E                     	;# 
  2144  080E                     	;# 
  2145  080F                     	;# 
  2146  0810                     	;# 
  2147  0810                     	;# 
  2148  0811                     	;# 
  2149  0812                     	;# 
  2150  0812                     	;# 
  2151  0813                     	;# 
  2152  0814                     	;# 
  2153  0815                     	;# 
  2154  0816                     	;# 
  2155  0817                     	;# 
  2156  0818                     	;# 
  2157  0819                     	;# 
  2158  081A                     	;# 
  2159  081A                     	;# 
  2160  081B                     	;# 
  2161  081C                     	;# 
  2162  081C                     	;# 
  2163  081D                     	;# 
  2164  088C                     	;# 
  2165  088D                     	;# 
  2166  088E                     	;# 
  2167  088F                     	;# 
  2168  088F                     	;# 
  2169  0890                     	;# 
  2170  0891                     	;# 
  2171  0892                     	;# 
  2172  0893                     	;# 
  2173  0893                     	;# 
  2174  0894                     	;# 
  2175  0895                     	;# 
  2176  0896                     	;# 
  2177  0897                     	;# 
  2178  0897                     	;# 
  2179  0898                     	;# 
  2180  0899                     	;# 
  2181  0D8C                     	;# 
  2182  0D8C                     	;# 
  2183  0D8D                     	;# 
  2184  0D8E                     	;# 
  2185  0D8F                     	;# 
  2186  0D8F                     	;# 
  2187  0D90                     	;# 
  2188  0D91                     	;# 
  2189  0D92                     	;# 
  2190  0D92                     	;# 
  2191  0D93                     	;# 
  2192  0D94                     	;# 
  2193  0D95                     	;# 
  2194  0D95                     	;# 
  2195  0D96                     	;# 
  2196  0D97                     	;# 
  2197  0D98                     	;# 
  2198  0D99                     	;# 
  2199  0D9A                     	;# 
  2200  0D9B                     	;# 
  2201  0D9C                     	;# 
  2202  0D9D                     	;# 
  2203  0D9E                     	;# 
  2204  0D9E                     	;# 
  2205  0D9F                     	;# 
  2206  0DA0                     	;# 
  2207  0DA1                     	;# 
  2208  0DA1                     	;# 
  2209  0DA2                     	;# 
  2210  0DA3                     	;# 
  2211  0DA4                     	;# 
  2212  0DA4                     	;# 
  2213  0DA5                     	;# 
  2214  0DA6                     	;# 
  2215  0DA7                     	;# 
  2216  0DA7                     	;# 
  2217  0DA8                     	;# 
  2218  0DA9                     	;# 
  2219  0DAA                     	;# 
  2220  0DAB                     	;# 
  2221  0DAC                     	;# 
  2222  0DAD                     	;# 
  2223  0DAE                     	;# 
  2224  0DAF                     	;# 
  2225  0E0F                     	;# 
  2226  0E10                     	;# 
  2227  0E11                     	;# 
  2228  0E12                     	;# 
  2229  0E13                     	;# 
  2230  0E14                     	;# 
  2231  0E15                     	;# 
  2232  0E16                     	;# 
  2233  0E17                     	;# 
  2234  0E18                     	;# 
  2235  0E19                     	;# 
  2236  0E1A                     	;# 
  2237  0E1B                     	;# 
  2238  0E1C                     	;# 
  2239  0E1D                     	;# 
  2240  0E1E                     	;# 
  2241  0E1F                     	;# 
  2242  0E20                     	;# 
  2243  0E21                     	;# 
  2244  0E22                     	;# 
  2245  0E23                     	;# 
  2246  0E24                     	;# 
  2247  0E25                     	;# 
  2248  0E26                     	;# 
  2249  0E27                     	;# 
  2250  0E28                     	;# 
  2251  0E29                     	;# 
  2252  0E2A                     	;# 
  2253  0E2B                     	;# 
  2254  0E2C                     	;# 
  2255  0E2D                     	;# 
  2256  0E2E                     	;# 
  2257  0E90                     	;# 
  2258  0E91                     	;# 
  2259  0E92                     	;# 
  2260  0E94                     	;# 
  2261  0E95                     	;# 
  2262  0E9C                     	;# 
  2263  0E9D                     	;# 
  2264  0E9E                     	;# 
  2265  0E9F                     	;# 
  2266  0EA0                     	;# 
  2267  0EA1                     	;# 
  2268  0EA2                     	;# 
  2269  0EA3                     	;# 
  2270  0EA4                     	;# 
  2271  0EA5                     	;# 
  2272  0EA6                     	;# 
  2273  0EA7                     	;# 
  2274  0F0F                     	;# 
  2275  0F10                     	;# 
  2276  0F11                     	;# 
  2277  0F12                     	;# 
  2278  0F13                     	;# 
  2279  0F14                     	;# 
  2280  0F15                     	;# 
  2281  0F16                     	;# 
  2282  0F17                     	;# 
  2283  0F18                     	;# 
  2284  0F19                     	;# 
  2285  0F1A                     	;# 
  2286  0F1B                     	;# 
  2287  0F1C                     	;# 
  2288  0F1D                     	;# 
  2289  0F1E                     	;# 
  2290  0F1F                     	;# 
  2291  0F20                     	;# 
  2292  0F21                     	;# 
  2293  0F22                     	;# 
  2294  0F23                     	;# 
  2295  0F24                     	;# 
  2296  0F25                     	;# 
  2297  0F26                     	;# 
  2298  0F27                     	;# 
  2299  0F28                     	;# 
  2300  0F29                     	;# 
  2301  0F2A                     	;# 
  2302  0F2B                     	;# 
  2303  0F2C                     	;# 
  2304  0F2D                     	;# 
  2305  0F2E                     	;# 
  2306  0F2F                     	;# 
  2307  0F30                     	;# 
  2308  0F31                     	;# 
  2309  0F32                     	;# 
  2310  0F33                     	;# 
  2311  0F34                     	;# 
  2312  0F35                     	;# 
  2313  0F36                     	;# 
  2314  0F37                     	;# 
  2315  0FE4                     	;# 
  2316  0FE5                     	;# 
  2317  0FE6                     	;# 
  2318  0FE7                     	;# 
  2319  0FE8                     	;# 
  2320  0FE9                     	;# 
  2321  0FEA                     	;# 
  2322  0FEB                     	;# 
  2323  0FED                     	;# 
  2324  0FEE                     	;# 
  2325  0FEF                     	;# 
  2326  0000                     	;# 
  2327  0001                     	;# 
  2328  0002                     	;# 
  2329  0003                     	;# 
  2330  0004                     	;# 
  2331  0005                     	;# 
  2332  0006                     	;# 
  2333  0007                     	;# 
  2334  0008                     	;# 
  2335  0009                     	;# 
  2336  000A                     	;# 
  2337  000B                     	;# 
  2338  000C                     	;# 
  2339  000D                     	;# 
  2340  000E                     	;# 
  2341  0010                     	;# 
  2342  0011                     	;# 
  2343  0012                     	;# 
  2344  0013                     	;# 
  2345  0014                     	;# 
  2346  0015                     	;# 
  2347  0016                     	;# 
  2348  0016                     	;# 
  2349  0017                     	;# 
  2350  0018                     	;# 
  2351  0019                     	;# 
  2352  001A                     	;# 
  2353  001A                     	;# 
  2354  001B                     	;# 
  2355  001B                     	;# 
  2356  001C                     	;# 
  2357  001D                     	;# 
  2358  001E                     	;# 
  2359  001F                     	;# 
  2360  008C                     	;# 
  2361  008D                     	;# 
  2362  008E                     	;# 
  2363  0090                     	;# 
  2364  0091                     	;# 
  2365  0092                     	;# 
  2366  0093                     	;# 
  2367  0094                     	;# 
  2368  0095                     	;# 
  2369  0096                     	;# 
  2370  0098                     	;# 
  2371  0099                     	;# 
  2372  009A                     	;# 
  2373  009B                     	;# 
  2374  009B                     	;# 
  2375  009C                     	;# 
  2376  009D                     	;# 
  2377  009E                     	;# 
  2378  009F                     	;# 
  2379  010C                     	;# 
  2380  010D                     	;# 
  2381  010E                     	;# 
  2382  0111                     	;# 
  2383  0112                     	;# 
  2384  0113                     	;# 
  2385  0114                     	;# 
  2386  0115                     	;# 
  2387  0116                     	;# 
  2388  0117                     	;# 
  2389  0118                     	;# 
  2390  0119                     	;# 
  2391  011C                     	;# 
  2392  018C                     	;# 
  2393  018D                     	;# 
  2394  018E                     	;# 
  2395  0191                     	;# 
  2396  0191                     	;# 
  2397  0192                     	;# 
  2398  0193                     	;# 
  2399  0193                     	;# 
  2400  0194                     	;# 
  2401  0195                     	;# 
  2402  0196                     	;# 
  2403  0197                     	;# 
  2404  0199                     	;# 
  2405  0199                     	;# 
  2406  0199                     	;# 
  2407  019A                     	;# 
  2408  019A                     	;# 
  2409  019A                     	;# 
  2410  019B                     	;# 
  2411  019B                     	;# 
  2412  019B                     	;# 
  2413  019B                     	;# 
  2414  019B                     	;# 
  2415  019C                     	;# 
  2416  019C                     	;# 
  2417  019C                     	;# 
  2418  019D                     	;# 
  2419  019D                     	;# 
  2420  019D                     	;# 
  2421  019E                     	;# 
  2422  019E                     	;# 
  2423  019E                     	;# 
  2424  019F                     	;# 
  2425  019F                     	;# 
  2426  019F                     	;# 
  2427  019F                     	;# 
  2428  019F                     	;# 
  2429  020C                     	;# 
  2430  020D                     	;# 
  2431  020E                     	;# 
  2432  0211                     	;# 
  2433  0211                     	;# 
  2434  0212                     	;# 
  2435  0212                     	;# 
  2436  0213                     	;# 
  2437  0213                     	;# 
  2438  0214                     	;# 
  2439  0214                     	;# 
  2440  0215                     	;# 
  2441  0215                     	;# 
  2442  0215                     	;# 
  2443  0215                     	;# 
  2444  0216                     	;# 
  2445  0216                     	;# 
  2446  0217                     	;# 
  2447  0217                     	;# 
  2448  028C                     	;# 
  2449  028D                     	;# 
  2450  028E                     	;# 
  2451  0291                     	;# 
  2452  0291                     	;# 
  2453  0292                     	;# 
  2454  0293                     	;# 
  2455  0294                     	;# 
  2456  0298                     	;# 
  2457  0298                     	;# 
  2458  0299                     	;# 
  2459  029A                     	;# 
  2460  029B                     	;# 
  2461  029E                     	;# 
  2462  030C                     	;# 
  2463  030D                     	;# 
  2464  030E                     	;# 
  2465  038C                     	;# 
  2466  038D                     	;# 
  2467  038E                     	;# 
  2468  0391                     	;# 
  2469  0392                     	;# 
  2470  0393                     	;# 
  2471  0394                     	;# 
  2472  0395                     	;# 
  2473  0396                     	;# 
  2474  0397                     	;# 
  2475  0398                     	;# 
  2476  0399                     	;# 
  2477  040E                     	;# 
  2478  0413                     	;# 
  2479  0413                     	;# 
  2480  0414                     	;# 
  2481  0414                     	;# 
  2482  0415                     	;# 
  2483  0416                     	;# 
  2484  0417                     	;# 
  2485  0418                     	;# 
  2486  041A                     	;# 
  2487  041A                     	;# 
  2488  041B                     	;# 
  2489  041B                     	;# 
  2490  041C                     	;# 
  2491  041D                     	;# 
  2492  041E                     	;# 
  2493  041F                     	;# 
  2494  0493                     	;# 
  2495  0494                     	;# 
  2496  0495                     	;# 
  2497  0496                     	;# 
  2498  049A                     	;# 
  2499  049B                     	;# 
  2500  049C                     	;# 
  2501  049D                     	;# 
  2502  058C                     	;# 
  2503  058C                     	;# 
  2504  058D                     	;# 
  2505  058E                     	;# 
  2506  058E                     	;# 
  2507  058F                     	;# 
  2508  0590                     	;# 
  2509  0590                     	;# 
  2510  0591                     	;# 
  2511  0592                     	;# 
  2512  0592                     	;# 
  2513  0593                     	;# 
  2514  0594                     	;# 
  2515  0594                     	;# 
  2516  0595                     	;# 
  2517  0596                     	;# 
  2518  0596                     	;# 
  2519  0597                     	;# 
  2520  0598                     	;# 
  2521  0599                     	;# 
  2522  059A                     	;# 
  2523  059B                     	;# 
  2524  059B                     	;# 
  2525  059C                     	;# 
  2526  059D                     	;# 
  2527  060C                     	;# 
  2528  060C                     	;# 
  2529  060D                     	;# 
  2530  060E                     	;# 
  2531  060F                     	;# 
  2532  060F                     	;# 
  2533  0610                     	;# 
  2534  0611                     	;# 
  2535  0612                     	;# 
  2536  0613                     	;# 
  2537  0614                     	;# 
  2538  0617                     	;# 
  2539  0617                     	;# 
  2540  0618                     	;# 
  2541  0619                     	;# 
  2542  061A                     	;# 
  2543  061A                     	;# 
  2544  061B                     	;# 
  2545  061C                     	;# 
  2546  0691                     	;# 
  2547  0692                     	;# 
  2548  0693                     	;# 
  2549  0694                     	;# 
  2550  0695                     	;# 
  2551  0696                     	;# 
  2552  0697                     	;# 
  2553  0699                     	;# 
  2554  069A                     	;# 
  2555  0711                     	;# 
  2556  0712                     	;# 
  2557  0713                     	;# 
  2558  0714                     	;# 
  2559  0715                     	;# 
  2560  0718                     	;# 
  2561  0718                     	;# 
  2562  0719                     	;# 
  2563  071A                     	;# 
  2564  071A                     	;# 
  2565  071B                     	;# 
  2566  071C                     	;# 
  2567  071D                     	;# 
  2568  0791                     	;# 
  2569  0791                     	;# 
  2570  0792                     	;# 
  2571  0793                     	;# 
  2572  0793                     	;# 
  2573  0794                     	;# 
  2574  0795                     	;# 
  2575  0795                     	;# 
  2576  0796                     	;# 
  2577  0797                     	;# 
  2578  0797                     	;# 
  2579  0798                     	;# 
  2580  0799                     	;# 
  2581  079A                     	;# 
  2582  080C                     	;# 
  2583  080C                     	;# 
  2584  080D                     	;# 
  2585  080E                     	;# 
  2586  080E                     	;# 
  2587  080F                     	;# 
  2588  0810                     	;# 
  2589  0810                     	;# 
  2590  0811                     	;# 
  2591  0812                     	;# 
  2592  0812                     	;# 
  2593  0813                     	;# 
  2594  0814                     	;# 
  2595  0815                     	;# 
  2596  0816                     	;# 
  2597  0817                     	;# 
  2598  0818                     	;# 
  2599  0819                     	;# 
  2600  081A                     	;# 
  2601  081A                     	;# 
  2602  081B                     	;# 
  2603  081C                     	;# 
  2604  081C                     	;# 
  2605  081D                     	;# 
  2606  088C                     	;# 
  2607  088D                     	;# 
  2608  088E                     	;# 
  2609  088F                     	;# 
  2610  088F                     	;# 
  2611  0890                     	;# 
  2612  0891                     	;# 
  2613  0892                     	;# 
  2614  0893                     	;# 
  2615  0893                     	;# 
  2616  0894                     	;# 
  2617  0895                     	;# 
  2618  0896                     	;# 
  2619  0897                     	;# 
  2620  0897                     	;# 
  2621  0898                     	;# 
  2622  0899                     	;# 
  2623  0D8C                     	;# 
  2624  0D8C                     	;# 
  2625  0D8D                     	;# 
  2626  0D8E                     	;# 
  2627  0D8F                     	;# 
  2628  0D8F                     	;# 
  2629  0D90                     	;# 
  2630  0D91                     	;# 
  2631  0D92                     	;# 
  2632  0D92                     	;# 
  2633  0D93                     	;# 
  2634  0D94                     	;# 
  2635  0D95                     	;# 
  2636  0D95                     	;# 
  2637  0D96                     	;# 
  2638  0D97                     	;# 
  2639  0D98                     	;# 
  2640  0D99                     	;# 
  2641  0D9A                     	;# 
  2642  0D9B                     	;# 
  2643  0D9C                     	;# 
  2644  0D9D                     	;# 
  2645  0D9E                     	;# 
  2646  0D9E                     	;# 
  2647  0D9F                     	;# 
  2648  0DA0                     	;# 
  2649  0DA1                     	;# 
  2650  0DA1                     	;# 
  2651  0DA2                     	;# 
  2652  0DA3                     	;# 
  2653  0DA4                     	;# 
  2654  0DA4                     	;# 
  2655  0DA5                     	;# 
  2656  0DA6                     	;# 
  2657  0DA7                     	;# 
  2658  0DA7                     	;# 
  2659  0DA8                     	;# 
  2660  0DA9                     	;# 
  2661  0DAA                     	;# 
  2662  0DAB                     	;# 
  2663  0DAC                     	;# 
  2664  0DAD                     	;# 
  2665  0DAE                     	;# 
  2666  0DAF                     	;# 
  2667  0E0F                     	;# 
  2668  0E10                     	;# 
  2669  0E11                     	;# 
  2670  0E12                     	;# 
  2671  0E13                     	;# 
  2672  0E14                     	;# 
  2673  0E15                     	;# 
  2674  0E16                     	;# 
  2675  0E17                     	;# 
  2676  0E18                     	;# 
  2677  0E19                     	;# 
  2678  0E1A                     	;# 
  2679  0E1B                     	;# 
  2680  0E1C                     	;# 
  2681  0E1D                     	;# 
  2682  0E1E                     	;# 
  2683  0E1F                     	;# 
  2684  0E20                     	;# 
  2685  0E21                     	;# 
  2686  0E22                     	;# 
  2687  0E23                     	;# 
  2688  0E24                     	;# 
  2689  0E25                     	;# 
  2690  0E26                     	;# 
  2691  0E27                     	;# 
  2692  0E28                     	;# 
  2693  0E29                     	;# 
  2694  0E2A                     	;# 
  2695  0E2B                     	;# 
  2696  0E2C                     	;# 
  2697  0E2D                     	;# 
  2698  0E2E                     	;# 
  2699  0E90                     	;# 
  2700  0E91                     	;# 
  2701  0E92                     	;# 
  2702  0E94                     	;# 
  2703  0E95                     	;# 
  2704  0E9C                     	;# 
  2705  0E9D                     	;# 
  2706  0E9E                     	;# 
  2707  0E9F                     	;# 
  2708  0EA0                     	;# 
  2709  0EA1                     	;# 
  2710  0EA2                     	;# 
  2711  0EA3                     	;# 
  2712  0EA4                     	;# 
  2713  0EA5                     	;# 
  2714  0EA6                     	;# 
  2715  0EA7                     	;# 
  2716  0F0F                     	;# 
  2717  0F10                     	;# 
  2718  0F11                     	;# 
  2719  0F12                     	;# 
  2720  0F13                     	;# 
  2721  0F14                     	;# 
  2722  0F15                     	;# 
  2723  0F16                     	;# 
  2724  0F17                     	;# 
  2725  0F18                     	;# 
  2726  0F19                     	;# 
  2727  0F1A                     	;# 
  2728  0F1B                     	;# 
  2729  0F1C                     	;# 
  2730  0F1D                     	;# 
  2731  0F1E                     	;# 
  2732  0F1F                     	;# 
  2733  0F20                     	;# 
  2734  0F21                     	;# 
  2735  0F22                     	;# 
  2736  0F23                     	;# 
  2737  0F24                     	;# 
  2738  0F25                     	;# 
  2739  0F26                     	;# 
  2740  0F27                     	;# 
  2741  0F28                     	;# 
  2742  0F29                     	;# 
  2743  0F2A                     	;# 
  2744  0F2B                     	;# 
  2745  0F2C                     	;# 
  2746  0F2D                     	;# 
  2747  0F2E                     	;# 
  2748  0F2F                     	;# 
  2749  0F30                     	;# 
  2750  0F31                     	;# 
  2751  0F32                     	;# 
  2752  0F33                     	;# 
  2753  0F34                     	;# 
  2754  0F35                     	;# 
  2755  0F36                     	;# 
  2756  0F37                     	;# 
  2757  0FE4                     	;# 
  2758  0FE5                     	;# 
  2759  0FE6                     	;# 
  2760  0FE7                     	;# 
  2761  0FE8                     	;# 
  2762  0FE9                     	;# 
  2763  0FEA                     	;# 
  2764  0FEB                     	;# 
  2765  0FED                     	;# 
  2766  0FEE                     	;# 
  2767  0FEF                     	;# 
  2768  0000                     	;# 
  2769  0001                     	;# 
  2770  0002                     	;# 
  2771  0003                     	;# 
  2772  0004                     	;# 
  2773  0005                     	;# 
  2774  0006                     	;# 
  2775  0007                     	;# 
  2776  0008                     	;# 
  2777  0009                     	;# 
  2778  000A                     	;# 
  2779  000B                     	;# 
  2780  000C                     	;# 
  2781  000D                     	;# 
  2782  000E                     	;# 
  2783  0010                     	;# 
  2784  0011                     	;# 
  2785  0012                     	;# 
  2786  0013                     	;# 
  2787  0014                     	;# 
  2788  0015                     	;# 
  2789  0016                     	;# 
  2790  0016                     	;# 
  2791  0017                     	;# 
  2792  0018                     	;# 
  2793  0019                     	;# 
  2794  001A                     	;# 
  2795  001A                     	;# 
  2796  001B                     	;# 
  2797  001B                     	;# 
  2798  001C                     	;# 
  2799  001D                     	;# 
  2800  001E                     	;# 
  2801  001F                     	;# 
  2802  008C                     	;# 
  2803  008D                     	;# 
  2804  008E                     	;# 
  2805  0090                     	;# 
  2806  0091                     	;# 
  2807  0092                     	;# 
  2808  0093                     	;# 
  2809  0094                     	;# 
  2810  0095                     	;# 
  2811  0096                     	;# 
  2812  0098                     	;# 
  2813  0099                     	;# 
  2814  009A                     	;# 
  2815  009B                     	;# 
  2816  009B                     	;# 
  2817  009C                     	;# 
  2818  009D                     	;# 
  2819  009E                     	;# 
  2820  009F                     	;# 
  2821  010C                     	;# 
  2822  010D                     	;# 
  2823  010E                     	;# 
  2824  0111                     	;# 
  2825  0112                     	;# 
  2826  0113                     	;# 
  2827  0114                     	;# 
  2828  0115                     	;# 
  2829  0116                     	;# 
  2830  0117                     	;# 
  2831  0118                     	;# 
  2832  0119                     	;# 
  2833  011C                     	;# 
  2834  018C                     	;# 
  2835  018D                     	;# 
  2836  018E                     	;# 
  2837  0191                     	;# 
  2838  0191                     	;# 
  2839  0192                     	;# 
  2840  0193                     	;# 
  2841  0193                     	;# 
  2842  0194                     	;# 
  2843  0195                     	;# 
  2844  0196                     	;# 
  2845  0197                     	;# 
  2846  0199                     	;# 
  2847  0199                     	;# 
  2848  0199                     	;# 
  2849  019A                     	;# 
  2850  019A                     	;# 
  2851  019A                     	;# 
  2852  019B                     	;# 
  2853  019B                     	;# 
  2854  019B                     	;# 
  2855  019B                     	;# 
  2856  019B                     	;# 
  2857  019C                     	;# 
  2858  019C                     	;# 
  2859  019C                     	;# 
  2860  019D                     	;# 
  2861  019D                     	;# 
  2862  019D                     	;# 
  2863  019E                     	;# 
  2864  019E                     	;# 
  2865  019E                     	;# 
  2866  019F                     	;# 
  2867  019F                     	;# 
  2868  019F                     	;# 
  2869  019F                     	;# 
  2870  019F                     	;# 
  2871  020C                     	;# 
  2872  020D                     	;# 
  2873  020E                     	;# 
  2874  0211                     	;# 
  2875  0211                     	;# 
  2876  0212                     	;# 
  2877  0212                     	;# 
  2878  0213                     	;# 
  2879  0213                     	;# 
  2880  0214                     	;# 
  2881  0214                     	;# 
  2882  0215                     	;# 
  2883  0215                     	;# 
  2884  0215                     	;# 
  2885  0215                     	;# 
  2886  0216                     	;# 
  2887  0216                     	;# 
  2888  0217                     	;# 
  2889  0217                     	;# 
  2890  028C                     	;# 
  2891  028D                     	;# 
  2892  028E                     	;# 
  2893  0291                     	;# 
  2894  0291                     	;# 
  2895  0292                     	;# 
  2896  0293                     	;# 
  2897  0294                     	;# 
  2898  0298                     	;# 
  2899  0298                     	;# 
  2900  0299                     	;# 
  2901  029A                     	;# 
  2902  029B                     	;# 
  2903  029E                     	;# 
  2904  030C                     	;# 
  2905  030D                     	;# 
  2906  030E                     	;# 
  2907  038C                     	;# 
  2908  038D                     	;# 
  2909  038E                     	;# 
  2910  0391                     	;# 
  2911  0392                     	;# 
  2912  0393                     	;# 
  2913  0394                     	;# 
  2914  0395                     	;# 
  2915  0396                     	;# 
  2916  0397                     	;# 
  2917  0398                     	;# 
  2918  0399                     	;# 
  2919  040E                     	;# 
  2920  0413                     	;# 
  2921  0413                     	;# 
  2922  0414                     	;# 
  2923  0414                     	;# 
  2924  0415                     	;# 
  2925  0416                     	;# 
  2926  0417                     	;# 
  2927  0418                     	;# 
  2928  041A                     	;# 
  2929  041A                     	;# 
  2930  041B                     	;# 
  2931  041B                     	;# 
  2932  041C                     	;# 
  2933  041D                     	;# 
  2934  041E                     	;# 
  2935  041F                     	;# 
  2936  0493                     	;# 
  2937  0494                     	;# 
  2938  0495                     	;# 
  2939  0496                     	;# 
  2940  049A                     	;# 
  2941  049B                     	;# 
  2942  049C                     	;# 
  2943  049D                     	;# 
  2944  058C                     	;# 
  2945  058C                     	;# 
  2946  058D                     	;# 
  2947  058E                     	;# 
  2948  058E                     	;# 
  2949  058F                     	;# 
  2950  0590                     	;# 
  2951  0590                     	;# 
  2952  0591                     	;# 
  2953  0592                     	;# 
  2954  0592                     	;# 
  2955  0593                     	;# 
  2956  0594                     	;# 
  2957  0594                     	;# 
  2958  0595                     	;# 
  2959  0596                     	;# 
  2960  0596                     	;# 
  2961  0597                     	;# 
  2962  0598                     	;# 
  2963  0599                     	;# 
  2964  059A                     	;# 
  2965  059B                     	;# 
  2966  059B                     	;# 
  2967  059C                     	;# 
  2968  059D                     	;# 
  2969  060C                     	;# 
  2970  060C                     	;# 
  2971  060D                     	;# 
  2972  060E                     	;# 
  2973  060F                     	;# 
  2974  060F                     	;# 
  2975  0610                     	;# 
  2976  0611                     	;# 
  2977  0612                     	;# 
  2978  0613                     	;# 
  2979  0614                     	;# 
  2980  0617                     	;# 
  2981  0617                     	;# 
  2982  0618                     	;# 
  2983  0619                     	;# 
  2984  061A                     	;# 
  2985  061A                     	;# 
  2986  061B                     	;# 
  2987  061C                     	;# 
  2988  0691                     	;# 
  2989  0692                     	;# 
  2990  0693                     	;# 
  2991  0694                     	;# 
  2992  0695                     	;# 
  2993  0696                     	;# 
  2994  0697                     	;# 
  2995  0699                     	;# 
  2996  069A                     	;# 
  2997  0711                     	;# 
  2998  0712                     	;# 
  2999  0713                     	;# 
  3000  0714                     	;# 
  3001  0715                     	;# 
  3002  0718                     	;# 
  3003  0718                     	;# 
  3004  0719                     	;# 
  3005  071A                     	;# 
  3006  071A                     	;# 
  3007  071B                     	;# 
  3008  071C                     	;# 
  3009  071D                     	;# 
  3010  0791                     	;# 
  3011  0791                     	;# 
  3012  0792                     	;# 
  3013  0793                     	;# 
  3014  0793                     	;# 
  3015  0794                     	;# 
  3016  0795                     	;# 
  3017  0795                     	;# 
  3018  0796                     	;# 
  3019  0797                     	;# 
  3020  0797                     	;# 
  3021  0798                     	;# 
  3022  0799                     	;# 
  3023  079A                     	;# 
  3024  080C                     	;# 
  3025  080C                     	;# 
  3026  080D                     	;# 
  3027  080E                     	;# 
  3028  080E                     	;# 
  3029  080F                     	;# 
  3030  0810                     	;# 
  3031  0810                     	;# 
  3032  0811                     	;# 
  3033  0812                     	;# 
  3034  0812                     	;# 
  3035  0813                     	;# 
  3036  0814                     	;# 
  3037  0815                     	;# 
  3038  0816                     	;# 
  3039  0817                     	;# 
  3040  0818                     	;# 
  3041  0819                     	;# 
  3042  081A                     	;# 
  3043  081A                     	;# 
  3044  081B                     	;# 
  3045  081C                     	;# 
  3046  081C                     	;# 
  3047  081D                     	;# 
  3048  088C                     	;# 
  3049  088D                     	;# 
  3050  088E                     	;# 
  3051  088F                     	;# 
  3052  088F                     	;# 
  3053  0890                     	;# 
  3054  0891                     	;# 
  3055  0892                     	;# 
  3056  0893                     	;# 
  3057  0893                     	;# 
  3058  0894                     	;# 
  3059  0895                     	;# 
  3060  0896                     	;# 
  3061  0897                     	;# 
  3062  0897                     	;# 
  3063  0898                     	;# 
  3064  0899                     	;# 
  3065  0D8C                     	;# 
  3066  0D8C                     	;# 
  3067  0D8D                     	;# 
  3068  0D8E                     	;# 
  3069  0D8F                     	;# 
  3070  0D8F                     	;# 
  3071  0D90                     	;# 
  3072  0D91                     	;# 
  3073  0D92                     	;# 
  3074  0D92                     	;# 
  3075  0D93                     	;# 
  3076  0D94                     	;# 
  3077  0D95                     	;# 
  3078  0D95                     	;# 
  3079  0D96                     	;# 
  3080  0D97                     	;# 
  3081  0D98                     	;# 
  3082  0D99                     	;# 
  3083  0D9A                     	;# 
  3084  0D9B                     	;# 
  3085  0D9C                     	;# 
  3086  0D9D                     	;# 
  3087  0D9E                     	;# 
  3088  0D9E                     	;# 
  3089  0D9F                     	;# 
  3090  0DA0                     	;# 
  3091  0DA1                     	;# 
  3092  0DA1                     	;# 
  3093  0DA2                     	;# 
  3094  0DA3                     	;# 
  3095  0DA4                     	;# 
  3096  0DA4                     	;# 
  3097  0DA5                     	;# 
  3098  0DA6                     	;# 
  3099  0DA7                     	;# 
  3100  0DA7                     	;# 
  3101  0DA8                     	;# 
  3102  0DA9                     	;# 
  3103  0DAA                     	;# 
  3104  0DAB                     	;# 
  3105  0DAC                     	;# 
  3106  0DAD                     	;# 
  3107  0DAE                     	;# 
  3108  0DAF                     	;# 
  3109  0E0F                     	;# 
  3110  0E10                     	;# 
  3111  0E11                     	;# 
  3112  0E12                     	;# 
  3113  0E13                     	;# 
  3114  0E14                     	;# 
  3115  0E15                     	;# 
  3116  0E16                     	;# 
  3117  0E17                     	;# 
  3118  0E18                     	;# 
  3119  0E19                     	;# 
  3120  0E1A                     	;# 
  3121  0E1B                     	;# 
  3122  0E1C                     	;# 
  3123  0E1D                     	;# 
  3124  0E1E                     	;# 
  3125  0E1F                     	;# 
  3126  0E20                     	;# 
  3127  0E21                     	;# 
  3128  0E22                     	;# 
  3129  0E23                     	;# 
  3130  0E24                     	;# 
  3131  0E25                     	;# 
  3132  0E26                     	;# 
  3133  0E27                     	;# 
  3134  0E28                     	;# 
  3135  0E29                     	;# 
  3136  0E2A                     	;# 
  3137  0E2B                     	;# 
  3138  0E2C                     	;# 
  3139  0E2D                     	;# 
  3140  0E2E                     	;# 
  3141  0E90                     	;# 
  3142  0E91                     	;# 
  3143  0E92                     	;# 
  3144  0E94                     	;# 
  3145  0E95                     	;# 
  3146  0E9C                     	;# 
  3147  0E9D                     	;# 
  3148  0E9E                     	;# 
  3149  0E9F                     	;# 
  3150  0EA0                     	;# 
  3151  0EA1                     	;# 
  3152  0EA2                     	;# 
  3153  0EA3                     	;# 
  3154  0EA4                     	;# 
  3155  0EA5                     	;# 
  3156  0EA6                     	;# 
  3157  0EA7                     	;# 
  3158  0F0F                     	;# 
  3159  0F10                     	;# 
  3160  0F11                     	;# 
  3161  0F12                     	;# 
  3162  0F13                     	;# 
  3163  0F14                     	;# 
  3164  0F15                     	;# 
  3165  0F16                     	;# 
  3166  0F17                     	;# 
  3167  0F18                     	;# 
  3168  0F19                     	;# 
  3169  0F1A                     	;# 
  3170  0F1B                     	;# 
  3171  0F1C                     	;# 
  3172  0F1D                     	;# 
  3173  0F1E                     	;# 
  3174  0F1F                     	;# 
  3175  0F20                     	;# 
  3176  0F21                     	;# 
  3177  0F22                     	;# 
  3178  0F23                     	;# 
  3179  0F24                     	;# 
  3180  0F25                     	;# 
  3181  0F26                     	;# 
  3182  0F27                     	;# 
  3183  0F28                     	;# 
  3184  0F29                     	;# 
  3185  0F2A                     	;# 
  3186  0F2B                     	;# 
  3187  0F2C                     	;# 
  3188  0F2D                     	;# 
  3189  0F2E                     	;# 
  3190  0F2F                     	;# 
  3191  0F30                     	;# 
  3192  0F31                     	;# 
  3193  0F32                     	;# 
  3194  0F33                     	;# 
  3195  0F34                     	;# 
  3196  0F35                     	;# 
  3197  0F36                     	;# 
  3198  0F37                     	;# 
  3199  0FE4                     	;# 
  3200  0FE5                     	;# 
  3201  0FE6                     	;# 
  3202  0FE7                     	;# 
  3203  0FE8                     	;# 
  3204  0FE9                     	;# 
  3205  0FEA                     	;# 
  3206  0FEB                     	;# 
  3207  0FED                     	;# 
  3208  0FEE                     	;# 
  3209  0FEF                     	;# 
  3210  0000                     	;# 
  3211  0001                     	;# 
  3212  0002                     	;# 
  3213  0003                     	;# 
  3214  0004                     	;# 
  3215  0005                     	;# 
  3216  0006                     	;# 
  3217  0007                     	;# 
  3218  0008                     	;# 
  3219  0009                     	;# 
  3220  000A                     	;# 
  3221  000B                     	;# 
  3222  000C                     	;# 
  3223  000D                     	;# 
  3224  000E                     	;# 
  3225  0010                     	;# 
  3226  0011                     	;# 
  3227  0012                     	;# 
  3228  0013                     	;# 
  3229  0014                     	;# 
  3230  0015                     	;# 
  3231  0016                     	;# 
  3232  0016                     	;# 
  3233  0017                     	;# 
  3234  0018                     	;# 
  3235  0019                     	;# 
  3236  001A                     	;# 
  3237  001A                     	;# 
  3238  001B                     	;# 
  3239  001B                     	;# 
  3240  001C                     	;# 
  3241  001D                     	;# 
  3242  001E                     	;# 
  3243  001F                     	;# 
  3244  008C                     	;# 
  3245  008D                     	;# 
  3246  008E                     	;# 
  3247  0090                     	;# 
  3248  0091                     	;# 
  3249  0092                     	;# 
  3250  0093                     	;# 
  3251  0094                     	;# 
  3252  0095                     	;# 
  3253  0096                     	;# 
  3254  0098                     	;# 
  3255  0099                     	;# 
  3256  009A                     	;# 
  3257  009B                     	;# 
  3258  009B                     	;# 
  3259  009C                     	;# 
  3260  009D                     	;# 
  3261  009E                     	;# 
  3262  009F                     	;# 
  3263  010C                     	;# 
  3264  010D                     	;# 
  3265  010E                     	;# 
  3266  0111                     	;# 
  3267  0112                     	;# 
  3268  0113                     	;# 
  3269  0114                     	;# 
  3270  0115                     	;# 
  3271  0116                     	;# 
  3272  0117                     	;# 
  3273  0118                     	;# 
  3274  0119                     	;# 
  3275  011C                     	;# 
  3276  018C                     	;# 
  3277  018D                     	;# 
  3278  018E                     	;# 
  3279  0191                     	;# 
  3280  0191                     	;# 
  3281  0192                     	;# 
  3282  0193                     	;# 
  3283  0193                     	;# 
  3284  0194                     	;# 
  3285  0195                     	;# 
  3286  0196                     	;# 
  3287  0197                     	;# 
  3288  0199                     	;# 
  3289  0199                     	;# 
  3290  0199                     	;# 
  3291  019A                     	;# 
  3292  019A                     	;# 
  3293  019A                     	;# 
  3294  019B                     	;# 
  3295  019B                     	;# 
  3296  019B                     	;# 
  3297  019B                     	;# 
  3298  019B                     	;# 
  3299  019C                     	;# 
  3300  019C                     	;# 
  3301  019C                     	;# 
  3302  019D                     	;# 
  3303  019D                     	;# 
  3304  019D                     	;# 
  3305  019E                     	;# 
  3306  019E                     	;# 
  3307  019E                     	;# 
  3308  019F                     	;# 
  3309  019F                     	;# 
  3310  019F                     	;# 
  3311  019F                     	;# 
  3312  019F                     	;# 
  3313  020C                     	;# 
  3314  020D                     	;# 
  3315  020E                     	;# 
  3316  0211                     	;# 
  3317  0211                     	;# 
  3318  0212                     	;# 
  3319  0212                     	;# 
  3320  0213                     	;# 
  3321  0213                     	;# 
  3322  0214                     	;# 
  3323  0214                     	;# 
  3324  0215                     	;# 
  3325  0215                     	;# 
  3326  0215                     	;# 
  3327  0215                     	;# 
  3328  0216                     	;# 
  3329  0216                     	;# 
  3330  0217                     	;# 
  3331  0217                     	;# 
  3332  028C                     	;# 
  3333  028D                     	;# 
  3334  028E                     	;# 
  3335  0291                     	;# 
  3336  0291                     	;# 
  3337  0292                     	;# 
  3338  0293                     	;# 
  3339  0294                     	;# 
  3340  0298                     	;# 
  3341  0298                     	;# 
  3342  0299                     	;# 
  3343  029A                     	;# 
  3344  029B                     	;# 
  3345  029E                     	;# 
  3346  030C                     	;# 
  3347  030D                     	;# 
  3348  030E                     	;# 
  3349  038C                     	;# 
  3350  038D                     	;# 
  3351  038E                     	;# 
  3352  0391                     	;# 
  3353  0392                     	;# 
  3354  0393                     	;# 
  3355  0394                     	;# 
  3356  0395                     	;# 
  3357  0396                     	;# 
  3358  0397                     	;# 
  3359  0398                     	;# 
  3360  0399                     	;# 
  3361  040E                     	;# 
  3362  0413                     	;# 
  3363  0413                     	;# 
  3364  0414                     	;# 
  3365  0414                     	;# 
  3366  0415                     	;# 
  3367  0416                     	;# 
  3368  0417                     	;# 
  3369  0418                     	;# 
  3370  041A                     	;# 
  3371  041A                     	;# 
  3372  041B                     	;# 
  3373  041B                     	;# 
  3374  041C                     	;# 
  3375  041D                     	;# 
  3376  041E                     	;# 
  3377  041F                     	;# 
  3378  0493                     	;# 
  3379  0494                     	;# 
  3380  0495                     	;# 
  3381  0496                     	;# 
  3382  049A                     	;# 
  3383  049B                     	;# 
  3384  049C                     	;# 
  3385  049D                     	;# 
  3386  058C                     	;# 
  3387  058C                     	;# 
  3388  058D                     	;# 
  3389  058E                     	;# 
  3390  058E                     	;# 
  3391  058F                     	;# 
  3392  0590                     	;# 
  3393  0590                     	;# 
  3394  0591                     	;# 
  3395  0592                     	;# 
  3396  0592                     	;# 
  3397  0593                     	;# 
  3398  0594                     	;# 
  3399  0594                     	;# 
  3400  0595                     	;# 
  3401  0596                     	;# 
  3402  0596                     	;# 
  3403  0597                     	;# 
  3404  0598                     	;# 
  3405  0599                     	;# 
  3406  059A                     	;# 
  3407  059B                     	;# 
  3408  059B                     	;# 
  3409  059C                     	;# 
  3410  059D                     	;# 
  3411  060C                     	;# 
  3412  060C                     	;# 
  3413  060D                     	;# 
  3414  060E                     	;# 
  3415  060F                     	;# 
  3416  060F                     	;# 
  3417  0610                     	;# 
  3418  0611                     	;# 
  3419  0612                     	;# 
  3420  0613                     	;# 
  3421  0614                     	;# 
  3422  0617                     	;# 
  3423  0617                     	;# 
  3424  0618                     	;# 
  3425  0619                     	;# 
  3426  061A                     	;# 
  3427  061A                     	;# 
  3428  061B                     	;# 
  3429  061C                     	;# 
  3430  0691                     	;# 
  3431  0692                     	;# 
  3432  0693                     	;# 
  3433  0694                     	;# 
  3434  0695                     	;# 
  3435  0696                     	;# 
  3436  0697                     	;# 
  3437  0699                     	;# 
  3438  069A                     	;# 
  3439  0711                     	;# 
  3440  0712                     	;# 
  3441  0713                     	;# 
  3442  0714                     	;# 
  3443  0715                     	;# 
  3444  0718                     	;# 
  3445  0718                     	;# 
  3446  0719                     	;# 
  3447  071A                     	;# 
  3448  071A                     	;# 
  3449  071B                     	;# 
  3450  071C                     	;# 
  3451  071D                     	;# 
  3452  0791                     	;# 
  3453  0791                     	;# 
  3454  0792                     	;# 
  3455  0793                     	;# 
  3456  0793                     	;# 
  3457  0794                     	;# 
  3458  0795                     	;# 
  3459  0795                     	;# 
  3460  0796                     	;# 
  3461  0797                     	;# 
  3462  0797                     	;# 
  3463  0798                     	;# 
  3464  0799                     	;# 
  3465  079A                     	;# 
  3466  080C                     	;# 
  3467  080C                     	;# 
  3468  080D                     	;# 
  3469  080E                     	;# 
  3470  080E                     	;# 
  3471  080F                     	;# 
  3472  0810                     	;# 
  3473  0810                     	;# 
  3474  0811                     	;# 
  3475  0812                     	;# 
  3476  0812                     	;# 
  3477  0813                     	;# 
  3478  0814                     	;# 
  3479  0815                     	;# 
  3480  0816                     	;# 
  3481  0817                     	;# 
  3482  0818                     	;# 
  3483  0819                     	;# 
  3484  081A                     	;# 
  3485  081A                     	;# 
  3486  081B                     	;# 
  3487  081C                     	;# 
  3488  081C                     	;# 
  3489  081D                     	;# 
  3490  088C                     	;# 
  3491  088D                     	;# 
  3492  088E                     	;# 
  3493  088F                     	;# 
  3494  088F                     	;# 
  3495  0890                     	;# 
  3496  0891                     	;# 
  3497  0892                     	;# 
  3498  0893                     	;# 
  3499  0893                     	;# 
  3500  0894                     	;# 
  3501  0895                     	;# 
  3502  0896                     	;# 
  3503  0897                     	;# 
  3504  0897                     	;# 
  3505  0898                     	;# 
  3506  0899                     	;# 
  3507  0D8C                     	;# 
  3508  0D8C                     	;# 
  3509  0D8D                     	;# 
  3510  0D8E                     	;# 
  3511  0D8F                     	;# 
  3512  0D8F                     	;# 
  3513  0D90                     	;# 
  3514  0D91                     	;# 
  3515  0D92                     	;# 
  3516  0D92                     	;# 
  3517  0D93                     	;# 
  3518  0D94                     	;# 
  3519  0D95                     	;# 
  3520  0D95                     	;# 
  3521  0D96                     	;# 
  3522  0D97                     	;# 
  3523  0D98                     	;# 
  3524  0D99                     	;# 
  3525  0D9A                     	;# 
  3526  0D9B                     	;# 
  3527  0D9C                     	;# 
  3528  0D9D                     	;# 
  3529  0D9E                     	;# 
  3530  0D9E                     	;# 
  3531  0D9F                     	;# 
  3532  0DA0                     	;# 
  3533  0DA1                     	;# 
  3534  0DA1                     	;# 
  3535  0DA2                     	;# 
  3536  0DA3                     	;# 
  3537  0DA4                     	;# 
  3538  0DA4                     	;# 
  3539  0DA5                     	;# 
  3540  0DA6                     	;# 
  3541  0DA7                     	;# 
  3542  0DA7                     	;# 
  3543  0DA8                     	;# 
  3544  0DA9                     	;# 
  3545  0DAA                     	;# 
  3546  0DAB                     	;# 
  3547  0DAC                     	;# 
  3548  0DAD                     	;# 
  3549  0DAE                     	;# 
  3550  0DAF                     	;# 
  3551  0E0F                     	;# 
  3552  0E10                     	;# 
  3553  0E11                     	;# 
  3554  0E12                     	;# 
  3555  0E13                     	;# 
  3556  0E14                     	;# 
  3557  0E15                     	;# 
  3558  0E16                     	;# 
  3559  0E17                     	;# 
  3560  0E18                     	;# 
  3561  0E19                     	;# 
  3562  0E1A                     	;# 
  3563  0E1B                     	;# 
  3564  0E1C                     	;# 
  3565  0E1D                     	;# 
  3566  0E1E                     	;# 
  3567  0E1F                     	;# 
  3568  0E20                     	;# 
  3569  0E21                     	;# 
  3570  0E22                     	;# 
  3571  0E23                     	;# 
  3572  0E24                     	;# 
  3573  0E25                     	;# 
  3574  0E26                     	;# 
  3575  0E27                     	;# 
  3576  0E28                     	;# 
  3577  0E29                     	;# 
  3578  0E2A                     	;# 
  3579  0E2B                     	;# 
  3580  0E2C                     	;# 
  3581  0E2D                     	;# 
  3582  0E2E                     	;# 
  3583  0E90                     	;# 
  3584  0E91                     	;# 
  3585  0E92                     	;# 
  3586  0E94                     	;# 
  3587  0E95                     	;# 
  3588  0E9C                     	;# 
  3589  0E9D                     	;# 
  3590  0E9E                     	;# 
  3591  0E9F                     	;# 
  3592  0EA0                     	;# 
  3593  0EA1                     	;# 
  3594  0EA2                     	;# 
  3595  0EA3                     	;# 
  3596  0EA4                     	;# 
  3597  0EA5                     	;# 
  3598  0EA6                     	;# 
  3599  0EA7                     	;# 
  3600  0F0F                     	;# 
  3601  0F10                     	;# 
  3602  0F11                     	;# 
  3603  0F12                     	;# 
  3604  0F13                     	;# 
  3605  0F14                     	;# 
  3606  0F15                     	;# 
  3607  0F16                     	;# 
  3608  0F17                     	;# 
  3609  0F18                     	;# 
  3610  0F19                     	;# 
  3611  0F1A                     	;# 
  3612  0F1B                     	;# 
  3613  0F1C                     	;# 
  3614  0F1D                     	;# 
  3615  0F1E                     	;# 
  3616  0F1F                     	;# 
  3617  0F20                     	;# 
  3618  0F21                     	;# 
  3619  0F22                     	;# 
  3620  0F23                     	;# 
  3621  0F24                     	;# 
  3622  0F25                     	;# 
  3623  0F26                     	;# 
  3624  0F27                     	;# 
  3625  0F28                     	;# 
  3626  0F29                     	;# 
  3627  0F2A                     	;# 
  3628  0F2B                     	;# 
  3629  0F2C                     	;# 
  3630  0F2D                     	;# 
  3631  0F2E                     	;# 
  3632  0F2F                     	;# 
  3633  0F30                     	;# 
  3634  0F31                     	;# 
  3635  0F32                     	;# 
  3636  0F33                     	;# 
  3637  0F34                     	;# 
  3638  0F35                     	;# 
  3639  0F36                     	;# 
  3640  0F37                     	;# 
  3641  0FE4                     	;# 
  3642  0FE5                     	;# 
  3643  0FE6                     	;# 
  3644  0FE7                     	;# 
  3645  0FE8                     	;# 
  3646  0FE9                     	;# 
  3647  0FEA                     	;# 
  3648  0FEB                     	;# 
  3649  0FED                     	;# 
  3650  0FEE                     	;# 
  3651  0FEF                     	;# 
  3652                           
  3653 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  3654  0000                     
  3655 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  3656  0000                     
  3657 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  3658  0000                     
  3659                           	psect	idataBANK0
  3660  1487                     __pidataBANK0:	
  3661                           
  3662                           ;initializer for _IBI
  3663  1487  3458               	retlw	88
  3664  1488  3402               	retlw	2
  3665                           
  3666                           ;initializer for _thresh
  3667  1489  3412               	retlw	18
  3668  148A  3402               	retlw	2
  3669                           
  3670                           ;initializer for _T
  3671  148B  3400               	retlw	0
  3672  148C  3402               	retlw	2
  3673                           
  3674                           ;initializer for _firstBeat
  3675  148D  3401               	retlw	1
  3676                           
  3677                           	psect	idataBANK2
  3678  0002                     __pidataBANK2:	
  3679                           
  3680                           ;initializer for _P
  3681  0002  3400               	retlw	0
  3682  0003  3402               	retlw	2
  3683                           
  3684                           	psect	idataBANK3
  3685  15F2                     __pidataBANK3:	
  3686                           
  3687                           ;initializer for _hrDisp
  3688  15F2  3448               	retlw	72
  3689  15F3  3465               	retlw	101
  3690  15F4  3461               	retlw	97
  3691  15F5  3472               	retlw	114
  3692  15F6  3474               	retlw	116
  3693  15F7  3420               	retlw	32
  3694  15F8  3452               	retlw	82
  3695  15F9  3461               	retlw	97
  3696  15FA  3474               	retlw	116
  3697  15FB  3465               	retlw	101
  3698  15FC  343A               	retlw	58
  3699  15FD  3420               	retlw	32
  3700  15FE  3400               	retlw	0
  3701                           
  3702                           ;initializer for _distanceDisp
  3703  15FF  3444               	retlw	68
  3704  1600  3469               	retlw	105
  3705  1601  3473               	retlw	115
  3706  1602  3474               	retlw	116
  3707  1603  3461               	retlw	97
  3708  1604  346E               	retlw	110
  3709  1605  3463               	retlw	99
  3710  1606  3465               	retlw	101
  3711  1607  343A               	retlw	58
  3712  1608  3420               	retlw	32
  3713  1609  3400               	retlw	0
  3714                           
  3715                           ;initializer for _speedDisp
  3716  160A  3453               	retlw	83
  3717  160B  3470               	retlw	112
  3718  160C  3465               	retlw	101
  3719  160D  3465               	retlw	101
  3720  160E  3464               	retlw	100
  3721  160F  343A               	retlw	58
  3722  1610  3420               	retlw	32
  3723  1611  3400               	retlw	0
  3724                           
  3725                           	psect	nvBANK2
  3726  015D                     __pnvBANK2:	
  3727  015D                     _TMR0_InterruptHandler:	
  3728  015D                     	ds	2
  3729  015F                     _IOCCF7_InterruptHandler:	
  3730  015F                     	ds	2
  3731  0161                     _EUSART_ErrorHandler:	
  3732  0161                     	ds	2
  3733  0163                     _EUSART_OverrunErrorHandler:	
  3734  0163                     	ds	2
  3735  0165                     _EUSART_FramingErrorHandler:	
  3736  0165                     	ds	2
  3737  0167                     _timer0ReloadVal:	
  3738  0167                     	ds	1
  3739  0015                     _TMR0	set	21
  3740  000B                     _INTCONbits	set	11
  3741  0010                     _PIR1bits	set	16
  3742  009D                     _ADCON0bits	set	157
  3743  009C                     _ADRESH	set	156
  3744  009B                     _ADRESL	set	155
  3745  009F                     _ADCON2	set	159
  3746  009E                     _ADCON1	set	158
  3747  009D                     _ADCON0	set	157
  3748  0095                     _OPTION_REG	set	149
  3749  0095                     _OPTION_REGbits	set	149
  3750  008E                     _TRISC	set	142
  3751  008D                     _TRISB	set	141
  3752  008C                     _TRISA	set	140
  3753  0098                     _OSCTUNE	set	152
  3754  0099                     _OSCCON	set	153
  3755  010E                     _LATC	set	270
  3756  010D                     _LATB	set	269
  3757  010C                     _LATA	set	268
  3758  0116                     _BORCON	set	278
  3759  018C                     _ANSELA	set	396
  3760  018D                     _ANSELB	set	397
  3761  018E                     _ANSELC	set	398
  3762  019A                     _TX1REG	set	410
  3763  0199                     _RC1REG	set	409
  3764  019D                     _RC1STAbits	set	413
  3765  019E                     _TX1STAbits	set	414
  3766  019C                     _SPBRGH	set	412
  3767  019B                     _SPBRGL	set	411
  3768  019E                     _TX1STA	set	414
  3769  019D                     _RC1STA	set	413
  3770  019F                     _BAUD1CON	set	415
  3771  020E                     _WPUC	set	526
  3772  020C                     _WPUA	set	524
  3773  020D                     _WPUB	set	525
  3774  028E                     _ODCONC	set	654
  3775  028D                     _ODCONB	set	653
  3776  028C                     _ODCONA	set	652
  3777  030E                     _SLRCONC	set	782
  3778  030D                     _SLRCONB	set	781
  3779  030C                     _SLRCONA	set	780
  3780  0397                     _IOCCPbits	set	919
  3781  0398                     _IOCCNbits	set	920
  3782  0399                     _IOCCFbits	set	921
  3783  0E9F                     _RB7PPS	set	3743
  3784                           
  3785                           	psect	stringtext1
  3786  1800                     __pstringtext1:	
  3787  1800                     STR_1:	
  3788  1800  3425               	retlw	37	;'%'
  3789  1801  3464               	retlw	100	;'d'
  3790  1802  342E               	retlw	46	;'.'
  3791  1803  3425               	retlw	37	;'%'
  3792  1804  3464               	retlw	100	;'d'
  3793  1805  3420               	retlw	32	;' '
  3794  1806  346B               	retlw	107	;'k'
  3795  1807  3470               	retlw	112	;'p'
  3796  1808  3468               	retlw	104	;'h'
  3797  1809  3420               	retlw	32	;' '
  3798  180A  3420               	retlw	32	;' '
  3799  180B  3420               	retlw	32	;' '
  3800  180C  3420               	retlw	32	;' '
  3801  180D  3420               	retlw	32	;' '
  3802  180E  3400               	retlw	0
  3803                           
  3804                           	psect	stringtext2
  3805  180F                     __pstringtext2:	
  3806  180F                     STR_2:	
  3807  180F  3430               	retlw	48	;'0'
  3808  1810  3420               	retlw	32	;' '
  3809  1811  346B               	retlw	107	;'k'
  3810  1812  3470               	retlw	112	;'p'
  3811  1813  3468               	retlw	104	;'h'
  3812  1814  3420               	retlw	32	;' '
  3813  1815  3420               	retlw	32	;' '
  3814  1816  3420               	retlw	32	;' '
  3815  1817  3420               	retlw	32	;' '
  3816  1818  3420               	retlw	32	;' '
  3817  1819  3420               	retlw	32	;' '
  3818  181A  3420               	retlw	32	;' '
  3819  181B  3420               	retlw	32	;' '
  3820  181C  3400               	retlw	0
  3821                           
  3822                           	psect	stringtext3
  3823  181D                     __pstringtext3:	
  3824  181D                     STR_4:	
  3825  181D  3425               	retlw	37	;'%'
  3826  181E  3464               	retlw	100	;'d'
  3827  181F  3420               	retlw	32	;' '
  3828  1820  3462               	retlw	98	;'b'
  3829  1821  3470               	retlw	112	;'p'
  3830  1822  346D               	retlw	109	;'m'
  3831  1823  3420               	retlw	32	;' '
  3832  1824  3420               	retlw	32	;' '
  3833  1825  3420               	retlw	32	;' '
  3834  1826  3400               	retlw	0
  3835                           
  3836                           	psect	stringtext4
  3837  1827                     __pstringtext4:	
  3838  1827                     STR_3:	
  3839  1827  3425               	retlw	37	;'%'
  3840  1828  3464               	retlw	100	;'d'
  3841  1829  342E               	retlw	46	;'.'
  3842  182A  3425               	retlw	37	;'%'
  3843  182B  3464               	retlw	100	;'d'
  3844  182C  3420               	retlw	32	;' '
  3845  182D  346B               	retlw	107	;'k'
  3846  182E  346D               	retlw	109	;'m'
  3847  182F  3400               	retlw	0
  3848                           
  3849                           	psect	stringtext5
  3850  1830                     __pstringtext5:	
  3851  1830                     STR_5:	
  3852  1830  347C               	retlw	124	;'|'
  3853  1831  342D               	retlw	45	;'-'
  3854  1832  3400               	retlw	0
  3855                           
  3856                           	psect	stringtext6
  3857  0000                     __pstringtext6:	
  3858                           
  3859                           ; #config settings
  3860  0000                     
  3861                           	psect	cinit
  3862  0016                     start_initialization:	
  3863  0016                     __initialization:	
  3864                           
  3865                           ; Initialize objects allocated to BANK0
  3866  0016  3087               	movlw	low __pidataBANK0
  3867  0017  0084               	movwf	4
  3868  0018  3094               	movlw	(high __pidataBANK0)| (0+128)
  3869  0019  0085               	movwf	5
  3870  001A  3069               	movlw	low __pdataBANK0
  3871  001B  0086               	movwf	6
  3872  001C  3000               	movlw	high __pdataBANK0
  3873  001D  0087               	movwf	7
  3874  001E  3007               	movlw	7
  3875  001F  3194  247A  3180   	fcall	init_ram
  3876                           
  3877                           ; Initialize objects allocated to BANK2
  3878  0022  0022               	movlb	2	; select bank2
  3879  0023  3180  2002  3180   	fcall	__pidataBANK2	;fetch initializer
  3880  0026  00E8               	movwf	__pdataBANK2& (0+127)
  3881  0027  3180  2003  3180   	fcall	__pidataBANK2+1	;fetch initializer
  3882  002A  00E9               	movwf	(__pdataBANK2+1)& (0+127)
  3883                           
  3884                           ; Initialize objects allocated to BANK3
  3885  002B  30F2               	movlw	low __pidataBANK3
  3886  002C  0084               	movwf	4
  3887  002D  3095               	movlw	(high __pidataBANK3)| (0+128)
  3888  002E  0085               	movwf	5
  3889  002F  30A0               	movlw	low __pdataBANK3
  3890  0030  0086               	movwf	6
  3891  0031  3001               	movlw	high __pdataBANK3
  3892  0032  0087               	movwf	7
  3893  0033  3020               	movlw	32
  3894  0034  3194  247A  3180   	fcall	init_ram
  3895                           
  3896                           ; Clear objects allocated to BANK0
  3897  0037  305C               	movlw	low __pbssBANK0
  3898  0038  0084               	movwf	4
  3899  0039  3000               	movlw	high __pbssBANK0
  3900  003A  0085               	movwf	5
  3901  003B  300D               	movlw	13
  3902  003C  3194  2474  3180   	fcall	clear_ram0
  3903                           
  3904                           ; Clear objects allocated to BANK2
  3905  003F  3020               	movlw	low __pbssBANK2
  3906  0040  0084               	movwf	4
  3907  0041  3001               	movlw	high __pbssBANK2
  3908  0042  0085               	movwf	5
  3909  0043  302F               	movlw	47
  3910  0044  3194  2474  3180   	fcall	clear_ram0
  3911                           
  3912                           ; Clear objects allocated to BANK3
  3913  0047  30C0               	movlw	low __pbssBANK3
  3914  0048  0084               	movwf	4
  3915  0049  3001               	movlw	high __pbssBANK3
  3916  004A  0085               	movwf	5
  3917  004B  3014               	movlw	20
  3918  004C  3194  2474  3180   	fcall	clear_ram0
  3919                           
  3920                           ; Clear objects allocated to BANK4
  3921  004F  3020               	movlw	low __pbssBANK4
  3922  0050  0084               	movwf	4
  3923  0051  3002               	movlw	high __pbssBANK4
  3924  0052  0085               	movwf	5
  3925  0053  3020               	movlw	32
  3926  0054  3194  2474         	fcall	clear_ram0
  3927  0056                     end_of_initialization:	
  3928                           ;End of C runtime variable initialization code
  3929                           
  3930  0056                     __end_of__initialization:	
  3931  0056  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3932  0057  0020               	movlb	0
  3933  0058  318B  2BCD         	ljmp	_main	;jump to C main() function
  3934                           
  3935                           	psect	bssBANK0
  3936  005C                     __pbssBANK0:	
  3937  005C                     _sampleCounter:	
  3938  005C                     	ds	4
  3939  0060                     _flags:	
  3940  0060                     	ds	2
  3941  0062                     _Signal:	
  3942  0062                     	ds	2
  3943  0064                     _distance:	
  3944  0064                     	ds	2
  3945  0066                     _Pulse:	
  3946  0066                     	ds	1
  3947  0067                     _secondBeat:	
  3948  0067                     	ds	1
  3949  0068                     _eusartRxLastError:	
  3950  0068                     	ds	1
  3951                           
  3952                           	psect	dataBANK0
  3953  0069                     __pdataBANK0:	
  3954  0069                     _IBI:	
  3955  0069                     	ds	2
  3956  006B                     _thresh:	
  3957  006B                     	ds	2
  3958  006D                     _T:	
  3959  006D                     	ds	2
  3960  006F                     _firstBeat:	
  3961  006F                     	ds	1
  3962                           
  3963                           	psect	bssBANK2
  3964  0120                     __pbssBANK2:	
  3965  0120                     _lastBeatTime:	
  3966  0120                     	ds	4
  3967  0124                     _adcCounter:	
  3968  0124                     	ds	4
  3969  0128                     _heartRate:	
  3970  0128                     	ds	4
  3971  012C                     _speed:	
  3972  012C                     	ds	4
  3973  0130                     _nout:	
  3974  0130                     	ds	2
  3975  0132                     _width:	
  3976  0132                     	ds	2
  3977  0134                     _prec:	
  3978  0134                     	ds	2
  3979  0136                     _BPM:	
  3980  0136                     	ds	2
  3981  0138                     _amp:	
  3982  0138                     	ds	2
  3983  013A                     _adcVal:	
  3984  013A                     	ds	2
  3985  013C                     _hrInt:	
  3986  013C                     	ds	2
  3987  013E                     _speedHi:	
  3988  013E                     	ds	2
  3989  0140                     _speedLo:	
  3990  0140                     	ds	2
  3991  0142                     _distLo:	
  3992  0142                     	ds	2
  3993  0144                     _distHi:	
  3994  0144                     	ds	2
  3995  0146                     _QS:	
  3996  0146                     	ds	1
  3997  0147                     _rpm:	
  3998  0147                     	ds	4
  3999  014B                     _counter:	
  4000  014B                     	ds	4
  4001                           
  4002                           	psect	dataBANK2
  4003  0168                     __pdataBANK2:	
  4004  0168                     _P:	
  4005  0168                     	ds	2
  4006                           
  4007                           	psect	bssBANK3
  4008  01C0                     __pbssBANK3:	
  4009  01C0                     _rate:	
  4010  01C0                     	ds	20
  4011                           
  4012                           	psect	dataBANK3
  4013  01A0                     __pdataBANK3:	
  4014  01A0                     _hrDisp:	
  4015  01A0                     	ds	13
  4016  01AD                     _distanceDisp:	
  4017  01AD                     	ds	11
  4018  01B8                     _speedDisp:	
  4019  01B8                     	ds	8
  4020                           
  4021                           	psect	bssBANK4
  4022  0220                     __pbssBANK4:	
  4023  0220                     _dbuf:	
  4024  0220                     	ds	32
  4025                           
  4026                           	psect	inittext
  4027  147A                     init_ram:	
  4028  147A  00FE               	movwf	126
  4029  147B                     initloop:	
  4030  147B  0012               	moviw fsr0++
  4031  147C  001E               	movwi fsr1++
  4032  147D  0BFE               	decfsz	126,f
  4033  147E  2C7B               	goto	initloop
  4034  147F  3400               	retlw	0
  4035                           
  4036                           	psect	clrtext
  4037  1474                     clear_ram0:	
  4038                           ;	Called with FSR0 containing the base address, and
  4039                           ;	WREG with the size to clear
  4040                           
  4041  1474  0064               	clrwdt	;clear the watchdog before getting into this loop
  4042  1475                     clrloop0:	
  4043  1475  0180               	clrf	0	;clear RAM location pointed to by FSR
  4044  1476  3101               	addfsr 0,1
  4045  1477  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  4046  1478  2C75               	goto	clrloop0	;have we reached the end yet?
  4047  1479  3400               	retlw	0	;all done for this memory range, return
  4048                           
  4049                           	psect	cstackBANK2
  4050  014F                     __pcstackBANK2:	
  4051  014F                     vfprintf@fp:	
  4052                           
  4053                           ; 1 bytes @ 0x0
  4054  014F                     	ds	1
  4055  0150                     vfprintf@cfmt:	
  4056                           
  4057                           ; 2 bytes @ 0x1
  4058  0150                     	ds	2
  4059  0152                     ?_printf:	
  4060  0152                     printf@fmt:	
  4061                           ; 2 bytes @ 0x3
  4062                           
  4063                           
  4064                           ; 2 bytes @ 0x3
  4065  0152                     	ds	8
  4066  015A                     printf@ap:	
  4067                           
  4068                           ; 1 bytes @ 0xB
  4069  015A                     	ds	1
  4070  015B                     ??_main:	
  4071                           
  4072                           ; 1 bytes @ 0xC
  4073  015B                     	ds	2
  4074                           
  4075                           	psect	cstackBANK1
  4076  00A0                     __pcstackBANK1:	
  4077  00A0                     ?___flge:	
  4078  00A0                     ?_EUSART_SetFramingErrorHandler:	
  4079                           ; 1 bit 
  4080                           
  4081  00A0                     ?_EUSART_SetOverrunErrorHandler:	
  4082                           ; 1 bytes @ 0x0
  4083                           
  4084  00A0                     ?_EUSART_SetErrorHandler:	
  4085                           ; 1 bytes @ 0x0
  4086                           
  4087  00A0                     ??_OSCILLATOR_Initialize:	
  4088                           ; 1 bytes @ 0x0
  4089                           
  4090  00A0                     ??_ADC_Initialize:	
  4091                           ; 1 bytes @ 0x0
  4092                           
  4093  00A0                     ?_IOCCF7_SetInterruptHandler:	
  4094                           ; 1 bytes @ 0x0
  4095                           
  4096  00A0                     ?_TMR0_SetInterruptHandler:	
  4097                           ; 1 bytes @ 0x0
  4098                           
  4099  00A0                     ??_EUSART_is_tx_ready:	
  4100                           ; 1 bytes @ 0x0
  4101                           
  4102  00A0                     ??_EUSART_Write:	
  4103                           ; 1 bytes @ 0x0
  4104                           
  4105  00A0                     ?_strlen:	
  4106                           ; 1 bytes @ 0x0
  4107                           
  4108  00A0                     ?_ADC_GetConversion:	
  4109                           ; 2 bytes @ 0x0
  4110                           
  4111  00A0                     ?___awdiv:	
  4112                           ; 2 bytes @ 0x0
  4113                           
  4114  00A0                     ?___lwdiv:	
  4115                           ; 2 bytes @ 0x0
  4116                           
  4117  00A0                     ?___aldiv:	
  4118                           ; 2 bytes @ 0x0
  4119                           
  4120  00A0                     ?___aodiv:	
  4121                           ; 4 bytes @ 0x0
  4122                           
  4123  00A0                     ?___aomod:	
  4124                           ; 8 bytes @ 0x0
  4125                           
  4126  00A0                     _EUSART_is_tx_ready$167:	
  4127                           ; 8 bytes @ 0x0
  4128                           
  4129  00A0                     EUSART_Write@txData:	
  4130                           ; 1 bytes @ 0x0
  4131                           
  4132  00A0                     EUSART_SetFramingErrorHandler@interruptHandler:	
  4133                           ; 1 bytes @ 0x0
  4134                           
  4135  00A0                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  4136                           ; 2 bytes @ 0x0
  4137                           
  4138  00A0                     EUSART_SetErrorHandler@interruptHandler:	
  4139                           ; 2 bytes @ 0x0
  4140                           
  4141  00A0                     IOCCF7_SetInterruptHandler@InterruptHandler:	
  4142                           ; 2 bytes @ 0x0
  4143                           
  4144  00A0                     TMR0_SetInterruptHandler@InterruptHandler:	
  4145                           ; 2 bytes @ 0x0
  4146                           
  4147  00A0                     ___awdiv@divisor:	
  4148                           ; 2 bytes @ 0x0
  4149                           
  4150  00A0                     ___lwdiv@divisor:	
  4151                           ; 2 bytes @ 0x0
  4152                           
  4153  00A0                     ___aldiv@divisor:	
  4154                           ; 2 bytes @ 0x0
  4155                           
  4156  00A0                     ___flge@ff1:	
  4157                           ; 4 bytes @ 0x0
  4158                           
  4159  00A0                     ___aodiv@divisor:	
  4160                           ; 4 bytes @ 0x0
  4161                           
  4162  00A0                     ___aomod@divisor:	
  4163                           ; 8 bytes @ 0x0
  4164                           
  4165                           
  4166                           ; 8 bytes @ 0x0
  4167  00A0                     	ds	1
  4168  00A1                     ?_setCursor:	
  4169  00A1                     ??_putch:	
  4170                           ; 1 bytes @ 0x1
  4171                           
  4172  00A1                     putch@txData:	
  4173                           ; 1 bytes @ 0x1
  4174                           
  4175  00A1                     setCursor@b:	
  4176                           ; 1 bytes @ 0x1
  4177                           
  4178                           
  4179                           ; 1 bytes @ 0x1
  4180  00A1                     	ds	1
  4181  00A2                     ??_EUSART_SetFramingErrorHandler:	
  4182  00A2                     ??_EUSART_SetOverrunErrorHandler:	
  4183                           ; 1 bytes @ 0x2
  4184                           
  4185  00A2                     ??_EUSART_SetErrorHandler:	
  4186                           ; 1 bytes @ 0x2
  4187                           
  4188  00A2                     ??_PIN_MANAGER_Initialize:	
  4189                           ; 1 bytes @ 0x2
  4190                           
  4191  00A2                     ??_TMR0_Initialize:	
  4192                           ; 1 bytes @ 0x2
  4193                           
  4194  00A2                     ??_IOCCF7_SetInterruptHandler:	
  4195                           ; 1 bytes @ 0x2
  4196                           
  4197  00A2                     ??_TMR0_SetInterruptHandler:	
  4198                           ; 1 bytes @ 0x2
  4199                           
  4200  00A2                     ??_setCursor:	
  4201                           ; 1 bytes @ 0x2
  4202                           
  4203  00A2                     ??_strlen:	
  4204                           ; 1 bytes @ 0x2
  4205                           
  4206  00A2                     ??_EUSART_Initialize:	
  4207                           ; 1 bytes @ 0x2
  4208                           
  4209  00A2                     ??_ADC_GetConversion:	
  4210                           ; 1 bytes @ 0x2
  4211                           
  4212  00A2                     ?_fputc:	
  4213                           ; 1 bytes @ 0x2
  4214                           
  4215  00A2                     ___awdiv@dividend:	
  4216                           ; 2 bytes @ 0x2
  4217                           
  4218  00A2                     ___lwdiv@dividend:	
  4219                           ; 2 bytes @ 0x2
  4220                           
  4221  00A2                     fputc@c:	
  4222                           ; 2 bytes @ 0x2
  4223                           
  4224                           
  4225                           ; 2 bytes @ 0x2
  4226  00A2                     	ds	1
  4227  00A3                     ??_SYSTEM_Initialize:	
  4228  00A3                     ADC_GetConversion@channel:	
  4229                           ; 1 bytes @ 0x3
  4230                           
  4231  00A3                     strlen@a:	
  4232                           ; 1 bytes @ 0x3
  4233                           
  4234                           
  4235                           ; 1 bytes @ 0x3
  4236  00A3                     	ds	1
  4237  00A4                     ??___awdiv:	
  4238  00A4                     ??___lwdiv:	
  4239                           ; 1 bytes @ 0x4
  4240                           
  4241  00A4                     setCursor@a:	
  4242                           ; 1 bytes @ 0x4
  4243                           
  4244  00A4                     fputc@fp:	
  4245                           ; 1 bytes @ 0x4
  4246                           
  4247  00A4                     strlen@s:	
  4248                           ; 1 bytes @ 0x4
  4249                           
  4250  00A4                     ___aldiv@dividend:	
  4251                           ; 1 bytes @ 0x4
  4252                           
  4253  00A4                     ___flge@ff2:	
  4254                           ; 4 bytes @ 0x4
  4255                           
  4256                           
  4257                           ; 4 bytes @ 0x4
  4258  00A4                     	ds	1
  4259  00A5                     ??_fputc:	
  4260  00A5                     ___awdiv@counter:	
  4261                           ; 1 bytes @ 0x5
  4262                           
  4263  00A5                     ___lwdiv@quotient:	
  4264                           ; 1 bytes @ 0x5
  4265                           
  4266                           
  4267                           ; 2 bytes @ 0x5
  4268  00A5                     	ds	1
  4269  00A6                     ___awdiv@sign:	
  4270                           
  4271                           ; 1 bytes @ 0x6
  4272  00A6                     	ds	1
  4273  00A7                     ___lwdiv@counter:	
  4274  00A7                     ___awdiv@quotient:	
  4275                           ; 1 bytes @ 0x7
  4276                           
  4277                           
  4278                           ; 2 bytes @ 0x7
  4279  00A7                     	ds	1
  4280  00A8                     ??___aldiv:	
  4281  00A8                     ??___flge:	
  4282                           ; 1 bytes @ 0x8
  4283                           
  4284  00A8                     ___aodiv@dividend:	
  4285                           ; 1 bytes @ 0x8
  4286                           
  4287  00A8                     ___aomod@dividend:	
  4288                           ; 8 bytes @ 0x8
  4289                           
  4290                           
  4291                           ; 8 bytes @ 0x8
  4292  00A8                     	ds	1
  4293  00A9                     ?___wmul:	
  4294  00A9                     ___aldiv@counter:	
  4295                           ; 2 bytes @ 0x9
  4296                           
  4297  00A9                     ___wmul@multiplier:	
  4298                           ; 1 bytes @ 0x9
  4299                           
  4300                           
  4301                           ; 2 bytes @ 0x9
  4302  00A9                     	ds	1
  4303  00AA                     ?_fputs:	
  4304  00AA                     ___aldiv@sign:	
  4305                           ; 2 bytes @ 0xA
  4306                           
  4307  00AA                     fputs@s:	
  4308                           ; 1 bytes @ 0xA
  4309                           
  4310                           
  4311                           ; 2 bytes @ 0xA
  4312  00AA                     	ds	1
  4313  00AB                     ___wmul@multiplicand:	
  4314  00AB                     ___aldiv@quotient:	
  4315                           ; 2 bytes @ 0xB
  4316                           
  4317                           
  4318                           ; 4 bytes @ 0xB
  4319  00AB                     	ds	1
  4320  00AC                     fputs@fp:	
  4321                           
  4322                           ; 1 bytes @ 0xC
  4323  00AC                     	ds	1
  4324  00AD                     ??_fputs:	
  4325  00AD                     ??___wmul:	
  4326                           ; 1 bytes @ 0xD
  4327                           
  4328  00AD                     ___wmul@product:	
  4329                           ; 1 bytes @ 0xD
  4330                           
  4331                           
  4332                           ; 2 bytes @ 0xD
  4333  00AD                     	ds	2
  4334  00AF                     ?_heartBeatCalc:	
  4335  00AF                     heartBeatCalc@adcVal:	
  4336                           ; 1 bytes @ 0xF
  4337                           
  4338                           
  4339                           ; 2 bytes @ 0xF
  4340  00AF                     	ds	1
  4341  00B0                     ??___aodiv:	
  4342  00B0                     ??___aomod:	
  4343                           ; 1 bytes @ 0x10
  4344                           
  4345  00B0                     fputs@c:	
  4346                           ; 1 bytes @ 0x10
  4347                           
  4348                           
  4349                           ; 1 bytes @ 0x10
  4350  00B0                     	ds	1
  4351  00B1                     ??_heartBeatCalc:	
  4352  00B1                     ___aodiv@counter:	
  4353                           ; 1 bytes @ 0x11
  4354                           
  4355  00B1                     ___aomod@counter:	
  4356                           ; 1 bytes @ 0x11
  4357                           
  4358  00B1                     fputs@i:	
  4359                           ; 1 bytes @ 0x11
  4360                           
  4361                           
  4362                           ; 2 bytes @ 0x11
  4363  00B1                     	ds	1
  4364  00B2                     ___aodiv@sign:	
  4365  00B2                     ___aomod@sign:	
  4366                           ; 1 bytes @ 0x12
  4367                           
  4368                           
  4369                           ; 1 bytes @ 0x12
  4370  00B2                     	ds	1
  4371  00B3                     ?_puts:	
  4372  00B3                     ?_abs:	
  4373                           ; 2 bytes @ 0x13
  4374                           
  4375  00B3                     ?_pad:	
  4376                           ; 2 bytes @ 0x13
  4377                           
  4378  00B3                     pad@buf:	
  4379                           ; 2 bytes @ 0x13
  4380                           
  4381  00B3                     heartBeatCalc@runningTotal:	
  4382                           ; 1 bytes @ 0x13
  4383                           
  4384  00B3                     abs@a:	
  4385                           ; 2 bytes @ 0x13
  4386                           
  4387  00B3                     puts@s:	
  4388                           ; 2 bytes @ 0x13
  4389                           
  4390  00B3                     ___aodiv@quotient:	
  4391                           ; 2 bytes @ 0x13
  4392                           
  4393                           
  4394                           ; 8 bytes @ 0x13
  4395  00B3                     	ds	1
  4396  00B4                     pad@p:	
  4397                           
  4398                           ; 2 bytes @ 0x14
  4399  00B4                     	ds	1
  4400  00B5                     ??_puts:	
  4401  00B5                     ??_abs:	
  4402                           ; 1 bytes @ 0x15
  4403                           
  4404  00B5                     heartBeatCalc@i:	
  4405                           ; 1 bytes @ 0x15
  4406                           
  4407                           
  4408                           ; 2 bytes @ 0x15
  4409  00B5                     	ds	1
  4410  00B6                     ??_pad:	
  4411                           
  4412                           ; 1 bytes @ 0x16
  4413  00B6                     	ds	1
  4414  00B7                     _puts$1137:	
  4415  00B7                     heartBeatCalc@N:	
  4416                           ; 1 bytes @ 0x17
  4417                           
  4418  00B7                     pad@i:	
  4419                           ; 2 bytes @ 0x17
  4420                           
  4421                           
  4422                           ; 2 bytes @ 0x17
  4423  00B7                     	ds	1
  4424  00B8                     ??_resetCursor:	
  4425  00B8                     ??_writeString:	
  4426                           ; 1 bytes @ 0x18
  4427                           
  4428  00B8                     writeString@string:	
  4429                           ; 1 bytes @ 0x18
  4430                           
  4431                           
  4432                           ; 1 bytes @ 0x18
  4433  00B8                     	ds	1
  4434  00B9                     heartBeatCalc@i_688:	
  4435  00B9                     pad@w:	
  4436                           ; 2 bytes @ 0x19
  4437                           
  4438                           
  4439                           ; 2 bytes @ 0x19
  4440  00B9                     	ds	2
  4441  00BB                     pad@fp:	
  4442                           
  4443                           ; 1 bytes @ 0x1B
  4444  00BB                     	ds	1
  4445  00BC                     ?_dtoa:	
  4446  00BC                     dtoa@d:	
  4447                           ; 2 bytes @ 0x1C
  4448                           
  4449                           
  4450                           ; 8 bytes @ 0x1C
  4451  00BC                     	ds	8
  4452  00C4                     ??_dtoa:	
  4453                           
  4454                           ; 1 bytes @ 0x24
  4455  00C4                     	ds	3
  4456  00C7                     _dtoa$791:	
  4457                           
  4458                           ; 2 bytes @ 0x27
  4459  00C7                     	ds	2
  4460  00C9                     dtoa@p:	
  4461                           
  4462                           ; 2 bytes @ 0x29
  4463  00C9                     	ds	2
  4464  00CB                     dtoa@fp:	
  4465                           
  4466                           ; 1 bytes @ 0x2B
  4467  00CB                     	ds	1
  4468  00CC                     dtoa@w:	
  4469                           
  4470                           ; 2 bytes @ 0x2C
  4471  00CC                     	ds	2
  4472  00CE                     dtoa@s:	
  4473                           
  4474                           ; 2 bytes @ 0x2E
  4475  00CE                     	ds	2
  4476  00D0                     dtoa@n:	
  4477                           
  4478                           ; 8 bytes @ 0x30
  4479  00D0                     	ds	8
  4480  00D8                     dtoa@i:	
  4481                           
  4482                           ; 2 bytes @ 0x38
  4483  00D8                     	ds	2
  4484  00DA                     ?_vfpfcnvrt:	
  4485  00DA                     vfpfcnvrt@fmt:	
  4486                           ; 2 bytes @ 0x3A
  4487                           
  4488                           
  4489                           ; 1 bytes @ 0x3A
  4490  00DA                     	ds	1
  4491  00DB                     vfpfcnvrt@ap:	
  4492                           
  4493                           ; 1 bytes @ 0x3B
  4494  00DB                     	ds	1
  4495  00DC                     ??_vfpfcnvrt:	
  4496                           
  4497                           ; 1 bytes @ 0x3C
  4498  00DC                     	ds	5
  4499  00E1                     vfpfcnvrt@ll:	
  4500                           
  4501                           ; 8 bytes @ 0x41
  4502  00E1                     	ds	8
  4503  00E9                     vfpfcnvrt@fp:	
  4504                           
  4505                           ; 1 bytes @ 0x49
  4506  00E9                     	ds	1
  4507  00EA                     ?_vfprintf:	
  4508  00EA                     vfprintf@fmt:	
  4509                           ; 2 bytes @ 0x4A
  4510                           
  4511                           
  4512                           ; 2 bytes @ 0x4A
  4513  00EA                     	ds	2
  4514  00EC                     vfprintf@ap:	
  4515                           
  4516                           ; 1 bytes @ 0x4C
  4517  00EC                     	ds	1
  4518  00ED                     ??_vfprintf:	
  4519                           
  4520                           ; 1 bytes @ 0x4D
  4521  00ED                     	ds	2
  4522  00EF                     ??_printf:	
  4523                           
  4524                           ; 1 bytes @ 0x4F
  4525  00EF                     	ds	1
  4526                           
  4527                           	psect	cstackCOMMON
  4528  0070                     __pcstackCOMMON:	
  4529  0070                     ?_PIN_MANAGER_Initialize:	
  4530  0070                     ?_OSCILLATOR_Initialize:	
  4531                           ; 1 bytes @ 0x0
  4532                           
  4533  0070                     ?_ADC_Initialize:	
  4534                           ; 1 bytes @ 0x0
  4535                           
  4536  0070                     ?_TMR0_Initialize:	
  4537                           ; 1 bytes @ 0x0
  4538                           
  4539  0070                     ?_IOCCF7_DefaultInterruptHandler:	
  4540                           ; 1 bytes @ 0x0
  4541                           
  4542  0070                     ??_IOCCF7_DefaultInterruptHandler:	
  4543                           ; 1 bytes @ 0x0
  4544                           
  4545  0070                     ?_IOCCF7_ISR:	
  4546                           ; 1 bytes @ 0x0
  4547                           
  4548  0070                     ?_TMR0_DefaultInterruptHandler:	
  4549                           ; 1 bytes @ 0x0
  4550                           
  4551  0070                     ??_TMR0_DefaultInterruptHandler:	
  4552                           ; 1 bytes @ 0x0
  4553                           
  4554  0070                     ?_timerISR:	
  4555                           ; 1 bytes @ 0x0
  4556                           
  4557  0070                     ?_speedCalc:	
  4558                           ; 1 bytes @ 0x0
  4559                           
  4560  0070                     ?_resetCursor:	
  4561                           ; 1 bytes @ 0x0
  4562                           
  4563  0070                     ?_writeString:	
  4564                           ; 1 bytes @ 0x0
  4565                           
  4566  0070                     ?_EUSART_Initialize:	
  4567                           ; 1 bytes @ 0x0
  4568                           
  4569  0070                     ?_EUSART_is_tx_ready:	
  4570                           ; 1 bytes @ 0x0
  4571                           
  4572  0070                     ?_EUSART_Write:	
  4573                           ; 1 bytes @ 0x0
  4574                           
  4575  0070                     ?_putch:	
  4576                           ; 1 bytes @ 0x0
  4577                           
  4578  0070                     ?_SYSTEM_Initialize:	
  4579                           ; 1 bytes @ 0x0
  4580                           
  4581  0070                     ?_PIN_MANAGER_IOC:	
  4582                           ; 1 bytes @ 0x0
  4583                           
  4584  0070                     ?_TMR0_ISR:	
  4585                           ; 1 bytes @ 0x0
  4586                           
  4587  0070                     ?_INTERRUPT_InterruptManager:	
  4588                           ; 1 bytes @ 0x0
  4589                           
  4590  0070                     ?_main:	
  4591                           ; 1 bytes @ 0x0
  4592                           
  4593  0070                     ?__Umul8_16:	
  4594                           ; 1 bytes @ 0x0
  4595                           
  4596  0070                     ?i1___awdiv:	
  4597                           ; 2 bytes @ 0x0
  4598                           
  4599  0070                     ?___fladd:	
  4600                           ; 2 bytes @ 0x0
  4601                           
  4602  0070                     ?___fldiv:	
  4603                           ; 4 bytes @ 0x0
  4604                           
  4605  0070                     __Umul8_16@multiplicand:	
  4606                           ; 4 bytes @ 0x0
  4607                           
  4608  0070                     i1___awdiv@divisor:	
  4609                           ; 1 bytes @ 0x0
  4610                           
  4611  0070                     ___fladd@b:	
  4612                           ; 2 bytes @ 0x0
  4613                           
  4614  0070                     ___fldiv@a:	
  4615                           ; 4 bytes @ 0x0
  4616                           
  4617                           
  4618                           ; 4 bytes @ 0x0
  4619  0070                     	ds	2
  4620  0072                     ??__Umul8_16:	
  4621  0072                     i1___awdiv@dividend:	
  4622                           ; 1 bytes @ 0x2
  4623                           
  4624                           
  4625                           ; 2 bytes @ 0x2
  4626  0072                     	ds	2
  4627  0074                     ??i1___awdiv:	
  4628  0074                     __Umul8_16@product:	
  4629                           ; 1 bytes @ 0x4
  4630                           
  4631  0074                     ___fladd@a:	
  4632                           ; 2 bytes @ 0x4
  4633                           
  4634  0074                     ___fldiv@b:	
  4635                           ; 4 bytes @ 0x4
  4636                           
  4637                           
  4638                           ; 4 bytes @ 0x4
  4639  0074                     	ds	1
  4640  0075                     i1___awdiv@counter:	
  4641                           
  4642                           ; 1 bytes @ 0x5
  4643  0075                     	ds	1
  4644  0076                     i1___awdiv@sign:	
  4645  0076                     __Umul8_16@word_mpld:	
  4646                           ; 1 bytes @ 0x6
  4647                           
  4648                           
  4649                           ; 2 bytes @ 0x6
  4650  0076                     	ds	1
  4651  0077                     i1___awdiv@quotient:	
  4652                           
  4653                           ; 2 bytes @ 0x7
  4654  0077                     	ds	1
  4655  0078                     ??___fldiv:	
  4656  0078                     ___fladd@signs:	
  4657                           ; 1 bytes @ 0x8
  4658                           
  4659  0078                     __Umul8_16@multiplier:	
  4660                           ; 1 bytes @ 0x8
  4661                           
  4662                           
  4663                           ; 1 bytes @ 0x8
  4664  0078                     	ds	1
  4665  0079                     ___fladd@aexp:	
  4666                           
  4667                           ; 1 bytes @ 0x9
  4668  0079                     	ds	1
  4669  007A                     ___fladd@bexp:	
  4670                           
  4671                           ; 1 bytes @ 0xA
  4672  007A                     	ds	1
  4673  007B                     ___fladd@grs:	
  4674                           
  4675                           ; 1 bytes @ 0xB
  4676  007B                     	ds	1
  4677  007C                     ??_timerISR:	
  4678  007C                     ??_TMR0_ISR:	
  4679                           ; 1 bytes @ 0xC
  4680                           
  4681                           
  4682                           ; 1 bytes @ 0xC
  4683  007C                     	ds	1
  4684  007D                     ??___awmod:	
  4685                           
  4686                           ; 1 bytes @ 0xD
  4687  007D                     	ds	1
  4688  007E                     ??_IOCCF7_ISR:	
  4689  007E                     ??_speedCalc:	
  4690                           ; 1 bytes @ 0xE
  4691                           
  4692  007E                     ??_PIN_MANAGER_IOC:	
  4693                           ; 1 bytes @ 0xE
  4694                           
  4695  007E                     ??_INTERRUPT_InterruptManager:	
  4696                           ; 1 bytes @ 0xE
  4697                           
  4698                           
  4699                           	psect	cstackBANK0
  4700  0020                     __pcstackBANK0:	
  4701                           ; 1 bytes @ 0xE
  4702                           
  4703  0020                     ??___fladd:	
  4704  0020                     ___fldiv@rem:	
  4705                           ; 1 bytes @ 0x0
  4706                           
  4707                           
  4708                           ; 4 bytes @ 0x0
  4709  0020                     	ds	4
  4710  0024                     ___fldiv@sign:	
  4711                           
  4712                           ; 1 bytes @ 0x4
  4713  0024                     	ds	1
  4714  0025                     ___fldiv@new_exp:	
  4715                           
  4716                           ; 2 bytes @ 0x5
  4717  0025                     	ds	2
  4718  0027                     ___fldiv@grs:	
  4719                           
  4720                           ; 4 bytes @ 0x7
  4721  0027                     	ds	4
  4722  002B                     ___fldiv@bexp:	
  4723                           
  4724                           ; 1 bytes @ 0xB
  4725  002B                     	ds	1
  4726  002C                     ___fldiv@aexp:	
  4727                           
  4728                           ; 1 bytes @ 0xC
  4729  002C                     	ds	1
  4730  002D                     ?___flmul:	
  4731  002D                     ___flmul@b:	
  4732                           ; 4 bytes @ 0xD
  4733                           
  4734                           
  4735                           ; 4 bytes @ 0xD
  4736  002D                     	ds	4
  4737  0031                     ___flmul@a:	
  4738                           
  4739                           ; 4 bytes @ 0x11
  4740  0031                     	ds	4
  4741  0035                     ??___flmul:	
  4742                           
  4743                           ; 1 bytes @ 0x15
  4744  0035                     	ds	5
  4745  003A                     ___flmul@sign:	
  4746                           
  4747                           ; 1 bytes @ 0x1A
  4748  003A                     	ds	1
  4749  003B                     ___flmul@grs:	
  4750                           
  4751                           ; 4 bytes @ 0x1B
  4752  003B                     	ds	4
  4753  003F                     ___flmul@aexp:	
  4754                           
  4755                           ; 1 bytes @ 0x1F
  4756  003F                     	ds	1
  4757  0040                     ___flmul@bexp:	
  4758                           
  4759                           ; 1 bytes @ 0x20
  4760  0040                     	ds	1
  4761  0041                     ___flmul@prod:	
  4762                           
  4763                           ; 4 bytes @ 0x21
  4764  0041                     	ds	4
  4765  0045                     ___flmul@temp:	
  4766                           
  4767                           ; 2 bytes @ 0x25
  4768  0045                     	ds	2
  4769  0047                     ?___fltol:	
  4770  0047                     ___fltol@f1:	
  4771                           ; 4 bytes @ 0x27
  4772                           
  4773                           
  4774                           ; 4 bytes @ 0x27
  4775  0047                     	ds	4
  4776  004B                     ??___fltol:	
  4777                           
  4778                           ; 1 bytes @ 0x2B
  4779  004B                     	ds	5
  4780  0050                     ___fltol@sign1:	
  4781                           
  4782                           ; 1 bytes @ 0x30
  4783  0050                     	ds	1
  4784  0051                     ___fltol@exp1:	
  4785                           
  4786                           ; 1 bytes @ 0x31
  4787  0051                     	ds	1
  4788  0052                     ?___awmod:	
  4789  0052                     ___awmod@divisor:	
  4790                           ; 2 bytes @ 0x32
  4791                           
  4792                           
  4793                           ; 2 bytes @ 0x32
  4794  0052                     	ds	2
  4795  0054                     ___awmod@dividend:	
  4796                           
  4797                           ; 2 bytes @ 0x34
  4798  0054                     	ds	2
  4799  0056                     ___awmod@counter:	
  4800                           
  4801                           ; 1 bytes @ 0x36
  4802  0056                     	ds	1
  4803  0057                     ___awmod@sign:	
  4804                           
  4805                           ; 1 bytes @ 0x37
  4806  0057                     	ds	1
  4807  0058                     _speedCalc$1332:	
  4808                           
  4809                           ; 4 bytes @ 0x38
  4810  0058                     	ds	4
  4811                           
  4812                           	psect	maintext
  4813  0BCD                     __pmaintext:	
  4814 ;;
  4815 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  4816 ;;
  4817 ;; *************** function _main *****************
  4818 ;; Defined at:
  4819 ;;		line 53 in file "main.c"
  4820 ;; Parameters:    Size  Location     Type
  4821 ;;		None
  4822 ;; Auto vars:     Size  Location     Type
  4823 ;;		None
  4824 ;; Return value:  Size  Location     Type
  4825 ;;                  1    wreg      void 
  4826 ;; Registers used:
  4827 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4828 ;; Tracked objects:
  4829 ;;		On entry : B1F/0
  4830 ;;		On exit  : 0/0
  4831 ;;		Unchanged: 0/0
  4832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4835 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  4836 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  4837 ;;Total ram usage:        2 bytes
  4838 ;; Hardware stack levels required when called:   15
  4839 ;; This function calls:
  4840 ;;		_ADC_GetConversion
  4841 ;;		_IOCCF7_SetInterruptHandler
  4842 ;;		_SYSTEM_Initialize
  4843 ;;		_TMR0_SetInterruptHandler
  4844 ;;		___flge
  4845 ;;		_heartBeatCalc
  4846 ;;		_printf
  4847 ;;		_resetCursor
  4848 ;;		_setCursor
  4849 ;;		_writeString
  4850 ;; This function is called by:
  4851 ;;		Startup code after reset
  4852 ;; This function uses a non-reentrant model
  4853 ;;
  4854                           
  4855                           
  4856                           ;psect for function _main
  4857  0BCD                     _main:	
  4858                           
  4859                           ;main.c: 56:     SYSTEM_Initialize();
  4860                           
  4861                           ;incstack = 0
  4862                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4863  0BCD  3194  24F0  318B   	fcall	_SYSTEM_Initialize
  4864                           
  4865                           ;main.c: 59:     TMR0_SetInterruptHandler( timerISR ) ;
  4866  0BD0  3012               	movlw	low _timerISR
  4867  0BD1  0021               	movlb	1	; select bank1
  4868  0BD2  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler^(0+128)
  4869  0BD3  3016               	movlw	high _timerISR
  4870  0BD4  00A1               	movwf	(TMR0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  4871  0BD5  3194  24C2  318B   	fcall	_TMR0_SetInterruptHandler
  4872                           
  4873                           ;main.c: 60:     IOCCF7_SetInterruptHandler( speedCalc ) ;
  4874  0BD8  30A3               	movlw	low _speedCalc
  4875  0BD9  0021               	movlb	1	; select bank1
  4876  0BDA  00A0               	movwf	IOCCF7_SetInterruptHandler@InterruptHandler^(0+128)
  4877  0BDB  300D               	movlw	high _speedCalc
  4878  0BDC  00A1               	movwf	(IOCCF7_SetInterruptHandler@InterruptHandler^(0+128)+1)
  4879  0BDD  3194  24B9  318B   	fcall	_IOCCF7_SetInterruptHandler
  4880                           
  4881                           ;main.c: 63:     _delay((unsigned long)((1000)*(16000000/4000.0))) ;
  4882  0BE0  3015               	movlw	21
  4883  0BE1  0022               	movlb	2	; select bank2
  4884  0BE2  00DC               	movwf	(??_main^(0+256)+1)
  4885  0BE3  304B               	movlw	75
  4886  0BE4  00DB               	movwf	??_main^(0+256)
  4887  0BE5  30BE               	movlw	190
  4888  0BE6                     u5217:	
  4889  0BE6  0B89               	decfsz	9,f
  4890  0BE7  2BE6               	goto	u5217
  4891  0BE8  0BDB               	decfsz	??_main^(0+256),f
  4892  0BE9  2BE6               	goto	u5217
  4893  0BEA  0BDC               	decfsz	(??_main^(0+256)+1),f
  4894  0BEB  2BE6               	goto	u5217
  4895  0BEC  0000               	nop
  4896                           
  4897                           ;main.c: 65:     resetCursor() ;
  4898  0BED  3194  2496  318B   	fcall	_resetCursor
  4899                           
  4900                           ;main.c: 67:     (INTCONbits.GIE = 1);
  4901  0BF0  178B               	bsf	11,7	;volatile
  4902                           
  4903                           ;main.c: 68:     (INTCONbits.PEIE = 1);
  4904  0BF1  170B               	bsf	11,6	;volatile
  4905  0BF2                     l3930:	
  4906                           
  4907                           ;main.c: 73:         setCursor(1,0) ;
  4908  0BF2  0021               	movlb	1	; select bank1
  4909  0BF3  01A1               	clrf	setCursor@b^(0+128)
  4910  0BF4  3001               	movlw	1
  4911  0BF5  3196  26EC  318B   	fcall	_setCursor
  4912                           
  4913                           ;main.c: 74:         writeString(speedDisp);
  4914  0BF8  30B8               	movlw	(low (_speedDisp| (0+256)))& (0+255)
  4915  0BF9  3195  2524  318B   	fcall	_writeString
  4916                           
  4917                           ;main.c: 75:         setCursor(2,0) ;
  4918  0BFC  0021               	movlb	1	; select bank1
  4919  0BFD  01A1               	clrf	setCursor@b^(0+128)
  4920  0BFE  3002               	movlw	2
  4921  0BFF  3196  26EC  318B   	fcall	_setCursor
  4922                           
  4923                           ;main.c: 76:         writeString(distanceDisp);
  4924  0C02  30AD               	movlw	(low (_distanceDisp| (0+256)))& (0+255)
  4925  0C03  3195  2524  318B   	fcall	_writeString
  4926                           
  4927                           ;main.c: 77:         setCursor(3,0) ;
  4928  0C06  0021               	movlb	1	; select bank1
  4929  0C07  01A1               	clrf	setCursor@b^(0+128)
  4930  0C08  3003               	movlw	3
  4931  0C09  3196  26EC  318B   	fcall	_setCursor
  4932                           
  4933                           ;main.c: 78:         writeString(hrDisp);
  4934  0C0C  30A0               	movlw	(low (_hrDisp| (0+256)))& (0+255)
  4935  0C0D  3195  2524  318B   	fcall	_writeString
  4936                           
  4937                           ;main.c: 79:         setCursor(4,0) ;
  4938  0C10  0021               	movlb	1	; select bank1
  4939  0C11  01A1               	clrf	setCursor@b^(0+128)
  4940  0C12  3004               	movlw	4
  4941  0C13  3196  26EC  318B   	fcall	_setCursor
  4942                           
  4943                           ;main.c: 82:         if (adcCounter == 2){
  4944  0C16  3002               	movlw	2
  4945  0C17  0022               	movlb	2	; select bank2
  4946  0C18  0624               	xorwf	_adcCounter^(0+256),w	;volatile
  4947  0C19  0425               	iorwf	(_adcCounter+1)^(0+256),w	;volatile
  4948  0C1A  0426               	iorwf	(_adcCounter+2)^(0+256),w	;volatile
  4949  0C1B  0427               	iorwf	(_adcCounter+3)^(0+256),w	;volatile
  4950  0C1C  1D03               	btfss	3,2
  4951  0C1D  2C3E               	goto	l3954
  4952                           
  4953                           ;main.c: 84:             adcVal = ADC_GetConversion( 0x04 ) ;
  4954  0C1E  3004               	movlw	4
  4955  0C1F  3195  2551  318B   	fcall	_ADC_GetConversion
  4956  0C22  0021               	movlb	1	; select bank1
  4957  0C23  0821               	movf	(?_ADC_GetConversion+1)^(0+128),w
  4958  0C24  0022               	movlb	2	; select bank2
  4959  0C25  00BB               	movwf	(_adcVal+1)^(0+256)	;volatile
  4960  0C26  0021               	movlb	1	; select bank1
  4961  0C27  0820               	movf	?_ADC_GetConversion^(0+128),w
  4962  0C28  0022               	movlb	2	; select bank2
  4963  0C29  00BA               	movwf	_adcVal^(0+256)	;volatile
  4964                           
  4965                           ;main.c: 85:             heartBeatCalc( adcVal ) ;
  4966  0C2A  083B               	movf	(_adcVal+1)^(0+256),w	;volatile
  4967  0C2B  0021               	movlb	1	; select bank1
  4968  0C2C  00B0               	movwf	(heartBeatCalc@adcVal+1)^(0+128)
  4969  0C2D  0022               	movlb	2	; select bank2
  4970  0C2E  083A               	movf	_adcVal^(0+256),w	;volatile
  4971  0C2F  0021               	movlb	1	; select bank1
  4972  0C30  00AF               	movwf	heartBeatCalc@adcVal^(0+128)
  4973  0C31  3184  246F  318B   	fcall	_heartBeatCalc
  4974                           
  4975                           ;main.c: 86:             adcCounter = 0 ;
  4976  0C34  3000               	movlw	0
  4977  0C35  0022               	movlb	2	; select bank2
  4978  0C36  00A7               	movwf	(_adcCounter+3)^(0+256)	;volatile
  4979  0C37  3000               	movlw	0
  4980  0C38  00A6               	movwf	(_adcCounter+2)^(0+256)	;volatile
  4981  0C39  3000               	movlw	0
  4982  0C3A  00A5               	movwf	(_adcCounter+1)^(0+256)	;volatile
  4983  0C3B  3000               	movlw	0
  4984  0C3C  00A4               	movwf	_adcCounter^(0+256)	;volatile
  4985                           
  4986                           ;main.c: 87:             QS = 0 ;
  4987  0C3D  01C6               	clrf	_QS^(0+256)	;volatile
  4988  0C3E                     l3954:	
  4989                           
  4990                           ;main.c: 91:         setCursor(1,7) ;
  4991  0C3E  3007               	movlw	7
  4992  0C3F  00DB               	movwf	??_main^(0+256)
  4993  0C40  085B               	movf	??_main^(0+256),w
  4994  0C41  0021               	movlb	1	; select bank1
  4995  0C42  00A1               	movwf	setCursor@b^(0+128)
  4996  0C43  3001               	movlw	1
  4997  0C44  3196  26EC  318B   	fcall	_setCursor
  4998                           
  4999                           ;main.c: 92:         if( counter <= 15000 ) {
  5000  0C47  3046               	movlw	70
  5001  0C48  0021               	movlb	1	; select bank1
  5002  0C49  00A3               	movwf	(___flge@ff1+3)^(0+128)
  5003  0C4A  306A               	movlw	106
  5004  0C4B  00A2               	movwf	(___flge@ff1+2)^(0+128)
  5005  0C4C  3060               	movlw	96
  5006  0C4D  00A1               	movwf	(___flge@ff1+1)^(0+128)
  5007  0C4E  3000               	movlw	0
  5008  0C4F  00A0               	movwf	___flge@ff1^(0+128)
  5009  0C50  0022               	movlb	2	; select bank2
  5010  0C51  084E               	movf	(_counter+3)^(0+256),w	;volatile
  5011  0C52  0021               	movlb	1	; select bank1
  5012  0C53  00A7               	movwf	(___flge@ff2+3)^(0+128)
  5013  0C54  0022               	movlb	2	; select bank2
  5014  0C55  084D               	movf	(_counter+2)^(0+256),w	;volatile
  5015  0C56  0021               	movlb	1	; select bank1
  5016  0C57  00A6               	movwf	(___flge@ff2+2)^(0+128)
  5017  0C58  0022               	movlb	2	; select bank2
  5018  0C59  084C               	movf	(_counter+1)^(0+256),w	;volatile
  5019  0C5A  0021               	movlb	1	; select bank1
  5020  0C5B  00A5               	movwf	(___flge@ff2+1)^(0+128)
  5021  0C5C  0022               	movlb	2	; select bank2
  5022  0C5D  084B               	movf	_counter^(0+256),w	;volatile
  5023  0C5E  0021               	movlb	1	; select bank1
  5024  0C5F  00A4               	movwf	___flge@ff2^(0+128)
  5025  0C60  3189  2112  318B   	fcall	___flge
  5026  0C63  1C03               	btfss	3,0
  5027  0C64  2C73               	goto	l3960
  5028                           
  5029                           ;main.c: 93:             printf( "%d.%d kph     ", speedHi, speedLo ) ;
  5030  0C65  3000               	movlw	low (STR_1| (0+32768))
  5031  0C66  0022               	movlb	2	; select bank2
  5032  0C67  00D2               	movwf	printf@fmt^(0+256)
  5033  0C68  3098               	movlw	high (STR_1| (0+32768))
  5034  0C69  00D3               	movwf	(printf@fmt^(0+256)+1)
  5035  0C6A  083F               	movf	(_speedHi+1)^(0+256),w	;volatile
  5036  0C6B  00D5               	movwf	((?_printf+1)^(0+256)+2)
  5037  0C6C  083E               	movf	_speedHi^(0+256),w	;volatile
  5038  0C6D  00D4               	movwf	(?_printf^(0+256)+2)
  5039  0C6E  0841               	movf	(_speedLo+1)^(0+256),w	;volatile
  5040  0C6F  00D7               	movwf	((?_printf+1)^(0+256)+4)
  5041  0C70  0840               	movf	_speedLo^(0+256),w	;volatile
  5042  0C71  00D6               	movwf	(?_printf^(0+256)+4)
  5043  0C72  2C78               	goto	L1
  5044  0C73                     l3960:	
  5045                           ;main.c: 94:         }
  5046                           
  5047                           
  5048                           ;main.c: 96:             printf( "0 kph        " ) ;
  5049  0C73  300F               	movlw	low (STR_2| (0+32768))
  5050  0C74  0022               	movlb	2	; select bank2
  5051  0C75  00D2               	movwf	printf@fmt^(0+256)
  5052  0C76  3098               	movlw	high (STR_2| (0+32768))
  5053  0C77  00D3               	movwf	(printf@fmt^(0+256)+1)
  5054  0C78                     L1:	
  5055  0C78  3195  250F  318B   	fcall	_printf
  5056                           
  5057                           ;main.c: 100:         setCursor(2,10) ;
  5058  0C7B  300A               	movlw	10
  5059  0C7C  0022               	movlb	2	; select bank2
  5060  0C7D  00DB               	movwf	??_main^(0+256)
  5061  0C7E  085B               	movf	??_main^(0+256),w
  5062  0C7F  0021               	movlb	1	; select bank1
  5063  0C80  00A1               	movwf	setCursor@b^(0+128)
  5064  0C81  3002               	movlw	2
  5065  0C82  3196  26EC  318B   	fcall	_setCursor
  5066                           
  5067                           ;main.c: 101:         printf( "%d.%d km" , distHi, distLo );
  5068  0C85  3027               	movlw	low (STR_3| (0+32768))
  5069  0C86  0022               	movlb	2	; select bank2
  5070  0C87  00D2               	movwf	printf@fmt^(0+256)
  5071  0C88  3098               	movlw	high (STR_3| (0+32768))
  5072  0C89  00D3               	movwf	(printf@fmt^(0+256)+1)
  5073  0C8A  0845               	movf	(_distHi+1)^(0+256),w	;volatile
  5074  0C8B  00D5               	movwf	((?_printf+1)^(0+256)+2)
  5075  0C8C  0844               	movf	_distHi^(0+256),w	;volatile
  5076  0C8D  00D4               	movwf	(?_printf^(0+256)+2)
  5077  0C8E  0843               	movf	(_distLo+1)^(0+256),w	;volatile
  5078  0C8F  00D7               	movwf	((?_printf+1)^(0+256)+4)
  5079  0C90  0842               	movf	_distLo^(0+256),w	;volatile
  5080  0C91  00D6               	movwf	(?_printf^(0+256)+4)
  5081  0C92  3195  250F  318B   	fcall	_printf
  5082                           
  5083                           ;main.c: 104:         setCursor(3,13) ;
  5084  0C95  300D               	movlw	13
  5085  0C96  0022               	movlb	2	; select bank2
  5086  0C97  00DB               	movwf	??_main^(0+256)
  5087  0C98  085B               	movf	??_main^(0+256),w
  5088  0C99  0021               	movlb	1	; select bank1
  5089  0C9A  00A1               	movwf	setCursor@b^(0+128)
  5090  0C9B  3003               	movlw	3
  5091  0C9C  3196  26EC  318B   	fcall	_setCursor
  5092                           
  5093                           ;main.c: 105:         printf( "%d bpm   " , adcVal ) ;
  5094  0C9F  301D               	movlw	low (STR_4| (0+32768))
  5095  0CA0  0022               	movlb	2	; select bank2
  5096  0CA1  00D2               	movwf	printf@fmt^(0+256)
  5097  0CA2  3098               	movlw	high (STR_4| (0+32768))
  5098  0CA3  00D3               	movwf	(printf@fmt^(0+256)+1)
  5099  0CA4  083B               	movf	(_adcVal+1)^(0+256),w	;volatile
  5100  0CA5  00D5               	movwf	((?_printf+1)^(0+256)+2)
  5101  0CA6  083A               	movf	_adcVal^(0+256),w	;volatile
  5102  0CA7  00D4               	movwf	(?_printf^(0+256)+2)
  5103  0CA8  3195  250F  318B   	fcall	_printf
  5104  0CAB  2BF2               	goto	l3930
  5105  0CAC                     __end_of_main:	
  5106                           
  5107                           	psect	text1
  5108  1524                     __ptext1:	
  5109 ;; *************** function _writeString *****************
  5110 ;; Defined at:
  5111 ;;		line 11 in file "displayOptions.c"
  5112 ;; Parameters:    Size  Location     Type
  5113 ;;  string          1    wreg     PTR unsigned char 
  5114 ;;		 -> hrDisp(13), distanceDisp(11), speedDisp(8), 
  5115 ;; Auto vars:     Size  Location     Type
  5116 ;;  string          1   24[BANK1 ] PTR unsigned char 
  5117 ;;		 -> hrDisp(13), distanceDisp(11), speedDisp(8), 
  5118 ;; Return value:  Size  Location     Type
  5119 ;;                  1    wreg      void 
  5120 ;; Registers used:
  5121 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5122 ;; Tracked objects:
  5123 ;;		On entry : 0/0
  5124 ;;		On exit  : 0/0
  5125 ;;		Unchanged: 0/0
  5126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5128 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5130 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5131 ;;Total ram usage:        1 bytes
  5132 ;; Hardware stack levels used:    1
  5133 ;; Hardware stack levels required when called:   11
  5134 ;; This function calls:
  5135 ;;		_EUSART_is_tx_ready
  5136 ;;		_puts
  5137 ;; This function is called by:
  5138 ;;		_main
  5139 ;; This function uses a non-reentrant model
  5140 ;;
  5141                           
  5142                           
  5143                           ;psect for function _writeString
  5144  1524                     _writeString:	
  5145                           
  5146                           ;incstack = 0
  5147                           ; Regs used in _writeString: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5148                           ;writeString@string stored from wreg
  5149  1524  0021               	movlb	1	; select bank1
  5150  1525  00B8               	movwf	writeString@string^(0+128)
  5151  1526                     l3754:	
  5152                           ;displayOptions.c: 12:     while( !EUSART_is_tx_ready() ) ;
  5153                           
  5154  1526  3194  24E2  3195   	fcall	_EUSART_is_tx_ready
  5155  1529  3A00               	xorlw	0
  5156  152A  1903               	skipnz
  5157  152B  2D26               	goto	l3754
  5158                           
  5159                           ;displayOptions.c: 13:     puts( string );
  5160  152C  0021               	movlb	1	; select bank1
  5161  152D  0838               	movf	writeString@string^(0+128),w
  5162  152E  00B3               	movwf	puts@s^(0+128)
  5163  152F  3001               	movlw	1
  5164  1530  00B4               	movwf	(puts@s+1)^(0+128)
  5165  1531  3195  259C  3195   	fcall	_puts
  5166                           
  5167                           ;displayOptions.c: 14:     _delay((unsigned long)((200)*(16000000/4000000.0)));
  5168  1534  30A0               	movlw	160
  5169  1535                     u5227:	
  5170  1535  3200               	nop2
  5171  1536  0B89               	decfsz	9,f
  5172  1537  2D35               	goto	u5227
  5173  1538  0008               	return
  5174  1539                     __end_of_writeString:	
  5175                           
  5176                           	psect	text2
  5177  16EC                     __ptext2:	
  5178 ;; *************** function _setCursor *****************
  5179 ;; Defined at:
  5180 ;;		line 17 in file "displayOptions.c"
  5181 ;; Parameters:    Size  Location     Type
  5182 ;;  a               1    wreg     unsigned char 
  5183 ;;  b               1    1[BANK1 ] unsigned char 
  5184 ;; Auto vars:     Size  Location     Type
  5185 ;;  a               1    4[BANK1 ] unsigned char 
  5186 ;; Return value:  Size  Location     Type
  5187 ;;                  1    wreg      void 
  5188 ;; Registers used:
  5189 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5190 ;; Tracked objects:
  5191 ;;		On entry : 0/0
  5192 ;;		On exit  : 0/0
  5193 ;;		Unchanged: 0/0
  5194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5195 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5196 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5197 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5198 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5199 ;;Total ram usage:        4 bytes
  5200 ;; Hardware stack levels used:    1
  5201 ;; Hardware stack levels required when called:    7
  5202 ;; This function calls:
  5203 ;;		_EUSART_Write
  5204 ;;		_EUSART_is_tx_ready
  5205 ;; This function is called by:
  5206 ;;		_main
  5207 ;; This function uses a non-reentrant model
  5208 ;;
  5209                           
  5210                           
  5211                           ;psect for function _setCursor
  5212  16EC                     _setCursor:	
  5213                           
  5214                           ;incstack = 0
  5215                           ; Regs used in _setCursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5216                           ;setCursor@a stored from wreg
  5217  16EC  0021               	movlb	1	; select bank1
  5218  16ED  00A4               	movwf	setCursor@a^(0+128)
  5219  16EE                     l3728:	
  5220                           ;displayOptions.c: 18:     while( !EUSART_is_tx_ready() ) ;
  5221                           
  5222  16EE  3194  24E2  3196   	fcall	_EUSART_is_tx_ready
  5223  16F1  3A00               	xorlw	0
  5224  16F2  1903               	skipnz
  5225  16F3  2EEE               	goto	l3728
  5226                           
  5227                           ;displayOptions.c: 19:     EUSART_Write( 254 );
  5228  16F4  30FE               	movlw	254
  5229  16F5  3194  24CB  3196   	fcall	_EUSART_Write
  5230                           
  5231                           ;displayOptions.c: 20:     _delay((unsigned long)((200)*(16000000/4000000.0)));
  5232  16F8  30A0               	movlw	160
  5233  16F9                     u5237:	
  5234  16F9  3200               	nop2
  5235  16FA  0B89               	decfsz	9,f
  5236  16FB  2EF9               	goto	u5237
  5237                           
  5238                           ;displayOptions.c: 21:     switch ( a ){
  5239  16FC  2F11               	goto	l3744
  5240  16FD                     l3734:	
  5241                           
  5242                           ;displayOptions.c: 23:         {;displayOptions.c: 24:             EUSART_Write(128 + 0 
      +                          + b) ;
  5243  16FD  0821               	movf	setCursor@b^(0+128),w
  5244  16FE  3E80               	addlw	128
  5245  16FF  3194  24CB         	fcall	_EUSART_Write
  5246                           
  5247                           ;displayOptions.c: 25:             break ;
  5248  1701  0008               	return
  5249  1702                     l3736:	
  5250                           
  5251                           ;displayOptions.c: 28:         {;displayOptions.c: 29:            EUSART_Write(128 + 64 
      +                          + b) ;
  5252  1702  0821               	movf	setCursor@b^(0+128),w
  5253  1703  3EC0               	addlw	192
  5254  1704  3194  24CB         	fcall	_EUSART_Write
  5255                           
  5256                           ;displayOptions.c: 30:            break ;
  5257  1706  0008               	return
  5258  1707                     l3738:	
  5259                           
  5260                           ;displayOptions.c: 33:         {;displayOptions.c: 34:             EUSART_Write(128 + 20
      +                           + b) ;
  5261  1707  0821               	movf	setCursor@b^(0+128),w
  5262  1708  3E94               	addlw	148
  5263  1709  3194  24CB         	fcall	_EUSART_Write
  5264                           
  5265                           ;displayOptions.c: 35:             break ;
  5266  170B  0008               	return
  5267  170C                     l3740:	
  5268                           
  5269                           ;displayOptions.c: 38:         {;displayOptions.c: 39:             EUSART_Write(128 + 84
      +                           + b) ;
  5270  170C  0821               	movf	setCursor@b^(0+128),w
  5271  170D  3ED4               	addlw	212
  5272  170E  3194  24CB         	fcall	_EUSART_Write
  5273                           
  5274                           ;displayOptions.c: 40:             break ;
  5275  1710  0008               	return
  5276  1711                     l3744:	
  5277  1711  0021               	movlb	1	; select bank1
  5278  1712  0824               	movf	setCursor@a^(0+128),w
  5279  1713  00A2               	movwf	??_setCursor^(0+128)
  5280  1714  01A3               	clrf	(??_setCursor^(0+128)+1)
  5281                           
  5282                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5283                           ; Switch size 1, requested type "simple"
  5284                           ; Number of cases is 1, Range of values is 0 to 0
  5285                           ; switch strategies available:
  5286                           ; Name         Instructions Cycles
  5287                           ; simple_byte            4     3 (average)
  5288                           ; direct_byte            8     6 (fixed)
  5289                           ; jumptable            260     6 (fixed)
  5290                           ;	Chosen strategy is simple_byte
  5291  1715  0823               	movf	(??_setCursor+1)^(0+128),w
  5292  1716  3A00               	xorlw	0	; case 0
  5293  1717  1903               	skipnz
  5294  1718  2F1A               	goto	l4002
  5295  1719  2F28               	goto	l423
  5296  171A                     l4002:	
  5297                           
  5298                           ; Switch size 1, requested type "simple"
  5299                           ; Number of cases is 4, Range of values is 1 to 4
  5300                           ; switch strategies available:
  5301                           ; Name         Instructions Cycles
  5302                           ; simple_byte           13     7 (average)
  5303                           ; direct_byte           17     9 (fixed)
  5304                           ; jumptable            263     9 (fixed)
  5305                           ;	Chosen strategy is simple_byte
  5306  171A  0822               	movf	??_setCursor^(0+128),w
  5307  171B  3A01               	xorlw	1	; case 1
  5308  171C  1903               	skipnz
  5309  171D  2EFD               	goto	l3734
  5310  171E  3A03               	xorlw	3	; case 2
  5311  171F  1903               	skipnz
  5312  1720  2F02               	goto	l3736
  5313  1721  3A01               	xorlw	1	; case 3
  5314  1722  1903               	skipnz
  5315  1723  2F07               	goto	l3738
  5316  1724  3A07               	xorlw	7	; case 4
  5317  1725  1903               	skipnz
  5318  1726  2F0C               	goto	l3740
  5319  1727  2F28               	goto	l423
  5320  1728                     l423:	
  5321  1728  0008               	return
  5322  1729                     __end_of_setCursor:	
  5323                           
  5324                           	psect	text3
  5325  14E2                     __ptext3:	
  5326 ;; *************** function _EUSART_is_tx_ready *****************
  5327 ;; Defined at:
  5328 ;;		line 93 in file "mcc_generated_files/eusart.c"
  5329 ;; Parameters:    Size  Location     Type
  5330 ;;		None
  5331 ;; Auto vars:     Size  Location     Type
  5332 ;;		None
  5333 ;; Return value:  Size  Location     Type
  5334 ;;                  1    wreg      _Bool 
  5335 ;; Registers used:
  5336 ;;		wreg, status,2
  5337 ;; Tracked objects:
  5338 ;;		On entry : 0/0
  5339 ;;		On exit  : 0/0
  5340 ;;		Unchanged: 0/0
  5341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5343 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5345 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5346 ;;Total ram usage:        1 bytes
  5347 ;; Hardware stack levels used:    1
  5348 ;; Hardware stack levels required when called:    6
  5349 ;; This function calls:
  5350 ;;		Nothing
  5351 ;; This function is called by:
  5352 ;;		_writeString
  5353 ;;		_setCursor
  5354 ;;		_backlightBrightness
  5355 ;; This function uses a non-reentrant model
  5356 ;;
  5357                           
  5358                           
  5359                           ;psect for function _EUSART_is_tx_ready
  5360  14E2                     _EUSART_is_tx_ready:	
  5361                           
  5362                           ;mcc_generated_files/eusart.c: 95:     return (_Bool)(PIR1bits.TXIF && TX1STAbits.TXEN);
  5363                           
  5364                           ;incstack = 0
  5365                           ; Regs used in _EUSART_is_tx_ready: [wreg+status,2]
  5366  14E2  0021               	movlb	1	; select bank1
  5367  14E3  01A0               	clrf	_EUSART_is_tx_ready$167^(0+128)
  5368  14E4  0020               	movlb	0	; select bank0
  5369  14E5  1E10               	btfss	16,4	;volatile
  5370  14E6  2CED               	goto	l3450
  5371  14E7  0023               	movlb	3	; select bank3
  5372  14E8  1E9E               	btfss	30,5	;volatile
  5373  14E9  2CED               	goto	l3450
  5374  14EA  0021               	movlb	1	; select bank1
  5375  14EB  01A0               	clrf	_EUSART_is_tx_ready$167^(0+128)
  5376  14EC  0AA0               	incf	_EUSART_is_tx_ready$167^(0+128),f
  5377  14ED                     l3450:	
  5378  14ED  0021               	movlb	1	; select bank1
  5379  14EE  0820               	movf	_EUSART_is_tx_ready$167^(0+128),w
  5380  14EF  0008               	return
  5381  14F0                     __end_of_EUSART_is_tx_ready:	
  5382                           
  5383                           	psect	text4
  5384  1496                     __ptext4:	
  5385 ;; *************** function _resetCursor *****************
  5386 ;; Defined at:
  5387 ;;		line 91 in file "displayOptions.c"
  5388 ;; Parameters:    Size  Location     Type
  5389 ;;		None
  5390 ;; Auto vars:     Size  Location     Type
  5391 ;;		None
  5392 ;; Return value:  Size  Location     Type
  5393 ;;                  1    wreg      void 
  5394 ;; Registers used:
  5395 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5396 ;; Tracked objects:
  5397 ;;		On entry : 0/0
  5398 ;;		On exit  : 0/0
  5399 ;;		Unchanged: 0/0
  5400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5405 ;;Total ram usage:        0 bytes
  5406 ;; Hardware stack levels used:    1
  5407 ;; Hardware stack levels required when called:   11
  5408 ;; This function calls:
  5409 ;;		_puts
  5410 ;; This function is called by:
  5411 ;;		_main
  5412 ;; This function uses a non-reentrant model
  5413 ;;
  5414                           
  5415                           
  5416                           ;psect for function _resetCursor
  5417  1496                     _resetCursor:	
  5418                           
  5419                           ;displayOptions.c: 92:     puts("|-");
  5420                           
  5421                           ;incstack = 0
  5422                           ; Regs used in _resetCursor: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5423  1496  3030               	movlw	low (STR_5| (0+32768))
  5424  1497  0021               	movlb	1	; select bank1
  5425  1498  00B3               	movwf	puts@s^(0+128)
  5426  1499  3098               	movlw	high (STR_5| (0+32768))
  5427  149A  00B4               	movwf	(puts@s^(0+128)+1)
  5428  149B  3195  259C         	fcall	_puts
  5429  149D  0008               	return
  5430  149E                     __end_of_resetCursor:	
  5431                           
  5432                           	psect	text5
  5433  159C                     __ptext5:	
  5434 ;; *************** function _puts *****************
  5435 ;; Defined at:
  5436 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\puts.c"
  5437 ;; Parameters:    Size  Location     Type
  5438 ;;  s               2   19[BANK1 ] PTR const unsigned char 
  5439 ;;		 -> STR_5(3), hrDisp(13), distanceDisp(11), speedDisp(8), 
  5440 ;; Auto vars:     Size  Location     Type
  5441 ;;  r               2    0        int 
  5442 ;; Return value:  Size  Location     Type
  5443 ;;                  2   19[BANK1 ] int 
  5444 ;; Registers used:
  5445 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5446 ;; Tracked objects:
  5447 ;;		On entry : 0/0
  5448 ;;		On exit  : 0/0
  5449 ;;		Unchanged: 0/0
  5450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5451 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5452 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5454 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  5455 ;;Total ram usage:        5 bytes
  5456 ;; Hardware stack levels used:    1
  5457 ;; Hardware stack levels required when called:   10
  5458 ;; This function calls:
  5459 ;;		_fputc
  5460 ;;		_fputs
  5461 ;; This function is called by:
  5462 ;;		_writeString
  5463 ;;		_resetCursor
  5464 ;; This function uses a non-reentrant model
  5465 ;;
  5466                           
  5467                           
  5468                           ;psect for function _puts
  5469  159C                     _puts:	
  5470                           
  5471                           ;incstack = 0
  5472                           ; Regs used in _puts: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5473  159C  0021               	movlb	1	; select bank1
  5474  159D  01B7               	clrf	_puts$1137^(0+128)
  5475  159E  0AB7               	incf	_puts$1137^(0+128),f
  5476  159F  0834               	movf	(puts@s+1)^(0+128),w
  5477  15A0  00AB               	movwf	(fputs@s+1)^(0+128)
  5478  15A1  0833               	movf	puts@s^(0+128),w
  5479  15A2  00AA               	movwf	fputs@s^(0+128)
  5480  15A3  01AC               	clrf	fputs@fp^(0+128)
  5481  15A4  3196  265C  3195   	fcall	_fputs
  5482  15A7  0021               	movlb	1	; select bank1
  5483  15A8  1BAB               	btfsc	(?_fputs+1)^(0+128),7
  5484  15A9  0008               	return
  5485  15AA  300A               	movlw	10
  5486  15AB  00A2               	movwf	fputc@c^(0+128)
  5487  15AC  3000               	movlw	0
  5488  15AD  00A3               	movwf	(fputc@c^(0+128)+1)
  5489  15AE  01A4               	clrf	fputc@fp^(0+128)
  5490  15AF  3197  2729  3195   	fcall	_fputc
  5491  15B2  0021               	movlb	1	; select bank1
  5492  15B3  1BA3               	btfsc	(?_fputc+1)^(0+128),7
  5493  15B4  0008               	return
  5494  15B5  01B7               	clrf	_puts$1137^(0+128)
  5495  15B6  0008               	return
  5496  15B7                     __end_of_puts:	
  5497                           
  5498                           	psect	text6
  5499  150F                     __ptext6:	
  5500 ;; *************** function _printf *****************
  5501 ;; Defined at:
  5502 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  5503 ;; Parameters:    Size  Location     Type
  5504 ;;  fmt             2    3[BANK2 ] PTR const unsigned char 
  5505 ;;		 -> STR_4(10), STR_3(9), STR_2(14), STR_1(15), 
  5506 ;; Auto vars:     Size  Location     Type
  5507 ;;  ret             2    0        int 
  5508 ;;  ap              1   11[BANK2 ] PTR void [1]
  5509 ;;		 -> ?_printf(2), 
  5510 ;; Return value:  Size  Location     Type
  5511 ;;                  2    3[BANK2 ] int 
  5512 ;; Registers used:
  5513 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5514 ;; Tracked objects:
  5515 ;;		On entry : 0/0
  5516 ;;		On exit  : 0/0
  5517 ;;		Unchanged: 0/0
  5518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5519 ;;      Params:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0
  5520 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  5521 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5522 ;;      Totals:         0       0       1       9       0       0       0       0       0       0       0       0       
      +0       0
  5523 ;;Total ram usage:       10 bytes
  5524 ;; Hardware stack levels used:    1
  5525 ;; Hardware stack levels required when called:   14
  5526 ;; This function calls:
  5527 ;;		_vfprintf
  5528 ;; This function is called by:
  5529 ;;		_main
  5530 ;; This function uses a non-reentrant model
  5531 ;;
  5532                           
  5533                           
  5534                           ;psect for function _printf
  5535  150F                     _printf:	
  5536                           
  5537                           ;incstack = 0
  5538                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5539  150F  3054               	movlw	(low ((?_printf| (0+256)+2)))& (0+255)
  5540  1510  0021               	movlb	1	; select bank1
  5541  1511  00EF               	movwf	??_printf^(0+128)
  5542  1512  086F               	movf	??_printf^(0+128),w
  5543  1513  0022               	movlb	2	; select bank2
  5544  1514  00DA               	movwf	printf@ap^(0+256)
  5545  1515  0853               	movf	(printf@fmt+1)^(0+256),w
  5546  1516  0021               	movlb	1	; select bank1
  5547  1517  00EB               	movwf	(vfprintf@fmt+1)^(0+128)
  5548  1518  0022               	movlb	2	; select bank2
  5549  1519  0852               	movf	printf@fmt^(0+256),w
  5550  151A  0021               	movlb	1	; select bank1
  5551  151B  00EA               	movwf	vfprintf@fmt^(0+128)
  5552  151C  305A               	movlw	(low (printf@ap| (0+256)))& (0+255)
  5553  151D  00EF               	movwf	??_printf^(0+128)
  5554  151E  086F               	movf	??_printf^(0+128),w
  5555  151F  00EC               	movwf	vfprintf@ap^(0+128)
  5556  1520  3000               	movlw	0
  5557  1521  3196  2685         	fcall	_vfprintf
  5558  1523  0008               	return
  5559  1524                     __end_of_printf:	
  5560                           
  5561                           	psect	text7
  5562  1685                     __ptext7:	
  5563 ;; *************** function _vfprintf *****************
  5564 ;; Defined at:
  5565 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5566 ;; Parameters:    Size  Location     Type
  5567 ;;  fp              1    wreg     PTR struct _IO_FILE
  5568 ;;		 -> NULL(0), 
  5569 ;;  fmt             2   74[BANK1 ] PTR const unsigned char 
  5570 ;;		 -> STR_4(10), STR_3(9), STR_2(14), STR_1(15), 
  5571 ;;  ap              1   76[BANK1 ] PTR PTR void 
  5572 ;;		 -> printf@ap(1), 
  5573 ;; Auto vars:     Size  Location     Type
  5574 ;;  fp              1    0[BANK2 ] PTR struct _IO_FILE
  5575 ;;		 -> NULL(0), 
  5576 ;;  cfmt            2    1[BANK2 ] PTR unsigned char 
  5577 ;;		 -> STR_4(10), STR_3(9), STR_2(14), STR_1(15), 
  5578 ;; Return value:  Size  Location     Type
  5579 ;;                  2   74[BANK1 ] int 
  5580 ;; Registers used:
  5581 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5582 ;; Tracked objects:
  5583 ;;		On entry : 0/0
  5584 ;;		On exit  : 0/0
  5585 ;;		Unchanged: 0/0
  5586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5587 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5588 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  5589 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5590 ;;      Totals:         0       0       5       3       0       0       0       0       0       0       0       0       
      +0       0
  5591 ;;Total ram usage:        8 bytes
  5592 ;; Hardware stack levels used:    1
  5593 ;; Hardware stack levels required when called:   13
  5594 ;; This function calls:
  5595 ;;		_vfpfcnvrt
  5596 ;; This function is called by:
  5597 ;;		_printf
  5598 ;; This function uses a non-reentrant model
  5599 ;;
  5600                           
  5601                           
  5602                           ;psect for function _vfprintf
  5603  1685                     _vfprintf:	
  5604                           
  5605                           ;incstack = 0
  5606                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5607                           ;vfprintf@fp stored from wreg
  5608  1685  0022               	movlb	2	; select bank2
  5609  1686  00CF               	movwf	vfprintf@fp^(0+256)
  5610                           
  5611                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  5612  1687  0021               	movlb	1	; select bank1
  5613  1688  086B               	movf	(vfprintf@fmt+1)^(0+128),w
  5614  1689  0022               	movlb	2	; select bank2
  5615  168A  00D1               	movwf	(vfprintf@cfmt+1)^(0+256)
  5616  168B  0021               	movlb	1	; select bank1
  5617  168C  086A               	movf	vfprintf@fmt^(0+128),w
  5618  168D  0022               	movlb	2	; select bank2
  5619  168E  00D0               	movwf	vfprintf@cfmt^(0+256)
  5620                           
  5621                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  5622  168F  01B0               	clrf	_nout^(0+256)
  5623  1690  01B1               	clrf	(_nout+1)^(0+256)
  5624  1691                     l3544:	
  5625                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  5626                           
  5627                           
  5628                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  5629  1691  0850               	movf	vfprintf@cfmt^(0+256),w
  5630  1692  0084               	movwf	4
  5631  1693  0851               	movf	(vfprintf@cfmt+1)^(0+256),w
  5632  1694  0085               	movwf	5
  5633  1695  0012               	moviw fsr0++
  5634  1696  1903               	btfsc	3,2
  5635  1697  2EAF               	goto	l3546
  5636                           
  5637                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  5638  1698  3050               	movlw	(low (vfprintf@cfmt| (0+256)))& (0+255)
  5639  1699  0021               	movlb	1	; select bank1
  5640  169A  00ED               	movwf	??_vfprintf^(0+128)
  5641  169B  086D               	movf	??_vfprintf^(0+128),w
  5642  169C  00DA               	movwf	vfpfcnvrt@fmt^(0+128)
  5643  169D  086C               	movf	vfprintf@ap^(0+128),w
  5644  169E  00EE               	movwf	(??_vfprintf+1)^(0+128)
  5645  169F  086E               	movf	(??_vfprintf+1)^(0+128),w
  5646  16A0  00DB               	movwf	vfpfcnvrt@ap^(0+128)
  5647  16A1  0022               	movlb	2	; select bank2
  5648  16A2  084F               	movf	vfprintf@fp^(0+256),w
  5649  16A3  318A  2210  3196   	fcall	_vfpfcnvrt
  5650  16A6  0021               	movlb	1	; select bank1
  5651  16A7  085A               	movf	?_vfpfcnvrt^(0+128),w
  5652  16A8  0022               	movlb	2	; select bank2
  5653  16A9  07B0               	addwf	_nout^(0+256),f
  5654  16AA  0021               	movlb	1	; select bank1
  5655  16AB  085B               	movf	(?_vfpfcnvrt+1)^(0+128),w
  5656  16AC  0022               	movlb	2	; select bank2
  5657  16AD  3DB1               	addwfc	(_nout+1)^(0+256),f
  5658  16AE  2E91               	goto	l3544
  5659  16AF                     l3546:	
  5660                           
  5661                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  5662  16AF  0831               	movf	(_nout+1)^(0+256),w
  5663  16B0  0021               	movlb	1	; select bank1
  5664  16B1  00EB               	movwf	(?_vfprintf+1)^(0+128)
  5665  16B2  0022               	movlb	2	; select bank2
  5666  16B3  0830               	movf	_nout^(0+256),w
  5667  16B4  0021               	movlb	1	; select bank1
  5668  16B5  00EA               	movwf	?_vfprintf^(0+128)
  5669  16B6  0008               	return
  5670  16B7                     __end_of_vfprintf:	
  5671                           
  5672                           	psect	text8
  5673  0A10                     __ptext8:	
  5674 ;; *************** function _vfpfcnvrt *****************
  5675 ;; Defined at:
  5676 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5677 ;; Parameters:    Size  Location     Type
  5678 ;;  fp              1    wreg     PTR struct _IO_FILE
  5679 ;;		 -> NULL(0), 
  5680 ;;  fmt             1   58[BANK1 ] PTR PTR unsigned char 
  5681 ;;		 -> vfprintf@cfmt(2), 
  5682 ;;  ap              1   59[BANK1 ] PTR PTR void 
  5683 ;;		 -> printf@ap(1), 
  5684 ;; Auto vars:     Size  Location     Type
  5685 ;;  fp              1   73[BANK1 ] PTR struct _IO_FILE
  5686 ;;		 -> NULL(0), 
  5687 ;;  ll              8   65[BANK1 ] long long 
  5688 ;;  llu             8    0        unsigned long long 
  5689 ;;  f               4    0        unsigned long long 
  5690 ;;  ct              3    0        unsigned char [3]
  5691 ;;  vp              2    0        PTR void 
  5692 ;;  i               2    0        int 
  5693 ;;  done            2    0        int 
  5694 ;;  cp              2    0        PTR unsigned char 
  5695 ;;  c               1    0        unsigned char 
  5696 ;; Return value:  Size  Location     Type
  5697 ;;                  2   58[BANK1 ] int 
  5698 ;; Registers used:
  5699 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5700 ;; Tracked objects:
  5701 ;;		On entry : 0/0
  5702 ;;		On exit  : 0/0
  5703 ;;		Unchanged: 0/0
  5704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5705 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5706 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  5707 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  5708 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  5709 ;;Total ram usage:       16 bytes
  5710 ;; Hardware stack levels used:    1
  5711 ;; Hardware stack levels required when called:   12
  5712 ;; This function calls:
  5713 ;;		_dtoa
  5714 ;;		_fputc
  5715 ;; This function is called by:
  5716 ;;		_vfprintf
  5717 ;; This function uses a non-reentrant model
  5718 ;;
  5719                           
  5720                           
  5721                           ;psect for function _vfpfcnvrt
  5722  0A10                     _vfpfcnvrt:	
  5723                           
  5724                           ;incstack = 0
  5725                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5726                           ;vfpfcnvrt@fp stored from wreg
  5727  0A10  0021               	movlb	1	; select bank1
  5728  0A11  00E9               	movwf	vfpfcnvrt@fp^(0+128)
  5729                           
  5730                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  5731  0A12  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5732  0A13  0086               	movwf	6
  5733  0A14  3001               	movlw	1	; select bank2/3
  5734  0A15  0087               	movwf	7
  5735  0A16  3F40               	moviw [0]fsr1
  5736  0A17  00DC               	movwf	??_vfpfcnvrt^(0+128)
  5737  0A18  3F41               	moviw [1]fsr1
  5738  0A19  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5739  0A1A  085C               	movf	??_vfpfcnvrt^(0+128),w
  5740  0A1B  0084               	movwf	4
  5741  0A1C  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5742  0A1D  0085               	movwf	5
  5743  0A1E  0012               	moviw fsr0++
  5744  0A1F  3A25               	xorlw	37
  5745  0A20  1D03               	btfss	3,2
  5746  0A21  2AC9               	goto	l3230
  5747                           
  5748                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  5749  0A22  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5750  0A23  0086               	movwf	6
  5751  0A24  3001               	movlw	1	; select bank2/3
  5752  0A25  0087               	movwf	7
  5753  0A26  3001               	movlw	1
  5754  0A27  0781               	addwf	1,f
  5755  0A28  3141               	addfsr 1,1
  5756  0A29  1803               	skipnc
  5757  0A2A  0A81               	incf	1,f
  5758                           
  5759                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  5760  0A2B  0022               	movlb	2	; select bank2
  5761  0A2C  01B2               	clrf	_width^(0+256)
  5762  0A2D  01B3               	clrf	(_width+1)^(0+256)
  5763  0A2E  0020               	movlb	0	; select bank0
  5764  0A2F  01E0               	clrf	_flags
  5765  0A30  01E1               	clrf	_flags+1
  5766                           
  5767                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  5768  0A31  30FF               	movlw	255
  5769  0A32  0022               	movlb	2	; select bank2
  5770  0A33  00B4               	movwf	_prec^(0+256)
  5771  0A34  30FF               	movlw	255
  5772  0A35  00B5               	movwf	(_prec^(0+256)+1)
  5773                           
  5774                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  5775  0A36  0021               	movlb	1	; select bank1
  5776  0A37  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5777  0A38  0086               	movwf	6
  5778  0A39  3001               	movlw	1	; select bank2/3
  5779  0A3A  0087               	movwf	7
  5780  0A3B  3F40               	moviw [0]fsr1
  5781  0A3C  00DC               	movwf	??_vfpfcnvrt^(0+128)
  5782  0A3D  3F41               	moviw [1]fsr1
  5783  0A3E  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5784  0A3F  085C               	movf	??_vfpfcnvrt^(0+128),w
  5785  0A40  0084               	movwf	4
  5786  0A41  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5787  0A42  0085               	movwf	5
  5788  0A43  0012               	moviw fsr0++
  5789  0A44  3A64               	xorlw	100
  5790  0A45  1903               	btfsc	3,2
  5791  0A46  2A57               	goto	l3206
  5792  0A47  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5793  0A48  0086               	movwf	6
  5794  0A49  3001               	movlw	1	; select bank2/3
  5795  0A4A  0087               	movwf	7
  5796  0A4B  3F40               	moviw [0]fsr1
  5797  0A4C  00DC               	movwf	??_vfpfcnvrt^(0+128)
  5798  0A4D  3F41               	moviw [1]fsr1
  5799  0A4E  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5800  0A4F  085C               	movf	??_vfpfcnvrt^(0+128),w
  5801  0A50  0084               	movwf	4
  5802  0A51  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5803  0A52  0085               	movwf	5
  5804  0A53  0012               	moviw fsr0++
  5805  0A54  3A69               	xorlw	105
  5806  0A55  1D03               	btfss	3,2
  5807  0A56  2A94               	goto	l3214
  5808  0A57                     l3206:	
  5809                           
  5810                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  5811  0A57  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5812  0A58  0086               	movwf	6
  5813  0A59  3001               	movlw	1	; select bank2/3
  5814  0A5A  0087               	movwf	7
  5815  0A5B  3001               	movlw	1
  5816  0A5C  0781               	addwf	1,f
  5817  0A5D  3141               	addfsr 1,1
  5818  0A5E  1803               	skipnc
  5819  0A5F  0A81               	incf	1,f
  5820                           
  5821                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  5822  0A60  085B               	movf	vfpfcnvrt@ap^(0+128),w
  5823  0A61  0086               	movwf	6
  5824  0A62  3001               	movlw	1	; select bank2/3
  5825  0A63  0087               	movwf	7
  5826  0A64  0801               	movf	1,w
  5827  0A65  0084               	movwf	4
  5828  0A66  3001               	movlw	1	; select bank2/3
  5829  0A67  0085               	movwf	5
  5830  0A68  3002               	movlw	2
  5831  0A69  0781               	addwf	1,f
  5832  0A6A  3F00               	moviw [0]fsr0
  5833  0A6B  00DC               	movwf	??_vfpfcnvrt^(0+128)
  5834  0A6C  3F01               	moviw [1]fsr0
  5835  0A6D  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5836  0A6E  085C               	movf	??_vfpfcnvrt^(0+128),w
  5837  0A6F  00E1               	movwf	vfpfcnvrt@ll^(0+128)
  5838  0A70  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5839  0A71  00E2               	movwf	(vfpfcnvrt@ll+1)^(0+128)
  5840  0A72  0D89               	rlf	9,f
  5841  0A73  3B89               	subwfb	9,f
  5842  0A74  0989               	comf	9,f
  5843  0A75  00E3               	movwf	(vfpfcnvrt@ll+2)^(0+128)
  5844  0A76  00E4               	movwf	(vfpfcnvrt@ll+3)^(0+128)
  5845  0A77  00E5               	movwf	(vfpfcnvrt@ll+4)^(0+128)
  5846  0A78  00E6               	movwf	(vfpfcnvrt@ll+5)^(0+128)
  5847  0A79  00E7               	movwf	(vfpfcnvrt@ll+6)^(0+128)
  5848  0A7A  00E8               	movwf	(vfpfcnvrt@ll+7)^(0+128)
  5849                           
  5850                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  5851  0A7B  0861               	movf	vfpfcnvrt@ll^(0+128),w
  5852  0A7C  00BC               	movwf	dtoa@d^(0+128)
  5853  0A7D  0862               	movf	(vfpfcnvrt@ll+1)^(0+128),w
  5854  0A7E  00BD               	movwf	(dtoa@d+1)^(0+128)
  5855  0A7F  0863               	movf	(vfpfcnvrt@ll+2)^(0+128),w
  5856  0A80  00BE               	movwf	(dtoa@d+2)^(0+128)
  5857  0A81  0864               	movf	(vfpfcnvrt@ll+3)^(0+128),w
  5858  0A82  00BF               	movwf	(dtoa@d+3)^(0+128)
  5859  0A83  0865               	movf	(vfpfcnvrt@ll+4)^(0+128),w
  5860  0A84  00C0               	movwf	(dtoa@d+4)^(0+128)
  5861  0A85  0866               	movf	(vfpfcnvrt@ll+5)^(0+128),w
  5862  0A86  00C1               	movwf	(dtoa@d+5)^(0+128)
  5863  0A87  0867               	movf	(vfpfcnvrt@ll+6)^(0+128),w
  5864  0A88  00C2               	movwf	(dtoa@d+6)^(0+128)
  5865  0A89  0868               	movf	(vfpfcnvrt@ll+7)^(0+128),w
  5866  0A8A  00C3               	movwf	(dtoa@d+7)^(0+128)
  5867  0A8B  0869               	movf	vfpfcnvrt@fp^(0+128),w
  5868  0A8C  318E  26AD         	fcall	_dtoa
  5869  0A8E  0021               	movlb	1	; select bank1
  5870  0A8F  083D               	movf	(?_dtoa+1)^(0+128),w
  5871  0A90  00DB               	movwf	(?_vfpfcnvrt+1)^(0+128)
  5872  0A91  083C               	movf	?_dtoa^(0+128),w
  5873  0A92  00DA               	movwf	?_vfpfcnvrt^(0+128)
  5874  0A93  0008               	return
  5875  0A94                     l3214:	
  5876                           
  5877                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  5878  0A94  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5879  0A95  0086               	movwf	6
  5880  0A96  3001               	movlw	1	; select bank2/3
  5881  0A97  0087               	movwf	7
  5882  0A98  3F40               	moviw [0]fsr1
  5883  0A99  00DC               	movwf	??_vfpfcnvrt^(0+128)
  5884  0A9A  3F41               	moviw [1]fsr1
  5885  0A9B  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5886  0A9C  085C               	movf	??_vfpfcnvrt^(0+128),w
  5887  0A9D  0084               	movwf	4
  5888  0A9E  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5889  0A9F  0085               	movwf	5
  5890  0AA0  0012               	moviw fsr0++
  5891  0AA1  3A25               	xorlw	37
  5892  0AA2  1D03               	btfss	3,2
  5893  0AA3  2ABD               	goto	l3224
  5894                           
  5895                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  5896  0AA4  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5897  0AA5  0086               	movwf	6
  5898  0AA6  3001               	movlw	1	; select bank2/3
  5899  0AA7  0087               	movwf	7
  5900  0AA8  3001               	movlw	1
  5901  0AA9  0781               	addwf	1,f
  5902  0AAA  3141               	addfsr 1,1
  5903  0AAB  1803               	skipnc
  5904  0AAC  0A81               	incf	1,f
  5905                           
  5906                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  5907  0AAD  3025               	movlw	37
  5908  0AAE  00A2               	movwf	fputc@c^(0+128)
  5909  0AAF  3000               	movlw	0
  5910  0AB0  00A3               	movwf	(fputc@c^(0+128)+1)
  5911  0AB1  0869               	movf	vfpfcnvrt@fp^(0+128),w
  5912  0AB2  00DC               	movwf	??_vfpfcnvrt^(0+128)
  5913  0AB3  085C               	movf	??_vfpfcnvrt^(0+128),w
  5914  0AB4  00A4               	movwf	fputc@fp^(0+128)
  5915  0AB5  3197  2729         	fcall	_fputc
  5916  0AB7                     l3220:	
  5917                           
  5918                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  5919  0AB7  3001               	movlw	1
  5920  0AB8  0021               	movlb	1	; select bank1
  5921  0AB9  00DA               	movwf	?_vfpfcnvrt^(0+128)
  5922  0ABA  3000               	movlw	0
  5923  0ABB  00DB               	movwf	(?_vfpfcnvrt^(0+128)+1)
  5924  0ABC  0008               	return
  5925  0ABD                     l3224:	
  5926                           
  5927                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  5928  0ABD  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5929  0ABE  0086               	movwf	6
  5930  0ABF  3001               	movlw	1	; select bank2/3
  5931  0AC0  0087               	movwf	7
  5932  0AC1  3001               	movlw	1
  5933  0AC2  0781               	addwf	1,f
  5934  0AC3  3141               	addfsr 1,1
  5935  0AC4  1803               	skipnc
  5936  0AC5  0A81               	incf	1,f
  5937                           
  5938                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  5939  0AC6  01DA               	clrf	?_vfpfcnvrt^(0+128)
  5940  0AC7  01DB               	clrf	(?_vfpfcnvrt+1)^(0+128)
  5941  0AC8  0008               	return
  5942  0AC9                     l3230:	
  5943                           
  5944                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  5945  0AC9  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5946  0ACA  0086               	movwf	6
  5947  0ACB  3001               	movlw	1	; select bank2/3
  5948  0ACC  0087               	movwf	7
  5949  0ACD  3F40               	moviw [0]fsr1
  5950  0ACE  00DC               	movwf	??_vfpfcnvrt^(0+128)
  5951  0ACF  3F41               	moviw [1]fsr1
  5952  0AD0  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5953  0AD1  085C               	movf	??_vfpfcnvrt^(0+128),w
  5954  0AD2  0084               	movwf	4
  5955  0AD3  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5956  0AD4  0085               	movwf	5
  5957  0AD5  0800               	movf	0,w	;code access
  5958  0AD6  00DE               	movwf	(??_vfpfcnvrt+2)^(0+128)
  5959  0AD7  01DF               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  5960  0AD8  085E               	movf	(??_vfpfcnvrt+2)^(0+128),w
  5961  0AD9  00A2               	movwf	fputc@c^(0+128)
  5962  0ADA  085F               	movf	(??_vfpfcnvrt+3)^(0+128),w
  5963  0ADB  00A3               	movwf	(fputc@c+1)^(0+128)
  5964  0ADC  0869               	movf	vfpfcnvrt@fp^(0+128),w
  5965  0ADD  00E0               	movwf	(??_vfpfcnvrt+4)^(0+128)
  5966  0ADE  0860               	movf	(??_vfpfcnvrt+4)^(0+128),w
  5967  0ADF  00A4               	movwf	fputc@fp^(0+128)
  5968  0AE0  3197  2729  318A   	fcall	_fputc
  5969                           
  5970                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  5971  0AE3  0021               	movlb	1	; select bank1
  5972  0AE4  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5973  0AE5  0086               	movwf	6
  5974  0AE6  3001               	movlw	1	; select bank2/3
  5975  0AE7  0087               	movwf	7
  5976  0AE8  3001               	movlw	1
  5977  0AE9  0781               	addwf	1,f
  5978  0AEA  3141               	addfsr 1,1
  5979  0AEB  1803               	skipnc
  5980  0AEC  0A81               	incf	1,f
  5981  0AED  2AB7               	goto	l3220
  5982  0AEE                     __end_of_vfpfcnvrt:	
  5983                           
  5984                           	psect	text9
  5985  0EAD                     __ptext9:	
  5986 ;; *************** function _dtoa *****************
  5987 ;; Defined at:
  5988 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5989 ;; Parameters:    Size  Location     Type
  5990 ;;  fp              1    wreg     PTR struct _IO_FILE
  5991 ;;		 -> NULL(0), 
  5992 ;;  d               8   28[BANK1 ] long long 
  5993 ;; Auto vars:     Size  Location     Type
  5994 ;;  fp              1   43[BANK1 ] PTR struct _IO_FILE
  5995 ;;		 -> NULL(0), 
  5996 ;;  n               8   48[BANK1 ] long long 
  5997 ;;  i               2   56[BANK1 ] int 
  5998 ;;  s               2   46[BANK1 ] int 
  5999 ;;  w               2   44[BANK1 ] int 
  6000 ;;  p               2   41[BANK1 ] int 
  6001 ;; Return value:  Size  Location     Type
  6002 ;;                  2   28[BANK1 ] int 
  6003 ;; Registers used:
  6004 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6005 ;; Tracked objects:
  6006 ;;		On entry : 0/0
  6007 ;;		On exit  : 0/0
  6008 ;;		Unchanged: 0/0
  6009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6010 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  6011 ;;      Locals:         0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0
  6012 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6013 ;;      Totals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0
  6014 ;;Total ram usage:       30 bytes
  6015 ;; Hardware stack levels used:    1
  6016 ;; Hardware stack levels required when called:   11
  6017 ;; This function calls:
  6018 ;;		___aodiv
  6019 ;;		___aomod
  6020 ;;		_abs
  6021 ;;		_pad
  6022 ;; This function is called by:
  6023 ;;		_vfpfcnvrt
  6024 ;; This function uses a non-reentrant model
  6025 ;;
  6026                           
  6027                           
  6028                           ;psect for function _dtoa
  6029  0EAD                     _dtoa:	
  6030                           
  6031                           ;incstack = 0
  6032                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6033                           ;dtoa@fp stored from wreg
  6034  0EAD  0021               	movlb	1	; select bank1
  6035  0EAE  00CB               	movwf	dtoa@fp^(0+128)
  6036                           
  6037                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  6038  0EAF  083C               	movf	dtoa@d^(0+128),w
  6039  0EB0  00D0               	movwf	dtoa@n^(0+128)
  6040  0EB1  083D               	movf	(dtoa@d+1)^(0+128),w
  6041  0EB2  00D1               	movwf	(dtoa@n+1)^(0+128)
  6042  0EB3  083E               	movf	(dtoa@d+2)^(0+128),w
  6043  0EB4  00D2               	movwf	(dtoa@n+2)^(0+128)
  6044  0EB5  083F               	movf	(dtoa@d+3)^(0+128),w
  6045  0EB6  00D3               	movwf	(dtoa@n+3)^(0+128)
  6046  0EB7  0840               	movf	(dtoa@d+4)^(0+128),w
  6047  0EB8  00D4               	movwf	(dtoa@n+4)^(0+128)
  6048  0EB9  0841               	movf	(dtoa@d+5)^(0+128),w
  6049  0EBA  00D5               	movwf	(dtoa@n+5)^(0+128)
  6050  0EBB  0842               	movf	(dtoa@d+6)^(0+128),w
  6051  0EBC  00D6               	movwf	(dtoa@n+6)^(0+128)
  6052  0EBD  0843               	movf	(dtoa@d+7)^(0+128),w
  6053  0EBE  00D7               	movwf	(dtoa@n+7)^(0+128)
  6054                           
  6055                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  6056  0EBF  30D0               	movlw	low dtoa@n
  6057  0EC0  0086               	movwf	6
  6058  0EC1  3000               	movlw	high dtoa@n
  6059  0EC2  0087               	movwf	7
  6060  0EC3  3F47               	moviw [7]fsr1
  6061  0EC4  00C4               	movwf	??_dtoa^(0+128)
  6062  0EC5  1FC4               	btfss	??_dtoa^(0+128),7
  6063  0EC6  2EC9               	goto	u2970
  6064  0EC7  3001               	movlw	1
  6065  0EC8  2ECA               	goto	u2980
  6066  0EC9                     u2970:	
  6067  0EC9  3000               	movlw	0
  6068  0ECA                     u2980:	
  6069  0ECA  0021               	movlb	1	; select bank1
  6070  0ECB  00C5               	movwf	(??_dtoa+1)^(0+128)
  6071  0ECC  01C6               	clrf	((??_dtoa+1)^(0+128)+1)
  6072  0ECD  0845               	movf	(??_dtoa+1)^(0+128),w
  6073  0ECE  00CE               	movwf	dtoa@s^(0+128)
  6074  0ECF  0846               	movf	(??_dtoa+2)^(0+128),w
  6075  0ED0  00CF               	movwf	(dtoa@s+1)^(0+128)
  6076                           
  6077                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  6078  0ED1  084E               	movf	dtoa@s^(0+128),w
  6079  0ED2  044F               	iorwf	(dtoa@s+1)^(0+128),w
  6080  0ED3  1903               	btfsc	3,2
  6081  0ED4  2EF3               	goto	l550
  6082                           
  6083                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  6084  0ED5  09D0               	comf	dtoa@n^(0+128),f
  6085  0ED6  09D1               	comf	(dtoa@n+1)^(0+128),f
  6086  0ED7  09D2               	comf	(dtoa@n+2)^(0+128),f
  6087  0ED8  09D3               	comf	(dtoa@n+3)^(0+128),f
  6088  0ED9  09D4               	comf	(dtoa@n+4)^(0+128),f
  6089  0EDA  09D5               	comf	(dtoa@n+5)^(0+128),f
  6090  0EDB  09D6               	comf	(dtoa@n+6)^(0+128),f
  6091  0EDC  09D7               	comf	(dtoa@n+7)^(0+128),f
  6092  0EDD  0AD0               	incf	dtoa@n^(0+128),f
  6093  0EDE  1D03               	skipz
  6094  0EDF  2EF3               	goto	l550
  6095  0EE0  0AD1               	incf	(dtoa@n+1)^(0+128),f
  6096  0EE1  1D03               	skipz
  6097  0EE2  2EF3               	goto	l550
  6098  0EE3  0AD2               	incf	(dtoa@n+2)^(0+128),f
  6099  0EE4  1D03               	skipz
  6100  0EE5  2EF3               	goto	l550
  6101  0EE6  0AD3               	incf	(dtoa@n+3)^(0+128),f
  6102  0EE7  1D03               	skipz
  6103  0EE8  2EF3               	goto	l550
  6104  0EE9  0AD4               	incf	(dtoa@n+4)^(0+128),f
  6105  0EEA  1D03               	skipz
  6106  0EEB  2EF3               	goto	l550
  6107  0EEC  0AD5               	incf	(dtoa@n+5)^(0+128),f
  6108  0EED  1D03               	skipz
  6109  0EEE  2EF3               	goto	l550
  6110  0EEF  0AD6               	incf	(dtoa@n+6)^(0+128),f
  6111  0EF0  1D03               	skipz
  6112  0EF1  2EF3               	goto	l550
  6113  0EF2  0AD7               	incf	(dtoa@n+7)^(0+128),f
  6114  0EF3                     l550:	
  6115                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 284:     }
  6116                           
  6117                           
  6118                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  6119  0EF3  0022               	movlb	2	; select bank2
  6120  0EF4  1BB5               	btfsc	(_prec+1)^(0+256),7
  6121  0EF5  2EFB               	goto	l551
  6122                           
  6123                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  6124  0EF6  30FD               	movlw	253
  6125  0EF7  0020               	movlb	0	; select bank0
  6126  0EF8  05E0               	andwf	_flags,f
  6127  0EF9  30FF               	movlw	255
  6128  0EFA  05E1               	andwf	_flags+1,f
  6129  0EFB                     l551:	
  6130                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 289:     }
  6131                           
  6132                           
  6133                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  6134  0EFB  0022               	movlb	2	; select bank2
  6135  0EFC  0835               	movf	(_prec+1)^(0+256),w
  6136  0EFD  3A80               	xorlw	128
  6137  0EFE  0021               	movlb	1	; select bank1
  6138  0EFF  00C4               	movwf	??_dtoa^(0+128)
  6139  0F00  3080               	movlw	128
  6140  0F01  0244               	subwf	??_dtoa^(0+128),w
  6141  0F02  1D03               	skipz
  6142  0F03  2F07               	goto	u3025
  6143  0F04  3001               	movlw	1
  6144  0F05  0022               	movlb	2	; select bank2
  6145  0F06  0234               	subwf	_prec^(0+256),w
  6146  0F07                     u3025:	
  6147  0F07  1803               	skipnc
  6148  0F08  2F0F               	goto	l2730
  6149  0F09  3001               	movlw	1
  6150  0F0A  0021               	movlb	1	; select bank1
  6151  0F0B  00C9               	movwf	dtoa@p^(0+128)
  6152  0F0C  3000               	movlw	0
  6153  0F0D  00CA               	movwf	(dtoa@p^(0+128)+1)
  6154  0F0E  2F17               	goto	l555
  6155  0F0F                     l2730:	
  6156  0F0F  0022               	movlb	2	; select bank2
  6157  0F10  0835               	movf	(_prec+1)^(0+256),w
  6158  0F11  0021               	movlb	1	; select bank1
  6159  0F12  00CA               	movwf	(dtoa@p+1)^(0+128)
  6160  0F13  0022               	movlb	2	; select bank2
  6161  0F14  0834               	movf	_prec^(0+256),w
  6162  0F15  0021               	movlb	1	; select bank1
  6163  0F16  00C9               	movwf	dtoa@p^(0+128)
  6164  0F17                     l555:	
  6165                           
  6166                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  6167  0F17  0022               	movlb	2	; select bank2
  6168  0F18  0833               	movf	(_width+1)^(0+256),w
  6169  0F19  0021               	movlb	1	; select bank1
  6170  0F1A  00CD               	movwf	(dtoa@w+1)^(0+128)
  6171  0F1B  0022               	movlb	2	; select bank2
  6172  0F1C  0832               	movf	_width^(0+256),w
  6173  0F1D  0021               	movlb	1	; select bank1
  6174  0F1E  00CC               	movwf	dtoa@w^(0+128)
  6175                           
  6176                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  6177  0F1F  084E               	movf	dtoa@s^(0+128),w
  6178  0F20  044F               	iorwf	(dtoa@s+1)^(0+128),w
  6179  0F21  1D03               	btfss	3,2
  6180  0F22  2F26               	goto	l2736
  6181  0F23  0020               	movlb	0	; select bank0
  6182  0F24  1D60               	btfss	_flags,2
  6183  0F25  2F2B               	goto	l556
  6184  0F26                     l2736:	
  6185                           
  6186                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  6187  0F26  30FF               	movlw	255
  6188  0F27  0021               	movlb	1	; select bank1
  6189  0F28  07CC               	addwf	dtoa@w^(0+128),f
  6190  0F29  30FF               	movlw	255
  6191  0F2A  3DCD               	addwfc	(dtoa@w+1)^(0+128),f
  6192  0F2B                     l556:	
  6193                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 294:     }
  6194                           
  6195                           
  6196                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  6197  0F2B  301F               	movlw	31
  6198  0F2C  0021               	movlb	1	; select bank1
  6199  0F2D  00D8               	movwf	dtoa@i^(0+128)
  6200  0F2E  3000               	movlw	0
  6201  0F2F  00D9               	movwf	(dtoa@i^(0+128)+1)
  6202                           
  6203                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  6204  0F30  0024               	movlb	4	; select bank4
  6205  0F31  01BF               	clrf	(_dbuf^(0+512)+31)
  6206                           
  6207                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6208  0F32  2FC1               	goto	l559
  6209  0F33                     l2750:	
  6210  0F33  0021               	movlb	1	; select bank1
  6211  0F34  0850               	movf	dtoa@n^(0+128),w
  6212  0F35  0451               	iorwf	(dtoa@n+1)^(0+128),w
  6213  0F36  0452               	iorwf	(dtoa@n+2)^(0+128),w
  6214  0F37  0453               	iorwf	(dtoa@n+3)^(0+128),w
  6215  0F38  0454               	iorwf	(dtoa@n+4)^(0+128),w
  6216  0F39  0455               	iorwf	(dtoa@n+5)^(0+128),w
  6217  0F3A  0456               	iorwf	(dtoa@n+6)^(0+128),w
  6218  0F3B  0457               	iorwf	(dtoa@n+7)^(0+128),w
  6219  0F3C  1D03               	skipz
  6220  0F3D  2F58               	goto	l2740
  6221  0F3E  084A               	movf	(dtoa@p+1)^(0+128),w
  6222  0F3F  3A80               	xorlw	128
  6223  0F40  00C4               	movwf	??_dtoa^(0+128)
  6224  0F41  3080               	movlw	128
  6225  0F42  0244               	subwf	??_dtoa^(0+128),w
  6226  0F43  1D03               	skipz
  6227  0F44  2F47               	goto	u3075
  6228  0F45  3001               	movlw	1
  6229  0F46  0249               	subwf	dtoa@p^(0+128),w
  6230  0F47                     u3075:	
  6231  0F47  1803               	skipnc
  6232  0F48  2F58               	goto	l2740
  6233  0F49  0021               	movlb	1	; select bank1
  6234  0F4A  084D               	movf	(dtoa@w+1)^(0+128),w
  6235  0F4B  3A80               	xorlw	128
  6236  0F4C  00C4               	movwf	??_dtoa^(0+128)
  6237  0F4D  3080               	movlw	128
  6238  0F4E  0244               	subwf	??_dtoa^(0+128),w
  6239  0F4F  1D03               	skipz
  6240  0F50  2F53               	goto	u3085
  6241  0F51  3001               	movlw	1
  6242  0F52  024C               	subwf	dtoa@w^(0+128),w
  6243  0F53                     u3085:	
  6244  0F53  1C03               	skipc
  6245  0F54  2FCD               	goto	l2758
  6246  0F55  0020               	movlb	0	; select bank0
  6247  0F56  1CE0               	btfss	_flags,1
  6248  0F57  2FCD               	goto	l2758
  6249  0F58                     l2740:	
  6250                           
  6251                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  6252  0F58  30FF               	movlw	255
  6253  0F59  0021               	movlb	1	; select bank1
  6254  0F5A  07D8               	addwf	dtoa@i^(0+128),f
  6255  0F5B  30FF               	movlw	255
  6256  0F5C  3DD9               	addwfc	(dtoa@i+1)^(0+128),f
  6257                           
  6258                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  6259  0F5D  300A               	movlw	10
  6260  0F5E  00A0               	movwf	___aomod@divisor^(0+128)
  6261  0F5F  01A1               	clrf	(___aomod@divisor+1)^(0+128)
  6262  0F60  01A2               	clrf	(___aomod@divisor+2)^(0+128)
  6263  0F61  01A3               	clrf	(___aomod@divisor+3)^(0+128)
  6264  0F62  01A4               	clrf	(___aomod@divisor+4)^(0+128)
  6265  0F63  01A5               	clrf	(___aomod@divisor+5)^(0+128)
  6266  0F64  01A6               	clrf	(___aomod@divisor+6)^(0+128)
  6267  0F65  01A7               	clrf	(___aomod@divisor+7)^(0+128)
  6268  0F66  0850               	movf	dtoa@n^(0+128),w
  6269  0F67  00A8               	movwf	___aomod@dividend^(0+128)
  6270  0F68  0851               	movf	(dtoa@n+1)^(0+128),w
  6271  0F69  00A9               	movwf	(___aomod@dividend+1)^(0+128)
  6272  0F6A  0852               	movf	(dtoa@n+2)^(0+128),w
  6273  0F6B  00AA               	movwf	(___aomod@dividend+2)^(0+128)
  6274  0F6C  0853               	movf	(dtoa@n+3)^(0+128),w
  6275  0F6D  00AB               	movwf	(___aomod@dividend+3)^(0+128)
  6276  0F6E  0854               	movf	(dtoa@n+4)^(0+128),w
  6277  0F6F  00AC               	movwf	(___aomod@dividend+4)^(0+128)
  6278  0F70  0855               	movf	(dtoa@n+5)^(0+128),w
  6279  0F71  00AD               	movwf	(___aomod@dividend+5)^(0+128)
  6280  0F72  0856               	movf	(dtoa@n+6)^(0+128),w
  6281  0F73  00AE               	movwf	(___aomod@dividend+6)^(0+128)
  6282  0F74  0857               	movf	(dtoa@n+7)^(0+128),w
  6283  0F75  00AF               	movwf	(___aomod@dividend+7)^(0+128)
  6284  0F76  318A  22EE  318E   	fcall	___aomod
  6285  0F79  0021               	movlb	1	; select bank1
  6286  0F7A  0821               	movf	(?___aomod+1)^(0+128),w
  6287  0F7B  00B4               	movwf	(abs@a+1)^(0+128)
  6288  0F7C  0820               	movf	?___aomod^(0+128),w
  6289  0F7D  00B3               	movwf	abs@a^(0+128)
  6290  0F7E  3195  256A  318E   	fcall	_abs
  6291  0F81  0021               	movlb	1	; select bank1
  6292  0F82  0833               	movf	?_abs^(0+128),w
  6293  0F83  3E30               	addlw	48
  6294  0F84  00C4               	movwf	??_dtoa^(0+128)
  6295  0F85  0858               	movf	dtoa@i^(0+128),w
  6296  0F86  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6297  0F87  0086               	movwf	6
  6298  0F88  3002               	movlw	2	; select bank4/5
  6299  0F89  0087               	movwf	7
  6300  0F8A  0844               	movf	??_dtoa^(0+128),w
  6301  0F8B  0081               	movwf	1
  6302                           
  6303                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  6304  0F8C  30FF               	movlw	255
  6305  0F8D  07C9               	addwf	dtoa@p^(0+128),f
  6306  0F8E  30FF               	movlw	255
  6307  0F8F  3DCA               	addwfc	(dtoa@p+1)^(0+128),f
  6308                           
  6309                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  6310  0F90  30FF               	movlw	255
  6311  0F91  07CC               	addwf	dtoa@w^(0+128),f
  6312  0F92  30FF               	movlw	255
  6313  0F93  3DCD               	addwfc	(dtoa@w+1)^(0+128),f
  6314                           
  6315                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  6316  0F94  300A               	movlw	10
  6317  0F95  00A0               	movwf	___aodiv@divisor^(0+128)
  6318  0F96  01A1               	clrf	(___aodiv@divisor+1)^(0+128)
  6319  0F97  01A2               	clrf	(___aodiv@divisor+2)^(0+128)
  6320  0F98  01A3               	clrf	(___aodiv@divisor+3)^(0+128)
  6321  0F99  01A4               	clrf	(___aodiv@divisor+4)^(0+128)
  6322  0F9A  01A5               	clrf	(___aodiv@divisor+5)^(0+128)
  6323  0F9B  01A6               	clrf	(___aodiv@divisor+6)^(0+128)
  6324  0F9C  01A7               	clrf	(___aodiv@divisor+7)^(0+128)
  6325  0F9D  0850               	movf	dtoa@n^(0+128),w
  6326  0F9E  00A8               	movwf	___aodiv@dividend^(0+128)
  6327  0F9F  0851               	movf	(dtoa@n+1)^(0+128),w
  6328  0FA0  00A9               	movwf	(___aodiv@dividend+1)^(0+128)
  6329  0FA1  0852               	movf	(dtoa@n+2)^(0+128),w
  6330  0FA2  00AA               	movwf	(___aodiv@dividend+2)^(0+128)
  6331  0FA3  0853               	movf	(dtoa@n+3)^(0+128),w
  6332  0FA4  00AB               	movwf	(___aodiv@dividend+3)^(0+128)
  6333  0FA5  0854               	movf	(dtoa@n+4)^(0+128),w
  6334  0FA6  00AC               	movwf	(___aodiv@dividend+4)^(0+128)
  6335  0FA7  0855               	movf	(dtoa@n+5)^(0+128),w
  6336  0FA8  00AD               	movwf	(___aodiv@dividend+5)^(0+128)
  6337  0FA9  0856               	movf	(dtoa@n+6)^(0+128),w
  6338  0FAA  00AE               	movwf	(___aodiv@dividend+6)^(0+128)
  6339  0FAB  0857               	movf	(dtoa@n+7)^(0+128),w
  6340  0FAC  00AF               	movwf	(___aodiv@dividend+7)^(0+128)
  6341  0FAD  318C  24AC  318E   	fcall	___aodiv
  6342  0FB0  0021               	movlb	1	; select bank1
  6343  0FB1  0820               	movf	?___aodiv^(0+128),w
  6344  0FB2  00D0               	movwf	dtoa@n^(0+128)
  6345  0FB3  0821               	movf	(?___aodiv+1)^(0+128),w
  6346  0FB4  00D1               	movwf	(dtoa@n+1)^(0+128)
  6347  0FB5  0822               	movf	(?___aodiv+2)^(0+128),w
  6348  0FB6  00D2               	movwf	(dtoa@n+2)^(0+128)
  6349  0FB7  0823               	movf	(?___aodiv+3)^(0+128),w
  6350  0FB8  00D3               	movwf	(dtoa@n+3)^(0+128)
  6351  0FB9  0824               	movf	(?___aodiv+4)^(0+128),w
  6352  0FBA  00D4               	movwf	(dtoa@n+4)^(0+128)
  6353  0FBB  0825               	movf	(?___aodiv+5)^(0+128),w
  6354  0FBC  00D5               	movwf	(dtoa@n+5)^(0+128)
  6355  0FBD  0826               	movf	(?___aodiv+6)^(0+128),w
  6356  0FBE  00D6               	movwf	(dtoa@n+6)^(0+128)
  6357  0FBF  0827               	movf	(?___aodiv+7)^(0+128),w
  6358  0FC0  00D7               	movwf	(dtoa@n+7)^(0+128)
  6359  0FC1                     l559:	
  6360                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 305:     }
  6361                           
  6362                           
  6363                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6364  0FC1  0021               	movlb	1	; select bank1
  6365  0FC2  0859               	movf	(dtoa@i+1)^(0+128),w
  6366  0FC3  3A80               	xorlw	128
  6367  0FC4  00C4               	movwf	??_dtoa^(0+128)
  6368  0FC5  3080               	movlw	128
  6369  0FC6  0244               	subwf	??_dtoa^(0+128),w
  6370  0FC7  1D03               	skipz
  6371  0FC8  2FCB               	goto	u3055
  6372  0FC9  3001               	movlw	1
  6373  0FCA  0258               	subwf	dtoa@i^(0+128),w
  6374  0FCB                     u3055:	
  6375  0FCB  1803               	btfsc	3,0
  6376  0FCC  2F33               	goto	l2750
  6377  0FCD                     l2758:	
  6378                           
  6379                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  6380  0FCD  0021               	movlb	1	; select bank1
  6381  0FCE  084E               	movf	dtoa@s^(0+128),w
  6382  0FCF  044F               	iorwf	(dtoa@s+1)^(0+128),w
  6383  0FD0  1D03               	btfss	3,2
  6384  0FD1  2FD5               	goto	l2762
  6385  0FD2  0020               	movlb	0	; select bank0
  6386  0FD3  1D60               	btfss	_flags,2
  6387  0FD4  2FED               	goto	l2772
  6388  0FD5                     l2762:	
  6389                           
  6390                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  6391  0FD5  30FF               	movlw	255
  6392  0FD6  0021               	movlb	1	; select bank1
  6393  0FD7  07D8               	addwf	dtoa@i^(0+128),f
  6394  0FD8  30FF               	movlw	255
  6395  0FD9  3DD9               	addwfc	(dtoa@i+1)^(0+128),f
  6396                           
  6397                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  6398  0FDA  084E               	movf	dtoa@s^(0+128),w
  6399  0FDB  044F               	iorwf	(dtoa@s+1)^(0+128),w
  6400  0FDC  1D03               	btfss	3,2
  6401  0FDD  2FE0               	goto	l2768
  6402  0FDE  302B               	movlw	43
  6403  0FDF  2FE1               	goto	L2
  6404  0FE0                     l2768:	
  6405  0FE0  302D               	movlw	45
  6406  0FE1                     L2:	
  6407  0FE1  00C7               	movwf	_dtoa$791^(0+128)
  6408  0FE2  3000               	movlw	0
  6409  0FE3  00C8               	movwf	(_dtoa$791^(0+128)+1)
  6410  0FE4  0847               	movf	_dtoa$791^(0+128),w
  6411  0FE5  00C4               	movwf	??_dtoa^(0+128)
  6412  0FE6  0858               	movf	dtoa@i^(0+128),w
  6413  0FE7  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6414  0FE8  0086               	movwf	6
  6415  0FE9  3002               	movlw	2	; select bank4/5
  6416  0FEA  0087               	movwf	7
  6417  0FEB  0844               	movf	??_dtoa^(0+128),w
  6418  0FEC  0081               	movwf	1
  6419  0FED                     l2772:	
  6420                           
  6421                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  6422  0FED  0021               	movlb	1	; select bank1
  6423  0FEE  0858               	movf	dtoa@i^(0+128),w
  6424  0FEF  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6425  0FF0  00C4               	movwf	??_dtoa^(0+128)
  6426  0FF1  0844               	movf	??_dtoa^(0+128),w
  6427  0FF2  00B3               	movwf	pad@buf^(0+128)
  6428  0FF3  084D               	movf	(dtoa@w+1)^(0+128),w
  6429  0FF4  00B5               	movwf	(pad@p+1)^(0+128)
  6430  0FF5  084C               	movf	dtoa@w^(0+128),w
  6431  0FF6  00B4               	movwf	pad@p^(0+128)
  6432  0FF7  084B               	movf	dtoa@fp^(0+128),w
  6433  0FF8  3188  2056         	fcall	_pad
  6434  0FFA  0021               	movlb	1	; select bank1
  6435  0FFB  0834               	movf	(?_pad+1)^(0+128),w
  6436  0FFC  00BD               	movwf	(?_dtoa+1)^(0+128)
  6437  0FFD  0833               	movf	?_pad^(0+128),w
  6438  0FFE  00BC               	movwf	?_dtoa^(0+128)
  6439  0FFF  0008               	return
  6440  1000                     __end_of_dtoa:	
  6441                           
  6442                           	psect	text10
  6443  0856                     __ptext10:	
  6444 ;; *************** function _pad *****************
  6445 ;; Defined at:
  6446 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6447 ;; Parameters:    Size  Location     Type
  6448 ;;  fp              1    wreg     PTR struct _IO_FILE
  6449 ;;		 -> NULL(0), 
  6450 ;;  buf             1   19[BANK1 ] PTR unsigned char 
  6451 ;;		 -> dbuf(32), 
  6452 ;;  p               2   20[BANK1 ] int 
  6453 ;; Auto vars:     Size  Location     Type
  6454 ;;  fp              1   27[BANK1 ] PTR struct _IO_FILE
  6455 ;;		 -> NULL(0), 
  6456 ;;  w               2   25[BANK1 ] int 
  6457 ;;  i               2   23[BANK1 ] int 
  6458 ;; Return value:  Size  Location     Type
  6459 ;;                  2   19[BANK1 ] int 
  6460 ;; Registers used:
  6461 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6462 ;; Tracked objects:
  6463 ;;		On entry : 0/0
  6464 ;;		On exit  : 0/0
  6465 ;;		Unchanged: 0/0
  6466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6467 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6468 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  6469 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6470 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  6471 ;;Total ram usage:        9 bytes
  6472 ;; Hardware stack levels used:    1
  6473 ;; Hardware stack levels required when called:   10
  6474 ;; This function calls:
  6475 ;;		_fputc
  6476 ;;		_fputs
  6477 ;;		_strlen
  6478 ;; This function is called by:
  6479 ;;		_dtoa
  6480 ;; This function uses a non-reentrant model
  6481 ;;
  6482                           
  6483                           
  6484                           ;psect for function _pad
  6485  0856                     _pad:	
  6486                           
  6487                           ;incstack = 0
  6488                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6489                           ;pad@fp stored from wreg
  6490  0856  0021               	movlb	1	; select bank1
  6491  0857  00BB               	movwf	pad@fp^(0+128)
  6492                           
  6493                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  6494  0858  0020               	movlb	0	; select bank0
  6495  0859  1C60               	btfss	_flags,0
  6496  085A  2867               	goto	l2614
  6497                           
  6498                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  6499  085B  0021               	movlb	1	; select bank1
  6500  085C  0833               	movf	pad@buf^(0+128),w
  6501  085D  00AA               	movwf	fputs@s^(0+128)
  6502  085E  3002               	movlw	2
  6503  085F  00AB               	movwf	(fputs@s+1)^(0+128)
  6504  0860  083B               	movf	pad@fp^(0+128),w
  6505  0861  00B6               	movwf	??_pad^(0+128)
  6506  0862  0836               	movf	??_pad^(0+128),w
  6507  0863  00AC               	movwf	fputs@fp^(0+128)
  6508  0864  3196  265C  3188   	fcall	_fputs
  6509  0867                     l2614:	
  6510                           
  6511                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  6512  0867  0021               	movlb	1	; select bank1
  6513  0868  1BB5               	btfsc	(pad@p+1)^(0+128),7
  6514  0869  286F               	goto	l2618
  6515  086A  0835               	movf	(pad@p+1)^(0+128),w
  6516  086B  00BA               	movwf	(pad@w+1)^(0+128)
  6517  086C  0834               	movf	pad@p^(0+128),w
  6518  086D  00B9               	movwf	pad@w^(0+128)
  6519  086E  2871               	goto	l542
  6520  086F                     l2618:	
  6521  086F  01B9               	clrf	pad@w^(0+128)
  6522  0870  01BA               	clrf	(pad@w+1)^(0+128)
  6523  0871                     l542:	
  6524                           
  6525                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  6526  0871  01B7               	clrf	pad@i^(0+128)
  6527  0872  01B8               	clrf	(pad@i+1)^(0+128)
  6528  0873                     l2624:	
  6529                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  6530                           
  6531                           
  6532                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  6533  0873  0838               	movf	(pad@i+1)^(0+128),w
  6534  0874  3A80               	xorlw	128
  6535  0875  00B6               	movwf	??_pad^(0+128)
  6536  0876  083A               	movf	(pad@w+1)^(0+128),w
  6537  0877  3A80               	xorlw	128
  6538  0878  0236               	subwf	??_pad^(0+128),w
  6539  0879  1D03               	skipz
  6540  087A  287D               	goto	u2705
  6541  087B  0839               	movf	pad@w^(0+128),w
  6542  087C  0237               	subwf	pad@i^(0+128),w
  6543  087D                     u2705:	
  6544  087D  1803               	btfsc	3,0
  6545  087E  2891               	goto	l545
  6546                           
  6547                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  6548  087F  3020               	movlw	32
  6549  0880  0021               	movlb	1	; select bank1
  6550  0881  00A2               	movwf	fputc@c^(0+128)
  6551  0882  3000               	movlw	0
  6552  0883  00A3               	movwf	(fputc@c^(0+128)+1)
  6553  0884  083B               	movf	pad@fp^(0+128),w
  6554  0885  00B6               	movwf	??_pad^(0+128)
  6555  0886  0836               	movf	??_pad^(0+128),w
  6556  0887  00A4               	movwf	fputc@fp^(0+128)
  6557  0888  3197  2729  3188   	fcall	_fputc
  6558                           
  6559                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  6560  088B  3001               	movlw	1
  6561  088C  0021               	movlb	1	; select bank1
  6562  088D  07B7               	addwf	pad@i^(0+128),f
  6563  088E  3000               	movlw	0
  6564  088F  3DB8               	addwfc	(pad@i+1)^(0+128),f
  6565  0890  2873               	goto	l2624
  6566  0891                     l545:	
  6567                           
  6568                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  6569  0891  0020               	movlb	0	; select bank0
  6570  0892  1860               	btfsc	_flags,0
  6571  0893  28A0               	goto	l2628
  6572                           
  6573                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  6574  0894  0021               	movlb	1	; select bank1
  6575  0895  0833               	movf	pad@buf^(0+128),w
  6576  0896  00AA               	movwf	fputs@s^(0+128)
  6577  0897  3002               	movlw	2
  6578  0898  00AB               	movwf	(fputs@s+1)^(0+128)
  6579  0899  083B               	movf	pad@fp^(0+128),w
  6580  089A  00B6               	movwf	??_pad^(0+128)
  6581  089B  0836               	movf	??_pad^(0+128),w
  6582  089C  00AC               	movwf	fputs@fp^(0+128)
  6583  089D  3196  265C  3188   	fcall	_fputs
  6584  08A0                     l2628:	
  6585                           
  6586                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  6587  08A0  0021               	movlb	1	; select bank1
  6588  08A1  0833               	movf	pad@buf^(0+128),w
  6589  08A2  3195  2583         	fcall	_strlen
  6590  08A4  0021               	movlb	1	; select bank1
  6591  08A5  0839               	movf	pad@w^(0+128),w
  6592  08A6  0720               	addwf	?_strlen^(0+128),w
  6593  08A7  00B3               	movwf	?_pad^(0+128)
  6594  08A8  083A               	movf	(pad@w+1)^(0+128),w
  6595  08A9  3D21               	addwfc	(?_strlen+1)^(0+128),w
  6596  08AA  00B4               	movwf	(?_pad+1)^(0+128)
  6597  08AB  0008               	return
  6598  08AC                     __end_of_pad:	
  6599                           
  6600                           	psect	text11
  6601  1583                     __ptext11:	
  6602 ;; *************** function _strlen *****************
  6603 ;; Defined at:
  6604 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  6605 ;; Parameters:    Size  Location     Type
  6606 ;;  s               1    wreg     PTR const unsigned char 
  6607 ;;		 -> dbuf(32), 
  6608 ;; Auto vars:     Size  Location     Type
  6609 ;;  s               1    4[BANK1 ] PTR const unsigned char 
  6610 ;;		 -> dbuf(32), 
  6611 ;;  a               1    3[BANK1 ] PTR const unsigned char 
  6612 ;;		 -> dbuf(32), 
  6613 ;; Return value:  Size  Location     Type
  6614 ;;                  2    0[BANK1 ] unsigned int 
  6615 ;; Registers used:
  6616 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6617 ;; Tracked objects:
  6618 ;;		On entry : 0/0
  6619 ;;		On exit  : 0/0
  6620 ;;		Unchanged: 0/0
  6621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6622 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6623 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6624 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6625 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  6626 ;;Total ram usage:        5 bytes
  6627 ;; Hardware stack levels used:    1
  6628 ;; Hardware stack levels required when called:    6
  6629 ;; This function calls:
  6630 ;;		Nothing
  6631 ;; This function is called by:
  6632 ;;		_pad
  6633 ;; This function uses a non-reentrant model
  6634 ;;
  6635                           
  6636                           
  6637                           ;psect for function _strlen
  6638  1583                     _strlen:	
  6639                           
  6640                           ;incstack = 0
  6641                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  6642                           ;strlen@s stored from wreg
  6643  1583  0021               	movlb	1	; select bank1
  6644  1584  00A4               	movwf	strlen@s^(0+128)
  6645  1585  0824               	movf	strlen@s^(0+128),w
  6646  1586  00A2               	movwf	??_strlen^(0+128)
  6647  1587  0822               	movf	??_strlen^(0+128),w
  6648  1588  00A3               	movwf	strlen@a^(0+128)
  6649  1589                     l2604:	
  6650  1589  0824               	movf	strlen@s^(0+128),w
  6651  158A  0086               	movwf	6
  6652  158B  3002               	movlw	2	; select bank4/5
  6653  158C  0087               	movwf	7
  6654  158D  0801               	movf	1,w
  6655  158E  1903               	btfsc	3,2
  6656  158F  2D95               	goto	l2606
  6657  1590  3001               	movlw	1
  6658  1591  00A2               	movwf	??_strlen^(0+128)
  6659  1592  0822               	movf	??_strlen^(0+128),w
  6660  1593  07A4               	addwf	strlen@s^(0+128),f
  6661  1594  2D89               	goto	l2604
  6662  1595                     l2606:	
  6663  1595  0823               	movf	strlen@a^(0+128),w
  6664  1596  0224               	subwf	strlen@s^(0+128),w
  6665  1597  00A0               	movwf	?_strlen^(0+128)
  6666  1598  01A1               	clrf	(?_strlen+1)^(0+128)
  6667  1599  1BA0               	btfsc	?_strlen^(0+128),7
  6668  159A  03A1               	decf	(?_strlen+1)^(0+128),f
  6669  159B  0008               	return
  6670  159C                     __end_of_strlen:	
  6671                           
  6672                           	psect	text12
  6673  165C                     __ptext12:	
  6674 ;; *************** function _fputs *****************
  6675 ;; Defined at:
  6676 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  6677 ;; Parameters:    Size  Location     Type
  6678 ;;  s               2   10[BANK1 ] PTR const unsigned char 
  6679 ;;		 -> dbuf(32), STR_5(3), hrDisp(13), distanceDisp(11), 
  6680 ;;		 -> speedDisp(8), 
  6681 ;;  fp              1   12[BANK1 ] PTR struct _IO_FILE
  6682 ;;		 -> NULL(0), 
  6683 ;; Auto vars:     Size  Location     Type
  6684 ;;  i               2   17[BANK1 ] int 
  6685 ;;  c               1   16[BANK1 ] unsigned char 
  6686 ;; Return value:  Size  Location     Type
  6687 ;;                  2   10[BANK1 ] int 
  6688 ;; Registers used:
  6689 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6690 ;; Tracked objects:
  6691 ;;		On entry : 0/0
  6692 ;;		On exit  : 0/0
  6693 ;;		Unchanged: 0/0
  6694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6695 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6696 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6697 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6698 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  6699 ;;Total ram usage:        9 bytes
  6700 ;; Hardware stack levels used:    1
  6701 ;; Hardware stack levels required when called:    9
  6702 ;; This function calls:
  6703 ;;		_fputc
  6704 ;; This function is called by:
  6705 ;;		_pad
  6706 ;;		_puts
  6707 ;; This function uses a non-reentrant model
  6708 ;;
  6709                           
  6710                           
  6711                           ;psect for function _fputs
  6712  165C                     _fputs:	
  6713                           
  6714                           ;incstack = 0
  6715                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6716  165C  0021               	movlb	1	; select bank1
  6717  165D  01B1               	clrf	fputs@i^(0+128)
  6718  165E  01B2               	clrf	(fputs@i+1)^(0+128)
  6719  165F                     l2594:	
  6720  165F  082A               	movf	fputs@s^(0+128),w
  6721  1660  0731               	addwf	fputs@i^(0+128),w
  6722  1661  0084               	movwf	4
  6723  1662  082B               	movf	(fputs@s+1)^(0+128),w
  6724  1663  3D32               	addwfc	(fputs@i+1)^(0+128),w
  6725  1664  0085               	movwf	5
  6726  1665  0800               	movf	0,w	;code access
  6727  1666  00AD               	movwf	??_fputs^(0+128)
  6728  1667  082D               	movf	??_fputs^(0+128),w
  6729  1668  00B0               	movwf	fputs@c^(0+128)
  6730  1669  0830               	movf	fputs@c^(0+128),w
  6731  166A  1903               	btfsc	3,2
  6732  166B  2E80               	goto	l2596
  6733  166C  0830               	movf	fputs@c^(0+128),w
  6734  166D  00AD               	movwf	??_fputs^(0+128)
  6735  166E  01AE               	clrf	(??_fputs^(0+128)+1)
  6736  166F  082D               	movf	??_fputs^(0+128),w
  6737  1670  00A2               	movwf	fputc@c^(0+128)
  6738  1671  082E               	movf	(??_fputs+1)^(0+128),w
  6739  1672  00A3               	movwf	(fputc@c+1)^(0+128)
  6740  1673  082C               	movf	fputs@fp^(0+128),w
  6741  1674  00AF               	movwf	(??_fputs+2)^(0+128)
  6742  1675  082F               	movf	(??_fputs+2)^(0+128),w
  6743  1676  00A4               	movwf	fputc@fp^(0+128)
  6744  1677  3197  2729  3196   	fcall	_fputc
  6745  167A  3001               	movlw	1
  6746  167B  0021               	movlb	1	; select bank1
  6747  167C  07B1               	addwf	fputs@i^(0+128),f
  6748  167D  3000               	movlw	0
  6749  167E  3DB2               	addwfc	(fputs@i+1)^(0+128),f
  6750  167F  2E5F               	goto	l2594
  6751  1680                     l2596:	
  6752  1680  0832               	movf	(fputs@i+1)^(0+128),w
  6753  1681  00AB               	movwf	(?_fputs+1)^(0+128)
  6754  1682  0831               	movf	fputs@i^(0+128),w
  6755  1683  00AA               	movwf	?_fputs^(0+128)
  6756  1684  0008               	return
  6757  1685                     __end_of_fputs:	
  6758                           
  6759                           	psect	text13
  6760  1729                     __ptext13:	
  6761 ;; *************** function _fputc *****************
  6762 ;; Defined at:
  6763 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  6764 ;; Parameters:    Size  Location     Type
  6765 ;;  c               2    2[BANK1 ] int 
  6766 ;;  fp              1    4[BANK1 ] PTR struct _IO_FILE
  6767 ;;		 -> NULL(0), 
  6768 ;; Auto vars:     Size  Location     Type
  6769 ;;		None
  6770 ;; Return value:  Size  Location     Type
  6771 ;;                  2    2[BANK1 ] int 
  6772 ;; Registers used:
  6773 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6774 ;; Tracked objects:
  6775 ;;		On entry : 0/0
  6776 ;;		On exit  : 0/0
  6777 ;;		Unchanged: 0/0
  6778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6779 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6781 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  6782 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  6783 ;;Total ram usage:        8 bytes
  6784 ;; Hardware stack levels used:    1
  6785 ;; Hardware stack levels required when called:    8
  6786 ;; This function calls:
  6787 ;;		_putch
  6788 ;; This function is called by:
  6789 ;;		_pad
  6790 ;;		_vfpfcnvrt
  6791 ;;		_fputs
  6792 ;;		_puts
  6793 ;; This function uses a non-reentrant model
  6794 ;;
  6795                           
  6796                           
  6797                           ;psect for function _fputc
  6798  1729                     _fputc:	
  6799                           
  6800                           ;incstack = 0
  6801                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6802  1729  0021               	movlb	1	; select bank1
  6803  172A  0824               	movf	fputc@fp^(0+128),w
  6804  172B  1D03               	btfss	3,2
  6805  172C  0824               	movf	fputc@fp^(0+128),w
  6806  172D  1D03               	btfss	3,2
  6807  172E  2F34               	goto	l2578
  6808  172F  0822               	movf	fputc@c^(0+128),w
  6809  1730  3194  246E  3197   	fcall	_putch
  6810  1733  2F60               	goto	l2584
  6811  1734                     l2578:	
  6812  1734  0824               	movf	fputc@fp^(0+128),w
  6813  1735  3E03               	addlw	3
  6814  1736  0086               	movwf	6
  6815  1737  0187               	clrf	7
  6816  1738  0016               	moviw fsr1++
  6817  1739  0401               	iorwf	1,w
  6818  173A  1903               	btfsc	3,2
  6819  173B  2F57               	goto	l2582
  6820  173C  0824               	movf	fputc@fp^(0+128),w
  6821  173D  3E03               	addlw	3
  6822  173E  0086               	movwf	6
  6823  173F  0187               	clrf	7
  6824  1740  3F40               	moviw [0]fsr1
  6825  1741  00A5               	movwf	??_fputc^(0+128)
  6826  1742  3F41               	moviw [1]fsr1
  6827  1743  00A6               	movwf	(??_fputc^(0+128)+1)
  6828  1744  0A24               	incf	fputc@fp^(0+128),w
  6829  1745  0086               	movwf	6
  6830  1746  0187               	clrf	7
  6831  1747  3F40               	moviw [0]fsr1
  6832  1748  00A7               	movwf	(??_fputc+2)^(0+128)
  6833  1749  3F41               	moviw [1]fsr1
  6834  174A  00A8               	movwf	((??_fputc+2)^(0+128)+1)
  6835  174B  0828               	movf	(??_fputc+3)^(0+128),w
  6836  174C  3A80               	xorlw	128
  6837  174D  00A9               	movwf	(??_fputc+4)^(0+128)
  6838  174E  0826               	movf	(??_fputc+1)^(0+128),w
  6839  174F  3A80               	xorlw	128
  6840  1750  0229               	subwf	(??_fputc+4)^(0+128),w
  6841  1751  1D03               	skipz
  6842  1752  2F55               	goto	u2655
  6843  1753  0825               	movf	??_fputc^(0+128),w
  6844  1754  0227               	subwf	(??_fputc+2)^(0+128),w
  6845  1755                     u2655:	
  6846  1755  1803               	skipnc
  6847  1756  2F60               	goto	l2584
  6848  1757                     l2582:	
  6849  1757  0021               	movlb	1	; select bank1
  6850  1758  0A24               	incf	fputc@fp^(0+128),w
  6851  1759  0086               	movwf	6
  6852  175A  0187               	clrf	7
  6853  175B  3001               	movlw	1
  6854  175C  0781               	addwf	1,f
  6855  175D  3141               	addfsr 1,1
  6856  175E  1803               	skipnc
  6857  175F  0A81               	incf	1,f
  6858  1760                     l2584:	
  6859  1760  0021               	movlb	1	; select bank1
  6860  1761  0822               	movf	fputc@c^(0+128),w
  6861  1762  00A5               	movwf	??_fputc^(0+128)
  6862  1763  01A6               	clrf	(??_fputc^(0+128)+1)
  6863  1764  0825               	movf	??_fputc^(0+128),w
  6864  1765  00A2               	movwf	?_fputc^(0+128)
  6865  1766  0826               	movf	(??_fputc+1)^(0+128),w
  6866  1767  00A3               	movwf	(?_fputc+1)^(0+128)
  6867  1768  0008               	return
  6868  1769                     __end_of_fputc:	
  6869                           
  6870                           	psect	text14
  6871  146E                     __ptext14:	
  6872 ;; *************** function _putch *****************
  6873 ;; Defined at:
  6874 ;;		line 151 in file "mcc_generated_files/eusart.c"
  6875 ;; Parameters:    Size  Location     Type
  6876 ;;  txData          1    wreg     unsigned char 
  6877 ;; Auto vars:     Size  Location     Type
  6878 ;;  txData          1    1[BANK1 ] unsigned char 
  6879 ;; Return value:  Size  Location     Type
  6880 ;;                  1    wreg      void 
  6881 ;; Registers used:
  6882 ;;		wreg, status,2, status,0, pclath, cstack
  6883 ;; Tracked objects:
  6884 ;;		On entry : 0/0
  6885 ;;		On exit  : 0/0
  6886 ;;		Unchanged: 0/0
  6887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6889 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6891 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6892 ;;Total ram usage:        1 bytes
  6893 ;; Hardware stack levels used:    1
  6894 ;; Hardware stack levels required when called:    7
  6895 ;; This function calls:
  6896 ;;		_EUSART_Write
  6897 ;; This function is called by:
  6898 ;;		_fputc
  6899 ;; This function uses a non-reentrant model
  6900 ;;
  6901                           
  6902                           
  6903                           ;psect for function _putch
  6904  146E                     _putch:	
  6905                           
  6906                           ;incstack = 0
  6907                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  6908                           ;putch@txData stored from wreg
  6909  146E  0021               	movlb	1	; select bank1
  6910  146F  00A1               	movwf	putch@txData^(0+128)
  6911                           
  6912                           ;mcc_generated_files/eusart.c: 151: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 152: {;mcc_generated_files/eusart.c: 153:     EUSART_Write(txData);
  6913  1470  0821               	movf	putch@txData^(0+128),w
  6914  1471  3194  24CB         	fcall	_EUSART_Write
  6915  1473  0008               	return
  6916  1474                     __end_of_putch:	
  6917                           
  6918                           	psect	text15
  6919  14CB                     __ptext15:	
  6920 ;; *************** function _EUSART_Write *****************
  6921 ;; Defined at:
  6922 ;;		line 137 in file "mcc_generated_files/eusart.c"
  6923 ;; Parameters:    Size  Location     Type
  6924 ;;  txData          1    wreg     unsigned char 
  6925 ;; Auto vars:     Size  Location     Type
  6926 ;;  txData          1    0[BANK1 ] unsigned char 
  6927 ;; Return value:  Size  Location     Type
  6928 ;;                  1    wreg      void 
  6929 ;; Registers used:
  6930 ;;		wreg
  6931 ;; Tracked objects:
  6932 ;;		On entry : 0/0
  6933 ;;		On exit  : 0/0
  6934 ;;		Unchanged: 0/0
  6935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6937 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6939 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6940 ;;Total ram usage:        1 bytes
  6941 ;; Hardware stack levels used:    1
  6942 ;; Hardware stack levels required when called:    6
  6943 ;; This function calls:
  6944 ;;		Nothing
  6945 ;; This function is called by:
  6946 ;;		_putch
  6947 ;;		_setCursor
  6948 ;;		_backlightBrightness
  6949 ;; This function uses a non-reentrant model
  6950 ;;
  6951                           
  6952                           
  6953                           ;psect for function _EUSART_Write
  6954  14CB                     _EUSART_Write:	
  6955                           
  6956                           ;incstack = 0
  6957                           ; Regs used in _EUSART_Write: [wreg]
  6958                           ;EUSART_Write@txData stored from wreg
  6959  14CB  0021               	movlb	1	; select bank1
  6960  14CC  00A0               	movwf	EUSART_Write@txData^(0+128)
  6961  14CD                     l69:	
  6962                           ;mcc_generated_files/eusart.c: 140:     {;mcc_generated_files/eusart.c: 141:     }
  6963                           
  6964                           
  6965                           ;mcc_generated_files/eusart.c: 139:     while(0 == PIR1bits.TXIF)
  6966  14CD  0020               	movlb	0	; select bank0
  6967  14CE  1E10               	btfss	16,4	;volatile
  6968  14CF  2CCD               	goto	l69
  6969                           
  6970                           ;mcc_generated_files/eusart.c: 143:     TX1REG = txData;
  6971  14D0  0021               	movlb	1	; select bank1
  6972  14D1  0820               	movf	EUSART_Write@txData^(0+128),w
  6973  14D2  0023               	movlb	3	; select bank3
  6974  14D3  009A               	movwf	26	;volatile
  6975  14D4  0008               	return
  6976  14D5                     __end_of_EUSART_Write:	
  6977                           
  6978                           	psect	text16
  6979  156A                     __ptext16:	
  6980 ;; *************** function _abs *****************
  6981 ;; Defined at:
  6982 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  6983 ;; Parameters:    Size  Location     Type
  6984 ;;  a               2   19[BANK1 ] int 
  6985 ;; Auto vars:     Size  Location     Type
  6986 ;;		None
  6987 ;; Return value:  Size  Location     Type
  6988 ;;                  2   19[BANK1 ] int 
  6989 ;; Registers used:
  6990 ;;		wreg, status,2, status,0
  6991 ;; Tracked objects:
  6992 ;;		On entry : 0/0
  6993 ;;		On exit  : 0/0
  6994 ;;		Unchanged: 0/0
  6995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6996 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6998 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6999 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  7000 ;;Total ram usage:        4 bytes
  7001 ;; Hardware stack levels used:    1
  7002 ;; Hardware stack levels required when called:    6
  7003 ;; This function calls:
  7004 ;;		Nothing
  7005 ;; This function is called by:
  7006 ;;		_dtoa
  7007 ;; This function uses a non-reentrant model
  7008 ;;
  7009                           
  7010                           
  7011                           ;psect for function _abs
  7012  156A                     _abs:	
  7013                           
  7014                           ;incstack = 0
  7015                           ; Regs used in _abs: [wreg+status,2+status,0]
  7016  156A  0021               	movlb	1	; select bank1
  7017  156B  0834               	movf	(abs@a+1)^(0+128),w
  7018  156C  3A80               	xorlw	128
  7019  156D  00B5               	movwf	??_abs^(0+128)
  7020  156E  3080               	movlw	128
  7021  156F  0235               	subwf	??_abs^(0+128),w
  7022  1570  1D03               	skipz
  7023  1571  2D74               	goto	u2725
  7024  1572  3001               	movlw	1
  7025  1573  0233               	subwf	abs@a^(0+128),w
  7026  1574                     u2725:	
  7027  1574  1803               	skipnc
  7028  1575  0008               	return
  7029  1576  0021               	movlb	1	; select bank1
  7030  1577  0933               	comf	abs@a^(0+128),w
  7031  1578  00B5               	movwf	??_abs^(0+128)
  7032  1579  0934               	comf	(abs@a+1)^(0+128),w
  7033  157A  00B6               	movwf	(??_abs^(0+128)+1)
  7034  157B  0AB5               	incf	??_abs^(0+128),f
  7035  157C  1903               	skipnz
  7036  157D  0AB6               	incf	(??_abs^(0+128)+1),f
  7037  157E  0835               	movf	??_abs^(0+128),w
  7038  157F  00B3               	movwf	?_abs^(0+128)
  7039  1580  0836               	movf	(??_abs+1)^(0+128),w
  7040  1581  00B4               	movwf	(?_abs+1)^(0+128)
  7041  1582  0008               	return
  7042  1583                     __end_of_abs:	
  7043                           
  7044                           	psect	text17
  7045  0AEE                     __ptext17:	
  7046 ;; *************** function ___aomod *****************
  7047 ;; Defined at:
  7048 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  7049 ;; Parameters:    Size  Location     Type
  7050 ;;  divisor         8    0[BANK1 ] long long 
  7051 ;;  dividend        8    8[BANK1 ] long long 
  7052 ;; Auto vars:     Size  Location     Type
  7053 ;;  sign            1   18[BANK1 ] unsigned char 
  7054 ;;  counter         1   17[BANK1 ] unsigned char 
  7055 ;; Return value:  Size  Location     Type
  7056 ;;                  8    0[BANK1 ] long long 
  7057 ;; Registers used:
  7058 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7059 ;; Tracked objects:
  7060 ;;		On entry : 0/0
  7061 ;;		On exit  : 0/0
  7062 ;;		Unchanged: 0/0
  7063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7064 ;;      Params:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  7065 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7066 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7067 ;;      Totals:         0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0
  7068 ;;Total ram usage:       19 bytes
  7069 ;; Hardware stack levels used:    1
  7070 ;; Hardware stack levels required when called:    6
  7071 ;; This function calls:
  7072 ;;		Nothing
  7073 ;; This function is called by:
  7074 ;;		_dtoa
  7075 ;; This function uses a non-reentrant model
  7076 ;;
  7077                           
  7078                           
  7079                           ;psect for function ___aomod
  7080  0AEE                     ___aomod:	
  7081                           
  7082                           ;incstack = 0
  7083                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  7084  0AEE  0021               	movlb	1	; select bank1
  7085  0AEF  01B2               	clrf	___aomod@sign^(0+128)
  7086  0AF0  30A8               	movlw	low ___aomod@dividend
  7087  0AF1  0086               	movwf	6
  7088  0AF2  3000               	movlw	high ___aomod@dividend
  7089  0AF3  0087               	movwf	7
  7090  0AF4  3F47               	moviw [7]fsr1
  7091  0AF5  00B0               	movwf	??___aomod^(0+128)
  7092  0AF6  1FB0               	btfss	??___aomod^(0+128),7
  7093  0AF7  2B1A               	goto	l2680
  7094  0AF8  0021               	movlb	1	; select bank1
  7095  0AF9  09A8               	comf	___aomod@dividend^(0+128),f
  7096  0AFA  09A9               	comf	(___aomod@dividend+1)^(0+128),f
  7097  0AFB  09AA               	comf	(___aomod@dividend+2)^(0+128),f
  7098  0AFC  09AB               	comf	(___aomod@dividend+3)^(0+128),f
  7099  0AFD  09AC               	comf	(___aomod@dividend+4)^(0+128),f
  7100  0AFE  09AD               	comf	(___aomod@dividend+5)^(0+128),f
  7101  0AFF  09AE               	comf	(___aomod@dividend+6)^(0+128),f
  7102  0B00  09AF               	comf	(___aomod@dividend+7)^(0+128),f
  7103  0B01  0AA8               	incf	___aomod@dividend^(0+128),f
  7104  0B02  1D03               	skipz
  7105  0B03  2B17               	goto	u285lld
  7106  0B04  0AA9               	incf	(___aomod@dividend+1)^(0+128),f
  7107  0B05  1D03               	skipz
  7108  0B06  2B17               	goto	u285lld
  7109  0B07  0AAA               	incf	(___aomod@dividend+2)^(0+128),f
  7110  0B08  1D03               	skipz
  7111  0B09  2B17               	goto	u285lld
  7112  0B0A  0AAB               	incf	(___aomod@dividend+3)^(0+128),f
  7113  0B0B  1D03               	skipz
  7114  0B0C  2B17               	goto	u285lld
  7115  0B0D  0AAC               	incf	(___aomod@dividend+4)^(0+128),f
  7116  0B0E  1D03               	skipz
  7117  0B0F  2B17               	goto	u285lld
  7118  0B10  0AAD               	incf	(___aomod@dividend+5)^(0+128),f
  7119  0B11  1D03               	skipz
  7120  0B12  2B17               	goto	u285lld
  7121  0B13  0AAE               	incf	(___aomod@dividend+6)^(0+128),f
  7122  0B14  1D03               	skipz
  7123  0B15  2B17               	goto	u285lld
  7124  0B16  0AAF               	incf	(___aomod@dividend+7)^(0+128),f
  7125  0B17                     u285lld:	
  7126  0B17  0021               	movlb	1	; select bank1
  7127  0B18  01B2               	clrf	___aomod@sign^(0+128)
  7128  0B19  0AB2               	incf	___aomod@sign^(0+128),f
  7129  0B1A                     l2680:	
  7130  0B1A  30A0               	movlw	low ___aomod@divisor
  7131  0B1B  0086               	movwf	6
  7132  0B1C  3000               	movlw	high ___aomod@divisor
  7133  0B1D  0087               	movwf	7
  7134  0B1E  3F47               	moviw [7]fsr1
  7135  0B1F  0021               	movlb	1	; select bank1
  7136  0B20  00B0               	movwf	??___aomod^(0+128)
  7137  0B21  1FB0               	btfss	??___aomod^(0+128),7
  7138  0B22  2B42               	goto	l2684
  7139  0B23  0021               	movlb	1	; select bank1
  7140  0B24  09A0               	comf	___aomod@divisor^(0+128),f
  7141  0B25  09A1               	comf	(___aomod@divisor+1)^(0+128),f
  7142  0B26  09A2               	comf	(___aomod@divisor+2)^(0+128),f
  7143  0B27  09A3               	comf	(___aomod@divisor+3)^(0+128),f
  7144  0B28  09A4               	comf	(___aomod@divisor+4)^(0+128),f
  7145  0B29  09A5               	comf	(___aomod@divisor+5)^(0+128),f
  7146  0B2A  09A6               	comf	(___aomod@divisor+6)^(0+128),f
  7147  0B2B  09A7               	comf	(___aomod@divisor+7)^(0+128),f
  7148  0B2C  0AA0               	incf	___aomod@divisor^(0+128),f
  7149  0B2D  1D03               	skipz
  7150  0B2E  2B42               	goto	l2684
  7151  0B2F  0AA1               	incf	(___aomod@divisor+1)^(0+128),f
  7152  0B30  1D03               	skipz
  7153  0B31  2B42               	goto	l2684
  7154  0B32  0AA2               	incf	(___aomod@divisor+2)^(0+128),f
  7155  0B33  1D03               	skipz
  7156  0B34  2B42               	goto	l2684
  7157  0B35  0AA3               	incf	(___aomod@divisor+3)^(0+128),f
  7158  0B36  1D03               	skipz
  7159  0B37  2B42               	goto	l2684
  7160  0B38  0AA4               	incf	(___aomod@divisor+4)^(0+128),f
  7161  0B39  1D03               	skipz
  7162  0B3A  2B42               	goto	l2684
  7163  0B3B  0AA5               	incf	(___aomod@divisor+5)^(0+128),f
  7164  0B3C  1D03               	skipz
  7165  0B3D  2B42               	goto	l2684
  7166  0B3E  0AA6               	incf	(___aomod@divisor+6)^(0+128),f
  7167  0B3F  1D03               	skipz
  7168  0B40  2B42               	goto	l2684
  7169  0B41  0AA7               	incf	(___aomod@divisor+7)^(0+128),f
  7170  0B42                     l2684:	
  7171  0B42  0021               	movlb	1	; select bank1
  7172  0B43  0820               	movf	___aomod@divisor^(0+128),w
  7173  0B44  0421               	iorwf	(___aomod@divisor+1)^(0+128),w
  7174  0B45  0422               	iorwf	(___aomod@divisor+2)^(0+128),w
  7175  0B46  0423               	iorwf	(___aomod@divisor+3)^(0+128),w
  7176  0B47  0424               	iorwf	(___aomod@divisor+4)^(0+128),w
  7177  0B48  0425               	iorwf	(___aomod@divisor+5)^(0+128),w
  7178  0B49  0426               	iorwf	(___aomod@divisor+6)^(0+128),w
  7179  0B4A  0427               	iorwf	(___aomod@divisor+7)^(0+128),w
  7180  0B4B  1903               	skipnz
  7181  0B4C  2B9A               	goto	l2700
  7182  0B4D  01B1               	clrf	___aomod@counter^(0+128)
  7183  0B4E  0AB1               	incf	___aomod@counter^(0+128),f
  7184  0B4F                     l2692:	
  7185  0B4F  1BA7               	btfsc	(___aomod@divisor+7)^(0+128),7
  7186  0B50  2B5E               	goto	l2694
  7187  0B51  35A0               	lslf	___aomod@divisor^(0+128),f
  7188  0B52  0DA1               	rlf	(___aomod@divisor+1)^(0+128),f
  7189  0B53  0DA2               	rlf	(___aomod@divisor+2)^(0+128),f
  7190  0B54  0DA3               	rlf	(___aomod@divisor+3)^(0+128),f
  7191  0B55  0DA4               	rlf	(___aomod@divisor+4)^(0+128),f
  7192  0B56  0DA5               	rlf	(___aomod@divisor+5)^(0+128),f
  7193  0B57  0DA6               	rlf	(___aomod@divisor+6)^(0+128),f
  7194  0B58  0DA7               	rlf	(___aomod@divisor+7)^(0+128),f
  7195  0B59  3001               	movlw	1
  7196  0B5A  00B0               	movwf	??___aomod^(0+128)
  7197  0B5B  0830               	movf	??___aomod^(0+128),w
  7198  0B5C  07B1               	addwf	___aomod@counter^(0+128),f
  7199  0B5D  2B4F               	goto	l2692
  7200  0B5E                     l2694:	
  7201  0B5E  0827               	movf	(___aomod@divisor+7)^(0+128),w
  7202  0B5F  022F               	subwf	(___aomod@dividend+7)^(0+128),w
  7203  0B60  1D03               	skipz
  7204  0B61  2B7C               	goto	u2905
  7205  0B62  0826               	movf	(___aomod@divisor+6)^(0+128),w
  7206  0B63  022E               	subwf	(___aomod@dividend+6)^(0+128),w
  7207  0B64  1D03               	skipz
  7208  0B65  2B7C               	goto	u2905
  7209  0B66  0825               	movf	(___aomod@divisor+5)^(0+128),w
  7210  0B67  022D               	subwf	(___aomod@dividend+5)^(0+128),w
  7211  0B68  1D03               	skipz
  7212  0B69  2B7C               	goto	u2905
  7213  0B6A  0824               	movf	(___aomod@divisor+4)^(0+128),w
  7214  0B6B  022C               	subwf	(___aomod@dividend+4)^(0+128),w
  7215  0B6C  1D03               	skipz
  7216  0B6D  2B7C               	goto	u2905
  7217  0B6E  0823               	movf	(___aomod@divisor+3)^(0+128),w
  7218  0B6F  022B               	subwf	(___aomod@dividend+3)^(0+128),w
  7219  0B70  1D03               	skipz
  7220  0B71  2B7C               	goto	u2905
  7221  0B72  0822               	movf	(___aomod@divisor+2)^(0+128),w
  7222  0B73  022A               	subwf	(___aomod@dividend+2)^(0+128),w
  7223  0B74  1D03               	skipz
  7224  0B75  2B7C               	goto	u2905
  7225  0B76  0821               	movf	(___aomod@divisor+1)^(0+128),w
  7226  0B77  0229               	subwf	(___aomod@dividend+1)^(0+128),w
  7227  0B78  1D03               	skipz
  7228  0B79  2B7C               	goto	u2905
  7229  0B7A  0820               	movf	___aomod@divisor^(0+128),w
  7230  0B7B  0228               	subwf	___aomod@dividend^(0+128),w
  7231  0B7C                     u2905:	
  7232  0B7C  1C03               	skipc
  7233  0B7D  2B8E               	goto	l2698
  7234  0B7E  0820               	movf	___aomod@divisor^(0+128),w
  7235  0B7F  02A8               	subwf	___aomod@dividend^(0+128),f
  7236  0B80  0821               	movf	(___aomod@divisor+1)^(0+128),w
  7237  0B81  3BA9               	subwfb	(___aomod@dividend+1)^(0+128),f
  7238  0B82  0822               	movf	(___aomod@divisor+2)^(0+128),w
  7239  0B83  3BAA               	subwfb	(___aomod@dividend+2)^(0+128),f
  7240  0B84  0823               	movf	(___aomod@divisor+3)^(0+128),w
  7241  0B85  3BAB               	subwfb	(___aomod@dividend+3)^(0+128),f
  7242  0B86  0824               	movf	(___aomod@divisor+4)^(0+128),w
  7243  0B87  3BAC               	subwfb	(___aomod@dividend+4)^(0+128),f
  7244  0B88  0825               	movf	(___aomod@divisor+5)^(0+128),w
  7245  0B89  3BAD               	subwfb	(___aomod@dividend+5)^(0+128),f
  7246  0B8A  0826               	movf	(___aomod@divisor+6)^(0+128),w
  7247  0B8B  3BAE               	subwfb	(___aomod@dividend+6)^(0+128),f
  7248  0B8C  0827               	movf	(___aomod@divisor+7)^(0+128),w
  7249  0B8D  3BAF               	subwfb	(___aomod@dividend+7)^(0+128),f
  7250  0B8E                     l2698:	
  7251  0B8E  36A7               	lsrf	(___aomod@divisor+7)^(0+128),f
  7252  0B8F  0CA6               	rrf	(___aomod@divisor+6)^(0+128),f
  7253  0B90  0CA5               	rrf	(___aomod@divisor+5)^(0+128),f
  7254  0B91  0CA4               	rrf	(___aomod@divisor+4)^(0+128),f
  7255  0B92  0CA3               	rrf	(___aomod@divisor+3)^(0+128),f
  7256  0B93  0CA2               	rrf	(___aomod@divisor+2)^(0+128),f
  7257  0B94  0CA1               	rrf	(___aomod@divisor+1)^(0+128),f
  7258  0B95  0CA0               	rrf	___aomod@divisor^(0+128),f
  7259  0B96  3001               	movlw	1
  7260  0B97  02B1               	subwf	___aomod@counter^(0+128),f
  7261  0B98  1D03               	btfss	3,2
  7262  0B99  2B5E               	goto	l2694
  7263  0B9A                     l2700:	
  7264  0B9A  0832               	movf	___aomod@sign^(0+128),w
  7265  0B9B  1903               	btfsc	3,2
  7266  0B9C  2BBB               	goto	l704
  7267  0B9D  09A8               	comf	___aomod@dividend^(0+128),f
  7268  0B9E  09A9               	comf	(___aomod@dividend+1)^(0+128),f
  7269  0B9F  09AA               	comf	(___aomod@dividend+2)^(0+128),f
  7270  0BA0  09AB               	comf	(___aomod@dividend+3)^(0+128),f
  7271  0BA1  09AC               	comf	(___aomod@dividend+4)^(0+128),f
  7272  0BA2  09AD               	comf	(___aomod@dividend+5)^(0+128),f
  7273  0BA3  09AE               	comf	(___aomod@dividend+6)^(0+128),f
  7274  0BA4  09AF               	comf	(___aomod@dividend+7)^(0+128),f
  7275  0BA5  0AA8               	incf	___aomod@dividend^(0+128),f
  7276  0BA6  1D03               	skipz
  7277  0BA7  2BBB               	goto	l704
  7278  0BA8  0AA9               	incf	(___aomod@dividend+1)^(0+128),f
  7279  0BA9  1D03               	skipz
  7280  0BAA  2BBB               	goto	l704
  7281  0BAB  0AAA               	incf	(___aomod@dividend+2)^(0+128),f
  7282  0BAC  1D03               	skipz
  7283  0BAD  2BBB               	goto	l704
  7284  0BAE  0AAB               	incf	(___aomod@dividend+3)^(0+128),f
  7285  0BAF  1D03               	skipz
  7286  0BB0  2BBB               	goto	l704
  7287  0BB1  0AAC               	incf	(___aomod@dividend+4)^(0+128),f
  7288  0BB2  1D03               	skipz
  7289  0BB3  2BBB               	goto	l704
  7290  0BB4  0AAD               	incf	(___aomod@dividend+5)^(0+128),f
  7291  0BB5  1D03               	skipz
  7292  0BB6  2BBB               	goto	l704
  7293  0BB7  0AAE               	incf	(___aomod@dividend+6)^(0+128),f
  7294  0BB8  1D03               	skipz
  7295  0BB9  2BBB               	goto	l704
  7296  0BBA  0AAF               	incf	(___aomod@dividend+7)^(0+128),f
  7297  0BBB                     l704:	
  7298  0BBB  0021               	movlb	1	; select bank1
  7299  0BBC  0828               	movf	___aomod@dividend^(0+128),w
  7300  0BBD  00A0               	movwf	?___aomod^(0+128)
  7301  0BBE  0829               	movf	(___aomod@dividend+1)^(0+128),w
  7302  0BBF  00A1               	movwf	(?___aomod+1)^(0+128)
  7303  0BC0  082A               	movf	(___aomod@dividend+2)^(0+128),w
  7304  0BC1  00A2               	movwf	(?___aomod+2)^(0+128)
  7305  0BC2  082B               	movf	(___aomod@dividend+3)^(0+128),w
  7306  0BC3  00A3               	movwf	(?___aomod+3)^(0+128)
  7307  0BC4  082C               	movf	(___aomod@dividend+4)^(0+128),w
  7308  0BC5  00A4               	movwf	(?___aomod+4)^(0+128)
  7309  0BC6  082D               	movf	(___aomod@dividend+5)^(0+128),w
  7310  0BC7  00A5               	movwf	(?___aomod+5)^(0+128)
  7311  0BC8  082E               	movf	(___aomod@dividend+6)^(0+128),w
  7312  0BC9  00A6               	movwf	(?___aomod+6)^(0+128)
  7313  0BCA  082F               	movf	(___aomod@dividend+7)^(0+128),w
  7314  0BCB  00A7               	movwf	(?___aomod+7)^(0+128)
  7315  0BCC  0008               	return
  7316  0BCD                     __end_of___aomod:	
  7317                           
  7318                           	psect	text18
  7319  0CAC                     __ptext18:	
  7320 ;; *************** function ___aodiv *****************
  7321 ;; Defined at:
  7322 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  7323 ;; Parameters:    Size  Location     Type
  7324 ;;  divisor         8    0[BANK1 ] long long 
  7325 ;;  dividend        8    8[BANK1 ] long long 
  7326 ;; Auto vars:     Size  Location     Type
  7327 ;;  quotient        8   19[BANK1 ] long long 
  7328 ;;  sign            1   18[BANK1 ] unsigned char 
  7329 ;;  counter         1   17[BANK1 ] unsigned char 
  7330 ;; Return value:  Size  Location     Type
  7331 ;;                  8    0[BANK1 ] long long 
  7332 ;; Registers used:
  7333 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7334 ;; Tracked objects:
  7335 ;;		On entry : 0/0
  7336 ;;		On exit  : 0/0
  7337 ;;		Unchanged: 0/0
  7338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7339 ;;      Params:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  7340 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  7341 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7342 ;;      Totals:         0       0      27       0       0       0       0       0       0       0       0       0       
      +0       0
  7343 ;;Total ram usage:       27 bytes
  7344 ;; Hardware stack levels used:    1
  7345 ;; Hardware stack levels required when called:    6
  7346 ;; This function calls:
  7347 ;;		Nothing
  7348 ;; This function is called by:
  7349 ;;		_dtoa
  7350 ;; This function uses a non-reentrant model
  7351 ;;
  7352                           
  7353                           
  7354                           ;psect for function ___aodiv
  7355  0CAC                     ___aodiv:	
  7356                           
  7357                           ;incstack = 0
  7358                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  7359  0CAC  0021               	movlb	1	; select bank1
  7360  0CAD  01B2               	clrf	___aodiv@sign^(0+128)
  7361  0CAE  30A0               	movlw	low ___aodiv@divisor
  7362  0CAF  0086               	movwf	6
  7363  0CB0  3000               	movlw	high ___aodiv@divisor
  7364  0CB1  0087               	movwf	7
  7365  0CB2  3F47               	moviw [7]fsr1
  7366  0CB3  00B0               	movwf	??___aodiv^(0+128)
  7367  0CB4  1FB0               	btfss	??___aodiv^(0+128),7
  7368  0CB5  2CD8               	goto	l2642
  7369  0CB6  0021               	movlb	1	; select bank1
  7370  0CB7  09A0               	comf	___aodiv@divisor^(0+128),f
  7371  0CB8  09A1               	comf	(___aodiv@divisor+1)^(0+128),f
  7372  0CB9  09A2               	comf	(___aodiv@divisor+2)^(0+128),f
  7373  0CBA  09A3               	comf	(___aodiv@divisor+3)^(0+128),f
  7374  0CBB  09A4               	comf	(___aodiv@divisor+4)^(0+128),f
  7375  0CBC  09A5               	comf	(___aodiv@divisor+5)^(0+128),f
  7376  0CBD  09A6               	comf	(___aodiv@divisor+6)^(0+128),f
  7377  0CBE  09A7               	comf	(___aodiv@divisor+7)^(0+128),f
  7378  0CBF  0AA0               	incf	___aodiv@divisor^(0+128),f
  7379  0CC0  1D03               	skipz
  7380  0CC1  2CD5               	goto	u274lld
  7381  0CC2  0AA1               	incf	(___aodiv@divisor+1)^(0+128),f
  7382  0CC3  1D03               	skipz
  7383  0CC4  2CD5               	goto	u274lld
  7384  0CC5  0AA2               	incf	(___aodiv@divisor+2)^(0+128),f
  7385  0CC6  1D03               	skipz
  7386  0CC7  2CD5               	goto	u274lld
  7387  0CC8  0AA3               	incf	(___aodiv@divisor+3)^(0+128),f
  7388  0CC9  1D03               	skipz
  7389  0CCA  2CD5               	goto	u274lld
  7390  0CCB  0AA4               	incf	(___aodiv@divisor+4)^(0+128),f
  7391  0CCC  1D03               	skipz
  7392  0CCD  2CD5               	goto	u274lld
  7393  0CCE  0AA5               	incf	(___aodiv@divisor+5)^(0+128),f
  7394  0CCF  1D03               	skipz
  7395  0CD0  2CD5               	goto	u274lld
  7396  0CD1  0AA6               	incf	(___aodiv@divisor+6)^(0+128),f
  7397  0CD2  1D03               	skipz
  7398  0CD3  2CD5               	goto	u274lld
  7399  0CD4  0AA7               	incf	(___aodiv@divisor+7)^(0+128),f
  7400  0CD5                     u274lld:	
  7401  0CD5  0021               	movlb	1	; select bank1
  7402  0CD6  01B2               	clrf	___aodiv@sign^(0+128)
  7403  0CD7  0AB2               	incf	___aodiv@sign^(0+128),f
  7404  0CD8                     l2642:	
  7405  0CD8  30A8               	movlw	low ___aodiv@dividend
  7406  0CD9  0086               	movwf	6
  7407  0CDA  3000               	movlw	high ___aodiv@dividend
  7408  0CDB  0087               	movwf	7
  7409  0CDC  3F47               	moviw [7]fsr1
  7410  0CDD  0021               	movlb	1	; select bank1
  7411  0CDE  00B0               	movwf	??___aodiv^(0+128)
  7412  0CDF  1FB0               	btfss	??___aodiv^(0+128),7
  7413  0CE0  2D05               	goto	l2648
  7414  0CE1  0021               	movlb	1	; select bank1
  7415  0CE2  09A8               	comf	___aodiv@dividend^(0+128),f
  7416  0CE3  09A9               	comf	(___aodiv@dividend+1)^(0+128),f
  7417  0CE4  09AA               	comf	(___aodiv@dividend+2)^(0+128),f
  7418  0CE5  09AB               	comf	(___aodiv@dividend+3)^(0+128),f
  7419  0CE6  09AC               	comf	(___aodiv@dividend+4)^(0+128),f
  7420  0CE7  09AD               	comf	(___aodiv@dividend+5)^(0+128),f
  7421  0CE8  09AE               	comf	(___aodiv@dividend+6)^(0+128),f
  7422  0CE9  09AF               	comf	(___aodiv@dividend+7)^(0+128),f
  7423  0CEA  0AA8               	incf	___aodiv@dividend^(0+128),f
  7424  0CEB  1D03               	skipz
  7425  0CEC  2D00               	goto	l2646
  7426  0CED  0AA9               	incf	(___aodiv@dividend+1)^(0+128),f
  7427  0CEE  1D03               	skipz
  7428  0CEF  2D00               	goto	l2646
  7429  0CF0  0AAA               	incf	(___aodiv@dividend+2)^(0+128),f
  7430  0CF1  1D03               	skipz
  7431  0CF2  2D00               	goto	l2646
  7432  0CF3  0AAB               	incf	(___aodiv@dividend+3)^(0+128),f
  7433  0CF4  1D03               	skipz
  7434  0CF5  2D00               	goto	l2646
  7435  0CF6  0AAC               	incf	(___aodiv@dividend+4)^(0+128),f
  7436  0CF7  1D03               	skipz
  7437  0CF8  2D00               	goto	l2646
  7438  0CF9  0AAD               	incf	(___aodiv@dividend+5)^(0+128),f
  7439  0CFA  1D03               	skipz
  7440  0CFB  2D00               	goto	l2646
  7441  0CFC  0AAE               	incf	(___aodiv@dividend+6)^(0+128),f
  7442  0CFD  1D03               	skipz
  7443  0CFE  2D00               	goto	l2646
  7444  0CFF  0AAF               	incf	(___aodiv@dividend+7)^(0+128),f
  7445  0D00                     l2646:	
  7446  0D00  3001               	movlw	1
  7447  0D01  0021               	movlb	1	; select bank1
  7448  0D02  00B0               	movwf	??___aodiv^(0+128)
  7449  0D03  0830               	movf	??___aodiv^(0+128),w
  7450  0D04  06B2               	xorwf	___aodiv@sign^(0+128),f
  7451  0D05                     l2648:	
  7452  0D05  30B3               	movlw	low ___aodiv@quotient
  7453  0D06  0086               	movwf	6
  7454  0D07  3000               	movlw	high ___aodiv@quotient
  7455  0D08  0087               	movwf	7
  7456  0D09  3008               	movlw	8
  7457  0D0A  0021               	movlb	1	; select bank1
  7458  0D0B  00B0               	movwf	??___aodiv^(0+128)
  7459  0D0C  3000               	movlw	0
  7460  0D0D                     u2770:	
  7461  0D0D  001E               	movwi fsr1++
  7462  0D0E  0BB0               	decfsz	??___aodiv^(0+128),f
  7463  0D0F  2D0D               	goto	u2770
  7464  0D10  0820               	movf	___aodiv@divisor^(0+128),w
  7465  0D11  0421               	iorwf	(___aodiv@divisor+1)^(0+128),w
  7466  0D12  0422               	iorwf	(___aodiv@divisor+2)^(0+128),w
  7467  0D13  0423               	iorwf	(___aodiv@divisor+3)^(0+128),w
  7468  0D14  0424               	iorwf	(___aodiv@divisor+4)^(0+128),w
  7469  0D15  0425               	iorwf	(___aodiv@divisor+5)^(0+128),w
  7470  0D16  0426               	iorwf	(___aodiv@divisor+6)^(0+128),w
  7471  0D17  0427               	iorwf	(___aodiv@divisor+7)^(0+128),w
  7472  0D18  1903               	skipnz
  7473  0D19  2D70               	goto	l2670
  7474  0D1A  01B1               	clrf	___aodiv@counter^(0+128)
  7475  0D1B  0AB1               	incf	___aodiv@counter^(0+128),f
  7476  0D1C                     l2658:	
  7477  0D1C  1BA7               	btfsc	(___aodiv@divisor+7)^(0+128),7
  7478  0D1D  2D2B               	goto	l2660
  7479  0D1E  35A0               	lslf	___aodiv@divisor^(0+128),f
  7480  0D1F  0DA1               	rlf	(___aodiv@divisor+1)^(0+128),f
  7481  0D20  0DA2               	rlf	(___aodiv@divisor+2)^(0+128),f
  7482  0D21  0DA3               	rlf	(___aodiv@divisor+3)^(0+128),f
  7483  0D22  0DA4               	rlf	(___aodiv@divisor+4)^(0+128),f
  7484  0D23  0DA5               	rlf	(___aodiv@divisor+5)^(0+128),f
  7485  0D24  0DA6               	rlf	(___aodiv@divisor+6)^(0+128),f
  7486  0D25  0DA7               	rlf	(___aodiv@divisor+7)^(0+128),f
  7487  0D26  3001               	movlw	1
  7488  0D27  00B0               	movwf	??___aodiv^(0+128)
  7489  0D28  0830               	movf	??___aodiv^(0+128),w
  7490  0D29  07B1               	addwf	___aodiv@counter^(0+128),f
  7491  0D2A  2D1C               	goto	l2658
  7492  0D2B                     l2660:	
  7493  0D2B  35B3               	lslf	___aodiv@quotient^(0+128),f
  7494  0D2C  0DB4               	rlf	(___aodiv@quotient+1)^(0+128),f
  7495  0D2D  0DB5               	rlf	(___aodiv@quotient+2)^(0+128),f
  7496  0D2E  0DB6               	rlf	(___aodiv@quotient+3)^(0+128),f
  7497  0D2F  0DB7               	rlf	(___aodiv@quotient+4)^(0+128),f
  7498  0D30  0DB8               	rlf	(___aodiv@quotient+5)^(0+128),f
  7499  0D31  0DB9               	rlf	(___aodiv@quotient+6)^(0+128),f
  7500  0D32  0DBA               	rlf	(___aodiv@quotient+7)^(0+128),f
  7501  0D33  0827               	movf	(___aodiv@divisor+7)^(0+128),w
  7502  0D34  022F               	subwf	(___aodiv@dividend+7)^(0+128),w
  7503  0D35  1D03               	skipz
  7504  0D36  2D51               	goto	u2805
  7505  0D37  0826               	movf	(___aodiv@divisor+6)^(0+128),w
  7506  0D38  022E               	subwf	(___aodiv@dividend+6)^(0+128),w
  7507  0D39  1D03               	skipz
  7508  0D3A  2D51               	goto	u2805
  7509  0D3B  0825               	movf	(___aodiv@divisor+5)^(0+128),w
  7510  0D3C  022D               	subwf	(___aodiv@dividend+5)^(0+128),w
  7511  0D3D  1D03               	skipz
  7512  0D3E  2D51               	goto	u2805
  7513  0D3F  0824               	movf	(___aodiv@divisor+4)^(0+128),w
  7514  0D40  022C               	subwf	(___aodiv@dividend+4)^(0+128),w
  7515  0D41  1D03               	skipz
  7516  0D42  2D51               	goto	u2805
  7517  0D43  0823               	movf	(___aodiv@divisor+3)^(0+128),w
  7518  0D44  022B               	subwf	(___aodiv@dividend+3)^(0+128),w
  7519  0D45  1D03               	skipz
  7520  0D46  2D51               	goto	u2805
  7521  0D47  0822               	movf	(___aodiv@divisor+2)^(0+128),w
  7522  0D48  022A               	subwf	(___aodiv@dividend+2)^(0+128),w
  7523  0D49  1D03               	skipz
  7524  0D4A  2D51               	goto	u2805
  7525  0D4B  0821               	movf	(___aodiv@divisor+1)^(0+128),w
  7526  0D4C  0229               	subwf	(___aodiv@dividend+1)^(0+128),w
  7527  0D4D  1D03               	skipz
  7528  0D4E  2D51               	goto	u2805
  7529  0D4F  0820               	movf	___aodiv@divisor^(0+128),w
  7530  0D50  0228               	subwf	___aodiv@dividend^(0+128),w
  7531  0D51                     u2805:	
  7532  0D51  1C03               	skipc
  7533  0D52  2D64               	goto	l2668
  7534  0D53  0820               	movf	___aodiv@divisor^(0+128),w
  7535  0D54  02A8               	subwf	___aodiv@dividend^(0+128),f
  7536  0D55  0821               	movf	(___aodiv@divisor+1)^(0+128),w
  7537  0D56  3BA9               	subwfb	(___aodiv@dividend+1)^(0+128),f
  7538  0D57  0822               	movf	(___aodiv@divisor+2)^(0+128),w
  7539  0D58  3BAA               	subwfb	(___aodiv@dividend+2)^(0+128),f
  7540  0D59  0823               	movf	(___aodiv@divisor+3)^(0+128),w
  7541  0D5A  3BAB               	subwfb	(___aodiv@dividend+3)^(0+128),f
  7542  0D5B  0824               	movf	(___aodiv@divisor+4)^(0+128),w
  7543  0D5C  3BAC               	subwfb	(___aodiv@dividend+4)^(0+128),f
  7544  0D5D  0825               	movf	(___aodiv@divisor+5)^(0+128),w
  7545  0D5E  3BAD               	subwfb	(___aodiv@dividend+5)^(0+128),f
  7546  0D5F  0826               	movf	(___aodiv@divisor+6)^(0+128),w
  7547  0D60  3BAE               	subwfb	(___aodiv@dividend+6)^(0+128),f
  7548  0D61  0827               	movf	(___aodiv@divisor+7)^(0+128),w
  7549  0D62  3BAF               	subwfb	(___aodiv@dividend+7)^(0+128),f
  7550  0D63  1433               	bsf	___aodiv@quotient^(0+128),0
  7551  0D64                     l2668:	
  7552  0D64  36A7               	lsrf	(___aodiv@divisor+7)^(0+128),f
  7553  0D65  0CA6               	rrf	(___aodiv@divisor+6)^(0+128),f
  7554  0D66  0CA5               	rrf	(___aodiv@divisor+5)^(0+128),f
  7555  0D67  0CA4               	rrf	(___aodiv@divisor+4)^(0+128),f
  7556  0D68  0CA3               	rrf	(___aodiv@divisor+3)^(0+128),f
  7557  0D69  0CA2               	rrf	(___aodiv@divisor+2)^(0+128),f
  7558  0D6A  0CA1               	rrf	(___aodiv@divisor+1)^(0+128),f
  7559  0D6B  0CA0               	rrf	___aodiv@divisor^(0+128),f
  7560  0D6C  3001               	movlw	1
  7561  0D6D  02B1               	subwf	___aodiv@counter^(0+128),f
  7562  0D6E  1D03               	btfss	3,2
  7563  0D6F  2D2B               	goto	l2660
  7564  0D70                     l2670:	
  7565  0D70  0832               	movf	___aodiv@sign^(0+128),w
  7566  0D71  1903               	btfsc	3,2
  7567  0D72  2D91               	goto	l691
  7568  0D73  09B3               	comf	___aodiv@quotient^(0+128),f
  7569  0D74  09B4               	comf	(___aodiv@quotient+1)^(0+128),f
  7570  0D75  09B5               	comf	(___aodiv@quotient+2)^(0+128),f
  7571  0D76  09B6               	comf	(___aodiv@quotient+3)^(0+128),f
  7572  0D77  09B7               	comf	(___aodiv@quotient+4)^(0+128),f
  7573  0D78  09B8               	comf	(___aodiv@quotient+5)^(0+128),f
  7574  0D79  09B9               	comf	(___aodiv@quotient+6)^(0+128),f
  7575  0D7A  09BA               	comf	(___aodiv@quotient+7)^(0+128),f
  7576  0D7B  0AB3               	incf	___aodiv@quotient^(0+128),f
  7577  0D7C  1D03               	skipz
  7578  0D7D  2D91               	goto	l691
  7579  0D7E  0AB4               	incf	(___aodiv@quotient+1)^(0+128),f
  7580  0D7F  1D03               	skipz
  7581  0D80  2D91               	goto	l691
  7582  0D81  0AB5               	incf	(___aodiv@quotient+2)^(0+128),f
  7583  0D82  1D03               	skipz
  7584  0D83  2D91               	goto	l691
  7585  0D84  0AB6               	incf	(___aodiv@quotient+3)^(0+128),f
  7586  0D85  1D03               	skipz
  7587  0D86  2D91               	goto	l691
  7588  0D87  0AB7               	incf	(___aodiv@quotient+4)^(0+128),f
  7589  0D88  1D03               	skipz
  7590  0D89  2D91               	goto	l691
  7591  0D8A  0AB8               	incf	(___aodiv@quotient+5)^(0+128),f
  7592  0D8B  1D03               	skipz
  7593  0D8C  2D91               	goto	l691
  7594  0D8D  0AB9               	incf	(___aodiv@quotient+6)^(0+128),f
  7595  0D8E  1D03               	skipz
  7596  0D8F  2D91               	goto	l691
  7597  0D90  0ABA               	incf	(___aodiv@quotient+7)^(0+128),f
  7598  0D91                     l691:	
  7599  0D91  0021               	movlb	1	; select bank1
  7600  0D92  0833               	movf	___aodiv@quotient^(0+128),w
  7601  0D93  00A0               	movwf	?___aodiv^(0+128)
  7602  0D94  0834               	movf	(___aodiv@quotient+1)^(0+128),w
  7603  0D95  00A1               	movwf	(?___aodiv+1)^(0+128)
  7604  0D96  0835               	movf	(___aodiv@quotient+2)^(0+128),w
  7605  0D97  00A2               	movwf	(?___aodiv+2)^(0+128)
  7606  0D98  0836               	movf	(___aodiv@quotient+3)^(0+128),w
  7607  0D99  00A3               	movwf	(?___aodiv+3)^(0+128)
  7608  0D9A  0837               	movf	(___aodiv@quotient+4)^(0+128),w
  7609  0D9B  00A4               	movwf	(?___aodiv+4)^(0+128)
  7610  0D9C  0838               	movf	(___aodiv@quotient+5)^(0+128),w
  7611  0D9D  00A5               	movwf	(?___aodiv+5)^(0+128)
  7612  0D9E  0839               	movf	(___aodiv@quotient+6)^(0+128),w
  7613  0D9F  00A6               	movwf	(?___aodiv+6)^(0+128)
  7614  0DA0  083A               	movf	(___aodiv@quotient+7)^(0+128),w
  7615  0DA1  00A7               	movwf	(?___aodiv+7)^(0+128)
  7616  0DA2  0008               	return
  7617  0DA3                     __end_of___aodiv:	
  7618                           
  7619                           	psect	text19
  7620  046F                     __ptext19:	
  7621 ;; *************** function _heartBeatCalc *****************
  7622 ;; Defined at:
  7623 ;;		line 137 in file "main.c"
  7624 ;; Parameters:    Size  Location     Type
  7625 ;;  adcVal          2   15[BANK1 ] unsigned short 
  7626 ;; Auto vars:     Size  Location     Type
  7627 ;;  i               2   21[BANK1 ] int 
  7628 ;;  i               2   25[BANK1 ] int 
  7629 ;;  runningTotal    2   19[BANK1 ] unsigned short 
  7630 ;;  N               2   23[BANK1 ] int 
  7631 ;; Return value:  Size  Location     Type
  7632 ;;                  1    wreg      void 
  7633 ;; Registers used:
  7634 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7635 ;; Tracked objects:
  7636 ;;		On entry : 0/0
  7637 ;;		On exit  : 0/0
  7638 ;;		Unchanged: 0/0
  7639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7640 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7641 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  7642 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7643 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  7644 ;;Total ram usage:       12 bytes
  7645 ;; Hardware stack levels used:    1
  7646 ;; Hardware stack levels required when called:    7
  7647 ;; This function calls:
  7648 ;;		___aldiv
  7649 ;;		___awdiv
  7650 ;;		___lwdiv
  7651 ;;		___wmul
  7652 ;; This function is called by:
  7653 ;;		_main
  7654 ;; This function uses a non-reentrant model
  7655 ;;
  7656                           
  7657                           
  7658                           ;psect for function _heartBeatCalc
  7659  046F                     _heartBeatCalc:	
  7660                           
  7661                           ;main.c: 138:     Signal = adcVal ;
  7662                           
  7663                           ;incstack = 0
  7664                           ; Regs used in _heartBeatCalc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7665  046F  0021               	movlb	1	; select bank1
  7666  0470  0830               	movf	(heartBeatCalc@adcVal+1)^(0+128),w
  7667  0471  0020               	movlb	0	; select bank0
  7668  0472  00E3               	movwf	_Signal+1	;volatile
  7669  0473  0021               	movlb	1	; select bank1
  7670  0474  082F               	movf	heartBeatCalc@adcVal^(0+128),w
  7671  0475  0020               	movlb	0	; select bank0
  7672  0476  00E2               	movwf	_Signal	;volatile
  7673                           
  7674                           ;main.c: 139:     sampleCounter += 2;
  7675  0477  3002               	movlw	2
  7676  0478  07DC               	addwf	_sampleCounter,f	;volatile
  7677  0479  3000               	movlw	0
  7678  047A  3DDD               	addwfc	_sampleCounter+1,f	;volatile
  7679  047B  3000               	movlw	0
  7680  047C  3DDE               	addwfc	_sampleCounter+2,f	;volatile
  7681  047D  3000               	movlw	0
  7682  047E  3DDF               	addwfc	_sampleCounter+3,f	;volatile
  7683                           
  7684                           ;main.c: 140:     int N = sampleCounter - lastBeatTime;
  7685  047F  0022               	movlb	2	; select bank2
  7686  0480  0820               	movf	_lastBeatTime^(0+256),w	;volatile
  7687  0481  0020               	movlb	0	; select bank0
  7688  0482  025C               	subwf	_sampleCounter,w	;volatile
  7689  0483  0021               	movlb	1	; select bank1
  7690  0484  00B7               	movwf	heartBeatCalc@N^(0+128)
  7691  0485  0022               	movlb	2	; select bank2
  7692  0486  0821               	movf	(_lastBeatTime+1)^(0+256),w	;volatile
  7693  0487  0020               	movlb	0	; select bank0
  7694  0488  3B5D               	subwfb	_sampleCounter+1,w	;volatile
  7695  0489  0021               	movlb	1	; select bank1
  7696  048A  00B8               	movwf	(heartBeatCalc@N+1)^(0+128)
  7697                           
  7698                           ;main.c: 143:     if (Signal < thresh && N > (IBI / 5)*3) {
  7699  048B  0020               	movlb	0	; select bank0
  7700  048C  086C               	movf	_thresh+1,w	;volatile
  7701  048D  0263               	subwf	_Signal+1,w	;volatile
  7702  048E  1D03               	skipz
  7703  048F  2C92               	goto	u4905
  7704  0490  086B               	movf	_thresh,w	;volatile
  7705  0491  0262               	subwf	_Signal,w	;volatile
  7706  0492                     u4905:	
  7707  0492  1803               	skipnc
  7708  0493  2CCA               	goto	l384
  7709  0494  3005               	movlw	5
  7710  0495  0021               	movlb	1	; select bank1
  7711  0496  00A0               	movwf	___awdiv@divisor^(0+128)
  7712  0497  3000               	movlw	0
  7713  0498  00A1               	movwf	(___awdiv@divisor^(0+128)+1)
  7714  0499  0020               	movlb	0	; select bank0
  7715  049A  086A               	movf	_IBI+1,w	;volatile
  7716  049B  0021               	movlb	1	; select bank1
  7717  049C  00A3               	movwf	(___awdiv@dividend+1)^(0+128)
  7718  049D  0020               	movlb	0	; select bank0
  7719  049E  0869               	movf	_IBI,w	;volatile
  7720  049F  0021               	movlb	1	; select bank1
  7721  04A0  00A2               	movwf	___awdiv@dividend^(0+128)
  7722  04A1  3188  2004  3184   	fcall	___awdiv
  7723  04A4  0021               	movlb	1	; select bank1
  7724  04A5  0821               	movf	(?___awdiv+1)^(0+128),w
  7725  04A6  00AA               	movwf	(___wmul@multiplier+1)^(0+128)
  7726  04A7  0820               	movf	?___awdiv^(0+128),w
  7727  04A8  00A9               	movwf	___wmul@multiplier^(0+128)
  7728  04A9  3003               	movlw	3
  7729  04AA  00AB               	movwf	___wmul@multiplicand^(0+128)
  7730  04AB  3000               	movlw	0
  7731  04AC  00AC               	movwf	(___wmul@multiplicand^(0+128)+1)
  7732  04AD  3195  25B7  3184   	fcall	___wmul
  7733  04B0  0021               	movlb	1	; select bank1
  7734  04B1  082A               	movf	(?___wmul+1)^(0+128),w
  7735  04B2  3A80               	xorlw	128
  7736  04B3  00B1               	movwf	??_heartBeatCalc^(0+128)
  7737  04B4  0838               	movf	(heartBeatCalc@N+1)^(0+128),w
  7738  04B5  3A80               	xorlw	128
  7739  04B6  0231               	subwf	??_heartBeatCalc^(0+128),w
  7740  04B7  1D03               	skipz
  7741  04B8  2CBB               	goto	u4915
  7742  04B9  0837               	movf	heartBeatCalc@N^(0+128),w
  7743  04BA  0229               	subwf	?___wmul^(0+128),w
  7744  04BB                     u4915:	
  7745  04BB  1803               	skipnc
  7746  04BC  2CCA               	goto	l384
  7747                           
  7748                           ;main.c: 144:         if (Signal < T) {
  7749  04BD  0020               	movlb	0	; select bank0
  7750  04BE  086E               	movf	_T+1,w	;volatile
  7751  04BF  0263               	subwf	_Signal+1,w	;volatile
  7752  04C0  1D03               	skipz
  7753  04C1  2CC4               	goto	u4925
  7754  04C2  086D               	movf	_T,w	;volatile
  7755  04C3  0262               	subwf	_Signal,w	;volatile
  7756  04C4                     u4925:	
  7757  04C4  1803               	skipnc
  7758  04C5  2CCA               	goto	l384
  7759                           
  7760                           ;main.c: 145:             T = Signal;
  7761  04C6  0863               	movf	_Signal+1,w	;volatile
  7762  04C7  00EE               	movwf	_T+1	;volatile
  7763  04C8  0862               	movf	_Signal,w	;volatile
  7764  04C9  00ED               	movwf	_T	;volatile
  7765  04CA                     l384:	
  7766                           ;main.c: 147:     }
  7767                           
  7768                           
  7769                           ;main.c: 148:         if (Signal > thresh && Signal > P) {
  7770  04CA  0020               	movlb	0	; select bank0
  7771  04CB  0863               	movf	_Signal+1,w	;volatile
  7772  04CC  026C               	subwf	_thresh+1,w	;volatile
  7773  04CD  1D03               	skipz
  7774  04CE  2CD1               	goto	u4935
  7775  04CF  0862               	movf	_Signal,w	;volatile
  7776  04D0  026B               	subwf	_thresh,w	;volatile
  7777  04D1                     u4935:	
  7778  04D1  1803               	skipnc
  7779  04D2  2CE6               	goto	l386
  7780  04D3  0863               	movf	_Signal+1,w	;volatile
  7781  04D4  0022               	movlb	2	; select bank2
  7782  04D5  0269               	subwf	(_P+1)^(0+256),w	;volatile
  7783  04D6  1D03               	skipz
  7784  04D7  2CDC               	goto	u4945
  7785  04D8  0020               	movlb	0	; select bank0
  7786  04D9  0862               	movf	_Signal,w	;volatile
  7787  04DA  0022               	movlb	2	; select bank2
  7788  04DB  0268               	subwf	_P^(0+256),w	;volatile
  7789  04DC                     u4945:	
  7790  04DC  1803               	skipnc
  7791  04DD  2CE6               	goto	l386
  7792                           
  7793                           ;main.c: 149:         P = Signal;
  7794  04DE  0020               	movlb	0	; select bank0
  7795  04DF  0863               	movf	_Signal+1,w	;volatile
  7796  04E0  0022               	movlb	2	; select bank2
  7797  04E1  00E9               	movwf	(_P+1)^(0+256)	;volatile
  7798  04E2  0020               	movlb	0	; select bank0
  7799  04E3  0862               	movf	_Signal,w	;volatile
  7800  04E4  0022               	movlb	2	; select bank2
  7801  04E5  00E8               	movwf	_P^(0+256)	;volatile
  7802  04E6                     l386:	
  7803                           ;main.c: 150:     }
  7804                           
  7805                           
  7806                           ;main.c: 154:     if (N > 250) {
  7807  04E6  0021               	movlb	1	; select bank1
  7808  04E7  0838               	movf	(heartBeatCalc@N+1)^(0+128),w
  7809  04E8  3A80               	xorlw	128
  7810  04E9  00B1               	movwf	??_heartBeatCalc^(0+128)
  7811  04EA  3080               	movlw	128
  7812  04EB  0231               	subwf	??_heartBeatCalc^(0+128),w
  7813  04EC  1D03               	skipz
  7814  04ED  2CF0               	goto	u4955
  7815  04EE  30FB               	movlw	251
  7816  04EF  0237               	subwf	heartBeatCalc@N^(0+128),w
  7817  04F0                     u4955:	
  7818  04F0  1C03               	skipc
  7819  04F1  2DE3               	goto	l387
  7820                           
  7821                           ;main.c: 155:         if ((Signal > thresh) && (Pulse == 0) && (N > (IBI / 5)*3)) {
  7822  04F2  0020               	movlb	0	; select bank0
  7823  04F3  0863               	movf	_Signal+1,w	;volatile
  7824  04F4  026C               	subwf	_thresh+1,w	;volatile
  7825  04F5  1D03               	skipz
  7826  04F6  2CF9               	goto	u4965
  7827  04F7  0862               	movf	_Signal,w	;volatile
  7828  04F8  026B               	subwf	_thresh,w	;volatile
  7829  04F9                     u4965:	
  7830  04F9  1803               	skipnc
  7831  04FA  2DE3               	goto	l387
  7832  04FB  0866               	movf	_Pulse,w	;volatile
  7833  04FC  1D03               	btfss	3,2
  7834  04FD  2DE3               	goto	l387
  7835  04FE  3005               	movlw	5
  7836  04FF  0021               	movlb	1	; select bank1
  7837  0500  00A0               	movwf	___awdiv@divisor^(0+128)
  7838  0501  3000               	movlw	0
  7839  0502  00A1               	movwf	(___awdiv@divisor^(0+128)+1)
  7840  0503  0020               	movlb	0	; select bank0
  7841  0504  086A               	movf	_IBI+1,w	;volatile
  7842  0505  0021               	movlb	1	; select bank1
  7843  0506  00A3               	movwf	(___awdiv@dividend+1)^(0+128)
  7844  0507  0020               	movlb	0	; select bank0
  7845  0508  0869               	movf	_IBI,w	;volatile
  7846  0509  0021               	movlb	1	; select bank1
  7847  050A  00A2               	movwf	___awdiv@dividend^(0+128)
  7848  050B  3188  2004  3184   	fcall	___awdiv
  7849  050E  0021               	movlb	1	; select bank1
  7850  050F  0821               	movf	(?___awdiv+1)^(0+128),w
  7851  0510  00AA               	movwf	(___wmul@multiplier+1)^(0+128)
  7852  0511  0820               	movf	?___awdiv^(0+128),w
  7853  0512  00A9               	movwf	___wmul@multiplier^(0+128)
  7854  0513  3003               	movlw	3
  7855  0514  00AB               	movwf	___wmul@multiplicand^(0+128)
  7856  0515  3000               	movlw	0
  7857  0516  00AC               	movwf	(___wmul@multiplicand^(0+128)+1)
  7858  0517  3195  25B7  3184   	fcall	___wmul
  7859  051A  0021               	movlb	1	; select bank1
  7860  051B  082A               	movf	(?___wmul+1)^(0+128),w
  7861  051C  3A80               	xorlw	128
  7862  051D  00B1               	movwf	??_heartBeatCalc^(0+128)
  7863  051E  0838               	movf	(heartBeatCalc@N+1)^(0+128),w
  7864  051F  3A80               	xorlw	128
  7865  0520  0231               	subwf	??_heartBeatCalc^(0+128),w
  7866  0521  1D03               	skipz
  7867  0522  2D25               	goto	u4985
  7868  0523  0837               	movf	heartBeatCalc@N^(0+128),w
  7869  0524  0229               	subwf	?___wmul^(0+128),w
  7870  0525                     u4985:	
  7871  0525  1803               	skipnc
  7872  0526  2DE3               	goto	l387
  7873                           
  7874                           ;main.c: 156:             Pulse = 1;
  7875  0527  3001               	movlw	1
  7876  0528  0021               	movlb	1	; select bank1
  7877  0529  00B1               	movwf	??_heartBeatCalc^(0+128)
  7878  052A  0831               	movf	??_heartBeatCalc^(0+128),w
  7879  052B  0020               	movlb	0	; select bank0
  7880  052C  00E6               	movwf	_Pulse	;volatile
  7881                           
  7882                           ;main.c: 157:             IBI = sampleCounter - lastBeatTime;
  7883  052D  0022               	movlb	2	; select bank2
  7884  052E  0820               	movf	_lastBeatTime^(0+256),w	;volatile
  7885  052F  0020               	movlb	0	; select bank0
  7886  0530  025C               	subwf	_sampleCounter,w	;volatile
  7887  0531  00E9               	movwf	_IBI	;volatile
  7888  0532  0022               	movlb	2	; select bank2
  7889  0533  0821               	movf	(_lastBeatTime+1)^(0+256),w	;volatile
  7890  0534  0020               	movlb	0	; select bank0
  7891  0535  3B5D               	subwfb	_sampleCounter+1,w	;volatile
  7892  0536  00EA               	movwf	_IBI+1	;volatile
  7893                           
  7894                           ;main.c: 158:             lastBeatTime = sampleCounter;
  7895  0537  085F               	movf	_sampleCounter+3,w	;volatile
  7896  0538  0022               	movlb	2	; select bank2
  7897  0539  00A3               	movwf	(_lastBeatTime+3)^(0+256)	;volatile
  7898  053A  0020               	movlb	0	; select bank0
  7899  053B  085E               	movf	_sampleCounter+2,w	;volatile
  7900  053C  0022               	movlb	2	; select bank2
  7901  053D  00A2               	movwf	(_lastBeatTime+2)^(0+256)	;volatile
  7902  053E  0020               	movlb	0	; select bank0
  7903  053F  085D               	movf	_sampleCounter+1,w	;volatile
  7904  0540  0022               	movlb	2	; select bank2
  7905  0541  00A1               	movwf	(_lastBeatTime+1)^(0+256)	;volatile
  7906  0542  0020               	movlb	0	; select bank0
  7907  0543  085C               	movf	_sampleCounter,w	;volatile
  7908  0544  0022               	movlb	2	; select bank2
  7909  0545  00A0               	movwf	_lastBeatTime^(0+256)	;volatile
  7910                           
  7911                           ;main.c: 160:             if (secondBeat) {
  7912  0546  0020               	movlb	0	; select bank0
  7913  0547  0867               	movf	_secondBeat,w	;volatile
  7914  0548  1903               	btfsc	3,2
  7915  0549  2D69               	goto	l3800
  7916                           
  7917                           ;main.c: 161:                 secondBeat = 0;
  7918  054A  01E7               	clrf	_secondBeat	;volatile
  7919                           
  7920                           ;main.c: 162:                 int i;;main.c: 163:                 for (i = 0; i <= 9; i+
      +                          +) {
  7921  054B  0021               	movlb	1	; select bank1
  7922  054C  01B5               	clrf	heartBeatCalc@i^(0+128)
  7923  054D  01B6               	clrf	(heartBeatCalc@i+1)^(0+128)
  7924  054E                     l3794:	
  7925                           
  7926                           ;main.c: 164:                     rate[i] = IBI;
  7927  054E  0021               	movlb	1	; select bank1
  7928  054F  3535               	lslf	heartBeatCalc@i^(0+128),w
  7929  0550  3EC0               	addlw	(low (_rate| (0+256)))& (0+255)
  7930  0551  0086               	movwf	6
  7931  0552  3001               	movlw	1	; select bank3/4
  7932  0553  0087               	movwf	7
  7933  0554  0020               	movlb	0	; select bank0
  7934  0555  0869               	movf	_IBI,w	;volatile
  7935  0556  3FC0               	movwi [0]fsr1
  7936  0557  086A               	movf	_IBI+1,w	;volatile
  7937  0558  3FC1               	movwi [1]fsr1
  7938                           
  7939                           ;main.c: 165:                 }
  7940  0559  3001               	movlw	1
  7941  055A  0021               	movlb	1	; select bank1
  7942  055B  07B5               	addwf	heartBeatCalc@i^(0+128),f
  7943  055C  3000               	movlw	0
  7944  055D  3DB6               	addwfc	(heartBeatCalc@i+1)^(0+128),f
  7945  055E  0836               	movf	(heartBeatCalc@i+1)^(0+128),w
  7946  055F  3A80               	xorlw	128
  7947  0560  00B1               	movwf	??_heartBeatCalc^(0+128)
  7948  0561  3080               	movlw	128
  7949  0562  0231               	subwf	??_heartBeatCalc^(0+128),w
  7950  0563  1D03               	skipz
  7951  0564  2D67               	goto	u5005
  7952  0565  300A               	movlw	10
  7953  0566  0235               	subwf	heartBeatCalc@i^(0+128),w
  7954  0567                     u5005:	
  7955  0567  1C03               	skipc
  7956  0568  2D4E               	goto	l3794
  7957  0569                     l3800:	
  7958                           
  7959                           ;main.c: 168:             if (firstBeat) {
  7960  0569  0020               	movlb	0	; select bank0
  7961  056A  086F               	movf	_firstBeat,w	;volatile
  7962  056B  1903               	btfsc	3,2
  7963  056C  2D75               	goto	l3808
  7964                           
  7965                           ;main.c: 169:                 firstBeat = 0;
  7966  056D  01EF               	clrf	_firstBeat	;volatile
  7967                           
  7968                           ;main.c: 170:                 secondBeat = 1;
  7969  056E  3001               	movlw	1
  7970  056F  0021               	movlb	1	; select bank1
  7971  0570  00B1               	movwf	??_heartBeatCalc^(0+128)
  7972  0571  0831               	movf	??_heartBeatCalc^(0+128),w
  7973  0572  0020               	movlb	0	; select bank0
  7974  0573  00E7               	movwf	_secondBeat	;volatile
  7975  0574  0008               	return
  7976  0575                     l3808:	
  7977                           
  7978                           ;main.c: 176:             uint16_t runningTotal = 0;
  7979  0575  0021               	movlb	1	; select bank1
  7980  0576  01B3               	clrf	heartBeatCalc@runningTotal^(0+128)
  7981  0577  01B4               	clrf	(heartBeatCalc@runningTotal+1)^(0+128)
  7982                           
  7983                           ;main.c: 177:             int i;;main.c: 178:             for (i = 0; i <= 8; i++) {
  7984  0578  01B9               	clrf	heartBeatCalc@i_688^(0+128)
  7985  0579  01BA               	clrf	(heartBeatCalc@i_688+1)^(0+128)
  7986  057A                     l3814:	
  7987                           
  7988                           ;main.c: 179:                 rate[i] = rate[i + 1];
  7989  057A  0021               	movlb	1	; select bank1
  7990  057B  3539               	lslf	heartBeatCalc@i_688^(0+128),w
  7991  057C  3EC2               	addlw	(low ((_rate| (0+256)+2)))& (0+255)
  7992  057D  0086               	movwf	6
  7993  057E  3001               	movlw	1	; select bank3/4
  7994  057F  0087               	movwf	7
  7995  0580  3539               	lslf	heartBeatCalc@i_688^(0+128),w
  7996  0581  3EC0               	addlw	(low (_rate| (0+256)))& (0+255)
  7997  0582  0084               	movwf	4
  7998  0583  3001               	movlw	1	; select bank3/4
  7999  0584  0085               	movwf	5
  8000  0585  3F40               	moviw [0]fsr1
  8001  0586  3F80               	movwi [0]fsr0
  8002  0587  3F41               	moviw [1]fsr1
  8003  0588  3F81               	movwi [1]fsr0
  8004                           
  8005                           ;main.c: 180:                 runningTotal += rate[i];
  8006  0589  3539               	lslf	heartBeatCalc@i_688^(0+128),w
  8007  058A  3EC0               	addlw	(low (_rate| (0+256)))& (0+255)
  8008  058B  0086               	movwf	6
  8009  058C  3001               	movlw	1	; select bank3/4
  8010  058D  0087               	movwf	7
  8011  058E  3F40               	moviw [0]fsr1
  8012  058F  00B1               	movwf	??_heartBeatCalc^(0+128)
  8013  0590  3F41               	moviw [1]fsr1
  8014  0591  00B2               	movwf	(??_heartBeatCalc^(0+128)+1)
  8015  0592  0831               	movf	??_heartBeatCalc^(0+128),w
  8016  0593  07B3               	addwf	heartBeatCalc@runningTotal^(0+128),f
  8017  0594  0832               	movf	(??_heartBeatCalc+1)^(0+128),w
  8018  0595  3DB4               	addwfc	(heartBeatCalc@runningTotal+1)^(0+128),f
  8019                           
  8020                           ;main.c: 181:             }
  8021  0596  3001               	movlw	1
  8022  0597  07B9               	addwf	heartBeatCalc@i_688^(0+128),f
  8023  0598  3000               	movlw	0
  8024  0599  3DBA               	addwfc	(heartBeatCalc@i_688+1)^(0+128),f
  8025  059A  083A               	movf	(heartBeatCalc@i_688+1)^(0+128),w
  8026  059B  3A80               	xorlw	128
  8027  059C  00B1               	movwf	??_heartBeatCalc^(0+128)
  8028  059D  3080               	movlw	128
  8029  059E  0231               	subwf	??_heartBeatCalc^(0+128),w
  8030  059F  1D03               	skipz
  8031  05A0  2DA3               	goto	u5025
  8032  05A1  3009               	movlw	9
  8033  05A2  0239               	subwf	heartBeatCalc@i_688^(0+128),w
  8034  05A3                     u5025:	
  8035  05A3  1C03               	skipc
  8036  05A4  2D7A               	goto	l3814
  8037                           
  8038                           ;main.c: 183:             rate[9] = IBI;
  8039  05A5  0020               	movlb	0	; select bank0
  8040  05A6  086A               	movf	_IBI+1,w	;volatile
  8041  05A7  0023               	movlb	3	; select bank3
  8042  05A8  00D3               	movwf	((_rate+1)^(0+384)+18)	;volatile
  8043  05A9  0020               	movlb	0	; select bank0
  8044  05AA  0869               	movf	_IBI,w	;volatile
  8045  05AB  0023               	movlb	3	; select bank3
  8046  05AC  00D2               	movwf	(_rate^(0+384)+18)	;volatile
  8047                           
  8048                           ;main.c: 184:             runningTotal += rate[9];
  8049  05AD  0852               	movf	(_rate^(0+384)+18),w	;volatile
  8050  05AE  0021               	movlb	1	; select bank1
  8051  05AF  07B3               	addwf	heartBeatCalc@runningTotal^(0+128),f
  8052  05B0  0023               	movlb	3	; select bank3
  8053  05B1  0853               	movf	((_rate+1)^(0+384)+18),w	;volatile
  8054  05B2  0021               	movlb	1	; select bank1
  8055  05B3  3DB4               	addwfc	(heartBeatCalc@runningTotal+1)^(0+128),f
  8056                           
  8057                           ;main.c: 185:             runningTotal /= 10;
  8058  05B4  300A               	movlw	10
  8059  05B5  00A0               	movwf	___lwdiv@divisor^(0+128)
  8060  05B6  3000               	movlw	0
  8061  05B7  00A1               	movwf	(___lwdiv@divisor^(0+128)+1)
  8062  05B8  0834               	movf	(heartBeatCalc@runningTotal+1)^(0+128),w
  8063  05B9  00A3               	movwf	(___lwdiv@dividend+1)^(0+128)
  8064  05BA  0833               	movf	heartBeatCalc@runningTotal^(0+128),w
  8065  05BB  00A2               	movwf	___lwdiv@dividend^(0+128)
  8066  05BC  3196  26B7  3184   	fcall	___lwdiv
  8067  05BF  0021               	movlb	1	; select bank1
  8068  05C0  0821               	movf	(?___lwdiv+1)^(0+128),w
  8069  05C1  00B4               	movwf	(heartBeatCalc@runningTotal+1)^(0+128)
  8070  05C2  0820               	movf	?___lwdiv^(0+128),w
  8071  05C3  00B3               	movwf	heartBeatCalc@runningTotal^(0+128)
  8072                           
  8073                           ;main.c: 186:             BPM = 60000 / runningTotal;
  8074  05C4  0833               	movf	heartBeatCalc@runningTotal^(0+128),w
  8075  05C5  00A0               	movwf	___aldiv@divisor^(0+128)
  8076  05C6  0834               	movf	(heartBeatCalc@runningTotal+1)^(0+128),w
  8077  05C7  00A1               	movwf	(___aldiv@divisor^(0+128)+1)
  8078  05C8  01A2               	clrf	(___aldiv@divisor^(0+128)+2)
  8079  05C9  01A3               	clrf	(___aldiv@divisor^(0+128)+3)
  8080  05CA  3000               	movlw	0
  8081  05CB  00A7               	movwf	(___aldiv@dividend+3)^(0+128)
  8082  05CC  3000               	movlw	0
  8083  05CD  00A6               	movwf	(___aldiv@dividend+2)^(0+128)
  8084  05CE  30EA               	movlw	234
  8085  05CF  00A5               	movwf	(___aldiv@dividend+1)^(0+128)
  8086  05D0  3060               	movlw	96
  8087  05D1  00A4               	movwf	___aldiv@dividend^(0+128)
  8088  05D2  3189  218E  3184   	fcall	___aldiv
  8089  05D5  0021               	movlb	1	; select bank1
  8090  05D6  0821               	movf	(?___aldiv+1)^(0+128),w
  8091  05D7  0022               	movlb	2	; select bank2
  8092  05D8  00B7               	movwf	(_BPM+1)^(0+256)	;volatile
  8093  05D9  0021               	movlb	1	; select bank1
  8094  05DA  0820               	movf	?___aldiv^(0+128),w
  8095  05DB  0022               	movlb	2	; select bank2
  8096  05DC  00B6               	movwf	_BPM^(0+256)	;volatile
  8097                           
  8098                           ;main.c: 187:             QS = 1;
  8099  05DD  3001               	movlw	1
  8100  05DE  0021               	movlb	1	; select bank1
  8101  05DF  00B1               	movwf	??_heartBeatCalc^(0+128)
  8102  05E0  0831               	movf	??_heartBeatCalc^(0+128),w
  8103  05E1  0022               	movlb	2	; select bank2
  8104  05E2  00C6               	movwf	_QS^(0+256)	;volatile
  8105  05E3                     l387:	
  8106                           ;main.c: 190:     }
  8107                           
  8108                           
  8109                           ;main.c: 191:     if (Signal < thresh && Pulse == 1) {
  8110  05E3  0020               	movlb	0	; select bank0
  8111  05E4  086C               	movf	_thresh+1,w	;volatile
  8112  05E5  0263               	subwf	_Signal+1,w	;volatile
  8113  05E6  1D03               	skipz
  8114  05E7  2DEA               	goto	u5035
  8115  05E8  086B               	movf	_thresh,w	;volatile
  8116  05E9  0262               	subwf	_Signal,w	;volatile
  8117  05EA                     u5035:	
  8118  05EA  1803               	skipnc
  8119  05EB  2E20               	goto	l3840
  8120  05EC  0366               	decf	_Pulse,w	;volatile
  8121  05ED  1D03               	btfss	3,2
  8122  05EE  2E20               	goto	l3840
  8123                           
  8124                           ;main.c: 192:         Pulse = 0;
  8125  05EF  01E6               	clrf	_Pulse	;volatile
  8126                           
  8127                           ;main.c: 193:         amp = P - T;
  8128  05F0  086D               	movf	_T,w	;volatile
  8129  05F1  0022               	movlb	2	; select bank2
  8130  05F2  0268               	subwf	_P^(0+256),w	;volatile
  8131  05F3  00B8               	movwf	_amp^(0+256)	;volatile
  8132  05F4  0020               	movlb	0	; select bank0
  8133  05F5  086E               	movf	_T+1,w	;volatile
  8134  05F6  0022               	movlb	2	; select bank2
  8135  05F7  3B69               	subwfb	(_P+1)^(0+256),w	;volatile
  8136  05F8  00B9               	movwf	(_amp+1)^(0+256)	;volatile
  8137                           
  8138                           ;main.c: 194:         thresh = amp / 2 + T;
  8139  05F9  3002               	movlw	2
  8140  05FA  0021               	movlb	1	; select bank1
  8141  05FB  00A0               	movwf	___awdiv@divisor^(0+128)
  8142  05FC  3000               	movlw	0
  8143  05FD  00A1               	movwf	(___awdiv@divisor^(0+128)+1)
  8144  05FE  0022               	movlb	2	; select bank2
  8145  05FF  0839               	movf	(_amp+1)^(0+256),w	;volatile
  8146  0600  0021               	movlb	1	; select bank1
  8147  0601  00A3               	movwf	(___awdiv@dividend+1)^(0+128)
  8148  0602  0022               	movlb	2	; select bank2
  8149  0603  0838               	movf	_amp^(0+256),w	;volatile
  8150  0604  0021               	movlb	1	; select bank1
  8151  0605  00A2               	movwf	___awdiv@dividend^(0+128)
  8152  0606  3188  2004  3184   	fcall	___awdiv
  8153  0609  0020               	movlb	0	; select bank0
  8154  060A  086D               	movf	_T,w	;volatile
  8155  060B  0021               	movlb	1	; select bank1
  8156  060C  0720               	addwf	?___awdiv^(0+128),w
  8157  060D  0020               	movlb	0	; select bank0
  8158  060E  00EB               	movwf	_thresh	;volatile
  8159  060F  086E               	movf	_T+1,w	;volatile
  8160  0610  0021               	movlb	1	; select bank1
  8161  0611  3D21               	addwfc	(?___awdiv+1)^(0+128),w
  8162  0612  0020               	movlb	0	; select bank0
  8163  0613  00EC               	movwf	_thresh+1	;volatile
  8164                           
  8165                           ;main.c: 195:         P = thresh;
  8166  0614  086C               	movf	_thresh+1,w	;volatile
  8167  0615  0022               	movlb	2	; select bank2
  8168  0616  00E9               	movwf	(_P+1)^(0+256)	;volatile
  8169  0617  0020               	movlb	0	; select bank0
  8170  0618  086B               	movf	_thresh,w	;volatile
  8171  0619  0022               	movlb	2	; select bank2
  8172  061A  00E8               	movwf	_P^(0+256)	;volatile
  8173                           
  8174                           ;main.c: 196:         T = thresh;
  8175  061B  0020               	movlb	0	; select bank0
  8176  061C  086C               	movf	_thresh+1,w	;volatile
  8177  061D  00EE               	movwf	_T+1	;volatile
  8178  061E  086B               	movf	_thresh,w	;volatile
  8179  061F  00ED               	movwf	_T	;volatile
  8180  0620                     l3840:	
  8181                           
  8182                           ;main.c: 199:     if (N > 2500) {
  8183  0620  0021               	movlb	1	; select bank1
  8184  0621  0838               	movf	(heartBeatCalc@N+1)^(0+128),w
  8185  0622  3A80               	xorlw	128
  8186  0623  00B1               	movwf	??_heartBeatCalc^(0+128)
  8187  0624  3089               	movlw	137
  8188  0625  0231               	subwf	??_heartBeatCalc^(0+128),w
  8189  0626  1D03               	skipz
  8190  0627  2E2A               	goto	u5055
  8191  0628  30C5               	movlw	197
  8192  0629  0237               	subwf	heartBeatCalc@N^(0+128),w
  8193  062A                     u5055:	
  8194  062A  1C03               	skipc
  8195  062B  0008               	return
  8196                           
  8197                           ;main.c: 200:         thresh = 530;
  8198  062C  3012               	movlw	18
  8199  062D  0020               	movlb	0	; select bank0
  8200  062E  00EB               	movwf	_thresh	;volatile
  8201  062F  3002               	movlw	2
  8202  0630  00EC               	movwf	_thresh+1	;volatile
  8203                           
  8204                           ;main.c: 201:         P = 512;
  8205  0631  3000               	movlw	0
  8206  0632  0022               	movlb	2	; select bank2
  8207  0633  00E8               	movwf	_P^(0+256)	;volatile
  8208  0634  3002               	movlw	2
  8209  0635  00E9               	movwf	(_P^(0+256)+1)	;volatile
  8210                           
  8211                           ;main.c: 202:         T = 512;
  8212  0636  3000               	movlw	0
  8213  0637  0020               	movlb	0	; select bank0
  8214  0638  00ED               	movwf	_T	;volatile
  8215  0639  3002               	movlw	2
  8216  063A  00EE               	movwf	_T+1	;volatile
  8217                           
  8218                           ;main.c: 203:         lastBeatTime = sampleCounter;
  8219  063B  085F               	movf	_sampleCounter+3,w	;volatile
  8220  063C  0022               	movlb	2	; select bank2
  8221  063D  00A3               	movwf	(_lastBeatTime+3)^(0+256)	;volatile
  8222  063E  0020               	movlb	0	; select bank0
  8223  063F  085E               	movf	_sampleCounter+2,w	;volatile
  8224  0640  0022               	movlb	2	; select bank2
  8225  0641  00A2               	movwf	(_lastBeatTime+2)^(0+256)	;volatile
  8226  0642  0020               	movlb	0	; select bank0
  8227  0643  085D               	movf	_sampleCounter+1,w	;volatile
  8228  0644  0022               	movlb	2	; select bank2
  8229  0645  00A1               	movwf	(_lastBeatTime+1)^(0+256)	;volatile
  8230  0646  0020               	movlb	0	; select bank0
  8231  0647  085C               	movf	_sampleCounter,w	;volatile
  8232  0648  0022               	movlb	2	; select bank2
  8233  0649  00A0               	movwf	_lastBeatTime^(0+256)	;volatile
  8234                           
  8235                           ;main.c: 204:         firstBeat = 1;
  8236  064A  3001               	movlw	1
  8237  064B  0021               	movlb	1	; select bank1
  8238  064C  00B1               	movwf	??_heartBeatCalc^(0+128)
  8239  064D  0831               	movf	??_heartBeatCalc^(0+128),w
  8240  064E  0020               	movlb	0	; select bank0
  8241  064F  00EF               	movwf	_firstBeat	;volatile
  8242                           
  8243                           ;main.c: 205:         secondBeat = 0;
  8244  0650  01E7               	clrf	_secondBeat	;volatile
  8245  0651  0008               	return
  8246  0652                     __end_of_heartBeatCalc:	
  8247                           
  8248                           	psect	text20
  8249  15B7                     __ptext20:	
  8250 ;; *************** function ___wmul *****************
  8251 ;; Defined at:
  8252 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  8253 ;; Parameters:    Size  Location     Type
  8254 ;;  multiplier      2    9[BANK1 ] unsigned int 
  8255 ;;  multiplicand    2   11[BANK1 ] unsigned int 
  8256 ;; Auto vars:     Size  Location     Type
  8257 ;;  product         2   13[BANK1 ] unsigned int 
  8258 ;; Return value:  Size  Location     Type
  8259 ;;                  2    9[BANK1 ] unsigned int 
  8260 ;; Registers used:
  8261 ;;		wreg, status,2, status,0
  8262 ;; Tracked objects:
  8263 ;;		On entry : 0/0
  8264 ;;		On exit  : 0/0
  8265 ;;		Unchanged: 0/0
  8266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8267 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8268 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8270 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  8271 ;;Total ram usage:        6 bytes
  8272 ;; Hardware stack levels used:    1
  8273 ;; Hardware stack levels required when called:    6
  8274 ;; This function calls:
  8275 ;;		Nothing
  8276 ;; This function is called by:
  8277 ;;		_heartBeatCalc
  8278 ;; This function uses a non-reentrant model
  8279 ;;
  8280                           
  8281                           
  8282                           ;psect for function ___wmul
  8283  15B7                     ___wmul:	
  8284                           
  8285                           ;incstack = 0
  8286                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8287  15B7  0021               	movlb	1	; select bank1
  8288  15B8  01AD               	clrf	___wmul@product^(0+128)
  8289  15B9  01AE               	clrf	(___wmul@product+1)^(0+128)
  8290  15BA                     l3552:	
  8291  15BA  1C29               	btfss	___wmul@multiplier^(0+128),0
  8292  15BB  2DC0               	goto	l591
  8293  15BC  082B               	movf	___wmul@multiplicand^(0+128),w
  8294  15BD  07AD               	addwf	___wmul@product^(0+128),f
  8295  15BE  082C               	movf	(___wmul@multiplicand+1)^(0+128),w
  8296  15BF  3DAE               	addwfc	(___wmul@product+1)^(0+128),f
  8297  15C0                     l591:	
  8298  15C0  3001               	movlw	1
  8299  15C1                     u4515:	
  8300  15C1  35AB               	lslf	___wmul@multiplicand^(0+128),f
  8301  15C2  0DAC               	rlf	(___wmul@multiplicand+1)^(0+128),f
  8302  15C3  0B89               	decfsz	9,f
  8303  15C4  2DC1               	goto	u4515
  8304  15C5  3001               	movlw	1
  8305  15C6                     u4525:	
  8306  15C6  36AA               	lsrf	(___wmul@multiplier+1)^(0+128),f
  8307  15C7  0CA9               	rrf	___wmul@multiplier^(0+128),f
  8308  15C8  0B89               	decfsz	9,f
  8309  15C9  2DC6               	goto	u4525
  8310  15CA  0829               	movf	___wmul@multiplier^(0+128),w
  8311  15CB  042A               	iorwf	(___wmul@multiplier+1)^(0+128),w
  8312  15CC  1D03               	btfss	3,2
  8313  15CD  2DBA               	goto	l3552
  8314  15CE  082E               	movf	(___wmul@product+1)^(0+128),w
  8315  15CF  00AA               	movwf	(?___wmul+1)^(0+128)
  8316  15D0  082D               	movf	___wmul@product^(0+128),w
  8317  15D1  00A9               	movwf	?___wmul^(0+128)
  8318  15D2  0008               	return
  8319  15D3                     __end_of___wmul:	
  8320                           
  8321                           	psect	text21
  8322  16B7                     __ptext21:	
  8323 ;; *************** function ___lwdiv *****************
  8324 ;; Defined at:
  8325 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwdiv.c"
  8326 ;; Parameters:    Size  Location     Type
  8327 ;;  divisor         2    0[BANK1 ] unsigned int 
  8328 ;;  dividend        2    2[BANK1 ] unsigned int 
  8329 ;; Auto vars:     Size  Location     Type
  8330 ;;  quotient        2    5[BANK1 ] unsigned int 
  8331 ;;  counter         1    7[BANK1 ] unsigned char 
  8332 ;; Return value:  Size  Location     Type
  8333 ;;                  2    0[BANK1 ] unsigned int 
  8334 ;; Registers used:
  8335 ;;		wreg, status,2, status,0
  8336 ;; Tracked objects:
  8337 ;;		On entry : 0/0
  8338 ;;		On exit  : 0/0
  8339 ;;		Unchanged: 0/0
  8340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8341 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8342 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  8343 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8344 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  8345 ;;Total ram usage:        8 bytes
  8346 ;; Hardware stack levels used:    1
  8347 ;; Hardware stack levels required when called:    6
  8348 ;; This function calls:
  8349 ;;		Nothing
  8350 ;; This function is called by:
  8351 ;;		_heartBeatCalc
  8352 ;; This function uses a non-reentrant model
  8353 ;;
  8354                           
  8355                           
  8356                           ;psect for function ___lwdiv
  8357  16B7                     ___lwdiv:	
  8358                           
  8359                           ;incstack = 0
  8360                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  8361  16B7  0021               	movlb	1	; select bank1
  8362  16B8  01A5               	clrf	___lwdiv@quotient^(0+128)
  8363  16B9  01A6               	clrf	(___lwdiv@quotient+1)^(0+128)
  8364  16BA  0820               	movf	___lwdiv@divisor^(0+128),w
  8365  16BB  0421               	iorwf	(___lwdiv@divisor+1)^(0+128),w
  8366  16BC  1903               	btfsc	3,2
  8367  16BD  2EE7               	goto	l3670
  8368  16BE  01A7               	clrf	___lwdiv@counter^(0+128)
  8369  16BF  0AA7               	incf	___lwdiv@counter^(0+128),f
  8370  16C0                     l3658:	
  8371  16C0  1BA1               	btfsc	(___lwdiv@divisor+1)^(0+128),7
  8372  16C1  2ECC               	goto	l3660
  8373  16C2  3001               	movlw	1
  8374  16C3                     u4755:	
  8375  16C3  35A0               	lslf	___lwdiv@divisor^(0+128),f
  8376  16C4  0DA1               	rlf	(___lwdiv@divisor+1)^(0+128),f
  8377  16C5  0B89               	decfsz	9,f
  8378  16C6  2EC3               	goto	u4755
  8379  16C7  3001               	movlw	1
  8380  16C8  00A4               	movwf	??___lwdiv^(0+128)
  8381  16C9  0824               	movf	??___lwdiv^(0+128),w
  8382  16CA  07A7               	addwf	___lwdiv@counter^(0+128),f
  8383  16CB  2EC0               	goto	l3658
  8384  16CC                     l3660:	
  8385  16CC  3001               	movlw	1
  8386  16CD                     u4775:	
  8387  16CD  35A5               	lslf	___lwdiv@quotient^(0+128),f
  8388  16CE  0DA6               	rlf	(___lwdiv@quotient+1)^(0+128),f
  8389  16CF  0B89               	decfsz	9,f
  8390  16D0  2ECD               	goto	u4775
  8391  16D1  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
  8392  16D2  0223               	subwf	(___lwdiv@dividend+1)^(0+128),w
  8393  16D3  1D03               	skipz
  8394  16D4  2ED7               	goto	u4785
  8395  16D5  0820               	movf	___lwdiv@divisor^(0+128),w
  8396  16D6  0222               	subwf	___lwdiv@dividend^(0+128),w
  8397  16D7                     u4785:	
  8398  16D7  1C03               	skipc
  8399  16D8  2EDE               	goto	l3666
  8400  16D9  0820               	movf	___lwdiv@divisor^(0+128),w
  8401  16DA  02A2               	subwf	___lwdiv@dividend^(0+128),f
  8402  16DB  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
  8403  16DC  3BA3               	subwfb	(___lwdiv@dividend+1)^(0+128),f
  8404  16DD  1425               	bsf	___lwdiv@quotient^(0+128),0
  8405  16DE                     l3666:	
  8406  16DE  3001               	movlw	1
  8407  16DF                     u4795:	
  8408  16DF  36A1               	lsrf	(___lwdiv@divisor+1)^(0+128),f
  8409  16E0  0CA0               	rrf	___lwdiv@divisor^(0+128),f
  8410  16E1  0B89               	decfsz	9,f
  8411  16E2  2EDF               	goto	u4795
  8412  16E3  3001               	movlw	1
  8413  16E4  02A7               	subwf	___lwdiv@counter^(0+128),f
  8414  16E5  1D03               	btfss	3,2
  8415  16E6  2ECC               	goto	l3660
  8416  16E7                     l3670:	
  8417  16E7  0826               	movf	(___lwdiv@quotient+1)^(0+128),w
  8418  16E8  00A1               	movwf	(?___lwdiv+1)^(0+128)
  8419  16E9  0825               	movf	___lwdiv@quotient^(0+128),w
  8420  16EA  00A0               	movwf	?___lwdiv^(0+128)
  8421  16EB  0008               	return
  8422  16EC                     __end_of___lwdiv:	
  8423                           
  8424                           	psect	text22
  8425  0804                     __ptext22:	
  8426 ;; *************** function ___awdiv *****************
  8427 ;; Defined at:
  8428 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  8429 ;; Parameters:    Size  Location     Type
  8430 ;;  divisor         2    0[BANK1 ] int 
  8431 ;;  dividend        2    2[BANK1 ] int 
  8432 ;; Auto vars:     Size  Location     Type
  8433 ;;  quotient        2    7[BANK1 ] int 
  8434 ;;  sign            1    6[BANK1 ] unsigned char 
  8435 ;;  counter         1    5[BANK1 ] unsigned char 
  8436 ;; Return value:  Size  Location     Type
  8437 ;;                  2    0[BANK1 ] int 
  8438 ;; Registers used:
  8439 ;;		wreg, status,2, status,0
  8440 ;; Tracked objects:
  8441 ;;		On entry : 0/0
  8442 ;;		On exit  : 0/0
  8443 ;;		Unchanged: 0/0
  8444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8445 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8446 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8447 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8448 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  8449 ;;Total ram usage:        9 bytes
  8450 ;; Hardware stack levels used:    1
  8451 ;; Hardware stack levels required when called:    6
  8452 ;; This function calls:
  8453 ;;		Nothing
  8454 ;; This function is called by:
  8455 ;;		_heartBeatCalc
  8456 ;; This function uses a non-reentrant model
  8457 ;;
  8458                           
  8459                           
  8460                           ;psect for function ___awdiv
  8461  0804                     ___awdiv:	
  8462                           
  8463                           ;incstack = 0
  8464                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  8465  0804  0021               	movlb	1	; select bank1
  8466  0805  01A6               	clrf	___awdiv@sign^(0+128)
  8467  0806  1FA1               	btfss	(___awdiv@divisor+1)^(0+128),7
  8468  0807  280F               	goto	l3612
  8469  0808  09A0               	comf	___awdiv@divisor^(0+128),f
  8470  0809  09A1               	comf	(___awdiv@divisor+1)^(0+128),f
  8471  080A  0AA0               	incf	___awdiv@divisor^(0+128),f
  8472  080B  1903               	skipnz
  8473  080C  0AA1               	incf	(___awdiv@divisor+1)^(0+128),f
  8474  080D  01A6               	clrf	___awdiv@sign^(0+128)
  8475  080E  0AA6               	incf	___awdiv@sign^(0+128),f
  8476  080F                     l3612:	
  8477  080F  1FA3               	btfss	(___awdiv@dividend+1)^(0+128),7
  8478  0810  281A               	goto	l3618
  8479  0811  09A2               	comf	___awdiv@dividend^(0+128),f
  8480  0812  09A3               	comf	(___awdiv@dividend+1)^(0+128),f
  8481  0813  0AA2               	incf	___awdiv@dividend^(0+128),f
  8482  0814  1903               	skipnz
  8483  0815  0AA3               	incf	(___awdiv@dividend+1)^(0+128),f
  8484  0816  3001               	movlw	1
  8485  0817  00A4               	movwf	??___awdiv^(0+128)
  8486  0818  0824               	movf	??___awdiv^(0+128),w
  8487  0819  06A6               	xorwf	___awdiv@sign^(0+128),f
  8488  081A                     l3618:	
  8489  081A  01A7               	clrf	___awdiv@quotient^(0+128)
  8490  081B  01A8               	clrf	(___awdiv@quotient+1)^(0+128)
  8491  081C  0820               	movf	___awdiv@divisor^(0+128),w
  8492  081D  0421               	iorwf	(___awdiv@divisor+1)^(0+128),w
  8493  081E  1903               	btfsc	3,2
  8494  081F  2849               	goto	l3640
  8495  0820  01A5               	clrf	___awdiv@counter^(0+128)
  8496  0821  0AA5               	incf	___awdiv@counter^(0+128),f
  8497  0822                     l3628:	
  8498  0822  1BA1               	btfsc	(___awdiv@divisor+1)^(0+128),7
  8499  0823  282E               	goto	l3630
  8500  0824  3001               	movlw	1
  8501  0825                     u4675:	
  8502  0825  35A0               	lslf	___awdiv@divisor^(0+128),f
  8503  0826  0DA1               	rlf	(___awdiv@divisor+1)^(0+128),f
  8504  0827  0B89               	decfsz	9,f
  8505  0828  2825               	goto	u4675
  8506  0829  3001               	movlw	1
  8507  082A  00A4               	movwf	??___awdiv^(0+128)
  8508  082B  0824               	movf	??___awdiv^(0+128),w
  8509  082C  07A5               	addwf	___awdiv@counter^(0+128),f
  8510  082D  2822               	goto	l3628
  8511  082E                     l3630:	
  8512  082E  3001               	movlw	1
  8513  082F                     u4695:	
  8514  082F  35A7               	lslf	___awdiv@quotient^(0+128),f
  8515  0830  0DA8               	rlf	(___awdiv@quotient+1)^(0+128),f
  8516  0831  0B89               	decfsz	9,f
  8517  0832  282F               	goto	u4695
  8518  0833  0821               	movf	(___awdiv@divisor+1)^(0+128),w
  8519  0834  0223               	subwf	(___awdiv@dividend+1)^(0+128),w
  8520  0835  1D03               	skipz
  8521  0836  2839               	goto	u4705
  8522  0837  0820               	movf	___awdiv@divisor^(0+128),w
  8523  0838  0222               	subwf	___awdiv@dividend^(0+128),w
  8524  0839                     u4705:	
  8525  0839  1C03               	skipc
  8526  083A  2840               	goto	l3636
  8527  083B  0820               	movf	___awdiv@divisor^(0+128),w
  8528  083C  02A2               	subwf	___awdiv@dividend^(0+128),f
  8529  083D  0821               	movf	(___awdiv@divisor+1)^(0+128),w
  8530  083E  3BA3               	subwfb	(___awdiv@dividend+1)^(0+128),f
  8531  083F  1427               	bsf	___awdiv@quotient^(0+128),0
  8532  0840                     l3636:	
  8533  0840  3001               	movlw	1
  8534  0841                     u4715:	
  8535  0841  36A1               	lsrf	(___awdiv@divisor+1)^(0+128),f
  8536  0842  0CA0               	rrf	___awdiv@divisor^(0+128),f
  8537  0843  0B89               	decfsz	9,f
  8538  0844  2841               	goto	u4715
  8539  0845  3001               	movlw	1
  8540  0846  02A5               	subwf	___awdiv@counter^(0+128),f
  8541  0847  1D03               	btfss	3,2
  8542  0848  282E               	goto	l3630
  8543  0849                     l3640:	
  8544  0849  0826               	movf	___awdiv@sign^(0+128),w
  8545  084A  1903               	btfsc	3,2
  8546  084B  2851               	goto	l3644
  8547  084C  09A7               	comf	___awdiv@quotient^(0+128),f
  8548  084D  09A8               	comf	(___awdiv@quotient+1)^(0+128),f
  8549  084E  0AA7               	incf	___awdiv@quotient^(0+128),f
  8550  084F  1903               	skipnz
  8551  0850  0AA8               	incf	(___awdiv@quotient+1)^(0+128),f
  8552  0851                     l3644:	
  8553  0851  0828               	movf	(___awdiv@quotient+1)^(0+128),w
  8554  0852  00A1               	movwf	(?___awdiv+1)^(0+128)
  8555  0853  0827               	movf	___awdiv@quotient^(0+128),w
  8556  0854  00A0               	movwf	?___awdiv^(0+128)
  8557  0855  0008               	return
  8558  0856                     __end_of___awdiv:	
  8559                           
  8560                           	psect	text23
  8561  098E                     __ptext23:	
  8562 ;; *************** function ___aldiv *****************
  8563 ;; Defined at:
  8564 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aldiv.c"
  8565 ;; Parameters:    Size  Location     Type
  8566 ;;  divisor         4    0[BANK1 ] long 
  8567 ;;  dividend        4    4[BANK1 ] long 
  8568 ;; Auto vars:     Size  Location     Type
  8569 ;;  quotient        4   11[BANK1 ] long 
  8570 ;;  sign            1   10[BANK1 ] unsigned char 
  8571 ;;  counter         1    9[BANK1 ] unsigned char 
  8572 ;; Return value:  Size  Location     Type
  8573 ;;                  4    0[BANK1 ] long 
  8574 ;; Registers used:
  8575 ;;		wreg, status,2, status,0
  8576 ;; Tracked objects:
  8577 ;;		On entry : 0/0
  8578 ;;		On exit  : 0/0
  8579 ;;		Unchanged: 0/0
  8580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8581 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  8582 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  8583 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8584 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0
  8585 ;;Total ram usage:       15 bytes
  8586 ;; Hardware stack levels used:    1
  8587 ;; Hardware stack levels required when called:    6
  8588 ;; This function calls:
  8589 ;;		Nothing
  8590 ;; This function is called by:
  8591 ;;		_heartBeatCalc
  8592 ;; This function uses a non-reentrant model
  8593 ;;
  8594                           
  8595                           
  8596                           ;psect for function ___aldiv
  8597  098E                     ___aldiv:	
  8598                           
  8599                           ;incstack = 0
  8600                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  8601  098E  0021               	movlb	1	; select bank1
  8602  098F  01AA               	clrf	___aldiv@sign^(0+128)
  8603  0990  1FA3               	btfss	(___aldiv@divisor+3)^(0+128),7
  8604  0991  299F               	goto	l656
  8605  0992  09A0               	comf	___aldiv@divisor^(0+128),f
  8606  0993  09A1               	comf	(___aldiv@divisor+1)^(0+128),f
  8607  0994  09A2               	comf	(___aldiv@divisor+2)^(0+128),f
  8608  0995  09A3               	comf	(___aldiv@divisor+3)^(0+128),f
  8609  0996  0AA0               	incf	___aldiv@divisor^(0+128),f
  8610  0997  1903               	skipnz
  8611  0998  0AA1               	incf	(___aldiv@divisor+1)^(0+128),f
  8612  0999  1903               	skipnz
  8613  099A  0AA2               	incf	(___aldiv@divisor+2)^(0+128),f
  8614  099B  1903               	skipnz
  8615  099C  0AA3               	incf	(___aldiv@divisor+3)^(0+128),f
  8616  099D  01AA               	clrf	___aldiv@sign^(0+128)
  8617  099E  0AAA               	incf	___aldiv@sign^(0+128),f
  8618  099F                     l656:	
  8619  099F  1FA7               	btfss	(___aldiv@dividend+3)^(0+128),7
  8620  09A0  29B0               	goto	l3574
  8621  09A1  09A4               	comf	___aldiv@dividend^(0+128),f
  8622  09A2  09A5               	comf	(___aldiv@dividend+1)^(0+128),f
  8623  09A3  09A6               	comf	(___aldiv@dividend+2)^(0+128),f
  8624  09A4  09A7               	comf	(___aldiv@dividend+3)^(0+128),f
  8625  09A5  0AA4               	incf	___aldiv@dividend^(0+128),f
  8626  09A6  1903               	skipnz
  8627  09A7  0AA5               	incf	(___aldiv@dividend+1)^(0+128),f
  8628  09A8  1903               	skipnz
  8629  09A9  0AA6               	incf	(___aldiv@dividend+2)^(0+128),f
  8630  09AA  1903               	skipnz
  8631  09AB  0AA7               	incf	(___aldiv@dividend+3)^(0+128),f
  8632  09AC  3001               	movlw	1
  8633  09AD  00A8               	movwf	??___aldiv^(0+128)
  8634  09AE  0828               	movf	??___aldiv^(0+128),w
  8635  09AF  06AA               	xorwf	___aldiv@sign^(0+128),f
  8636  09B0                     l3574:	
  8637  09B0  3000               	movlw	0
  8638  09B1  00AE               	movwf	(___aldiv@quotient+3)^(0+128)
  8639  09B2  3000               	movlw	0
  8640  09B3  00AD               	movwf	(___aldiv@quotient+2)^(0+128)
  8641  09B4  3000               	movlw	0
  8642  09B5  00AC               	movwf	(___aldiv@quotient+1)^(0+128)
  8643  09B6  3000               	movlw	0
  8644  09B7  00AB               	movwf	___aldiv@quotient^(0+128)
  8645  09B8  0823               	movf	(___aldiv@divisor+3)^(0+128),w
  8646  09B9  0422               	iorwf	(___aldiv@divisor+2)^(0+128),w
  8647  09BA  0421               	iorwf	(___aldiv@divisor+1)^(0+128),w
  8648  09BB  0420               	iorwf	___aldiv@divisor^(0+128),w
  8649  09BC  1903               	skipnz
  8650  09BD  29F9               	goto	l3596
  8651  09BE  01A9               	clrf	___aldiv@counter^(0+128)
  8652  09BF  0AA9               	incf	___aldiv@counter^(0+128),f
  8653  09C0                     l3582:	
  8654  09C0  1BA3               	btfsc	(___aldiv@divisor+3)^(0+128),7
  8655  09C1  29CE               	goto	l3584
  8656  09C2  3001               	movlw	1
  8657  09C3                     u4575:	
  8658  09C3  35A0               	lslf	___aldiv@divisor^(0+128),f
  8659  09C4  0DA1               	rlf	(___aldiv@divisor+1)^(0+128),f
  8660  09C5  0DA2               	rlf	(___aldiv@divisor+2)^(0+128),f
  8661  09C6  0DA3               	rlf	(___aldiv@divisor+3)^(0+128),f
  8662  09C7  0B89               	decfsz	9,f
  8663  09C8  29C3               	goto	u4575
  8664  09C9  3001               	movlw	1
  8665  09CA  00A8               	movwf	??___aldiv^(0+128)
  8666  09CB  0828               	movf	??___aldiv^(0+128),w
  8667  09CC  07A9               	addwf	___aldiv@counter^(0+128),f
  8668  09CD  29C0               	goto	l3582
  8669  09CE                     l3584:	
  8670  09CE  3001               	movlw	1
  8671  09CF                     u4595:	
  8672  09CF  35AB               	lslf	___aldiv@quotient^(0+128),f
  8673  09D0  0DAC               	rlf	(___aldiv@quotient+1)^(0+128),f
  8674  09D1  0DAD               	rlf	(___aldiv@quotient+2)^(0+128),f
  8675  09D2  0DAE               	rlf	(___aldiv@quotient+3)^(0+128),f
  8676  09D3  0B89               	decfsz	9,f
  8677  09D4  29CF               	goto	u4595
  8678  09D5  0823               	movf	(___aldiv@divisor+3)^(0+128),w
  8679  09D6  0227               	subwf	(___aldiv@dividend+3)^(0+128),w
  8680  09D7  1D03               	skipz
  8681  09D8  29E3               	goto	u4605
  8682  09D9  0822               	movf	(___aldiv@divisor+2)^(0+128),w
  8683  09DA  0226               	subwf	(___aldiv@dividend+2)^(0+128),w
  8684  09DB  1D03               	skipz
  8685  09DC  29E3               	goto	u4605
  8686  09DD  0821               	movf	(___aldiv@divisor+1)^(0+128),w
  8687  09DE  0225               	subwf	(___aldiv@dividend+1)^(0+128),w
  8688  09DF  1D03               	skipz
  8689  09E0  29E3               	goto	u4605
  8690  09E1  0820               	movf	___aldiv@divisor^(0+128),w
  8691  09E2  0224               	subwf	___aldiv@dividend^(0+128),w
  8692  09E3                     u4605:	
  8693  09E3  1C03               	skipc
  8694  09E4  29EE               	goto	l3592
  8695  09E5  0820               	movf	___aldiv@divisor^(0+128),w
  8696  09E6  02A4               	subwf	___aldiv@dividend^(0+128),f
  8697  09E7  0821               	movf	(___aldiv@divisor+1)^(0+128),w
  8698  09E8  3BA5               	subwfb	(___aldiv@dividend+1)^(0+128),f
  8699  09E9  0822               	movf	(___aldiv@divisor+2)^(0+128),w
  8700  09EA  3BA6               	subwfb	(___aldiv@dividend+2)^(0+128),f
  8701  09EB  0823               	movf	(___aldiv@divisor+3)^(0+128),w
  8702  09EC  3BA7               	subwfb	(___aldiv@dividend+3)^(0+128),f
  8703  09ED  142B               	bsf	___aldiv@quotient^(0+128),0
  8704  09EE                     l3592:	
  8705  09EE  3001               	movlw	1
  8706  09EF                     u4615:	
  8707  09EF  36A3               	lsrf	(___aldiv@divisor+3)^(0+128),f
  8708  09F0  0CA2               	rrf	(___aldiv@divisor+2)^(0+128),f
  8709  09F1  0CA1               	rrf	(___aldiv@divisor+1)^(0+128),f
  8710  09F2  0CA0               	rrf	___aldiv@divisor^(0+128),f
  8711  09F3  0B89               	decfsz	9,f
  8712  09F4  29EF               	goto	u4615
  8713  09F5  3001               	movlw	1
  8714  09F6  02A9               	subwf	___aldiv@counter^(0+128),f
  8715  09F7  1D03               	btfss	3,2
  8716  09F8  29CE               	goto	l3584
  8717  09F9                     l3596:	
  8718  09F9  082A               	movf	___aldiv@sign^(0+128),w
  8719  09FA  1903               	btfsc	3,2
  8720  09FB  2A07               	goto	l3600
  8721  09FC  09AB               	comf	___aldiv@quotient^(0+128),f
  8722  09FD  09AC               	comf	(___aldiv@quotient+1)^(0+128),f
  8723  09FE  09AD               	comf	(___aldiv@quotient+2)^(0+128),f
  8724  09FF  09AE               	comf	(___aldiv@quotient+3)^(0+128),f
  8725  0A00  0AAB               	incf	___aldiv@quotient^(0+128),f
  8726  0A01  1903               	skipnz
  8727  0A02  0AAC               	incf	(___aldiv@quotient+1)^(0+128),f
  8728  0A03  1903               	skipnz
  8729  0A04  0AAD               	incf	(___aldiv@quotient+2)^(0+128),f
  8730  0A05  1903               	skipnz
  8731  0A06  0AAE               	incf	(___aldiv@quotient+3)^(0+128),f
  8732  0A07                     l3600:	
  8733  0A07  082E               	movf	(___aldiv@quotient+3)^(0+128),w
  8734  0A08  00A3               	movwf	(?___aldiv+3)^(0+128)
  8735  0A09  082D               	movf	(___aldiv@quotient+2)^(0+128),w
  8736  0A0A  00A2               	movwf	(?___aldiv+2)^(0+128)
  8737  0A0B  082C               	movf	(___aldiv@quotient+1)^(0+128),w
  8738  0A0C  00A1               	movwf	(?___aldiv+1)^(0+128)
  8739  0A0D  082B               	movf	___aldiv@quotient^(0+128),w
  8740  0A0E  00A0               	movwf	?___aldiv^(0+128)
  8741  0A0F  0008               	return
  8742  0A10                     __end_of___aldiv:	
  8743                           
  8744                           	psect	text24
  8745  0912                     __ptext24:	
  8746 ;; *************** function ___flge *****************
  8747 ;; Defined at:
  8748 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
  8749 ;; Parameters:    Size  Location     Type
  8750 ;;  ff1             4    0[BANK1 ] long 
  8751 ;;  ff2             4    4[BANK1 ] long 
  8752 ;; Auto vars:     Size  Location     Type
  8753 ;;		None
  8754 ;; Return value:  Size  Location     Type
  8755 ;;		None               void
  8756 ;; Registers used:
  8757 ;;		wreg, status,2, status,0
  8758 ;; Tracked objects:
  8759 ;;		On entry : 0/0
  8760 ;;		On exit  : 0/0
  8761 ;;		Unchanged: 0/0
  8762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8763 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  8764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8765 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8766 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  8767 ;;Total ram usage:       12 bytes
  8768 ;; Hardware stack levels used:    1
  8769 ;; Hardware stack levels required when called:    6
  8770 ;; This function calls:
  8771 ;;		Nothing
  8772 ;; This function is called by:
  8773 ;;		_main
  8774 ;; This function uses a non-reentrant model
  8775 ;;
  8776                           
  8777                           
  8778                           ;psect for function ___flge
  8779  0912                     ___flge:	
  8780                           
  8781                           ;incstack = 0
  8782                           ; Regs used in ___flge: [wreg+status,2+status,0]
  8783  0912  3000               	movlw	0
  8784  0913  0021               	movlb	1	; select bank1
  8785  0914  0520               	andwf	___flge@ff1^(0+128),w
  8786  0915  00A8               	movwf	??___flge^(0+128)
  8787  0916  3000               	movlw	0
  8788  0917  0521               	andwf	(___flge@ff1+1)^(0+128),w
  8789  0918  00A9               	movwf	(??___flge^(0+128)+1)
  8790  0919  3080               	movlw	128
  8791  091A  0522               	andwf	(___flge@ff1+2)^(0+128),w
  8792  091B  00AA               	movwf	(??___flge^(0+128)+2)
  8793  091C  307F               	movlw	127
  8794  091D  0523               	andwf	(___flge@ff1+3)^(0+128),w
  8795  091E  00AB               	movwf	(??___flge^(0+128)+3)
  8796  091F  082B               	movf	(??___flge+3)^(0+128),w
  8797  0920  042A               	iorwf	(??___flge+2)^(0+128),w
  8798  0921  0429               	iorwf	(??___flge+1)^(0+128),w
  8799  0922  0428               	iorwf	??___flge^(0+128),w
  8800  0923  1D03               	skipz
  8801  0924  292D               	goto	l769
  8802  0925  3000               	movlw	0
  8803  0926  00A3               	movwf	(___flge@ff1+3)^(0+128)
  8804  0927  3000               	movlw	0
  8805  0928  00A2               	movwf	(___flge@ff1+2)^(0+128)
  8806  0929  3000               	movlw	0
  8807  092A  00A1               	movwf	(___flge@ff1+1)^(0+128)
  8808  092B  3000               	movlw	0
  8809  092C  00A0               	movwf	___flge@ff1^(0+128)
  8810  092D                     l769:	
  8811  092D  3000               	movlw	0
  8812  092E  0524               	andwf	___flge@ff2^(0+128),w
  8813  092F  00A8               	movwf	??___flge^(0+128)
  8814  0930  3000               	movlw	0
  8815  0931  0525               	andwf	(___flge@ff2+1)^(0+128),w
  8816  0932  00A9               	movwf	(??___flge^(0+128)+1)
  8817  0933  3080               	movlw	128
  8818  0934  0526               	andwf	(___flge@ff2+2)^(0+128),w
  8819  0935  00AA               	movwf	(??___flge^(0+128)+2)
  8820  0936  307F               	movlw	127
  8821  0937  0527               	andwf	(___flge@ff2+3)^(0+128),w
  8822  0938  00AB               	movwf	(??___flge^(0+128)+3)
  8823  0939  082B               	movf	(??___flge+3)^(0+128),w
  8824  093A  042A               	iorwf	(??___flge+2)^(0+128),w
  8825  093B  0429               	iorwf	(??___flge+1)^(0+128),w
  8826  093C  0428               	iorwf	??___flge^(0+128),w
  8827  093D  1D03               	skipz
  8828  093E  2947               	goto	l3888
  8829  093F  3000               	movlw	0
  8830  0940  00A7               	movwf	(___flge@ff2+3)^(0+128)
  8831  0941  3000               	movlw	0
  8832  0942  00A6               	movwf	(___flge@ff2+2)^(0+128)
  8833  0943  3000               	movlw	0
  8834  0944  00A5               	movwf	(___flge@ff2+1)^(0+128)
  8835  0945  3000               	movlw	0
  8836  0946  00A4               	movwf	___flge@ff2^(0+128)
  8837  0947                     l3888:	
  8838  0947  1FA3               	btfss	(___flge@ff1+3)^(0+128),7
  8839  0948  2961               	goto	l3892
  8840  0949  3000               	movlw	0
  8841  094A  00A8               	movwf	??___flge^(0+128)
  8842  094B  3000               	movlw	0
  8843  094C  00A9               	movwf	(??___flge^(0+128)+1)
  8844  094D  3000               	movlw	0
  8845  094E  00AA               	movwf	(??___flge^(0+128)+2)
  8846  094F  3080               	movlw	128
  8847  0950  00AB               	movwf	(??___flge^(0+128)+3)
  8848  0951  0820               	movf	___flge@ff1^(0+128),w
  8849  0952  02A8               	subwf	??___flge^(0+128),f
  8850  0953  0821               	movf	(___flge@ff1+1)^(0+128),w
  8851  0954  3BA9               	subwfb	(??___flge^(0+128)+1),f
  8852  0955  0822               	movf	(___flge@ff1+2)^(0+128),w
  8853  0956  3BAA               	subwfb	(??___flge^(0+128)+2),f
  8854  0957  0823               	movf	(___flge@ff1+3)^(0+128),w
  8855  0958  3BAB               	subwfb	(??___flge^(0+128)+3),f
  8856  0959  082B               	movf	(??___flge+3)^(0+128),w
  8857  095A  00A3               	movwf	(___flge@ff1+3)^(0+128)
  8858  095B  082A               	movf	(??___flge+2)^(0+128),w
  8859  095C  00A2               	movwf	(___flge@ff1+2)^(0+128)
  8860  095D  0829               	movf	(??___flge+1)^(0+128),w
  8861  095E  00A1               	movwf	(___flge@ff1+1)^(0+128)
  8862  095F  0828               	movf	??___flge^(0+128),w
  8863  0960  00A0               	movwf	___flge@ff1^(0+128)
  8864  0961                     l3892:	
  8865  0961  1FA7               	btfss	(___flge@ff2+3)^(0+128),7
  8866  0962  297B               	goto	l772
  8867  0963  3000               	movlw	0
  8868  0964  00A8               	movwf	??___flge^(0+128)
  8869  0965  3000               	movlw	0
  8870  0966  00A9               	movwf	(??___flge^(0+128)+1)
  8871  0967  3000               	movlw	0
  8872  0968  00AA               	movwf	(??___flge^(0+128)+2)
  8873  0969  3080               	movlw	128
  8874  096A  00AB               	movwf	(??___flge^(0+128)+3)
  8875  096B  0824               	movf	___flge@ff2^(0+128),w
  8876  096C  02A8               	subwf	??___flge^(0+128),f
  8877  096D  0825               	movf	(___flge@ff2+1)^(0+128),w
  8878  096E  3BA9               	subwfb	(??___flge^(0+128)+1),f
  8879  096F  0826               	movf	(___flge@ff2+2)^(0+128),w
  8880  0970  3BAA               	subwfb	(??___flge^(0+128)+2),f
  8881  0971  0827               	movf	(___flge@ff2+3)^(0+128),w
  8882  0972  3BAB               	subwfb	(??___flge^(0+128)+3),f
  8883  0973  082B               	movf	(??___flge+3)^(0+128),w
  8884  0974  00A7               	movwf	(___flge@ff2+3)^(0+128)
  8885  0975  082A               	movf	(??___flge+2)^(0+128),w
  8886  0976  00A6               	movwf	(___flge@ff2+2)^(0+128)
  8887  0977  0829               	movf	(??___flge+1)^(0+128),w
  8888  0978  00A5               	movwf	(___flge@ff2+1)^(0+128)
  8889  0979  0828               	movf	??___flge^(0+128),w
  8890  097A  00A4               	movwf	___flge@ff2^(0+128)
  8891  097B                     l772:	
  8892  097B  3080               	movlw	128
  8893  097C  06A3               	xorwf	(___flge@ff1+3)^(0+128),f
  8894  097D  3080               	movlw	128
  8895  097E  06A7               	xorwf	(___flge@ff2+3)^(0+128),f
  8896  097F  0827               	movf	(___flge@ff2+3)^(0+128),w
  8897  0980  0223               	subwf	(___flge@ff1+3)^(0+128),w
  8898  0981  1D03               	skipz
  8899  0982  0008               	return
  8900  0983  0826               	movf	(___flge@ff2+2)^(0+128),w
  8901  0984  0222               	subwf	(___flge@ff1+2)^(0+128),w
  8902  0985  1D03               	skipz
  8903  0986  0008               	return
  8904  0987  0825               	movf	(___flge@ff2+1)^(0+128),w
  8905  0988  0221               	subwf	(___flge@ff1+1)^(0+128),w
  8906  0989  1D03               	skipz
  8907  098A  0008               	return
  8908  098B  0824               	movf	___flge@ff2^(0+128),w
  8909  098C  0220               	subwf	___flge@ff1^(0+128),w
  8910  098D  0008               	return
  8911  098E                     __end_of___flge:	
  8912                           
  8913                           	psect	text25
  8914  14F0                     __ptext25:	
  8915 ;; *************** function _SYSTEM_Initialize *****************
  8916 ;; Defined at:
  8917 ;;		line 4 in file "mcc_generated_files/mcc.c"
  8918 ;; Parameters:    Size  Location     Type
  8919 ;;		None
  8920 ;; Auto vars:     Size  Location     Type
  8921 ;;		None
  8922 ;; Return value:  Size  Location     Type
  8923 ;;                  1    wreg      void 
  8924 ;; Registers used:
  8925 ;;		wreg, status,2, status,0, pclath, cstack
  8926 ;; Tracked objects:
  8927 ;;		On entry : 0/0
  8928 ;;		On exit  : 0/0
  8929 ;;		Unchanged: 0/0
  8930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8935 ;;Total ram usage:        0 bytes
  8936 ;; Hardware stack levels used:    1
  8937 ;; Hardware stack levels required when called:    8
  8938 ;; This function calls:
  8939 ;;		_ADC_Initialize
  8940 ;;		_EUSART_Initialize
  8941 ;;		_OSCILLATOR_Initialize
  8942 ;;		_PIN_MANAGER_Initialize
  8943 ;;		_TMR0_Initialize
  8944 ;; This function is called by:
  8945 ;;		_main
  8946 ;; This function uses a non-reentrant model
  8947 ;;
  8948                           
  8949                           
  8950                           ;psect for function _SYSTEM_Initialize
  8951  14F0                     _SYSTEM_Initialize:	
  8952                           
  8953                           ;mcc_generated_files/mcc.c: 6:     PIN_MANAGER_Initialize();
  8954                           
  8955                           ;incstack = 0
  8956                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8957  14F0  3187  27CC  3194   	fcall	_PIN_MANAGER_Initialize
  8958                           
  8959                           ;mcc_generated_files/mcc.c: 7:     OSCILLATOR_Initialize();
  8960  14F3  3194  2480  3194   	fcall	_OSCILLATOR_Initialize
  8961                           
  8962                           ;mcc_generated_files/mcc.c: 8:     ADC_Initialize();
  8963  14F6  3194  248E  3194   	fcall	_ADC_Initialize
  8964                           
  8965                           ;mcc_generated_files/mcc.c: 9:     TMR0_Initialize();
  8966  14F9  3195  2539  3194   	fcall	_TMR0_Initialize
  8967                           
  8968                           ;mcc_generated_files/mcc.c: 10:     EUSART_Initialize();
  8969  14FC  3196  2637         	fcall	_EUSART_Initialize
  8970  14FE  0008               	return
  8971  14FF                     __end_of_SYSTEM_Initialize:	
  8972                           
  8973                           	psect	text26
  8974  1539                     __ptext26:	
  8975 ;; *************** function _TMR0_Initialize *****************
  8976 ;; Defined at:
  8977 ;;		line 18 in file "mcc_generated_files/tmr0.c"
  8978 ;; Parameters:    Size  Location     Type
  8979 ;;		None
  8980 ;; Auto vars:     Size  Location     Type
  8981 ;;		None
  8982 ;; Return value:  Size  Location     Type
  8983 ;;                  1    wreg      void 
  8984 ;; Registers used:
  8985 ;;		wreg, status,2, status,0, pclath, cstack
  8986 ;; Tracked objects:
  8987 ;;		On entry : 0/0
  8988 ;;		On exit  : 0/0
  8989 ;;		Unchanged: 0/0
  8990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8993 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8994 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8995 ;;Total ram usage:        1 bytes
  8996 ;; Hardware stack levels used:    1
  8997 ;; Hardware stack levels required when called:    7
  8998 ;; This function calls:
  8999 ;;		_TMR0_SetInterruptHandler
  9000 ;; This function is called by:
  9001 ;;		_SYSTEM_Initialize
  9002 ;; This function uses a non-reentrant model
  9003 ;;
  9004                           
  9005                           
  9006                           ;psect for function _TMR0_Initialize
  9007  1539                     _TMR0_Initialize:	
  9008                           
  9009                           ;mcc_generated_files/tmr0.c: 23:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD4 
      +                          & 0x3F));
  9010                           
  9011                           ;incstack = 0
  9012                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9013  1539  0021               	movlb	1	; select bank1
  9014  153A  0815               	movf	21,w	;volatile
  9015  153B  39C0               	andlw	192
  9016  153C  3814               	iorlw	20
  9017  153D  0095               	movwf	21	;volatile
  9018                           
  9019                           ;mcc_generated_files/tmr0.c: 26:     TMR0 = 0x83;
  9020  153E  3083               	movlw	131
  9021  153F  0020               	movlb	0	; select bank0
  9022  1540  0095               	movwf	21	;volatile
  9023                           
  9024                           ;mcc_generated_files/tmr0.c: 29:     timer0ReloadVal= 131;
  9025  1541  3083               	movlw	131
  9026  1542  0021               	movlb	1	; select bank1
  9027  1543  00A2               	movwf	??_TMR0_Initialize^(0+128)
  9028  1544  0822               	movf	??_TMR0_Initialize^(0+128),w
  9029  1545  0022               	movlb	2	; select bank2
  9030  1546  00E7               	movwf	_timer0ReloadVal^(0+256)	;volatile
  9031                           
  9032                           ;mcc_generated_files/tmr0.c: 32:     INTCONbits.TMR0IF = 0;
  9033  1547  110B               	bcf	11,2	;volatile
  9034                           
  9035                           ;mcc_generated_files/tmr0.c: 35:     INTCONbits.TMR0IE = 1;
  9036  1548  168B               	bsf	11,5	;volatile
  9037                           
  9038                           ;mcc_generated_files/tmr0.c: 38:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  9039  1549  30FF               	movlw	low _TMR0_DefaultInterruptHandler
  9040  154A  0021               	movlb	1	; select bank1
  9041  154B  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler^(0+128)
  9042  154C  3007               	movlw	high _TMR0_DefaultInterruptHandler
  9043  154D  00A1               	movwf	(TMR0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  9044  154E  3194  24C2         	fcall	_TMR0_SetInterruptHandler
  9045  1550  0008               	return
  9046  1551                     __end_of_TMR0_Initialize:	
  9047                           
  9048                           	psect	text27
  9049  14C2                     __ptext27:	
  9050 ;; *************** function _TMR0_SetInterruptHandler *****************
  9051 ;; Defined at:
  9052 ;;		line 79 in file "mcc_generated_files/tmr0.c"
  9053 ;; Parameters:    Size  Location     Type
  9054 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  9055 ;;		 -> timerISR(1), TMR0_DefaultInterruptHandler(1), 
  9056 ;; Auto vars:     Size  Location     Type
  9057 ;;		None
  9058 ;; Return value:  Size  Location     Type
  9059 ;;                  1    wreg      void 
  9060 ;; Registers used:
  9061 ;;		wreg
  9062 ;; Tracked objects:
  9063 ;;		On entry : 0/0
  9064 ;;		On exit  : 0/0
  9065 ;;		Unchanged: 0/0
  9066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9067 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9070 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9071 ;;Total ram usage:        2 bytes
  9072 ;; Hardware stack levels used:    1
  9073 ;; Hardware stack levels required when called:    6
  9074 ;; This function calls:
  9075 ;;		Nothing
  9076 ;; This function is called by:
  9077 ;;		_TMR0_Initialize
  9078 ;;		_main
  9079 ;; This function uses a non-reentrant model
  9080 ;;
  9081                           
  9082                           
  9083                           ;psect for function _TMR0_SetInterruptHandler
  9084  14C2                     _TMR0_SetInterruptHandler:	
  9085                           
  9086                           ;mcc_generated_files/tmr0.c: 80:     TMR0_InterruptHandler = InterruptHandler;
  9087                           
  9088                           ;incstack = 0
  9089                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  9090  14C2  0021               	movlb	1	; select bank1
  9091  14C3  0821               	movf	(TMR0_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  9092  14C4  0022               	movlb	2	; select bank2
  9093  14C5  00DE               	movwf	(_TMR0_InterruptHandler+1)^(0+256)
  9094  14C6  0021               	movlb	1	; select bank1
  9095  14C7  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler^(0+128),w
  9096  14C8  0022               	movlb	2	; select bank2
  9097  14C9  00DD               	movwf	_TMR0_InterruptHandler^(0+256)
  9098  14CA  0008               	return
  9099  14CB                     __end_of_TMR0_SetInterruptHandler:	
  9100                           
  9101                           	psect	text28
  9102  07CC                     __ptext28:	
  9103 ;; *************** function _PIN_MANAGER_Initialize *****************
  9104 ;; Defined at:
  9105 ;;		line 6 in file "mcc_generated_files/pin_manager.c"
  9106 ;; Parameters:    Size  Location     Type
  9107 ;;		None
  9108 ;; Auto vars:     Size  Location     Type
  9109 ;;		None
  9110 ;; Return value:  Size  Location     Type
  9111 ;;                  1    wreg      void 
  9112 ;; Registers used:
  9113 ;;		wreg, status,2, status,0, pclath, cstack
  9114 ;; Tracked objects:
  9115 ;;		On entry : 0/0
  9116 ;;		On exit  : 0/0
  9117 ;;		Unchanged: 0/0
  9118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9122 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9123 ;;Total ram usage:        0 bytes
  9124 ;; Hardware stack levels used:    1
  9125 ;; Hardware stack levels required when called:    7
  9126 ;; This function calls:
  9127 ;;		_IOCCF7_SetInterruptHandler
  9128 ;; This function is called by:
  9129 ;;		_SYSTEM_Initialize
  9130 ;; This function uses a non-reentrant model
  9131 ;;
  9132                           
  9133                           
  9134                           ;psect for function _PIN_MANAGER_Initialize
  9135  07CC                     _PIN_MANAGER_Initialize:	
  9136                           
  9137                           ;mcc_generated_files/pin_manager.c: 11:     LATA = 0x00;
  9138                           
  9139                           ;incstack = 0
  9140                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9141  07CC  0022               	movlb	2	; select bank2
  9142  07CD  018C               	clrf	12	;volatile
  9143                           
  9144                           ;mcc_generated_files/pin_manager.c: 12:     LATB = 0x00;
  9145  07CE  018D               	clrf	13	;volatile
  9146                           
  9147                           ;mcc_generated_files/pin_manager.c: 13:     LATC = 0x00;
  9148  07CF  018E               	clrf	14	;volatile
  9149                           
  9150                           ;mcc_generated_files/pin_manager.c: 18:     TRISA = 0x37;
  9151  07D0  3037               	movlw	55
  9152  07D1  0021               	movlb	1	; select bank1
  9153  07D2  008C               	movwf	12	;volatile
  9154                           
  9155                           ;mcc_generated_files/pin_manager.c: 19:     TRISB = 0x70;
  9156  07D3  3070               	movlw	112
  9157  07D4  008D               	movwf	13	;volatile
  9158                           
  9159                           ;mcc_generated_files/pin_manager.c: 20:     TRISC = 0xFF;
  9160  07D5  30FF               	movlw	255
  9161  07D6  008E               	movwf	14	;volatile
  9162                           
  9163                           ;mcc_generated_files/pin_manager.c: 25:     ANSELC = 0x4F;
  9164  07D7  304F               	movlw	79
  9165  07D8  0023               	movlb	3	; select bank3
  9166  07D9  008E               	movwf	14	;volatile
  9167                           
  9168                           ;mcc_generated_files/pin_manager.c: 26:     ANSELB = 0x70;
  9169  07DA  3070               	movlw	112
  9170  07DB  008D               	movwf	13	;volatile
  9171                           
  9172                           ;mcc_generated_files/pin_manager.c: 27:     ANSELA = 0x17;
  9173  07DC  3017               	movlw	23
  9174  07DD  008C               	movwf	12	;volatile
  9175                           
  9176                           ;mcc_generated_files/pin_manager.c: 32:     WPUB = 0x00;
  9177  07DE  0024               	movlb	4	; select bank4
  9178  07DF  018D               	clrf	13	;volatile
  9179                           
  9180                           ;mcc_generated_files/pin_manager.c: 33:     WPUA = 0x00;
  9181  07E0  018C               	clrf	12	;volatile
  9182                           
  9183                           ;mcc_generated_files/pin_manager.c: 34:     WPUC = 0x00;
  9184  07E1  018E               	clrf	14	;volatile
  9185                           
  9186                           ;mcc_generated_files/pin_manager.c: 35:     OPTION_REGbits.nWPUEN = 1;
  9187  07E2  0021               	movlb	1	; select bank1
  9188  07E3  1795               	bsf	21,7	;volatile
  9189                           
  9190                           ;mcc_generated_files/pin_manager.c: 40:     ODCONA = 0x00;
  9191  07E4  0025               	movlb	5	; select bank5
  9192  07E5  018C               	clrf	12	;volatile
  9193                           
  9194                           ;mcc_generated_files/pin_manager.c: 41:     ODCONB = 0x00;
  9195  07E6  018D               	clrf	13	;volatile
  9196                           
  9197                           ;mcc_generated_files/pin_manager.c: 42:     ODCONC = 0x00;
  9198  07E7  018E               	clrf	14	;volatile
  9199                           
  9200                           ;mcc_generated_files/pin_manager.c: 47:     SLRCONA = 0x37;
  9201  07E8  3037               	movlw	55
  9202  07E9  0026               	movlb	6	; select bank6
  9203  07EA  008C               	movwf	12	;volatile
  9204                           
  9205                           ;mcc_generated_files/pin_manager.c: 48:     SLRCONB = 0xF0;
  9206  07EB  30F0               	movlw	240
  9207  07EC  008D               	movwf	13	;volatile
  9208                           
  9209                           ;mcc_generated_files/pin_manager.c: 49:     SLRCONC = 0xFF;
  9210  07ED  30FF               	movlw	255
  9211  07EE  008E               	movwf	14	;volatile
  9212                           
  9213                           ;mcc_generated_files/pin_manager.c: 56:     IOCCFbits.IOCCF7 = 0;
  9214  07EF  0027               	movlb	7	; select bank7
  9215  07F0  1399               	bcf	25,7	;volatile
  9216                           
  9217                           ;mcc_generated_files/pin_manager.c: 58:     IOCCNbits.IOCCN7 = 0;
  9218  07F1  1398               	bcf	24,7	;volatile
  9219                           
  9220                           ;mcc_generated_files/pin_manager.c: 60:     IOCCPbits.IOCCP7 = 1;
  9221  07F2  1797               	bsf	23,7	;volatile
  9222                           
  9223                           ;mcc_generated_files/pin_manager.c: 65:     IOCCF7_SetInterruptHandler(IOCCF7_DefaultInt
      +                          erruptHandler);
  9224  07F3  3003               	movlw	low _IOCCF7_DefaultInterruptHandler
  9225  07F4  0021               	movlb	1	; select bank1
  9226  07F5  00A0               	movwf	IOCCF7_SetInterruptHandler@InterruptHandler^(0+128)
  9227  07F6  3008               	movlw	high _IOCCF7_DefaultInterruptHandler
  9228  07F7  00A1               	movwf	(IOCCF7_SetInterruptHandler@InterruptHandler^(0+128)+1)
  9229  07F8  3194  24B9         	fcall	_IOCCF7_SetInterruptHandler
  9230                           
  9231                           ;mcc_generated_files/pin_manager.c: 68:     INTCONbits.IOCIE = 1;
  9232  07FA  158B               	bsf	11,3	;volatile
  9233                           
  9234                           ;mcc_generated_files/pin_manager.c: 71:     RB7PPS = 0x12;
  9235  07FB  3012               	movlw	18
  9236  07FC  003D               	movlb	29	; select bank29
  9237  07FD  009F               	movwf	31	;volatile
  9238  07FE  0008               	return
  9239  07FF                     __end_of_PIN_MANAGER_Initialize:	
  9240                           
  9241                           	psect	text29
  9242  14B9                     __ptext29:	
  9243 ;; *************** function _IOCCF7_SetInterruptHandler *****************
  9244 ;; Defined at:
  9245 ;;		line 101 in file "mcc_generated_files/pin_manager.c"
  9246 ;; Parameters:    Size  Location     Type
  9247 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  9248 ;;		 -> speedCalc(1), IOCCF7_DefaultInterruptHandler(1), 
  9249 ;; Auto vars:     Size  Location     Type
  9250 ;;		None
  9251 ;; Return value:  Size  Location     Type
  9252 ;;                  1    wreg      void 
  9253 ;; Registers used:
  9254 ;;		wreg
  9255 ;; Tracked objects:
  9256 ;;		On entry : 0/0
  9257 ;;		On exit  : 0/0
  9258 ;;		Unchanged: 0/0
  9259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9260 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9263 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9264 ;;Total ram usage:        2 bytes
  9265 ;; Hardware stack levels used:    1
  9266 ;; Hardware stack levels required when called:    6
  9267 ;; This function calls:
  9268 ;;		Nothing
  9269 ;; This function is called by:
  9270 ;;		_PIN_MANAGER_Initialize
  9271 ;;		_main
  9272 ;; This function uses a non-reentrant model
  9273 ;;
  9274                           
  9275                           
  9276                           ;psect for function _IOCCF7_SetInterruptHandler
  9277  14B9                     _IOCCF7_SetInterruptHandler:	
  9278                           
  9279                           ;mcc_generated_files/pin_manager.c: 102:     IOCCF7_InterruptHandler = InterruptHandler;
  9280                           
  9281                           ;incstack = 0
  9282                           ; Regs used in _IOCCF7_SetInterruptHandler: [wreg]
  9283  14B9  0021               	movlb	1	; select bank1
  9284  14BA  0821               	movf	(IOCCF7_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  9285  14BB  0022               	movlb	2	; select bank2
  9286  14BC  00E0               	movwf	(_IOCCF7_InterruptHandler+1)^(0+256)
  9287  14BD  0021               	movlb	1	; select bank1
  9288  14BE  0820               	movf	IOCCF7_SetInterruptHandler@InterruptHandler^(0+128),w
  9289  14BF  0022               	movlb	2	; select bank2
  9290  14C0  00DF               	movwf	_IOCCF7_InterruptHandler^(0+256)
  9291  14C1  0008               	return
  9292  14C2                     __end_of_IOCCF7_SetInterruptHandler:	
  9293                           
  9294                           	psect	text30
  9295  1480                     __ptext30:	
  9296 ;; *************** function _OSCILLATOR_Initialize *****************
  9297 ;; Defined at:
  9298 ;;		line 13 in file "mcc_generated_files/mcc.c"
  9299 ;; Parameters:    Size  Location     Type
  9300 ;;		None
  9301 ;; Auto vars:     Size  Location     Type
  9302 ;;		None
  9303 ;; Return value:  Size  Location     Type
  9304 ;;                  1    wreg      void 
  9305 ;; Registers used:
  9306 ;;		wreg, status,2
  9307 ;; Tracked objects:
  9308 ;;		On entry : 0/0
  9309 ;;		On exit  : 0/0
  9310 ;;		Unchanged: 0/0
  9311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9316 ;;Total ram usage:        0 bytes
  9317 ;; Hardware stack levels used:    1
  9318 ;; Hardware stack levels required when called:    6
  9319 ;; This function calls:
  9320 ;;		Nothing
  9321 ;; This function is called by:
  9322 ;;		_SYSTEM_Initialize
  9323 ;; This function uses a non-reentrant model
  9324 ;;
  9325                           
  9326                           
  9327                           ;psect for function _OSCILLATOR_Initialize
  9328  1480                     _OSCILLATOR_Initialize:	
  9329                           
  9330                           ;mcc_generated_files/mcc.c: 16:     OSCCON = 0x7A;
  9331                           
  9332                           ;incstack = 0
  9333                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  9334  1480  307A               	movlw	122
  9335  1481  0021               	movlb	1	; select bank1
  9336  1482  0099               	movwf	25	;volatile
  9337                           
  9338                           ;mcc_generated_files/mcc.c: 18:     OSCTUNE = 0x00;
  9339  1483  0198               	clrf	24	;volatile
  9340                           
  9341                           ;mcc_generated_files/mcc.c: 20:     BORCON = 0x00;
  9342  1484  0022               	movlb	2	; select bank2
  9343  1485  0196               	clrf	22	;volatile
  9344  1486  0008               	return
  9345  1487                     __end_of_OSCILLATOR_Initialize:	
  9346                           
  9347                           	psect	text31
  9348  1637                     __ptext31:	
  9349 ;; *************** function _EUSART_Initialize *****************
  9350 ;; Defined at:
  9351 ;;		line 65 in file "mcc_generated_files/eusart.c"
  9352 ;; Parameters:    Size  Location     Type
  9353 ;;		None
  9354 ;; Auto vars:     Size  Location     Type
  9355 ;;		None
  9356 ;; Return value:  Size  Location     Type
  9357 ;;                  1    wreg      void 
  9358 ;; Registers used:
  9359 ;;		wreg, status,2, status,0, pclath, cstack
  9360 ;; Tracked objects:
  9361 ;;		On entry : 0/0
  9362 ;;		On exit  : 0/0
  9363 ;;		Unchanged: 0/0
  9364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9369 ;;Total ram usage:        0 bytes
  9370 ;; Hardware stack levels used:    1
  9371 ;; Hardware stack levels required when called:    7
  9372 ;; This function calls:
  9373 ;;		_EUSART_SetErrorHandler
  9374 ;;		_EUSART_SetFramingErrorHandler
  9375 ;;		_EUSART_SetOverrunErrorHandler
  9376 ;; This function is called by:
  9377 ;;		_SYSTEM_Initialize
  9378 ;; This function uses a non-reentrant model
  9379 ;;
  9380                           
  9381                           
  9382                           ;psect for function _EUSART_Initialize
  9383  1637                     _EUSART_Initialize:	
  9384                           
  9385                           ;mcc_generated_files/eusart.c: 70:     BAUD1CON = 0x08;
  9386                           
  9387                           ;incstack = 0
  9388                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9389  1637  3008               	movlw	8
  9390  1638  0023               	movlb	3	; select bank3
  9391  1639  009F               	movwf	31	;volatile
  9392                           
  9393                           ;mcc_generated_files/eusart.c: 73:     RC1STA = 0x80;
  9394  163A  3080               	movlw	128
  9395  163B  009D               	movwf	29	;volatile
  9396                           
  9397                           ;mcc_generated_files/eusart.c: 76:     TX1STA = 0x24;
  9398  163C  3024               	movlw	36
  9399  163D  009E               	movwf	30	;volatile
  9400                           
  9401                           ;mcc_generated_files/eusart.c: 79:     SPBRGL = 0xA0;
  9402  163E  30A0               	movlw	160
  9403  163F  009B               	movwf	27	;volatile
  9404                           
  9405                           ;mcc_generated_files/eusart.c: 82:     SPBRGH = 0x01;
  9406  1640  3001               	movlw	1
  9407  1641  009C               	movwf	28	;volatile
  9408                           
  9409                           ;mcc_generated_files/eusart.c: 85:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  9410  1642  3000               	movlw	0
  9411  1643  0021               	movlb	1	; select bank1
  9412  1644  00A0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128)
  9413  1645  3000               	movlw	0
  9414  1646  00A1               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler^(0+128)+1)
  9415  1647  3194  24A7  3196   	fcall	_EUSART_SetFramingErrorHandler
  9416                           
  9417                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  9418  164A  3000               	movlw	0
  9419  164B  0021               	movlb	1	; select bank1
  9420  164C  00A0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)
  9421  164D  3000               	movlw	0
  9422  164E  00A1               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)+1)
  9423  164F  3194  24B0  3196   	fcall	_EUSART_SetOverrunErrorHandler
  9424                           
  9425                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  9426  1652  3000               	movlw	0
  9427  1653  0021               	movlb	1	; select bank1
  9428  1654  00A0               	movwf	EUSART_SetErrorHandler@interruptHandler^(0+128)
  9429  1655  3000               	movlw	0
  9430  1656  00A1               	movwf	(EUSART_SetErrorHandler@interruptHandler^(0+128)+1)
  9431  1657  3194  249E         	fcall	_EUSART_SetErrorHandler
  9432                           
  9433                           ;mcc_generated_files/eusart.c: 89:     eusartRxLastError.status = 0;
  9434  1659  0020               	movlb	0	; select bank0
  9435  165A  01E8               	clrf	_eusartRxLastError	;volatile
  9436  165B  0008               	return
  9437  165C                     __end_of_EUSART_Initialize:	
  9438                           
  9439                           	psect	text32
  9440  14B0                     __ptext32:	
  9441 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  9442 ;; Defined at:
  9443 ;;		line 175 in file "mcc_generated_files/eusart.c"
  9444 ;; Parameters:    Size  Location     Type
  9445 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  9446 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  9447 ;; Auto vars:     Size  Location     Type
  9448 ;;		None
  9449 ;; Return value:  Size  Location     Type
  9450 ;;                  1    wreg      void 
  9451 ;; Registers used:
  9452 ;;		wreg
  9453 ;; Tracked objects:
  9454 ;;		On entry : 0/0
  9455 ;;		On exit  : 0/0
  9456 ;;		Unchanged: 0/0
  9457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9458 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9461 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9462 ;;Total ram usage:        2 bytes
  9463 ;; Hardware stack levels used:    1
  9464 ;; Hardware stack levels required when called:    6
  9465 ;; This function calls:
  9466 ;;		Nothing
  9467 ;; This function is called by:
  9468 ;;		_EUSART_Initialize
  9469 ;; This function uses a non-reentrant model
  9470 ;;
  9471                           
  9472                           
  9473                           ;psect for function _EUSART_SetOverrunErrorHandler
  9474  14B0                     _EUSART_SetOverrunErrorHandler:	
  9475                           
  9476                           ;mcc_generated_files/eusart.c: 176:     EUSART_OverrunErrorHandler = interruptHandler;
  9477                           
  9478                           ;incstack = 0
  9479                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  9480  14B0  0021               	movlb	1	; select bank1
  9481  14B1  0821               	movf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^(0+128),w
  9482  14B2  0022               	movlb	2	; select bank2
  9483  14B3  00E4               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+256)
  9484  14B4  0021               	movlb	1	; select bank1
  9485  14B5  0820               	movf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128),w
  9486  14B6  0022               	movlb	2	; select bank2
  9487  14B7  00E3               	movwf	_EUSART_OverrunErrorHandler^(0+256)
  9488  14B8  0008               	return
  9489  14B9                     __end_of_EUSART_SetOverrunErrorHandler:	
  9490                           
  9491                           	psect	text33
  9492  14A7                     __ptext33:	
  9493 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  9494 ;; Defined at:
  9495 ;;		line 171 in file "mcc_generated_files/eusart.c"
  9496 ;; Parameters:    Size  Location     Type
  9497 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  9498 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  9499 ;; Auto vars:     Size  Location     Type
  9500 ;;		None
  9501 ;; Return value:  Size  Location     Type
  9502 ;;                  1    wreg      void 
  9503 ;; Registers used:
  9504 ;;		wreg
  9505 ;; Tracked objects:
  9506 ;;		On entry : 0/0
  9507 ;;		On exit  : 0/0
  9508 ;;		Unchanged: 0/0
  9509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9510 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9513 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9514 ;;Total ram usage:        2 bytes
  9515 ;; Hardware stack levels used:    1
  9516 ;; Hardware stack levels required when called:    6
  9517 ;; This function calls:
  9518 ;;		Nothing
  9519 ;; This function is called by:
  9520 ;;		_EUSART_Initialize
  9521 ;; This function uses a non-reentrant model
  9522 ;;
  9523                           
  9524                           
  9525                           ;psect for function _EUSART_SetFramingErrorHandler
  9526  14A7                     _EUSART_SetFramingErrorHandler:	
  9527                           
  9528                           ;mcc_generated_files/eusart.c: 172:     EUSART_FramingErrorHandler = interruptHandler;
  9529                           
  9530                           ;incstack = 0
  9531                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  9532  14A7  0021               	movlb	1	; select bank1
  9533  14A8  0821               	movf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^(0+128),w
  9534  14A9  0022               	movlb	2	; select bank2
  9535  14AA  00E6               	movwf	(_EUSART_FramingErrorHandler+1)^(0+256)
  9536  14AB  0021               	movlb	1	; select bank1
  9537  14AC  0820               	movf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128),w
  9538  14AD  0022               	movlb	2	; select bank2
  9539  14AE  00E5               	movwf	_EUSART_FramingErrorHandler^(0+256)
  9540  14AF  0008               	return
  9541  14B0                     __end_of_EUSART_SetFramingErrorHandler:	
  9542                           
  9543                           	psect	text34
  9544  149E                     __ptext34:	
  9545 ;; *************** function _EUSART_SetErrorHandler *****************
  9546 ;; Defined at:
  9547 ;;		line 179 in file "mcc_generated_files/eusart.c"
  9548 ;; Parameters:    Size  Location     Type
  9549 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  9550 ;;		 -> EUSART_DefaultErrorHandler(1), 
  9551 ;; Auto vars:     Size  Location     Type
  9552 ;;		None
  9553 ;; Return value:  Size  Location     Type
  9554 ;;                  1    wreg      void 
  9555 ;; Registers used:
  9556 ;;		wreg
  9557 ;; Tracked objects:
  9558 ;;		On entry : 0/0
  9559 ;;		On exit  : 0/0
  9560 ;;		Unchanged: 0/0
  9561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9562 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9565 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9566 ;;Total ram usage:        2 bytes
  9567 ;; Hardware stack levels used:    1
  9568 ;; Hardware stack levels required when called:    6
  9569 ;; This function calls:
  9570 ;;		Nothing
  9571 ;; This function is called by:
  9572 ;;		_EUSART_Initialize
  9573 ;; This function uses a non-reentrant model
  9574 ;;
  9575                           
  9576                           
  9577                           ;psect for function _EUSART_SetErrorHandler
  9578  149E                     _EUSART_SetErrorHandler:	
  9579                           
  9580                           ;mcc_generated_files/eusart.c: 180:     EUSART_ErrorHandler = interruptHandler;
  9581                           
  9582                           ;incstack = 0
  9583                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  9584  149E  0021               	movlb	1	; select bank1
  9585  149F  0821               	movf	(EUSART_SetErrorHandler@interruptHandler+1)^(0+128),w
  9586  14A0  0022               	movlb	2	; select bank2
  9587  14A1  00E2               	movwf	(_EUSART_ErrorHandler+1)^(0+256)
  9588  14A2  0021               	movlb	1	; select bank1
  9589  14A3  0820               	movf	EUSART_SetErrorHandler@interruptHandler^(0+128),w
  9590  14A4  0022               	movlb	2	; select bank2
  9591  14A5  00E1               	movwf	_EUSART_ErrorHandler^(0+256)
  9592  14A6  0008               	return
  9593  14A7                     __end_of_EUSART_SetErrorHandler:	
  9594                           
  9595                           	psect	text35
  9596  148E                     __ptext35:	
  9597 ;; *************** function _ADC_Initialize *****************
  9598 ;; Defined at:
  9599 ;;		line 15 in file "mcc_generated_files/adc.c"
  9600 ;; Parameters:    Size  Location     Type
  9601 ;;		None
  9602 ;; Auto vars:     Size  Location     Type
  9603 ;;		None
  9604 ;; Return value:  Size  Location     Type
  9605 ;;                  1    wreg      void 
  9606 ;; Registers used:
  9607 ;;		wreg, status,2
  9608 ;; Tracked objects:
  9609 ;;		On entry : 0/0
  9610 ;;		On exit  : 0/0
  9611 ;;		Unchanged: 0/0
  9612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9617 ;;Total ram usage:        0 bytes
  9618 ;; Hardware stack levels used:    1
  9619 ;; Hardware stack levels required when called:    6
  9620 ;; This function calls:
  9621 ;;		Nothing
  9622 ;; This function is called by:
  9623 ;;		_SYSTEM_Initialize
  9624 ;; This function uses a non-reentrant model
  9625 ;;
  9626                           
  9627                           
  9628                           ;psect for function _ADC_Initialize
  9629  148E                     _ADC_Initialize:	
  9630                           
  9631                           ;mcc_generated_files/adc.c: 20:     ADCON0 = 0x01;
  9632                           
  9633                           ;incstack = 0
  9634                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  9635  148E  3001               	movlw	1
  9636  148F  0021               	movlb	1	; select bank1
  9637  1490  009D               	movwf	29	;volatile
  9638                           
  9639                           ;mcc_generated_files/adc.c: 23:     ADCON1 = 0x00;
  9640  1491  019E               	clrf	30	;volatile
  9641                           
  9642                           ;mcc_generated_files/adc.c: 26:     ADCON2 = 0x00;
  9643  1492  019F               	clrf	31	;volatile
  9644                           
  9645                           ;mcc_generated_files/adc.c: 29:     ADRESL = 0x00;
  9646  1493  019B               	clrf	27	;volatile
  9647                           
  9648                           ;mcc_generated_files/adc.c: 32:     ADRESH = 0x00;
  9649  1494  019C               	clrf	28	;volatile
  9650  1495  0008               	return
  9651  1496                     __end_of_ADC_Initialize:	
  9652                           
  9653                           	psect	text36
  9654  1551                     __ptext36:	
  9655 ;; *************** function _ADC_GetConversion *****************
  9656 ;; Defined at:
  9657 ;;		line 63 in file "mcc_generated_files/adc.c"
  9658 ;; Parameters:    Size  Location     Type
  9659 ;;  channel         1    wreg     enum E9635
  9660 ;; Auto vars:     Size  Location     Type
  9661 ;;  channel         1    3[BANK1 ] enum E9635
  9662 ;; Return value:  Size  Location     Type
  9663 ;;                  2    0[BANK1 ] unsigned short 
  9664 ;; Registers used:
  9665 ;;		wreg, status,2, status,0
  9666 ;; Tracked objects:
  9667 ;;		On entry : 0/0
  9668 ;;		On exit  : 0/0
  9669 ;;		Unchanged: 0/0
  9670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9671 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9672 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9673 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9674 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  9675 ;;Total ram usage:        4 bytes
  9676 ;; Hardware stack levels used:    1
  9677 ;; Hardware stack levels required when called:    6
  9678 ;; This function calls:
  9679 ;;		Nothing
  9680 ;; This function is called by:
  9681 ;;		_main
  9682 ;; This function uses a non-reentrant model
  9683 ;;
  9684                           
  9685                           
  9686                           ;psect for function _ADC_GetConversion
  9687  1551                     _ADC_GetConversion:	
  9688                           
  9689                           ;incstack = 0
  9690                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  9691                           ;ADC_GetConversion@channel stored from wreg
  9692  1551  0021               	movlb	1	; select bank1
  9693  1552  00A3               	movwf	ADC_GetConversion@channel^(0+128)
  9694                           
  9695                           ;mcc_generated_files/adc.c: 63: adc_result_t ADC_GetConversion(adc_channel_t channel);mc
      +                          c_generated_files/adc.c: 64: {;mcc_generated_files/adc.c: 66:     ADCON0bits.CHS = chann
      +                          el;
  9696  1553  0823               	movf	ADC_GetConversion@channel^(0+128),w
  9697  1554  00A2               	movwf	??_ADC_GetConversion^(0+128)
  9698  1555  0DA2               	rlf	??_ADC_GetConversion^(0+128),f
  9699  1556  0DA2               	rlf	??_ADC_GetConversion^(0+128),f
  9700  1557  081D               	movf	29,w	;volatile
  9701  1558  0622               	xorwf	??_ADC_GetConversion^(0+128),w
  9702  1559  3983               	andlw	-125
  9703  155A  0622               	xorwf	??_ADC_GetConversion^(0+128),w
  9704  155B  009D               	movwf	29	;volatile
  9705                           
  9706                           ;mcc_generated_files/adc.c: 69:     ADCON0bits.ADON = 1;
  9707  155C  141D               	bsf	29,0	;volatile
  9708                           
  9709                           ;mcc_generated_files/adc.c: 72:     _delay((unsigned long)((5)*(16000000/4000000.0)));
  9710  155D  3006               	movlw	6
  9711  155E                     u5247:	
  9712  155E  0B89               	decfsz	9,f
  9713  155F  2D5E               	goto	u5247
  9714  1560  3200               	nop2
  9715                           
  9716                           ;mcc_generated_files/adc.c: 75:     ADCON0bits.GO_nDONE = 1;
  9717  1561  0021               	movlb	1	; select bank1
  9718  1562  149D               	bsf	29,1	;volatile
  9719  1563                     l274:	
  9720                           ;mcc_generated_files/adc.c: 79:     {;mcc_generated_files/adc.c: 80:     }
  9721                           
  9722                           
  9723                           ;mcc_generated_files/adc.c: 78:     while (ADCON0bits.GO_nDONE)
  9724  1563  189D               	btfsc	29,1	;volatile
  9725  1564  2D63               	goto	l274
  9726                           
  9727                           ;mcc_generated_files/adc.c: 83:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  9728  1565  081C               	movf	28,w	;volatile
  9729  1566  00A1               	movwf	(?_ADC_GetConversion+1)^(0+128)
  9730  1567  081B               	movf	27,w	;volatile
  9731  1568  00A0               	movwf	?_ADC_GetConversion^(0+128)
  9732  1569  0008               	return
  9733  156A                     __end_of_ADC_GetConversion:	
  9734                           
  9735                           	psect	intentry
  9736  0004                     __pintentry:	
  9737 ;; *************** function _INTERRUPT_InterruptManager *****************
  9738 ;; Defined at:
  9739 ;;		line 4 in file "mcc_generated_files/interrupt_manager.c"
  9740 ;; Parameters:    Size  Location     Type
  9741 ;;		None
  9742 ;; Auto vars:     Size  Location     Type
  9743 ;;		None
  9744 ;; Return value:  Size  Location     Type
  9745 ;;                  1    wreg      void 
  9746 ;; Registers used:
  9747 ;;		wreg, status,2, status,0, pclath, cstack
  9748 ;; Tracked objects:
  9749 ;;		On entry : 0/0
  9750 ;;		On exit  : 0/0
  9751 ;;		Unchanged: 0/0
  9752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9757 ;;Total ram usage:        0 bytes
  9758 ;; Hardware stack levels used:    1
  9759 ;; Hardware stack levels required when called:    5
  9760 ;; This function calls:
  9761 ;;		_PIN_MANAGER_IOC
  9762 ;;		_TMR0_ISR
  9763 ;; This function is called by:
  9764 ;;		Interrupt level 1
  9765 ;; This function uses a non-reentrant model
  9766 ;;
  9767                           
  9768  0004                     _INTERRUPT_InterruptManager:	
  9769                           
  9770                           ;incstack = 0
  9771  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  9772                           
  9773                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  9774  0005  3180               	pagesel	$
  9775                           
  9776                           ;mcc_generated_files/interrupt_manager.c: 7:     if(INTCONbits.TMR0IE == 1 && INTCONbits
      +                          .TMR0IF == 1)
  9777  0006  1A8B               	btfsc	11,5	;volatile
  9778  0007  1D0B               	btfss	11,2	;volatile
  9779  0008  280D               	goto	i1l238
  9780                           
  9781                           ;mcc_generated_files/interrupt_manager.c: 8:     {;mcc_generated_files/interrupt_manager
      +                          .c: 9:         TMR0_ISR();
  9782  0009  3194  24FF  3180   	fcall	_TMR0_ISR
  9783                           
  9784                           ;mcc_generated_files/interrupt_manager.c: 10:     }
  9785  000C  2812               	goto	i1l242
  9786  000D                     i1l238:	
  9787                           ;mcc_generated_files/interrupt_manager.c: 11:     else if(INTCONbits.IOCIE == 1 && INTCO
      +                          Nbits.IOCIF == 1)
  9788                           
  9789  000D  198B               	btfsc	11,3	;volatile
  9790  000E  1C0B               	btfss	11,0	;volatile
  9791  000F  2812               	goto	i1l242
  9792                           
  9793                           ;mcc_generated_files/interrupt_manager.c: 12:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 13:         PIN_MANAGER_IOC();
  9794  0010  3194  2468         	fcall	_PIN_MANAGER_IOC
  9795  0012                     i1l242:	
  9796                           ;mcc_generated_files/interrupt_manager.c: 14:     }
  9797                           
  9798  0012  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  9799  0013  0009               	retfie
  9800  0014                     __end_of_INTERRUPT_InterruptManager:	
  9801                           
  9802                           	psect	text38
  9803  14FF                     __ptext38:	
  9804 ;; *************** function _TMR0_ISR *****************
  9805 ;; Defined at:
  9806 ;;		line 62 in file "mcc_generated_files/tmr0.c"
  9807 ;; Parameters:    Size  Location     Type
  9808 ;;		None
  9809 ;; Auto vars:     Size  Location     Type
  9810 ;;		None
  9811 ;; Return value:  Size  Location     Type
  9812 ;;                  1    wreg      void 
  9813 ;; Registers used:
  9814 ;;		wreg, status,2, status,0, pclath, cstack
  9815 ;; Tracked objects:
  9816 ;;		On entry : 0/0
  9817 ;;		On exit  : 0/0
  9818 ;;		Unchanged: 0/0
  9819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9824 ;;Total ram usage:        0 bytes
  9825 ;; Hardware stack levels used:    1
  9826 ;; Hardware stack levels required when called:    2
  9827 ;; This function calls:
  9828 ;;		Absolute function
  9829 ;;		_TMR0_DefaultInterruptHandler
  9830 ;;		_timerISR
  9831 ;; This function is called by:
  9832 ;;		_INTERRUPT_InterruptManager
  9833 ;; This function uses a non-reentrant model
  9834 ;;
  9835                           
  9836                           
  9837                           ;psect for function _TMR0_ISR
  9838  14FF                     _TMR0_ISR:	
  9839                           
  9840                           ;mcc_generated_files/tmr0.c: 66:     INTCONbits.TMR0IF = 0;
  9841                           
  9842                           ;incstack = 0
  9843                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  9844  14FF  110B               	bcf	11,2	;volatile
  9845                           
  9846                           ;mcc_generated_files/tmr0.c: 68:     TMR0 = timer0ReloadVal;
  9847  1500  0022               	movlb	2	; select bank2
  9848  1501  0867               	movf	_timer0ReloadVal^(0+256),w	;volatile
  9849  1502  0020               	movlb	0	; select bank0
  9850  1503  0095               	movwf	21	;volatile
  9851                           
  9852                           ;mcc_generated_files/tmr0.c: 70:     if(TMR0_InterruptHandler)
  9853  1504  0022               	movlb	2	; select bank2
  9854  1505  085D               	movf	_TMR0_InterruptHandler^(0+256),w
  9855  1506  045E               	iorwf	(_TMR0_InterruptHandler+1)^(0+256),w
  9856  1507  1903               	btfsc	3,2
  9857  1508  0008               	return
  9858                           
  9859                           ;mcc_generated_files/tmr0.c: 71:     {;mcc_generated_files/tmr0.c: 72:         TMR0_Inte
      +                          rruptHandler();
  9860  1509  085E               	movf	(_TMR0_InterruptHandler+1)^(0+256),w
  9861  150A  008A               	movwf	10
  9862  150B  085D               	movf	_TMR0_InterruptHandler^(0+256),w
  9863  150C  000A               	callw
  9864  150D  3194               	pagesel	$
  9865  150E  0008               	return
  9866  150F                     __end_of_TMR0_ISR:	
  9867                           
  9868                           	psect	text39
  9869  07FF                     __ptext39:	
  9870 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  9871 ;; Defined at:
  9872 ;;		line 83 in file "mcc_generated_files/tmr0.c"
  9873 ;; Parameters:    Size  Location     Type
  9874 ;;		None
  9875 ;; Auto vars:     Size  Location     Type
  9876 ;;		None
  9877 ;; Return value:  Size  Location     Type
  9878 ;;                  1    wreg      void 
  9879 ;; Registers used:
  9880 ;;		None
  9881 ;; Tracked objects:
  9882 ;;		On entry : 0/0
  9883 ;;		On exit  : 0/0
  9884 ;;		Unchanged: 0/0
  9885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9890 ;;Total ram usage:        0 bytes
  9891 ;; Hardware stack levels used:    1
  9892 ;; This function calls:
  9893 ;;		Nothing
  9894 ;; This function is called by:
  9895 ;;		_TMR0_Initialize
  9896 ;;		_TMR0_ISR
  9897 ;; This function uses a non-reentrant model
  9898 ;;
  9899                           
  9900                           
  9901                           ;psect for function _TMR0_DefaultInterruptHandler
  9902  07FF                     _TMR0_DefaultInterruptHandler:	
  9903                           
  9904                           ;incstack = 0
  9905                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  9906  07FF  0008               	return
  9907  0800                     __end_of_TMR0_DefaultInterruptHandler:	
  9908                           
  9909                           	psect	text40
  9910  1612                     __ptext40:	
  9911 ;; *************** function _timerISR *****************
  9912 ;; Defined at:
  9913 ;;		line 110 in file "main.c"
  9914 ;; Parameters:    Size  Location     Type
  9915 ;;		None
  9916 ;; Auto vars:     Size  Location     Type
  9917 ;;		None
  9918 ;; Return value:  Size  Location     Type
  9919 ;;                  1    wreg      void 
  9920 ;; Registers used:
  9921 ;;		wreg, status,2, status,0, pclath, cstack
  9922 ;; Tracked objects:
  9923 ;;		On entry : 0/0
  9924 ;;		On exit  : 0/0
  9925 ;;		Unchanged: 0/0
  9926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9931 ;;Total ram usage:        0 bytes
  9932 ;; Hardware stack levels used:    1
  9933 ;; Hardware stack levels required when called:    1
  9934 ;; This function calls:
  9935 ;;		___fladd
  9936 ;; This function is called by:
  9937 ;;		_main
  9938 ;;		_TMR0_ISR
  9939 ;; This function uses a non-reentrant model
  9940 ;;
  9941                           
  9942                           
  9943                           ;psect for function _timerISR
  9944  1612                     _timerISR:	
  9945                           
  9946                           ;main.c: 112:     counter++ ;
  9947                           
  9948                           ;incstack = 0
  9949                           ; Regs used in _timerISR: [wreg+status,2+status,0+pclath+cstack]
  9950  1612  303F               	movlw	63
  9951  1613  00F3               	movwf	___fladd@b+3
  9952  1614  3080               	movlw	128
  9953  1615  00F2               	movwf	___fladd@b+2
  9954  1616  3000               	movlw	0
  9955  1617  00F1               	movwf	___fladd@b+1
  9956  1618  3000               	movlw	0
  9957  1619  00F0               	movwf	___fladd@b
  9958  161A  0022               	movlb	2	; select bank2
  9959  161B  084E               	movf	(_counter+3)^(0+256),w	;volatile
  9960  161C  00F7               	movwf	___fladd@a+3
  9961  161D  084D               	movf	(_counter+2)^(0+256),w	;volatile
  9962  161E  00F6               	movwf	___fladd@a+2
  9963  161F  084C               	movf	(_counter+1)^(0+256),w	;volatile
  9964  1620  00F5               	movwf	___fladd@a+1
  9965  1621  084B               	movf	_counter^(0+256),w	;volatile
  9966  1622  00F4               	movwf	___fladd@a
  9967  1623  3182  2286         	fcall	___fladd
  9968  1625  0873               	movf	?___fladd+3,w
  9969  1626  0022               	movlb	2	; select bank2
  9970  1627  00CE               	movwf	(_counter+3)^(0+256)	;volatile
  9971  1628  0872               	movf	?___fladd+2,w
  9972  1629  00CD               	movwf	(_counter+2)^(0+256)	;volatile
  9973  162A  0871               	movf	?___fladd+1,w
  9974  162B  00CC               	movwf	(_counter+1)^(0+256)	;volatile
  9975  162C  0870               	movf	?___fladd,w
  9976  162D  00CB               	movwf	_counter^(0+256)	;volatile
  9977                           
  9978                           ;main.c: 113:     adcCounter++ ;
  9979  162E  3001               	movlw	1
  9980  162F  07A4               	addwf	_adcCounter^(0+256),f	;volatile
  9981  1630  3000               	movlw	0
  9982  1631  3DA5               	addwfc	(_adcCounter+1)^(0+256),f	;volatile
  9983  1632  3000               	movlw	0
  9984  1633  3DA6               	addwfc	(_adcCounter+2)^(0+256),f	;volatile
  9985  1634  3000               	movlw	0
  9986  1635  3DA7               	addwfc	(_adcCounter+3)^(0+256),f	;volatile
  9987  1636  0008               	return
  9988  1637                     __end_of_timerISR:	
  9989                           
  9990                           	psect	text41
  9991  0286                     __ptext41:	
  9992 ;; *************** function ___fladd *****************
  9993 ;; Defined at:
  9994 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  9995 ;; Parameters:    Size  Location     Type
  9996 ;;  b               4    0[COMMON] void 
  9997 ;;  a               4    4[COMMON] void 
  9998 ;; Auto vars:     Size  Location     Type
  9999 ;;  grs             1   11[COMMON] unsigned char 
 10000 ;;  bexp            1   10[COMMON] unsigned char 
 10001 ;;  aexp            1    9[COMMON] unsigned char 
 10002 ;;  signs           1    8[COMMON] unsigned char 
 10003 ;; Return value:  Size  Location     Type
 10004 ;;                  4    0[COMMON] unsigned char 
 10005 ;; Registers used:
 10006 ;;		wreg, status,2, status,0
 10007 ;; Tracked objects:
 10008 ;;		On entry : 0/0
 10009 ;;		On exit  : 0/0
 10010 ;;		Unchanged: 0/0
 10011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10012 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10013 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10014 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10015 ;;      Totals:        12       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10016 ;;Total ram usage:       20 bytes
 10017 ;; Hardware stack levels used:    1
 10018 ;; This function calls:
 10019 ;;		Nothing
 10020 ;; This function is called by:
 10021 ;;		_timerISR
 10022 ;; This function uses a non-reentrant model
 10023 ;;
 10024                           
 10025                           
 10026                           ;psect for function ___fladd
 10027  0286                     ___fladd:	
 10028                           
 10029                           ;incstack = 0
 10030                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 10031  0286  0873               	movf	___fladd@b+3,w
 10032  0287  3980               	andlw	128
 10033  0288  0020               	movlb	0	; select bank0
 10034  0289  00A0               	movwf	??___fladd
 10035  028A  0820               	movf	??___fladd,w
 10036  028B  00F8               	movwf	___fladd@signs
 10037  028C  3573               	lslf	___fladd@b+3,w
 10038  028D  00A0               	movwf	??___fladd
 10039  028E  0820               	movf	??___fladd,w
 10040  028F  00FA               	movwf	___fladd@bexp
 10041  0290  1BF2               	btfsc	___fladd@b+2,7
 10042  0291  147A               	bsf	___fladd@bexp,0
 10043  0292  087A               	movf	___fladd@bexp,w
 10044  0293  1903               	btfsc	3,2
 10045  0294  2AA3               	goto	i1l3256
 10046  0295  0A7A               	incf	___fladd@bexp,w
 10047  0296  1D03               	btfss	3,2
 10048  0297  2AA0               	goto	i1l3252
 10049  0298  3000               	movlw	0
 10050  0299  00F3               	movwf	___fladd@b+3
 10051  029A  3000               	movlw	0
 10052  029B  00F2               	movwf	___fladd@b+2
 10053  029C  3000               	movlw	0
 10054  029D  00F1               	movwf	___fladd@b+1
 10055  029E  3000               	movlw	0
 10056  029F  00F0               	movwf	___fladd@b
 10057  02A0                     i1l3252:	
 10058  02A0  17F2               	bsf	___fladd@b+2,7
 10059  02A1  01F3               	clrf	___fladd@b+3
 10060  02A2  2AAB               	goto	i1l3258
 10061  02A3                     i1l3256:	
 10062  02A3  3000               	movlw	0
 10063  02A4  00F3               	movwf	___fladd@b+3
 10064  02A5  3000               	movlw	0
 10065  02A6  00F2               	movwf	___fladd@b+2
 10066  02A7  3000               	movlw	0
 10067  02A8  00F1               	movwf	___fladd@b+1
 10068  02A9  3000               	movlw	0
 10069  02AA  00F0               	movwf	___fladd@b
 10070  02AB                     i1l3258:	
 10071  02AB  0877               	movf	___fladd@a+3,w
 10072  02AC  3980               	andlw	128
 10073  02AD  00A0               	movwf	??___fladd
 10074  02AE  0820               	movf	??___fladd,w
 10075  02AF  00F9               	movwf	___fladd@aexp
 10076  02B0  0879               	movf	___fladd@aexp,w
 10077  02B1  0678               	xorwf	___fladd@signs,w
 10078  02B2  1D03               	btfss	3,2
 10079  02B3  1778               	bsf	___fladd@signs,6
 10080  02B4  3577               	lslf	___fladd@a+3,w
 10081  02B5  00A0               	movwf	??___fladd
 10082  02B6  0820               	movf	??___fladd,w
 10083  02B7  00F9               	movwf	___fladd@aexp
 10084  02B8  1BF6               	btfsc	___fladd@a+2,7
 10085  02B9  1479               	bsf	___fladd@aexp,0
 10086  02BA  0879               	movf	___fladd@aexp,w
 10087  02BB  1903               	btfsc	3,2
 10088  02BC  2ACB               	goto	i1l3280
 10089  02BD  0A79               	incf	___fladd@aexp,w
 10090  02BE  1D03               	btfss	3,2
 10091  02BF  2AC8               	goto	i1l3276
 10092  02C0  3000               	movlw	0
 10093  02C1  00F7               	movwf	___fladd@a+3
 10094  02C2  3000               	movlw	0
 10095  02C3  00F6               	movwf	___fladd@a+2
 10096  02C4  3000               	movlw	0
 10097  02C5  00F5               	movwf	___fladd@a+1
 10098  02C6  3000               	movlw	0
 10099  02C7  00F4               	movwf	___fladd@a
 10100  02C8                     i1l3276:	
 10101  02C8  17F6               	bsf	___fladd@a+2,7
 10102  02C9  01F7               	clrf	___fladd@a+3
 10103  02CA  2AD3               	goto	i1l892
 10104  02CB                     i1l3280:	
 10105  02CB  3000               	movlw	0
 10106  02CC  00F7               	movwf	___fladd@a+3
 10107  02CD  3000               	movlw	0
 10108  02CE  00F6               	movwf	___fladd@a+2
 10109  02CF  3000               	movlw	0
 10110  02D0  00F5               	movwf	___fladd@a+1
 10111  02D1  3000               	movlw	0
 10112  02D2  00F4               	movwf	___fladd@a
 10113  02D3                     i1l892:	
 10114  02D3  087A               	movf	___fladd@bexp,w
 10115  02D4  0279               	subwf	___fladd@aexp,w
 10116  02D5  1803               	skipnc
 10117  02D6  2B19               	goto	i1l3316
 10118  02D7  1F78               	btfss	___fladd@signs,6
 10119  02D8  2ADD               	goto	i1l3286
 10120  02D9  3080               	movlw	128
 10121  02DA  00A0               	movwf	??___fladd
 10122  02DB  0820               	movf	??___fladd,w
 10123  02DC  06F8               	xorwf	___fladd@signs,f
 10124  02DD                     i1l3286:	
 10125  02DD  087A               	movf	___fladd@bexp,w
 10126  02DE  00A0               	movwf	??___fladd
 10127  02DF  0820               	movf	??___fladd,w
 10128  02E0  00FB               	movwf	___fladd@grs
 10129  02E1  0879               	movf	___fladd@aexp,w
 10130  02E2  00A0               	movwf	??___fladd
 10131  02E3  0820               	movf	??___fladd,w
 10132  02E4  00FA               	movwf	___fladd@bexp
 10133  02E5  087B               	movf	___fladd@grs,w
 10134  02E6  00A0               	movwf	??___fladd
 10135  02E7  0820               	movf	??___fladd,w
 10136  02E8  00F9               	movwf	___fladd@aexp
 10137  02E9  0870               	movf	___fladd@b,w
 10138  02EA  00A0               	movwf	??___fladd
 10139  02EB  0820               	movf	??___fladd,w
 10140  02EC  00FB               	movwf	___fladd@grs
 10141  02ED  0874               	movf	___fladd@a,w
 10142  02EE  00A0               	movwf	??___fladd
 10143  02EF  0820               	movf	??___fladd,w
 10144  02F0  00F0               	movwf	___fladd@b
 10145  02F1  087B               	movf	___fladd@grs,w
 10146  02F2  00A0               	movwf	??___fladd
 10147  02F3  0820               	movf	??___fladd,w
 10148  02F4  00F4               	movwf	___fladd@a
 10149  02F5  0871               	movf	___fladd@b+1,w
 10150  02F6  00A0               	movwf	??___fladd
 10151  02F7  0820               	movf	??___fladd,w
 10152  02F8  00FB               	movwf	___fladd@grs
 10153  02F9  0875               	movf	___fladd@a+1,w
 10154  02FA  00A0               	movwf	??___fladd
 10155  02FB  0820               	movf	??___fladd,w
 10156  02FC  00F1               	movwf	___fladd@b+1
 10157  02FD  087B               	movf	___fladd@grs,w
 10158  02FE  00A0               	movwf	??___fladd
 10159  02FF  0820               	movf	??___fladd,w
 10160  0300  00F5               	movwf	___fladd@a+1
 10161  0301  0872               	movf	___fladd@b+2,w
 10162  0302  00A0               	movwf	??___fladd
 10163  0303  0820               	movf	??___fladd,w
 10164  0304  00FB               	movwf	___fladd@grs
 10165  0305  0876               	movf	___fladd@a+2,w
 10166  0306  00A0               	movwf	??___fladd
 10167  0307  0820               	movf	??___fladd,w
 10168  0308  00F2               	movwf	___fladd@b+2
 10169  0309  087B               	movf	___fladd@grs,w
 10170  030A  00A0               	movwf	??___fladd
 10171  030B  0820               	movf	??___fladd,w
 10172  030C  00F6               	movwf	___fladd@a+2
 10173  030D  0873               	movf	___fladd@b+3,w
 10174  030E  00A0               	movwf	??___fladd
 10175  030F  0820               	movf	??___fladd,w
 10176  0310  00FB               	movwf	___fladd@grs
 10177  0311  0877               	movf	___fladd@a+3,w
 10178  0312  00A0               	movwf	??___fladd
 10179  0313  0820               	movf	??___fladd,w
 10180  0314  00F3               	movwf	___fladd@b+3
 10181  0315  087B               	movf	___fladd@grs,w
 10182  0316  00A0               	movwf	??___fladd
 10183  0317  0820               	movf	??___fladd,w
 10184  0318  00F7               	movwf	___fladd@a+3
 10185  0319                     i1l3316:	
 10186  0319  01FB               	clrf	___fladd@grs
 10187  031A  0879               	movf	___fladd@aexp,w
 10188  031B  00A0               	movwf	??___fladd
 10189  031C  01A1               	clrf	??___fladd+1
 10190  031D  0821               	movf	??___fladd+1,w
 10191  031E  00A3               	movwf	??___fladd+3
 10192  031F  087A               	movf	___fladd@bexp,w
 10193  0320  0220               	subwf	??___fladd,w
 10194  0321  00A2               	movwf	??___fladd+2
 10195  0322  1C03               	skipc
 10196  0323  03A3               	decf	??___fladd+3,f
 10197  0324  0823               	movf	??___fladd+3,w
 10198  0325  3A80               	xorlw	128
 10199  0326  00A4               	movwf	??___fladd+4
 10200  0327  3080               	movlw	128
 10201  0328  0224               	subwf	??___fladd+4,w
 10202  0329  1D03               	skipz
 10203  032A  2B2D               	goto	u410_25
 10204  032B  301A               	movlw	26
 10205  032C  0222               	subwf	??___fladd+2,w
 10206  032D                     u410_25:	
 10207  032D  1C03               	skipc
 10208  032E  2B63               	goto	i1l3334
 10209  032F  0873               	movf	___fladd@b+3,w
 10210  0330  0472               	iorwf	___fladd@b+2,w
 10211  0331  0471               	iorwf	___fladd@b+1,w
 10212  0332  0470               	iorwf	___fladd@b,w
 10213  0333  1903               	btfsc	3,2
 10214  0334  2B37               	goto	u411_20
 10215  0335  3001               	movlw	1
 10216  0336  2B38               	goto	u412_20
 10217  0337                     u411_20:	
 10218  0337  3000               	movlw	0
 10219  0338                     u412_20:	
 10220  0338  0020               	movlb	0	; select bank0
 10221  0339  00A0               	movwf	??___fladd
 10222  033A  0820               	movf	??___fladd,w
 10223  033B  00FB               	movwf	___fladd@grs
 10224  033C  3000               	movlw	0
 10225  033D  00F3               	movwf	___fladd@b+3
 10226  033E  3000               	movlw	0
 10227  033F  00F2               	movwf	___fladd@b+2
 10228  0340  3000               	movlw	0
 10229  0341  00F1               	movwf	___fladd@b+1
 10230  0342  3000               	movlw	0
 10231  0343  00F0               	movwf	___fladd@b
 10232  0344  0879               	movf	___fladd@aexp,w
 10233  0345  00A0               	movwf	??___fladd
 10234  0346  0820               	movf	??___fladd,w
 10235  0347  00FA               	movwf	___fladd@bexp
 10236  0348  2B67               	goto	i1l896
 10237  0349                     i1l898:	
 10238  0349  1C7B               	btfss	___fladd@grs,0
 10239  034A  2B52               	goto	i1l3324
 10240  034B  367B               	lsrf	___fladd@grs,w
 10241  034C  3801               	iorlw	1
 10242  034D  0020               	movlb	0	; select bank0
 10243  034E  00A0               	movwf	??___fladd
 10244  034F  0820               	movf	??___fladd,w
 10245  0350  00FB               	movwf	___fladd@grs
 10246  0351  2B54               	goto	i1l3326
 10247  0352                     i1l3324:	
 10248  0352  1003               	clrc
 10249  0353  0CFB               	rrf	___fladd@grs,f
 10250  0354                     i1l3326:	
 10251  0354  1870               	btfsc	___fladd@b,0
 10252  0355  17FB               	bsf	___fladd@grs,7
 10253  0356  3001               	movlw	1
 10254  0357  0020               	movlb	0	; select bank0
 10255  0358  00A0               	movwf	??___fladd
 10256  0359                     u415_25:	
 10257  0359  37F3               	asrf	___fladd@b+3,f
 10258  035A  0CF2               	rrf	___fladd@b+2,f
 10259  035B  0CF1               	rrf	___fladd@b+1,f
 10260  035C  0CF0               	rrf	___fladd@b,f
 10261  035D  0BA0               	decfsz	??___fladd& (0+127),f
 10262  035E  2B59               	goto	u415_25
 10263  035F  3001               	movlw	1
 10264  0360  00A0               	movwf	??___fladd
 10265  0361  0820               	movf	??___fladd,w
 10266  0362  07FA               	addwf	___fladd@bexp,f
 10267  0363                     i1l3334:	
 10268  0363  0879               	movf	___fladd@aexp,w
 10269  0364  027A               	subwf	___fladd@bexp,w
 10270  0365  1C03               	skipc
 10271  0366  2B49               	goto	i1l898
 10272  0367                     i1l896:	
 10273  0367  1B78               	btfsc	___fladd@signs,6
 10274  0368  2B9A               	goto	i1l3360
 10275  0369  087A               	movf	___fladd@bexp,w
 10276  036A  1D03               	btfss	3,2
 10277  036B  2B75               	goto	i1l3342
 10278  036C  3000               	movlw	0
 10279  036D  00F3               	movwf	?___fladd+3
 10280  036E  3000               	movlw	0
 10281  036F  00F2               	movwf	?___fladd+2
 10282  0370  3000               	movlw	0
 10283  0371  00F1               	movwf	?___fladd+1
 10284  0372  3000               	movlw	0
 10285  0373  00F0               	movwf	?___fladd
 10286  0374  0008               	return
 10287  0375                     i1l3342:	
 10288  0375  0874               	movf	___fladd@a,w
 10289  0376  07F0               	addwf	___fladd@b,f
 10290  0377  0875               	movf	___fladd@a+1,w
 10291  0378  3DF1               	addwfc	___fladd@b+1,f
 10292  0379  0876               	movf	___fladd@a+2,w
 10293  037A  3DF2               	addwfc	___fladd@b+2,f
 10294  037B  0877               	movf	___fladd@a+3,w
 10295  037C  3DF3               	addwfc	___fladd@b+3,f
 10296  037D  1C73               	btfss	___fladd@b+3,0
 10297  037E  2C15               	goto	i1l3394
 10298  037F  1C7B               	btfss	___fladd@grs,0
 10299  0380  2B88               	goto	i1l3350
 10300  0381  367B               	lsrf	___fladd@grs,w
 10301  0382  3801               	iorlw	1
 10302  0383  0020               	movlb	0	; select bank0
 10303  0384  00A0               	movwf	??___fladd
 10304  0385  0820               	movf	??___fladd,w
 10305  0386  00FB               	movwf	___fladd@grs
 10306  0387  2B8A               	goto	i1l3352
 10307  0388                     i1l3350:	
 10308  0388  1003               	clrc
 10309  0389  0CFB               	rrf	___fladd@grs,f
 10310  038A                     i1l3352:	
 10311  038A  1870               	btfsc	___fladd@b,0
 10312  038B  17FB               	bsf	___fladd@grs,7
 10313  038C  3001               	movlw	1
 10314  038D  0020               	movlb	0	; select bank0
 10315  038E  00A0               	movwf	??___fladd
 10316  038F                     u422_25:	
 10317  038F  37F3               	asrf	___fladd@b+3,f
 10318  0390  0CF2               	rrf	___fladd@b+2,f
 10319  0391  0CF1               	rrf	___fladd@b+1,f
 10320  0392  0CF0               	rrf	___fladd@b,f
 10321  0393  0BA0               	decfsz	??___fladd& (0+127),f
 10322  0394  2B8F               	goto	u422_25
 10323  0395  3001               	movlw	1
 10324  0396  00A0               	movwf	??___fladd
 10325  0397  0820               	movf	??___fladd,w
 10326  0398  07FA               	addwf	___fladd@bexp,f
 10327  0399  2C15               	goto	i1l3394
 10328  039A                     i1l3360:	
 10329  039A  0873               	movf	___fladd@b+3,w
 10330  039B  3A80               	xorlw	128
 10331  039C  0020               	movlb	0	; select bank0
 10332  039D  00A0               	movwf	??___fladd
 10333  039E  0877               	movf	___fladd@a+3,w
 10334  039F  3A80               	xorlw	128
 10335  03A0  0220               	subwf	??___fladd,w
 10336  03A1  1D03               	skipz
 10337  03A2  2BAD               	goto	u423_23
 10338  03A3  0876               	movf	___fladd@a+2,w
 10339  03A4  0272               	subwf	___fladd@b+2,w
 10340  03A5  1D03               	skipz
 10341  03A6  2BAD               	goto	u423_23
 10342  03A7  0875               	movf	___fladd@a+1,w
 10343  03A8  0271               	subwf	___fladd@b+1,w
 10344  03A9  1D03               	skipz
 10345  03AA  2BAD               	goto	u423_23
 10346  03AB  0874               	movf	___fladd@a,w
 10347  03AC  0270               	subwf	___fladd@b,w
 10348  03AD                     u423_23:	
 10349  03AD  1803               	skipnc
 10350  03AE  2BE5               	goto	i1l3370
 10351  03AF  30FF               	movlw	255
 10352  03B0  00A0               	movwf	??___fladd
 10353  03B1  30FF               	movlw	255
 10354  03B2  00A1               	movwf	??___fladd+1
 10355  03B3  30FF               	movlw	255
 10356  03B4  00A2               	movwf	??___fladd+2
 10357  03B5  30FF               	movlw	255
 10358  03B6  00A3               	movwf	??___fladd+3
 10359  03B7  0870               	movf	___fladd@b,w
 10360  03B8  0274               	subwf	___fladd@a,w
 10361  03B9  00A4               	movwf	??___fladd+4
 10362  03BA  0871               	movf	___fladd@b+1,w
 10363  03BB  3B75               	subwfb	___fladd@a+1,w
 10364  03BC  00A5               	movwf	??___fladd+5
 10365  03BD  0872               	movf	___fladd@b+2,w
 10366  03BE  3B76               	subwfb	___fladd@a+2,w
 10367  03BF  00A6               	movwf	??___fladd+6
 10368  03C0  0873               	movf	___fladd@b+3,w
 10369  03C1  3B77               	subwfb	___fladd@a+3,w
 10370  03C2  00A7               	movwf	??___fladd+7
 10371  03C3  0824               	movf	??___fladd+4,w
 10372  03C4  07A0               	addwf	??___fladd,f
 10373  03C5  0825               	movf	??___fladd+5,w
 10374  03C6  3DA1               	addwfc	??___fladd+1,f
 10375  03C7  0826               	movf	??___fladd+6,w
 10376  03C8  3DA2               	addwfc	??___fladd+2,f
 10377  03C9  0827               	movf	??___fladd+7,w
 10378  03CA  3DA3               	addwfc	??___fladd+3,f
 10379  03CB  0823               	movf	??___fladd+3,w
 10380  03CC  00F3               	movwf	___fladd@b+3
 10381  03CD  0822               	movf	??___fladd+2,w
 10382  03CE  00F2               	movwf	___fladd@b+2
 10383  03CF  0821               	movf	??___fladd+1,w
 10384  03D0  00F1               	movwf	___fladd@b+1
 10385  03D1  0820               	movf	??___fladd,w
 10386  03D2  00F0               	movwf	___fladd@b
 10387  03D3  3080               	movlw	128
 10388  03D4  00A0               	movwf	??___fladd
 10389  03D5  0820               	movf	??___fladd,w
 10390  03D6  06F8               	xorwf	___fladd@signs,f
 10391  03D7  09FB               	comf	___fladd@grs,f
 10392  03D8  0AFB               	incf	___fladd@grs,f
 10393  03D9  087B               	movf	___fladd@grs,w
 10394  03DA  1D03               	btfss	3,2
 10395  03DB  2BED               	goto	i1l913
 10396  03DC  3001               	movlw	1
 10397  03DD  07F0               	addwf	___fladd@b,f
 10398  03DE  3000               	movlw	0
 10399  03DF  3DF1               	addwfc	___fladd@b+1,f
 10400  03E0  3000               	movlw	0
 10401  03E1  3DF2               	addwfc	___fladd@b+2,f
 10402  03E2  3000               	movlw	0
 10403  03E3  3DF3               	addwfc	___fladd@b+3,f
 10404  03E4  2BED               	goto	i1l913
 10405  03E5                     i1l3370:	
 10406  03E5  0874               	movf	___fladd@a,w
 10407  03E6  02F0               	subwf	___fladd@b,f
 10408  03E7  0875               	movf	___fladd@a+1,w
 10409  03E8  3BF1               	subwfb	___fladd@b+1,f
 10410  03E9  0876               	movf	___fladd@a+2,w
 10411  03EA  3BF2               	subwfb	___fladd@b+2,f
 10412  03EB  0877               	movf	___fladd@a+3,w
 10413  03EC  3BF3               	subwfb	___fladd@b+3,f
 10414  03ED                     i1l913:	
 10415  03ED  0873               	movf	___fladd@b+3,w
 10416  03EE  0472               	iorwf	___fladd@b+2,w
 10417  03EF  0471               	iorwf	___fladd@b+1,w
 10418  03F0  0470               	iorwf	___fladd@b,w
 10419  03F1  1D03               	skipz
 10420  03F2  2C13               	goto	i1l3392
 10421  03F3  087B               	movf	___fladd@grs,w
 10422  03F4  1D03               	btfss	3,2
 10423  03F5  2C13               	goto	i1l3392
 10424  03F6  3000               	movlw	0
 10425  03F7  00F3               	movwf	?___fladd+3
 10426  03F8  3000               	movlw	0
 10427  03F9  00F2               	movwf	?___fladd+2
 10428  03FA  3000               	movlw	0
 10429  03FB  00F1               	movwf	?___fladd+1
 10430  03FC  3000               	movlw	0
 10431  03FD  00F0               	movwf	?___fladd
 10432  03FE  0008               	return
 10433  03FF                     i1l3378:	
 10434  03FF  3001               	movlw	1
 10435  0400                     u427_25:	
 10436  0400  35F0               	lslf	___fladd@b,f
 10437  0401  0DF1               	rlf	___fladd@b+1,f
 10438  0402  0DF2               	rlf	___fladd@b+2,f
 10439  0403  0DF3               	rlf	___fladd@b+3,f
 10440  0404  0B89               	decfsz	9,f
 10441  0405  2C00               	goto	u427_25
 10442  0406  1BFB               	btfsc	___fladd@grs,7
 10443  0407  1470               	bsf	___fladd@b,0
 10444  0408  1C7B               	btfss	___fladd@grs,0
 10445  0409  2C0C               	goto	i1l3386
 10446  040A  1403               	setc
 10447  040B  2C0D               	goto	L4
 10448  040C                     i1l3386:	
 10449  040C  1003               	clrc
 10450  040D                     L4:	
 10451  040D  0DFB               	rlf	___fladd@grs,f
 10452  040E  087A               	movf	___fladd@bexp,w
 10453  040F  1903               	btfsc	3,2
 10454  0410  2C13               	goto	i1l3392
 10455  0411  3001               	movlw	1
 10456  0412  02FA               	subwf	___fladd@bexp,f
 10457  0413                     i1l3392:	
 10458  0413  1FF2               	btfss	___fladd@b+2,7
 10459  0414  2BFF               	goto	i1l3378
 10460  0415                     i1l3394:	
 10461  0415  01F9               	clrf	___fladd@aexp
 10462  0416  1FFB               	btfss	___fladd@grs,7
 10463  0417  2C20               	goto	i1l3404
 10464  0418  087B               	movf	___fladd@grs,w
 10465  0419  397F               	andlw	127
 10466  041A  1903               	btfsc	3,2
 10467  041B  1870               	btfsc	___fladd@b,0
 10468  041C  2C1E               	goto	i1l3400
 10469  041D  2C20               	goto	i1l3404
 10470  041E                     i1l3400:	
 10471  041E  01F9               	clrf	___fladd@aexp
 10472  041F  0AF9               	incf	___fladd@aexp,f
 10473  0420                     i1l3404:	
 10474  0420  0879               	movf	___fladd@aexp,w
 10475  0421  1903               	btfsc	3,2
 10476  0422  2C4D               	goto	i1l926
 10477  0423  3001               	movlw	1
 10478  0424  07F0               	addwf	___fladd@b,f
 10479  0425  3000               	movlw	0
 10480  0426  3DF1               	addwfc	___fladd@b+1,f
 10481  0427  3000               	movlw	0
 10482  0428  3DF2               	addwfc	___fladd@b+2,f
 10483  0429  3000               	movlw	0
 10484  042A  3DF3               	addwfc	___fladd@b+3,f
 10485  042B  1C73               	btfss	___fladd@b+3,0
 10486  042C  2C4D               	goto	i1l926
 10487  042D  0870               	movf	___fladd@b,w
 10488  042E  0020               	movlb	0	; select bank0
 10489  042F  00A0               	movwf	??___fladd
 10490  0430  0871               	movf	___fladd@b+1,w
 10491  0431  00A1               	movwf	??___fladd+1
 10492  0432  0872               	movf	___fladd@b+2,w
 10493  0433  00A2               	movwf	??___fladd+2
 10494  0434  0873               	movf	___fladd@b+3,w
 10495  0435  00A3               	movwf	??___fladd+3
 10496  0436  3001               	movlw	1
 10497  0437  00A4               	movwf	??___fladd+4
 10498  0438                     u437_25:	
 10499  0438  37A3               	asrf	??___fladd+3,f
 10500  0439  0CA2               	rrf	??___fladd+2,f
 10501  043A  0CA1               	rrf	??___fladd+1,f
 10502  043B  0CA0               	rrf	??___fladd,f
 10503  043C  0BA4               	decfsz	??___fladd+4,f
 10504  043D  2C38               	goto	u437_25
 10505  043E  0823               	movf	??___fladd+3,w
 10506  043F  00F3               	movwf	___fladd@b+3
 10507  0440  0822               	movf	??___fladd+2,w
 10508  0441  00F2               	movwf	___fladd@b+2
 10509  0442  0821               	movf	??___fladd+1,w
 10510  0443  00F1               	movwf	___fladd@b+1
 10511  0444  0820               	movf	??___fladd,w
 10512  0445  00F0               	movwf	___fladd@b
 10513  0446  0A7A               	incf	___fladd@bexp,w
 10514  0447  1903               	btfsc	3,2
 10515  0448  2C4D               	goto	i1l926
 10516  0449  3001               	movlw	1
 10517  044A  00A0               	movwf	??___fladd
 10518  044B  0820               	movf	??___fladd,w
 10519  044C  07FA               	addwf	___fladd@bexp,f
 10520  044D                     i1l926:	
 10521  044D  0A7A               	incf	___fladd@bexp,w
 10522  044E  1D03               	btfss	3,2
 10523  044F  087A               	movf	___fladd@bexp,w
 10524  0450  1D03               	btfss	3,2
 10525  0451  2C5D               	goto	i1l3422
 10526  0452  3000               	movlw	0
 10527  0453  00F3               	movwf	___fladd@b+3
 10528  0454  3000               	movlw	0
 10529  0455  00F2               	movwf	___fladd@b+2
 10530  0456  3000               	movlw	0
 10531  0457  00F1               	movwf	___fladd@b+1
 10532  0458  3000               	movlw	0
 10533  0459  00F0               	movwf	___fladd@b
 10534  045A  087A               	movf	___fladd@bexp,w
 10535  045B  1903               	btfsc	3,2
 10536  045C  01F8               	clrf	___fladd@signs
 10537  045D                     i1l3422:	
 10538  045D  1C7A               	btfss	___fladd@bexp,0
 10539  045E  2C61               	goto	i1l3426
 10540  045F  17F2               	bsf	___fladd@b+2,7
 10541  0460  2C66               	goto	i1l934
 10542  0461                     i1l3426:	
 10543  0461  307F               	movlw	127
 10544  0462  0020               	movlb	0	; select bank0
 10545  0463  00A0               	movwf	??___fladd
 10546  0464  0820               	movf	??___fladd,w
 10547  0465  05F2               	andwf	___fladd@b+2,f
 10548  0466                     i1l934:	
 10549  0466  367A               	lsrf	___fladd@bexp,w
 10550  0467  0020               	movlb	0	; select bank0
 10551  0468  00A0               	movwf	??___fladd
 10552  0469  0820               	movf	??___fladd,w
 10553  046A  00F3               	movwf	___fladd@b+3
 10554  046B  1FF8               	btfss	___fladd@signs,7
 10555  046C  0008               	return
 10556  046D  17F3               	bsf	___fladd@b+3,7
 10557  046E  0008               	return
 10558  046F                     __end_of___fladd:	
 10559                           
 10560                           	psect	text42
 10561  1468                     __ptext42:	
 10562 ;; *************** function _PIN_MANAGER_IOC *****************
 10563 ;; Defined at:
 10564 ;;		line 74 in file "mcc_generated_files/pin_manager.c"
 10565 ;; Parameters:    Size  Location     Type
 10566 ;;		None
 10567 ;; Auto vars:     Size  Location     Type
 10568 ;;		None
 10569 ;; Return value:  Size  Location     Type
 10570 ;;                  1    wreg      void 
 10571 ;; Registers used:
 10572 ;;		wreg, status,2, status,0, pclath, cstack
 10573 ;; Tracked objects:
 10574 ;;		On entry : 0/0
 10575 ;;		On exit  : 0/0
 10576 ;;		Unchanged: 0/0
 10577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10582 ;;Total ram usage:        0 bytes
 10583 ;; Hardware stack levels used:    1
 10584 ;; Hardware stack levels required when called:    4
 10585 ;; This function calls:
 10586 ;;		_IOCCF7_ISR
 10587 ;; This function is called by:
 10588 ;;		_INTERRUPT_InterruptManager
 10589 ;; This function uses a non-reentrant model
 10590 ;;
 10591                           
 10592                           
 10593                           ;psect for function _PIN_MANAGER_IOC
 10594  1468                     _PIN_MANAGER_IOC:	
 10595                           
 10596                           ;mcc_generated_files/pin_manager.c: 77:     if(IOCCFbits.IOCCF7 == 1)
 10597                           
 10598                           ;incstack = 0
 10599                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
 10600  1468  0027               	movlb	7	; select bank7
 10601  1469  1F99               	btfss	25,7	;volatile
 10602  146A  0008               	return
 10603                           
 10604                           ;mcc_generated_files/pin_manager.c: 78:     {;mcc_generated_files/pin_manager.c: 79:    
      +                               IOCCF7_ISR();
 10605  146B  3194  24D5         	fcall	_IOCCF7_ISR
 10606  146D  0008               	return
 10607  146E                     __end_of_PIN_MANAGER_IOC:	
 10608                           
 10609                           	psect	text43
 10610  14D5                     __ptext43:	
 10611 ;; *************** function _IOCCF7_ISR *****************
 10612 ;; Defined at:
 10613 ;;		line 86 in file "mcc_generated_files/pin_manager.c"
 10614 ;; Parameters:    Size  Location     Type
 10615 ;;		None
 10616 ;; Auto vars:     Size  Location     Type
 10617 ;;		None
 10618 ;; Return value:  Size  Location     Type
 10619 ;;                  1    wreg      void 
 10620 ;; Registers used:
 10621 ;;		wreg, status,2, status,0, pclath, cstack
 10622 ;; Tracked objects:
 10623 ;;		On entry : 0/0
 10624 ;;		On exit  : 0/0
 10625 ;;		Unchanged: 0/0
 10626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10631 ;;Total ram usage:        0 bytes
 10632 ;; Hardware stack levels used:    1
 10633 ;; Hardware stack levels required when called:    3
 10634 ;; This function calls:
 10635 ;;		Absolute function
 10636 ;;		_IOCCF7_DefaultInterruptHandler
 10637 ;;		_speedCalc
 10638 ;; This function is called by:
 10639 ;;		_PIN_MANAGER_IOC
 10640 ;; This function uses a non-reentrant model
 10641 ;;
 10642                           
 10643                           
 10644                           ;psect for function _IOCCF7_ISR
 10645  14D5                     _IOCCF7_ISR:	
 10646                           
 10647                           ;mcc_generated_files/pin_manager.c: 91:     if(IOCCF7_InterruptHandler)
 10648                           
 10649                           ;incstack = 0
 10650                           ; Regs used in _IOCCF7_ISR: [wreg+status,2+status,0+pclath+cstack]
 10651  14D5  0022               	movlb	2	; select bank2
 10652  14D6  085F               	movf	_IOCCF7_InterruptHandler^(0+256),w
 10653  14D7  0460               	iorwf	(_IOCCF7_InterruptHandler+1)^(0+256),w
 10654  14D8  1903               	btfsc	3,2
 10655  14D9  2CDF               	goto	i1l3520
 10656                           
 10657                           ;mcc_generated_files/pin_manager.c: 92:     {;mcc_generated_files/pin_manager.c: 93:    
      +                               IOCCF7_InterruptHandler();
 10658  14DA  0860               	movf	(_IOCCF7_InterruptHandler+1)^(0+256),w
 10659  14DB  008A               	movwf	10
 10660  14DC  085F               	movf	_IOCCF7_InterruptHandler^(0+256),w
 10661  14DD  000A               	callw
 10662  14DE  3194               	pagesel	$
 10663  14DF                     i1l3520:	
 10664                           
 10665                           ;mcc_generated_files/pin_manager.c: 95:     IOCCFbits.IOCCF7 = 0;
 10666  14DF  0027               	movlb	7	; select bank7
 10667  14E0  1399               	bcf	25,7	;volatile
 10668  14E1  0008               	return
 10669  14E2                     __end_of_IOCCF7_ISR:	
 10670                           
 10671                           	psect	text44
 10672  0803                     __ptext44:	
 10673 ;; *************** function _IOCCF7_DefaultInterruptHandler *****************
 10674 ;; Defined at:
 10675 ;;		line 108 in file "mcc_generated_files/pin_manager.c"
 10676 ;; Parameters:    Size  Location     Type
 10677 ;;		None
 10678 ;; Auto vars:     Size  Location     Type
 10679 ;;		None
 10680 ;; Return value:  Size  Location     Type
 10681 ;;                  1    wreg      void 
 10682 ;; Registers used:
 10683 ;;		None
 10684 ;; Tracked objects:
 10685 ;;		On entry : 0/0
 10686 ;;		On exit  : 0/0
 10687 ;;		Unchanged: 0/0
 10688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10693 ;;Total ram usage:        0 bytes
 10694 ;; Hardware stack levels used:    1
 10695 ;; This function calls:
 10696 ;;		Nothing
 10697 ;; This function is called by:
 10698 ;;		_PIN_MANAGER_Initialize
 10699 ;;		_IOCCF7_ISR
 10700 ;; This function uses a non-reentrant model
 10701 ;;
 10702                           
 10703                           
 10704                           ;psect for function _IOCCF7_DefaultInterruptHandler
 10705  0803                     _IOCCF7_DefaultInterruptHandler:	
 10706                           
 10707                           ;incstack = 0
 10708                           ; Regs used in _IOCCF7_DefaultInterruptHandler: []
 10709  0803  0008               	return
 10710  0804                     __end_of_IOCCF7_DefaultInterruptHandler:	
 10711                           
 10712                           	psect	text45
 10713  0DA3                     __ptext45:	
 10714 ;; *************** function _speedCalc *****************
 10715 ;; Defined at:
 10716 ;;		line 117 in file "main.c"
 10717 ;; Parameters:    Size  Location     Type
 10718 ;;		None
 10719 ;; Auto vars:     Size  Location     Type
 10720 ;;		None
 10721 ;; Return value:  Size  Location     Type
 10722 ;;                  1    wreg      void 
 10723 ;; Registers used:
 10724 ;;		wreg, status,2, status,0, pclath, cstack
 10725 ;; Tracked objects:
 10726 ;;		On entry : 0/0
 10727 ;;		On exit  : 0/0
 10728 ;;		Unchanged: 0/0
 10729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10731 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10733 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10734 ;;Total ram usage:        4 bytes
 10735 ;; Hardware stack levels used:    1
 10736 ;; Hardware stack levels required when called:    2
 10737 ;; This function calls:
 10738 ;;		___awmod
 10739 ;;		___fldiv
 10740 ;;		___flmul
 10741 ;;		___fltol
 10742 ;;		i1___awdiv
 10743 ;; This function is called by:
 10744 ;;		_main
 10745 ;;		_IOCCF7_ISR
 10746 ;; This function uses a non-reentrant model
 10747 ;;
 10748                           
 10749                           
 10750                           ;psect for function _speedCalc
 10751  0DA3                     _speedCalc:	
 10752                           
 10753                           ;main.c: 120:     rpm = ( ( 1000 / counter ) * 60 ) ;
 10754                           
 10755                           ;incstack = 0
 10756                           ; Regs used in _speedCalc: [wreg+status,2+status,0+pclath+cstack]
 10757  0DA3  3042               	movlw	66
 10758  0DA4  0020               	movlb	0	; select bank0
 10759  0DA5  00B0               	movwf	___flmul@b+3
 10760  0DA6  3070               	movlw	112
 10761  0DA7  00AF               	movwf	___flmul@b+2
 10762  0DA8  3000               	movlw	0
 10763  0DA9  00AE               	movwf	___flmul@b+1
 10764  0DAA  3000               	movlw	0
 10765  0DAB  00AD               	movwf	___flmul@b
 10766  0DAC  0022               	movlb	2	; select bank2
 10767  0DAD  084E               	movf	(_counter+3)^(0+256),w	;volatile
 10768  0DAE  00F3               	movwf	___fldiv@a+3
 10769  0DAF  084D               	movf	(_counter+2)^(0+256),w	;volatile
 10770  0DB0  00F2               	movwf	___fldiv@a+2
 10771  0DB1  084C               	movf	(_counter+1)^(0+256),w	;volatile
 10772  0DB2  00F1               	movwf	___fldiv@a+1
 10773  0DB3  084B               	movf	_counter^(0+256),w	;volatile
 10774  0DB4  00F0               	movwf	___fldiv@a
 10775  0DB5  3044               	movlw	68
 10776  0DB6  00F7               	movwf	___fldiv@b+3
 10777  0DB7  307A               	movlw	122
 10778  0DB8  00F6               	movwf	___fldiv@b+2
 10779  0DB9  3000               	movlw	0
 10780  0DBA  00F5               	movwf	___fldiv@b+1
 10781  0DBB  3000               	movlw	0
 10782  0DBC  00F4               	movwf	___fldiv@b
 10783  0DBD  3186  2652  318D   	fcall	___fldiv
 10784  0DC0  0873               	movf	?___fldiv+3,w
 10785  0DC1  0020               	movlb	0	; select bank0
 10786  0DC2  00B4               	movwf	___flmul@a+3
 10787  0DC3  0872               	movf	?___fldiv+2,w
 10788  0DC4  00B3               	movwf	___flmul@a+2
 10789  0DC5  0871               	movf	?___fldiv+1,w
 10790  0DC6  00B2               	movwf	___flmul@a+1
 10791  0DC7  0870               	movf	?___fldiv,w
 10792  0DC8  00B1               	movwf	___flmul@a
 10793  0DC9  3180  205A  318D   	fcall	___flmul
 10794  0DCC  0020               	movlb	0	; select bank0
 10795  0DCD  0830               	movf	?___flmul+3,w
 10796  0DCE  0022               	movlb	2	; select bank2
 10797  0DCF  00CA               	movwf	(_rpm+3)^(0+256)	;volatile
 10798  0DD0  0020               	movlb	0	; select bank0
 10799  0DD1  082F               	movf	?___flmul+2,w
 10800  0DD2  0022               	movlb	2	; select bank2
 10801  0DD3  00C9               	movwf	(_rpm+2)^(0+256)	;volatile
 10802  0DD4  0020               	movlb	0	; select bank0
 10803  0DD5  082E               	movf	?___flmul+1,w
 10804  0DD6  0022               	movlb	2	; select bank2
 10805  0DD7  00C8               	movwf	(_rpm+1)^(0+256)	;volatile
 10806  0DD8  0020               	movlb	0	; select bank0
 10807  0DD9  082D               	movf	?___flmul,w
 10808  0DDA  0022               	movlb	2	; select bank2
 10809  0DDB  00C7               	movwf	_rpm^(0+256)	;volatile
 10810                           
 10811                           ;main.c: 122:     speed = 2 * rpm * (0.06) ;
 10812  0DDC  3040               	movlw	64
 10813  0DDD  0020               	movlb	0	; select bank0
 10814  0DDE  00B0               	movwf	___flmul@b+3
 10815  0DDF  3000               	movlw	0
 10816  0DE0  00AF               	movwf	___flmul@b+2
 10817  0DE1  3000               	movlw	0
 10818  0DE2  00AE               	movwf	___flmul@b+1
 10819  0DE3  3000               	movlw	0
 10820  0DE4  00AD               	movwf	___flmul@b
 10821  0DE5  0022               	movlb	2	; select bank2
 10822  0DE6  084A               	movf	(_rpm+3)^(0+256),w	;volatile
 10823  0DE7  0020               	movlb	0	; select bank0
 10824  0DE8  00B4               	movwf	___flmul@a+3
 10825  0DE9  0022               	movlb	2	; select bank2
 10826  0DEA  0849               	movf	(_rpm+2)^(0+256),w	;volatile
 10827  0DEB  0020               	movlb	0	; select bank0
 10828  0DEC  00B3               	movwf	___flmul@a+2
 10829  0DED  0022               	movlb	2	; select bank2
 10830  0DEE  0848               	movf	(_rpm+1)^(0+256),w	;volatile
 10831  0DEF  0020               	movlb	0	; select bank0
 10832  0DF0  00B2               	movwf	___flmul@a+1
 10833  0DF1  0022               	movlb	2	; select bank2
 10834  0DF2  0847               	movf	_rpm^(0+256),w	;volatile
 10835  0DF3  0020               	movlb	0	; select bank0
 10836  0DF4  00B1               	movwf	___flmul@a
 10837  0DF5  3180  205A  318D   	fcall	___flmul
 10838  0DF8  0020               	movlb	0	; select bank0
 10839  0DF9  0830               	movf	?___flmul+3,w
 10840  0DFA  00DB               	movwf	_speedCalc$1332+3
 10841  0DFB  082F               	movf	?___flmul+2,w
 10842  0DFC  00DA               	movwf	_speedCalc$1332+2
 10843  0DFD  082E               	movf	?___flmul+1,w
 10844  0DFE  00D9               	movwf	_speedCalc$1332+1
 10845  0DFF  082D               	movf	?___flmul,w
 10846  0E00  00D8               	movwf	_speedCalc$1332
 10847                           
 10848                           ;main.c: 122:     speed = 2 * rpm * (0.06) ;
 10849  0E01  303D               	movlw	61
 10850  0E02  00B0               	movwf	___flmul@b+3
 10851  0E03  3075               	movlw	117
 10852  0E04  00AF               	movwf	___flmul@b+2
 10853  0E05  30C2               	movlw	194
 10854  0E06  00AE               	movwf	___flmul@b+1
 10855  0E07  308F               	movlw	143
 10856  0E08  00AD               	movwf	___flmul@b
 10857  0E09  085B               	movf	_speedCalc$1332+3,w
 10858  0E0A  00B4               	movwf	___flmul@a+3
 10859  0E0B  085A               	movf	_speedCalc$1332+2,w
 10860  0E0C  00B3               	movwf	___flmul@a+2
 10861  0E0D  0859               	movf	_speedCalc$1332+1,w
 10862  0E0E  00B2               	movwf	___flmul@a+1
 10863  0E0F  0858               	movf	_speedCalc$1332,w
 10864  0E10  00B1               	movwf	___flmul@a
 10865  0E11  3180  205A  318D   	fcall	___flmul
 10866  0E14  0020               	movlb	0	; select bank0
 10867  0E15  0830               	movf	?___flmul+3,w
 10868  0E16  0022               	movlb	2	; select bank2
 10869  0E17  00AF               	movwf	(_speed+3)^(0+256)	;volatile
 10870  0E18  0020               	movlb	0	; select bank0
 10871  0E19  082F               	movf	?___flmul+2,w
 10872  0E1A  0022               	movlb	2	; select bank2
 10873  0E1B  00AE               	movwf	(_speed+2)^(0+256)	;volatile
 10874  0E1C  0020               	movlb	0	; select bank0
 10875  0E1D  082E               	movf	?___flmul+1,w
 10876  0E1E  0022               	movlb	2	; select bank2
 10877  0E1F  00AD               	movwf	(_speed+1)^(0+256)	;volatile
 10878  0E20  0020               	movlb	0	; select bank0
 10879  0E21  082D               	movf	?___flmul,w
 10880  0E22  0022               	movlb	2	; select bank2
 10881  0E23  00AC               	movwf	_speed^(0+256)	;volatile
 10882                           
 10883                           ;main.c: 125:     speedHi = speed ;
 10884  0E24  082F               	movf	(_speed+3)^(0+256),w	;volatile
 10885  0E25  0020               	movlb	0	; select bank0
 10886  0E26  00CA               	movwf	___fltol@f1+3
 10887  0E27  0022               	movlb	2	; select bank2
 10888  0E28  082E               	movf	(_speed+2)^(0+256),w	;volatile
 10889  0E29  0020               	movlb	0	; select bank0
 10890  0E2A  00C9               	movwf	___fltol@f1+2
 10891  0E2B  0022               	movlb	2	; select bank2
 10892  0E2C  082D               	movf	(_speed+1)^(0+256),w	;volatile
 10893  0E2D  0020               	movlb	0	; select bank0
 10894  0E2E  00C8               	movwf	___fltol@f1+1
 10895  0E2F  0022               	movlb	2	; select bank2
 10896  0E30  082C               	movf	_speed^(0+256),w	;volatile
 10897  0E31  0020               	movlb	0	; select bank0
 10898  0E32  00C7               	movwf	___fltol@f1
 10899  0E33  3188  20AC  318D   	fcall	___fltol
 10900  0E36  0020               	movlb	0	; select bank0
 10901  0E37  0848               	movf	?___fltol+1,w
 10902  0E38  0022               	movlb	2	; select bank2
 10903  0E39  00BF               	movwf	(_speedHi+1)^(0+256)	;volatile
 10904  0E3A  0020               	movlb	0	; select bank0
 10905  0E3B  0847               	movf	?___fltol,w
 10906  0E3C  0022               	movlb	2	; select bank2
 10907  0E3D  00BE               	movwf	_speedHi^(0+256)	;volatile
 10908                           
 10909                           ;main.c: 126:     speedLo = ( (int)(speed*10.0) % 10 ) ;
 10910  0E3E  300A               	movlw	10
 10911  0E3F  0020               	movlb	0	; select bank0
 10912  0E40  00D2               	movwf	___awmod@divisor
 10913  0E41  3000               	movlw	0
 10914  0E42  00D3               	movwf	___awmod@divisor+1
 10915  0E43  0022               	movlb	2	; select bank2
 10916  0E44  082F               	movf	(_speed+3)^(0+256),w	;volatile
 10917  0E45  0020               	movlb	0	; select bank0
 10918  0E46  00B4               	movwf	___flmul@a+3
 10919  0E47  0022               	movlb	2	; select bank2
 10920  0E48  082E               	movf	(_speed+2)^(0+256),w	;volatile
 10921  0E49  0020               	movlb	0	; select bank0
 10922  0E4A  00B3               	movwf	___flmul@a+2
 10923  0E4B  0022               	movlb	2	; select bank2
 10924  0E4C  082D               	movf	(_speed+1)^(0+256),w	;volatile
 10925  0E4D  0020               	movlb	0	; select bank0
 10926  0E4E  00B2               	movwf	___flmul@a+1
 10927  0E4F  0022               	movlb	2	; select bank2
 10928  0E50  082C               	movf	_speed^(0+256),w	;volatile
 10929  0E51  0020               	movlb	0	; select bank0
 10930  0E52  00B1               	movwf	___flmul@a
 10931  0E53  3041               	movlw	65
 10932  0E54  00B0               	movwf	___flmul@b+3
 10933  0E55  3020               	movlw	32
 10934  0E56  00AF               	movwf	___flmul@b+2
 10935  0E57  3000               	movlw	0
 10936  0E58  00AE               	movwf	___flmul@b+1
 10937  0E59  3000               	movlw	0
 10938  0E5A  00AD               	movwf	___flmul@b
 10939  0E5B  3180  205A  318D   	fcall	___flmul
 10940  0E5E  0020               	movlb	0	; select bank0
 10941  0E5F  0830               	movf	?___flmul+3,w
 10942  0E60  00CA               	movwf	___fltol@f1+3
 10943  0E61  082F               	movf	?___flmul+2,w
 10944  0E62  00C9               	movwf	___fltol@f1+2
 10945  0E63  082E               	movf	?___flmul+1,w
 10946  0E64  00C8               	movwf	___fltol@f1+1
 10947  0E65  082D               	movf	?___flmul,w
 10948  0E66  00C7               	movwf	___fltol@f1
 10949  0E67  3188  20AC  318D   	fcall	___fltol
 10950  0E6A  0020               	movlb	0	; select bank0
 10951  0E6B  0848               	movf	?___fltol+1,w
 10952  0E6C  00D5               	movwf	___awmod@dividend+1
 10953  0E6D  0847               	movf	?___fltol,w
 10954  0E6E  00D4               	movwf	___awmod@dividend
 10955  0E6F  3197  2769  318D   	fcall	___awmod
 10956  0E72  0020               	movlb	0	; select bank0
 10957  0E73  0853               	movf	?___awmod+1,w
 10958  0E74  0022               	movlb	2	; select bank2
 10959  0E75  00C1               	movwf	(_speedLo+1)^(0+256)	;volatile
 10960  0E76  0020               	movlb	0	; select bank0
 10961  0E77  0852               	movf	?___awmod,w
 10962  0E78  0022               	movlb	2	; select bank2
 10963  0E79  00C0               	movwf	_speedLo^(0+256)	;volatile
 10964                           
 10965                           ;main.c: 129:     counter = 0 ;
 10966  0E7A  3000               	movlw	0
 10967  0E7B  00CE               	movwf	(_counter+3)^(0+256)	;volatile
 10968  0E7C  3000               	movlw	0
 10969  0E7D  00CD               	movwf	(_counter+2)^(0+256)	;volatile
 10970  0E7E  3000               	movlw	0
 10971  0E7F  00CC               	movwf	(_counter+1)^(0+256)	;volatile
 10972  0E80  3000               	movlw	0
 10973  0E81  00CB               	movwf	_counter^(0+256)	;volatile
 10974                           
 10975                           ;main.c: 130:     distance = distance + 2 ;
 10976  0E82  0020               	movlb	0	; select bank0
 10977  0E83  0864               	movf	_distance,w	;volatile
 10978  0E84  3E02               	addlw	2
 10979  0E85  00E4               	movwf	_distance	;volatile
 10980  0E86  3000               	movlw	0
 10981  0E87  3D65               	addwfc	_distance+1,w	;volatile
 10982  0E88  00E5               	movwf	_distance+1	;volatile
 10983                           
 10984                           ;main.c: 132:     distLo = distance % 1000 ;
 10985  0E89  30E8               	movlw	232
 10986  0E8A  00D2               	movwf	___awmod@divisor
 10987  0E8B  3003               	movlw	3
 10988  0E8C  00D3               	movwf	___awmod@divisor+1
 10989  0E8D  0865               	movf	_distance+1,w	;volatile
 10990  0E8E  00D5               	movwf	___awmod@dividend+1
 10991  0E8F  0864               	movf	_distance,w	;volatile
 10992  0E90  00D4               	movwf	___awmod@dividend
 10993  0E91  3197  2769  318D   	fcall	___awmod
 10994  0E94  0020               	movlb	0	; select bank0
 10995  0E95  0853               	movf	?___awmod+1,w
 10996  0E96  0022               	movlb	2	; select bank2
 10997  0E97  00C3               	movwf	(_distLo+1)^(0+256)	;volatile
 10998  0E98  0020               	movlb	0	; select bank0
 10999  0E99  0852               	movf	?___awmod,w
 11000  0E9A  0022               	movlb	2	; select bank2
 11001  0E9B  00C2               	movwf	_distLo^(0+256)	;volatile
 11002                           
 11003                           ;main.c: 133:     distHi = distance / 1000 ;
 11004  0E9C  30E8               	movlw	232
 11005  0E9D  00F0               	movwf	i1___awdiv@divisor
 11006  0E9E  3003               	movlw	3
 11007  0E9F  00F1               	movwf	i1___awdiv@divisor+1
 11008  0EA0  0020               	movlb	0	; select bank0
 11009  0EA1  0865               	movf	_distance+1,w	;volatile
 11010  0EA2  00F3               	movwf	i1___awdiv@dividend+1
 11011  0EA3  0864               	movf	_distance,w	;volatile
 11012  0EA4  00F2               	movwf	i1___awdiv@dividend
 11013  0EA5  3197  27AF         	fcall	i1___awdiv
 11014  0EA7  0871               	movf	?i1___awdiv+1,w
 11015  0EA8  0022               	movlb	2	; select bank2
 11016  0EA9  00C5               	movwf	(_distHi+1)^(0+256)	;volatile
 11017  0EAA  0870               	movf	?i1___awdiv,w
 11018  0EAB  00C4               	movwf	_distHi^(0+256)	;volatile
 11019  0EAC  0008               	return
 11020  0EAD                     __end_of_speedCalc:	
 11021                           
 11022                           	psect	text46
 11023  17AF                     __ptext46:	
 11024 ;; *************** function i1___awdiv *****************
 11025 ;; Defined at:
 11026 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
 11027 ;; Parameters:    Size  Location     Type
 11028 ;;  divisor         2    0[COMMON] int 
 11029 ;;  dividend        2    2[COMMON] int 
 11030 ;; Auto vars:     Size  Location     Type
 11031 ;;  __awdiv         2    7[COMMON] int 
 11032 ;;  __awdiv         1    6[COMMON] unsigned char 
 11033 ;;  __awdiv         1    5[COMMON] unsigned char 
 11034 ;; Return value:  Size  Location     Type
 11035 ;;                  2    0[COMMON] int 
 11036 ;; Registers used:
 11037 ;;		wreg, status,2, status,0
 11038 ;; Tracked objects:
 11039 ;;		On entry : 0/0
 11040 ;;		On exit  : 0/0
 11041 ;;		Unchanged: 0/0
 11042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11043 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11044 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11045 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11046 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11047 ;;Total ram usage:        9 bytes
 11048 ;; Hardware stack levels used:    1
 11049 ;; This function calls:
 11050 ;;		Nothing
 11051 ;; This function is called by:
 11052 ;;		_speedCalc
 11053 ;; This function uses a non-reentrant model
 11054 ;;
 11055                           
 11056                           
 11057                           ;psect for function i1___awdiv
 11058  17AF                     i1___awdiv:	
 11059                           
 11060                           ;incstack = 0
 11061                           ; Regs used in i1___awdiv: [wreg+status,2+status,0]
 11062  17AF  01F6               	clrf	i1___awdiv@sign
 11063  17B0  1FF1               	btfss	i1___awdiv@divisor+1,7
 11064  17B1  2FB9               	goto	i1l3138
 11065  17B2  09F0               	comf	i1___awdiv@divisor,f
 11066  17B3  09F1               	comf	i1___awdiv@divisor+1,f
 11067  17B4  0AF0               	incf	i1___awdiv@divisor,f
 11068  17B5  1903               	skipnz
 11069  17B6  0AF1               	incf	i1___awdiv@divisor+1,f
 11070  17B7  01F6               	clrf	i1___awdiv@sign
 11071  17B8  0AF6               	incf	i1___awdiv@sign,f
 11072  17B9                     i1l3138:	
 11073  17B9  1FF3               	btfss	i1___awdiv@dividend+1,7
 11074  17BA  2FC4               	goto	i1l3144
 11075  17BB  09F2               	comf	i1___awdiv@dividend,f
 11076  17BC  09F3               	comf	i1___awdiv@dividend+1,f
 11077  17BD  0AF2               	incf	i1___awdiv@dividend,f
 11078  17BE  1903               	skipnz
 11079  17BF  0AF3               	incf	i1___awdiv@dividend+1,f
 11080  17C0  3001               	movlw	1
 11081  17C1  00F4               	movwf	??i1___awdiv
 11082  17C2  0874               	movf	??i1___awdiv,w
 11083  17C3  06F6               	xorwf	i1___awdiv@sign,f
 11084  17C4                     i1l3144:	
 11085  17C4  01F7               	clrf	i1___awdiv@quotient
 11086  17C5  01F8               	clrf	i1___awdiv@quotient+1
 11087  17C6  0870               	movf	i1___awdiv@divisor,w
 11088  17C7  0471               	iorwf	i1___awdiv@divisor+1,w
 11089  17C8  1903               	btfsc	3,2
 11090  17C9  2FF3               	goto	i1l3166
 11091  17CA  01F5               	clrf	i1___awdiv@counter
 11092  17CB  0AF5               	incf	i1___awdiv@counter,f
 11093  17CC                     i1l3154:	
 11094  17CC  1BF1               	btfsc	i1___awdiv@divisor+1,7
 11095  17CD  2FD8               	goto	i1l3156
 11096  17CE  3001               	movlw	1
 11097  17CF                     u390_25:	
 11098  17CF  35F0               	lslf	i1___awdiv@divisor,f
 11099  17D0  0DF1               	rlf	i1___awdiv@divisor+1,f
 11100  17D1  0B89               	decfsz	9,f
 11101  17D2  2FCF               	goto	u390_25
 11102  17D3  3001               	movlw	1
 11103  17D4  00F4               	movwf	??i1___awdiv
 11104  17D5  0874               	movf	??i1___awdiv,w
 11105  17D6  07F5               	addwf	i1___awdiv@counter,f
 11106  17D7  2FCC               	goto	i1l3154
 11107  17D8                     i1l3156:	
 11108  17D8  3001               	movlw	1
 11109  17D9                     u392_25:	
 11110  17D9  35F7               	lslf	i1___awdiv@quotient,f
 11111  17DA  0DF8               	rlf	i1___awdiv@quotient+1,f
 11112  17DB  0B89               	decfsz	9,f
 11113  17DC  2FD9               	goto	u392_25
 11114  17DD  0871               	movf	i1___awdiv@divisor+1,w
 11115  17DE  0273               	subwf	i1___awdiv@dividend+1,w
 11116  17DF  1D03               	skipz
 11117  17E0  2FE3               	goto	u393_25
 11118  17E1  0870               	movf	i1___awdiv@divisor,w
 11119  17E2  0272               	subwf	i1___awdiv@dividend,w
 11120  17E3                     u393_25:	
 11121  17E3  1C03               	skipc
 11122  17E4  2FEA               	goto	i1l3162
 11123  17E5  0870               	movf	i1___awdiv@divisor,w
 11124  17E6  02F2               	subwf	i1___awdiv@dividend,f
 11125  17E7  0871               	movf	i1___awdiv@divisor+1,w
 11126  17E8  3BF3               	subwfb	i1___awdiv@dividend+1,f
 11127  17E9  1477               	bsf	i1___awdiv@quotient,0
 11128  17EA                     i1l3162:	
 11129  17EA  3001               	movlw	1
 11130  17EB                     u394_25:	
 11131  17EB  36F1               	lsrf	i1___awdiv@divisor+1,f
 11132  17EC  0CF0               	rrf	i1___awdiv@divisor,f
 11133  17ED  0B89               	decfsz	9,f
 11134  17EE  2FEB               	goto	u394_25
 11135  17EF  3001               	movlw	1
 11136  17F0  02F5               	subwf	i1___awdiv@counter,f
 11137  17F1  1D03               	btfss	3,2
 11138  17F2  2FD8               	goto	i1l3156
 11139  17F3                     i1l3166:	
 11140  17F3  0876               	movf	i1___awdiv@sign,w
 11141  17F4  1903               	btfsc	3,2
 11142  17F5  2FFB               	goto	i1l3170
 11143  17F6  09F7               	comf	i1___awdiv@quotient,f
 11144  17F7  09F8               	comf	i1___awdiv@quotient+1,f
 11145  17F8  0AF7               	incf	i1___awdiv@quotient,f
 11146  17F9  1903               	skipnz
 11147  17FA  0AF8               	incf	i1___awdiv@quotient+1,f
 11148  17FB                     i1l3170:	
 11149  17FB  0878               	movf	i1___awdiv@quotient+1,w
 11150  17FC  00F1               	movwf	?i1___awdiv+1
 11151  17FD  0877               	movf	i1___awdiv@quotient,w
 11152  17FE  00F0               	movwf	?i1___awdiv
 11153  17FF  0008               	return
 11154  1800                     __end_ofi1___awdiv:	
 11155                           
 11156                           	psect	text47
 11157  08AC                     __ptext47:	
 11158 ;; *************** function ___fltol *****************
 11159 ;; Defined at:
 11160 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
 11161 ;; Parameters:    Size  Location     Type
 11162 ;;  f1              4   39[BANK0 ] int 
 11163 ;; Auto vars:     Size  Location     Type
 11164 ;;  exp1            1   49[BANK0 ] unsigned char 
 11165 ;;  sign1           1   48[BANK0 ] unsigned char 
 11166 ;; Return value:  Size  Location     Type
 11167 ;;                  4   39[BANK0 ] long 
 11168 ;; Registers used:
 11169 ;;		wreg, status,2, status,0
 11170 ;; Tracked objects:
 11171 ;;		On entry : 0/0
 11172 ;;		On exit  : 0/0
 11173 ;;		Unchanged: 0/0
 11174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11175 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11176 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11177 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11178 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11179 ;;Total ram usage:       11 bytes
 11180 ;; Hardware stack levels used:    1
 11181 ;; This function calls:
 11182 ;;		Nothing
 11183 ;; This function is called by:
 11184 ;;		_speedCalc
 11185 ;; This function uses a non-reentrant model
 11186 ;;
 11187                           
 11188                           
 11189                           ;psect for function ___fltol
 11190  08AC                     ___fltol:	
 11191                           
 11192                           ;incstack = 0
 11193                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 11194  08AC  1003               	clrc
 11195  08AD  0020               	movlb	0	; select bank0
 11196  08AE  0D49               	rlf	___fltol@f1+2,w
 11197  08AF  0D4A               	rlf	___fltol@f1+3,w
 11198  08B0  00CB               	movwf	??___fltol
 11199  08B1  084B               	movf	??___fltol,w
 11200  08B2  00D1               	movwf	___fltol@exp1
 11201  08B3  0851               	movf	___fltol@exp1,w
 11202  08B4  1D03               	btfss	3,2
 11203  08B5  28BF               	goto	i1l2820
 11204  08B6                     i1l2816:	
 11205  08B6  3000               	movlw	0
 11206  08B7  00CA               	movwf	?___fltol+3
 11207  08B8  3000               	movlw	0
 11208  08B9  00C9               	movwf	?___fltol+2
 11209  08BA  3000               	movlw	0
 11210  08BB  00C8               	movwf	?___fltol+1
 11211  08BC  3000               	movlw	0
 11212  08BD  00C7               	movwf	?___fltol
 11213  08BE  0008               	return
 11214  08BF                     i1l2820:	
 11215  08BF  0847               	movf	___fltol@f1,w
 11216  08C0  00CB               	movwf	??___fltol
 11217  08C1  0848               	movf	___fltol@f1+1,w
 11218  08C2  00CC               	movwf	??___fltol+1
 11219  08C3  0849               	movf	___fltol@f1+2,w
 11220  08C4  00CD               	movwf	??___fltol+2
 11221  08C5  084A               	movf	___fltol@f1+3,w
 11222  08C6  00CE               	movwf	??___fltol+3
 11223  08C7  301F               	movlw	31
 11224  08C8                     u323_25:	
 11225  08C8  36CE               	lsrf	??___fltol+3,f
 11226  08C9  0CCD               	rrf	??___fltol+2,f
 11227  08CA  0CCC               	rrf	??___fltol+1,f
 11228  08CB  0CCB               	rrf	??___fltol,f
 11229  08CC  0B89               	decfsz	9,f
 11230  08CD  28C8               	goto	u323_25
 11231  08CE  084B               	movf	??___fltol,w
 11232  08CF  00CF               	movwf	??___fltol+4
 11233  08D0  084F               	movf	??___fltol+4,w
 11234  08D1  00D0               	movwf	___fltol@sign1
 11235  08D2  17C9               	bsf	___fltol@f1+2,7
 11236  08D3  30FF               	movlw	255
 11237  08D4  05C7               	andwf	___fltol@f1,f
 11238  08D5  30FF               	movlw	255
 11239  08D6  05C8               	andwf	___fltol@f1+1,f
 11240  08D7  30FF               	movlw	255
 11241  08D8  05C9               	andwf	___fltol@f1+2,f
 11242  08D9  3000               	movlw	0
 11243  08DA  05CA               	andwf	___fltol@f1+3,f
 11244  08DB  3096               	movlw	150
 11245  08DC  02D1               	subwf	___fltol@exp1,f
 11246  08DD  1FD1               	btfss	___fltol@exp1,7
 11247  08DE  28F2               	goto	i1l2838
 11248  08DF  0851               	movf	___fltol@exp1,w
 11249  08E0  3A80               	xorlw	128
 11250  08E1  3E97               	addlw	151
 11251  08E2  1C03               	btfss	3,0
 11252  08E3  28B6               	goto	i1l2816
 11253  08E4                     i1l2836:	
 11254  08E4  3001               	movlw	1
 11255  08E5                     u326_25:	
 11256  08E5  36CA               	lsrf	___fltol@f1+3,f
 11257  08E6  0CC9               	rrf	___fltol@f1+2,f
 11258  08E7  0CC8               	rrf	___fltol@f1+1,f
 11259  08E8  0CC7               	rrf	___fltol@f1,f
 11260  08E9  0B89               	decfsz	9,f
 11261  08EA  28E5               	goto	u326_25
 11262  08EB  3001               	movlw	1
 11263  08EC  00CB               	movwf	??___fltol
 11264  08ED  084B               	movf	??___fltol,w
 11265  08EE  07D1               	addwf	___fltol@exp1,f
 11266  08EF  1903               	btfsc	3,2
 11267  08F0  2903               	goto	i1l2846
 11268  08F1  28E4               	goto	i1l2836
 11269  08F2                     i1l2838:	
 11270  08F2  3020               	movlw	32
 11271  08F3  0251               	subwf	___fltol@exp1,w
 11272  08F4  1803               	btfsc	3,0
 11273  08F5  28B6               	goto	i1l2816
 11274  08F6                     i1l792:	
 11275  08F6  0851               	movf	___fltol@exp1,w
 11276  08F7  1903               	btfsc	3,2
 11277  08F8  2903               	goto	i1l2846
 11278  08F9  3001               	movlw	1
 11279  08FA                     u329_25:	
 11280  08FA  35C7               	lslf	___fltol@f1,f
 11281  08FB  0DC8               	rlf	___fltol@f1+1,f
 11282  08FC  0DC9               	rlf	___fltol@f1+2,f
 11283  08FD  0DCA               	rlf	___fltol@f1+3,f
 11284  08FE  0B89               	decfsz	9,f
 11285  08FF  28FA               	goto	u329_25
 11286  0900  3001               	movlw	1
 11287  0901  02D1               	subwf	___fltol@exp1,f
 11288  0902  28F6               	goto	i1l792
 11289  0903                     i1l2846:	
 11290  0903  0850               	movf	___fltol@sign1,w
 11291  0904  1903               	btfsc	3,2
 11292  0905  0008               	return
 11293  0906  09C7               	comf	___fltol@f1,f
 11294  0907  09C8               	comf	___fltol@f1+1,f
 11295  0908  09C9               	comf	___fltol@f1+2,f
 11296  0909  09CA               	comf	___fltol@f1+3,f
 11297  090A  0AC7               	incf	___fltol@f1,f
 11298  090B  1903               	skipnz
 11299  090C  0AC8               	incf	___fltol@f1+1,f
 11300  090D  1903               	skipnz
 11301  090E  0AC9               	incf	___fltol@f1+2,f
 11302  090F  1903               	skipnz
 11303  0910  0ACA               	incf	___fltol@f1+3,f
 11304  0911  0008               	return
 11305  0912                     __end_of___fltol:	
 11306                           
 11307                           	psect	text48
 11308  005A                     __ptext48:	
 11309 ;; *************** function ___flmul *****************
 11310 ;; Defined at:
 11311 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
 11312 ;; Parameters:    Size  Location     Type
 11313 ;;  b               4   13[BANK0 ] long 
 11314 ;;  a               4   17[BANK0 ] long 
 11315 ;; Auto vars:     Size  Location     Type
 11316 ;;  prod            4   33[BANK0 ] struct .
 11317 ;;  grs             4   27[BANK0 ] unsigned long 
 11318 ;;  temp            2   37[BANK0 ] struct .
 11319 ;;  bexp            1   32[BANK0 ] unsigned char 
 11320 ;;  aexp            1   31[BANK0 ] unsigned char 
 11321 ;;  sign            1   26[BANK0 ] unsigned char 
 11322 ;; Return value:  Size  Location     Type
 11323 ;;                  4   13[BANK0 ] unsigned char 
 11324 ;; Registers used:
 11325 ;;		wreg, status,2, status,0, pclath, cstack
 11326 ;; Tracked objects:
 11327 ;;		On entry : 0/0
 11328 ;;		On exit  : 0/0
 11329 ;;		Unchanged: 0/0
 11330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11331 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11332 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11333 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11334 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11335 ;;Total ram usage:       26 bytes
 11336 ;; Hardware stack levels used:    1
 11337 ;; Hardware stack levels required when called:    1
 11338 ;; This function calls:
 11339 ;;		__Umul8_16
 11340 ;; This function is called by:
 11341 ;;		_speedCalc
 11342 ;; This function uses a non-reentrant model
 11343 ;;
 11344                           
 11345                           
 11346                           ;psect for function ___flmul
 11347  005A                     ___flmul:	
 11348                           
 11349                           ;incstack = 0
 11350                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 11351  005A  0020               	movlb	0	; select bank0
 11352  005B  0830               	movf	___flmul@b+3,w
 11353  005C  3980               	andlw	128
 11354  005D  00B5               	movwf	??___flmul
 11355  005E  0835               	movf	??___flmul,w
 11356  005F  00BA               	movwf	___flmul@sign
 11357  0060  3530               	lslf	___flmul@b+3,w
 11358  0061  00B5               	movwf	??___flmul
 11359  0062  0835               	movf	??___flmul,w
 11360  0063  00C0               	movwf	___flmul@bexp
 11361  0064  1BAF               	btfsc	___flmul@b+2,7
 11362  0065  1440               	bsf	___flmul@bexp,0
 11363  0066  0840               	movf	___flmul@bexp,w
 11364  0067  1903               	btfsc	3,2
 11365  0068  2876               	goto	i1l3006
 11366  0069  0A40               	incf	___flmul@bexp,w
 11367  006A  1D03               	btfss	3,2
 11368  006B  2874               	goto	i1l3004
 11369  006C  3000               	movlw	0
 11370  006D  00B0               	movwf	___flmul@b+3
 11371  006E  3000               	movlw	0
 11372  006F  00AF               	movwf	___flmul@b+2
 11373  0070  3000               	movlw	0
 11374  0071  00AE               	movwf	___flmul@b+1
 11375  0072  3000               	movlw	0
 11376  0073  00AD               	movwf	___flmul@b
 11377  0074                     i1l3004:	
 11378  0074  17AF               	bsf	___flmul@b+2,7
 11379  0075  287E               	goto	i1l3008
 11380  0076                     i1l3006:	
 11381  0076  3000               	movlw	0
 11382  0077  00B0               	movwf	___flmul@b+3
 11383  0078  3000               	movlw	0
 11384  0079  00AF               	movwf	___flmul@b+2
 11385  007A  3000               	movlw	0
 11386  007B  00AE               	movwf	___flmul@b+1
 11387  007C  3000               	movlw	0
 11388  007D  00AD               	movwf	___flmul@b
 11389  007E                     i1l3008:	
 11390  007E  0834               	movf	___flmul@a+3,w
 11391  007F  3980               	andlw	128
 11392  0080  00B5               	movwf	??___flmul
 11393  0081  0835               	movf	??___flmul,w
 11394  0082  06BA               	xorwf	___flmul@sign,f
 11395  0083  3534               	lslf	___flmul@a+3,w
 11396  0084  00B5               	movwf	??___flmul
 11397  0085  0835               	movf	??___flmul,w
 11398  0086  00BF               	movwf	___flmul@aexp
 11399  0087  1BB3               	btfsc	___flmul@a+2,7
 11400  0088  143F               	bsf	___flmul@aexp,0
 11401  0089  083F               	movf	___flmul@aexp,w
 11402  008A  1903               	btfsc	3,2
 11403  008B  2899               	goto	i1l3024
 11404  008C  0A3F               	incf	___flmul@aexp,w
 11405  008D  1D03               	btfss	3,2
 11406  008E  2897               	goto	i1l3022
 11407  008F  3000               	movlw	0
 11408  0090  00B4               	movwf	___flmul@a+3
 11409  0091  3000               	movlw	0
 11410  0092  00B3               	movwf	___flmul@a+2
 11411  0093  3000               	movlw	0
 11412  0094  00B2               	movwf	___flmul@a+1
 11413  0095  3000               	movlw	0
 11414  0096  00B1               	movwf	___flmul@a
 11415  0097                     i1l3022:	
 11416  0097  17B3               	bsf	___flmul@a+2,7
 11417  0098  28A1               	goto	i1l3026
 11418  0099                     i1l3024:	
 11419  0099  3000               	movlw	0
 11420  009A  00B4               	movwf	___flmul@a+3
 11421  009B  3000               	movlw	0
 11422  009C  00B3               	movwf	___flmul@a+2
 11423  009D  3000               	movlw	0
 11424  009E  00B2               	movwf	___flmul@a+1
 11425  009F  3000               	movlw	0
 11426  00A0  00B1               	movwf	___flmul@a
 11427  00A1                     i1l3026:	
 11428  00A1  083F               	movf	___flmul@aexp,w
 11429  00A2  1D03               	btfss	3,2
 11430  00A3  0840               	movf	___flmul@bexp,w
 11431  00A4  1D03               	btfss	3,2
 11432  00A5  28AF               	goto	i1l3034
 11433  00A6  3000               	movlw	0
 11434  00A7  00B0               	movwf	?___flmul+3
 11435  00A8  3000               	movlw	0
 11436  00A9  00AF               	movwf	?___flmul+2
 11437  00AA  3000               	movlw	0
 11438  00AB  00AE               	movwf	?___flmul+1
 11439  00AC  3000               	movlw	0
 11440  00AD  00AD               	movwf	?___flmul
 11441  00AE  0008               	return
 11442  00AF                     i1l3034:	
 11443  00AF  082D               	movf	___flmul@b,w
 11444  00B0  00B5               	movwf	??___flmul
 11445  00B1  0835               	movf	??___flmul,w
 11446  00B2  00F0               	movwf	__Umul8_16@multiplicand
 11447  00B3  0833               	movf	___flmul@a+2,w
 11448  00B4  3195  25D3  3180   	fcall	__Umul8_16
 11449  00B7  0871               	movf	?__Umul8_16+1,w
 11450  00B8  0020               	movlb	0	; select bank0
 11451  00B9  00C6               	movwf	___flmul@temp+1
 11452  00BA  0870               	movf	?__Umul8_16,w
 11453  00BB  00C5               	movwf	___flmul@temp
 11454  00BC  0845               	movf	___flmul@temp,w
 11455  00BD  00B5               	movwf	??___flmul
 11456  00BE  01B6               	clrf	??___flmul+1
 11457  00BF  01B7               	clrf	??___flmul+2
 11458  00C0  01B8               	clrf	??___flmul+3
 11459  00C1  0838               	movf	??___flmul+3,w
 11460  00C2  00BE               	movwf	___flmul@grs+3
 11461  00C3  0837               	movf	??___flmul+2,w
 11462  00C4  00BD               	movwf	___flmul@grs+2
 11463  00C5  0836               	movf	??___flmul+1,w
 11464  00C6  00BC               	movwf	___flmul@grs+1
 11465  00C7  0835               	movf	??___flmul,w
 11466  00C8  00BB               	movwf	___flmul@grs
 11467  00C9  0846               	movf	___flmul@temp+1,w
 11468  00CA  00B5               	movwf	??___flmul
 11469  00CB  01B6               	clrf	??___flmul+1
 11470  00CC  01B7               	clrf	??___flmul+2
 11471  00CD  01B8               	clrf	??___flmul+3
 11472  00CE  0838               	movf	??___flmul+3,w
 11473  00CF  00C4               	movwf	___flmul@prod+3
 11474  00D0  0837               	movf	??___flmul+2,w
 11475  00D1  00C3               	movwf	___flmul@prod+2
 11476  00D2  0836               	movf	??___flmul+1,w
 11477  00D3  00C2               	movwf	___flmul@prod+1
 11478  00D4  0835               	movf	??___flmul,w
 11479  00D5  00C1               	movwf	___flmul@prod
 11480  00D6  082E               	movf	___flmul@b+1,w
 11481  00D7  00B5               	movwf	??___flmul
 11482  00D8  0835               	movf	??___flmul,w
 11483  00D9  00F0               	movwf	__Umul8_16@multiplicand
 11484  00DA  0832               	movf	___flmul@a+1,w
 11485  00DB  3195  25D3  3180   	fcall	__Umul8_16
 11486  00DE  0871               	movf	?__Umul8_16+1,w
 11487  00DF  0020               	movlb	0	; select bank0
 11488  00E0  00C6               	movwf	___flmul@temp+1
 11489  00E1  0870               	movf	?__Umul8_16,w
 11490  00E2  00C5               	movwf	___flmul@temp
 11491  00E3  0845               	movf	___flmul@temp,w
 11492  00E4  00B5               	movwf	??___flmul
 11493  00E5  01B6               	clrf	??___flmul+1
 11494  00E6  01B7               	clrf	??___flmul+2
 11495  00E7  01B8               	clrf	??___flmul+3
 11496  00E8  0835               	movf	??___flmul,w
 11497  00E9  07BB               	addwf	___flmul@grs,f
 11498  00EA  0836               	movf	??___flmul+1,w
 11499  00EB  3DBC               	addwfc	___flmul@grs+1,f
 11500  00EC  0837               	movf	??___flmul+2,w
 11501  00ED  3DBD               	addwfc	___flmul@grs+2,f
 11502  00EE  0838               	movf	??___flmul+3,w
 11503  00EF  3DBE               	addwfc	___flmul@grs+3,f
 11504  00F0  0846               	movf	___flmul@temp+1,w
 11505  00F1  00B5               	movwf	??___flmul
 11506  00F2  01B6               	clrf	??___flmul+1
 11507  00F3  01B7               	clrf	??___flmul+2
 11508  00F4  01B8               	clrf	??___flmul+3
 11509  00F5  0835               	movf	??___flmul,w
 11510  00F6  07C1               	addwf	___flmul@prod,f
 11511  00F7  0836               	movf	??___flmul+1,w
 11512  00F8  3DC2               	addwfc	___flmul@prod+1,f
 11513  00F9  0837               	movf	??___flmul+2,w
 11514  00FA  3DC3               	addwfc	___flmul@prod+2,f
 11515  00FB  0838               	movf	??___flmul+3,w
 11516  00FC  3DC4               	addwfc	___flmul@prod+3,f
 11517  00FD  082F               	movf	___flmul@b+2,w
 11518  00FE  00B5               	movwf	??___flmul
 11519  00FF  0835               	movf	??___flmul,w
 11520  0100  00F0               	movwf	__Umul8_16@multiplicand
 11521  0101  0831               	movf	___flmul@a,w
 11522  0102  3195  25D3  3180   	fcall	__Umul8_16
 11523  0105  0871               	movf	?__Umul8_16+1,w
 11524  0106  0020               	movlb	0	; select bank0
 11525  0107  00C6               	movwf	___flmul@temp+1
 11526  0108  0870               	movf	?__Umul8_16,w
 11527  0109  00C5               	movwf	___flmul@temp
 11528  010A  0845               	movf	___flmul@temp,w
 11529  010B  00B5               	movwf	??___flmul
 11530  010C  01B6               	clrf	??___flmul+1
 11531  010D  01B7               	clrf	??___flmul+2
 11532  010E  01B8               	clrf	??___flmul+3
 11533  010F  0835               	movf	??___flmul,w
 11534  0110  07BB               	addwf	___flmul@grs,f
 11535  0111  0836               	movf	??___flmul+1,w
 11536  0112  3DBC               	addwfc	___flmul@grs+1,f
 11537  0113  0837               	movf	??___flmul+2,w
 11538  0114  3DBD               	addwfc	___flmul@grs+2,f
 11539  0115  0838               	movf	??___flmul+3,w
 11540  0116  3DBE               	addwfc	___flmul@grs+3,f
 11541  0117  0846               	movf	___flmul@temp+1,w
 11542  0118  00B5               	movwf	??___flmul
 11543  0119  01B6               	clrf	??___flmul+1
 11544  011A  01B7               	clrf	??___flmul+2
 11545  011B  01B8               	clrf	??___flmul+3
 11546  011C  0835               	movf	??___flmul,w
 11547  011D  07C1               	addwf	___flmul@prod,f
 11548  011E  0836               	movf	??___flmul+1,w
 11549  011F  3DC2               	addwfc	___flmul@prod+1,f
 11550  0120  0837               	movf	??___flmul+2,w
 11551  0121  3DC3               	addwfc	___flmul@prod+2,f
 11552  0122  0838               	movf	??___flmul+3,w
 11553  0123  3DC4               	addwfc	___flmul@prod+3,f
 11554  0124  3008               	movlw	8
 11555  0125                     u369_25:	
 11556  0125  35BB               	lslf	___flmul@grs,f
 11557  0126  0DBC               	rlf	___flmul@grs+1,f
 11558  0127  0DBD               	rlf	___flmul@grs+2,f
 11559  0128  0DBE               	rlf	___flmul@grs+3,f
 11560  0129  0B89               	decfsz	9,f
 11561  012A  2925               	goto	u369_25
 11562  012B  082E               	movf	___flmul@b+1,w
 11563  012C  00B5               	movwf	??___flmul
 11564  012D  0835               	movf	??___flmul,w
 11565  012E  00F0               	movwf	__Umul8_16@multiplicand
 11566  012F  0831               	movf	___flmul@a,w
 11567  0130  3195  25D3  3180   	fcall	__Umul8_16
 11568  0133  0871               	movf	?__Umul8_16+1,w
 11569  0134  0020               	movlb	0	; select bank0
 11570  0135  00C6               	movwf	___flmul@temp+1
 11571  0136  0870               	movf	?__Umul8_16,w
 11572  0137  00C5               	movwf	___flmul@temp
 11573  0138  0845               	movf	___flmul@temp,w
 11574  0139  07BB               	addwf	___flmul@grs,f
 11575  013A  0846               	movf	___flmul@temp+1,w
 11576  013B  3DBC               	addwfc	___flmul@grs+1,f
 11577  013C  3000               	movlw	0
 11578  013D  3DBD               	addwfc	___flmul@grs+2,f
 11579  013E  3DBE               	addwfc	___flmul@grs+3,f
 11580  013F  082D               	movf	___flmul@b,w
 11581  0140  00B5               	movwf	??___flmul
 11582  0141  0835               	movf	??___flmul,w
 11583  0142  00F0               	movwf	__Umul8_16@multiplicand
 11584  0143  0832               	movf	___flmul@a+1,w
 11585  0144  3195  25D3  3180   	fcall	__Umul8_16
 11586  0147  0871               	movf	?__Umul8_16+1,w
 11587  0148  0020               	movlb	0	; select bank0
 11588  0149  00C6               	movwf	___flmul@temp+1
 11589  014A  0870               	movf	?__Umul8_16,w
 11590  014B  00C5               	movwf	___flmul@temp
 11591  014C  0845               	movf	___flmul@temp,w
 11592  014D  07BB               	addwf	___flmul@grs,f
 11593  014E  0846               	movf	___flmul@temp+1,w
 11594  014F  3DBC               	addwfc	___flmul@grs+1,f
 11595  0150  3000               	movlw	0
 11596  0151  3DBD               	addwfc	___flmul@grs+2,f
 11597  0152  3DBE               	addwfc	___flmul@grs+3,f
 11598  0153  3008               	movlw	8
 11599  0154                     u370_25:	
 11600  0154  35BB               	lslf	___flmul@grs,f
 11601  0155  0DBC               	rlf	___flmul@grs+1,f
 11602  0156  0DBD               	rlf	___flmul@grs+2,f
 11603  0157  0DBE               	rlf	___flmul@grs+3,f
 11604  0158  0B89               	decfsz	9,f
 11605  0159  2954               	goto	u370_25
 11606  015A  082D               	movf	___flmul@b,w
 11607  015B  00B5               	movwf	??___flmul
 11608  015C  0835               	movf	??___flmul,w
 11609  015D  00F0               	movwf	__Umul8_16@multiplicand
 11610  015E  0831               	movf	___flmul@a,w
 11611  015F  3195  25D3  3180   	fcall	__Umul8_16
 11612  0162  0871               	movf	?__Umul8_16+1,w
 11613  0163  0020               	movlb	0	; select bank0
 11614  0164  00C6               	movwf	___flmul@temp+1
 11615  0165  0870               	movf	?__Umul8_16,w
 11616  0166  00C5               	movwf	___flmul@temp
 11617  0167  0845               	movf	___flmul@temp,w
 11618  0168  07BB               	addwf	___flmul@grs,f
 11619  0169  0846               	movf	___flmul@temp+1,w
 11620  016A  3DBC               	addwfc	___flmul@grs+1,f
 11621  016B  3000               	movlw	0
 11622  016C  3DBD               	addwfc	___flmul@grs+2,f
 11623  016D  3DBE               	addwfc	___flmul@grs+3,f
 11624  016E  082E               	movf	___flmul@b+1,w
 11625  016F  00B5               	movwf	??___flmul
 11626  0170  0835               	movf	??___flmul,w
 11627  0171  00F0               	movwf	__Umul8_16@multiplicand
 11628  0172  0833               	movf	___flmul@a+2,w
 11629  0173  3195  25D3  3180   	fcall	__Umul8_16
 11630  0176  0871               	movf	?__Umul8_16+1,w
 11631  0177  0020               	movlb	0	; select bank0
 11632  0178  00C6               	movwf	___flmul@temp+1
 11633  0179  0870               	movf	?__Umul8_16,w
 11634  017A  00C5               	movwf	___flmul@temp
 11635  017B  0845               	movf	___flmul@temp,w
 11636  017C  07C1               	addwf	___flmul@prod,f
 11637  017D  0846               	movf	___flmul@temp+1,w
 11638  017E  3DC2               	addwfc	___flmul@prod+1,f
 11639  017F  3000               	movlw	0
 11640  0180  3DC3               	addwfc	___flmul@prod+2,f
 11641  0181  3DC4               	addwfc	___flmul@prod+3,f
 11642  0182  082F               	movf	___flmul@b+2,w
 11643  0183  00B5               	movwf	??___flmul
 11644  0184  0835               	movf	??___flmul,w
 11645  0185  00F0               	movwf	__Umul8_16@multiplicand
 11646  0186  0832               	movf	___flmul@a+1,w
 11647  0187  3195  25D3  3180   	fcall	__Umul8_16
 11648  018A  0871               	movf	?__Umul8_16+1,w
 11649  018B  0020               	movlb	0	; select bank0
 11650  018C  00C6               	movwf	___flmul@temp+1
 11651  018D  0870               	movf	?__Umul8_16,w
 11652  018E  00C5               	movwf	___flmul@temp
 11653  018F  0845               	movf	___flmul@temp,w
 11654  0190  07C1               	addwf	___flmul@prod,f
 11655  0191  0846               	movf	___flmul@temp+1,w
 11656  0192  3DC2               	addwfc	___flmul@prod+1,f
 11657  0193  3000               	movlw	0
 11658  0194  3DC3               	addwfc	___flmul@prod+2,f
 11659  0195  3DC4               	addwfc	___flmul@prod+3,f
 11660  0196  082F               	movf	___flmul@b+2,w
 11661  0197  00B5               	movwf	??___flmul
 11662  0198  0835               	movf	??___flmul,w
 11663  0199  00F0               	movwf	__Umul8_16@multiplicand
 11664  019A  0833               	movf	___flmul@a+2,w
 11665  019B  3195  25D3  3180   	fcall	__Umul8_16
 11666  019E  0871               	movf	?__Umul8_16+1,w
 11667  019F  0020               	movlb	0	; select bank0
 11668  01A0  00C6               	movwf	___flmul@temp+1
 11669  01A1  0870               	movf	?__Umul8_16,w
 11670  01A2  00C5               	movwf	___flmul@temp
 11671  01A3  0845               	movf	___flmul@temp,w
 11672  01A4  00B5               	movwf	??___flmul
 11673  01A5  0846               	movf	___flmul@temp+1,w
 11674  01A6  00B6               	movwf	??___flmul+1
 11675  01A7  01B7               	clrf	??___flmul+2
 11676  01A8  01B8               	clrf	??___flmul+3
 11677  01A9  3008               	movlw	8
 11678  01AA                     u371_25:	
 11679  01AA  35B5               	lslf	??___flmul,f
 11680  01AB  0DB6               	rlf	??___flmul+1,f
 11681  01AC  0DB7               	rlf	??___flmul+2,f
 11682  01AD  0DB8               	rlf	??___flmul+3,f
 11683  01AE  0B89               	decfsz	9,f
 11684  01AF  29AA               	goto	u371_25
 11685  01B0  0835               	movf	??___flmul,w
 11686  01B1  07C1               	addwf	___flmul@prod,f
 11687  01B2  0836               	movf	??___flmul+1,w
 11688  01B3  3DC2               	addwfc	___flmul@prod+1,f
 11689  01B4  0837               	movf	??___flmul+2,w
 11690  01B5  3DC3               	addwfc	___flmul@prod+2,f
 11691  01B6  0838               	movf	??___flmul+3,w
 11692  01B7  3DC4               	addwfc	___flmul@prod+3,f
 11693  01B8  083B               	movf	___flmul@grs,w
 11694  01B9  00B5               	movwf	??___flmul
 11695  01BA  083C               	movf	___flmul@grs+1,w
 11696  01BB  00B6               	movwf	??___flmul+1
 11697  01BC  083D               	movf	___flmul@grs+2,w
 11698  01BD  00B7               	movwf	??___flmul+2
 11699  01BE  083E               	movf	___flmul@grs+3,w
 11700  01BF  00B8               	movwf	??___flmul+3
 11701  01C0  3018               	movlw	24
 11702  01C1                     u372_25:	
 11703  01C1  36B8               	lsrf	??___flmul+3,f
 11704  01C2  0CB7               	rrf	??___flmul+2,f
 11705  01C3  0CB6               	rrf	??___flmul+1,f
 11706  01C4  0CB5               	rrf	??___flmul,f
 11707  01C5  0B89               	decfsz	9,f
 11708  01C6  29C1               	goto	u372_25
 11709  01C7  0835               	movf	??___flmul,w
 11710  01C8  07C1               	addwf	___flmul@prod,f
 11711  01C9  0836               	movf	??___flmul+1,w
 11712  01CA  3DC2               	addwfc	___flmul@prod+1,f
 11713  01CB  0837               	movf	??___flmul+2,w
 11714  01CC  3DC3               	addwfc	___flmul@prod+2,f
 11715  01CD  0838               	movf	??___flmul+3,w
 11716  01CE  3DC4               	addwfc	___flmul@prod+3,f
 11717  01CF  3008               	movlw	8
 11718  01D0                     u373_25:	
 11719  01D0  35BB               	lslf	___flmul@grs,f
 11720  01D1  0DBC               	rlf	___flmul@grs+1,f
 11721  01D2  0DBD               	rlf	___flmul@grs+2,f
 11722  01D3  0DBE               	rlf	___flmul@grs+3,f
 11723  01D4  0B89               	decfsz	9,f
 11724  01D5  29D0               	goto	u373_25
 11725  01D6  0840               	movf	___flmul@bexp,w
 11726  01D7  073F               	addwf	___flmul@aexp,w
 11727  01D8  00B5               	movwf	??___flmul
 11728  01D9  01B6               	clrf	??___flmul+1
 11729  01DA  0DB6               	rlf	??___flmul+1,f
 11730  01DB  0835               	movf	??___flmul,w
 11731  01DC  3E82               	addlw	130
 11732  01DD  00C5               	movwf	___flmul@temp
 11733  01DE  30FF               	movlw	255
 11734  01DF  3D36               	addwfc	??___flmul+1,w
 11735  01E0  00C6               	movwf	___flmul@temp+1
 11736  01E1                     i1l3086:	
 11737  01E1  1BC3               	btfsc	___flmul@prod+2,7
 11738  01E2  29F8               	goto	i1l3088
 11739  01E3  3001               	movlw	1
 11740  01E4                     u374_25:	
 11741  01E4  35C1               	lslf	___flmul@prod,f
 11742  01E5  0DC2               	rlf	___flmul@prod+1,f
 11743  01E6  0DC3               	rlf	___flmul@prod+2,f
 11744  01E7  0DC4               	rlf	___flmul@prod+3,f
 11745  01E8  0B89               	decfsz	9,f
 11746  01E9  29E4               	goto	u374_25
 11747  01EA  1BBE               	btfsc	___flmul@grs+3,7
 11748  01EB  1441               	bsf	___flmul@prod,0
 11749  01EC  3001               	movlw	1
 11750  01ED                     u376_25:	
 11751  01ED  35BB               	lslf	___flmul@grs,f
 11752  01EE  0DBC               	rlf	___flmul@grs+1,f
 11753  01EF  0DBD               	rlf	___flmul@grs+2,f
 11754  01F0  0DBE               	rlf	___flmul@grs+3,f
 11755  01F1  0B89               	decfsz	9,f
 11756  01F2  29ED               	goto	u376_25
 11757  01F3  30FF               	movlw	255
 11758  01F4  07C5               	addwf	___flmul@temp,f
 11759  01F5  30FF               	movlw	255
 11760  01F6  3DC6               	addwfc	___flmul@temp+1,f
 11761  01F7  29E1               	goto	i1l3086
 11762  01F8                     i1l3088:	
 11763  01F8  01BF               	clrf	___flmul@aexp
 11764  01F9  1FBE               	btfss	___flmul@grs+3,7
 11765  01FA  2A11               	goto	i1l3098
 11766  01FB  30FF               	movlw	255
 11767  01FC  053B               	andwf	___flmul@grs,w
 11768  01FD  00B5               	movwf	??___flmul
 11769  01FE  30FF               	movlw	255
 11770  01FF  053C               	andwf	___flmul@grs+1,w
 11771  0200  00B6               	movwf	??___flmul+1
 11772  0201  30FF               	movlw	255
 11773  0202  053D               	andwf	___flmul@grs+2,w
 11774  0203  00B7               	movwf	??___flmul+2
 11775  0204  307F               	movlw	127
 11776  0205  053E               	andwf	___flmul@grs+3,w
 11777  0206  00B8               	movwf	??___flmul+3
 11778  0207  0838               	movf	??___flmul+3,w
 11779  0208  0437               	iorwf	??___flmul+2,w
 11780  0209  0436               	iorwf	??___flmul+1,w
 11781  020A  0435               	iorwf	??___flmul,w
 11782  020B  1903               	skipnz
 11783  020C  1841               	btfsc	___flmul@prod,0
 11784  020D  2A0F               	goto	i1l3094
 11785  020E  2A11               	goto	i1l3098
 11786  020F                     i1l3094:	
 11787  020F  01BF               	clrf	___flmul@aexp
 11788  0210  0ABF               	incf	___flmul@aexp,f
 11789  0211                     i1l3098:	
 11790  0211  083F               	movf	___flmul@aexp,w
 11791  0212  1903               	btfsc	3,2
 11792  0213  2A3A               	goto	i1l3108
 11793  0214  3001               	movlw	1
 11794  0215  07C1               	addwf	___flmul@prod,f
 11795  0216  3000               	movlw	0
 11796  0217  3DC2               	addwfc	___flmul@prod+1,f
 11797  0218  3000               	movlw	0
 11798  0219  3DC3               	addwfc	___flmul@prod+2,f
 11799  021A  3000               	movlw	0
 11800  021B  3DC4               	addwfc	___flmul@prod+3,f
 11801  021C  1C44               	btfss	___flmul@prod+3,0
 11802  021D  2A3A               	goto	i1l3108
 11803  021E  0841               	movf	___flmul@prod,w
 11804  021F  00B5               	movwf	??___flmul
 11805  0220  0842               	movf	___flmul@prod+1,w
 11806  0221  00B6               	movwf	??___flmul+1
 11807  0222  0843               	movf	___flmul@prod+2,w
 11808  0223  00B7               	movwf	??___flmul+2
 11809  0224  0844               	movf	___flmul@prod+3,w
 11810  0225  00B8               	movwf	??___flmul+3
 11811  0226  3001               	movlw	1
 11812  0227  00B9               	movwf	??___flmul+4
 11813  0228                     u383_25:	
 11814  0228  37B8               	asrf	??___flmul+3,f
 11815  0229  0CB7               	rrf	??___flmul+2,f
 11816  022A  0CB6               	rrf	??___flmul+1,f
 11817  022B  0CB5               	rrf	??___flmul,f
 11818  022C  0BB9               	decfsz	??___flmul+4,f
 11819  022D  2A28               	goto	u383_25
 11820  022E  0838               	movf	??___flmul+3,w
 11821  022F  00C4               	movwf	___flmul@prod+3
 11822  0230  0837               	movf	??___flmul+2,w
 11823  0231  00C3               	movwf	___flmul@prod+2
 11824  0232  0836               	movf	??___flmul+1,w
 11825  0233  00C2               	movwf	___flmul@prod+1
 11826  0234  0835               	movf	??___flmul,w
 11827  0235  00C1               	movwf	___flmul@prod
 11828  0236  3001               	movlw	1
 11829  0237  07C5               	addwf	___flmul@temp,f
 11830  0238  3000               	movlw	0
 11831  0239  3DC6               	addwfc	___flmul@temp+1,f
 11832  023A                     i1l3108:	
 11833  023A  0846               	movf	___flmul@temp+1,w
 11834  023B  3A80               	xorlw	128
 11835  023C  00B5               	movwf	??___flmul
 11836  023D  3080               	movlw	128
 11837  023E  0235               	subwf	??___flmul,w
 11838  023F  1D03               	skipz
 11839  0240  2A43               	goto	u384_25
 11840  0241  30FF               	movlw	255
 11841  0242  0245               	subwf	___flmul@temp,w
 11842  0243                     u384_25:	
 11843  0243  1C03               	skipc
 11844  0244  2A4F               	goto	i1l3112
 11845  0245  307F               	movlw	127
 11846  0246  0020               	movlb	0	; select bank0
 11847  0247  00C4               	movwf	___flmul@prod+3
 11848  0248  3080               	movlw	128
 11849  0249  00C3               	movwf	___flmul@prod+2
 11850  024A  3000               	movlw	0
 11851  024B  00C2               	movwf	___flmul@prod+1
 11852  024C  3000               	movlw	0
 11853  024D  00C1               	movwf	___flmul@prod
 11854  024E  2A79               	goto	i1l1000
 11855  024F                     i1l3112:	
 11856  024F  0020               	movlb	0	; select bank0
 11857  0250  0846               	movf	___flmul@temp+1,w
 11858  0251  3A80               	xorlw	128
 11859  0252  00B5               	movwf	??___flmul
 11860  0253  3080               	movlw	128
 11861  0254  0235               	subwf	??___flmul,w
 11862  0255  1D03               	skipz
 11863  0256  2A59               	goto	u385_25
 11864  0257  3001               	movlw	1
 11865  0258  0245               	subwf	___flmul@temp,w
 11866  0259                     u385_25:	
 11867  0259  1803               	skipnc
 11868  025A  2A66               	goto	i1l3118
 11869  025B  3000               	movlw	0
 11870  025C  0020               	movlb	0	; select bank0
 11871  025D  00C4               	movwf	___flmul@prod+3
 11872  025E  3000               	movlw	0
 11873  025F  00C3               	movwf	___flmul@prod+2
 11874  0260  3000               	movlw	0
 11875  0261  00C2               	movwf	___flmul@prod+1
 11876  0262  3000               	movlw	0
 11877  0263  00C1               	movwf	___flmul@prod
 11878  0264  01BA               	clrf	___flmul@sign
 11879  0265  2A79               	goto	i1l1000
 11880  0266                     i1l3118:	
 11881  0266  0020               	movlb	0	; select bank0
 11882  0267  0845               	movf	___flmul@temp,w
 11883  0268  00B5               	movwf	??___flmul
 11884  0269  0835               	movf	??___flmul,w
 11885  026A  00C0               	movwf	___flmul@bexp
 11886  026B  30FF               	movlw	255
 11887  026C  05C1               	andwf	___flmul@prod,f
 11888  026D  30FF               	movlw	255
 11889  026E  05C2               	andwf	___flmul@prod+1,f
 11890  026F  307F               	movlw	127
 11891  0270  05C3               	andwf	___flmul@prod+2,f
 11892  0271  3000               	movlw	0
 11893  0272  05C4               	andwf	___flmul@prod+3,f
 11894  0273  1840               	btfsc	___flmul@bexp,0
 11895  0274  17C3               	bsf	___flmul@prod+2,7
 11896  0275  3640               	lsrf	___flmul@bexp,w
 11897  0276  00B5               	movwf	??___flmul
 11898  0277  0835               	movf	??___flmul,w
 11899  0278  00C4               	movwf	___flmul@prod+3
 11900  0279                     i1l1000:	
 11901  0279  083A               	movf	___flmul@sign,w
 11902  027A  00B5               	movwf	??___flmul
 11903  027B  0835               	movf	??___flmul,w
 11904  027C  04C4               	iorwf	___flmul@prod+3,f
 11905  027D  0844               	movf	___flmul@prod+3,w
 11906  027E  00B0               	movwf	?___flmul+3
 11907  027F  0843               	movf	___flmul@prod+2,w
 11908  0280  00AF               	movwf	?___flmul+2
 11909  0281  0842               	movf	___flmul@prod+1,w
 11910  0282  00AE               	movwf	?___flmul+1
 11911  0283  0841               	movf	___flmul@prod,w
 11912  0284  00AD               	movwf	?___flmul
 11913  0285  0008               	return
 11914  0286                     __end_of___flmul:	
 11915                           
 11916                           	psect	text49
 11917  15D3                     __ptext49:	
 11918 ;; *************** function __Umul8_16 *****************
 11919 ;; Defined at:
 11920 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul8_16.c"
 11921 ;; Parameters:    Size  Location     Type
 11922 ;;  multiplier      1    wreg     unsigned char 
 11923 ;;  multiplicand    1    0[COMMON] unsigned char 
 11924 ;; Auto vars:     Size  Location     Type
 11925 ;;  multiplier      1    8[COMMON] unsigned char 
 11926 ;;  word_mpld       2    6[COMMON] unsigned int 
 11927 ;;  product         2    4[COMMON] unsigned int 
 11928 ;; Return value:  Size  Location     Type
 11929 ;;                  2    0[COMMON] unsigned int 
 11930 ;; Registers used:
 11931 ;;		wreg, status,2, status,0
 11932 ;; Tracked objects:
 11933 ;;		On entry : 0/0
 11934 ;;		On exit  : 0/0
 11935 ;;		Unchanged: 0/0
 11936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11937 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11938 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11939 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11940 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11941 ;;Total ram usage:        9 bytes
 11942 ;; Hardware stack levels used:    1
 11943 ;; This function calls:
 11944 ;;		Nothing
 11945 ;; This function is called by:
 11946 ;;		___flmul
 11947 ;; This function uses a non-reentrant model
 11948 ;;
 11949                           
 11950                           
 11951                           ;psect for function __Umul8_16
 11952  15D3                     __Umul8_16:	
 11953                           
 11954                           ;incstack = 0
 11955                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 11956                           ;__Umul8_16@multiplier stored from wreg
 11957  15D3  00F8               	movwf	__Umul8_16@multiplier
 11958  15D4  01F4               	clrf	__Umul8_16@product
 11959  15D5  01F5               	clrf	__Umul8_16@product+1
 11960  15D6  0870               	movf	__Umul8_16@multiplicand,w
 11961  15D7  00F2               	movwf	??__Umul8_16
 11962  15D8  01F3               	clrf	??__Umul8_16+1
 11963  15D9  0872               	movf	??__Umul8_16,w
 11964  15DA  00F6               	movwf	__Umul8_16@word_mpld
 11965  15DB  0873               	movf	??__Umul8_16+1,w
 11966  15DC  00F7               	movwf	__Umul8_16@word_mpld+1
 11967  15DD                     i1l2708:	
 11968  15DD  1C78               	btfss	__Umul8_16@multiplier,0
 11969  15DE  2DE3               	goto	i1l1094
 11970  15DF  0876               	movf	__Umul8_16@word_mpld,w
 11971  15E0  07F4               	addwf	__Umul8_16@product,f
 11972  15E1  0877               	movf	__Umul8_16@word_mpld+1,w
 11973  15E2  3DF5               	addwfc	__Umul8_16@product+1,f
 11974  15E3                     i1l1094:	
 11975  15E3  3001               	movlw	1
 11976  15E4                     u295_25:	
 11977  15E4  35F6               	lslf	__Umul8_16@word_mpld,f
 11978  15E5  0DF7               	rlf	__Umul8_16@word_mpld+1,f
 11979  15E6  0B89               	decfsz	9,f
 11980  15E7  2DE4               	goto	u295_25
 11981  15E8  1003               	clrc
 11982  15E9  0CF8               	rrf	__Umul8_16@multiplier,f
 11983  15EA  0878               	movf	__Umul8_16@multiplier,w
 11984  15EB  1D03               	btfss	3,2
 11985  15EC  2DDD               	goto	i1l2708
 11986  15ED  0875               	movf	__Umul8_16@product+1,w
 11987  15EE  00F1               	movwf	?__Umul8_16+1
 11988  15EF  0874               	movf	__Umul8_16@product,w
 11989  15F0  00F0               	movwf	?__Umul8_16
 11990  15F1  0008               	return
 11991  15F2                     __end_of__Umul8_16:	
 11992                           
 11993                           	psect	text50
 11994  0652                     __ptext50:	
 11995 ;; *************** function ___fldiv *****************
 11996 ;; Defined at:
 11997 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
 11998 ;; Parameters:    Size  Location     Type
 11999 ;;  a               4    0[COMMON] unsigned int 
 12000 ;;  b               4    4[COMMON] unsigned int 
 12001 ;; Auto vars:     Size  Location     Type
 12002 ;;  grs             4    7[BANK0 ] unsigned long 
 12003 ;;  rem             4    0[BANK0 ] unsigned long 
 12004 ;;  new_exp         2    5[BANK0 ] int 
 12005 ;;  aexp            1   12[BANK0 ] unsigned char 
 12006 ;;  bexp            1   11[BANK0 ] unsigned char 
 12007 ;;  sign            1    4[BANK0 ] unsigned char 
 12008 ;; Return value:  Size  Location     Type
 12009 ;;                  4    0[COMMON] unsigned char 
 12010 ;; Registers used:
 12011 ;;		wreg, status,2, status,0
 12012 ;; Tracked objects:
 12013 ;;		On entry : 0/0
 12014 ;;		On exit  : 0/0
 12015 ;;		Unchanged: 0/0
 12016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12017 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12018 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12019 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12020 ;;      Totals:        13      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12021 ;;Total ram usage:       26 bytes
 12022 ;; Hardware stack levels used:    1
 12023 ;; This function calls:
 12024 ;;		Nothing
 12025 ;; This function is called by:
 12026 ;;		_speedCalc
 12027 ;; This function uses a non-reentrant model
 12028 ;;
 12029                           
 12030                           
 12031                           ;psect for function ___fldiv
 12032  0652                     ___fldiv:	
 12033                           
 12034                           ;incstack = 0
 12035                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 12036  0652  0877               	movf	___fldiv@b+3,w
 12037  0653  3980               	andlw	128
 12038  0654  00F8               	movwf	??___fldiv
 12039  0655  0878               	movf	??___fldiv,w
 12040  0656  0020               	movlb	0	; select bank0
 12041  0657  00A4               	movwf	___fldiv@sign
 12042  0658  3577               	lslf	___fldiv@b+3,w
 12043  0659  00F8               	movwf	??___fldiv
 12044  065A  0878               	movf	??___fldiv,w
 12045  065B  00AB               	movwf	___fldiv@bexp
 12046  065C  1BF6               	btfsc	___fldiv@b+2,7
 12047  065D  142B               	bsf	___fldiv@bexp,0
 12048  065E  082B               	movf	___fldiv@bexp,w
 12049  065F  1903               	btfsc	3,2
 12050  0660  2E6F               	goto	i1l2868
 12051  0661  0A2B               	incf	___fldiv@bexp,w
 12052  0662  1D03               	btfss	3,2
 12053  0663  2E6C               	goto	i1l2864
 12054  0664  3000               	movlw	0
 12055  0665  00F7               	movwf	___fldiv@b+3
 12056  0666  3000               	movlw	0
 12057  0667  00F6               	movwf	___fldiv@b+2
 12058  0668  3000               	movlw	0
 12059  0669  00F5               	movwf	___fldiv@b+1
 12060  066A  3000               	movlw	0
 12061  066B  00F4               	movwf	___fldiv@b
 12062  066C                     i1l2864:	
 12063  066C  17F6               	bsf	___fldiv@b+2,7
 12064  066D  01F7               	clrf	___fldiv@b+3
 12065  066E  2E77               	goto	i1l2870
 12066  066F                     i1l2868:	
 12067  066F  3000               	movlw	0
 12068  0670  00F7               	movwf	___fldiv@b+3
 12069  0671  3000               	movlw	0
 12070  0672  00F6               	movwf	___fldiv@b+2
 12071  0673  3000               	movlw	0
 12072  0674  00F5               	movwf	___fldiv@b+1
 12073  0675  3000               	movlw	0
 12074  0676  00F4               	movwf	___fldiv@b
 12075  0677                     i1l2870:	
 12076  0677  0873               	movf	___fldiv@a+3,w
 12077  0678  3980               	andlw	128
 12078  0679  00F8               	movwf	??___fldiv
 12079  067A  0878               	movf	??___fldiv,w
 12080  067B  06A4               	xorwf	___fldiv@sign,f
 12081  067C  3573               	lslf	___fldiv@a+3,w
 12082  067D  00F8               	movwf	??___fldiv
 12083  067E  0878               	movf	??___fldiv,w
 12084  067F  00AC               	movwf	___fldiv@aexp
 12085  0680  1BF2               	btfsc	___fldiv@a+2,7
 12086  0681  142C               	bsf	___fldiv@aexp,0
 12087  0682  082C               	movf	___fldiv@aexp,w
 12088  0683  1903               	btfsc	3,2
 12089  0684  2E93               	goto	i1l2888
 12090  0685  0A2C               	incf	___fldiv@aexp,w
 12091  0686  1D03               	btfss	3,2
 12092  0687  2E90               	goto	i1l2884
 12093  0688  3000               	movlw	0
 12094  0689  00F3               	movwf	___fldiv@a+3
 12095  068A  3000               	movlw	0
 12096  068B  00F2               	movwf	___fldiv@a+2
 12097  068C  3000               	movlw	0
 12098  068D  00F1               	movwf	___fldiv@a+1
 12099  068E  3000               	movlw	0
 12100  068F  00F0               	movwf	___fldiv@a
 12101  0690                     i1l2884:	
 12102  0690  17F2               	bsf	___fldiv@a+2,7
 12103  0691  01F3               	clrf	___fldiv@a+3
 12104  0692  2E9B               	goto	i1l948
 12105  0693                     i1l2888:	
 12106  0693  3000               	movlw	0
 12107  0694  00F3               	movwf	___fldiv@a+3
 12108  0695  3000               	movlw	0
 12109  0696  00F2               	movwf	___fldiv@a+2
 12110  0697  3000               	movlw	0
 12111  0698  00F1               	movwf	___fldiv@a+1
 12112  0699  3000               	movlw	0
 12113  069A  00F0               	movwf	___fldiv@a
 12114  069B                     i1l948:	
 12115  069B  0873               	movf	___fldiv@a+3,w
 12116  069C  0472               	iorwf	___fldiv@a+2,w
 12117  069D  0471               	iorwf	___fldiv@a+1,w
 12118  069E  0470               	iorwf	___fldiv@a,w
 12119  069F  1D03               	skipz
 12120  06A0  2EBA               	goto	i1l2898
 12121  06A1  3000               	movlw	0
 12122  06A2  00F7               	movwf	___fldiv@b+3
 12123  06A3  3000               	movlw	0
 12124  06A4  00F6               	movwf	___fldiv@b+2
 12125  06A5  3000               	movlw	0
 12126  06A6  00F5               	movwf	___fldiv@b+1
 12127  06A7  3000               	movlw	0
 12128  06A8  00F4               	movwf	___fldiv@b
 12129  06A9  3080               	movlw	128
 12130  06AA  04F6               	iorwf	___fldiv@b+2,f
 12131  06AB  307F               	movlw	127
 12132  06AC  04F7               	iorwf	___fldiv@b+3,f
 12133  06AD                     L5:	
 12134  06AD  0824               	movf	___fldiv@sign,w
 12135  06AE  00F8               	movwf	??___fldiv
 12136  06AF  0878               	movf	??___fldiv,w
 12137  06B0  04F7               	iorwf	___fldiv@b+3,f
 12138  06B1  0877               	movf	___fldiv@b+3,w
 12139  06B2  00F3               	movwf	?___fldiv+3
 12140  06B3  0876               	movf	___fldiv@b+2,w
 12141  06B4  00F2               	movwf	?___fldiv+2
 12142  06B5  0875               	movf	___fldiv@b+1,w
 12143  06B6  00F1               	movwf	?___fldiv+1
 12144  06B7  0874               	movf	___fldiv@b,w
 12145  06B8  00F0               	movwf	?___fldiv
 12146  06B9  0008               	return
 12147  06BA                     i1l2898:	
 12148  06BA  082B               	movf	___fldiv@bexp,w
 12149  06BB  1D03               	btfss	3,2
 12150  06BC  2EC6               	goto	i1l2904
 12151  06BD  3000               	movlw	0
 12152  06BE  00F3               	movwf	?___fldiv+3
 12153  06BF  3000               	movlw	0
 12154  06C0  00F2               	movwf	?___fldiv+2
 12155  06C1  3000               	movlw	0
 12156  06C2  00F1               	movwf	?___fldiv+1
 12157  06C3  3000               	movlw	0
 12158  06C4  00F0               	movwf	?___fldiv
 12159  06C5  0008               	return
 12160  06C6                     i1l2904:	
 12161  06C6  082B               	movf	___fldiv@bexp,w
 12162  06C7  00F8               	movwf	??___fldiv
 12163  06C8  01F9               	clrf	??___fldiv+1
 12164  06C9  0879               	movf	??___fldiv+1,w
 12165  06CA  00FB               	movwf	??___fldiv+3
 12166  06CB  082C               	movf	___fldiv@aexp,w
 12167  06CC  0278               	subwf	??___fldiv,w
 12168  06CD  00FA               	movwf	??___fldiv+2
 12169  06CE  1C03               	skipc
 12170  06CF  03FB               	decf	??___fldiv+3,f
 12171  06D0  087A               	movf	??___fldiv+2,w
 12172  06D1  3E7F               	addlw	127
 12173  06D2  00A5               	movwf	___fldiv@new_exp
 12174  06D3  3000               	movlw	0
 12175  06D4  3D7B               	addwfc	??___fldiv+3,w
 12176  06D5  00A6               	movwf	___fldiv@new_exp+1
 12177  06D6  0877               	movf	___fldiv@b+3,w
 12178  06D7  00A3               	movwf	___fldiv@rem+3
 12179  06D8  0876               	movf	___fldiv@b+2,w
 12180  06D9  00A2               	movwf	___fldiv@rem+2
 12181  06DA  0875               	movf	___fldiv@b+1,w
 12182  06DB  00A1               	movwf	___fldiv@rem+1
 12183  06DC  0874               	movf	___fldiv@b,w
 12184  06DD  00A0               	movwf	___fldiv@rem
 12185  06DE  3000               	movlw	0
 12186  06DF  00F7               	movwf	___fldiv@b+3
 12187  06E0  3000               	movlw	0
 12188  06E1  00F6               	movwf	___fldiv@b+2
 12189  06E2  3000               	movlw	0
 12190  06E3  00F5               	movwf	___fldiv@b+1
 12191  06E4  3000               	movlw	0
 12192  06E5  00F4               	movwf	___fldiv@b
 12193  06E6  3000               	movlw	0
 12194  06E7  00AA               	movwf	___fldiv@grs+3
 12195  06E8  3000               	movlw	0
 12196  06E9  00A9               	movwf	___fldiv@grs+2
 12197  06EA  3000               	movlw	0
 12198  06EB  00A8               	movwf	___fldiv@grs+1
 12199  06EC  3000               	movlw	0
 12200  06ED  00A7               	movwf	___fldiv@grs
 12201  06EE  01AC               	clrf	___fldiv@aexp
 12202  06EF                     i1l2932:	
 12203  06EF  301A               	movlw	26
 12204  06F0  022C               	subwf	___fldiv@aexp,w
 12205  06F1  1803               	btfsc	3,0
 12206  06F2  2F2B               	goto	i1l2934
 12207  06F3  082C               	movf	___fldiv@aexp,w
 12208  06F4  1903               	btfsc	3,2
 12209  06F5  2F0D               	goto	i1l2924
 12210  06F6  3001               	movlw	1
 12211  06F7                     u341_25:	
 12212  06F7  35A0               	lslf	___fldiv@rem,f
 12213  06F8  0DA1               	rlf	___fldiv@rem+1,f
 12214  06F9  0DA2               	rlf	___fldiv@rem+2,f
 12215  06FA  0DA3               	rlf	___fldiv@rem+3,f
 12216  06FB  0B89               	decfsz	9,f
 12217  06FC  2EF7               	goto	u341_25
 12218  06FD  3001               	movlw	1
 12219  06FE                     u342_25:	
 12220  06FE  35F4               	lslf	___fldiv@b,f
 12221  06FF  0DF5               	rlf	___fldiv@b+1,f
 12222  0700  0DF6               	rlf	___fldiv@b+2,f
 12223  0701  0DF7               	rlf	___fldiv@b+3,f
 12224  0702  0B89               	decfsz	9,f
 12225  0703  2EFE               	goto	u342_25
 12226  0704  1BAA               	btfsc	___fldiv@grs+3,7
 12227  0705  1474               	bsf	___fldiv@b,0
 12228  0706  3001               	movlw	1
 12229  0707                     u344_25:	
 12230  0707  35A7               	lslf	___fldiv@grs,f
 12231  0708  0DA8               	rlf	___fldiv@grs+1,f
 12232  0709  0DA9               	rlf	___fldiv@grs+2,f
 12233  070A  0DAA               	rlf	___fldiv@grs+3,f
 12234  070B  0B89               	decfsz	9,f
 12235  070C  2F07               	goto	u344_25
 12236  070D                     i1l2924:	
 12237  070D  0873               	movf	___fldiv@a+3,w
 12238  070E  0223               	subwf	___fldiv@rem+3,w
 12239  070F  1D03               	skipz
 12240  0710  2F1B               	goto	u345_25
 12241  0711  0872               	movf	___fldiv@a+2,w
 12242  0712  0222               	subwf	___fldiv@rem+2,w
 12243  0713  1D03               	skipz
 12244  0714  2F1B               	goto	u345_25
 12245  0715  0871               	movf	___fldiv@a+1,w
 12246  0716  0221               	subwf	___fldiv@rem+1,w
 12247  0717  1D03               	skipz
 12248  0718  2F1B               	goto	u345_25
 12249  0719  0870               	movf	___fldiv@a,w
 12250  071A  0220               	subwf	___fldiv@rem,w
 12251  071B                     u345_25:	
 12252  071B  1C03               	skipc
 12253  071C  2F26               	goto	i1l2930
 12254  071D  172A               	bsf	___fldiv@grs+3,6
 12255  071E  0870               	movf	___fldiv@a,w
 12256  071F  02A0               	subwf	___fldiv@rem,f
 12257  0720  0871               	movf	___fldiv@a+1,w
 12258  0721  3BA1               	subwfb	___fldiv@rem+1,f
 12259  0722  0872               	movf	___fldiv@a+2,w
 12260  0723  3BA2               	subwfb	___fldiv@rem+2,f
 12261  0724  0873               	movf	___fldiv@a+3,w
 12262  0725  3BA3               	subwfb	___fldiv@rem+3,f
 12263  0726                     i1l2930:	
 12264  0726  3001               	movlw	1
 12265  0727  00F8               	movwf	??___fldiv
 12266  0728  0878               	movf	??___fldiv,w
 12267  0729  07AC               	addwf	___fldiv@aexp,f
 12268  072A  2EEF               	goto	i1l2932
 12269  072B                     i1l2934:	
 12270  072B  0823               	movf	___fldiv@rem+3,w
 12271  072C  0422               	iorwf	___fldiv@rem+2,w
 12272  072D  0421               	iorwf	___fldiv@rem+1,w
 12273  072E  0420               	iorwf	___fldiv@rem,w
 12274  072F  1D03               	btfss	3,2
 12275  0730  1427               	bsf	___fldiv@grs,0
 12276  0731                     i1l2948:	
 12277  0731  1BF6               	btfsc	___fldiv@b+2,7
 12278  0732  2F48               	goto	i1l2950
 12279  0733  3001               	movlw	1
 12280  0734                     u348_25:	
 12281  0734  35F4               	lslf	___fldiv@b,f
 12282  0735  0DF5               	rlf	___fldiv@b+1,f
 12283  0736  0DF6               	rlf	___fldiv@b+2,f
 12284  0737  0DF7               	rlf	___fldiv@b+3,f
 12285  0738  0B89               	decfsz	9,f
 12286  0739  2F34               	goto	u348_25
 12287  073A  1BAA               	btfsc	___fldiv@grs+3,7
 12288  073B  1474               	bsf	___fldiv@b,0
 12289  073C  3001               	movlw	1
 12290  073D                     u350_25:	
 12291  073D  35A7               	lslf	___fldiv@grs,f
 12292  073E  0DA8               	rlf	___fldiv@grs+1,f
 12293  073F  0DA9               	rlf	___fldiv@grs+2,f
 12294  0740  0DAA               	rlf	___fldiv@grs+3,f
 12295  0741  0B89               	decfsz	9,f
 12296  0742  2F3D               	goto	u350_25
 12297  0743  30FF               	movlw	255
 12298  0744  07A5               	addwf	___fldiv@new_exp,f
 12299  0745  30FF               	movlw	255
 12300  0746  3DA6               	addwfc	___fldiv@new_exp+1,f
 12301  0747  2F31               	goto	i1l2948
 12302  0748                     i1l2950:	
 12303  0748  01AC               	clrf	___fldiv@aexp
 12304  0749  1FAA               	btfss	___fldiv@grs+3,7
 12305  074A  2F61               	goto	i1l2960
 12306  074B  30FF               	movlw	255
 12307  074C  0527               	andwf	___fldiv@grs,w
 12308  074D  00F8               	movwf	??___fldiv
 12309  074E  30FF               	movlw	255
 12310  074F  0528               	andwf	___fldiv@grs+1,w
 12311  0750  00F9               	movwf	??___fldiv+1
 12312  0751  30FF               	movlw	255
 12313  0752  0529               	andwf	___fldiv@grs+2,w
 12314  0753  00FA               	movwf	??___fldiv+2
 12315  0754  307F               	movlw	127
 12316  0755  052A               	andwf	___fldiv@grs+3,w
 12317  0756  00FB               	movwf	??___fldiv+3
 12318  0757  087B               	movf	??___fldiv+3,w
 12319  0758  047A               	iorwf	??___fldiv+2,w
 12320  0759  0479               	iorwf	??___fldiv+1,w
 12321  075A  0478               	iorwf	??___fldiv,w
 12322  075B  1903               	skipnz
 12323  075C  1874               	btfsc	___fldiv@b,0
 12324  075D  2F5F               	goto	i1l2956
 12325  075E  2F61               	goto	i1l2960
 12326  075F                     i1l2956:	
 12327  075F  01AC               	clrf	___fldiv@aexp
 12328  0760  0AAC               	incf	___fldiv@aexp,f
 12329  0761                     i1l2960:	
 12330  0761  082C               	movf	___fldiv@aexp,w
 12331  0762  1903               	btfsc	3,2
 12332  0763  2F8A               	goto	i1l2970
 12333  0764  3001               	movlw	1
 12334  0765  07F4               	addwf	___fldiv@b,f
 12335  0766  3000               	movlw	0
 12336  0767  3DF5               	addwfc	___fldiv@b+1,f
 12337  0768  3000               	movlw	0
 12338  0769  3DF6               	addwfc	___fldiv@b+2,f
 12339  076A  3000               	movlw	0
 12340  076B  3DF7               	addwfc	___fldiv@b+3,f
 12341  076C  1C77               	btfss	___fldiv@b+3,0
 12342  076D  2F8A               	goto	i1l2970
 12343  076E  0874               	movf	___fldiv@b,w
 12344  076F  00F8               	movwf	??___fldiv
 12345  0770  0875               	movf	___fldiv@b+1,w
 12346  0771  00F9               	movwf	??___fldiv+1
 12347  0772  0876               	movf	___fldiv@b+2,w
 12348  0773  00FA               	movwf	??___fldiv+2
 12349  0774  0877               	movf	___fldiv@b+3,w
 12350  0775  00FB               	movwf	??___fldiv+3
 12351  0776  3001               	movlw	1
 12352  0777  00FC               	movwf	??___fldiv+4
 12353  0778                     u357_25:	
 12354  0778  37FB               	asrf	??___fldiv+3,f
 12355  0779  0CFA               	rrf	??___fldiv+2,f
 12356  077A  0CF9               	rrf	??___fldiv+1,f
 12357  077B  0CF8               	rrf	??___fldiv,f
 12358  077C  0BFC               	decfsz	??___fldiv+4,f
 12359  077D  2F78               	goto	u357_25
 12360  077E  087B               	movf	??___fldiv+3,w
 12361  077F  00F7               	movwf	___fldiv@b+3
 12362  0780  087A               	movf	??___fldiv+2,w
 12363  0781  00F6               	movwf	___fldiv@b+2
 12364  0782  0879               	movf	??___fldiv+1,w
 12365  0783  00F5               	movwf	___fldiv@b+1
 12366  0784  0878               	movf	??___fldiv,w
 12367  0785  00F4               	movwf	___fldiv@b
 12368  0786  3001               	movlw	1
 12369  0787  07A5               	addwf	___fldiv@new_exp,f
 12370  0788  3000               	movlw	0
 12371  0789  3DA6               	addwfc	___fldiv@new_exp+1,f
 12372  078A                     i1l2970:	
 12373  078A  0826               	movf	___fldiv@new_exp+1,w
 12374  078B  3A80               	xorlw	128
 12375  078C  00F8               	movwf	??___fldiv
 12376  078D  3080               	movlw	128
 12377  078E  0278               	subwf	??___fldiv,w
 12378  078F  1D03               	skipz
 12379  0790  2F93               	goto	u358_25
 12380  0791  30FF               	movlw	255
 12381  0792  0225               	subwf	___fldiv@new_exp,w
 12382  0793                     u358_25:	
 12383  0793  1C03               	skipc
 12384  0794  2FA2               	goto	i1l969
 12385  0795  30FF               	movlw	255
 12386  0796  0020               	movlb	0	; select bank0
 12387  0797  00A5               	movwf	___fldiv@new_exp
 12388  0798  3000               	movlw	0
 12389  0799  00A6               	movwf	___fldiv@new_exp+1
 12390  079A  3000               	movlw	0
 12391  079B  00F7               	movwf	___fldiv@b+3
 12392  079C  3000               	movlw	0
 12393  079D  00F6               	movwf	___fldiv@b+2
 12394  079E  3000               	movlw	0
 12395  079F  00F5               	movwf	___fldiv@b+1
 12396  07A0  3000               	movlw	0
 12397  07A1  00F4               	movwf	___fldiv@b
 12398  07A2                     i1l969:	
 12399  07A2  0020               	movlb	0	; select bank0
 12400  07A3  0826               	movf	___fldiv@new_exp+1,w
 12401  07A4  3A80               	xorlw	128
 12402  07A5  00F8               	movwf	??___fldiv
 12403  07A6  3080               	movlw	128
 12404  07A7  0278               	subwf	??___fldiv,w
 12405  07A8  1D03               	skipz
 12406  07A9  2FAC               	goto	u359_25
 12407  07AA  3001               	movlw	1
 12408  07AB  0225               	subwf	___fldiv@new_exp,w
 12409  07AC                     u359_25:	
 12410  07AC  1803               	skipnc
 12411  07AD  2FBA               	goto	i1l970
 12412  07AE  0020               	movlb	0	; select bank0
 12413  07AF  01A5               	clrf	___fldiv@new_exp
 12414  07B0  01A6               	clrf	___fldiv@new_exp+1
 12415  07B1  3000               	movlw	0
 12416  07B2  00F7               	movwf	___fldiv@b+3
 12417  07B3  3000               	movlw	0
 12418  07B4  00F6               	movwf	___fldiv@b+2
 12419  07B5  3000               	movlw	0
 12420  07B6  00F5               	movwf	___fldiv@b+1
 12421  07B7  3000               	movlw	0
 12422  07B8  00F4               	movwf	___fldiv@b
 12423  07B9  01A4               	clrf	___fldiv@sign
 12424  07BA                     i1l970:	
 12425  07BA  0020               	movlb	0	; select bank0
 12426  07BB  0825               	movf	___fldiv@new_exp,w
 12427  07BC  00F8               	movwf	??___fldiv
 12428  07BD  0878               	movf	??___fldiv,w
 12429  07BE  00AB               	movwf	___fldiv@bexp
 12430  07BF  1C2B               	btfss	___fldiv@bexp,0
 12431  07C0  2FC3               	goto	i1l2984
 12432  07C1  17F6               	bsf	___fldiv@b+2,7
 12433  07C2  2FC7               	goto	i1l972
 12434  07C3                     i1l2984:	
 12435  07C3  307F               	movlw	127
 12436  07C4  00F8               	movwf	??___fldiv
 12437  07C5  0878               	movf	??___fldiv,w
 12438  07C6  05F6               	andwf	___fldiv@b+2,f
 12439  07C7                     i1l972:	
 12440  07C7  362B               	lsrf	___fldiv@bexp,w
 12441  07C8  00F8               	movwf	??___fldiv
 12442  07C9  0878               	movf	??___fldiv,w
 12443  07CA  00F7               	movwf	___fldiv@b+3
 12444  07CB  2EAD               	goto	L5
 12445  07CC                     __end_of___fldiv:	
 12446                           
 12447                           	psect	text51
 12448  1769                     __ptext51:	
 12449 ;; *************** function ___awmod *****************
 12450 ;; Defined at:
 12451 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
 12452 ;; Parameters:    Size  Location     Type
 12453 ;;  divisor         2   50[BANK0 ] int 
 12454 ;;  dividend        2   52[BANK0 ] int 
 12455 ;; Auto vars:     Size  Location     Type
 12456 ;;  sign            1   55[BANK0 ] unsigned char 
 12457 ;;  counter         1   54[BANK0 ] unsigned char 
 12458 ;; Return value:  Size  Location     Type
 12459 ;;                  2   50[BANK0 ] int 
 12460 ;; Registers used:
 12461 ;;		wreg, status,2, status,0
 12462 ;; Tracked objects:
 12463 ;;		On entry : 0/0
 12464 ;;		On exit  : 0/0
 12465 ;;		Unchanged: 0/0
 12466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12467 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12468 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12469 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12470 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12471 ;;Total ram usage:        7 bytes
 12472 ;; Hardware stack levels used:    1
 12473 ;; This function calls:
 12474 ;;		Nothing
 12475 ;; This function is called by:
 12476 ;;		_speedCalc
 12477 ;; This function uses a non-reentrant model
 12478 ;;
 12479                           
 12480                           
 12481                           ;psect for function ___awmod
 12482  1769                     ___awmod:	
 12483                           
 12484                           ;incstack = 0
 12485                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 12486  1769  0020               	movlb	0	; select bank0
 12487  176A  01D7               	clrf	___awmod@sign
 12488  176B  1FD5               	btfss	___awmod@dividend+1,7
 12489  176C  2F74               	goto	i1l2784
 12490  176D  09D4               	comf	___awmod@dividend,f
 12491  176E  09D5               	comf	___awmod@dividend+1,f
 12492  176F  0AD4               	incf	___awmod@dividend,f
 12493  1770  1903               	skipnz
 12494  1771  0AD5               	incf	___awmod@dividend+1,f
 12495  1772  01D7               	clrf	___awmod@sign
 12496  1773  0AD7               	incf	___awmod@sign,f
 12497  1774                     i1l2784:	
 12498  1774  1FD3               	btfss	___awmod@divisor+1,7
 12499  1775  2F7B               	goto	i1l2788
 12500  1776  09D2               	comf	___awmod@divisor,f
 12501  1777  09D3               	comf	___awmod@divisor+1,f
 12502  1778  0AD2               	incf	___awmod@divisor,f
 12503  1779  1903               	skipnz
 12504  177A  0AD3               	incf	___awmod@divisor+1,f
 12505  177B                     i1l2788:	
 12506  177B  0852               	movf	___awmod@divisor,w
 12507  177C  0453               	iorwf	___awmod@divisor+1,w
 12508  177D  1903               	btfsc	3,2
 12509  177E  2FA2               	goto	i1l2806
 12510  177F  01D6               	clrf	___awmod@counter
 12511  1780  0AD6               	incf	___awmod@counter,f
 12512  1781                     i1l2796:	
 12513  1781  1BD3               	btfsc	___awmod@divisor+1,7
 12514  1782  2F8D               	goto	i1l2798
 12515  1783  3001               	movlw	1
 12516  1784                     u316_25:	
 12517  1784  35D2               	lslf	___awmod@divisor,f
 12518  1785  0DD3               	rlf	___awmod@divisor+1,f
 12519  1786  0B89               	decfsz	9,f
 12520  1787  2F84               	goto	u316_25
 12521  1788  3001               	movlw	1
 12522  1789  00FD               	movwf	??___awmod
 12523  178A  087D               	movf	??___awmod,w
 12524  178B  07D6               	addwf	___awmod@counter,f
 12525  178C  2F81               	goto	i1l2796
 12526  178D                     i1l2798:	
 12527  178D  0853               	movf	___awmod@divisor+1,w
 12528  178E  0255               	subwf	___awmod@dividend+1,w
 12529  178F  1D03               	skipz
 12530  1790  2F93               	goto	u318_25
 12531  1791  0852               	movf	___awmod@divisor,w
 12532  1792  0254               	subwf	___awmod@dividend,w
 12533  1793                     u318_25:	
 12534  1793  1C03               	skipc
 12535  1794  2F99               	goto	i1l2802
 12536  1795  0852               	movf	___awmod@divisor,w
 12537  1796  02D4               	subwf	___awmod@dividend,f
 12538  1797  0853               	movf	___awmod@divisor+1,w
 12539  1798  3BD5               	subwfb	___awmod@dividend+1,f
 12540  1799                     i1l2802:	
 12541  1799  3001               	movlw	1
 12542  179A                     u319_25:	
 12543  179A  36D3               	lsrf	___awmod@divisor+1,f
 12544  179B  0CD2               	rrf	___awmod@divisor,f
 12545  179C  0B89               	decfsz	9,f
 12546  179D  2F9A               	goto	u319_25
 12547  179E  3001               	movlw	1
 12548  179F  02D6               	subwf	___awmod@counter,f
 12549  17A0  1D03               	btfss	3,2
 12550  17A1  2F8D               	goto	i1l2798
 12551  17A2                     i1l2806:	
 12552  17A2  0857               	movf	___awmod@sign,w
 12553  17A3  1903               	btfsc	3,2
 12554  17A4  2FAA               	goto	i1l2810
 12555  17A5  09D4               	comf	___awmod@dividend,f
 12556  17A6  09D5               	comf	___awmod@dividend+1,f
 12557  17A7  0AD4               	incf	___awmod@dividend,f
 12558  17A8  1903               	skipnz
 12559  17A9  0AD5               	incf	___awmod@dividend+1,f
 12560  17AA                     i1l2810:	
 12561  17AA  0855               	movf	___awmod@dividend+1,w
 12562  17AB  00D3               	movwf	?___awmod+1
 12563  17AC  0854               	movf	___awmod@dividend,w
 12564  17AD  00D2               	movwf	?___awmod
 12565  17AE  0008               	return
 12566  17AF                     __end_of___awmod:	
 12567  007E                     btemp	set	126	;btemp
 12568  007E                     int$flags	set	126
 12569  007E                     wtemp0	set	126


Data Sizes:
    Strings     51
    Constant    0
    Data        41
    BSS         112
    Persistent  43
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     60      80
    BANK1            80     80      80
    BANK2            80     14      74
    BANK3            80      0      52
    BANK4            80      0      32
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK4[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK4[32]), 

    puts@s	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_5(CODE[3]), hrDisp(BANK3[13]), distanceDisp(BANK3[11]), speedDisp(BANK3[8]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_4(CODE[10]), STR_3(CODE[9]), STR_2(CODE[14]), STR_1(CODE[15]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK2[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK4[32]), STR_5(CODE[3]), hrDisp(BANK3[13]), distanceDisp(BANK3[11]), 
		 -> speedDisp(BANK3[8]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S1090_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK2[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_4(CODE[10]), STR_3(CODE[9]), STR_2(CODE[14]), STR_1(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 15
		 -> STR_4(CODE[10]), STR_3(CODE[9]), STR_2(CODE[14]), STR_1(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK2[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK2[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK4[32]), 

    writeString@string	PTR unsigned char  size(1) Largest target is 13
		 -> hrDisp(BANK3[13]), distanceDisp(BANK3[11]), speedDisp(BANK3[8]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timerISR(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timerISR(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    IOCCF7_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> speedCalc(), IOCCF7_DefaultInterruptHandler(), 

    IOCCF7_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> speedCalc(), Absolute function(), IOCCF7_DefaultInterruptHandler(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _timerISR->___fladd
    _speedCalc->___awmod
    ___flmul->___fldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _timerISR->___fladd
    _IOCCF7_ISR->_speedCalc
    _speedCalc->___awmod
    ___fltol->___flmul
    ___flmul->___fldiv
    ___awmod->___fltol

Critical Paths under _main in BANK1

    _main->_printf
    _writeString->_puts
    _setCursor->_EUSART_Write
    _setCursor->_EUSART_is_tx_ready
    _resetCursor->_puts
    _puts->_fputs
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _abs->___aomod
    _heartBeatCalc->___aldiv
    _heartBeatCalc->___wmul
    ___wmul->___awdiv
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCCF7_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_printf
    _printf->_vfprintf

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   17002
                                             12 BANK2      2     2      0
                  _ADC_GetConversion
         _IOCCF7_SetInterruptHandler
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                             ___flge
                      _heartBeatCalc
                             _printf
                        _resetCursor
                          _setCursor
                        _writeString
 ---------------------------------------------------------------------------------
 (1) _writeString                                          1     1      0    2879
                                             24 BANK1      1     1      0
                 _EUSART_is_tx_ready
                               _puts
 ---------------------------------------------------------------------------------
 (1) _setCursor                                            4     3      1     688
                                              1 BANK1      4     3      1
                       _EUSART_Write
                 _EUSART_is_tx_ready
 ---------------------------------------------------------------------------------
 (2) _EUSART_is_tx_ready                                   1     1      0      24
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _resetCursor                                          0     0      0    2734
                               _puts
 ---------------------------------------------------------------------------------
 (2) _puts                                                 5     3      2    2734
                                             19 BANK1      5     3      2
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (1) _printf                                              10     4      6    6922
                                             79 BANK1      1     1      0
                                              3 BANK2      9     3      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    6564
                                             74 BANK1      5     2      3
                                              0 BANK2      3     3      0
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    6236
                                             58 BANK1     16    14      2
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    4723
                                             28 BANK1     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    3100
                                             19 BANK1      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     123
                                              0 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 (3) _fputs                                                9     6      3    1549
                                             10 BANK1      9     6      3
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     980
                                              2 BANK1      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      44
                                              1 BANK1      1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             19 BANK1      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     448
                                              0 BANK1     19     3     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     452
                                              0 BANK1     27    11     16
 ---------------------------------------------------------------------------------
 (1) _heartBeatCalc                                       12    10      2    2433
                                             15 BANK1     12    10      2
                            ___aldiv
                            ___awdiv
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              9 BANK1      6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     856
                                              0 BANK1      9     5      4
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                              0 BANK1     15     7      8
 ---------------------------------------------------------------------------------
 (1) ___flge                                              12     4      8     334
                                              0 BANK1     12     4      8
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     642
                     _ADC_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0     174
                                              2 BANK1      1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     174
         _IOCCF7_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCCF7_SetInterruptHandler                           2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    4     2      2      22
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          0     0      0    7764
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR0_ISR                                            0     0      0    2262
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                           _timerISR *
 ---------------------------------------------------------------------------------
 (12) _timerISR                                            0     0      0    2262
                            ___fladd
 ---------------------------------------------------------------------------------
 (13) ___fladd                                            20    12      8    2262
                                              0 COMMON    12     4      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (12) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _PIN_MANAGER_IOC                                     0     0      0    5502
                         _IOCCF7_ISR
 ---------------------------------------------------------------------------------
 (12) _IOCCF7_ISR                                          0     0      0    5502
                   Absolute function *
     _IOCCF7_DefaultInterruptHandler *
                          _speedCalc *
 ---------------------------------------------------------------------------------
 (13) _speedCalc                                           4     4      0    5502
                                             56 BANK0      4     4      0
                            ___awmod
                            ___fldiv
                            ___flmul
                            ___fltol
                          i1___awdiv
 ---------------------------------------------------------------------------------
 (14) i1___awdiv                                           9     5      4     352
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (14) ___fltol                                            11     7      4     381
                                             39 BANK0     11     7      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (14) ___flmul                                            26    18      8    2873
                                             13 BANK0     26    18      8
                          __Umul8_16
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (15) __Umul8_16                                           9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (14) ___fldiv                                            26    18      8    1273
                                              0 COMMON    13     5      8
                                              0 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 (14) ___awmod                                             7     3      4     600
                                             13 COMMON     1     1      0
                                             50 BANK0      6     2      4
                            ___flmul (ARG)
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (13) _IOCCF7_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _IOCCF7_SetInterruptHandler
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCCF7_SetInterruptHandler
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _TMR0_SetInterruptHandler
   ___flge
   _heartBeatCalc
     ___aldiv
     ___awdiv
     ___lwdiv
     ___wmul
       ___awdiv (ARG)
   _printf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART_Write
             _fputs
               _fputc
                 _putch
                   _EUSART_Write
             _strlen
         _fputc
           _putch
             _EUSART_Write
   _resetCursor
     _puts
       _fputc
         _putch
           _EUSART_Write
       _fputs
         _fputc
           _putch
             _EUSART_Write
   _setCursor
     _EUSART_Write
     _EUSART_is_tx_ready
   _writeString
     _EUSART_is_tx_ready
     _puts
       _fputc
         _putch
           _EUSART_Write
       _fputs
         _fputc
           _putch
             _EUSART_Write

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
     _IOCCF7_ISR
       Absolute function(Fake) *
       _IOCCF7_DefaultInterruptHandler *
       _speedCalc *
         ___awmod
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
         ___fldiv
         ___flmul
           __Umul8_16
           ___fldiv (ARG)
         ___fltol
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
         i1___awdiv
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _timerISR *
       ___fladd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3C      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     50      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      E      4A       9       92.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      34      11       65.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      20      13       40.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     14C      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     14C      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Apr 13 13:02:01 2019

                                            _P 0168                                              _T 006D  
                                 ___fldiv@aexp 002C                                   ___fldiv@bexp 002B  
                                 ___fldiv@sign 0024                                    __CFG_CP$OFF 0000  
                                           l69 14CD                                             _QS 0146  
                                 ___awdiv@sign 00A6                            ___wmul@multiplicand 00AB  
                              _timer0ReloadVal 0167                            __Umul8_16@word_mpld 0076  
                                          l423 1728                                            l274 1563  
                                          l542 0871                                            l550 0EF3  
                                          l551 0EFB                                            l384 04CA  
                                          l704 0BBB                                            l545 0891  
                                          l386 04E6                                            l387 05E3  
                                          l555 0F17                                            l556 0F2B  
                                          l591 15C0                                            l559 0FC1  
                                          l656 099F                                            l691 0D91  
                                          l772 097B                                            l769 092D  
                                          _IBI 0069                                            _BPM 0136  
                                          _abs 156A                                            _amp 0138  
                                          _pad 0856                                            _rpm 0147  
               ?_EUSART_SetFramingErrorHandler 00A0                                   ___awmod@sign 0057  
                                 __CFG_BORV$LO 0000                                            wreg 0009  
                                 __CFG_IESO$ON 0000                                   ___flmul@aexp 003F  
                                 ___flmul@bexp 0040         __end_of_IOCCF7_DefaultInterruptHandler 0804  
      __size_of_IOCCF7_DefaultInterruptHandler 0001                 _IOCCF7_DefaultInterruptHandler 0803  
                                 ___flmul@sign 003A                                   ___flmul@temp 0045  
                                 ___flmul@prod 0041                                   __CFG_LVP$OFF 0000  
                                 __CFG_ZCD$OFF 0000                                   ___fltol@exp1 0051  
                                         ?_abs 00B3                                           l4002 171A  
                                         l3220 0AB7                                           l3214 0A94  
                                         l3206 0A57                                           l3230 0AC9  
                                         l3224 0ABD                                           l2700 0B9A  
                                         l2604 1589                                           l2606 1595  
                                         l2614 0867                                           l3600 0A07  
                                         l2624 0873                                           l2642 0CD8  
                                         l2618 086F                                           l2730 0F0F  
                                         l3450 14ED                                           l3612 080F  
                                         l2660 0D2B                                           l2628 08A0  
                                         l2740 0F58                                           l3630 082E  
                                         l2670 0D70                                           l2646 0D00  
                                         l2582 1757                                           l2750 0F33  
                                         l3640 0849                                           l3552 15BA  
                                         l3800 0569                                           l2648 0D05  
                                         l2680 0B1A                                           l2584 1760  
                                         l2736 0F26                                           l3544 1691  
                                         l3618 081A                                           l2658 0D1C  
                                         l2578 1734                                           l2594 165F  
                                         l2762 0FD5                                           l3546 16AF  
                                         l3644 0851                                           l3636 0840  
                                         l3628 0822                                           l3660 16CC  
                                         l2668 0D64                                           l2692 0B4F  
                                         l2684 0B42                                           l2596 1680  
                                         l2772 0FED                                           l3740 170C  
                                         l3582 09C0                                           l3574 09B0  
                                         l3670 16E7                                           l3814 057A  
                                         l2694 0B5E                                           l2758 0FCD  
                                         l3734 16FD                                           ?_pad 00B3  
                                         l3592 09EE                                           l3584 09CE  
                                         l3840 0620                                           l3808 0575  
                                         l2768 0FE0                                           l3736 1702  
                                         l3744 1711                                           l3728 16EE  
                                         l3666 16DE                                           l3658 16C0  
                                         l2698 0B8E                                           l3738 1707  
                                         l3754 1526                                           l3930 0BF2  
                                         l3596 09F9                                           l3960 0C73  
                                         l3794 054E                                           l3954 0C3E  
                                         l3892 0961                                           l3888 0947  
                                         STR_1 1800                                           STR_2 180F  
                                         STR_3 1827                                           STR_4 181D  
                                         STR_5 1830                                           _LATA 010C  
                                         _LATB 010D                                           _LATC 010E  
                                         u3025 0F07                                           u3055 0FCB  
                                         u3075 0F47                                           u5005 0567  
                                         u3085 0F53                                           u5025 05A3  
                                         u2705 087D                                           u5035 05EA  
                                         u2805 0D51                                           u2725 1574  
                                         u5055 062A                                           u2655 1755  
                                         u2905 0B7C                                           u5217 0BE6  
                                         u2770 0D0D                                           u4515 15C1  
                                         u5227 1535                                           u4605 09E3  
                                         u4525 15C6                                           u5237 16F9  
                                         u5247 155E                                           u4615 09EF  
                                         u4705 0839                                           u2970 0EC9  
                                         u4715 0841                                           u2980 0ECA  
                                         u4575 09C3                                           u4905 0492  
                                         u4595 09CF                                           u4675 0825  
                                         u4755 16C3                                           u4915 04BB  
                                         u4925 04C4                                           u4695 082F  
                                         u4775 16CD                                           u4935 04D1  
                                         u4785 16D7                                           u4945 04DC  
                                         u4795 16DF                                           u4955 04F0  
                                         u4965 04F9                                           u4985 0525  
                                         _TMR0 0015                                           _WPUA 020C  
                                         _WPUB 020D                                           _WPUC 020E  
                                 __CFG_WRT$OFF 0000                                  __CFG_FCMEN$ON 0000  
                                         abs@a 00B3                                           _dbuf 0220  
                                         _main 0BCD                                           _dtoa 0EAD  
                                         _rate 01C0                                           _prec 0134  
                                         _nout 0130                                           pad@i 00B7  
                                         pad@p 00B4                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           pad@w 00B9  
                                         btemp 007E                                           _puts 159C  
                                __CFG_BOREN$ON 0000                                           start 0014  
                              ___fldiv@new_exp 0025                                  __CFG_MCLRE$ON 0000  
                                        ??_abs 00B5                                          ??_pad 00B6  
                      __end_of_TMR0_Initialize 1551                 ??_TMR0_DefaultInterruptHandler 0070  
                                ?_EUSART_Write 0070                 __size_of_OSCILLATOR_Initialize 0007  
                __end_of_OSCILLATOR_Initialize 1487                            __size_of_IOCCF7_ISR 000D  
                                ___fltol@sign1 0050                                __end_of___aldiv 0A10  
                              __end_of___aodiv 0DA3                                __end_of___fladd 046F  
                                        ?_main 0070                                          ?_dtoa 00BC  
                               i1___awdiv@sign 0076                                __end_of___aomod 0BCD  
                              __end_of___fldiv 07CC                                __end_of___awdiv 0856  
                                __CFG_WDTE$OFF 0000                                __end_of___awmod 17AF  
                              __end_of___flmul 0286                                __end_of___fltol 0912  
                                        ?_puts 00B3                                ___awdiv@divisor 00A0  
                              __end_of___lwdiv 16EC                                          i1l242 0012  
                                        i1l238 000D                                          i1l913 03ED  
                                        i1l934 0466                                          i1l926 044D  
                                        i1l792 08F6                                          i1l970 07BA  
                                        i1l972 07C7                                          i1l948 069B  
                                        i1l892 02D3                                          i1l896 0367  
                                        i1l969 07A2                                          i1l898 0349  
                              ___awdiv@counter 00A5                                   vfpfcnvrt@fmt 00DA  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TRISC 008E                                    _writeString 1524  
            __size_of_TMR0_SetInterruptHandler 0009                      ?_TMR0_SetInterruptHandler 00A0  
                             __end_of_TMR0_ISR 150F                                          _Pulse 0066  
                      __end_of_PIN_MANAGER_IOC 146E                                          _hrInt 013C  
                                        _flags 0060                                          _fputc 1729  
                                        _fputs 165C                                          _speed 012C  
                                        pad@fp 00BB                                          _width 0132  
                                        _putch 146E                                          dtoa@d 00BC  
                                        dtoa@i 00D8                                          dtoa@n 00D0  
                                        dtoa@p 00C9                                          dtoa@s 00CE  
                                        dtoa@w 00CC                                          pclath 000A  
                                        puts@s 00B3                                          status 0003  
                                        wtemp0 007E                             __size_ofi1___awdiv 0051  
                              __initialization 0016                                   __end_of_main 0CAC  
                                 __end_of_dtoa 1000                                   __end_of_puts 15B7  
                               ??_EUSART_Write 00A0                                 __CFG_LPBOR$OFF 0000  
                  ?_INTERRUPT_InterruptManager 0070                                         ??_main 015B  
                                       ??_dtoa 00C4                                         ??_puts 00B5  
                               __CFG_PLLEN$OFF 0000              _EUSART_DefaultFramingErrorHandler 0000  
                                       _ADCON0 009D                                         _ADCON1 009E  
                                       _ADCON2 009F                     _EUSART_OverrunErrorHandler 0163  
                                       ?_fputc 00A2                                         ?_fputs 00AA  
                                       _ADRESH 009C                                         _ADRESL 009B  
                             ___awdiv@dividend 00A2                                         _ANSELA 018C  
                                       ?_putch 0070                                         _ANSELB 018D  
                                       _ANSELC 018E                   ??_IOCCF7_SetInterruptHandler 00A2  
                                       _BORCON 0116                                         _RC1REG 0199  
                                       _RC1STA 019D                                         i1l1000 0279  
                                       _RB7PPS 0E9F                                         i1l3004 0074  
                                       i1l1094 15E3                                         i1l3022 0097  
                                       i1l3006 0076                                         i1l3112 024F  
                                       i1l3024 0099                                         i1l3008 007E  
                                       _ODCONA 028C                                         i1l3034 00AF  
                                       i1l3026 00A1                                         _ODCONB 028D  
                                       _ODCONC 028E                                         i1l3108 023A  
                                       i1l3118 0266                                         i1l3144 17C4  
                                       i1l3400 041E                                         i1l3170 17FB  
                                       i1l3162 17EA                                         i1l3154 17CC  
                                       i1l3138 17B9                                         i1l3156 17D8  
                                       i1l3404 0420                                         i1l3324 0352  
                                       i1l3316 0319                                         i1l3252 02A0  
                                       i1l3094 020F                                         i1l3086 01E1  
                                       i1l3166 17F3                                         i1l3422 045D  
                                       i1l3350 0388                                         i1l3342 0375  
                                       i1l3326 0354                                         i1l3334 0363  
                                       i1l3088 01F8                                         i1l3520 14DF  
                                       i1l3352 038A                                         i1l3360 039A  
                                       i1l3280 02CB                                         i1l3256 02A3  
                                       i1l2810 17AA                                         i1l2802 1799  
                                       i1l3098 0211                                         i1l3426 0461  
                                       i1l3370 03E5                                         i1l3258 02AB  
                                       i1l2708 15DD                                         i1l2820 08BF  
                                       i1l3276 02C8                                         i1l2806 17A2  
                                       i1l3286 02DD                                         i1l2904 06C6  
                                       i1l2816 08B6                                         i1l3392 0413  
                                       i1l2930 0726                                         i1l3386 040C  
                                       i1l3378 03FF                                         i1l3394 0415  
                                       i1l2924 070D                                         i1l2932 06EF  
                                       i1l2836 08E4                                         i1l2950 0748  
                                       i1l2934 072B                                         i1l2870 0677  
                                       i1l2846 0903                                         i1l2838 08F2  
                                       i1l2784 1774                                         i1l2960 0761  
                                       i1l2864 066C                                         i1l2970 078A  
                                       i1l2796 1781                                         i1l2788 177B  
                                       i1l2956 075F                                         i1l2948 0731  
                                       i1l2884 0690                                         i1l2868 066F  
                                       i1l2798 178D                                         i1l2984 07C3  
                                       i1l2888 0693                                         i1l2898 06BA  
                                       u410_25 032D                                         u411_20 0337  
                                       u323_25 08C8                                         u412_20 0338  
                                       u316_25 1784                     __end_of_EUSART_is_tx_ready 14F0  
                                       u341_25 06F7                                         u318_25 1793  
                                       u350_25 073D                                         u342_25 06FE  
                                       u326_25 08E5                                         u422_25 038F  
                                       u423_23 03AD                                         u319_25 179A  
                                       u415_25 0359                                         u344_25 0707  
                                       u345_25 071B                                         u329_25 08FA  
                                       u370_25 0154                                         u371_25 01AA  
                                       u427_25 0400                                         u348_25 0734  
                                       u372_25 01C1                                         u357_25 0778  
                                       u373_25 01D0                                         u437_25 0438  
                                       u358_25 0793                                         u374_25 01E4  
                                       u390_25 17CF                                         u359_25 07AC  
                                       u295_25 15E4                                         u383_25 0228  
                                       u384_25 0243                                         u376_25 01ED  
                                       u392_25 17D9                                         u385_25 0259  
                                       u369_25 0125                                         u393_25 17E3  
                                       _OSCCON 0099                                         u394_25 17EB  
                                       _SPBRGH 019C                                         _SPBRGL 019B  
                                       _TX1REG 019A                                         u274lld 0CD5  
                                       _TX1STA 019E                                   ?_resetCursor 0070  
                                       u285lld 0B17                             heartBeatCalc@i_688 00B9  
                               __CFG_PWRTE$OFF 0000                                         _Signal 0062  
                                 vfprintf@cfmt 0150                                         ___flge 0912  
                                       _adcVal 013A                                      ??___aldiv 00A8  
                                    ??___aodiv 00B0                                      ??___fladd 0020  
                                    ??___aomod 00B0                                         ___wmul 15B7  
                                    ??___fldiv 0078                                      ??___awdiv 00A4  
                               __CFG_STVREN$ON 0000                                      ??___awmod 007D  
                                    ??___flmul 0035                                      ??___fltol 004B  
                                       _hrDisp 01A0                                      ??___lwdiv 00A4  
                                       _distHi 0144                                         _distLo 0142  
                             ?_TMR0_Initialize 0070                               ___awdiv@quotient 00A7  
                              ___awmod@divisor 0052                                ___awmod@counter 0056  
                                       _printf 150F                                         _thresh 006B  
                                       pad@buf 00B3                                         dtoa@fp 00CB  
                                       _strlen 1583                              __end_ofi1___awdiv 1800  
          __size_of_IOCCF7_SetInterruptHandler 0009                                         fputc@c 00A2  
                                       fputs@c 00B0                                         fputs@i 00B1  
                                       fputs@s 00AA                             __size_of__Umul8_16 001F  
                             __end_of_timerISR 1637                       ADC_GetConversion@channel 00A3  
                             __end_of_vfprintf 16B7       TMR0_SetInterruptHandler@InterruptHandler 00A0  
   IOCCF7_SetInterruptHandler@InterruptHandler 00A0                               ?_PIN_MANAGER_IOC 0070  
                                 ??_IOCCF7_ISR 007E                                     ___flge@ff1 00A0  
                                   ___flge@ff2 00A4                              _SYSTEM_Initialize 14F0  
                      __end_of__initialization 0056                                     _adcCounter 0124  
                           ?_SYSTEM_Initialize 0070                                     ___fltol@f1 0047  
                               __pcstackCOMMON 0070                                   __pidataBANK0 1487  
                                 __pidataBANK2 0002                                   __pidataBANK3 15F2  
                          ??_SYSTEM_Initialize 00A3                                      ?_TMR0_ISR 0070  
                                __end_of_fputc 1769                                  __end_of_fputs 1685  
                                __end_of_putch 1474                             __end_of_IOCCF7_ISR 14E2  
                               _OPTION_REGbits 0095                ??_EUSART_SetOverrunErrorHandler 00A2  
                        __end_of_heartBeatCalc 0652                                        ??_fputc 00A5  
                    __end_of_SYSTEM_Initialize 14FF                                        ??_fputs 00AD  
                                      ??_putch 00A1                                     __pbssBANK0 005C  
                                   __pbssBANK2 0120                                     __pbssBANK3 01C0  
                                   __pbssBANK4 0220                           __end_of_EUSART_Write 14D5  
                            __end_of__Umul8_16 15F2                                     __pmaintext 0BCD  
                                      ?___flge 00A0               __end_of_TMR0_SetInterruptHandler 14CB  
                                      ?___wmul 00A9                                     ??_TMR0_ISR 007C  
                              __CFG_PPS1WAY$ON 0000                             __size_of_setCursor 003D  
                                   __pintentry 0004                                        ?_printf 0152  
                      __size_of_ADC_Initialize 0008                                        ?_strlen 00A0  
                           __size_of_speedCalc 010A                             i1___awdiv@dividend 0072  
                              __CFG_WDTCCS$SWC 0000                                   ?_writeString 0070  
                           __size_of_vfpfcnvrt 00DE                                        _OSCTUNE 0098  
                                      _SLRCONA 030C                                        _SLRCONB 030D  
                                      _SLRCONC 030E             __end_of_IOCCF7_SetInterruptHandler 14C2  
                   _IOCCF7_SetInterruptHandler 14B9                       ??_EUSART_SetErrorHandler 00A2  
                          heartBeatCalc@adcVal 00AF                           __size_of_resetCursor 0008  
                           i1___awdiv@quotient 0077                                      ?_timerISR 0070  
                                      ___aldiv 098E                                __size_of___flge 007C  
                                      ___aodiv 0CAC                                        ___fladd 0286  
                                      ___aomod 0AEE                                        ___fldiv 0652  
                                      ___awdiv 0804                                        ___awmod 1769  
                                      ___flmul 005A                                        ___fltol 08AC  
                              __size_of___wmul 001C                                        ___lwdiv 16B7  
                                    ?_vfprintf 00EA                                        __ptext1 1524  
                                      __ptext2 16EC                                        __ptext3 14E2  
                                      __ptext4 1496                                        __ptext5 159C  
                                      __ptext6 150F                                        __ptext7 1685  
                                      __ptext8 0A10                                        __ptext9 0EAD  
                              __size_of_printf 0015                                __size_of_strlen 0019  
                                      _counter 014B                          _OSCILLATOR_Initialize 1480  
                                 __size_of_abs 0019                                   __size_of_pad 0056  
                             ___awmod@dividend 0054                               ___aldiv@dividend 00A4  
                     ??_PIN_MANAGER_Initialize 00A2                                      _IOCCFbits 0399  
                                      _speedHi 013E                                      _IOCCNbits 0398  
                                      _speedLo 0140                                      _IOCCPbits 0397  
                   __size_of_SYSTEM_Initialize 000F                                        clrloop0 1475  
                                   _secondBeat 0067                           end_of_initialization 0056  
                            __end_of_setCursor 1729          __end_of_EUSART_SetOverrunErrorHandler 14B9  
       __size_of_EUSART_SetOverrunErrorHandler 0009                  _EUSART_SetOverrunErrorHandler 14B0  
                                      fputc@fp 00A4                                        init_ram 147A  
                                      fputs@fp 00AC                                        initloop 147B  
                            __end_of_speedCalc 0EAD                              _EUSART_Initialize 1637  
                           ?_EUSART_Initialize 0070                              __end_of_vfpfcnvrt 0AEE  
                                   ??_timerISR 007C                               ___aldiv@quotient 00AB  
                           _EUSART_is_tx_ready 14E2                                     ??_vfprintf 00ED  
                                      strlen@a 00A3                                        strlen@s 00A4  
                          ??_EUSART_Initialize 00A2                                   _distanceDisp 01AD  
                     _TMR0_SetInterruptHandler 14C2                            ?_EUSART_is_tx_ready 0070  
                                  ___fladd@grs 007B                               __CFG_FOSC$INTOSC 0000  
                        __size_of_EUSART_Write 000A                                      i1___awdiv 17AF  
                                  ___fldiv@grs 0027                                    ___fldiv@rem 0020  
              __size_of_EUSART_SetErrorHandler 0009                                    ___flmul@grs 003B  
                    __end_of_EUSART_Initialize 165C                           ??_EUSART_is_tx_ready 00A0  
                               _speedCalc$1332 0058                                 __end_of___flge 098E  
                   _EUSART_DefaultErrorHandler 0000                                    vfpfcnvrt@ap 00DB  
                                  vfpfcnvrt@fp 00E9                                    vfpfcnvrt@ll 00E1  
                               __end_of___wmul 15D3                                   _lastBeatTime 0120  
                                 _EUSART_Write 14CB                              __size_of_TMR0_ISR 0010  
                               _ADC_Initialize 148E                         ?_OSCILLATOR_Initialize 0070  
                            writeString@string 00B8                                 __end_of_printf 1524  
                               __end_of_strlen 159C                            start_initialization 0016  
                     __size_of_TMR0_Initialize 0018                __size_of_PIN_MANAGER_Initialize 0033  
                                  __end_of_abs 1583                                    __end_of_pad 08AC  
                                   ?i1___awdiv 0070                           __size_of_writeString 0015  
                       _EUSART_is_tx_ready$167 00A0                                    putch@txData 00A1  
                                _sampleCounter 005C                       __size_of_PIN_MANAGER_IOC 0006  
               ?_EUSART_SetOverrunErrorHandler 00A0                                    vfprintf@fmt 00EA  
                   _EUSART_FramingErrorHandler 0165                                       ??___flge 00A8  
                                     ??___wmul 00AD                         _EUSART_SetErrorHandler 149E  
                       __end_of_ADC_Initialize 1496                                      __Umul8_16 15D3  
                                  __pdataBANK0 0069                                    __pdataBANK2 0168  
                                  __pdataBANK3 01A0                                       ??_printf 00EF  
                                     ??_strlen 00A2                                      ___fladd@a 0074  
                                    ___fladd@b 0070                                      ___fldiv@a 0070  
                                    ___fldiv@b 0074                                      ___flmul@a 0031  
                                    ___flmul@b 002D                                      ___latbits 0002  
                                __pcstackBANK0 0020                                  __pcstackBANK1 00A0  
                                __pcstackBANK2 014F                               ___aodiv@dividend 00A8  
                               heartBeatCalc@N 00B7                                 heartBeatCalc@i 00B5  
                  ?_IOCCF7_SetInterruptHandler 00A0                     __size_of_EUSART_Initialize 0025  
                        _TMR0_InterruptHandler 015D                                      __pnvBANK2 015D  
                             ___lwdiv@dividend 00A2                         _PIN_MANAGER_Initialize 07CC  
                                     ?___aldiv 00A0                                       ?___aodiv 00A0  
                                     ?___fladd 0070                                       ?___aomod 00A0  
                                     ?___fldiv 0070                                       ?___awdiv 00A0  
                             ___aodiv@quotient 00B3                                       ?___awmod 0052  
                                     ?___flmul 002D                                       ?___fltol 0047  
                       __size_of_heartBeatCalc 01E3                                      _heartRate 0128  
                                   ?__Umul8_16 0070                                     setCursor@a 00A4  
                                   setCursor@b 00A1                                       ?___lwdiv 00A0  
                              ?_ADC_Initialize 0070                              __size_of_timerISR 0025  
                            i1___awdiv@divisor 0070                              i1___awdiv@counter 0075  
                 ??_INTERRUPT_InterruptManager 007E                              __size_of_vfprintf 0032  
                                     _BAUD1CON 019F                                      _firstBeat 006F  
                                  ??i1___awdiv 0074                               ___lwdiv@quotient 00A5  
                               __size_of_fputc 0040                                 __size_of_fputs 0029  
                               __size_of_putch 0006                                ___aldiv@divisor 00A0  
                            ??_TMR0_Initialize 00A2                                  ??_resetCursor 00B8  
                    heartBeatCalc@runningTotal 00B3                                ___aldiv@counter 00A9  
                               ___wmul@product 00AD         EUSART_SetErrorHandler@interruptHandler 00A0  
                                    _setCursor 16EC                                      clear_ram0 1474  
                            _eusartRxLastError 0068            __size_of_INTERRUPT_InterruptManager 0010  
                   ??_TMR0_SetInterruptHandler 00A2                                       _PIR1bits 0010  
              ??_EUSART_SetFramingErrorHandler 00A2                                      _puts$1137 00B7  
                                    _speedCalc 0DA3                                      _speedDisp 01B8  
             ??_IOCCF7_DefaultInterruptHandler 0070                ?_IOCCF7_DefaultInterruptHandler 0070  
                         __CFG_WDTCPS$WDTCPS1F 0000                                       _TMR0_ISR 14FF  
            _EUSART_DefaultOverrunErrorHandler 0000                              ??_PIN_MANAGER_IOC 007E  
                                    _vfpfcnvrt 0A10                                     _ADCON0bits 009D  
                            ___wmul@multiplier 00A9                                  _heartBeatCalc 046F  
                                   ?_setCursor 00A1                                     vfprintf@ap 00EC  
                                   vfprintf@fp 014F                              _ADC_GetConversion 1551  
                          __end_of_resetCursor 149E                                     ?_speedCalc 0070  
                      ??_OSCILLATOR_Initialize 00A0                                    ??__Umul8_16 0072  
                          _EUSART_ErrorHandler 0161                             ?_ADC_GetConversion 00A0  
                             __size_of___aldiv 0082                               __size_of___aodiv 00F7  
                             __size_of___fladd 01E9                               __size_of___aomod 00DF  
                             __size_of___fldiv 017A                               __size_of___awdiv 0052  
                             __size_of___awmod 0046                               __size_of___flmul 022C  
                             __size_of___fltol 0066                                     ?_vfpfcnvrt 00DA  
                             __size_of___lwdiv 0035                                ___aodiv@divisor 00A0  
                              ___aodiv@counter 00B1                            ??_ADC_GetConversion 00A2  
                                     _dtoa$791 00C7                                ___lwdiv@divisor 00A0  
                              ___lwdiv@counter 00A7                                       __ptext10 0856  
                                     __ptext11 1583                                       __ptext20 15B7  
                                     __ptext12 165C                                       __ptext21 16B7  
                                     __ptext13 1729                                       __ptext30 1480  
                                     __ptext22 0804                                       __ptext14 146E  
                                     __ptext31 1637                                       __ptext23 098E  
                                     __ptext15 14CB                                       __ptext40 1612  
                                     __ptext32 14B0                                       __ptext24 0912  
                                     __ptext16 156A                                       __ptext41 0286  
                                     __ptext33 14A7                                       __ptext25 14F0  
                                     __ptext17 0AEE                                       __ptext50 0652  
                                     __ptext42 1468                                       __ptext34 149E  
                                     __ptext26 1539                                       __ptext18 0CAC  
                                     __ptext51 1769                                       __ptext43 14D5  
                                     __ptext35 148E                                       __ptext27 14C2  
                                     __ptext19 046F                                       __ptext44 0803  
                                     __ptext36 1551                                       __ptext28 07CC  
                                     __ptext45 0DA3                                       __ptext29 14B9  
                                     __ptext46 17AF                                       __ptext38 14FF  
                                     __ptext47 08AC                                       __ptext39 07FF  
                                     __ptext48 005A                                       __ptext49 15D3  
                               ?_heartBeatCalc 00AF                                       _distance 0064  
                                   _IOCCF7_ISR 14D5                                  __size_of_main 00DF  
                                __size_of_dtoa 0153                                  __size_of_puts 001B  
                  __size_of_EUSART_is_tx_ready 000E           __end_of_TMR0_DefaultInterruptHandler 0800  
        __size_of_TMR0_DefaultInterruptHandler 0001                   _TMR0_DefaultInterruptHandler 07FF  
                    __end_of_ADC_GetConversion 156A                           __CFG_WDTCWS$WDTCWSSW 0000  
                      ?_EUSART_SetErrorHandler 00A0                                     _RC1STAbits 019D  
EUSART_SetOverrunErrorHandler@interruptHandler 00A0                                       _timerISR 1612  
                                     int$flags 007E                                       _vfprintf 1685  
           __end_of_INTERRUPT_InterruptManager 0014                     _INTERRUPT_InterruptManager 0004  
                                    printf@fmt 0152          __end_of_EUSART_SetFramingErrorHandler 14B0  
       __size_of_EUSART_SetFramingErrorHandler 0009                  _EUSART_SetFramingErrorHandler 14A7  
                             ___aomod@dividend 00A8                                  ??_writeString 00B8  
                                   _INTCONbits 000B                                       intlevel1 0000  
                      ?_PIN_MANAGER_Initialize 0070                                    _resetCursor 1496  
               __end_of_EUSART_SetErrorHandler 14A7                                    ??_setCursor 00A2  
                            __CFG_CLKOUTEN$OFF 0000                               ??_ADC_Initialize 00A0  
                ?_TMR0_DefaultInterruptHandler 0070                                    ??_speedCalc 007E  
                                     printf@ap 015A  EUSART_SetFramingErrorHandler@interruptHandler 00A0  
                              ___aomod@divisor 00A0                                    ??_vfpfcnvrt 00DC  
                              ___aomod@counter 00B1                                  __pstringtext1 1800  
                                __pstringtext2 180F                                  __pstringtext3 181D  
                                __pstringtext4 1827                                  __pstringtext5 1830  
                                __pstringtext6 0000                         __Umul8_16@multiplicand 0070  
                                   _OPTION_REG 0095                                _TMR0_Initialize 1539  
                              ??_heartBeatCalc 00B1                                   ___aldiv@sign 00AA  
                                   _TX1STAbits 019E                                  ___fladd@signs 0078  
                           EUSART_Write@txData 00A0                            __end_of_writeString 1539  
                                 ___aodiv@sign 00B2                 __end_of_PIN_MANAGER_Initialize 07FF  
                                  ?_IOCCF7_ISR 0070                                   ___fladd@aexp 0079  
                                 ___fladd@bexp 007A                                _PIN_MANAGER_IOC 1468  
                         __Umul8_16@multiplier 0078                     __size_of_ADC_GetConversion 0019  
                                 ___aomod@sign 00B2                        _IOCCF7_InterruptHandler 015F  
                            __Umul8_16@product 0074  
