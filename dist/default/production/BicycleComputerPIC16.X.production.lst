

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Mar 18 12:11:16 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1619
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
     7                           	psect	stringtext1,global,class=STRCODE,delta=2
     8                           	psect	stringtext2,global,class=STRCODE,delta=2
     9                           	psect	stringtext3,global,class=STRCODE,delta=2
    10                           	psect	stringtext4,global,class=STRCODE,delta=2
    11                           	psect	cinit,global,class=CODE,merge=1,delta=2
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	inittext,global,class=CODE,delta=2
    17                           	psect	clrtext,global,class=CODE,delta=2
    18                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    19                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    21                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    23                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    24                           	psect	text1,local,class=CODE,merge=1,delta=2
    25                           	psect	text2,local,class=CODE,merge=1,delta=2
    26                           	psect	text3,local,class=CODE,merge=1,delta=2
    27                           	psect	text4,local,class=CODE,merge=1,delta=2
    28                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text7,local,class=CODE,merge=1,delta=2
    31                           	psect	text8,local,class=CODE,merge=1,delta=2
    32                           	psect	text9,local,class=CODE,merge=1,delta=2
    33                           	psect	text10,local,class=CODE,merge=1,delta=2
    34                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text14,local,class=CODE,merge=1,delta=2
    38                           	psect	text15,local,class=CODE,merge=1,delta=2
    39                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text19,local,class=CODE,merge=1,delta=2
    43                           	psect	text20,local,class=CODE,merge=1,delta=2
    44                           	psect	text21,local,class=CODE,merge=1,delta=2
    45                           	psect	text22,local,class=CODE,merge=1,delta=2
    46                           	psect	text23,local,class=CODE,merge=1,delta=2
    47                           	psect	text24,local,class=CODE,merge=1,delta=2
    48                           	psect	text25,local,class=CODE,merge=1,delta=2
    49                           	psect	text26,local,class=CODE,merge=1,delta=2
    50                           	psect	text27,local,class=CODE,merge=1,delta=2
    51                           	psect	text28,local,class=CODE,merge=1,delta=2
    52                           	psect	intentry,global,class=CODE,delta=2
    53                           	psect	text30,local,class=CODE,merge=1,delta=2
    54                           	psect	text31,local,class=CODE,merge=1,delta=2
    55                           	psect	text32,local,class=CODE,merge=1,delta=2
    56                           	psect	text33,local,class=CODE,merge=1,delta=2
    57                           	psect	text34,local,class=CODE,merge=1,delta=2
    58                           	psect	text35,local,class=CODE,merge=1,delta=2
    59                           	psect	text36,local,class=CODE,merge=1,delta=2
    60                           	psect	text37,local,class=CODE,merge=1,delta=2,group=1
    61                           	psect	text38,local,class=CODE,merge=1,delta=2,group=1
    62                           	psect	text39,local,class=CODE,merge=1,delta=2,group=1
    63                           	psect	text40,local,class=CODE,merge=1,delta=2,group=1
    64                           	psect	text41,local,class=CODE,merge=1,delta=2,group=1
    65                           	psect	text42,local,class=CODE,merge=1,delta=2,group=1
    66                           	dabs	1,0x7E,2
    67  0000                     
    68                           ; Version 2.05
    69                           ; Generated 20/12/2018 GMT
    70                           ; 
    71                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    72                           ; All rights reserved.
    73                           ; 
    74                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    75                           ; 
    76                           ; Redistribution and use in source and binary forms, with or without modification, are
    77                           ; permitted provided that the following conditions are met:
    78                           ; 
    79                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    80                           ;        conditions and the following disclaimer.
    81                           ; 
    82                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    83                           ;        of conditions and the following disclaimer in the documentation and/or other
    84                           ;        materials provided with the distribution.
    85                           ; 
    86                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    87                           ;        software without specific prior written permission.
    88                           ; 
    89                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    90                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    91                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    92                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    93                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    94                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    95                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    96                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    97                           ; 
    98                           ; 
    99                           ; Code-generator required, PIC16F1619 Definitions
   100                           ; 
   101                           ; SFR Addresses
   102  0000                     	;# 
   103  0001                     	;# 
   104  0002                     	;# 
   105  0003                     	;# 
   106  0004                     	;# 
   107  0005                     	;# 
   108  0006                     	;# 
   109  0007                     	;# 
   110  0008                     	;# 
   111  0009                     	;# 
   112  000A                     	;# 
   113  000B                     	;# 
   114  000C                     	;# 
   115  000D                     	;# 
   116  000E                     	;# 
   117  0010                     	;# 
   118  0011                     	;# 
   119  0012                     	;# 
   120  0013                     	;# 
   121  0014                     	;# 
   122  0015                     	;# 
   123  0016                     	;# 
   124  0016                     	;# 
   125  0017                     	;# 
   126  0018                     	;# 
   127  0019                     	;# 
   128  001A                     	;# 
   129  001A                     	;# 
   130  001B                     	;# 
   131  001B                     	;# 
   132  001C                     	;# 
   133  001D                     	;# 
   134  001E                     	;# 
   135  001F                     	;# 
   136  008C                     	;# 
   137  008D                     	;# 
   138  008E                     	;# 
   139  0090                     	;# 
   140  0091                     	;# 
   141  0092                     	;# 
   142  0093                     	;# 
   143  0094                     	;# 
   144  0095                     	;# 
   145  0096                     	;# 
   146  0098                     	;# 
   147  0099                     	;# 
   148  009A                     	;# 
   149  009B                     	;# 
   150  009B                     	;# 
   151  009C                     	;# 
   152  009D                     	;# 
   153  009E                     	;# 
   154  009F                     	;# 
   155  010C                     	;# 
   156  010D                     	;# 
   157  010E                     	;# 
   158  0111                     	;# 
   159  0112                     	;# 
   160  0113                     	;# 
   161  0114                     	;# 
   162  0115                     	;# 
   163  0116                     	;# 
   164  0117                     	;# 
   165  0118                     	;# 
   166  0119                     	;# 
   167  011C                     	;# 
   168  018C                     	;# 
   169  018D                     	;# 
   170  018E                     	;# 
   171  0191                     	;# 
   172  0191                     	;# 
   173  0192                     	;# 
   174  0193                     	;# 
   175  0193                     	;# 
   176  0194                     	;# 
   177  0195                     	;# 
   178  0196                     	;# 
   179  0197                     	;# 
   180  0199                     	;# 
   181  0199                     	;# 
   182  0199                     	;# 
   183  019A                     	;# 
   184  019A                     	;# 
   185  019A                     	;# 
   186  019B                     	;# 
   187  019B                     	;# 
   188  019B                     	;# 
   189  019B                     	;# 
   190  019B                     	;# 
   191  019C                     	;# 
   192  019C                     	;# 
   193  019C                     	;# 
   194  019D                     	;# 
   195  019D                     	;# 
   196  019D                     	;# 
   197  019E                     	;# 
   198  019E                     	;# 
   199  019E                     	;# 
   200  019F                     	;# 
   201  019F                     	;# 
   202  019F                     	;# 
   203  019F                     	;# 
   204  019F                     	;# 
   205  020C                     	;# 
   206  020D                     	;# 
   207  020E                     	;# 
   208  0211                     	;# 
   209  0211                     	;# 
   210  0212                     	;# 
   211  0212                     	;# 
   212  0213                     	;# 
   213  0213                     	;# 
   214  0214                     	;# 
   215  0214                     	;# 
   216  0215                     	;# 
   217  0215                     	;# 
   218  0215                     	;# 
   219  0215                     	;# 
   220  0216                     	;# 
   221  0216                     	;# 
   222  0217                     	;# 
   223  0217                     	;# 
   224  028C                     	;# 
   225  028D                     	;# 
   226  028E                     	;# 
   227  0291                     	;# 
   228  0291                     	;# 
   229  0292                     	;# 
   230  0293                     	;# 
   231  0294                     	;# 
   232  0298                     	;# 
   233  0298                     	;# 
   234  0299                     	;# 
   235  029A                     	;# 
   236  029B                     	;# 
   237  029E                     	;# 
   238  030C                     	;# 
   239  030D                     	;# 
   240  030E                     	;# 
   241  038C                     	;# 
   242  038D                     	;# 
   243  038E                     	;# 
   244  0391                     	;# 
   245  0392                     	;# 
   246  0393                     	;# 
   247  0394                     	;# 
   248  0395                     	;# 
   249  0396                     	;# 
   250  0397                     	;# 
   251  0398                     	;# 
   252  0399                     	;# 
   253  040E                     	;# 
   254  0413                     	;# 
   255  0413                     	;# 
   256  0414                     	;# 
   257  0414                     	;# 
   258  0415                     	;# 
   259  0416                     	;# 
   260  0417                     	;# 
   261  0418                     	;# 
   262  041A                     	;# 
   263  041A                     	;# 
   264  041B                     	;# 
   265  041B                     	;# 
   266  041C                     	;# 
   267  041D                     	;# 
   268  041E                     	;# 
   269  041F                     	;# 
   270  0493                     	;# 
   271  0494                     	;# 
   272  0495                     	;# 
   273  0496                     	;# 
   274  049A                     	;# 
   275  049B                     	;# 
   276  049C                     	;# 
   277  049D                     	;# 
   278  058C                     	;# 
   279  058C                     	;# 
   280  058D                     	;# 
   281  058E                     	;# 
   282  058E                     	;# 
   283  058F                     	;# 
   284  0590                     	;# 
   285  0590                     	;# 
   286  0591                     	;# 
   287  0592                     	;# 
   288  0592                     	;# 
   289  0593                     	;# 
   290  0594                     	;# 
   291  0594                     	;# 
   292  0595                     	;# 
   293  0596                     	;# 
   294  0596                     	;# 
   295  0597                     	;# 
   296  0598                     	;# 
   297  0599                     	;# 
   298  059A                     	;# 
   299  059B                     	;# 
   300  059B                     	;# 
   301  059C                     	;# 
   302  059D                     	;# 
   303  060C                     	;# 
   304  060C                     	;# 
   305  060D                     	;# 
   306  060E                     	;# 
   307  060F                     	;# 
   308  060F                     	;# 
   309  0610                     	;# 
   310  0611                     	;# 
   311  0612                     	;# 
   312  0613                     	;# 
   313  0614                     	;# 
   314  0617                     	;# 
   315  0617                     	;# 
   316  0618                     	;# 
   317  0619                     	;# 
   318  061A                     	;# 
   319  061A                     	;# 
   320  061B                     	;# 
   321  061C                     	;# 
   322  0691                     	;# 
   323  0692                     	;# 
   324  0693                     	;# 
   325  0694                     	;# 
   326  0695                     	;# 
   327  0696                     	;# 
   328  0697                     	;# 
   329  0699                     	;# 
   330  069A                     	;# 
   331  0711                     	;# 
   332  0712                     	;# 
   333  0713                     	;# 
   334  0714                     	;# 
   335  0715                     	;# 
   336  0718                     	;# 
   337  0718                     	;# 
   338  0719                     	;# 
   339  071A                     	;# 
   340  071A                     	;# 
   341  071B                     	;# 
   342  071C                     	;# 
   343  071D                     	;# 
   344  0791                     	;# 
   345  0791                     	;# 
   346  0792                     	;# 
   347  0793                     	;# 
   348  0793                     	;# 
   349  0794                     	;# 
   350  0795                     	;# 
   351  0795                     	;# 
   352  0796                     	;# 
   353  0797                     	;# 
   354  0797                     	;# 
   355  0798                     	;# 
   356  0799                     	;# 
   357  079A                     	;# 
   358  080C                     	;# 
   359  080C                     	;# 
   360  080D                     	;# 
   361  080E                     	;# 
   362  080E                     	;# 
   363  080F                     	;# 
   364  0810                     	;# 
   365  0810                     	;# 
   366  0811                     	;# 
   367  0812                     	;# 
   368  0812                     	;# 
   369  0813                     	;# 
   370  0814                     	;# 
   371  0815                     	;# 
   372  0816                     	;# 
   373  0817                     	;# 
   374  0818                     	;# 
   375  0819                     	;# 
   376  081A                     	;# 
   377  081A                     	;# 
   378  081B                     	;# 
   379  081C                     	;# 
   380  081C                     	;# 
   381  081D                     	;# 
   382  088C                     	;# 
   383  088D                     	;# 
   384  088E                     	;# 
   385  088F                     	;# 
   386  088F                     	;# 
   387  0890                     	;# 
   388  0891                     	;# 
   389  0892                     	;# 
   390  0893                     	;# 
   391  0893                     	;# 
   392  0894                     	;# 
   393  0895                     	;# 
   394  0896                     	;# 
   395  0897                     	;# 
   396  0897                     	;# 
   397  0898                     	;# 
   398  0899                     	;# 
   399  0D8C                     	;# 
   400  0D8C                     	;# 
   401  0D8D                     	;# 
   402  0D8E                     	;# 
   403  0D8F                     	;# 
   404  0D8F                     	;# 
   405  0D90                     	;# 
   406  0D91                     	;# 
   407  0D92                     	;# 
   408  0D92                     	;# 
   409  0D93                     	;# 
   410  0D94                     	;# 
   411  0D95                     	;# 
   412  0D95                     	;# 
   413  0D96                     	;# 
   414  0D97                     	;# 
   415  0D98                     	;# 
   416  0D99                     	;# 
   417  0D9A                     	;# 
   418  0D9B                     	;# 
   419  0D9C                     	;# 
   420  0D9D                     	;# 
   421  0D9E                     	;# 
   422  0D9E                     	;# 
   423  0D9F                     	;# 
   424  0DA0                     	;# 
   425  0DA1                     	;# 
   426  0DA1                     	;# 
   427  0DA2                     	;# 
   428  0DA3                     	;# 
   429  0DA4                     	;# 
   430  0DA4                     	;# 
   431  0DA5                     	;# 
   432  0DA6                     	;# 
   433  0DA7                     	;# 
   434  0DA7                     	;# 
   435  0DA8                     	;# 
   436  0DA9                     	;# 
   437  0DAA                     	;# 
   438  0DAB                     	;# 
   439  0DAC                     	;# 
   440  0DAD                     	;# 
   441  0DAE                     	;# 
   442  0DAF                     	;# 
   443  0E0F                     	;# 
   444  0E10                     	;# 
   445  0E11                     	;# 
   446  0E12                     	;# 
   447  0E13                     	;# 
   448  0E14                     	;# 
   449  0E15                     	;# 
   450  0E16                     	;# 
   451  0E17                     	;# 
   452  0E18                     	;# 
   453  0E19                     	;# 
   454  0E1A                     	;# 
   455  0E1B                     	;# 
   456  0E1C                     	;# 
   457  0E1D                     	;# 
   458  0E1E                     	;# 
   459  0E1F                     	;# 
   460  0E20                     	;# 
   461  0E21                     	;# 
   462  0E22                     	;# 
   463  0E23                     	;# 
   464  0E24                     	;# 
   465  0E25                     	;# 
   466  0E26                     	;# 
   467  0E27                     	;# 
   468  0E28                     	;# 
   469  0E29                     	;# 
   470  0E2A                     	;# 
   471  0E2B                     	;# 
   472  0E2C                     	;# 
   473  0E2D                     	;# 
   474  0E2E                     	;# 
   475  0E90                     	;# 
   476  0E91                     	;# 
   477  0E92                     	;# 
   478  0E94                     	;# 
   479  0E95                     	;# 
   480  0E9C                     	;# 
   481  0E9D                     	;# 
   482  0E9E                     	;# 
   483  0E9F                     	;# 
   484  0EA0                     	;# 
   485  0EA1                     	;# 
   486  0EA2                     	;# 
   487  0EA3                     	;# 
   488  0EA4                     	;# 
   489  0EA5                     	;# 
   490  0EA6                     	;# 
   491  0EA7                     	;# 
   492  0F0F                     	;# 
   493  0F10                     	;# 
   494  0F11                     	;# 
   495  0F12                     	;# 
   496  0F13                     	;# 
   497  0F14                     	;# 
   498  0F15                     	;# 
   499  0F16                     	;# 
   500  0F17                     	;# 
   501  0F18                     	;# 
   502  0F19                     	;# 
   503  0F1A                     	;# 
   504  0F1B                     	;# 
   505  0F1C                     	;# 
   506  0F1D                     	;# 
   507  0F1E                     	;# 
   508  0F1F                     	;# 
   509  0F20                     	;# 
   510  0F21                     	;# 
   511  0F22                     	;# 
   512  0F23                     	;# 
   513  0F24                     	;# 
   514  0F25                     	;# 
   515  0F26                     	;# 
   516  0F27                     	;# 
   517  0F28                     	;# 
   518  0F29                     	;# 
   519  0F2A                     	;# 
   520  0F2B                     	;# 
   521  0F2C                     	;# 
   522  0F2D                     	;# 
   523  0F2E                     	;# 
   524  0F2F                     	;# 
   525  0F30                     	;# 
   526  0F31                     	;# 
   527  0F32                     	;# 
   528  0F33                     	;# 
   529  0F34                     	;# 
   530  0F35                     	;# 
   531  0F36                     	;# 
   532  0F37                     	;# 
   533  0FE4                     	;# 
   534  0FE5                     	;# 
   535  0FE6                     	;# 
   536  0FE7                     	;# 
   537  0FE8                     	;# 
   538  0FE9                     	;# 
   539  0FEA                     	;# 
   540  0FEB                     	;# 
   541  0FED                     	;# 
   542  0FEE                     	;# 
   543  0FEF                     	;# 
   544  0000                     	;# 
   545  0001                     	;# 
   546  0002                     	;# 
   547  0003                     	;# 
   548  0004                     	;# 
   549  0005                     	;# 
   550  0006                     	;# 
   551  0007                     	;# 
   552  0008                     	;# 
   553  0009                     	;# 
   554  000A                     	;# 
   555  000B                     	;# 
   556  000C                     	;# 
   557  000D                     	;# 
   558  000E                     	;# 
   559  0010                     	;# 
   560  0011                     	;# 
   561  0012                     	;# 
   562  0013                     	;# 
   563  0014                     	;# 
   564  0015                     	;# 
   565  0016                     	;# 
   566  0016                     	;# 
   567  0017                     	;# 
   568  0018                     	;# 
   569  0019                     	;# 
   570  001A                     	;# 
   571  001A                     	;# 
   572  001B                     	;# 
   573  001B                     	;# 
   574  001C                     	;# 
   575  001D                     	;# 
   576  001E                     	;# 
   577  001F                     	;# 
   578  008C                     	;# 
   579  008D                     	;# 
   580  008E                     	;# 
   581  0090                     	;# 
   582  0091                     	;# 
   583  0092                     	;# 
   584  0093                     	;# 
   585  0094                     	;# 
   586  0095                     	;# 
   587  0096                     	;# 
   588  0098                     	;# 
   589  0099                     	;# 
   590  009A                     	;# 
   591  009B                     	;# 
   592  009B                     	;# 
   593  009C                     	;# 
   594  009D                     	;# 
   595  009E                     	;# 
   596  009F                     	;# 
   597  010C                     	;# 
   598  010D                     	;# 
   599  010E                     	;# 
   600  0111                     	;# 
   601  0112                     	;# 
   602  0113                     	;# 
   603  0114                     	;# 
   604  0115                     	;# 
   605  0116                     	;# 
   606  0117                     	;# 
   607  0118                     	;# 
   608  0119                     	;# 
   609  011C                     	;# 
   610  018C                     	;# 
   611  018D                     	;# 
   612  018E                     	;# 
   613  0191                     	;# 
   614  0191                     	;# 
   615  0192                     	;# 
   616  0193                     	;# 
   617  0193                     	;# 
   618  0194                     	;# 
   619  0195                     	;# 
   620  0196                     	;# 
   621  0197                     	;# 
   622  0199                     	;# 
   623  0199                     	;# 
   624  0199                     	;# 
   625  019A                     	;# 
   626  019A                     	;# 
   627  019A                     	;# 
   628  019B                     	;# 
   629  019B                     	;# 
   630  019B                     	;# 
   631  019B                     	;# 
   632  019B                     	;# 
   633  019C                     	;# 
   634  019C                     	;# 
   635  019C                     	;# 
   636  019D                     	;# 
   637  019D                     	;# 
   638  019D                     	;# 
   639  019E                     	;# 
   640  019E                     	;# 
   641  019E                     	;# 
   642  019F                     	;# 
   643  019F                     	;# 
   644  019F                     	;# 
   645  019F                     	;# 
   646  019F                     	;# 
   647  020C                     	;# 
   648  020D                     	;# 
   649  020E                     	;# 
   650  0211                     	;# 
   651  0211                     	;# 
   652  0212                     	;# 
   653  0212                     	;# 
   654  0213                     	;# 
   655  0213                     	;# 
   656  0214                     	;# 
   657  0214                     	;# 
   658  0215                     	;# 
   659  0215                     	;# 
   660  0215                     	;# 
   661  0215                     	;# 
   662  0216                     	;# 
   663  0216                     	;# 
   664  0217                     	;# 
   665  0217                     	;# 
   666  028C                     	;# 
   667  028D                     	;# 
   668  028E                     	;# 
   669  0291                     	;# 
   670  0291                     	;# 
   671  0292                     	;# 
   672  0293                     	;# 
   673  0294                     	;# 
   674  0298                     	;# 
   675  0298                     	;# 
   676  0299                     	;# 
   677  029A                     	;# 
   678  029B                     	;# 
   679  029E                     	;# 
   680  030C                     	;# 
   681  030D                     	;# 
   682  030E                     	;# 
   683  038C                     	;# 
   684  038D                     	;# 
   685  038E                     	;# 
   686  0391                     	;# 
   687  0392                     	;# 
   688  0393                     	;# 
   689  0394                     	;# 
   690  0395                     	;# 
   691  0396                     	;# 
   692  0397                     	;# 
   693  0398                     	;# 
   694  0399                     	;# 
   695  040E                     	;# 
   696  0413                     	;# 
   697  0413                     	;# 
   698  0414                     	;# 
   699  0414                     	;# 
   700  0415                     	;# 
   701  0416                     	;# 
   702  0417                     	;# 
   703  0418                     	;# 
   704  041A                     	;# 
   705  041A                     	;# 
   706  041B                     	;# 
   707  041B                     	;# 
   708  041C                     	;# 
   709  041D                     	;# 
   710  041E                     	;# 
   711  041F                     	;# 
   712  0493                     	;# 
   713  0494                     	;# 
   714  0495                     	;# 
   715  0496                     	;# 
   716  049A                     	;# 
   717  049B                     	;# 
   718  049C                     	;# 
   719  049D                     	;# 
   720  058C                     	;# 
   721  058C                     	;# 
   722  058D                     	;# 
   723  058E                     	;# 
   724  058E                     	;# 
   725  058F                     	;# 
   726  0590                     	;# 
   727  0590                     	;# 
   728  0591                     	;# 
   729  0592                     	;# 
   730  0592                     	;# 
   731  0593                     	;# 
   732  0594                     	;# 
   733  0594                     	;# 
   734  0595                     	;# 
   735  0596                     	;# 
   736  0596                     	;# 
   737  0597                     	;# 
   738  0598                     	;# 
   739  0599                     	;# 
   740  059A                     	;# 
   741  059B                     	;# 
   742  059B                     	;# 
   743  059C                     	;# 
   744  059D                     	;# 
   745  060C                     	;# 
   746  060C                     	;# 
   747  060D                     	;# 
   748  060E                     	;# 
   749  060F                     	;# 
   750  060F                     	;# 
   751  0610                     	;# 
   752  0611                     	;# 
   753  0612                     	;# 
   754  0613                     	;# 
   755  0614                     	;# 
   756  0617                     	;# 
   757  0617                     	;# 
   758  0618                     	;# 
   759  0619                     	;# 
   760  061A                     	;# 
   761  061A                     	;# 
   762  061B                     	;# 
   763  061C                     	;# 
   764  0691                     	;# 
   765  0692                     	;# 
   766  0693                     	;# 
   767  0694                     	;# 
   768  0695                     	;# 
   769  0696                     	;# 
   770  0697                     	;# 
   771  0699                     	;# 
   772  069A                     	;# 
   773  0711                     	;# 
   774  0712                     	;# 
   775  0713                     	;# 
   776  0714                     	;# 
   777  0715                     	;# 
   778  0718                     	;# 
   779  0718                     	;# 
   780  0719                     	;# 
   781  071A                     	;# 
   782  071A                     	;# 
   783  071B                     	;# 
   784  071C                     	;# 
   785  071D                     	;# 
   786  0791                     	;# 
   787  0791                     	;# 
   788  0792                     	;# 
   789  0793                     	;# 
   790  0793                     	;# 
   791  0794                     	;# 
   792  0795                     	;# 
   793  0795                     	;# 
   794  0796                     	;# 
   795  0797                     	;# 
   796  0797                     	;# 
   797  0798                     	;# 
   798  0799                     	;# 
   799  079A                     	;# 
   800  080C                     	;# 
   801  080C                     	;# 
   802  080D                     	;# 
   803  080E                     	;# 
   804  080E                     	;# 
   805  080F                     	;# 
   806  0810                     	;# 
   807  0810                     	;# 
   808  0811                     	;# 
   809  0812                     	;# 
   810  0812                     	;# 
   811  0813                     	;# 
   812  0814                     	;# 
   813  0815                     	;# 
   814  0816                     	;# 
   815  0817                     	;# 
   816  0818                     	;# 
   817  0819                     	;# 
   818  081A                     	;# 
   819  081A                     	;# 
   820  081B                     	;# 
   821  081C                     	;# 
   822  081C                     	;# 
   823  081D                     	;# 
   824  088C                     	;# 
   825  088D                     	;# 
   826  088E                     	;# 
   827  088F                     	;# 
   828  088F                     	;# 
   829  0890                     	;# 
   830  0891                     	;# 
   831  0892                     	;# 
   832  0893                     	;# 
   833  0893                     	;# 
   834  0894                     	;# 
   835  0895                     	;# 
   836  0896                     	;# 
   837  0897                     	;# 
   838  0897                     	;# 
   839  0898                     	;# 
   840  0899                     	;# 
   841  0D8C                     	;# 
   842  0D8C                     	;# 
   843  0D8D                     	;# 
   844  0D8E                     	;# 
   845  0D8F                     	;# 
   846  0D8F                     	;# 
   847  0D90                     	;# 
   848  0D91                     	;# 
   849  0D92                     	;# 
   850  0D92                     	;# 
   851  0D93                     	;# 
   852  0D94                     	;# 
   853  0D95                     	;# 
   854  0D95                     	;# 
   855  0D96                     	;# 
   856  0D97                     	;# 
   857  0D98                     	;# 
   858  0D99                     	;# 
   859  0D9A                     	;# 
   860  0D9B                     	;# 
   861  0D9C                     	;# 
   862  0D9D                     	;# 
   863  0D9E                     	;# 
   864  0D9E                     	;# 
   865  0D9F                     	;# 
   866  0DA0                     	;# 
   867  0DA1                     	;# 
   868  0DA1                     	;# 
   869  0DA2                     	;# 
   870  0DA3                     	;# 
   871  0DA4                     	;# 
   872  0DA4                     	;# 
   873  0DA5                     	;# 
   874  0DA6                     	;# 
   875  0DA7                     	;# 
   876  0DA7                     	;# 
   877  0DA8                     	;# 
   878  0DA9                     	;# 
   879  0DAA                     	;# 
   880  0DAB                     	;# 
   881  0DAC                     	;# 
   882  0DAD                     	;# 
   883  0DAE                     	;# 
   884  0DAF                     	;# 
   885  0E0F                     	;# 
   886  0E10                     	;# 
   887  0E11                     	;# 
   888  0E12                     	;# 
   889  0E13                     	;# 
   890  0E14                     	;# 
   891  0E15                     	;# 
   892  0E16                     	;# 
   893  0E17                     	;# 
   894  0E18                     	;# 
   895  0E19                     	;# 
   896  0E1A                     	;# 
   897  0E1B                     	;# 
   898  0E1C                     	;# 
   899  0E1D                     	;# 
   900  0E1E                     	;# 
   901  0E1F                     	;# 
   902  0E20                     	;# 
   903  0E21                     	;# 
   904  0E22                     	;# 
   905  0E23                     	;# 
   906  0E24                     	;# 
   907  0E25                     	;# 
   908  0E26                     	;# 
   909  0E27                     	;# 
   910  0E28                     	;# 
   911  0E29                     	;# 
   912  0E2A                     	;# 
   913  0E2B                     	;# 
   914  0E2C                     	;# 
   915  0E2D                     	;# 
   916  0E2E                     	;# 
   917  0E90                     	;# 
   918  0E91                     	;# 
   919  0E92                     	;# 
   920  0E94                     	;# 
   921  0E95                     	;# 
   922  0E9C                     	;# 
   923  0E9D                     	;# 
   924  0E9E                     	;# 
   925  0E9F                     	;# 
   926  0EA0                     	;# 
   927  0EA1                     	;# 
   928  0EA2                     	;# 
   929  0EA3                     	;# 
   930  0EA4                     	;# 
   931  0EA5                     	;# 
   932  0EA6                     	;# 
   933  0EA7                     	;# 
   934  0F0F                     	;# 
   935  0F10                     	;# 
   936  0F11                     	;# 
   937  0F12                     	;# 
   938  0F13                     	;# 
   939  0F14                     	;# 
   940  0F15                     	;# 
   941  0F16                     	;# 
   942  0F17                     	;# 
   943  0F18                     	;# 
   944  0F19                     	;# 
   945  0F1A                     	;# 
   946  0F1B                     	;# 
   947  0F1C                     	;# 
   948  0F1D                     	;# 
   949  0F1E                     	;# 
   950  0F1F                     	;# 
   951  0F20                     	;# 
   952  0F21                     	;# 
   953  0F22                     	;# 
   954  0F23                     	;# 
   955  0F24                     	;# 
   956  0F25                     	;# 
   957  0F26                     	;# 
   958  0F27                     	;# 
   959  0F28                     	;# 
   960  0F29                     	;# 
   961  0F2A                     	;# 
   962  0F2B                     	;# 
   963  0F2C                     	;# 
   964  0F2D                     	;# 
   965  0F2E                     	;# 
   966  0F2F                     	;# 
   967  0F30                     	;# 
   968  0F31                     	;# 
   969  0F32                     	;# 
   970  0F33                     	;# 
   971  0F34                     	;# 
   972  0F35                     	;# 
   973  0F36                     	;# 
   974  0F37                     	;# 
   975  0FE4                     	;# 
   976  0FE5                     	;# 
   977  0FE6                     	;# 
   978  0FE7                     	;# 
   979  0FE8                     	;# 
   980  0FE9                     	;# 
   981  0FEA                     	;# 
   982  0FEB                     	;# 
   983  0FED                     	;# 
   984  0FEE                     	;# 
   985  0FEF                     	;# 
   986  0000                     	;# 
   987  0001                     	;# 
   988  0002                     	;# 
   989  0003                     	;# 
   990  0004                     	;# 
   991  0005                     	;# 
   992  0006                     	;# 
   993  0007                     	;# 
   994  0008                     	;# 
   995  0009                     	;# 
   996  000A                     	;# 
   997  000B                     	;# 
   998  000C                     	;# 
   999  000D                     	;# 
  1000  000E                     	;# 
  1001  0010                     	;# 
  1002  0011                     	;# 
  1003  0012                     	;# 
  1004  0013                     	;# 
  1005  0014                     	;# 
  1006  0015                     	;# 
  1007  0016                     	;# 
  1008  0016                     	;# 
  1009  0017                     	;# 
  1010  0018                     	;# 
  1011  0019                     	;# 
  1012  001A                     	;# 
  1013  001A                     	;# 
  1014  001B                     	;# 
  1015  001B                     	;# 
  1016  001C                     	;# 
  1017  001D                     	;# 
  1018  001E                     	;# 
  1019  001F                     	;# 
  1020  008C                     	;# 
  1021  008D                     	;# 
  1022  008E                     	;# 
  1023  0090                     	;# 
  1024  0091                     	;# 
  1025  0092                     	;# 
  1026  0093                     	;# 
  1027  0094                     	;# 
  1028  0095                     	;# 
  1029  0096                     	;# 
  1030  0098                     	;# 
  1031  0099                     	;# 
  1032  009A                     	;# 
  1033  009B                     	;# 
  1034  009B                     	;# 
  1035  009C                     	;# 
  1036  009D                     	;# 
  1037  009E                     	;# 
  1038  009F                     	;# 
  1039  010C                     	;# 
  1040  010D                     	;# 
  1041  010E                     	;# 
  1042  0111                     	;# 
  1043  0112                     	;# 
  1044  0113                     	;# 
  1045  0114                     	;# 
  1046  0115                     	;# 
  1047  0116                     	;# 
  1048  0117                     	;# 
  1049  0118                     	;# 
  1050  0119                     	;# 
  1051  011C                     	;# 
  1052  018C                     	;# 
  1053  018D                     	;# 
  1054  018E                     	;# 
  1055  0191                     	;# 
  1056  0191                     	;# 
  1057  0192                     	;# 
  1058  0193                     	;# 
  1059  0193                     	;# 
  1060  0194                     	;# 
  1061  0195                     	;# 
  1062  0196                     	;# 
  1063  0197                     	;# 
  1064  0199                     	;# 
  1065  0199                     	;# 
  1066  0199                     	;# 
  1067  019A                     	;# 
  1068  019A                     	;# 
  1069  019A                     	;# 
  1070  019B                     	;# 
  1071  019B                     	;# 
  1072  019B                     	;# 
  1073  019B                     	;# 
  1074  019B                     	;# 
  1075  019C                     	;# 
  1076  019C                     	;# 
  1077  019C                     	;# 
  1078  019D                     	;# 
  1079  019D                     	;# 
  1080  019D                     	;# 
  1081  019E                     	;# 
  1082  019E                     	;# 
  1083  019E                     	;# 
  1084  019F                     	;# 
  1085  019F                     	;# 
  1086  019F                     	;# 
  1087  019F                     	;# 
  1088  019F                     	;# 
  1089  020C                     	;# 
  1090  020D                     	;# 
  1091  020E                     	;# 
  1092  0211                     	;# 
  1093  0211                     	;# 
  1094  0212                     	;# 
  1095  0212                     	;# 
  1096  0213                     	;# 
  1097  0213                     	;# 
  1098  0214                     	;# 
  1099  0214                     	;# 
  1100  0215                     	;# 
  1101  0215                     	;# 
  1102  0215                     	;# 
  1103  0215                     	;# 
  1104  0216                     	;# 
  1105  0216                     	;# 
  1106  0217                     	;# 
  1107  0217                     	;# 
  1108  028C                     	;# 
  1109  028D                     	;# 
  1110  028E                     	;# 
  1111  0291                     	;# 
  1112  0291                     	;# 
  1113  0292                     	;# 
  1114  0293                     	;# 
  1115  0294                     	;# 
  1116  0298                     	;# 
  1117  0298                     	;# 
  1118  0299                     	;# 
  1119  029A                     	;# 
  1120  029B                     	;# 
  1121  029E                     	;# 
  1122  030C                     	;# 
  1123  030D                     	;# 
  1124  030E                     	;# 
  1125  038C                     	;# 
  1126  038D                     	;# 
  1127  038E                     	;# 
  1128  0391                     	;# 
  1129  0392                     	;# 
  1130  0393                     	;# 
  1131  0394                     	;# 
  1132  0395                     	;# 
  1133  0396                     	;# 
  1134  0397                     	;# 
  1135  0398                     	;# 
  1136  0399                     	;# 
  1137  040E                     	;# 
  1138  0413                     	;# 
  1139  0413                     	;# 
  1140  0414                     	;# 
  1141  0414                     	;# 
  1142  0415                     	;# 
  1143  0416                     	;# 
  1144  0417                     	;# 
  1145  0418                     	;# 
  1146  041A                     	;# 
  1147  041A                     	;# 
  1148  041B                     	;# 
  1149  041B                     	;# 
  1150  041C                     	;# 
  1151  041D                     	;# 
  1152  041E                     	;# 
  1153  041F                     	;# 
  1154  0493                     	;# 
  1155  0494                     	;# 
  1156  0495                     	;# 
  1157  0496                     	;# 
  1158  049A                     	;# 
  1159  049B                     	;# 
  1160  049C                     	;# 
  1161  049D                     	;# 
  1162  058C                     	;# 
  1163  058C                     	;# 
  1164  058D                     	;# 
  1165  058E                     	;# 
  1166  058E                     	;# 
  1167  058F                     	;# 
  1168  0590                     	;# 
  1169  0590                     	;# 
  1170  0591                     	;# 
  1171  0592                     	;# 
  1172  0592                     	;# 
  1173  0593                     	;# 
  1174  0594                     	;# 
  1175  0594                     	;# 
  1176  0595                     	;# 
  1177  0596                     	;# 
  1178  0596                     	;# 
  1179  0597                     	;# 
  1180  0598                     	;# 
  1181  0599                     	;# 
  1182  059A                     	;# 
  1183  059B                     	;# 
  1184  059B                     	;# 
  1185  059C                     	;# 
  1186  059D                     	;# 
  1187  060C                     	;# 
  1188  060C                     	;# 
  1189  060D                     	;# 
  1190  060E                     	;# 
  1191  060F                     	;# 
  1192  060F                     	;# 
  1193  0610                     	;# 
  1194  0611                     	;# 
  1195  0612                     	;# 
  1196  0613                     	;# 
  1197  0614                     	;# 
  1198  0617                     	;# 
  1199  0617                     	;# 
  1200  0618                     	;# 
  1201  0619                     	;# 
  1202  061A                     	;# 
  1203  061A                     	;# 
  1204  061B                     	;# 
  1205  061C                     	;# 
  1206  0691                     	;# 
  1207  0692                     	;# 
  1208  0693                     	;# 
  1209  0694                     	;# 
  1210  0695                     	;# 
  1211  0696                     	;# 
  1212  0697                     	;# 
  1213  0699                     	;# 
  1214  069A                     	;# 
  1215  0711                     	;# 
  1216  0712                     	;# 
  1217  0713                     	;# 
  1218  0714                     	;# 
  1219  0715                     	;# 
  1220  0718                     	;# 
  1221  0718                     	;# 
  1222  0719                     	;# 
  1223  071A                     	;# 
  1224  071A                     	;# 
  1225  071B                     	;# 
  1226  071C                     	;# 
  1227  071D                     	;# 
  1228  0791                     	;# 
  1229  0791                     	;# 
  1230  0792                     	;# 
  1231  0793                     	;# 
  1232  0793                     	;# 
  1233  0794                     	;# 
  1234  0795                     	;# 
  1235  0795                     	;# 
  1236  0796                     	;# 
  1237  0797                     	;# 
  1238  0797                     	;# 
  1239  0798                     	;# 
  1240  0799                     	;# 
  1241  079A                     	;# 
  1242  080C                     	;# 
  1243  080C                     	;# 
  1244  080D                     	;# 
  1245  080E                     	;# 
  1246  080E                     	;# 
  1247  080F                     	;# 
  1248  0810                     	;# 
  1249  0810                     	;# 
  1250  0811                     	;# 
  1251  0812                     	;# 
  1252  0812                     	;# 
  1253  0813                     	;# 
  1254  0814                     	;# 
  1255  0815                     	;# 
  1256  0816                     	;# 
  1257  0817                     	;# 
  1258  0818                     	;# 
  1259  0819                     	;# 
  1260  081A                     	;# 
  1261  081A                     	;# 
  1262  081B                     	;# 
  1263  081C                     	;# 
  1264  081C                     	;# 
  1265  081D                     	;# 
  1266  088C                     	;# 
  1267  088D                     	;# 
  1268  088E                     	;# 
  1269  088F                     	;# 
  1270  088F                     	;# 
  1271  0890                     	;# 
  1272  0891                     	;# 
  1273  0892                     	;# 
  1274  0893                     	;# 
  1275  0893                     	;# 
  1276  0894                     	;# 
  1277  0895                     	;# 
  1278  0896                     	;# 
  1279  0897                     	;# 
  1280  0897                     	;# 
  1281  0898                     	;# 
  1282  0899                     	;# 
  1283  0D8C                     	;# 
  1284  0D8C                     	;# 
  1285  0D8D                     	;# 
  1286  0D8E                     	;# 
  1287  0D8F                     	;# 
  1288  0D8F                     	;# 
  1289  0D90                     	;# 
  1290  0D91                     	;# 
  1291  0D92                     	;# 
  1292  0D92                     	;# 
  1293  0D93                     	;# 
  1294  0D94                     	;# 
  1295  0D95                     	;# 
  1296  0D95                     	;# 
  1297  0D96                     	;# 
  1298  0D97                     	;# 
  1299  0D98                     	;# 
  1300  0D99                     	;# 
  1301  0D9A                     	;# 
  1302  0D9B                     	;# 
  1303  0D9C                     	;# 
  1304  0D9D                     	;# 
  1305  0D9E                     	;# 
  1306  0D9E                     	;# 
  1307  0D9F                     	;# 
  1308  0DA0                     	;# 
  1309  0DA1                     	;# 
  1310  0DA1                     	;# 
  1311  0DA2                     	;# 
  1312  0DA3                     	;# 
  1313  0DA4                     	;# 
  1314  0DA4                     	;# 
  1315  0DA5                     	;# 
  1316  0DA6                     	;# 
  1317  0DA7                     	;# 
  1318  0DA7                     	;# 
  1319  0DA8                     	;# 
  1320  0DA9                     	;# 
  1321  0DAA                     	;# 
  1322  0DAB                     	;# 
  1323  0DAC                     	;# 
  1324  0DAD                     	;# 
  1325  0DAE                     	;# 
  1326  0DAF                     	;# 
  1327  0E0F                     	;# 
  1328  0E10                     	;# 
  1329  0E11                     	;# 
  1330  0E12                     	;# 
  1331  0E13                     	;# 
  1332  0E14                     	;# 
  1333  0E15                     	;# 
  1334  0E16                     	;# 
  1335  0E17                     	;# 
  1336  0E18                     	;# 
  1337  0E19                     	;# 
  1338  0E1A                     	;# 
  1339  0E1B                     	;# 
  1340  0E1C                     	;# 
  1341  0E1D                     	;# 
  1342  0E1E                     	;# 
  1343  0E1F                     	;# 
  1344  0E20                     	;# 
  1345  0E21                     	;# 
  1346  0E22                     	;# 
  1347  0E23                     	;# 
  1348  0E24                     	;# 
  1349  0E25                     	;# 
  1350  0E26                     	;# 
  1351  0E27                     	;# 
  1352  0E28                     	;# 
  1353  0E29                     	;# 
  1354  0E2A                     	;# 
  1355  0E2B                     	;# 
  1356  0E2C                     	;# 
  1357  0E2D                     	;# 
  1358  0E2E                     	;# 
  1359  0E90                     	;# 
  1360  0E91                     	;# 
  1361  0E92                     	;# 
  1362  0E94                     	;# 
  1363  0E95                     	;# 
  1364  0E9C                     	;# 
  1365  0E9D                     	;# 
  1366  0E9E                     	;# 
  1367  0E9F                     	;# 
  1368  0EA0                     	;# 
  1369  0EA1                     	;# 
  1370  0EA2                     	;# 
  1371  0EA3                     	;# 
  1372  0EA4                     	;# 
  1373  0EA5                     	;# 
  1374  0EA6                     	;# 
  1375  0EA7                     	;# 
  1376  0F0F                     	;# 
  1377  0F10                     	;# 
  1378  0F11                     	;# 
  1379  0F12                     	;# 
  1380  0F13                     	;# 
  1381  0F14                     	;# 
  1382  0F15                     	;# 
  1383  0F16                     	;# 
  1384  0F17                     	;# 
  1385  0F18                     	;# 
  1386  0F19                     	;# 
  1387  0F1A                     	;# 
  1388  0F1B                     	;# 
  1389  0F1C                     	;# 
  1390  0F1D                     	;# 
  1391  0F1E                     	;# 
  1392  0F1F                     	;# 
  1393  0F20                     	;# 
  1394  0F21                     	;# 
  1395  0F22                     	;# 
  1396  0F23                     	;# 
  1397  0F24                     	;# 
  1398  0F25                     	;# 
  1399  0F26                     	;# 
  1400  0F27                     	;# 
  1401  0F28                     	;# 
  1402  0F29                     	;# 
  1403  0F2A                     	;# 
  1404  0F2B                     	;# 
  1405  0F2C                     	;# 
  1406  0F2D                     	;# 
  1407  0F2E                     	;# 
  1408  0F2F                     	;# 
  1409  0F30                     	;# 
  1410  0F31                     	;# 
  1411  0F32                     	;# 
  1412  0F33                     	;# 
  1413  0F34                     	;# 
  1414  0F35                     	;# 
  1415  0F36                     	;# 
  1416  0F37                     	;# 
  1417  0FE4                     	;# 
  1418  0FE5                     	;# 
  1419  0FE6                     	;# 
  1420  0FE7                     	;# 
  1421  0FE8                     	;# 
  1422  0FE9                     	;# 
  1423  0FEA                     	;# 
  1424  0FEB                     	;# 
  1425  0FED                     	;# 
  1426  0FEE                     	;# 
  1427  0FEF                     	;# 
  1428  0000                     	;# 
  1429  0001                     	;# 
  1430  0002                     	;# 
  1431  0003                     	;# 
  1432  0004                     	;# 
  1433  0005                     	;# 
  1434  0006                     	;# 
  1435  0007                     	;# 
  1436  0008                     	;# 
  1437  0009                     	;# 
  1438  000A                     	;# 
  1439  000B                     	;# 
  1440  000C                     	;# 
  1441  000D                     	;# 
  1442  000E                     	;# 
  1443  0010                     	;# 
  1444  0011                     	;# 
  1445  0012                     	;# 
  1446  0013                     	;# 
  1447  0014                     	;# 
  1448  0015                     	;# 
  1449  0016                     	;# 
  1450  0016                     	;# 
  1451  0017                     	;# 
  1452  0018                     	;# 
  1453  0019                     	;# 
  1454  001A                     	;# 
  1455  001A                     	;# 
  1456  001B                     	;# 
  1457  001B                     	;# 
  1458  001C                     	;# 
  1459  001D                     	;# 
  1460  001E                     	;# 
  1461  001F                     	;# 
  1462  008C                     	;# 
  1463  008D                     	;# 
  1464  008E                     	;# 
  1465  0090                     	;# 
  1466  0091                     	;# 
  1467  0092                     	;# 
  1468  0093                     	;# 
  1469  0094                     	;# 
  1470  0095                     	;# 
  1471  0096                     	;# 
  1472  0098                     	;# 
  1473  0099                     	;# 
  1474  009A                     	;# 
  1475  009B                     	;# 
  1476  009B                     	;# 
  1477  009C                     	;# 
  1478  009D                     	;# 
  1479  009E                     	;# 
  1480  009F                     	;# 
  1481  010C                     	;# 
  1482  010D                     	;# 
  1483  010E                     	;# 
  1484  0111                     	;# 
  1485  0112                     	;# 
  1486  0113                     	;# 
  1487  0114                     	;# 
  1488  0115                     	;# 
  1489  0116                     	;# 
  1490  0117                     	;# 
  1491  0118                     	;# 
  1492  0119                     	;# 
  1493  011C                     	;# 
  1494  018C                     	;# 
  1495  018D                     	;# 
  1496  018E                     	;# 
  1497  0191                     	;# 
  1498  0191                     	;# 
  1499  0192                     	;# 
  1500  0193                     	;# 
  1501  0193                     	;# 
  1502  0194                     	;# 
  1503  0195                     	;# 
  1504  0196                     	;# 
  1505  0197                     	;# 
  1506  0199                     	;# 
  1507  0199                     	;# 
  1508  0199                     	;# 
  1509  019A                     	;# 
  1510  019A                     	;# 
  1511  019A                     	;# 
  1512  019B                     	;# 
  1513  019B                     	;# 
  1514  019B                     	;# 
  1515  019B                     	;# 
  1516  019B                     	;# 
  1517  019C                     	;# 
  1518  019C                     	;# 
  1519  019C                     	;# 
  1520  019D                     	;# 
  1521  019D                     	;# 
  1522  019D                     	;# 
  1523  019E                     	;# 
  1524  019E                     	;# 
  1525  019E                     	;# 
  1526  019F                     	;# 
  1527  019F                     	;# 
  1528  019F                     	;# 
  1529  019F                     	;# 
  1530  019F                     	;# 
  1531  020C                     	;# 
  1532  020D                     	;# 
  1533  020E                     	;# 
  1534  0211                     	;# 
  1535  0211                     	;# 
  1536  0212                     	;# 
  1537  0212                     	;# 
  1538  0213                     	;# 
  1539  0213                     	;# 
  1540  0214                     	;# 
  1541  0214                     	;# 
  1542  0215                     	;# 
  1543  0215                     	;# 
  1544  0215                     	;# 
  1545  0215                     	;# 
  1546  0216                     	;# 
  1547  0216                     	;# 
  1548  0217                     	;# 
  1549  0217                     	;# 
  1550  028C                     	;# 
  1551  028D                     	;# 
  1552  028E                     	;# 
  1553  0291                     	;# 
  1554  0291                     	;# 
  1555  0292                     	;# 
  1556  0293                     	;# 
  1557  0294                     	;# 
  1558  0298                     	;# 
  1559  0298                     	;# 
  1560  0299                     	;# 
  1561  029A                     	;# 
  1562  029B                     	;# 
  1563  029E                     	;# 
  1564  030C                     	;# 
  1565  030D                     	;# 
  1566  030E                     	;# 
  1567  038C                     	;# 
  1568  038D                     	;# 
  1569  038E                     	;# 
  1570  0391                     	;# 
  1571  0392                     	;# 
  1572  0393                     	;# 
  1573  0394                     	;# 
  1574  0395                     	;# 
  1575  0396                     	;# 
  1576  0397                     	;# 
  1577  0398                     	;# 
  1578  0399                     	;# 
  1579  040E                     	;# 
  1580  0413                     	;# 
  1581  0413                     	;# 
  1582  0414                     	;# 
  1583  0414                     	;# 
  1584  0415                     	;# 
  1585  0416                     	;# 
  1586  0417                     	;# 
  1587  0418                     	;# 
  1588  041A                     	;# 
  1589  041A                     	;# 
  1590  041B                     	;# 
  1591  041B                     	;# 
  1592  041C                     	;# 
  1593  041D                     	;# 
  1594  041E                     	;# 
  1595  041F                     	;# 
  1596  0493                     	;# 
  1597  0494                     	;# 
  1598  0495                     	;# 
  1599  0496                     	;# 
  1600  049A                     	;# 
  1601  049B                     	;# 
  1602  049C                     	;# 
  1603  049D                     	;# 
  1604  058C                     	;# 
  1605  058C                     	;# 
  1606  058D                     	;# 
  1607  058E                     	;# 
  1608  058E                     	;# 
  1609  058F                     	;# 
  1610  0590                     	;# 
  1611  0590                     	;# 
  1612  0591                     	;# 
  1613  0592                     	;# 
  1614  0592                     	;# 
  1615  0593                     	;# 
  1616  0594                     	;# 
  1617  0594                     	;# 
  1618  0595                     	;# 
  1619  0596                     	;# 
  1620  0596                     	;# 
  1621  0597                     	;# 
  1622  0598                     	;# 
  1623  0599                     	;# 
  1624  059A                     	;# 
  1625  059B                     	;# 
  1626  059B                     	;# 
  1627  059C                     	;# 
  1628  059D                     	;# 
  1629  060C                     	;# 
  1630  060C                     	;# 
  1631  060D                     	;# 
  1632  060E                     	;# 
  1633  060F                     	;# 
  1634  060F                     	;# 
  1635  0610                     	;# 
  1636  0611                     	;# 
  1637  0612                     	;# 
  1638  0613                     	;# 
  1639  0614                     	;# 
  1640  0617                     	;# 
  1641  0617                     	;# 
  1642  0618                     	;# 
  1643  0619                     	;# 
  1644  061A                     	;# 
  1645  061A                     	;# 
  1646  061B                     	;# 
  1647  061C                     	;# 
  1648  0691                     	;# 
  1649  0692                     	;# 
  1650  0693                     	;# 
  1651  0694                     	;# 
  1652  0695                     	;# 
  1653  0696                     	;# 
  1654  0697                     	;# 
  1655  0699                     	;# 
  1656  069A                     	;# 
  1657  0711                     	;# 
  1658  0712                     	;# 
  1659  0713                     	;# 
  1660  0714                     	;# 
  1661  0715                     	;# 
  1662  0718                     	;# 
  1663  0718                     	;# 
  1664  0719                     	;# 
  1665  071A                     	;# 
  1666  071A                     	;# 
  1667  071B                     	;# 
  1668  071C                     	;# 
  1669  071D                     	;# 
  1670  0791                     	;# 
  1671  0791                     	;# 
  1672  0792                     	;# 
  1673  0793                     	;# 
  1674  0793                     	;# 
  1675  0794                     	;# 
  1676  0795                     	;# 
  1677  0795                     	;# 
  1678  0796                     	;# 
  1679  0797                     	;# 
  1680  0797                     	;# 
  1681  0798                     	;# 
  1682  0799                     	;# 
  1683  079A                     	;# 
  1684  080C                     	;# 
  1685  080C                     	;# 
  1686  080D                     	;# 
  1687  080E                     	;# 
  1688  080E                     	;# 
  1689  080F                     	;# 
  1690  0810                     	;# 
  1691  0810                     	;# 
  1692  0811                     	;# 
  1693  0812                     	;# 
  1694  0812                     	;# 
  1695  0813                     	;# 
  1696  0814                     	;# 
  1697  0815                     	;# 
  1698  0816                     	;# 
  1699  0817                     	;# 
  1700  0818                     	;# 
  1701  0819                     	;# 
  1702  081A                     	;# 
  1703  081A                     	;# 
  1704  081B                     	;# 
  1705  081C                     	;# 
  1706  081C                     	;# 
  1707  081D                     	;# 
  1708  088C                     	;# 
  1709  088D                     	;# 
  1710  088E                     	;# 
  1711  088F                     	;# 
  1712  088F                     	;# 
  1713  0890                     	;# 
  1714  0891                     	;# 
  1715  0892                     	;# 
  1716  0893                     	;# 
  1717  0893                     	;# 
  1718  0894                     	;# 
  1719  0895                     	;# 
  1720  0896                     	;# 
  1721  0897                     	;# 
  1722  0897                     	;# 
  1723  0898                     	;# 
  1724  0899                     	;# 
  1725  0D8C                     	;# 
  1726  0D8C                     	;# 
  1727  0D8D                     	;# 
  1728  0D8E                     	;# 
  1729  0D8F                     	;# 
  1730  0D8F                     	;# 
  1731  0D90                     	;# 
  1732  0D91                     	;# 
  1733  0D92                     	;# 
  1734  0D92                     	;# 
  1735  0D93                     	;# 
  1736  0D94                     	;# 
  1737  0D95                     	;# 
  1738  0D95                     	;# 
  1739  0D96                     	;# 
  1740  0D97                     	;# 
  1741  0D98                     	;# 
  1742  0D99                     	;# 
  1743  0D9A                     	;# 
  1744  0D9B                     	;# 
  1745  0D9C                     	;# 
  1746  0D9D                     	;# 
  1747  0D9E                     	;# 
  1748  0D9E                     	;# 
  1749  0D9F                     	;# 
  1750  0DA0                     	;# 
  1751  0DA1                     	;# 
  1752  0DA1                     	;# 
  1753  0DA2                     	;# 
  1754  0DA3                     	;# 
  1755  0DA4                     	;# 
  1756  0DA4                     	;# 
  1757  0DA5                     	;# 
  1758  0DA6                     	;# 
  1759  0DA7                     	;# 
  1760  0DA7                     	;# 
  1761  0DA8                     	;# 
  1762  0DA9                     	;# 
  1763  0DAA                     	;# 
  1764  0DAB                     	;# 
  1765  0DAC                     	;# 
  1766  0DAD                     	;# 
  1767  0DAE                     	;# 
  1768  0DAF                     	;# 
  1769  0E0F                     	;# 
  1770  0E10                     	;# 
  1771  0E11                     	;# 
  1772  0E12                     	;# 
  1773  0E13                     	;# 
  1774  0E14                     	;# 
  1775  0E15                     	;# 
  1776  0E16                     	;# 
  1777  0E17                     	;# 
  1778  0E18                     	;# 
  1779  0E19                     	;# 
  1780  0E1A                     	;# 
  1781  0E1B                     	;# 
  1782  0E1C                     	;# 
  1783  0E1D                     	;# 
  1784  0E1E                     	;# 
  1785  0E1F                     	;# 
  1786  0E20                     	;# 
  1787  0E21                     	;# 
  1788  0E22                     	;# 
  1789  0E23                     	;# 
  1790  0E24                     	;# 
  1791  0E25                     	;# 
  1792  0E26                     	;# 
  1793  0E27                     	;# 
  1794  0E28                     	;# 
  1795  0E29                     	;# 
  1796  0E2A                     	;# 
  1797  0E2B                     	;# 
  1798  0E2C                     	;# 
  1799  0E2D                     	;# 
  1800  0E2E                     	;# 
  1801  0E90                     	;# 
  1802  0E91                     	;# 
  1803  0E92                     	;# 
  1804  0E94                     	;# 
  1805  0E95                     	;# 
  1806  0E9C                     	;# 
  1807  0E9D                     	;# 
  1808  0E9E                     	;# 
  1809  0E9F                     	;# 
  1810  0EA0                     	;# 
  1811  0EA1                     	;# 
  1812  0EA2                     	;# 
  1813  0EA3                     	;# 
  1814  0EA4                     	;# 
  1815  0EA5                     	;# 
  1816  0EA6                     	;# 
  1817  0EA7                     	;# 
  1818  0F0F                     	;# 
  1819  0F10                     	;# 
  1820  0F11                     	;# 
  1821  0F12                     	;# 
  1822  0F13                     	;# 
  1823  0F14                     	;# 
  1824  0F15                     	;# 
  1825  0F16                     	;# 
  1826  0F17                     	;# 
  1827  0F18                     	;# 
  1828  0F19                     	;# 
  1829  0F1A                     	;# 
  1830  0F1B                     	;# 
  1831  0F1C                     	;# 
  1832  0F1D                     	;# 
  1833  0F1E                     	;# 
  1834  0F1F                     	;# 
  1835  0F20                     	;# 
  1836  0F21                     	;# 
  1837  0F22                     	;# 
  1838  0F23                     	;# 
  1839  0F24                     	;# 
  1840  0F25                     	;# 
  1841  0F26                     	;# 
  1842  0F27                     	;# 
  1843  0F28                     	;# 
  1844  0F29                     	;# 
  1845  0F2A                     	;# 
  1846  0F2B                     	;# 
  1847  0F2C                     	;# 
  1848  0F2D                     	;# 
  1849  0F2E                     	;# 
  1850  0F2F                     	;# 
  1851  0F30                     	;# 
  1852  0F31                     	;# 
  1853  0F32                     	;# 
  1854  0F33                     	;# 
  1855  0F34                     	;# 
  1856  0F35                     	;# 
  1857  0F36                     	;# 
  1858  0F37                     	;# 
  1859  0FE4                     	;# 
  1860  0FE5                     	;# 
  1861  0FE6                     	;# 
  1862  0FE7                     	;# 
  1863  0FE8                     	;# 
  1864  0FE9                     	;# 
  1865  0FEA                     	;# 
  1866  0FEB                     	;# 
  1867  0FED                     	;# 
  1868  0FEE                     	;# 
  1869  0FEF                     	;# 
  1870  0000                     	;# 
  1871  0001                     	;# 
  1872  0002                     	;# 
  1873  0003                     	;# 
  1874  0004                     	;# 
  1875  0005                     	;# 
  1876  0006                     	;# 
  1877  0007                     	;# 
  1878  0008                     	;# 
  1879  0009                     	;# 
  1880  000A                     	;# 
  1881  000B                     	;# 
  1882  000C                     	;# 
  1883  000D                     	;# 
  1884  000E                     	;# 
  1885  0010                     	;# 
  1886  0011                     	;# 
  1887  0012                     	;# 
  1888  0013                     	;# 
  1889  0014                     	;# 
  1890  0015                     	;# 
  1891  0016                     	;# 
  1892  0016                     	;# 
  1893  0017                     	;# 
  1894  0018                     	;# 
  1895  0019                     	;# 
  1896  001A                     	;# 
  1897  001A                     	;# 
  1898  001B                     	;# 
  1899  001B                     	;# 
  1900  001C                     	;# 
  1901  001D                     	;# 
  1902  001E                     	;# 
  1903  001F                     	;# 
  1904  008C                     	;# 
  1905  008D                     	;# 
  1906  008E                     	;# 
  1907  0090                     	;# 
  1908  0091                     	;# 
  1909  0092                     	;# 
  1910  0093                     	;# 
  1911  0094                     	;# 
  1912  0095                     	;# 
  1913  0096                     	;# 
  1914  0098                     	;# 
  1915  0099                     	;# 
  1916  009A                     	;# 
  1917  009B                     	;# 
  1918  009B                     	;# 
  1919  009C                     	;# 
  1920  009D                     	;# 
  1921  009E                     	;# 
  1922  009F                     	;# 
  1923  010C                     	;# 
  1924  010D                     	;# 
  1925  010E                     	;# 
  1926  0111                     	;# 
  1927  0112                     	;# 
  1928  0113                     	;# 
  1929  0114                     	;# 
  1930  0115                     	;# 
  1931  0116                     	;# 
  1932  0117                     	;# 
  1933  0118                     	;# 
  1934  0119                     	;# 
  1935  011C                     	;# 
  1936  018C                     	;# 
  1937  018D                     	;# 
  1938  018E                     	;# 
  1939  0191                     	;# 
  1940  0191                     	;# 
  1941  0192                     	;# 
  1942  0193                     	;# 
  1943  0193                     	;# 
  1944  0194                     	;# 
  1945  0195                     	;# 
  1946  0196                     	;# 
  1947  0197                     	;# 
  1948  0199                     	;# 
  1949  0199                     	;# 
  1950  0199                     	;# 
  1951  019A                     	;# 
  1952  019A                     	;# 
  1953  019A                     	;# 
  1954  019B                     	;# 
  1955  019B                     	;# 
  1956  019B                     	;# 
  1957  019B                     	;# 
  1958  019B                     	;# 
  1959  019C                     	;# 
  1960  019C                     	;# 
  1961  019C                     	;# 
  1962  019D                     	;# 
  1963  019D                     	;# 
  1964  019D                     	;# 
  1965  019E                     	;# 
  1966  019E                     	;# 
  1967  019E                     	;# 
  1968  019F                     	;# 
  1969  019F                     	;# 
  1970  019F                     	;# 
  1971  019F                     	;# 
  1972  019F                     	;# 
  1973  020C                     	;# 
  1974  020D                     	;# 
  1975  020E                     	;# 
  1976  0211                     	;# 
  1977  0211                     	;# 
  1978  0212                     	;# 
  1979  0212                     	;# 
  1980  0213                     	;# 
  1981  0213                     	;# 
  1982  0214                     	;# 
  1983  0214                     	;# 
  1984  0215                     	;# 
  1985  0215                     	;# 
  1986  0215                     	;# 
  1987  0215                     	;# 
  1988  0216                     	;# 
  1989  0216                     	;# 
  1990  0217                     	;# 
  1991  0217                     	;# 
  1992  028C                     	;# 
  1993  028D                     	;# 
  1994  028E                     	;# 
  1995  0291                     	;# 
  1996  0291                     	;# 
  1997  0292                     	;# 
  1998  0293                     	;# 
  1999  0294                     	;# 
  2000  0298                     	;# 
  2001  0298                     	;# 
  2002  0299                     	;# 
  2003  029A                     	;# 
  2004  029B                     	;# 
  2005  029E                     	;# 
  2006  030C                     	;# 
  2007  030D                     	;# 
  2008  030E                     	;# 
  2009  038C                     	;# 
  2010  038D                     	;# 
  2011  038E                     	;# 
  2012  0391                     	;# 
  2013  0392                     	;# 
  2014  0393                     	;# 
  2015  0394                     	;# 
  2016  0395                     	;# 
  2017  0396                     	;# 
  2018  0397                     	;# 
  2019  0398                     	;# 
  2020  0399                     	;# 
  2021  040E                     	;# 
  2022  0413                     	;# 
  2023  0413                     	;# 
  2024  0414                     	;# 
  2025  0414                     	;# 
  2026  0415                     	;# 
  2027  0416                     	;# 
  2028  0417                     	;# 
  2029  0418                     	;# 
  2030  041A                     	;# 
  2031  041A                     	;# 
  2032  041B                     	;# 
  2033  041B                     	;# 
  2034  041C                     	;# 
  2035  041D                     	;# 
  2036  041E                     	;# 
  2037  041F                     	;# 
  2038  0493                     	;# 
  2039  0494                     	;# 
  2040  0495                     	;# 
  2041  0496                     	;# 
  2042  049A                     	;# 
  2043  049B                     	;# 
  2044  049C                     	;# 
  2045  049D                     	;# 
  2046  058C                     	;# 
  2047  058C                     	;# 
  2048  058D                     	;# 
  2049  058E                     	;# 
  2050  058E                     	;# 
  2051  058F                     	;# 
  2052  0590                     	;# 
  2053  0590                     	;# 
  2054  0591                     	;# 
  2055  0592                     	;# 
  2056  0592                     	;# 
  2057  0593                     	;# 
  2058  0594                     	;# 
  2059  0594                     	;# 
  2060  0595                     	;# 
  2061  0596                     	;# 
  2062  0596                     	;# 
  2063  0597                     	;# 
  2064  0598                     	;# 
  2065  0599                     	;# 
  2066  059A                     	;# 
  2067  059B                     	;# 
  2068  059B                     	;# 
  2069  059C                     	;# 
  2070  059D                     	;# 
  2071  060C                     	;# 
  2072  060C                     	;# 
  2073  060D                     	;# 
  2074  060E                     	;# 
  2075  060F                     	;# 
  2076  060F                     	;# 
  2077  0610                     	;# 
  2078  0611                     	;# 
  2079  0612                     	;# 
  2080  0613                     	;# 
  2081  0614                     	;# 
  2082  0617                     	;# 
  2083  0617                     	;# 
  2084  0618                     	;# 
  2085  0619                     	;# 
  2086  061A                     	;# 
  2087  061A                     	;# 
  2088  061B                     	;# 
  2089  061C                     	;# 
  2090  0691                     	;# 
  2091  0692                     	;# 
  2092  0693                     	;# 
  2093  0694                     	;# 
  2094  0695                     	;# 
  2095  0696                     	;# 
  2096  0697                     	;# 
  2097  0699                     	;# 
  2098  069A                     	;# 
  2099  0711                     	;# 
  2100  0712                     	;# 
  2101  0713                     	;# 
  2102  0714                     	;# 
  2103  0715                     	;# 
  2104  0718                     	;# 
  2105  0718                     	;# 
  2106  0719                     	;# 
  2107  071A                     	;# 
  2108  071A                     	;# 
  2109  071B                     	;# 
  2110  071C                     	;# 
  2111  071D                     	;# 
  2112  0791                     	;# 
  2113  0791                     	;# 
  2114  0792                     	;# 
  2115  0793                     	;# 
  2116  0793                     	;# 
  2117  0794                     	;# 
  2118  0795                     	;# 
  2119  0795                     	;# 
  2120  0796                     	;# 
  2121  0797                     	;# 
  2122  0797                     	;# 
  2123  0798                     	;# 
  2124  0799                     	;# 
  2125  079A                     	;# 
  2126  080C                     	;# 
  2127  080C                     	;# 
  2128  080D                     	;# 
  2129  080E                     	;# 
  2130  080E                     	;# 
  2131  080F                     	;# 
  2132  0810                     	;# 
  2133  0810                     	;# 
  2134  0811                     	;# 
  2135  0812                     	;# 
  2136  0812                     	;# 
  2137  0813                     	;# 
  2138  0814                     	;# 
  2139  0815                     	;# 
  2140  0816                     	;# 
  2141  0817                     	;# 
  2142  0818                     	;# 
  2143  0819                     	;# 
  2144  081A                     	;# 
  2145  081A                     	;# 
  2146  081B                     	;# 
  2147  081C                     	;# 
  2148  081C                     	;# 
  2149  081D                     	;# 
  2150  088C                     	;# 
  2151  088D                     	;# 
  2152  088E                     	;# 
  2153  088F                     	;# 
  2154  088F                     	;# 
  2155  0890                     	;# 
  2156  0891                     	;# 
  2157  0892                     	;# 
  2158  0893                     	;# 
  2159  0893                     	;# 
  2160  0894                     	;# 
  2161  0895                     	;# 
  2162  0896                     	;# 
  2163  0897                     	;# 
  2164  0897                     	;# 
  2165  0898                     	;# 
  2166  0899                     	;# 
  2167  0D8C                     	;# 
  2168  0D8C                     	;# 
  2169  0D8D                     	;# 
  2170  0D8E                     	;# 
  2171  0D8F                     	;# 
  2172  0D8F                     	;# 
  2173  0D90                     	;# 
  2174  0D91                     	;# 
  2175  0D92                     	;# 
  2176  0D92                     	;# 
  2177  0D93                     	;# 
  2178  0D94                     	;# 
  2179  0D95                     	;# 
  2180  0D95                     	;# 
  2181  0D96                     	;# 
  2182  0D97                     	;# 
  2183  0D98                     	;# 
  2184  0D99                     	;# 
  2185  0D9A                     	;# 
  2186  0D9B                     	;# 
  2187  0D9C                     	;# 
  2188  0D9D                     	;# 
  2189  0D9E                     	;# 
  2190  0D9E                     	;# 
  2191  0D9F                     	;# 
  2192  0DA0                     	;# 
  2193  0DA1                     	;# 
  2194  0DA1                     	;# 
  2195  0DA2                     	;# 
  2196  0DA3                     	;# 
  2197  0DA4                     	;# 
  2198  0DA4                     	;# 
  2199  0DA5                     	;# 
  2200  0DA6                     	;# 
  2201  0DA7                     	;# 
  2202  0DA7                     	;# 
  2203  0DA8                     	;# 
  2204  0DA9                     	;# 
  2205  0DAA                     	;# 
  2206  0DAB                     	;# 
  2207  0DAC                     	;# 
  2208  0DAD                     	;# 
  2209  0DAE                     	;# 
  2210  0DAF                     	;# 
  2211  0E0F                     	;# 
  2212  0E10                     	;# 
  2213  0E11                     	;# 
  2214  0E12                     	;# 
  2215  0E13                     	;# 
  2216  0E14                     	;# 
  2217  0E15                     	;# 
  2218  0E16                     	;# 
  2219  0E17                     	;# 
  2220  0E18                     	;# 
  2221  0E19                     	;# 
  2222  0E1A                     	;# 
  2223  0E1B                     	;# 
  2224  0E1C                     	;# 
  2225  0E1D                     	;# 
  2226  0E1E                     	;# 
  2227  0E1F                     	;# 
  2228  0E20                     	;# 
  2229  0E21                     	;# 
  2230  0E22                     	;# 
  2231  0E23                     	;# 
  2232  0E24                     	;# 
  2233  0E25                     	;# 
  2234  0E26                     	;# 
  2235  0E27                     	;# 
  2236  0E28                     	;# 
  2237  0E29                     	;# 
  2238  0E2A                     	;# 
  2239  0E2B                     	;# 
  2240  0E2C                     	;# 
  2241  0E2D                     	;# 
  2242  0E2E                     	;# 
  2243  0E90                     	;# 
  2244  0E91                     	;# 
  2245  0E92                     	;# 
  2246  0E94                     	;# 
  2247  0E95                     	;# 
  2248  0E9C                     	;# 
  2249  0E9D                     	;# 
  2250  0E9E                     	;# 
  2251  0E9F                     	;# 
  2252  0EA0                     	;# 
  2253  0EA1                     	;# 
  2254  0EA2                     	;# 
  2255  0EA3                     	;# 
  2256  0EA4                     	;# 
  2257  0EA5                     	;# 
  2258  0EA6                     	;# 
  2259  0EA7                     	;# 
  2260  0F0F                     	;# 
  2261  0F10                     	;# 
  2262  0F11                     	;# 
  2263  0F12                     	;# 
  2264  0F13                     	;# 
  2265  0F14                     	;# 
  2266  0F15                     	;# 
  2267  0F16                     	;# 
  2268  0F17                     	;# 
  2269  0F18                     	;# 
  2270  0F19                     	;# 
  2271  0F1A                     	;# 
  2272  0F1B                     	;# 
  2273  0F1C                     	;# 
  2274  0F1D                     	;# 
  2275  0F1E                     	;# 
  2276  0F1F                     	;# 
  2277  0F20                     	;# 
  2278  0F21                     	;# 
  2279  0F22                     	;# 
  2280  0F23                     	;# 
  2281  0F24                     	;# 
  2282  0F25                     	;# 
  2283  0F26                     	;# 
  2284  0F27                     	;# 
  2285  0F28                     	;# 
  2286  0F29                     	;# 
  2287  0F2A                     	;# 
  2288  0F2B                     	;# 
  2289  0F2C                     	;# 
  2290  0F2D                     	;# 
  2291  0F2E                     	;# 
  2292  0F2F                     	;# 
  2293  0F30                     	;# 
  2294  0F31                     	;# 
  2295  0F32                     	;# 
  2296  0F33                     	;# 
  2297  0F34                     	;# 
  2298  0F35                     	;# 
  2299  0F36                     	;# 
  2300  0F37                     	;# 
  2301  0FE4                     	;# 
  2302  0FE5                     	;# 
  2303  0FE6                     	;# 
  2304  0FE7                     	;# 
  2305  0FE8                     	;# 
  2306  0FE9                     	;# 
  2307  0FEA                     	;# 
  2308  0FEB                     	;# 
  2309  0FED                     	;# 
  2310  0FEE                     	;# 
  2311  0FEF                     	;# 
  2312  0000                     	;# 
  2313  0001                     	;# 
  2314  0002                     	;# 
  2315  0003                     	;# 
  2316  0004                     	;# 
  2317  0005                     	;# 
  2318  0006                     	;# 
  2319  0007                     	;# 
  2320  0008                     	;# 
  2321  0009                     	;# 
  2322  000A                     	;# 
  2323  000B                     	;# 
  2324  000C                     	;# 
  2325  000D                     	;# 
  2326  000E                     	;# 
  2327  0010                     	;# 
  2328  0011                     	;# 
  2329  0012                     	;# 
  2330  0013                     	;# 
  2331  0014                     	;# 
  2332  0015                     	;# 
  2333  0016                     	;# 
  2334  0016                     	;# 
  2335  0017                     	;# 
  2336  0018                     	;# 
  2337  0019                     	;# 
  2338  001A                     	;# 
  2339  001A                     	;# 
  2340  001B                     	;# 
  2341  001B                     	;# 
  2342  001C                     	;# 
  2343  001D                     	;# 
  2344  001E                     	;# 
  2345  001F                     	;# 
  2346  008C                     	;# 
  2347  008D                     	;# 
  2348  008E                     	;# 
  2349  0090                     	;# 
  2350  0091                     	;# 
  2351  0092                     	;# 
  2352  0093                     	;# 
  2353  0094                     	;# 
  2354  0095                     	;# 
  2355  0096                     	;# 
  2356  0098                     	;# 
  2357  0099                     	;# 
  2358  009A                     	;# 
  2359  009B                     	;# 
  2360  009B                     	;# 
  2361  009C                     	;# 
  2362  009D                     	;# 
  2363  009E                     	;# 
  2364  009F                     	;# 
  2365  010C                     	;# 
  2366  010D                     	;# 
  2367  010E                     	;# 
  2368  0111                     	;# 
  2369  0112                     	;# 
  2370  0113                     	;# 
  2371  0114                     	;# 
  2372  0115                     	;# 
  2373  0116                     	;# 
  2374  0117                     	;# 
  2375  0118                     	;# 
  2376  0119                     	;# 
  2377  011C                     	;# 
  2378  018C                     	;# 
  2379  018D                     	;# 
  2380  018E                     	;# 
  2381  0191                     	;# 
  2382  0191                     	;# 
  2383  0192                     	;# 
  2384  0193                     	;# 
  2385  0193                     	;# 
  2386  0194                     	;# 
  2387  0195                     	;# 
  2388  0196                     	;# 
  2389  0197                     	;# 
  2390  0199                     	;# 
  2391  0199                     	;# 
  2392  0199                     	;# 
  2393  019A                     	;# 
  2394  019A                     	;# 
  2395  019A                     	;# 
  2396  019B                     	;# 
  2397  019B                     	;# 
  2398  019B                     	;# 
  2399  019B                     	;# 
  2400  019B                     	;# 
  2401  019C                     	;# 
  2402  019C                     	;# 
  2403  019C                     	;# 
  2404  019D                     	;# 
  2405  019D                     	;# 
  2406  019D                     	;# 
  2407  019E                     	;# 
  2408  019E                     	;# 
  2409  019E                     	;# 
  2410  019F                     	;# 
  2411  019F                     	;# 
  2412  019F                     	;# 
  2413  019F                     	;# 
  2414  019F                     	;# 
  2415  020C                     	;# 
  2416  020D                     	;# 
  2417  020E                     	;# 
  2418  0211                     	;# 
  2419  0211                     	;# 
  2420  0212                     	;# 
  2421  0212                     	;# 
  2422  0213                     	;# 
  2423  0213                     	;# 
  2424  0214                     	;# 
  2425  0214                     	;# 
  2426  0215                     	;# 
  2427  0215                     	;# 
  2428  0215                     	;# 
  2429  0215                     	;# 
  2430  0216                     	;# 
  2431  0216                     	;# 
  2432  0217                     	;# 
  2433  0217                     	;# 
  2434  028C                     	;# 
  2435  028D                     	;# 
  2436  028E                     	;# 
  2437  0291                     	;# 
  2438  0291                     	;# 
  2439  0292                     	;# 
  2440  0293                     	;# 
  2441  0294                     	;# 
  2442  0298                     	;# 
  2443  0298                     	;# 
  2444  0299                     	;# 
  2445  029A                     	;# 
  2446  029B                     	;# 
  2447  029E                     	;# 
  2448  030C                     	;# 
  2449  030D                     	;# 
  2450  030E                     	;# 
  2451  038C                     	;# 
  2452  038D                     	;# 
  2453  038E                     	;# 
  2454  0391                     	;# 
  2455  0392                     	;# 
  2456  0393                     	;# 
  2457  0394                     	;# 
  2458  0395                     	;# 
  2459  0396                     	;# 
  2460  0397                     	;# 
  2461  0398                     	;# 
  2462  0399                     	;# 
  2463  040E                     	;# 
  2464  0413                     	;# 
  2465  0413                     	;# 
  2466  0414                     	;# 
  2467  0414                     	;# 
  2468  0415                     	;# 
  2469  0416                     	;# 
  2470  0417                     	;# 
  2471  0418                     	;# 
  2472  041A                     	;# 
  2473  041A                     	;# 
  2474  041B                     	;# 
  2475  041B                     	;# 
  2476  041C                     	;# 
  2477  041D                     	;# 
  2478  041E                     	;# 
  2479  041F                     	;# 
  2480  0493                     	;# 
  2481  0494                     	;# 
  2482  0495                     	;# 
  2483  0496                     	;# 
  2484  049A                     	;# 
  2485  049B                     	;# 
  2486  049C                     	;# 
  2487  049D                     	;# 
  2488  058C                     	;# 
  2489  058C                     	;# 
  2490  058D                     	;# 
  2491  058E                     	;# 
  2492  058E                     	;# 
  2493  058F                     	;# 
  2494  0590                     	;# 
  2495  0590                     	;# 
  2496  0591                     	;# 
  2497  0592                     	;# 
  2498  0592                     	;# 
  2499  0593                     	;# 
  2500  0594                     	;# 
  2501  0594                     	;# 
  2502  0595                     	;# 
  2503  0596                     	;# 
  2504  0596                     	;# 
  2505  0597                     	;# 
  2506  0598                     	;# 
  2507  0599                     	;# 
  2508  059A                     	;# 
  2509  059B                     	;# 
  2510  059B                     	;# 
  2511  059C                     	;# 
  2512  059D                     	;# 
  2513  060C                     	;# 
  2514  060C                     	;# 
  2515  060D                     	;# 
  2516  060E                     	;# 
  2517  060F                     	;# 
  2518  060F                     	;# 
  2519  0610                     	;# 
  2520  0611                     	;# 
  2521  0612                     	;# 
  2522  0613                     	;# 
  2523  0614                     	;# 
  2524  0617                     	;# 
  2525  0617                     	;# 
  2526  0618                     	;# 
  2527  0619                     	;# 
  2528  061A                     	;# 
  2529  061A                     	;# 
  2530  061B                     	;# 
  2531  061C                     	;# 
  2532  0691                     	;# 
  2533  0692                     	;# 
  2534  0693                     	;# 
  2535  0694                     	;# 
  2536  0695                     	;# 
  2537  0696                     	;# 
  2538  0697                     	;# 
  2539  0699                     	;# 
  2540  069A                     	;# 
  2541  0711                     	;# 
  2542  0712                     	;# 
  2543  0713                     	;# 
  2544  0714                     	;# 
  2545  0715                     	;# 
  2546  0718                     	;# 
  2547  0718                     	;# 
  2548  0719                     	;# 
  2549  071A                     	;# 
  2550  071A                     	;# 
  2551  071B                     	;# 
  2552  071C                     	;# 
  2553  071D                     	;# 
  2554  0791                     	;# 
  2555  0791                     	;# 
  2556  0792                     	;# 
  2557  0793                     	;# 
  2558  0793                     	;# 
  2559  0794                     	;# 
  2560  0795                     	;# 
  2561  0795                     	;# 
  2562  0796                     	;# 
  2563  0797                     	;# 
  2564  0797                     	;# 
  2565  0798                     	;# 
  2566  0799                     	;# 
  2567  079A                     	;# 
  2568  080C                     	;# 
  2569  080C                     	;# 
  2570  080D                     	;# 
  2571  080E                     	;# 
  2572  080E                     	;# 
  2573  080F                     	;# 
  2574  0810                     	;# 
  2575  0810                     	;# 
  2576  0811                     	;# 
  2577  0812                     	;# 
  2578  0812                     	;# 
  2579  0813                     	;# 
  2580  0814                     	;# 
  2581  0815                     	;# 
  2582  0816                     	;# 
  2583  0817                     	;# 
  2584  0818                     	;# 
  2585  0819                     	;# 
  2586  081A                     	;# 
  2587  081A                     	;# 
  2588  081B                     	;# 
  2589  081C                     	;# 
  2590  081C                     	;# 
  2591  081D                     	;# 
  2592  088C                     	;# 
  2593  088D                     	;# 
  2594  088E                     	;# 
  2595  088F                     	;# 
  2596  088F                     	;# 
  2597  0890                     	;# 
  2598  0891                     	;# 
  2599  0892                     	;# 
  2600  0893                     	;# 
  2601  0893                     	;# 
  2602  0894                     	;# 
  2603  0895                     	;# 
  2604  0896                     	;# 
  2605  0897                     	;# 
  2606  0897                     	;# 
  2607  0898                     	;# 
  2608  0899                     	;# 
  2609  0D8C                     	;# 
  2610  0D8C                     	;# 
  2611  0D8D                     	;# 
  2612  0D8E                     	;# 
  2613  0D8F                     	;# 
  2614  0D8F                     	;# 
  2615  0D90                     	;# 
  2616  0D91                     	;# 
  2617  0D92                     	;# 
  2618  0D92                     	;# 
  2619  0D93                     	;# 
  2620  0D94                     	;# 
  2621  0D95                     	;# 
  2622  0D95                     	;# 
  2623  0D96                     	;# 
  2624  0D97                     	;# 
  2625  0D98                     	;# 
  2626  0D99                     	;# 
  2627  0D9A                     	;# 
  2628  0D9B                     	;# 
  2629  0D9C                     	;# 
  2630  0D9D                     	;# 
  2631  0D9E                     	;# 
  2632  0D9E                     	;# 
  2633  0D9F                     	;# 
  2634  0DA0                     	;# 
  2635  0DA1                     	;# 
  2636  0DA1                     	;# 
  2637  0DA2                     	;# 
  2638  0DA3                     	;# 
  2639  0DA4                     	;# 
  2640  0DA4                     	;# 
  2641  0DA5                     	;# 
  2642  0DA6                     	;# 
  2643  0DA7                     	;# 
  2644  0DA7                     	;# 
  2645  0DA8                     	;# 
  2646  0DA9                     	;# 
  2647  0DAA                     	;# 
  2648  0DAB                     	;# 
  2649  0DAC                     	;# 
  2650  0DAD                     	;# 
  2651  0DAE                     	;# 
  2652  0DAF                     	;# 
  2653  0E0F                     	;# 
  2654  0E10                     	;# 
  2655  0E11                     	;# 
  2656  0E12                     	;# 
  2657  0E13                     	;# 
  2658  0E14                     	;# 
  2659  0E15                     	;# 
  2660  0E16                     	;# 
  2661  0E17                     	;# 
  2662  0E18                     	;# 
  2663  0E19                     	;# 
  2664  0E1A                     	;# 
  2665  0E1B                     	;# 
  2666  0E1C                     	;# 
  2667  0E1D                     	;# 
  2668  0E1E                     	;# 
  2669  0E1F                     	;# 
  2670  0E20                     	;# 
  2671  0E21                     	;# 
  2672  0E22                     	;# 
  2673  0E23                     	;# 
  2674  0E24                     	;# 
  2675  0E25                     	;# 
  2676  0E26                     	;# 
  2677  0E27                     	;# 
  2678  0E28                     	;# 
  2679  0E29                     	;# 
  2680  0E2A                     	;# 
  2681  0E2B                     	;# 
  2682  0E2C                     	;# 
  2683  0E2D                     	;# 
  2684  0E2E                     	;# 
  2685  0E90                     	;# 
  2686  0E91                     	;# 
  2687  0E92                     	;# 
  2688  0E94                     	;# 
  2689  0E95                     	;# 
  2690  0E9C                     	;# 
  2691  0E9D                     	;# 
  2692  0E9E                     	;# 
  2693  0E9F                     	;# 
  2694  0EA0                     	;# 
  2695  0EA1                     	;# 
  2696  0EA2                     	;# 
  2697  0EA3                     	;# 
  2698  0EA4                     	;# 
  2699  0EA5                     	;# 
  2700  0EA6                     	;# 
  2701  0EA7                     	;# 
  2702  0F0F                     	;# 
  2703  0F10                     	;# 
  2704  0F11                     	;# 
  2705  0F12                     	;# 
  2706  0F13                     	;# 
  2707  0F14                     	;# 
  2708  0F15                     	;# 
  2709  0F16                     	;# 
  2710  0F17                     	;# 
  2711  0F18                     	;# 
  2712  0F19                     	;# 
  2713  0F1A                     	;# 
  2714  0F1B                     	;# 
  2715  0F1C                     	;# 
  2716  0F1D                     	;# 
  2717  0F1E                     	;# 
  2718  0F1F                     	;# 
  2719  0F20                     	;# 
  2720  0F21                     	;# 
  2721  0F22                     	;# 
  2722  0F23                     	;# 
  2723  0F24                     	;# 
  2724  0F25                     	;# 
  2725  0F26                     	;# 
  2726  0F27                     	;# 
  2727  0F28                     	;# 
  2728  0F29                     	;# 
  2729  0F2A                     	;# 
  2730  0F2B                     	;# 
  2731  0F2C                     	;# 
  2732  0F2D                     	;# 
  2733  0F2E                     	;# 
  2734  0F2F                     	;# 
  2735  0F30                     	;# 
  2736  0F31                     	;# 
  2737  0F32                     	;# 
  2738  0F33                     	;# 
  2739  0F34                     	;# 
  2740  0F35                     	;# 
  2741  0F36                     	;# 
  2742  0F37                     	;# 
  2743  0FE4                     	;# 
  2744  0FE5                     	;# 
  2745  0FE6                     	;# 
  2746  0FE7                     	;# 
  2747  0FE8                     	;# 
  2748  0FE9                     	;# 
  2749  0FEA                     	;# 
  2750  0FEB                     	;# 
  2751  0FED                     	;# 
  2752  0FEE                     	;# 
  2753  0FEF                     	;# 
  2754  0000                     	;# 
  2755  0001                     	;# 
  2756  0002                     	;# 
  2757  0003                     	;# 
  2758  0004                     	;# 
  2759  0005                     	;# 
  2760  0006                     	;# 
  2761  0007                     	;# 
  2762  0008                     	;# 
  2763  0009                     	;# 
  2764  000A                     	;# 
  2765  000B                     	;# 
  2766  000C                     	;# 
  2767  000D                     	;# 
  2768  000E                     	;# 
  2769  0010                     	;# 
  2770  0011                     	;# 
  2771  0012                     	;# 
  2772  0013                     	;# 
  2773  0014                     	;# 
  2774  0015                     	;# 
  2775  0016                     	;# 
  2776  0016                     	;# 
  2777  0017                     	;# 
  2778  0018                     	;# 
  2779  0019                     	;# 
  2780  001A                     	;# 
  2781  001A                     	;# 
  2782  001B                     	;# 
  2783  001B                     	;# 
  2784  001C                     	;# 
  2785  001D                     	;# 
  2786  001E                     	;# 
  2787  001F                     	;# 
  2788  008C                     	;# 
  2789  008D                     	;# 
  2790  008E                     	;# 
  2791  0090                     	;# 
  2792  0091                     	;# 
  2793  0092                     	;# 
  2794  0093                     	;# 
  2795  0094                     	;# 
  2796  0095                     	;# 
  2797  0096                     	;# 
  2798  0098                     	;# 
  2799  0099                     	;# 
  2800  009A                     	;# 
  2801  009B                     	;# 
  2802  009B                     	;# 
  2803  009C                     	;# 
  2804  009D                     	;# 
  2805  009E                     	;# 
  2806  009F                     	;# 
  2807  010C                     	;# 
  2808  010D                     	;# 
  2809  010E                     	;# 
  2810  0111                     	;# 
  2811  0112                     	;# 
  2812  0113                     	;# 
  2813  0114                     	;# 
  2814  0115                     	;# 
  2815  0116                     	;# 
  2816  0117                     	;# 
  2817  0118                     	;# 
  2818  0119                     	;# 
  2819  011C                     	;# 
  2820  018C                     	;# 
  2821  018D                     	;# 
  2822  018E                     	;# 
  2823  0191                     	;# 
  2824  0191                     	;# 
  2825  0192                     	;# 
  2826  0193                     	;# 
  2827  0193                     	;# 
  2828  0194                     	;# 
  2829  0195                     	;# 
  2830  0196                     	;# 
  2831  0197                     	;# 
  2832  0199                     	;# 
  2833  0199                     	;# 
  2834  0199                     	;# 
  2835  019A                     	;# 
  2836  019A                     	;# 
  2837  019A                     	;# 
  2838  019B                     	;# 
  2839  019B                     	;# 
  2840  019B                     	;# 
  2841  019B                     	;# 
  2842  019B                     	;# 
  2843  019C                     	;# 
  2844  019C                     	;# 
  2845  019C                     	;# 
  2846  019D                     	;# 
  2847  019D                     	;# 
  2848  019D                     	;# 
  2849  019E                     	;# 
  2850  019E                     	;# 
  2851  019E                     	;# 
  2852  019F                     	;# 
  2853  019F                     	;# 
  2854  019F                     	;# 
  2855  019F                     	;# 
  2856  019F                     	;# 
  2857  020C                     	;# 
  2858  020D                     	;# 
  2859  020E                     	;# 
  2860  0211                     	;# 
  2861  0211                     	;# 
  2862  0212                     	;# 
  2863  0212                     	;# 
  2864  0213                     	;# 
  2865  0213                     	;# 
  2866  0214                     	;# 
  2867  0214                     	;# 
  2868  0215                     	;# 
  2869  0215                     	;# 
  2870  0215                     	;# 
  2871  0215                     	;# 
  2872  0216                     	;# 
  2873  0216                     	;# 
  2874  0217                     	;# 
  2875  0217                     	;# 
  2876  028C                     	;# 
  2877  028D                     	;# 
  2878  028E                     	;# 
  2879  0291                     	;# 
  2880  0291                     	;# 
  2881  0292                     	;# 
  2882  0293                     	;# 
  2883  0294                     	;# 
  2884  0298                     	;# 
  2885  0298                     	;# 
  2886  0299                     	;# 
  2887  029A                     	;# 
  2888  029B                     	;# 
  2889  029E                     	;# 
  2890  030C                     	;# 
  2891  030D                     	;# 
  2892  030E                     	;# 
  2893  038C                     	;# 
  2894  038D                     	;# 
  2895  038E                     	;# 
  2896  0391                     	;# 
  2897  0392                     	;# 
  2898  0393                     	;# 
  2899  0394                     	;# 
  2900  0395                     	;# 
  2901  0396                     	;# 
  2902  0397                     	;# 
  2903  0398                     	;# 
  2904  0399                     	;# 
  2905  040E                     	;# 
  2906  0413                     	;# 
  2907  0413                     	;# 
  2908  0414                     	;# 
  2909  0414                     	;# 
  2910  0415                     	;# 
  2911  0416                     	;# 
  2912  0417                     	;# 
  2913  0418                     	;# 
  2914  041A                     	;# 
  2915  041A                     	;# 
  2916  041B                     	;# 
  2917  041B                     	;# 
  2918  041C                     	;# 
  2919  041D                     	;# 
  2920  041E                     	;# 
  2921  041F                     	;# 
  2922  0493                     	;# 
  2923  0494                     	;# 
  2924  0495                     	;# 
  2925  0496                     	;# 
  2926  049A                     	;# 
  2927  049B                     	;# 
  2928  049C                     	;# 
  2929  049D                     	;# 
  2930  058C                     	;# 
  2931  058C                     	;# 
  2932  058D                     	;# 
  2933  058E                     	;# 
  2934  058E                     	;# 
  2935  058F                     	;# 
  2936  0590                     	;# 
  2937  0590                     	;# 
  2938  0591                     	;# 
  2939  0592                     	;# 
  2940  0592                     	;# 
  2941  0593                     	;# 
  2942  0594                     	;# 
  2943  0594                     	;# 
  2944  0595                     	;# 
  2945  0596                     	;# 
  2946  0596                     	;# 
  2947  0597                     	;# 
  2948  0598                     	;# 
  2949  0599                     	;# 
  2950  059A                     	;# 
  2951  059B                     	;# 
  2952  059B                     	;# 
  2953  059C                     	;# 
  2954  059D                     	;# 
  2955  060C                     	;# 
  2956  060C                     	;# 
  2957  060D                     	;# 
  2958  060E                     	;# 
  2959  060F                     	;# 
  2960  060F                     	;# 
  2961  0610                     	;# 
  2962  0611                     	;# 
  2963  0612                     	;# 
  2964  0613                     	;# 
  2965  0614                     	;# 
  2966  0617                     	;# 
  2967  0617                     	;# 
  2968  0618                     	;# 
  2969  0619                     	;# 
  2970  061A                     	;# 
  2971  061A                     	;# 
  2972  061B                     	;# 
  2973  061C                     	;# 
  2974  0691                     	;# 
  2975  0692                     	;# 
  2976  0693                     	;# 
  2977  0694                     	;# 
  2978  0695                     	;# 
  2979  0696                     	;# 
  2980  0697                     	;# 
  2981  0699                     	;# 
  2982  069A                     	;# 
  2983  0711                     	;# 
  2984  0712                     	;# 
  2985  0713                     	;# 
  2986  0714                     	;# 
  2987  0715                     	;# 
  2988  0718                     	;# 
  2989  0718                     	;# 
  2990  0719                     	;# 
  2991  071A                     	;# 
  2992  071A                     	;# 
  2993  071B                     	;# 
  2994  071C                     	;# 
  2995  071D                     	;# 
  2996  0791                     	;# 
  2997  0791                     	;# 
  2998  0792                     	;# 
  2999  0793                     	;# 
  3000  0793                     	;# 
  3001  0794                     	;# 
  3002  0795                     	;# 
  3003  0795                     	;# 
  3004  0796                     	;# 
  3005  0797                     	;# 
  3006  0797                     	;# 
  3007  0798                     	;# 
  3008  0799                     	;# 
  3009  079A                     	;# 
  3010  080C                     	;# 
  3011  080C                     	;# 
  3012  080D                     	;# 
  3013  080E                     	;# 
  3014  080E                     	;# 
  3015  080F                     	;# 
  3016  0810                     	;# 
  3017  0810                     	;# 
  3018  0811                     	;# 
  3019  0812                     	;# 
  3020  0812                     	;# 
  3021  0813                     	;# 
  3022  0814                     	;# 
  3023  0815                     	;# 
  3024  0816                     	;# 
  3025  0817                     	;# 
  3026  0818                     	;# 
  3027  0819                     	;# 
  3028  081A                     	;# 
  3029  081A                     	;# 
  3030  081B                     	;# 
  3031  081C                     	;# 
  3032  081C                     	;# 
  3033  081D                     	;# 
  3034  088C                     	;# 
  3035  088D                     	;# 
  3036  088E                     	;# 
  3037  088F                     	;# 
  3038  088F                     	;# 
  3039  0890                     	;# 
  3040  0891                     	;# 
  3041  0892                     	;# 
  3042  0893                     	;# 
  3043  0893                     	;# 
  3044  0894                     	;# 
  3045  0895                     	;# 
  3046  0896                     	;# 
  3047  0897                     	;# 
  3048  0897                     	;# 
  3049  0898                     	;# 
  3050  0899                     	;# 
  3051  0D8C                     	;# 
  3052  0D8C                     	;# 
  3053  0D8D                     	;# 
  3054  0D8E                     	;# 
  3055  0D8F                     	;# 
  3056  0D8F                     	;# 
  3057  0D90                     	;# 
  3058  0D91                     	;# 
  3059  0D92                     	;# 
  3060  0D92                     	;# 
  3061  0D93                     	;# 
  3062  0D94                     	;# 
  3063  0D95                     	;# 
  3064  0D95                     	;# 
  3065  0D96                     	;# 
  3066  0D97                     	;# 
  3067  0D98                     	;# 
  3068  0D99                     	;# 
  3069  0D9A                     	;# 
  3070  0D9B                     	;# 
  3071  0D9C                     	;# 
  3072  0D9D                     	;# 
  3073  0D9E                     	;# 
  3074  0D9E                     	;# 
  3075  0D9F                     	;# 
  3076  0DA0                     	;# 
  3077  0DA1                     	;# 
  3078  0DA1                     	;# 
  3079  0DA2                     	;# 
  3080  0DA3                     	;# 
  3081  0DA4                     	;# 
  3082  0DA4                     	;# 
  3083  0DA5                     	;# 
  3084  0DA6                     	;# 
  3085  0DA7                     	;# 
  3086  0DA7                     	;# 
  3087  0DA8                     	;# 
  3088  0DA9                     	;# 
  3089  0DAA                     	;# 
  3090  0DAB                     	;# 
  3091  0DAC                     	;# 
  3092  0DAD                     	;# 
  3093  0DAE                     	;# 
  3094  0DAF                     	;# 
  3095  0E0F                     	;# 
  3096  0E10                     	;# 
  3097  0E11                     	;# 
  3098  0E12                     	;# 
  3099  0E13                     	;# 
  3100  0E14                     	;# 
  3101  0E15                     	;# 
  3102  0E16                     	;# 
  3103  0E17                     	;# 
  3104  0E18                     	;# 
  3105  0E19                     	;# 
  3106  0E1A                     	;# 
  3107  0E1B                     	;# 
  3108  0E1C                     	;# 
  3109  0E1D                     	;# 
  3110  0E1E                     	;# 
  3111  0E1F                     	;# 
  3112  0E20                     	;# 
  3113  0E21                     	;# 
  3114  0E22                     	;# 
  3115  0E23                     	;# 
  3116  0E24                     	;# 
  3117  0E25                     	;# 
  3118  0E26                     	;# 
  3119  0E27                     	;# 
  3120  0E28                     	;# 
  3121  0E29                     	;# 
  3122  0E2A                     	;# 
  3123  0E2B                     	;# 
  3124  0E2C                     	;# 
  3125  0E2D                     	;# 
  3126  0E2E                     	;# 
  3127  0E90                     	;# 
  3128  0E91                     	;# 
  3129  0E92                     	;# 
  3130  0E94                     	;# 
  3131  0E95                     	;# 
  3132  0E9C                     	;# 
  3133  0E9D                     	;# 
  3134  0E9E                     	;# 
  3135  0E9F                     	;# 
  3136  0EA0                     	;# 
  3137  0EA1                     	;# 
  3138  0EA2                     	;# 
  3139  0EA3                     	;# 
  3140  0EA4                     	;# 
  3141  0EA5                     	;# 
  3142  0EA6                     	;# 
  3143  0EA7                     	;# 
  3144  0F0F                     	;# 
  3145  0F10                     	;# 
  3146  0F11                     	;# 
  3147  0F12                     	;# 
  3148  0F13                     	;# 
  3149  0F14                     	;# 
  3150  0F15                     	;# 
  3151  0F16                     	;# 
  3152  0F17                     	;# 
  3153  0F18                     	;# 
  3154  0F19                     	;# 
  3155  0F1A                     	;# 
  3156  0F1B                     	;# 
  3157  0F1C                     	;# 
  3158  0F1D                     	;# 
  3159  0F1E                     	;# 
  3160  0F1F                     	;# 
  3161  0F20                     	;# 
  3162  0F21                     	;# 
  3163  0F22                     	;# 
  3164  0F23                     	;# 
  3165  0F24                     	;# 
  3166  0F25                     	;# 
  3167  0F26                     	;# 
  3168  0F27                     	;# 
  3169  0F28                     	;# 
  3170  0F29                     	;# 
  3171  0F2A                     	;# 
  3172  0F2B                     	;# 
  3173  0F2C                     	;# 
  3174  0F2D                     	;# 
  3175  0F2E                     	;# 
  3176  0F2F                     	;# 
  3177  0F30                     	;# 
  3178  0F31                     	;# 
  3179  0F32                     	;# 
  3180  0F33                     	;# 
  3181  0F34                     	;# 
  3182  0F35                     	;# 
  3183  0F36                     	;# 
  3184  0F37                     	;# 
  3185  0FE4                     	;# 
  3186  0FE5                     	;# 
  3187  0FE6                     	;# 
  3188  0FE7                     	;# 
  3189  0FE8                     	;# 
  3190  0FE9                     	;# 
  3191  0FEA                     	;# 
  3192  0FEB                     	;# 
  3193  0FED                     	;# 
  3194  0FEE                     	;# 
  3195  0FEF                     	;# 
  3196                           
  3197 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  3198  0000                     
  3199 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  3200  0000                     
  3201 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  3202  0000                     
  3203                           	psect	idataBANK2
  3204  0B6E                     __pidataBANK2:	
  3205                           
  3206                           ;initializer for _hrDisp
  3207  0B6E  3448               	retlw	72
  3208  0B6F  3465               	retlw	101
  3209  0B70  3461               	retlw	97
  3210  0B71  3472               	retlw	114
  3211  0B72  3474               	retlw	116
  3212  0B73  3420               	retlw	32
  3213  0B74  3452               	retlw	82
  3214  0B75  3461               	retlw	97
  3215  0B76  3474               	retlw	116
  3216  0B77  3465               	retlw	101
  3217  0B78  343A               	retlw	58
  3218  0B79  3420               	retlw	32
  3219  0B7A  3400               	retlw	0
  3220                           
  3221                           ;initializer for _distanceDisp
  3222  0B7B  3444               	retlw	68
  3223  0B7C  3469               	retlw	105
  3224  0B7D  3473               	retlw	115
  3225  0B7E  3474               	retlw	116
  3226  0B7F  3461               	retlw	97
  3227  0B80  346E               	retlw	110
  3228  0B81  3463               	retlw	99
  3229  0B82  3465               	retlw	101
  3230  0B83  343A               	retlw	58
  3231  0B84  3420               	retlw	32
  3232  0B85  3400               	retlw	0
  3233                           
  3234                           ;initializer for _speedDisp
  3235  0B86  3453               	retlw	83
  3236  0B87  3470               	retlw	112
  3237  0B88  3465               	retlw	101
  3238  0B89  3465               	retlw	101
  3239  0B8A  3464               	retlw	100
  3240  0B8B  343A               	retlw	58
  3241  0B8C  3420               	retlw	32
  3242  0B8D  3400               	retlw	0
  3243                           
  3244                           	psect	nvBANK0
  3245  0053                     __pnvBANK0:	
  3246  0053                     _TMR0_InterruptHandler:	
  3247  0053                     	ds	2
  3248  0055                     _IOCCF7_InterruptHandler:	
  3249  0055                     	ds	2
  3250  0057                     _EUSART_OverrunErrorHandler:	
  3251  0057                     	ds	2
  3252  0059                     _EUSART_FramingErrorHandler:	
  3253  0059                     	ds	2
  3254  005B                     _timer0ReloadVal:	
  3255  005B                     	ds	1
  3256                           
  3257                           	psect	nvBANK2
  3258  016E                     __pnvBANK2:	
  3259  016E                     _EUSART_ErrorHandler:	
  3260  016E                     	ds	2
  3261  0015                     _TMR0	set	21
  3262  000B                     _INTCONbits	set	11
  3263  0010                     _PIR1bits	set	16
  3264  0095                     _OPTION_REG	set	149
  3265  0095                     _OPTION_REGbits	set	149
  3266  008E                     _TRISC	set	142
  3267  008D                     _TRISB	set	141
  3268  008C                     _TRISA	set	140
  3269  0098                     _OSCTUNE	set	152
  3270  0099                     _OSCCON	set	153
  3271  010E                     _LATC	set	270
  3272  010D                     _LATB	set	269
  3273  010C                     _LATA	set	268
  3274  0116                     _BORCON	set	278
  3275  018C                     _ANSELA	set	396
  3276  018D                     _ANSELB	set	397
  3277  018E                     _ANSELC	set	398
  3278  019A                     _TX1REG	set	410
  3279  0199                     _RC1REG	set	409
  3280  019D                     _RC1STAbits	set	413
  3281  019E                     _TX1STAbits	set	414
  3282  019C                     _SPBRGH	set	412
  3283  019B                     _SPBRGL	set	411
  3284  019E                     _TX1STA	set	414
  3285  019D                     _RC1STA	set	413
  3286  019F                     _BAUD1CON	set	415
  3287  020E                     _WPUC	set	526
  3288  020C                     _WPUA	set	524
  3289  020D                     _WPUB	set	525
  3290  028E                     _ODCONC	set	654
  3291  028D                     _ODCONB	set	653
  3292  028C                     _ODCONA	set	652
  3293  030E                     _SLRCONC	set	782
  3294  030D                     _SLRCONB	set	781
  3295  030C                     _SLRCONA	set	780
  3296  0397                     _IOCCPbits	set	919
  3297  0398                     _IOCCNbits	set	920
  3298  0399                     _IOCCFbits	set	921
  3299  0E9F                     _RB7PPS	set	3743
  3300                           
  3301                           	psect	stringtext1
  3302  1000                     __pstringtext1:	
  3303  1000                     STR_1:	
  3304  1000  3420               	retlw	32	;' '
  3305  1001  3420               	retlw	32	;' '
  3306  1002  3420               	retlw	32	;' '
  3307  1003  3425               	retlw	37	;'%'
  3308  1004  3464               	retlw	100	;'d'
  3309  1005  3420               	retlw	32	;' '
  3310  1006  346B               	retlw	107	;'k'
  3311  1007  346D               	retlw	109	;'m'
  3312  1008  3468               	retlw	104	;'h'
  3313  1009  3420               	retlw	32	;' '
  3314  100A  3420               	retlw	32	;' '
  3315  100B  3420               	retlw	32	;' '
  3316  100C  3420               	retlw	32	;' '
  3317  100D  3400               	retlw	0
  3318                           
  3319                           	psect	stringtext2
  3320  100E                     __pstringtext2:	
  3321  100E                     STR_2:	
  3322  100E  3420               	retlw	32	;' '
  3323  100F  3420               	retlw	32	;' '
  3324  1010  3420               	retlw	32	;' '
  3325  1011  3425               	retlw	37	;'%'
  3326  1012  3464               	retlw	100	;'d'
  3327  1013  3420               	retlw	32	;' '
  3328  1014  346D               	retlw	109	;'m'
  3329  1015  3420               	retlw	32	;' '
  3330  1016  3420               	retlw	32	;' '
  3331  1017  3400               	retlw	0
  3332                           
  3333                           	psect	stringtext3
  3334  1018                     __pstringtext3:	
  3335  1018                     STR_3:	
  3336  1018  347C               	retlw	124	;'|'
  3337  1019  342D               	retlw	45	;'-'
  3338  101A  3400               	retlw	0
  3339                           
  3340                           	psect	stringtext4
  3341  0000                     __pstringtext4:	
  3342                           
  3343                           ; #config settings
  3344  0000                     
  3345                           	psect	cinit
  3346  0016                     start_initialization:	
  3347  0016                     __initialization:	
  3348                           
  3349                           ; Initialize objects allocated to BANK2
  3350  0016  306E               	movlw	low __pidataBANK2
  3351  0017  0084               	movwf	4
  3352  0018  308B               	movlw	(high __pidataBANK2)| (0+128)
  3353  0019  0085               	movwf	5
  3354  001A  3040               	movlw	low __pdataBANK2
  3355  001B  0086               	movwf	6
  3356  001C  3001               	movlw	high __pdataBANK2
  3357  001D  0087               	movwf	7
  3358  001E  3020               	movlw	32
  3359  001F  318A  2244  3180   	fcall	init_ram
  3360                           
  3361                           ; Clear objects allocated to BANK0
  3362  0022  303E               	movlw	low __pbssBANK0
  3363  0023  0084               	movwf	4
  3364  0024  3000               	movlw	high __pbssBANK0
  3365  0025  0085               	movwf	5
  3366  0026  3015               	movlw	21
  3367  0027  318A  223E  3180   	fcall	clear_ram0
  3368                           
  3369                           ; Clear objects allocated to BANK1
  3370  002A  0021               	movlb	1	; select bank1
  3371  002B  01EC               	clrf	__pbssBANK1& (0+127)
  3372  002C  01ED               	clrf	(__pbssBANK1+1)& (0+127)
  3373  002D  01EE               	clrf	(__pbssBANK1+2)& (0+127)
  3374  002E  01EF               	clrf	(__pbssBANK1+3)& (0+127)
  3375                           
  3376                           ; Clear objects allocated to BANK2
  3377  002F  3020               	movlw	low __pbssBANK2
  3378  0030  0084               	movwf	4
  3379  0031  3001               	movlw	high __pbssBANK2
  3380  0032  0085               	movwf	5
  3381  0033  3020               	movlw	32
  3382  0034  318A  223E         	fcall	clear_ram0
  3383  0036                     end_of_initialization:	
  3384                           ;End of C runtime variable initialization code
  3385                           
  3386  0036                     __end_of__initialization:	
  3387  0036  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3388  0037  0020               	movlb	0
  3389  0038  318C  2CEF         	ljmp	_main	;jump to C main() function
  3390                           
  3391                           	psect	bssBANK0
  3392  003E                     __pbssBANK0:	
  3393  003E                     _distance:	
  3394  003E                     	ds	4
  3395  0042                     _speed:	
  3396  0042                     	ds	4
  3397  0046                     _counter:	
  3398  0046                     	ds	4
  3399  004A                     _nout:	
  3400  004A                     	ds	2
  3401  004C                     _width:	
  3402  004C                     	ds	2
  3403  004E                     _eusartRxLastError:	
  3404  004E                     	ds	1
  3405  004F                     _rpm:	
  3406  004F                     	ds	4
  3407                           
  3408                           	psect	bssBANK1
  3409  00EC                     __pbssBANK1:	
  3410  00EC                     _prec:	
  3411  00EC                     	ds	2
  3412  00EE                     _flags:	
  3413  00EE                     	ds	2
  3414                           
  3415                           	psect	bssBANK2
  3416  0120                     __pbssBANK2:	
  3417  0120                     _dbuf:	
  3418  0120                     	ds	32
  3419                           
  3420                           	psect	dataBANK2
  3421  0140                     __pdataBANK2:	
  3422  0140                     _hrDisp:	
  3423  0140                     	ds	13
  3424  014D                     _distanceDisp:	
  3425  014D                     	ds	11
  3426  0158                     _speedDisp:	
  3427  0158                     	ds	8
  3428                           
  3429                           	psect	inittext
  3430  0A44                     init_ram:	
  3431  0A44  00FE               	movwf	126
  3432  0A45                     initloop:	
  3433  0A45  0012               	moviw fsr0++
  3434  0A46  001E               	movwi fsr1++
  3435  0A47  0BFE               	decfsz	126,f
  3436  0A48  2A45               	goto	initloop
  3437  0A49  3400               	retlw	0
  3438                           
  3439                           	psect	clrtext
  3440  0A3E                     clear_ram0:	
  3441                           ;	Called with FSR0 containing the base address, and
  3442                           ;	WREG with the size to clear
  3443                           
  3444  0A3E  0064               	clrwdt	;clear the watchdog before getting into this loop
  3445  0A3F                     clrloop0:	
  3446  0A3F  0180               	clrf	0	;clear RAM location pointed to by FSR
  3447  0A40  3101               	addfsr 0,1
  3448  0A41  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3449  0A42  2A3F               	goto	clrloop0	;have we reached the end yet?
  3450  0A43  3400               	retlw	0	;all done for this memory range, return
  3451                           
  3452                           	psect	cstackBANK3
  3453  01A0                     __pcstackBANK3:	
  3454  01A0                     ??_printf:	
  3455                           
  3456                           ; 1 bytes @ 0x0
  3457  01A0                     	ds	3
  3458  01A3                     printf@ap:	
  3459                           
  3460                           ; 1 bytes @ 0x3
  3461  01A3                     	ds	1
  3462  01A4                     ??_main:	
  3463                           
  3464                           ; 1 bytes @ 0x4
  3465  01A4                     	ds	1
  3466                           
  3467                           	psect	cstackBANK2
  3468  0160                     __pcstackBANK2:	
  3469  0160                     ?_vfprintf:	
  3470  0160                     vfprintf@fmt:	
  3471                           ; 2 bytes @ 0x0
  3472                           
  3473                           
  3474                           ; 2 bytes @ 0x0
  3475  0160                     	ds	2
  3476  0162                     vfprintf@ap:	
  3477                           
  3478                           ; 1 bytes @ 0x2
  3479  0162                     	ds	1
  3480  0163                     ??_vfprintf:	
  3481                           
  3482                           ; 1 bytes @ 0x3
  3483  0163                     	ds	2
  3484  0165                     vfprintf@fp:	
  3485                           
  3486                           ; 1 bytes @ 0x5
  3487  0165                     	ds	1
  3488  0166                     vfprintf@cfmt:	
  3489                           
  3490                           ; 2 bytes @ 0x6
  3491  0166                     	ds	2
  3492  0168                     ?_printf:	
  3493  0168                     printf@fmt:	
  3494                           ; 2 bytes @ 0x8
  3495                           
  3496                           
  3497                           ; 2 bytes @ 0x8
  3498  0168                     	ds	6
  3499                           
  3500                           	psect	cstackBANK1
  3501  00A0                     __pcstackBANK1:	
  3502  00A0                     ?_EUSART_SetFramingErrorHandler:	
  3503  00A0                     ?_EUSART_SetOverrunErrorHandler:	
  3504                           ; 1 bytes @ 0x0
  3505                           
  3506  00A0                     ?_EUSART_SetErrorHandler:	
  3507                           ; 1 bytes @ 0x0
  3508                           
  3509  00A0                     ??_OSCILLATOR_Initialize:	
  3510                           ; 1 bytes @ 0x0
  3511                           
  3512  00A0                     ?_IOCCF7_SetInterruptHandler:	
  3513                           ; 1 bytes @ 0x0
  3514                           
  3515  00A0                     ?_TMR0_SetInterruptHandler:	
  3516                           ; 1 bytes @ 0x0
  3517                           
  3518  00A0                     ??_EUSART_is_tx_ready:	
  3519                           ; 1 bytes @ 0x0
  3520                           
  3521  00A0                     ??_EUSART_Write:	
  3522                           ; 1 bytes @ 0x0
  3523                           
  3524  00A0                     ?_strlen:	
  3525                           ; 1 bytes @ 0x0
  3526                           
  3527  00A0                     ?___aodiv:	
  3528                           ; 2 bytes @ 0x0
  3529                           
  3530  00A0                     ?___aomod:	
  3531                           ; 8 bytes @ 0x0
  3532                           
  3533  00A0                     _EUSART_is_tx_ready$167:	
  3534                           ; 8 bytes @ 0x0
  3535                           
  3536  00A0                     EUSART_Write@txData:	
  3537                           ; 1 bytes @ 0x0
  3538                           
  3539  00A0                     EUSART_SetFramingErrorHandler@interruptHandler:	
  3540                           ; 1 bytes @ 0x0
  3541                           
  3542  00A0                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  3543                           ; 2 bytes @ 0x0
  3544                           
  3545  00A0                     EUSART_SetErrorHandler@interruptHandler:	
  3546                           ; 2 bytes @ 0x0
  3547                           
  3548  00A0                     IOCCF7_SetInterruptHandler@InterruptHandler:	
  3549                           ; 2 bytes @ 0x0
  3550                           
  3551  00A0                     TMR0_SetInterruptHandler@InterruptHandler:	
  3552                           ; 2 bytes @ 0x0
  3553                           
  3554  00A0                     ___aodiv@divisor:	
  3555                           ; 2 bytes @ 0x0
  3556                           
  3557  00A0                     ___aomod@divisor:	
  3558                           ; 8 bytes @ 0x0
  3559                           
  3560                           
  3561                           ; 8 bytes @ 0x0
  3562  00A0                     	ds	1
  3563  00A1                     ?_setCursor:	
  3564  00A1                     ??_putch:	
  3565                           ; 1 bytes @ 0x1
  3566                           
  3567  00A1                     putch@txData:	
  3568                           ; 1 bytes @ 0x1
  3569                           
  3570  00A1                     setCursor@b:	
  3571                           ; 1 bytes @ 0x1
  3572                           
  3573                           
  3574                           ; 1 bytes @ 0x1
  3575  00A1                     	ds	1
  3576  00A2                     ??_EUSART_SetFramingErrorHandler:	
  3577  00A2                     ??_EUSART_SetOverrunErrorHandler:	
  3578                           ; 1 bytes @ 0x2
  3579                           
  3580  00A2                     ??_EUSART_SetErrorHandler:	
  3581                           ; 1 bytes @ 0x2
  3582                           
  3583  00A2                     ??_PIN_MANAGER_Initialize:	
  3584                           ; 1 bytes @ 0x2
  3585                           
  3586  00A2                     ??_TMR0_Initialize:	
  3587                           ; 1 bytes @ 0x2
  3588                           
  3589  00A2                     ??_IOCCF7_SetInterruptHandler:	
  3590                           ; 1 bytes @ 0x2
  3591                           
  3592  00A2                     ??_TMR0_SetInterruptHandler:	
  3593                           ; 1 bytes @ 0x2
  3594                           
  3595  00A2                     ??_setCursor:	
  3596                           ; 1 bytes @ 0x2
  3597                           
  3598  00A2                     ??_strlen:	
  3599                           ; 1 bytes @ 0x2
  3600                           
  3601  00A2                     ??_EUSART_Initialize:	
  3602                           ; 1 bytes @ 0x2
  3603                           
  3604  00A2                     ?_fputc:	
  3605                           ; 1 bytes @ 0x2
  3606                           
  3607  00A2                     fputc@c:	
  3608                           ; 2 bytes @ 0x2
  3609                           
  3610                           
  3611                           ; 2 bytes @ 0x2
  3612  00A2                     	ds	1
  3613  00A3                     ??_SYSTEM_Initialize:	
  3614  00A3                     strlen@a:	
  3615                           ; 1 bytes @ 0x3
  3616                           
  3617                           
  3618                           ; 1 bytes @ 0x3
  3619  00A3                     	ds	1
  3620  00A4                     setCursor@a:	
  3621  00A4                     fputc@fp:	
  3622                           ; 1 bytes @ 0x4
  3623                           
  3624  00A4                     strlen@s:	
  3625                           ; 1 bytes @ 0x4
  3626                           
  3627                           
  3628                           ; 1 bytes @ 0x4
  3629  00A4                     	ds	1
  3630  00A5                     ??_fputc:	
  3631                           
  3632                           ; 1 bytes @ 0x5
  3633  00A5                     	ds	3
  3634  00A8                     ___aodiv@dividend:	
  3635  00A8                     ___aomod@dividend:	
  3636                           ; 8 bytes @ 0x8
  3637                           
  3638                           
  3639                           ; 8 bytes @ 0x8
  3640  00A8                     	ds	2
  3641  00AA                     ?_fputs:	
  3642  00AA                     fputs@s:	
  3643                           ; 2 bytes @ 0xA
  3644                           
  3645                           
  3646                           ; 2 bytes @ 0xA
  3647  00AA                     	ds	2
  3648  00AC                     fputs@fp:	
  3649                           
  3650                           ; 1 bytes @ 0xC
  3651  00AC                     	ds	1
  3652  00AD                     ??_fputs:	
  3653                           
  3654                           ; 1 bytes @ 0xD
  3655  00AD                     	ds	3
  3656  00B0                     ??___aodiv:	
  3657  00B0                     ??___aomod:	
  3658                           ; 1 bytes @ 0x10
  3659                           
  3660  00B0                     fputs@c:	
  3661                           ; 1 bytes @ 0x10
  3662                           
  3663                           
  3664                           ; 1 bytes @ 0x10
  3665  00B0                     	ds	1
  3666  00B1                     ___aodiv@counter:	
  3667  00B1                     ___aomod@counter:	
  3668                           ; 1 bytes @ 0x11
  3669                           
  3670  00B1                     fputs@i:	
  3671                           ; 1 bytes @ 0x11
  3672                           
  3673                           
  3674                           ; 2 bytes @ 0x11
  3675  00B1                     	ds	1
  3676  00B2                     ___aodiv@sign:	
  3677  00B2                     ___aomod@sign:	
  3678                           ; 1 bytes @ 0x12
  3679                           
  3680                           
  3681                           ; 1 bytes @ 0x12
  3682  00B2                     	ds	1
  3683  00B3                     ?_puts:	
  3684  00B3                     ?_abs:	
  3685                           ; 2 bytes @ 0x13
  3686                           
  3687  00B3                     ?_pad:	
  3688                           ; 2 bytes @ 0x13
  3689                           
  3690  00B3                     pad@buf:	
  3691                           ; 2 bytes @ 0x13
  3692                           
  3693  00B3                     abs@a:	
  3694                           ; 1 bytes @ 0x13
  3695                           
  3696  00B3                     puts@s:	
  3697                           ; 2 bytes @ 0x13
  3698                           
  3699  00B3                     ___aodiv@quotient:	
  3700                           ; 2 bytes @ 0x13
  3701                           
  3702                           
  3703                           ; 8 bytes @ 0x13
  3704  00B3                     	ds	1
  3705  00B4                     pad@p:	
  3706                           
  3707                           ; 2 bytes @ 0x14
  3708  00B4                     	ds	1
  3709  00B5                     ??_puts:	
  3710  00B5                     ??_abs:	
  3711                           ; 1 bytes @ 0x15
  3712                           
  3713                           
  3714                           ; 1 bytes @ 0x15
  3715  00B5                     	ds	1
  3716  00B6                     ??_pad:	
  3717                           
  3718                           ; 1 bytes @ 0x16
  3719  00B6                     	ds	1
  3720  00B7                     _puts$1032:	
  3721  00B7                     pad@i:	
  3722                           ; 1 bytes @ 0x17
  3723                           
  3724                           
  3725                           ; 2 bytes @ 0x17
  3726  00B7                     	ds	1
  3727  00B8                     ??_resetCursor:	
  3728  00B8                     ??_writeString:	
  3729                           ; 1 bytes @ 0x18
  3730                           
  3731  00B8                     writeString@string:	
  3732                           ; 1 bytes @ 0x18
  3733                           
  3734                           
  3735                           ; 1 bytes @ 0x18
  3736  00B8                     	ds	1
  3737  00B9                     pad@w:	
  3738                           
  3739                           ; 2 bytes @ 0x19
  3740  00B9                     	ds	2
  3741  00BB                     pad@fp:	
  3742                           
  3743                           ; 1 bytes @ 0x1B
  3744  00BB                     	ds	1
  3745  00BC                     ?_dtoa:	
  3746  00BC                     dtoa@d:	
  3747                           ; 2 bytes @ 0x1C
  3748                           
  3749                           
  3750                           ; 8 bytes @ 0x1C
  3751  00BC                     	ds	8
  3752  00C4                     ??_dtoa:	
  3753                           
  3754                           ; 1 bytes @ 0x24
  3755  00C4                     	ds	3
  3756  00C7                     _dtoa$686:	
  3757                           
  3758                           ; 2 bytes @ 0x27
  3759  00C7                     	ds	2
  3760  00C9                     dtoa@fp:	
  3761                           
  3762                           ; 1 bytes @ 0x29
  3763  00C9                     	ds	1
  3764  00CA                     dtoa@p:	
  3765                           
  3766                           ; 2 bytes @ 0x2A
  3767  00CA                     	ds	2
  3768  00CC                     dtoa@w:	
  3769                           
  3770                           ; 2 bytes @ 0x2C
  3771  00CC                     	ds	2
  3772  00CE                     dtoa@s:	
  3773                           
  3774                           ; 2 bytes @ 0x2E
  3775  00CE                     	ds	2
  3776  00D0                     dtoa@n:	
  3777                           
  3778                           ; 8 bytes @ 0x30
  3779  00D0                     	ds	8
  3780  00D8                     dtoa@i:	
  3781                           
  3782                           ; 2 bytes @ 0x38
  3783  00D8                     	ds	2
  3784  00DA                     ?_vfpfcnvrt:	
  3785  00DA                     vfpfcnvrt@fmt:	
  3786                           ; 2 bytes @ 0x3A
  3787                           
  3788                           
  3789                           ; 1 bytes @ 0x3A
  3790  00DA                     	ds	1
  3791  00DB                     vfpfcnvrt@ap:	
  3792                           
  3793                           ; 1 bytes @ 0x3B
  3794  00DB                     	ds	1
  3795  00DC                     ??_vfpfcnvrt:	
  3796                           
  3797                           ; 1 bytes @ 0x3C
  3798  00DC                     	ds	5
  3799  00E1                     vfpfcnvrt@ll:	
  3800                           
  3801                           ; 8 bytes @ 0x41
  3802  00E1                     	ds	8
  3803  00E9                     vfpfcnvrt@vp:	
  3804                           
  3805                           ; 2 bytes @ 0x49
  3806  00E9                     	ds	2
  3807  00EB                     vfpfcnvrt@fp:	
  3808                           
  3809                           ; 1 bytes @ 0x4B
  3810  00EB                     	ds	1
  3811                           
  3812                           	psect	cstackCOMMON
  3813  0070                     __pcstackCOMMON:	
  3814  0070                     ?_PIN_MANAGER_Initialize:	
  3815  0070                     ?_OSCILLATOR_Initialize:	
  3816                           ; 1 bytes @ 0x0
  3817                           
  3818  0070                     ?_TMR0_Initialize:	
  3819                           ; 1 bytes @ 0x0
  3820                           
  3821  0070                     ?_IOCCF7_DefaultInterruptHandler:	
  3822                           ; 1 bytes @ 0x0
  3823                           
  3824  0070                     ??_IOCCF7_DefaultInterruptHandler:	
  3825                           ; 1 bytes @ 0x0
  3826                           
  3827  0070                     ?_IOCCF7_ISR:	
  3828                           ; 1 bytes @ 0x0
  3829                           
  3830  0070                     ?_TMR0_DefaultInterruptHandler:	
  3831                           ; 1 bytes @ 0x0
  3832                           
  3833  0070                     ??_TMR0_DefaultInterruptHandler:	
  3834                           ; 1 bytes @ 0x0
  3835                           
  3836  0070                     ?_timerISR:	
  3837                           ; 1 bytes @ 0x0
  3838                           
  3839  0070                     ??_timerISR:	
  3840                           ; 1 bytes @ 0x0
  3841                           
  3842  0070                     ?_speedCalc:	
  3843                           ; 1 bytes @ 0x0
  3844                           
  3845  0070                     ?_resetCursor:	
  3846                           ; 1 bytes @ 0x0
  3847                           
  3848  0070                     ?_writeString:	
  3849                           ; 1 bytes @ 0x0
  3850                           
  3851  0070                     ?_EUSART_Initialize:	
  3852                           ; 1 bytes @ 0x0
  3853                           
  3854  0070                     ?_EUSART_is_tx_ready:	
  3855                           ; 1 bytes @ 0x0
  3856                           
  3857  0070                     ?_EUSART_Write:	
  3858                           ; 1 bytes @ 0x0
  3859                           
  3860  0070                     ?_putch:	
  3861                           ; 1 bytes @ 0x0
  3862                           
  3863  0070                     ?_SYSTEM_Initialize:	
  3864                           ; 1 bytes @ 0x0
  3865                           
  3866  0070                     ?_PIN_MANAGER_IOC:	
  3867                           ; 1 bytes @ 0x0
  3868                           
  3869  0070                     ?_TMR0_ISR:	
  3870                           ; 1 bytes @ 0x0
  3871                           
  3872  0070                     ??_TMR0_ISR:	
  3873                           ; 1 bytes @ 0x0
  3874                           
  3875  0070                     ?_INTERRUPT_InterruptManager:	
  3876                           ; 1 bytes @ 0x0
  3877                           
  3878  0070                     ?_main:	
  3879                           ; 1 bytes @ 0x0
  3880                           
  3881  0070                     ?__Umul8_16:	
  3882                           ; 1 bytes @ 0x0
  3883                           
  3884  0070                     ?___aldiv:	
  3885                           ; 2 bytes @ 0x0
  3886                           
  3887  0070                     ?___fladd:	
  3888                           ; 4 bytes @ 0x0
  3889                           
  3890  0070                     ?___xxtofl:	
  3891                           ; 4 bytes @ 0x0
  3892                           
  3893  0070                     __Umul8_16@multiplicand:	
  3894                           ; 4 bytes @ 0x0
  3895                           
  3896  0070                     ___aldiv@divisor:	
  3897                           ; 1 bytes @ 0x0
  3898                           
  3899  0070                     ___fladd@b:	
  3900                           ; 4 bytes @ 0x0
  3901                           
  3902  0070                     ___xxtofl@val:	
  3903                           ; 4 bytes @ 0x0
  3904                           
  3905                           
  3906                           ; 4 bytes @ 0x0
  3907  0070                     	ds	2
  3908  0072                     ??__Umul8_16:	
  3909                           
  3910                           ; 1 bytes @ 0x2
  3911  0072                     	ds	2
  3912  0074                     ??___xxtofl:	
  3913  0074                     __Umul8_16@product:	
  3914                           ; 1 bytes @ 0x4
  3915                           
  3916  0074                     ___aldiv@dividend:	
  3917                           ; 2 bytes @ 0x4
  3918                           
  3919  0074                     ___fladd@a:	
  3920                           ; 4 bytes @ 0x4
  3921                           
  3922                           
  3923                           ; 4 bytes @ 0x4
  3924  0074                     	ds	2
  3925  0076                     __Umul8_16@word_mpld:	
  3926                           
  3927                           ; 2 bytes @ 0x6
  3928  0076                     	ds	2
  3929  0078                     ??___aldiv:	
  3930  0078                     ___fladd@signs:	
  3931                           ; 1 bytes @ 0x8
  3932                           
  3933  0078                     ___xxtofl@sign:	
  3934                           ; 1 bytes @ 0x8
  3935                           
  3936  0078                     __Umul8_16@multiplier:	
  3937                           ; 1 bytes @ 0x8
  3938                           
  3939                           
  3940                           ; 1 bytes @ 0x8
  3941  0078                     	ds	1
  3942  0079                     ??___lmul:	
  3943  0079                     ___fladd@aexp:	
  3944                           ; 1 bytes @ 0x9
  3945                           
  3946  0079                     ___xxtofl@exp:	
  3947                           ; 1 bytes @ 0x9
  3948                           
  3949  0079                     ___lmul@product:	
  3950                           ; 1 bytes @ 0x9
  3951                           
  3952                           
  3953                           ; 4 bytes @ 0x9
  3954  0079                     	ds	1
  3955  007A                     ___fladd@bexp:	
  3956  007A                     ___xxtofl@arg:	
  3957                           ; 1 bytes @ 0xA
  3958                           
  3959                           
  3960                           ; 4 bytes @ 0xA
  3961  007A                     	ds	1
  3962  007B                     ___fladd@grs:	
  3963                           
  3964                           ; 1 bytes @ 0xB
  3965  007B                     	ds	3
  3966  007E                     ??_IOCCF7_ISR:	
  3967  007E                     ??_speedCalc:	
  3968                           ; 1 bytes @ 0xE
  3969                           
  3970  007E                     ??_PIN_MANAGER_IOC:	
  3971                           ; 1 bytes @ 0xE
  3972                           
  3973  007E                     ??_INTERRUPT_InterruptManager:	
  3974                           ; 1 bytes @ 0xE
  3975                           
  3976                           
  3977                           	psect	cstackBANK0
  3978  0020                     __pcstackBANK0:	
  3979                           ; 1 bytes @ 0xE
  3980                           
  3981  0020                     ??___fladd:	
  3982  0020                     ?___flmul:	
  3983                           ; 1 bytes @ 0x0
  3984                           
  3985  0020                     ___aldiv@counter:	
  3986                           ; 4 bytes @ 0x0
  3987                           
  3988  0020                     ___flmul@b:	
  3989                           ; 1 bytes @ 0x0
  3990                           
  3991                           
  3992                           ; 4 bytes @ 0x0
  3993  0020                     	ds	1
  3994  0021                     ___aldiv@sign:	
  3995                           
  3996                           ; 1 bytes @ 0x1
  3997  0021                     	ds	1
  3998  0022                     ___aldiv@quotient:	
  3999                           
  4000                           ; 4 bytes @ 0x2
  4001  0022                     	ds	2
  4002  0024                     ___flmul@a:	
  4003                           
  4004                           ; 4 bytes @ 0x4
  4005  0024                     	ds	2
  4006  0026                     ?___lmul:	
  4007  0026                     ___lmul@multiplier:	
  4008                           ; 4 bytes @ 0x6
  4009                           
  4010                           
  4011                           ; 4 bytes @ 0x6
  4012  0026                     	ds	2
  4013  0028                     ??___flmul:	
  4014                           
  4015                           ; 1 bytes @ 0x8
  4016  0028                     	ds	2
  4017  002A                     ___lmul@multiplicand:	
  4018                           
  4019                           ; 4 bytes @ 0xA
  4020  002A                     	ds	3
  4021  002D                     ___flmul@sign:	
  4022                           
  4023                           ; 1 bytes @ 0xD
  4024  002D                     	ds	1
  4025  002E                     ___flmul@grs:	
  4026                           
  4027                           ; 4 bytes @ 0xE
  4028  002E                     	ds	4
  4029  0032                     ___flmul@aexp:	
  4030                           
  4031                           ; 1 bytes @ 0x12
  4032  0032                     	ds	1
  4033  0033                     ___flmul@bexp:	
  4034                           
  4035                           ; 1 bytes @ 0x13
  4036  0033                     	ds	1
  4037  0034                     ___flmul@prod:	
  4038                           
  4039                           ; 4 bytes @ 0x14
  4040  0034                     	ds	4
  4041  0038                     ___flmul@temp:	
  4042                           
  4043                           ; 2 bytes @ 0x18
  4044  0038                     	ds	2
  4045  003A                     _speedCalc$1213:	
  4046                           
  4047                           ; 4 bytes @ 0x1A
  4048  003A                     	ds	4
  4049                           
  4050                           	psect	maintext
  4051  0CEF                     __pmaintext:	
  4052 ;;
  4053 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  4054 ;;
  4055 ;; *************** function _main *****************
  4056 ;; Defined at:
  4057 ;;		line 35 in file "main.c"
  4058 ;; Parameters:    Size  Location     Type
  4059 ;;		None
  4060 ;; Auto vars:     Size  Location     Type
  4061 ;;		None
  4062 ;; Return value:  Size  Location     Type
  4063 ;;                  1    wreg      void 
  4064 ;; Registers used:
  4065 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4066 ;; Tracked objects:
  4067 ;;		On entry : B1F/0
  4068 ;;		On exit  : 0/0
  4069 ;;		Unchanged: 0/0
  4070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4073 ;;      Temps:          0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0
  4074 ;;      Totals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0
  4075 ;;Total ram usage:        1 bytes
  4076 ;; Hardware stack levels required when called:   15
  4077 ;; This function calls:
  4078 ;;		_IOCCF7_SetInterruptHandler
  4079 ;;		_SYSTEM_Initialize
  4080 ;;		_TMR0_SetInterruptHandler
  4081 ;;		_printf
  4082 ;;		_resetCursor
  4083 ;;		_setCursor
  4084 ;;		_writeString
  4085 ;; This function is called by:
  4086 ;;		Startup code after reset
  4087 ;; This function uses a non-reentrant model
  4088 ;;
  4089                           
  4090                           
  4091                           ;psect for function _main
  4092  0CEF                     _main:	
  4093                           
  4094                           ;main.c: 38:     SYSTEM_Initialize();
  4095                           
  4096                           ;incstack = 0
  4097                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4098  0CEF  318A  229A  318C   	fcall	_SYSTEM_Initialize
  4099                           
  4100                           ;main.c: 40:     TMR0_SetInterruptHandler( timerISR ) ;
  4101  0CF2  3086               	movlw	low _timerISR
  4102  0CF3  0021               	movlb	1	; select bank1
  4103  0CF4  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler^(0+128)
  4104  0CF5  300A               	movlw	high _timerISR
  4105  0CF6  00A1               	movwf	(TMR0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  4106  0CF7  318A  227D  318C   	fcall	_TMR0_SetInterruptHandler
  4107                           
  4108                           ;main.c: 41:     IOCCF7_SetInterruptHandler( speedCalc ) ;
  4109  0CFA  3087               	movlw	low _speedCalc
  4110  0CFB  0021               	movlb	1	; select bank1
  4111  0CFC  00A0               	movwf	IOCCF7_SetInterruptHandler@InterruptHandler^(0+128)
  4112  0CFD  300E               	movlw	high _speedCalc
  4113  0CFE  00A1               	movwf	(IOCCF7_SetInterruptHandler@InterruptHandler^(0+128)+1)
  4114  0CFF  318A  2274  318C   	fcall	_IOCCF7_SetInterruptHandler
  4115                           
  4116                           ;main.c: 44:     resetCursor() ;
  4117  0D02  318A  2251  318C   	fcall	_resetCursor
  4118                           
  4119                           ;main.c: 46:     setCursor(1,0) ;
  4120  0D05  0021               	movlb	1	; select bank1
  4121  0D06  01A1               	clrf	setCursor@b^(0+128)
  4122  0D07  3001               	movlw	1
  4123  0D08  318C  2472  318C   	fcall	_setCursor
  4124                           
  4125                           ;main.c: 47:     writeString(speedDisp);
  4126  0D0B  3058               	movlw	(low (_speedDisp| (0+256)))& (0+255)
  4127  0D0C  318A  22D5  318C   	fcall	_writeString
  4128                           
  4129                           ;main.c: 48:     setCursor(2,0) ;
  4130  0D0F  0021               	movlb	1	; select bank1
  4131  0D10  01A1               	clrf	setCursor@b^(0+128)
  4132  0D11  3002               	movlw	2
  4133  0D12  318C  2472  318C   	fcall	_setCursor
  4134                           
  4135                           ;main.c: 49:     writeString(distanceDisp);
  4136  0D15  304D               	movlw	(low (_distanceDisp| (0+256)))& (0+255)
  4137  0D16  318A  22D5  318C   	fcall	_writeString
  4138                           
  4139                           ;main.c: 50:     setCursor(3,0) ;
  4140  0D19  0021               	movlb	1	; select bank1
  4141  0D1A  01A1               	clrf	setCursor@b^(0+128)
  4142  0D1B  3003               	movlw	3
  4143  0D1C  318C  2472  318C   	fcall	_setCursor
  4144                           
  4145                           ;main.c: 51:     writeString(hrDisp);
  4146  0D1F  3040               	movlw	(low (_hrDisp| (0+256)))& (0+255)
  4147  0D20  318A  22D5  318C   	fcall	_writeString
  4148                           
  4149                           ;main.c: 52:     setCursor(4,0) ;
  4150  0D23  0021               	movlb	1	; select bank1
  4151  0D24  01A1               	clrf	setCursor@b^(0+128)
  4152  0D25  3004               	movlw	4
  4153  0D26  318C  2472  318C   	fcall	_setCursor
  4154                           
  4155                           ;main.c: 54:     (INTCONbits.GIE = 1);
  4156  0D29  178B               	bsf	11,7	;volatile
  4157                           
  4158                           ;main.c: 55:     (INTCONbits.PEIE = 1);
  4159  0D2A  170B               	bsf	11,6	;volatile
  4160  0D2B                     l3588:	
  4161                           
  4162                           ;main.c: 57:         setCursor(1,10) ;
  4163  0D2B  300A               	movlw	10
  4164  0D2C  0023               	movlb	3	; select bank3
  4165  0D2D  00A4               	movwf	??_main^(0+384)
  4166  0D2E  0824               	movf	??_main^(0+384),w
  4167  0D2F  0021               	movlb	1	; select bank1
  4168  0D30  00A1               	movwf	setCursor@b^(0+128)
  4169  0D31  3001               	movlw	1
  4170  0D32  318C  2472  318C   	fcall	_setCursor
  4171                           
  4172                           ;main.c: 58:         printf( "   %d kmh    ", speed ) ;
  4173  0D35  3000               	movlw	low (STR_1| (0+32768))
  4174  0D36  0022               	movlb	2	; select bank2
  4175  0D37  00E8               	movwf	printf@fmt^(0+256)
  4176  0D38  3090               	movlw	high (STR_1| (0+32768))
  4177  0D39  00E9               	movwf	(printf@fmt^(0+256)+1)
  4178  0D3A  0020               	movlb	0	; select bank0
  4179  0D3B  0845               	movf	_speed+3,w	;volatile
  4180  0D3C  0022               	movlb	2	; select bank2
  4181  0D3D  00ED               	movwf	((?_printf+3)^(0+256)+2)
  4182  0D3E  0020               	movlb	0	; select bank0
  4183  0D3F  0844               	movf	_speed+2,w	;volatile
  4184  0D40  0022               	movlb	2	; select bank2
  4185  0D41  00EC               	movwf	((?_printf+2)^(0+256)+2)
  4186  0D42  0020               	movlb	0	; select bank0
  4187  0D43  0843               	movf	_speed+1,w	;volatile
  4188  0D44  0022               	movlb	2	; select bank2
  4189  0D45  00EB               	movwf	((?_printf+1)^(0+256)+2)
  4190  0D46  0020               	movlb	0	; select bank0
  4191  0D47  0842               	movf	_speed,w	;volatile
  4192  0D48  0022               	movlb	2	; select bank2
  4193  0D49  00EA               	movwf	(?_printf^(0+256)+2)
  4194  0D4A  318A  22C1  318C   	fcall	_printf
  4195                           
  4196                           ;main.c: 59:         setCursor(2,11) ;
  4197  0D4D  300B               	movlw	11
  4198  0D4E  0023               	movlb	3	; select bank3
  4199  0D4F  00A4               	movwf	??_main^(0+384)
  4200  0D50  0824               	movf	??_main^(0+384),w
  4201  0D51  0021               	movlb	1	; select bank1
  4202  0D52  00A1               	movwf	setCursor@b^(0+128)
  4203  0D53  3002               	movlw	2
  4204  0D54  318C  2472  318C   	fcall	_setCursor
  4205                           
  4206                           ;main.c: 60:         printf("   %d m  ", distance ) ;
  4207  0D57  300E               	movlw	low (STR_2| (0+32768))
  4208  0D58  0022               	movlb	2	; select bank2
  4209  0D59  00E8               	movwf	printf@fmt^(0+256)
  4210  0D5A  3090               	movlw	high (STR_2| (0+32768))
  4211  0D5B  00E9               	movwf	(printf@fmt^(0+256)+1)
  4212  0D5C  0020               	movlb	0	; select bank0
  4213  0D5D  0841               	movf	_distance+3,w	;volatile
  4214  0D5E  0022               	movlb	2	; select bank2
  4215  0D5F  00ED               	movwf	((?_printf+3)^(0+256)+2)
  4216  0D60  0020               	movlb	0	; select bank0
  4217  0D61  0840               	movf	_distance+2,w	;volatile
  4218  0D62  0022               	movlb	2	; select bank2
  4219  0D63  00EC               	movwf	((?_printf+2)^(0+256)+2)
  4220  0D64  0020               	movlb	0	; select bank0
  4221  0D65  083F               	movf	_distance+1,w	;volatile
  4222  0D66  0022               	movlb	2	; select bank2
  4223  0D67  00EB               	movwf	((?_printf+1)^(0+256)+2)
  4224  0D68  0020               	movlb	0	; select bank0
  4225  0D69  083E               	movf	_distance,w	;volatile
  4226  0D6A  0022               	movlb	2	; select bank2
  4227  0D6B  00EA               	movwf	(?_printf^(0+256)+2)
  4228  0D6C  318A  22C1  318C   	fcall	_printf
  4229  0D6F  2D2B               	goto	l3588
  4230  0D70                     __end_of_main:	
  4231                           
  4232                           	psect	text1
  4233  0AD5                     __ptext1:	
  4234 ;; *************** function _writeString *****************
  4235 ;; Defined at:
  4236 ;;		line 60 in file "displayOptions.c"
  4237 ;; Parameters:    Size  Location     Type
  4238 ;;  string          1    wreg     PTR unsigned char 
  4239 ;;		 -> hrDisp(13), distanceDisp(11), speedDisp(8), 
  4240 ;; Auto vars:     Size  Location     Type
  4241 ;;  string          1   24[BANK1 ] PTR unsigned char 
  4242 ;;		 -> hrDisp(13), distanceDisp(11), speedDisp(8), 
  4243 ;; Return value:  Size  Location     Type
  4244 ;;                  1    wreg      void 
  4245 ;; Registers used:
  4246 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4247 ;; Tracked objects:
  4248 ;;		On entry : 0/0
  4249 ;;		On exit  : 0/0
  4250 ;;		Unchanged: 0/0
  4251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4253 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4255 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4256 ;;Total ram usage:        1 bytes
  4257 ;; Hardware stack levels used:    1
  4258 ;; Hardware stack levels required when called:   11
  4259 ;; This function calls:
  4260 ;;		_EUSART_is_tx_ready
  4261 ;;		_puts
  4262 ;; This function is called by:
  4263 ;;		_main
  4264 ;; This function uses a non-reentrant model
  4265 ;;
  4266                           
  4267                           
  4268                           ;psect for function _writeString
  4269  0AD5                     _writeString:	
  4270                           
  4271                           ;incstack = 0
  4272                           ; Regs used in _writeString: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4273                           ;writeString@string stored from wreg
  4274  0AD5  0021               	movlb	1	; select bank1
  4275  0AD6  00B8               	movwf	writeString@string^(0+128)
  4276  0AD7                     l3446:	
  4277                           ;displayOptions.c: 61:     while( !EUSART_is_tx_ready() ) ;
  4278                           
  4279  0AD7  3187  27ED  318A   	fcall	_EUSART_is_tx_ready
  4280  0ADA  3A00               	xorlw	0
  4281  0ADB  1903               	skipnz
  4282  0ADC  2AD7               	goto	l3446
  4283                           
  4284                           ;displayOptions.c: 62:     puts( string );
  4285  0ADD  0021               	movlb	1	; select bank1
  4286  0ADE  0838               	movf	writeString@string^(0+128),w
  4287  0ADF  00B3               	movwf	puts@s^(0+128)
  4288  0AE0  3001               	movlw	1
  4289  0AE1  00B4               	movwf	(puts@s+1)^(0+128)
  4290  0AE2  318B  2334  318A   	fcall	_puts
  4291                           
  4292                           ;displayOptions.c: 63:     _delay((unsigned long)((200)*(16000000/4000000.0)));
  4293  0AE5  30A0               	movlw	160
  4294  0AE6                     u4227:	
  4295  0AE6  3200               	nop2
  4296  0AE7  0B89               	decfsz	9,f
  4297  0AE8  2AE6               	goto	u4227
  4298  0AE9  0008               	return
  4299  0AEA                     __end_of_writeString:	
  4300                           
  4301                           	psect	text2
  4302  0C72                     __ptext2:	
  4303 ;; *************** function _setCursor *****************
  4304 ;; Defined at:
  4305 ;;		line 72 in file "displayOptions.c"
  4306 ;; Parameters:    Size  Location     Type
  4307 ;;  a               1    wreg     unsigned char 
  4308 ;;  b               1    1[BANK1 ] unsigned char 
  4309 ;; Auto vars:     Size  Location     Type
  4310 ;;  a               1    4[BANK1 ] unsigned char 
  4311 ;; Return value:  Size  Location     Type
  4312 ;;                  1    wreg      void 
  4313 ;; Registers used:
  4314 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4315 ;; Tracked objects:
  4316 ;;		On entry : 0/0
  4317 ;;		On exit  : 0/0
  4318 ;;		Unchanged: 0/0
  4319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4320 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4321 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4322 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4323 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4324 ;;Total ram usage:        4 bytes
  4325 ;; Hardware stack levels used:    1
  4326 ;; Hardware stack levels required when called:    7
  4327 ;; This function calls:
  4328 ;;		_EUSART_Write
  4329 ;;		_EUSART_is_tx_ready
  4330 ;; This function is called by:
  4331 ;;		_main
  4332 ;; This function uses a non-reentrant model
  4333 ;;
  4334                           
  4335                           
  4336                           ;psect for function _setCursor
  4337  0C72                     _setCursor:	
  4338                           
  4339                           ;incstack = 0
  4340                           ; Regs used in _setCursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4341                           ;setCursor@a stored from wreg
  4342  0C72  0021               	movlb	1	; select bank1
  4343  0C73  00A4               	movwf	setCursor@a^(0+128)
  4344  0C74                     l3420:	
  4345                           ;displayOptions.c: 73:     while( !EUSART_is_tx_ready() ) ;
  4346                           
  4347  0C74  3187  27ED  318C   	fcall	_EUSART_is_tx_ready
  4348  0C77  3A00               	xorlw	0
  4349  0C78  1903               	skipnz
  4350  0C79  2C74               	goto	l3420
  4351                           
  4352                           ;displayOptions.c: 74:     EUSART_Write( 254 );
  4353  0C7A  30FE               	movlw	254
  4354  0C7B  318A  2290  318C   	fcall	_EUSART_Write
  4355                           
  4356                           ;displayOptions.c: 75:     _delay((unsigned long)((200)*(16000000/4000000.0)));
  4357  0C7E  30A0               	movlw	160
  4358  0C7F                     u4237:	
  4359  0C7F  3200               	nop2
  4360  0C80  0B89               	decfsz	9,f
  4361  0C81  2C7F               	goto	u4237
  4362                           
  4363                           ;displayOptions.c: 76:     switch ( a ){
  4364  0C82  2C97               	goto	l3436
  4365  0C83                     l3426:	
  4366                           
  4367                           ;displayOptions.c: 78:         {;displayOptions.c: 79:             EUSART_Write(128 + 0 
      +                          + b) ;
  4368  0C83  0821               	movf	setCursor@b^(0+128),w
  4369  0C84  3E80               	addlw	128
  4370  0C85  318A  2290         	fcall	_EUSART_Write
  4371                           
  4372                           ;displayOptions.c: 80:             break ;
  4373  0C87  0008               	return
  4374  0C88                     l3428:	
  4375                           
  4376                           ;displayOptions.c: 83:         {;displayOptions.c: 84:            EUSART_Write(128 + 64 
      +                          + b) ;
  4377  0C88  0821               	movf	setCursor@b^(0+128),w
  4378  0C89  3EC0               	addlw	192
  4379  0C8A  318A  2290         	fcall	_EUSART_Write
  4380                           
  4381                           ;displayOptions.c: 85:            break ;
  4382  0C8C  0008               	return
  4383  0C8D                     l3430:	
  4384                           
  4385                           ;displayOptions.c: 88:         {;displayOptions.c: 89:             EUSART_Write(128 + 20
      +                           + b) ;
  4386  0C8D  0821               	movf	setCursor@b^(0+128),w
  4387  0C8E  3E94               	addlw	148
  4388  0C8F  318A  2290         	fcall	_EUSART_Write
  4389                           
  4390                           ;displayOptions.c: 90:             break ;
  4391  0C91  0008               	return
  4392  0C92                     l3432:	
  4393                           
  4394                           ;displayOptions.c: 93:         {;displayOptions.c: 94:             EUSART_Write(128 + 84
      +                           + b) ;
  4395  0C92  0821               	movf	setCursor@b^(0+128),w
  4396  0C93  3ED4               	addlw	212
  4397  0C94  318A  2290         	fcall	_EUSART_Write
  4398                           
  4399                           ;displayOptions.c: 95:             break ;
  4400  0C96  0008               	return
  4401  0C97                     l3436:	
  4402  0C97  0021               	movlb	1	; select bank1
  4403  0C98  0824               	movf	setCursor@a^(0+128),w
  4404  0C99  00A2               	movwf	??_setCursor^(0+128)
  4405  0C9A  01A3               	clrf	(??_setCursor^(0+128)+1)
  4406                           
  4407                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4408                           ; Switch size 1, requested type "simple"
  4409                           ; Number of cases is 1, Range of values is 0 to 0
  4410                           ; switch strategies available:
  4411                           ; Name         Instructions Cycles
  4412                           ; simple_byte            4     3 (average)
  4413                           ; direct_byte            8     6 (fixed)
  4414                           ; jumptable            260     6 (fixed)
  4415                           ;	Chosen strategy is simple_byte
  4416  0C9B  0823               	movf	(??_setCursor+1)^(0+128),w
  4417  0C9C  3A00               	xorlw	0	; case 0
  4418  0C9D  1903               	skipnz
  4419  0C9E  2CA0               	goto	l3634
  4420  0C9F  2CAE               	goto	l350
  4421  0CA0                     l3634:	
  4422                           
  4423                           ; Switch size 1, requested type "simple"
  4424                           ; Number of cases is 4, Range of values is 1 to 4
  4425                           ; switch strategies available:
  4426                           ; Name         Instructions Cycles
  4427                           ; simple_byte           13     7 (average)
  4428                           ; direct_byte           17     9 (fixed)
  4429                           ; jumptable            263     9 (fixed)
  4430                           ;	Chosen strategy is simple_byte
  4431  0CA0  0822               	movf	??_setCursor^(0+128),w
  4432  0CA1  3A01               	xorlw	1	; case 1
  4433  0CA2  1903               	skipnz
  4434  0CA3  2C83               	goto	l3426
  4435  0CA4  3A03               	xorlw	3	; case 2
  4436  0CA5  1903               	skipnz
  4437  0CA6  2C88               	goto	l3428
  4438  0CA7  3A01               	xorlw	1	; case 3
  4439  0CA8  1903               	skipnz
  4440  0CA9  2C8D               	goto	l3430
  4441  0CAA  3A07               	xorlw	7	; case 4
  4442  0CAB  1903               	skipnz
  4443  0CAC  2C92               	goto	l3432
  4444  0CAD  2CAE               	goto	l350
  4445  0CAE                     l350:	
  4446  0CAE  0008               	return
  4447  0CAF                     __end_of_setCursor:	
  4448                           
  4449                           	psect	text3
  4450  07ED                     __ptext3:	
  4451 ;; *************** function _EUSART_is_tx_ready *****************
  4452 ;; Defined at:
  4453 ;;		line 93 in file "mcc_generated_files/eusart.c"
  4454 ;; Parameters:    Size  Location     Type
  4455 ;;		None
  4456 ;; Auto vars:     Size  Location     Type
  4457 ;;		None
  4458 ;; Return value:  Size  Location     Type
  4459 ;;                  1    wreg      _Bool 
  4460 ;; Registers used:
  4461 ;;		wreg, status,2
  4462 ;; Tracked objects:
  4463 ;;		On entry : 0/0
  4464 ;;		On exit  : 0/0
  4465 ;;		Unchanged: 0/0
  4466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4468 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4470 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4471 ;;Total ram usage:        1 bytes
  4472 ;; Hardware stack levels used:    1
  4473 ;; Hardware stack levels required when called:    6
  4474 ;; This function calls:
  4475 ;;		Nothing
  4476 ;; This function is called by:
  4477 ;;		_writeString
  4478 ;;		_setCursor
  4479 ;;		_backlightBrightness
  4480 ;;		_writePrintf
  4481 ;; This function uses a non-reentrant model
  4482 ;;
  4483                           
  4484                           
  4485                           ;psect for function _EUSART_is_tx_ready
  4486  07ED                     _EUSART_is_tx_ready:	
  4487                           
  4488                           ;mcc_generated_files/eusart.c: 95:     return (_Bool)(PIR1bits.TXIF && TX1STAbits.TXEN);
  4489                           
  4490                           ;incstack = 0
  4491                           ; Regs used in _EUSART_is_tx_ready: [wreg+status,2]
  4492  07ED  0021               	movlb	1	; select bank1
  4493  07EE  01A0               	clrf	_EUSART_is_tx_ready$167^(0+128)
  4494  07EF  0020               	movlb	0	; select bank0
  4495  07F0  1E10               	btfss	16,4	;volatile
  4496  07F1  2FF8               	goto	l3334
  4497  07F2  0023               	movlb	3	; select bank3
  4498  07F3  1E9E               	btfss	30,5	;volatile
  4499  07F4  2FF8               	goto	l3334
  4500  07F5  0021               	movlb	1	; select bank1
  4501  07F6  01A0               	clrf	_EUSART_is_tx_ready$167^(0+128)
  4502  07F7  0AA0               	incf	_EUSART_is_tx_ready$167^(0+128),f
  4503  07F8                     l3334:	
  4504  07F8  0021               	movlb	1	; select bank1
  4505  07F9  0820               	movf	_EUSART_is_tx_ready$167^(0+128),w
  4506  07FA  0008               	return
  4507  07FB                     __end_of_EUSART_is_tx_ready:	
  4508                           
  4509                           	psect	text4
  4510  0A51                     __ptext4:	
  4511 ;; *************** function _resetCursor *****************
  4512 ;; Defined at:
  4513 ;;		line 56 in file "displayOptions.c"
  4514 ;; Parameters:    Size  Location     Type
  4515 ;;		None
  4516 ;; Auto vars:     Size  Location     Type
  4517 ;;		None
  4518 ;; Return value:  Size  Location     Type
  4519 ;;                  1    wreg      void 
  4520 ;; Registers used:
  4521 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4522 ;; Tracked objects:
  4523 ;;		On entry : 0/0
  4524 ;;		On exit  : 0/0
  4525 ;;		Unchanged: 0/0
  4526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4531 ;;Total ram usage:        0 bytes
  4532 ;; Hardware stack levels used:    1
  4533 ;; Hardware stack levels required when called:   11
  4534 ;; This function calls:
  4535 ;;		_puts
  4536 ;; This function is called by:
  4537 ;;		_main
  4538 ;; This function uses a non-reentrant model
  4539 ;;
  4540                           
  4541                           
  4542                           ;psect for function _resetCursor
  4543  0A51                     _resetCursor:	
  4544                           
  4545                           ;displayOptions.c: 57:     puts("|-");
  4546                           
  4547                           ;incstack = 0
  4548                           ; Regs used in _resetCursor: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4549  0A51  3018               	movlw	low (STR_3| (0+32768))
  4550  0A52  0021               	movlb	1	; select bank1
  4551  0A53  00B3               	movwf	puts@s^(0+128)
  4552  0A54  3090               	movlw	high (STR_3| (0+32768))
  4553  0A55  00B4               	movwf	(puts@s^(0+128)+1)
  4554  0A56  318B  2334         	fcall	_puts
  4555  0A58  0008               	return
  4556  0A59                     __end_of_resetCursor:	
  4557                           
  4558                           	psect	text5
  4559  0B34                     __ptext5:	
  4560 ;; *************** function _puts *****************
  4561 ;; Defined at:
  4562 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\puts.c"
  4563 ;; Parameters:    Size  Location     Type
  4564 ;;  s               2   19[BANK1 ] PTR const unsigned char 
  4565 ;;		 -> STR_3(3), hrDisp(13), distanceDisp(11), speedDisp(8), 
  4566 ;; Auto vars:     Size  Location     Type
  4567 ;;  r               2    0        int 
  4568 ;; Return value:  Size  Location     Type
  4569 ;;                  2   19[BANK1 ] int 
  4570 ;; Registers used:
  4571 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4572 ;; Tracked objects:
  4573 ;;		On entry : 0/0
  4574 ;;		On exit  : 0/0
  4575 ;;		Unchanged: 0/0
  4576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4577 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4578 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4580 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  4581 ;;Total ram usage:        5 bytes
  4582 ;; Hardware stack levels used:    1
  4583 ;; Hardware stack levels required when called:   10
  4584 ;; This function calls:
  4585 ;;		_fputc
  4586 ;;		_fputs
  4587 ;; This function is called by:
  4588 ;;		_resetCursor
  4589 ;;		_writeString
  4590 ;; This function uses a non-reentrant model
  4591 ;;
  4592                           
  4593                           
  4594                           ;psect for function _puts
  4595  0B34                     _puts:	
  4596                           
  4597                           ;incstack = 0
  4598                           ; Regs used in _puts: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4599  0B34  0021               	movlb	1	; select bank1
  4600  0B35  01B7               	clrf	_puts$1032^(0+128)
  4601  0B36  0AB7               	incf	_puts$1032^(0+128),f
  4602  0B37  0834               	movf	(puts@s+1)^(0+128),w
  4603  0B38  00AB               	movwf	(fputs@s+1)^(0+128)
  4604  0B39  0833               	movf	puts@s^(0+128),w
  4605  0B3A  00AA               	movwf	fputs@s^(0+128)
  4606  0B3B  01AC               	clrf	fputs@fp^(0+128)
  4607  0B3C  318B  23B3  318B   	fcall	_fputs
  4608  0B3F  0021               	movlb	1	; select bank1
  4609  0B40  1BAB               	btfsc	(?_fputs+1)^(0+128),7
  4610  0B41  0008               	return
  4611  0B42  300A               	movlw	10
  4612  0B43  00A2               	movwf	fputc@c^(0+128)
  4613  0B44  3000               	movlw	0
  4614  0B45  00A3               	movwf	(fputc@c^(0+128)+1)
  4615  0B46  01A4               	clrf	fputc@fp^(0+128)
  4616  0B47  318C  24AF  318B   	fcall	_fputc
  4617  0B4A  0021               	movlb	1	; select bank1
  4618  0B4B  1BA3               	btfsc	(?_fputc+1)^(0+128),7
  4619  0B4C  0008               	return
  4620  0B4D  01B7               	clrf	_puts$1032^(0+128)
  4621  0B4E  0008               	return
  4622  0B4F                     __end_of_puts:	
  4623                           
  4624                           	psect	text6
  4625  0AC1                     __ptext6:	
  4626 ;; *************** function _printf *****************
  4627 ;; Defined at:
  4628 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  4629 ;; Parameters:    Size  Location     Type
  4630 ;;  fmt             2    8[BANK2 ] PTR const unsigned char 
  4631 ;;		 -> STR_2(10), STR_1(14), 
  4632 ;; Auto vars:     Size  Location     Type
  4633 ;;  ret             2    0        int 
  4634 ;;  ap              1    3[BANK3 ] PTR void [1]
  4635 ;;		 -> ?_printf(2), 
  4636 ;; Return value:  Size  Location     Type
  4637 ;;                  2    8[BANK2 ] int 
  4638 ;; Registers used:
  4639 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4640 ;; Tracked objects:
  4641 ;;		On entry : 0/0
  4642 ;;		On exit  : 0/0
  4643 ;;		Unchanged: 0/0
  4644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4645 ;;      Params:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0
  4646 ;;      Locals:         0       0       0       0       3       0       0       0       0       0       0       0       
      +0       0
  4647 ;;      Temps:          0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0
  4648 ;;      Totals:         0       0       0       6       4       0       0       0       0       0       0       0       
      +0       0
  4649 ;;Total ram usage:       10 bytes
  4650 ;; Hardware stack levels used:    1
  4651 ;; Hardware stack levels required when called:   14
  4652 ;; This function calls:
  4653 ;;		_vfprintf
  4654 ;; This function is called by:
  4655 ;;		_main
  4656 ;;		_writePrintf
  4657 ;; This function uses a non-reentrant model
  4658 ;;
  4659                           
  4660                           
  4661                           ;psect for function _printf
  4662  0AC1                     _printf:	
  4663                           
  4664                           ;incstack = 0
  4665                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4666  0AC1  306A               	movlw	(low ((?_printf| (0+256)+2)))& (0+255)
  4667  0AC2  0023               	movlb	3	; select bank3
  4668  0AC3  00A0               	movwf	??_printf^(0+384)
  4669  0AC4  0820               	movf	??_printf^(0+384),w
  4670  0AC5  00A3               	movwf	printf@ap^(0+384)
  4671  0AC6  0022               	movlb	2	; select bank2
  4672  0AC7  0869               	movf	(printf@fmt+1)^(0+256),w
  4673  0AC8  00E1               	movwf	(vfprintf@fmt+1)^(0+256)
  4674  0AC9  0868               	movf	printf@fmt^(0+256),w
  4675  0ACA  00E0               	movwf	vfprintf@fmt^(0+256)
  4676  0ACB  30A3               	movlw	(low (printf@ap| (0+256)))& (0+255)
  4677  0ACC  0023               	movlb	3	; select bank3
  4678  0ACD  00A0               	movwf	??_printf^(0+384)
  4679  0ACE  0820               	movf	??_printf^(0+384),w
  4680  0ACF  0022               	movlb	2	; select bank2
  4681  0AD0  00E2               	movwf	vfprintf@ap^(0+256)
  4682  0AD1  3000               	movlw	0
  4683  0AD2  318C  243F         	fcall	_vfprintf
  4684  0AD4  0008               	return
  4685  0AD5                     __end_of_printf:	
  4686                           
  4687                           	psect	text7
  4688  0C3F                     __ptext7:	
  4689 ;; *************** function _vfprintf *****************
  4690 ;; Defined at:
  4691 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4692 ;; Parameters:    Size  Location     Type
  4693 ;;  fp              1    wreg     PTR struct _IO_FILE
  4694 ;;		 -> NULL(0), 
  4695 ;;  fmt             2    0[BANK2 ] PTR const unsigned char 
  4696 ;;		 -> STR_2(10), STR_1(14), 
  4697 ;;  ap              1    2[BANK2 ] PTR PTR void 
  4698 ;;		 -> printf@ap(1), 
  4699 ;; Auto vars:     Size  Location     Type
  4700 ;;  fp              1    5[BANK2 ] PTR struct _IO_FILE
  4701 ;;		 -> NULL(0), 
  4702 ;;  cfmt            2    6[BANK2 ] PTR unsigned char 
  4703 ;;		 -> STR_2(10), STR_1(14), 
  4704 ;; Return value:  Size  Location     Type
  4705 ;;                  2    0[BANK2 ] int 
  4706 ;; Registers used:
  4707 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4708 ;; Tracked objects:
  4709 ;;		On entry : 0/0
  4710 ;;		On exit  : 0/0
  4711 ;;		Unchanged: 0/0
  4712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4713 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  4714 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  4715 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  4716 ;;      Totals:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0
  4717 ;;Total ram usage:        8 bytes
  4718 ;; Hardware stack levels used:    1
  4719 ;; Hardware stack levels required when called:   13
  4720 ;; This function calls:
  4721 ;;		_vfpfcnvrt
  4722 ;; This function is called by:
  4723 ;;		_printf
  4724 ;; This function uses a non-reentrant model
  4725 ;;
  4726                           
  4727                           
  4728                           ;psect for function _vfprintf
  4729  0C3F                     _vfprintf:	
  4730                           
  4731                           ;incstack = 0
  4732                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4733                           ;vfprintf@fp stored from wreg
  4734  0C3F  0022               	movlb	2	; select bank2
  4735  0C40  00E5               	movwf	vfprintf@fp^(0+256)
  4736                           
  4737                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  4738  0C41  0861               	movf	(vfprintf@fmt+1)^(0+256),w
  4739  0C42  00E7               	movwf	(vfprintf@cfmt+1)^(0+256)
  4740  0C43  0860               	movf	vfprintf@fmt^(0+256),w
  4741  0C44  00E6               	movwf	vfprintf@cfmt^(0+256)
  4742                           
  4743                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  4744  0C45  0020               	movlb	0	; select bank0
  4745  0C46  01CA               	clrf	_nout
  4746  0C47  01CB               	clrf	_nout+1
  4747  0C48                     l3408:	
  4748                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  4749                           
  4750                           
  4751                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  4752  0C48  0022               	movlb	2	; select bank2
  4753  0C49  0866               	movf	vfprintf@cfmt^(0+256),w
  4754  0C4A  0084               	movwf	4
  4755  0C4B  0867               	movf	(vfprintf@cfmt+1)^(0+256),w
  4756  0C4C  0085               	movwf	5
  4757  0C4D  0012               	moviw fsr0++
  4758  0C4E  1903               	btfsc	3,2
  4759  0C4F  2C69               	goto	l3410
  4760                           
  4761                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  4762  0C50  3066               	movlw	(low (vfprintf@cfmt| (0+256)))& (0+255)
  4763  0C51  00E3               	movwf	??_vfprintf^(0+256)
  4764  0C52  0863               	movf	??_vfprintf^(0+256),w
  4765  0C53  0021               	movlb	1	; select bank1
  4766  0C54  00DA               	movwf	vfpfcnvrt@fmt^(0+128)
  4767  0C55  0022               	movlb	2	; select bank2
  4768  0C56  0862               	movf	vfprintf@ap^(0+256),w
  4769  0C57  00E4               	movwf	(??_vfprintf+1)^(0+256)
  4770  0C58  0864               	movf	(??_vfprintf+1)^(0+256),w
  4771  0C59  0021               	movlb	1	; select bank1
  4772  0C5A  00DB               	movwf	vfpfcnvrt@ap^(0+128)
  4773  0C5B  0022               	movlb	2	; select bank2
  4774  0C5C  0865               	movf	vfprintf@fp^(0+256),w
  4775  0C5D  3185  2595  318C   	fcall	_vfpfcnvrt
  4776  0C60  0021               	movlb	1	; select bank1
  4777  0C61  085A               	movf	?_vfpfcnvrt^(0+128),w
  4778  0C62  0020               	movlb	0	; select bank0
  4779  0C63  07CA               	addwf	_nout,f
  4780  0C64  0021               	movlb	1	; select bank1
  4781  0C65  085B               	movf	(?_vfpfcnvrt+1)^(0+128),w
  4782  0C66  0020               	movlb	0	; select bank0
  4783  0C67  3DCB               	addwfc	_nout+1,f
  4784  0C68  2C48               	goto	l3408
  4785  0C69                     l3410:	
  4786                           
  4787                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  4788  0C69  0020               	movlb	0	; select bank0
  4789  0C6A  084B               	movf	_nout+1,w
  4790  0C6B  0022               	movlb	2	; select bank2
  4791  0C6C  00E1               	movwf	(?_vfprintf+1)^(0+256)
  4792  0C6D  0020               	movlb	0	; select bank0
  4793  0C6E  084A               	movf	_nout,w
  4794  0C6F  0022               	movlb	2	; select bank2
  4795  0C70  00E0               	movwf	?_vfprintf^(0+256)
  4796  0C71  0008               	return
  4797  0C72                     __end_of_vfprintf:	
  4798                           
  4799                           	psect	text8
  4800  0595                     __ptext8:	
  4801 ;; *************** function _vfpfcnvrt *****************
  4802 ;; Defined at:
  4803 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4804 ;; Parameters:    Size  Location     Type
  4805 ;;  fp              1    wreg     PTR struct _IO_FILE
  4806 ;;		 -> NULL(0), 
  4807 ;;  fmt             1   58[BANK1 ] PTR PTR unsigned char 
  4808 ;;		 -> vfprintf@cfmt(2), 
  4809 ;;  ap              1   59[BANK1 ] PTR PTR void 
  4810 ;;		 -> printf@ap(1), 
  4811 ;; Auto vars:     Size  Location     Type
  4812 ;;  fp              1   75[BANK1 ] PTR struct _IO_FILE
  4813 ;;		 -> NULL(0), 
  4814 ;;  ll              8   65[BANK1 ] long long 
  4815 ;;  llu             8    0        unsigned long long 
  4816 ;;  f               4    0        unsigned long long 
  4817 ;;  ct              3    0        unsigned char [3]
  4818 ;;  vp              2   73[BANK1 ] PTR void 
  4819 ;;		 -> ?_printf(2), rpm(4), 
  4820 ;;  i               2    0        int 
  4821 ;;  done            2    0        int 
  4822 ;;  cp              2    0        PTR unsigned char 
  4823 ;;  c               1    0        unsigned char 
  4824 ;; Return value:  Size  Location     Type
  4825 ;;                  2   58[BANK1 ] int 
  4826 ;; Registers used:
  4827 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4828 ;; Tracked objects:
  4829 ;;		On entry : 0/0
  4830 ;;		On exit  : 0/0
  4831 ;;		Unchanged: 0/0
  4832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4833 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4834 ;;      Locals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0
  4835 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  4836 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0
  4837 ;;Total ram usage:       18 bytes
  4838 ;; Hardware stack levels used:    1
  4839 ;; Hardware stack levels required when called:   12
  4840 ;; This function calls:
  4841 ;;		_dtoa
  4842 ;;		_fputc
  4843 ;; This function is called by:
  4844 ;;		_vfprintf
  4845 ;; This function uses a non-reentrant model
  4846 ;;
  4847                           
  4848                           
  4849                           ;psect for function _vfpfcnvrt
  4850  0595                     _vfpfcnvrt:	
  4851                           
  4852                           ;incstack = 0
  4853                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4854                           ;vfpfcnvrt@fp stored from wreg
  4855  0595  0021               	movlb	1	; select bank1
  4856  0596  00EB               	movwf	vfpfcnvrt@fp^(0+128)
  4857                           
  4858                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  4859  0597  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  4860  0598  0086               	movwf	6
  4861  0599  3001               	movlw	1	; select bank2/3
  4862  059A  0087               	movwf	7
  4863  059B  3F40               	moviw [0]fsr1
  4864  059C  00DC               	movwf	??_vfpfcnvrt^(0+128)
  4865  059D  3F41               	moviw [1]fsr1
  4866  059E  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  4867  059F  085C               	movf	??_vfpfcnvrt^(0+128),w
  4868  05A0  0084               	movwf	4
  4869  05A1  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4870  05A2  0085               	movwf	5
  4871  05A3  0012               	moviw fsr0++
  4872  05A4  3A25               	xorlw	37
  4873  05A5  1D03               	btfss	3,2
  4874  05A6  2E7E               	goto	l3308
  4875                           
  4876                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  4877  05A7  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  4878  05A8  0086               	movwf	6
  4879  05A9  3001               	movlw	1	; select bank2/3
  4880  05AA  0087               	movwf	7
  4881  05AB  3001               	movlw	1
  4882  05AC  0781               	addwf	1,f
  4883  05AD  3141               	addfsr 1,1
  4884  05AE  1803               	skipnc
  4885  05AF  0A81               	incf	1,f
  4886                           
  4887                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  4888  05B0  0020               	movlb	0	; select bank0
  4889  05B1  01CC               	clrf	_width
  4890  05B2  01CD               	clrf	_width+1
  4891  05B3  0021               	movlb	1	; select bank1
  4892  05B4  01EE               	clrf	_flags^(0+128)
  4893  05B5  01EF               	clrf	(_flags+1)^(0+128)
  4894                           
  4895                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  4896  05B6  30FF               	movlw	255
  4897  05B7  00EC               	movwf	_prec^(0+128)
  4898  05B8  30FF               	movlw	255
  4899  05B9  00ED               	movwf	(_prec^(0+128)+1)
  4900                           
  4901                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  4902  05BA  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  4903  05BB  0086               	movwf	6
  4904  05BC  3001               	movlw	1	; select bank2/3
  4905  05BD  0087               	movwf	7
  4906  05BE  3F40               	moviw [0]fsr1
  4907  05BF  00DC               	movwf	??_vfpfcnvrt^(0+128)
  4908  05C0  3F41               	moviw [1]fsr1
  4909  05C1  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  4910  05C2  085C               	movf	??_vfpfcnvrt^(0+128),w
  4911  05C3  0084               	movwf	4
  4912  05C4  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4913  05C5  0085               	movwf	5
  4914  05C6  0012               	moviw fsr0++
  4915  05C7  3A64               	xorlw	100
  4916  05C8  1903               	btfsc	3,2
  4917  05C9  2DDA               	goto	l3272
  4918  05CA  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  4919  05CB  0086               	movwf	6
  4920  05CC  3001               	movlw	1	; select bank2/3
  4921  05CD  0087               	movwf	7
  4922  05CE  3F40               	moviw [0]fsr1
  4923  05CF  00DC               	movwf	??_vfpfcnvrt^(0+128)
  4924  05D0  3F41               	moviw [1]fsr1
  4925  05D1  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  4926  05D2  085C               	movf	??_vfpfcnvrt^(0+128),w
  4927  05D3  0084               	movwf	4
  4928  05D4  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4929  05D5  0085               	movwf	5
  4930  05D6  0012               	moviw fsr0++
  4931  05D7  3A69               	xorlw	105
  4932  05D8  1D03               	btfss	3,2
  4933  05D9  2E17               	goto	l3280
  4934  05DA                     l3272:	
  4935                           
  4936                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  4937  05DA  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  4938  05DB  0086               	movwf	6
  4939  05DC  3001               	movlw	1	; select bank2/3
  4940  05DD  0087               	movwf	7
  4941  05DE  3001               	movlw	1
  4942  05DF  0781               	addwf	1,f
  4943  05E0  3141               	addfsr 1,1
  4944  05E1  1803               	skipnc
  4945  05E2  0A81               	incf	1,f
  4946                           
  4947                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4948  05E3  085B               	movf	vfpfcnvrt@ap^(0+128),w
  4949  05E4  0086               	movwf	6
  4950  05E5  3001               	movlw	1	; select bank2/3
  4951  05E6  0087               	movwf	7
  4952  05E7  0801               	movf	1,w
  4953  05E8  0084               	movwf	4
  4954  05E9  3001               	movlw	1	; select bank2/3
  4955  05EA  0085               	movwf	5
  4956  05EB  3002               	movlw	2
  4957  05EC  0781               	addwf	1,f
  4958  05ED  3F00               	moviw [0]fsr0
  4959  05EE  00DC               	movwf	??_vfpfcnvrt^(0+128)
  4960  05EF  3F01               	moviw [1]fsr0
  4961  05F0  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  4962  05F1  085C               	movf	??_vfpfcnvrt^(0+128),w
  4963  05F2  00E1               	movwf	vfpfcnvrt@ll^(0+128)
  4964  05F3  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4965  05F4  00E2               	movwf	(vfpfcnvrt@ll+1)^(0+128)
  4966  05F5  0D89               	rlf	9,f
  4967  05F6  3B89               	subwfb	9,f
  4968  05F7  0989               	comf	9,f
  4969  05F8  00E3               	movwf	(vfpfcnvrt@ll+2)^(0+128)
  4970  05F9  00E4               	movwf	(vfpfcnvrt@ll+3)^(0+128)
  4971  05FA  00E5               	movwf	(vfpfcnvrt@ll+4)^(0+128)
  4972  05FB  00E6               	movwf	(vfpfcnvrt@ll+5)^(0+128)
  4973  05FC  00E7               	movwf	(vfpfcnvrt@ll+6)^(0+128)
  4974  05FD  00E8               	movwf	(vfpfcnvrt@ll+7)^(0+128)
  4975                           
  4976                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  4977  05FE  0861               	movf	vfpfcnvrt@ll^(0+128),w
  4978  05FF  00BC               	movwf	dtoa@d^(0+128)
  4979  0600  0862               	movf	(vfpfcnvrt@ll+1)^(0+128),w
  4980  0601  00BD               	movwf	(dtoa@d+1)^(0+128)
  4981  0602  0863               	movf	(vfpfcnvrt@ll+2)^(0+128),w
  4982  0603  00BE               	movwf	(dtoa@d+2)^(0+128)
  4983  0604  0864               	movf	(vfpfcnvrt@ll+3)^(0+128),w
  4984  0605  00BF               	movwf	(dtoa@d+3)^(0+128)
  4985  0606  0865               	movf	(vfpfcnvrt@ll+4)^(0+128),w
  4986  0607  00C0               	movwf	(dtoa@d+4)^(0+128)
  4987  0608  0866               	movf	(vfpfcnvrt@ll+5)^(0+128),w
  4988  0609  00C1               	movwf	(dtoa@d+5)^(0+128)
  4989  060A  0867               	movf	(vfpfcnvrt@ll+6)^(0+128),w
  4990  060B  00C2               	movwf	(dtoa@d+6)^(0+128)
  4991  060C  0868               	movf	(vfpfcnvrt@ll+7)^(0+128),w
  4992  060D  00C3               	movwf	(dtoa@d+7)^(0+128)
  4993  060E  086B               	movf	vfpfcnvrt@fp^(0+128),w
  4994  060F  3184  244F         	fcall	_dtoa
  4995  0611  0021               	movlb	1	; select bank1
  4996  0612  083D               	movf	(?_dtoa+1)^(0+128),w
  4997  0613  00DB               	movwf	(?_vfpfcnvrt+1)^(0+128)
  4998  0614  083C               	movf	?_dtoa^(0+128),w
  4999  0615  00DA               	movwf	?_vfpfcnvrt^(0+128)
  5000  0616  0008               	return
  5001  0617                     l3280:	
  5002                           
  5003                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1077:      
      +                             if (*fmt[0] == 'n') {
  5004  0617  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5005  0618  0086               	movwf	6
  5006  0619  3001               	movlw	1	; select bank2/3
  5007  061A  0087               	movwf	7
  5008  061B  3F40               	moviw [0]fsr1
  5009  061C  00DC               	movwf	??_vfpfcnvrt^(0+128)
  5010  061D  3F41               	moviw [1]fsr1
  5011  061E  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5012  061F  085C               	movf	??_vfpfcnvrt^(0+128),w
  5013  0620  0084               	movwf	4
  5014  0621  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5015  0622  0085               	movwf	5
  5016  0623  0012               	moviw fsr0++
  5017  0624  3A6E               	xorlw	110
  5018  0625  1D03               	btfss	3,2
  5019  0626  2E4B               	goto	l3292
  5020                           
  5021                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1078:      
      +                                 ++*fmt;
  5022  0627  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5023  0628  0086               	movwf	6
  5024  0629  3001               	movlw	1	; select bank2/3
  5025  062A  0087               	movwf	7
  5026  062B  3001               	movlw	1
  5027  062C  0781               	addwf	1,f
  5028  062D  3141               	addfsr 1,1
  5029  062E  1803               	skipnc
  5030  062F  0A81               	incf	1,f
  5031                           
  5032                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1079:      
      +                                 vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
  5033  0630  085B               	movf	vfpfcnvrt@ap^(0+128),w
  5034  0631  0086               	movwf	6
  5035  0632  3001               	movlw	1	; select bank2/3
  5036  0633  0087               	movwf	7
  5037  0634  0801               	movf	1,w
  5038  0635  0084               	movwf	4
  5039  0636  3001               	movlw	1	; select bank2/3
  5040  0637  0085               	movwf	5
  5041  0638  3002               	movlw	2
  5042  0639  0781               	addwf	1,f
  5043  063A  3F00               	moviw [0]fsr0
  5044  063B  00E9               	movwf	vfpfcnvrt@vp^(0+128)
  5045  063C  3F01               	moviw [1]fsr0
  5046  063D  00EA               	movwf	(vfpfcnvrt@vp+1)^(0+128)
  5047                           
  5048                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1080:      
      +                                 *(int *)vp = nout;
  5049  063E  0869               	movf	vfpfcnvrt@vp^(0+128),w
  5050  063F  0086               	movwf	6
  5051  0640  086A               	movf	(vfpfcnvrt@vp+1)^(0+128),w
  5052  0641  0087               	movwf	7
  5053  0642  0020               	movlb	0	; select bank0
  5054  0643  084A               	movf	_nout,w
  5055  0644  3FC0               	movwi [0]fsr1
  5056  0645  084B               	movf	_nout+1,w
  5057  0646  3FC1               	movwi [1]fsr1
  5058  0647                     l3288:	
  5059                           
  5060                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1081:      
      +                                 return 0;
  5061  0647  0021               	movlb	1	; select bank1
  5062  0648  01DA               	clrf	?_vfpfcnvrt^(0+128)
  5063  0649  01DB               	clrf	(?_vfpfcnvrt+1)^(0+128)
  5064  064A  0008               	return
  5065  064B                     l3292:	
  5066                           
  5067                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  5068  064B  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5069  064C  0086               	movwf	6
  5070  064D  3001               	movlw	1	; select bank2/3
  5071  064E  0087               	movwf	7
  5072  064F  3F40               	moviw [0]fsr1
  5073  0650  00DC               	movwf	??_vfpfcnvrt^(0+128)
  5074  0651  3F41               	moviw [1]fsr1
  5075  0652  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5076  0653  085C               	movf	??_vfpfcnvrt^(0+128),w
  5077  0654  0084               	movwf	4
  5078  0655  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5079  0656  0085               	movwf	5
  5080  0657  0012               	moviw fsr0++
  5081  0658  3A25               	xorlw	37
  5082  0659  1D03               	btfss	3,2
  5083  065A  2E74               	goto	l3302
  5084                           
  5085                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  5086  065B  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5087  065C  0086               	movwf	6
  5088  065D  3001               	movlw	1	; select bank2/3
  5089  065E  0087               	movwf	7
  5090  065F  3001               	movlw	1
  5091  0660  0781               	addwf	1,f
  5092  0661  3141               	addfsr 1,1
  5093  0662  1803               	skipnc
  5094  0663  0A81               	incf	1,f
  5095                           
  5096                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  5097  0664  3025               	movlw	37
  5098  0665  00A2               	movwf	fputc@c^(0+128)
  5099  0666  3000               	movlw	0
  5100  0667  00A3               	movwf	(fputc@c^(0+128)+1)
  5101  0668  086B               	movf	vfpfcnvrt@fp^(0+128),w
  5102  0669  00DC               	movwf	??_vfpfcnvrt^(0+128)
  5103  066A  085C               	movf	??_vfpfcnvrt^(0+128),w
  5104  066B  00A4               	movwf	fputc@fp^(0+128)
  5105  066C  318C  24AF         	fcall	_fputc
  5106  066E                     l3298:	
  5107                           
  5108                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  5109  066E  3001               	movlw	1
  5110  066F  0021               	movlb	1	; select bank1
  5111  0670  00DA               	movwf	?_vfpfcnvrt^(0+128)
  5112  0671  3000               	movlw	0
  5113  0672  00DB               	movwf	(?_vfpfcnvrt^(0+128)+1)
  5114  0673  0008               	return
  5115  0674                     l3302:	
  5116                           
  5117                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  5118  0674  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5119  0675  0086               	movwf	6
  5120  0676  3001               	movlw	1	; select bank2/3
  5121  0677  0087               	movwf	7
  5122  0678  3001               	movlw	1
  5123  0679  0781               	addwf	1,f
  5124  067A  3141               	addfsr 1,1
  5125  067B  1803               	skipnc
  5126  067C  0A81               	incf	1,f
  5127  067D  2E47               	goto	l3288
  5128  067E                     l3308:	
  5129                           
  5130                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  5131  067E  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5132  067F  0086               	movwf	6
  5133  0680  3001               	movlw	1	; select bank2/3
  5134  0681  0087               	movwf	7
  5135  0682  3F40               	moviw [0]fsr1
  5136  0683  00DC               	movwf	??_vfpfcnvrt^(0+128)
  5137  0684  3F41               	moviw [1]fsr1
  5138  0685  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5139  0686  085C               	movf	??_vfpfcnvrt^(0+128),w
  5140  0687  0084               	movwf	4
  5141  0688  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5142  0689  0085               	movwf	5
  5143  068A  0800               	movf	0,w	;code access
  5144  068B  00DE               	movwf	(??_vfpfcnvrt+2)^(0+128)
  5145  068C  01DF               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  5146  068D  085E               	movf	(??_vfpfcnvrt+2)^(0+128),w
  5147  068E  00A2               	movwf	fputc@c^(0+128)
  5148  068F  085F               	movf	(??_vfpfcnvrt+3)^(0+128),w
  5149  0690  00A3               	movwf	(fputc@c+1)^(0+128)
  5150  0691  086B               	movf	vfpfcnvrt@fp^(0+128),w
  5151  0692  00E0               	movwf	(??_vfpfcnvrt+4)^(0+128)
  5152  0693  0860               	movf	(??_vfpfcnvrt+4)^(0+128),w
  5153  0694  00A4               	movwf	fputc@fp^(0+128)
  5154  0695  318C  24AF  3185   	fcall	_fputc
  5155                           
  5156                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  5157  0698  0021               	movlb	1	; select bank1
  5158  0699  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5159  069A  0086               	movwf	6
  5160  069B  3001               	movlw	1	; select bank2/3
  5161  069C  0087               	movwf	7
  5162  069D  3001               	movlw	1
  5163  069E  0781               	addwf	1,f
  5164  069F  3141               	addfsr 1,1
  5165  06A0  1803               	skipnc
  5166  06A1  0A81               	incf	1,f
  5167  06A2  2E6E               	goto	l3298
  5168  06A3                     __end_of_vfpfcnvrt:	
  5169                           
  5170                           	psect	text9
  5171  044F                     __ptext9:	
  5172 ;; *************** function _dtoa *****************
  5173 ;; Defined at:
  5174 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5175 ;; Parameters:    Size  Location     Type
  5176 ;;  fp              1    wreg     PTR struct _IO_FILE
  5177 ;;		 -> NULL(0), 
  5178 ;;  d               8   28[BANK1 ] long long 
  5179 ;; Auto vars:     Size  Location     Type
  5180 ;;  fp              1   41[BANK1 ] PTR struct _IO_FILE
  5181 ;;		 -> NULL(0), 
  5182 ;;  n               8   48[BANK1 ] long long 
  5183 ;;  i               2   56[BANK1 ] int 
  5184 ;;  s               2   46[BANK1 ] int 
  5185 ;;  w               2   44[BANK1 ] int 
  5186 ;;  p               2   42[BANK1 ] int 
  5187 ;; Return value:  Size  Location     Type
  5188 ;;                  2   28[BANK1 ] int 
  5189 ;; Registers used:
  5190 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5191 ;; Tracked objects:
  5192 ;;		On entry : 0/0
  5193 ;;		On exit  : 0/0
  5194 ;;		Unchanged: 0/0
  5195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5196 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  5197 ;;      Locals:         0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0
  5198 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5199 ;;      Totals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0
  5200 ;;Total ram usage:       30 bytes
  5201 ;; Hardware stack levels used:    1
  5202 ;; Hardware stack levels required when called:   11
  5203 ;; This function calls:
  5204 ;;		___aodiv
  5205 ;;		___aomod
  5206 ;;		_abs
  5207 ;;		_pad
  5208 ;; This function is called by:
  5209 ;;		_vfpfcnvrt
  5210 ;; This function uses a non-reentrant model
  5211 ;;
  5212                           
  5213                           
  5214                           ;psect for function _dtoa
  5215  044F                     _dtoa:	
  5216                           
  5217                           ;incstack = 0
  5218                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5219                           ;dtoa@fp stored from wreg
  5220  044F  0021               	movlb	1	; select bank1
  5221  0450  00C9               	movwf	dtoa@fp^(0+128)
  5222                           
  5223                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  5224  0451  083C               	movf	dtoa@d^(0+128),w
  5225  0452  00D0               	movwf	dtoa@n^(0+128)
  5226  0453  083D               	movf	(dtoa@d+1)^(0+128),w
  5227  0454  00D1               	movwf	(dtoa@n+1)^(0+128)
  5228  0455  083E               	movf	(dtoa@d+2)^(0+128),w
  5229  0456  00D2               	movwf	(dtoa@n+2)^(0+128)
  5230  0457  083F               	movf	(dtoa@d+3)^(0+128),w
  5231  0458  00D3               	movwf	(dtoa@n+3)^(0+128)
  5232  0459  0840               	movf	(dtoa@d+4)^(0+128),w
  5233  045A  00D4               	movwf	(dtoa@n+4)^(0+128)
  5234  045B  0841               	movf	(dtoa@d+5)^(0+128),w
  5235  045C  00D5               	movwf	(dtoa@n+5)^(0+128)
  5236  045D  0842               	movf	(dtoa@d+6)^(0+128),w
  5237  045E  00D6               	movwf	(dtoa@n+6)^(0+128)
  5238  045F  0843               	movf	(dtoa@d+7)^(0+128),w
  5239  0460  00D7               	movwf	(dtoa@n+7)^(0+128)
  5240                           
  5241                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  5242  0461  30D0               	movlw	low dtoa@n
  5243  0462  0086               	movwf	6
  5244  0463  3000               	movlw	high dtoa@n
  5245  0464  0087               	movwf	7
  5246  0465  3F47               	moviw [7]fsr1
  5247  0466  00C4               	movwf	??_dtoa^(0+128)
  5248  0467  1FC4               	btfss	??_dtoa^(0+128),7
  5249  0468  2C6B               	goto	u3880
  5250  0469  3001               	movlw	1
  5251  046A  2C6C               	goto	u3890
  5252  046B                     u3880:	
  5253  046B  3000               	movlw	0
  5254  046C                     u3890:	
  5255  046C  0021               	movlb	1	; select bank1
  5256  046D  00C5               	movwf	(??_dtoa+1)^(0+128)
  5257  046E  01C6               	clrf	((??_dtoa+1)^(0+128)+1)
  5258  046F  0845               	movf	(??_dtoa+1)^(0+128),w
  5259  0470  00CE               	movwf	dtoa@s^(0+128)
  5260  0471  0846               	movf	(??_dtoa+2)^(0+128),w
  5261  0472  00CF               	movwf	(dtoa@s+1)^(0+128)
  5262                           
  5263                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  5264  0473  084E               	movf	dtoa@s^(0+128),w
  5265  0474  044F               	iorwf	(dtoa@s+1)^(0+128),w
  5266  0475  1903               	btfsc	3,2
  5267  0476  2C95               	goto	l449
  5268                           
  5269                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  5270  0477  09D0               	comf	dtoa@n^(0+128),f
  5271  0478  09D1               	comf	(dtoa@n+1)^(0+128),f
  5272  0479  09D2               	comf	(dtoa@n+2)^(0+128),f
  5273  047A  09D3               	comf	(dtoa@n+3)^(0+128),f
  5274  047B  09D4               	comf	(dtoa@n+4)^(0+128),f
  5275  047C  09D5               	comf	(dtoa@n+5)^(0+128),f
  5276  047D  09D6               	comf	(dtoa@n+6)^(0+128),f
  5277  047E  09D7               	comf	(dtoa@n+7)^(0+128),f
  5278  047F  0AD0               	incf	dtoa@n^(0+128),f
  5279  0480  1D03               	skipz
  5280  0481  2C95               	goto	l449
  5281  0482  0AD1               	incf	(dtoa@n+1)^(0+128),f
  5282  0483  1D03               	skipz
  5283  0484  2C95               	goto	l449
  5284  0485  0AD2               	incf	(dtoa@n+2)^(0+128),f
  5285  0486  1D03               	skipz
  5286  0487  2C95               	goto	l449
  5287  0488  0AD3               	incf	(dtoa@n+3)^(0+128),f
  5288  0489  1D03               	skipz
  5289  048A  2C95               	goto	l449
  5290  048B  0AD4               	incf	(dtoa@n+4)^(0+128),f
  5291  048C  1D03               	skipz
  5292  048D  2C95               	goto	l449
  5293  048E  0AD5               	incf	(dtoa@n+5)^(0+128),f
  5294  048F  1D03               	skipz
  5295  0490  2C95               	goto	l449
  5296  0491  0AD6               	incf	(dtoa@n+6)^(0+128),f
  5297  0492  1D03               	skipz
  5298  0493  2C95               	goto	l449
  5299  0494  0AD7               	incf	(dtoa@n+7)^(0+128),f
  5300  0495                     l449:	
  5301                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 284:     }
  5302                           
  5303                           
  5304                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  5305  0495  0021               	movlb	1	; select bank1
  5306  0496  1BED               	btfsc	(_prec+1)^(0+128),7
  5307  0497  2C9C               	goto	l450
  5308                           
  5309                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  5310  0498  30FD               	movlw	253
  5311  0499  05EE               	andwf	_flags^(0+128),f
  5312  049A  30FF               	movlw	255
  5313  049B  05EF               	andwf	(_flags+1)^(0+128),f
  5314  049C                     l450:	
  5315                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 289:     }
  5316                           
  5317                           
  5318                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  5319  049C  086D               	movf	(_prec+1)^(0+128),w
  5320  049D  3A80               	xorlw	128
  5321  049E  00C4               	movwf	??_dtoa^(0+128)
  5322  049F  3080               	movlw	128
  5323  04A0  0244               	subwf	??_dtoa^(0+128),w
  5324  04A1  1D03               	skipz
  5325  04A2  2CA5               	goto	u3935
  5326  04A3  3001               	movlw	1
  5327  04A4  026C               	subwf	_prec^(0+128),w
  5328  04A5                     u3935:	
  5329  04A5  1803               	skipnc
  5330  04A6  2CAD               	goto	l3204
  5331  04A7  3001               	movlw	1
  5332  04A8  0021               	movlb	1	; select bank1
  5333  04A9  00CA               	movwf	dtoa@p^(0+128)
  5334  04AA  3000               	movlw	0
  5335  04AB  00CB               	movwf	(dtoa@p^(0+128)+1)
  5336  04AC  2CB2               	goto	l454
  5337  04AD                     l3204:	
  5338  04AD  0021               	movlb	1	; select bank1
  5339  04AE  086D               	movf	(_prec+1)^(0+128),w
  5340  04AF  00CB               	movwf	(dtoa@p+1)^(0+128)
  5341  04B0  086C               	movf	_prec^(0+128),w
  5342  04B1  00CA               	movwf	dtoa@p^(0+128)
  5343  04B2                     l454:	
  5344                           
  5345                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  5346  04B2  0020               	movlb	0	; select bank0
  5347  04B3  084D               	movf	_width+1,w
  5348  04B4  0021               	movlb	1	; select bank1
  5349  04B5  00CD               	movwf	(dtoa@w+1)^(0+128)
  5350  04B6  0020               	movlb	0	; select bank0
  5351  04B7  084C               	movf	_width,w
  5352  04B8  0021               	movlb	1	; select bank1
  5353  04B9  00CC               	movwf	dtoa@w^(0+128)
  5354                           
  5355                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  5356  04BA  084E               	movf	dtoa@s^(0+128),w
  5357  04BB  044F               	iorwf	(dtoa@s+1)^(0+128),w
  5358  04BC  1D03               	btfss	3,2
  5359  04BD  2CC0               	goto	l3210
  5360  04BE  1D6E               	btfss	_flags^(0+128),2
  5361  04BF  2CC4               	goto	l455
  5362  04C0                     l3210:	
  5363                           
  5364                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  5365  04C0  30FF               	movlw	255
  5366  04C1  07CC               	addwf	dtoa@w^(0+128),f
  5367  04C2  30FF               	movlw	255
  5368  04C3  3DCD               	addwfc	(dtoa@w+1)^(0+128),f
  5369  04C4                     l455:	
  5370                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 294:     }
  5371                           
  5372                           
  5373                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  5374  04C4  301F               	movlw	31
  5375  04C5  00D8               	movwf	dtoa@i^(0+128)
  5376  04C6  3000               	movlw	0
  5377  04C7  00D9               	movwf	(dtoa@i^(0+128)+1)
  5378                           
  5379                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  5380  04C8  0022               	movlb	2	; select bank2
  5381  04C9  01BF               	clrf	(_dbuf^(0+256)+31)
  5382                           
  5383                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5384  04CA  2D59               	goto	l458
  5385  04CB                     l3224:	
  5386  04CB  0021               	movlb	1	; select bank1
  5387  04CC  0850               	movf	dtoa@n^(0+128),w
  5388  04CD  0451               	iorwf	(dtoa@n+1)^(0+128),w
  5389  04CE  0452               	iorwf	(dtoa@n+2)^(0+128),w
  5390  04CF  0453               	iorwf	(dtoa@n+3)^(0+128),w
  5391  04D0  0454               	iorwf	(dtoa@n+4)^(0+128),w
  5392  04D1  0455               	iorwf	(dtoa@n+5)^(0+128),w
  5393  04D2  0456               	iorwf	(dtoa@n+6)^(0+128),w
  5394  04D3  0457               	iorwf	(dtoa@n+7)^(0+128),w
  5395  04D4  1D03               	skipz
  5396  04D5  2CF0               	goto	l3214
  5397  04D6  084B               	movf	(dtoa@p+1)^(0+128),w
  5398  04D7  3A80               	xorlw	128
  5399  04D8  00C4               	movwf	??_dtoa^(0+128)
  5400  04D9  3080               	movlw	128
  5401  04DA  0244               	subwf	??_dtoa^(0+128),w
  5402  04DB  1D03               	skipz
  5403  04DC  2CDF               	goto	u3985
  5404  04DD  3001               	movlw	1
  5405  04DE  024A               	subwf	dtoa@p^(0+128),w
  5406  04DF                     u3985:	
  5407  04DF  1803               	skipnc
  5408  04E0  2CF0               	goto	l3214
  5409  04E1  0021               	movlb	1	; select bank1
  5410  04E2  084D               	movf	(dtoa@w+1)^(0+128),w
  5411  04E3  3A80               	xorlw	128
  5412  04E4  00C4               	movwf	??_dtoa^(0+128)
  5413  04E5  3080               	movlw	128
  5414  04E6  0244               	subwf	??_dtoa^(0+128),w
  5415  04E7  1D03               	skipz
  5416  04E8  2CEB               	goto	u3995
  5417  04E9  3001               	movlw	1
  5418  04EA  024C               	subwf	dtoa@w^(0+128),w
  5419  04EB                     u3995:	
  5420  04EB  1C03               	skipc
  5421  04EC  2D65               	goto	l3232
  5422  04ED  0021               	movlb	1	; select bank1
  5423  04EE  1CEE               	btfss	_flags^(0+128),1
  5424  04EF  2D65               	goto	l3232
  5425  04F0                     l3214:	
  5426                           
  5427                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  5428  04F0  30FF               	movlw	255
  5429  04F1  0021               	movlb	1	; select bank1
  5430  04F2  07D8               	addwf	dtoa@i^(0+128),f
  5431  04F3  30FF               	movlw	255
  5432  04F4  3DD9               	addwfc	(dtoa@i+1)^(0+128),f
  5433                           
  5434                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  5435  04F5  300A               	movlw	10
  5436  04F6  00A0               	movwf	___aomod@divisor^(0+128)
  5437  04F7  01A1               	clrf	(___aomod@divisor+1)^(0+128)
  5438  04F8  01A2               	clrf	(___aomod@divisor+2)^(0+128)
  5439  04F9  01A3               	clrf	(___aomod@divisor+3)^(0+128)
  5440  04FA  01A4               	clrf	(___aomod@divisor+4)^(0+128)
  5441  04FB  01A5               	clrf	(___aomod@divisor+5)^(0+128)
  5442  04FC  01A6               	clrf	(___aomod@divisor+6)^(0+128)
  5443  04FD  01A7               	clrf	(___aomod@divisor+7)^(0+128)
  5444  04FE  0850               	movf	dtoa@n^(0+128),w
  5445  04FF  00A8               	movwf	___aomod@dividend^(0+128)
  5446  0500  0851               	movf	(dtoa@n+1)^(0+128),w
  5447  0501  00A9               	movwf	(___aomod@dividend+1)^(0+128)
  5448  0502  0852               	movf	(dtoa@n+2)^(0+128),w
  5449  0503  00AA               	movwf	(___aomod@dividend+2)^(0+128)
  5450  0504  0853               	movf	(dtoa@n+3)^(0+128),w
  5451  0505  00AB               	movwf	(___aomod@dividend+3)^(0+128)
  5452  0506  0854               	movf	(dtoa@n+4)^(0+128),w
  5453  0507  00AC               	movwf	(___aomod@dividend+4)^(0+128)
  5454  0508  0855               	movf	(dtoa@n+5)^(0+128),w
  5455  0509  00AD               	movwf	(___aomod@dividend+5)^(0+128)
  5456  050A  0856               	movf	(dtoa@n+6)^(0+128),w
  5457  050B  00AE               	movwf	(___aomod@dividend+6)^(0+128)
  5458  050C  0857               	movf	(dtoa@n+7)^(0+128),w
  5459  050D  00AF               	movwf	(___aomod@dividend+7)^(0+128)
  5460  050E  318F  2721  3184   	fcall	___aomod
  5461  0511  0021               	movlb	1	; select bank1
  5462  0512  0821               	movf	(?___aomod+1)^(0+128),w
  5463  0513  00B4               	movwf	(abs@a+1)^(0+128)
  5464  0514  0820               	movf	?___aomod^(0+128),w
  5465  0515  00B3               	movwf	abs@a^(0+128)
  5466  0516  318B  2302  3184   	fcall	_abs
  5467  0519  0021               	movlb	1	; select bank1
  5468  051A  0833               	movf	?_abs^(0+128),w
  5469  051B  3E30               	addlw	48
  5470  051C  00C4               	movwf	??_dtoa^(0+128)
  5471  051D  0858               	movf	dtoa@i^(0+128),w
  5472  051E  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5473  051F  0086               	movwf	6
  5474  0520  3001               	movlw	1	; select bank2/3
  5475  0521  0087               	movwf	7
  5476  0522  0844               	movf	??_dtoa^(0+128),w
  5477  0523  0081               	movwf	1
  5478                           
  5479                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  5480  0524  30FF               	movlw	255
  5481  0525  07CA               	addwf	dtoa@p^(0+128),f
  5482  0526  30FF               	movlw	255
  5483  0527  3DCB               	addwfc	(dtoa@p+1)^(0+128),f
  5484                           
  5485                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  5486  0528  30FF               	movlw	255
  5487  0529  07CC               	addwf	dtoa@w^(0+128),f
  5488  052A  30FF               	movlw	255
  5489  052B  3DCD               	addwfc	(dtoa@w+1)^(0+128),f
  5490                           
  5491                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  5492  052C  300A               	movlw	10
  5493  052D  00A0               	movwf	___aodiv@divisor^(0+128)
  5494  052E  01A1               	clrf	(___aodiv@divisor+1)^(0+128)
  5495  052F  01A2               	clrf	(___aodiv@divisor+2)^(0+128)
  5496  0530  01A3               	clrf	(___aodiv@divisor+3)^(0+128)
  5497  0531  01A4               	clrf	(___aodiv@divisor+4)^(0+128)
  5498  0532  01A5               	clrf	(___aodiv@divisor+5)^(0+128)
  5499  0533  01A6               	clrf	(___aodiv@divisor+6)^(0+128)
  5500  0534  01A7               	clrf	(___aodiv@divisor+7)^(0+128)
  5501  0535  0850               	movf	dtoa@n^(0+128),w
  5502  0536  00A8               	movwf	___aodiv@dividend^(0+128)
  5503  0537  0851               	movf	(dtoa@n+1)^(0+128),w
  5504  0538  00A9               	movwf	(___aodiv@dividend+1)^(0+128)
  5505  0539  0852               	movf	(dtoa@n+2)^(0+128),w
  5506  053A  00AA               	movwf	(___aodiv@dividend+2)^(0+128)
  5507  053B  0853               	movf	(dtoa@n+3)^(0+128),w
  5508  053C  00AB               	movwf	(___aodiv@dividend+3)^(0+128)
  5509  053D  0854               	movf	(dtoa@n+4)^(0+128),w
  5510  053E  00AC               	movwf	(___aodiv@dividend+4)^(0+128)
  5511  053F  0855               	movf	(dtoa@n+5)^(0+128),w
  5512  0540  00AD               	movwf	(___aodiv@dividend+5)^(0+128)
  5513  0541  0856               	movf	(dtoa@n+6)^(0+128),w
  5514  0542  00AE               	movwf	(___aodiv@dividend+6)^(0+128)
  5515  0543  0857               	movf	(dtoa@n+7)^(0+128),w
  5516  0544  00AF               	movwf	(___aodiv@dividend+7)^(0+128)
  5517  0545  3186  26A3  3184   	fcall	___aodiv
  5518  0548  0021               	movlb	1	; select bank1
  5519  0549  0820               	movf	?___aodiv^(0+128),w
  5520  054A  00D0               	movwf	dtoa@n^(0+128)
  5521  054B  0821               	movf	(?___aodiv+1)^(0+128),w
  5522  054C  00D1               	movwf	(dtoa@n+1)^(0+128)
  5523  054D  0822               	movf	(?___aodiv+2)^(0+128),w
  5524  054E  00D2               	movwf	(dtoa@n+2)^(0+128)
  5525  054F  0823               	movf	(?___aodiv+3)^(0+128),w
  5526  0550  00D3               	movwf	(dtoa@n+3)^(0+128)
  5527  0551  0824               	movf	(?___aodiv+4)^(0+128),w
  5528  0552  00D4               	movwf	(dtoa@n+4)^(0+128)
  5529  0553  0825               	movf	(?___aodiv+5)^(0+128),w
  5530  0554  00D5               	movwf	(dtoa@n+5)^(0+128)
  5531  0555  0826               	movf	(?___aodiv+6)^(0+128),w
  5532  0556  00D6               	movwf	(dtoa@n+6)^(0+128)
  5533  0557  0827               	movf	(?___aodiv+7)^(0+128),w
  5534  0558  00D7               	movwf	(dtoa@n+7)^(0+128)
  5535  0559                     l458:	
  5536                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 305:     }
  5537                           
  5538                           
  5539                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5540  0559  0021               	movlb	1	; select bank1
  5541  055A  0859               	movf	(dtoa@i+1)^(0+128),w
  5542  055B  3A80               	xorlw	128
  5543  055C  00C4               	movwf	??_dtoa^(0+128)
  5544  055D  3080               	movlw	128
  5545  055E  0244               	subwf	??_dtoa^(0+128),w
  5546  055F  1D03               	skipz
  5547  0560  2D63               	goto	u3965
  5548  0561  3001               	movlw	1
  5549  0562  0258               	subwf	dtoa@i^(0+128),w
  5550  0563                     u3965:	
  5551  0563  1803               	btfsc	3,0
  5552  0564  2CCB               	goto	l3224
  5553  0565                     l3232:	
  5554                           
  5555                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  5556  0565  0021               	movlb	1	; select bank1
  5557  0566  084E               	movf	dtoa@s^(0+128),w
  5558  0567  044F               	iorwf	(dtoa@s+1)^(0+128),w
  5559  0568  1D03               	btfss	3,2
  5560  0569  2D6C               	goto	l3236
  5561  056A  1D6E               	btfss	_flags^(0+128),2
  5562  056B  2D83               	goto	l3246
  5563  056C                     l3236:	
  5564                           
  5565                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  5566  056C  30FF               	movlw	255
  5567  056D  07D8               	addwf	dtoa@i^(0+128),f
  5568  056E  30FF               	movlw	255
  5569  056F  3DD9               	addwfc	(dtoa@i+1)^(0+128),f
  5570                           
  5571                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  5572  0570  084E               	movf	dtoa@s^(0+128),w
  5573  0571  044F               	iorwf	(dtoa@s+1)^(0+128),w
  5574  0572  1D03               	btfss	3,2
  5575  0573  2D76               	goto	l3242
  5576  0574  302B               	movlw	43
  5577  0575  2D77               	goto	L1
  5578  0576                     l3242:	
  5579  0576  302D               	movlw	45
  5580  0577                     L1:	
  5581  0577  00C7               	movwf	_dtoa$686^(0+128)
  5582  0578  3000               	movlw	0
  5583  0579  00C8               	movwf	(_dtoa$686^(0+128)+1)
  5584  057A  0847               	movf	_dtoa$686^(0+128),w
  5585  057B  00C4               	movwf	??_dtoa^(0+128)
  5586  057C  0858               	movf	dtoa@i^(0+128),w
  5587  057D  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5588  057E  0086               	movwf	6
  5589  057F  3001               	movlw	1	; select bank2/3
  5590  0580  0087               	movwf	7
  5591  0581  0844               	movf	??_dtoa^(0+128),w
  5592  0582  0081               	movwf	1
  5593  0583                     l3246:	
  5594                           
  5595                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  5596  0583  0858               	movf	dtoa@i^(0+128),w
  5597  0584  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5598  0585  00C4               	movwf	??_dtoa^(0+128)
  5599  0586  0844               	movf	??_dtoa^(0+128),w
  5600  0587  00B3               	movwf	pad@buf^(0+128)
  5601  0588  084D               	movf	(dtoa@w+1)^(0+128),w
  5602  0589  00B5               	movwf	(pad@p+1)^(0+128)
  5603  058A  084C               	movf	dtoa@w^(0+128),w
  5604  058B  00B4               	movwf	pad@p^(0+128)
  5605  058C  0849               	movf	dtoa@fp^(0+128),w
  5606  058D  3187  279A         	fcall	_pad
  5607  058F  0021               	movlb	1	; select bank1
  5608  0590  0834               	movf	(?_pad+1)^(0+128),w
  5609  0591  00BD               	movwf	(?_dtoa+1)^(0+128)
  5610  0592  0833               	movf	?_pad^(0+128),w
  5611  0593  00BC               	movwf	?_dtoa^(0+128)
  5612  0594  0008               	return
  5613  0595                     __end_of_dtoa:	
  5614                           
  5615                           	psect	text10
  5616  079A                     __ptext10:	
  5617 ;; *************** function _pad *****************
  5618 ;; Defined at:
  5619 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5620 ;; Parameters:    Size  Location     Type
  5621 ;;  fp              1    wreg     PTR struct _IO_FILE
  5622 ;;		 -> NULL(0), 
  5623 ;;  buf             1   19[BANK1 ] PTR unsigned char 
  5624 ;;		 -> dbuf(32), 
  5625 ;;  p               2   20[BANK1 ] int 
  5626 ;; Auto vars:     Size  Location     Type
  5627 ;;  fp              1   27[BANK1 ] PTR struct _IO_FILE
  5628 ;;		 -> NULL(0), 
  5629 ;;  w               2   25[BANK1 ] int 
  5630 ;;  i               2   23[BANK1 ] int 
  5631 ;; Return value:  Size  Location     Type
  5632 ;;                  2   19[BANK1 ] int 
  5633 ;; Registers used:
  5634 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5635 ;; Tracked objects:
  5636 ;;		On entry : 0/0
  5637 ;;		On exit  : 0/0
  5638 ;;		Unchanged: 0/0
  5639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5640 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5641 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  5642 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5643 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  5644 ;;Total ram usage:        9 bytes
  5645 ;; Hardware stack levels used:    1
  5646 ;; Hardware stack levels required when called:   10
  5647 ;; This function calls:
  5648 ;;		_fputc
  5649 ;;		_fputs
  5650 ;;		_strlen
  5651 ;; This function is called by:
  5652 ;;		_dtoa
  5653 ;; This function uses a non-reentrant model
  5654 ;;
  5655                           
  5656                           
  5657                           ;psect for function _pad
  5658  079A                     _pad:	
  5659                           
  5660                           ;incstack = 0
  5661                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5662                           ;pad@fp stored from wreg
  5663  079A  0021               	movlb	1	; select bank1
  5664  079B  00BB               	movwf	pad@fp^(0+128)
  5665                           
  5666                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  5667  079C  1C6E               	btfss	_flags^(0+128),0
  5668  079D  2FA9               	goto	l3102
  5669                           
  5670                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  5671  079E  0833               	movf	pad@buf^(0+128),w
  5672  079F  00AA               	movwf	fputs@s^(0+128)
  5673  07A0  3001               	movlw	1
  5674  07A1  00AB               	movwf	(fputs@s+1)^(0+128)
  5675  07A2  083B               	movf	pad@fp^(0+128),w
  5676  07A3  00B6               	movwf	??_pad^(0+128)
  5677  07A4  0836               	movf	??_pad^(0+128),w
  5678  07A5  00AC               	movwf	fputs@fp^(0+128)
  5679  07A6  318B  23B3  3187   	fcall	_fputs
  5680  07A9                     l3102:	
  5681                           
  5682                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  5683  07A9  0021               	movlb	1	; select bank1
  5684  07AA  1BB5               	btfsc	(pad@p+1)^(0+128),7
  5685  07AB  2FB1               	goto	l3106
  5686  07AC  0835               	movf	(pad@p+1)^(0+128),w
  5687  07AD  00BA               	movwf	(pad@w+1)^(0+128)
  5688  07AE  0834               	movf	pad@p^(0+128),w
  5689  07AF  00B9               	movwf	pad@w^(0+128)
  5690  07B0  2FB3               	goto	l441
  5691  07B1                     l3106:	
  5692  07B1  01B9               	clrf	pad@w^(0+128)
  5693  07B2  01BA               	clrf	(pad@w+1)^(0+128)
  5694  07B3                     l441:	
  5695                           
  5696                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  5697  07B3  01B7               	clrf	pad@i^(0+128)
  5698  07B4  01B8               	clrf	(pad@i+1)^(0+128)
  5699  07B5                     l3112:	
  5700                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  5701                           
  5702                           
  5703                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  5704  07B5  0838               	movf	(pad@i+1)^(0+128),w
  5705  07B6  3A80               	xorlw	128
  5706  07B7  00B6               	movwf	??_pad^(0+128)
  5707  07B8  083A               	movf	(pad@w+1)^(0+128),w
  5708  07B9  3A80               	xorlw	128
  5709  07BA  0236               	subwf	??_pad^(0+128),w
  5710  07BB  1D03               	skipz
  5711  07BC  2FBF               	goto	u3645
  5712  07BD  0839               	movf	pad@w^(0+128),w
  5713  07BE  0237               	subwf	pad@i^(0+128),w
  5714  07BF                     u3645:	
  5715  07BF  1803               	btfsc	3,0
  5716  07C0  2FD3               	goto	l444
  5717                           
  5718                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  5719  07C1  3020               	movlw	32
  5720  07C2  0021               	movlb	1	; select bank1
  5721  07C3  00A2               	movwf	fputc@c^(0+128)
  5722  07C4  3000               	movlw	0
  5723  07C5  00A3               	movwf	(fputc@c^(0+128)+1)
  5724  07C6  083B               	movf	pad@fp^(0+128),w
  5725  07C7  00B6               	movwf	??_pad^(0+128)
  5726  07C8  0836               	movf	??_pad^(0+128),w
  5727  07C9  00A4               	movwf	fputc@fp^(0+128)
  5728  07CA  318C  24AF  3187   	fcall	_fputc
  5729                           
  5730                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  5731  07CD  3001               	movlw	1
  5732  07CE  0021               	movlb	1	; select bank1
  5733  07CF  07B7               	addwf	pad@i^(0+128),f
  5734  07D0  3000               	movlw	0
  5735  07D1  3DB8               	addwfc	(pad@i+1)^(0+128),f
  5736  07D2  2FB5               	goto	l3112
  5737  07D3                     l444:	
  5738                           
  5739                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  5740  07D3  0021               	movlb	1	; select bank1
  5741  07D4  186E               	btfsc	_flags^(0+128),0
  5742  07D5  2FE1               	goto	l3116
  5743                           
  5744                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  5745  07D6  0833               	movf	pad@buf^(0+128),w
  5746  07D7  00AA               	movwf	fputs@s^(0+128)
  5747  07D8  3001               	movlw	1
  5748  07D9  00AB               	movwf	(fputs@s+1)^(0+128)
  5749  07DA  083B               	movf	pad@fp^(0+128),w
  5750  07DB  00B6               	movwf	??_pad^(0+128)
  5751  07DC  0836               	movf	??_pad^(0+128),w
  5752  07DD  00AC               	movwf	fputs@fp^(0+128)
  5753  07DE  318B  23B3  3187   	fcall	_fputs
  5754  07E1                     l3116:	
  5755                           
  5756                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  5757  07E1  0021               	movlb	1	; select bank1
  5758  07E2  0833               	movf	pad@buf^(0+128),w
  5759  07E3  318B  231B         	fcall	_strlen
  5760  07E5  0021               	movlb	1	; select bank1
  5761  07E6  0839               	movf	pad@w^(0+128),w
  5762  07E7  0720               	addwf	?_strlen^(0+128),w
  5763  07E8  00B3               	movwf	?_pad^(0+128)
  5764  07E9  083A               	movf	(pad@w+1)^(0+128),w
  5765  07EA  3D21               	addwfc	(?_strlen+1)^(0+128),w
  5766  07EB  00B4               	movwf	(?_pad+1)^(0+128)
  5767  07EC  0008               	return
  5768  07ED                     __end_of_pad:	
  5769                           
  5770                           	psect	text11
  5771  0B1B                     __ptext11:	
  5772 ;; *************** function _strlen *****************
  5773 ;; Defined at:
  5774 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  5775 ;; Parameters:    Size  Location     Type
  5776 ;;  s               1    wreg     PTR const unsigned char 
  5777 ;;		 -> dbuf(32), 
  5778 ;; Auto vars:     Size  Location     Type
  5779 ;;  s               1    4[BANK1 ] PTR const unsigned char 
  5780 ;;		 -> dbuf(32), 
  5781 ;;  a               1    3[BANK1 ] PTR const unsigned char 
  5782 ;;		 -> dbuf(32), 
  5783 ;; Return value:  Size  Location     Type
  5784 ;;                  2    0[BANK1 ] unsigned int 
  5785 ;; Registers used:
  5786 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5787 ;; Tracked objects:
  5788 ;;		On entry : 0/0
  5789 ;;		On exit  : 0/0
  5790 ;;		Unchanged: 0/0
  5791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5792 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5793 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5794 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5795 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  5796 ;;Total ram usage:        5 bytes
  5797 ;; Hardware stack levels used:    1
  5798 ;; Hardware stack levels required when called:    6
  5799 ;; This function calls:
  5800 ;;		Nothing
  5801 ;; This function is called by:
  5802 ;;		_pad
  5803 ;; This function uses a non-reentrant model
  5804 ;;
  5805                           
  5806                           
  5807                           ;psect for function _strlen
  5808  0B1B                     _strlen:	
  5809                           
  5810                           ;incstack = 0
  5811                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  5812                           ;strlen@s stored from wreg
  5813  0B1B  0021               	movlb	1	; select bank1
  5814  0B1C  00A4               	movwf	strlen@s^(0+128)
  5815  0B1D  0824               	movf	strlen@s^(0+128),w
  5816  0B1E  00A2               	movwf	??_strlen^(0+128)
  5817  0B1F  0822               	movf	??_strlen^(0+128),w
  5818  0B20  00A3               	movwf	strlen@a^(0+128)
  5819  0B21                     l3092:	
  5820  0B21  0824               	movf	strlen@s^(0+128),w
  5821  0B22  0086               	movwf	6
  5822  0B23  3001               	movlw	1	; select bank2/3
  5823  0B24  0087               	movwf	7
  5824  0B25  0801               	movf	1,w
  5825  0B26  1903               	btfsc	3,2
  5826  0B27  2B2D               	goto	l3094
  5827  0B28  3001               	movlw	1
  5828  0B29  00A2               	movwf	??_strlen^(0+128)
  5829  0B2A  0822               	movf	??_strlen^(0+128),w
  5830  0B2B  07A4               	addwf	strlen@s^(0+128),f
  5831  0B2C  2B21               	goto	l3092
  5832  0B2D                     l3094:	
  5833  0B2D  0823               	movf	strlen@a^(0+128),w
  5834  0B2E  0224               	subwf	strlen@s^(0+128),w
  5835  0B2F  00A0               	movwf	?_strlen^(0+128)
  5836  0B30  01A1               	clrf	(?_strlen+1)^(0+128)
  5837  0B31  1BA0               	btfsc	?_strlen^(0+128),7
  5838  0B32  03A1               	decf	(?_strlen+1)^(0+128),f
  5839  0B33  0008               	return
  5840  0B34                     __end_of_strlen:	
  5841                           
  5842                           	psect	text12
  5843  0BB3                     __ptext12:	
  5844 ;; *************** function _fputs *****************
  5845 ;; Defined at:
  5846 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  5847 ;; Parameters:    Size  Location     Type
  5848 ;;  s               2   10[BANK1 ] PTR const unsigned char 
  5849 ;;		 -> dbuf(32), STR_3(3), hrDisp(13), distanceDisp(11), 
  5850 ;;		 -> speedDisp(8), 
  5851 ;;  fp              1   12[BANK1 ] PTR struct _IO_FILE
  5852 ;;		 -> NULL(0), 
  5853 ;; Auto vars:     Size  Location     Type
  5854 ;;  i               2   17[BANK1 ] int 
  5855 ;;  c               1   16[BANK1 ] unsigned char 
  5856 ;; Return value:  Size  Location     Type
  5857 ;;                  2   10[BANK1 ] int 
  5858 ;; Registers used:
  5859 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5860 ;; Tracked objects:
  5861 ;;		On entry : 0/0
  5862 ;;		On exit  : 0/0
  5863 ;;		Unchanged: 0/0
  5864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5865 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5866 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5867 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5868 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  5869 ;;Total ram usage:        9 bytes
  5870 ;; Hardware stack levels used:    1
  5871 ;; Hardware stack levels required when called:    9
  5872 ;; This function calls:
  5873 ;;		_fputc
  5874 ;; This function is called by:
  5875 ;;		_pad
  5876 ;;		_puts
  5877 ;; This function uses a non-reentrant model
  5878 ;;
  5879                           
  5880                           
  5881                           ;psect for function _fputs
  5882  0BB3                     _fputs:	
  5883                           
  5884                           ;incstack = 0
  5885                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5886  0BB3  0021               	movlb	1	; select bank1
  5887  0BB4  01B1               	clrf	fputs@i^(0+128)
  5888  0BB5  01B2               	clrf	(fputs@i+1)^(0+128)
  5889  0BB6                     l3082:	
  5890  0BB6  082A               	movf	fputs@s^(0+128),w
  5891  0BB7  0731               	addwf	fputs@i^(0+128),w
  5892  0BB8  0084               	movwf	4
  5893  0BB9  082B               	movf	(fputs@s+1)^(0+128),w
  5894  0BBA  3D32               	addwfc	(fputs@i+1)^(0+128),w
  5895  0BBB  0085               	movwf	5
  5896  0BBC  0800               	movf	0,w	;code access
  5897  0BBD  00AD               	movwf	??_fputs^(0+128)
  5898  0BBE  082D               	movf	??_fputs^(0+128),w
  5899  0BBF  00B0               	movwf	fputs@c^(0+128)
  5900  0BC0  0830               	movf	fputs@c^(0+128),w
  5901  0BC1  1903               	btfsc	3,2
  5902  0BC2  2BD7               	goto	l3084
  5903  0BC3  0830               	movf	fputs@c^(0+128),w
  5904  0BC4  00AD               	movwf	??_fputs^(0+128)
  5905  0BC5  01AE               	clrf	(??_fputs^(0+128)+1)
  5906  0BC6  082D               	movf	??_fputs^(0+128),w
  5907  0BC7  00A2               	movwf	fputc@c^(0+128)
  5908  0BC8  082E               	movf	(??_fputs+1)^(0+128),w
  5909  0BC9  00A3               	movwf	(fputc@c+1)^(0+128)
  5910  0BCA  082C               	movf	fputs@fp^(0+128),w
  5911  0BCB  00AF               	movwf	(??_fputs+2)^(0+128)
  5912  0BCC  082F               	movf	(??_fputs+2)^(0+128),w
  5913  0BCD  00A4               	movwf	fputc@fp^(0+128)
  5914  0BCE  318C  24AF  318B   	fcall	_fputc
  5915  0BD1  3001               	movlw	1
  5916  0BD2  0021               	movlb	1	; select bank1
  5917  0BD3  07B1               	addwf	fputs@i^(0+128),f
  5918  0BD4  3000               	movlw	0
  5919  0BD5  3DB2               	addwfc	(fputs@i+1)^(0+128),f
  5920  0BD6  2BB6               	goto	l3082
  5921  0BD7                     l3084:	
  5922  0BD7  0832               	movf	(fputs@i+1)^(0+128),w
  5923  0BD8  00AB               	movwf	(?_fputs+1)^(0+128)
  5924  0BD9  0831               	movf	fputs@i^(0+128),w
  5925  0BDA  00AA               	movwf	?_fputs^(0+128)
  5926  0BDB  0008               	return
  5927  0BDC                     __end_of_fputs:	
  5928                           
  5929                           	psect	text13
  5930  0CAF                     __ptext13:	
  5931 ;; *************** function _fputc *****************
  5932 ;; Defined at:
  5933 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  5934 ;; Parameters:    Size  Location     Type
  5935 ;;  c               2    2[BANK1 ] int 
  5936 ;;  fp              1    4[BANK1 ] PTR struct _IO_FILE
  5937 ;;		 -> NULL(0), 
  5938 ;; Auto vars:     Size  Location     Type
  5939 ;;		None
  5940 ;; Return value:  Size  Location     Type
  5941 ;;                  2    2[BANK1 ] int 
  5942 ;; Registers used:
  5943 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5944 ;; Tracked objects:
  5945 ;;		On entry : 0/0
  5946 ;;		On exit  : 0/0
  5947 ;;		Unchanged: 0/0
  5948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5949 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5951 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  5952 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  5953 ;;Total ram usage:        8 bytes
  5954 ;; Hardware stack levels used:    1
  5955 ;; Hardware stack levels required when called:    8
  5956 ;; This function calls:
  5957 ;;		_putch
  5958 ;; This function is called by:
  5959 ;;		_pad
  5960 ;;		_vfpfcnvrt
  5961 ;;		_fputs
  5962 ;;		_puts
  5963 ;; This function uses a non-reentrant model
  5964 ;;
  5965                           
  5966                           
  5967                           ;psect for function _fputc
  5968  0CAF                     _fputc:	
  5969                           
  5970                           ;incstack = 0
  5971                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5972  0CAF  0021               	movlb	1	; select bank1
  5973  0CB0  0824               	movf	fputc@fp^(0+128),w
  5974  0CB1  1D03               	btfss	3,2
  5975  0CB2  0824               	movf	fputc@fp^(0+128),w
  5976  0CB3  1D03               	btfss	3,2
  5977  0CB4  2CBA               	goto	l3066
  5978  0CB5  0822               	movf	fputc@c^(0+128),w
  5979  0CB6  318A  2238  318C   	fcall	_putch
  5980  0CB9  2CE6               	goto	l3072
  5981  0CBA                     l3066:	
  5982  0CBA  0824               	movf	fputc@fp^(0+128),w
  5983  0CBB  3E03               	addlw	3
  5984  0CBC  0086               	movwf	6
  5985  0CBD  0187               	clrf	7
  5986  0CBE  0016               	moviw fsr1++
  5987  0CBF  0401               	iorwf	1,w
  5988  0CC0  1903               	btfsc	3,2
  5989  0CC1  2CDD               	goto	l3070
  5990  0CC2  0824               	movf	fputc@fp^(0+128),w
  5991  0CC3  3E03               	addlw	3
  5992  0CC4  0086               	movwf	6
  5993  0CC5  0187               	clrf	7
  5994  0CC6  3F40               	moviw [0]fsr1
  5995  0CC7  00A5               	movwf	??_fputc^(0+128)
  5996  0CC8  3F41               	moviw [1]fsr1
  5997  0CC9  00A6               	movwf	(??_fputc^(0+128)+1)
  5998  0CCA  0A24               	incf	fputc@fp^(0+128),w
  5999  0CCB  0086               	movwf	6
  6000  0CCC  0187               	clrf	7
  6001  0CCD  3F40               	moviw [0]fsr1
  6002  0CCE  00A7               	movwf	(??_fputc+2)^(0+128)
  6003  0CCF  3F41               	moviw [1]fsr1
  6004  0CD0  00A8               	movwf	((??_fputc+2)^(0+128)+1)
  6005  0CD1  0828               	movf	(??_fputc+3)^(0+128),w
  6006  0CD2  3A80               	xorlw	128
  6007  0CD3  00A9               	movwf	(??_fputc+4)^(0+128)
  6008  0CD4  0826               	movf	(??_fputc+1)^(0+128),w
  6009  0CD5  3A80               	xorlw	128
  6010  0CD6  0229               	subwf	(??_fputc+4)^(0+128),w
  6011  0CD7  1D03               	skipz
  6012  0CD8  2CDB               	goto	u3595
  6013  0CD9  0825               	movf	??_fputc^(0+128),w
  6014  0CDA  0227               	subwf	(??_fputc+2)^(0+128),w
  6015  0CDB                     u3595:	
  6016  0CDB  1803               	skipnc
  6017  0CDC  2CE6               	goto	l3072
  6018  0CDD                     l3070:	
  6019  0CDD  0021               	movlb	1	; select bank1
  6020  0CDE  0A24               	incf	fputc@fp^(0+128),w
  6021  0CDF  0086               	movwf	6
  6022  0CE0  0187               	clrf	7
  6023  0CE1  3001               	movlw	1
  6024  0CE2  0781               	addwf	1,f
  6025  0CE3  3141               	addfsr 1,1
  6026  0CE4  1803               	skipnc
  6027  0CE5  0A81               	incf	1,f
  6028  0CE6                     l3072:	
  6029  0CE6  0021               	movlb	1	; select bank1
  6030  0CE7  0822               	movf	fputc@c^(0+128),w
  6031  0CE8  00A5               	movwf	??_fputc^(0+128)
  6032  0CE9  01A6               	clrf	(??_fputc^(0+128)+1)
  6033  0CEA  0825               	movf	??_fputc^(0+128),w
  6034  0CEB  00A2               	movwf	?_fputc^(0+128)
  6035  0CEC  0826               	movf	(??_fputc+1)^(0+128),w
  6036  0CED  00A3               	movwf	(?_fputc+1)^(0+128)
  6037  0CEE  0008               	return
  6038  0CEF                     __end_of_fputc:	
  6039                           
  6040                           	psect	text14
  6041  0A38                     __ptext14:	
  6042 ;; *************** function _putch *****************
  6043 ;; Defined at:
  6044 ;;		line 151 in file "mcc_generated_files/eusart.c"
  6045 ;; Parameters:    Size  Location     Type
  6046 ;;  txData          1    wreg     unsigned char 
  6047 ;; Auto vars:     Size  Location     Type
  6048 ;;  txData          1    1[BANK1 ] unsigned char 
  6049 ;; Return value:  Size  Location     Type
  6050 ;;                  1    wreg      void 
  6051 ;; Registers used:
  6052 ;;		wreg, status,2, status,0, pclath, cstack
  6053 ;; Tracked objects:
  6054 ;;		On entry : 0/0
  6055 ;;		On exit  : 0/0
  6056 ;;		Unchanged: 0/0
  6057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6059 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6061 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6062 ;;Total ram usage:        1 bytes
  6063 ;; Hardware stack levels used:    1
  6064 ;; Hardware stack levels required when called:    7
  6065 ;; This function calls:
  6066 ;;		_EUSART_Write
  6067 ;; This function is called by:
  6068 ;;		_fputc
  6069 ;; This function uses a non-reentrant model
  6070 ;;
  6071                           
  6072                           
  6073                           ;psect for function _putch
  6074  0A38                     _putch:	
  6075                           
  6076                           ;incstack = 0
  6077                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  6078                           ;putch@txData stored from wreg
  6079  0A38  0021               	movlb	1	; select bank1
  6080  0A39  00A1               	movwf	putch@txData^(0+128)
  6081                           
  6082                           ;mcc_generated_files/eusart.c: 151: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 152: {;mcc_generated_files/eusart.c: 153:     EUSART_Write(txData);
  6083  0A3A  0821               	movf	putch@txData^(0+128),w
  6084  0A3B  318A  2290         	fcall	_EUSART_Write
  6085  0A3D  0008               	return
  6086  0A3E                     __end_of_putch:	
  6087                           
  6088                           	psect	text15
  6089  0A90                     __ptext15:	
  6090 ;; *************** function _EUSART_Write *****************
  6091 ;; Defined at:
  6092 ;;		line 137 in file "mcc_generated_files/eusart.c"
  6093 ;; Parameters:    Size  Location     Type
  6094 ;;  txData          1    wreg     unsigned char 
  6095 ;; Auto vars:     Size  Location     Type
  6096 ;;  txData          1    0[BANK1 ] unsigned char 
  6097 ;; Return value:  Size  Location     Type
  6098 ;;                  1    wreg      void 
  6099 ;; Registers used:
  6100 ;;		wreg
  6101 ;; Tracked objects:
  6102 ;;		On entry : 0/0
  6103 ;;		On exit  : 0/0
  6104 ;;		Unchanged: 0/0
  6105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6107 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6109 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6110 ;;Total ram usage:        1 bytes
  6111 ;; Hardware stack levels used:    1
  6112 ;; Hardware stack levels required when called:    6
  6113 ;; This function calls:
  6114 ;;		Nothing
  6115 ;; This function is called by:
  6116 ;;		_putch
  6117 ;;		_setCursor
  6118 ;;		_backlightBrightness
  6119 ;; This function uses a non-reentrant model
  6120 ;;
  6121                           
  6122                           
  6123                           ;psect for function _EUSART_Write
  6124  0A90                     _EUSART_Write:	
  6125                           
  6126                           ;incstack = 0
  6127                           ; Regs used in _EUSART_Write: [wreg]
  6128                           ;EUSART_Write@txData stored from wreg
  6129  0A90  0021               	movlb	1	; select bank1
  6130  0A91  00A0               	movwf	EUSART_Write@txData^(0+128)
  6131  0A92                     l69:	
  6132                           ;mcc_generated_files/eusart.c: 140:     {;mcc_generated_files/eusart.c: 141:     }
  6133                           
  6134                           
  6135                           ;mcc_generated_files/eusart.c: 139:     while(0 == PIR1bits.TXIF)
  6136  0A92  0020               	movlb	0	; select bank0
  6137  0A93  1E10               	btfss	16,4	;volatile
  6138  0A94  2A92               	goto	l69
  6139                           
  6140                           ;mcc_generated_files/eusart.c: 143:     TX1REG = txData;
  6141  0A95  0021               	movlb	1	; select bank1
  6142  0A96  0820               	movf	EUSART_Write@txData^(0+128),w
  6143  0A97  0023               	movlb	3	; select bank3
  6144  0A98  009A               	movwf	26	;volatile
  6145  0A99  0008               	return
  6146  0A9A                     __end_of_EUSART_Write:	
  6147                           
  6148                           	psect	text16
  6149  0B02                     __ptext16:	
  6150 ;; *************** function _abs *****************
  6151 ;; Defined at:
  6152 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  6153 ;; Parameters:    Size  Location     Type
  6154 ;;  a               2   19[BANK1 ] int 
  6155 ;; Auto vars:     Size  Location     Type
  6156 ;;		None
  6157 ;; Return value:  Size  Location     Type
  6158 ;;                  2   19[BANK1 ] int 
  6159 ;; Registers used:
  6160 ;;		wreg, status,2, status,0
  6161 ;; Tracked objects:
  6162 ;;		On entry : 0/0
  6163 ;;		On exit  : 0/0
  6164 ;;		Unchanged: 0/0
  6165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6166 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6168 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6169 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  6170 ;;Total ram usage:        4 bytes
  6171 ;; Hardware stack levels used:    1
  6172 ;; Hardware stack levels required when called:    6
  6173 ;; This function calls:
  6174 ;;		Nothing
  6175 ;; This function is called by:
  6176 ;;		_dtoa
  6177 ;; This function uses a non-reentrant model
  6178 ;;
  6179                           
  6180                           
  6181                           ;psect for function _abs
  6182  0B02                     _abs:	
  6183                           
  6184                           ;incstack = 0
  6185                           ; Regs used in _abs: [wreg+status,2+status,0]
  6186  0B02  0021               	movlb	1	; select bank1
  6187  0B03  0834               	movf	(abs@a+1)^(0+128),w
  6188  0B04  3A80               	xorlw	128
  6189  0B05  00B5               	movwf	??_abs^(0+128)
  6190  0B06  3080               	movlw	128
  6191  0B07  0235               	subwf	??_abs^(0+128),w
  6192  0B08  1D03               	skipz
  6193  0B09  2B0C               	goto	u3665
  6194  0B0A  3001               	movlw	1
  6195  0B0B  0233               	subwf	abs@a^(0+128),w
  6196  0B0C                     u3665:	
  6197  0B0C  1803               	skipnc
  6198  0B0D  0008               	return
  6199  0B0E  0021               	movlb	1	; select bank1
  6200  0B0F  0933               	comf	abs@a^(0+128),w
  6201  0B10  00B5               	movwf	??_abs^(0+128)
  6202  0B11  0934               	comf	(abs@a+1)^(0+128),w
  6203  0B12  00B6               	movwf	(??_abs^(0+128)+1)
  6204  0B13  0AB5               	incf	??_abs^(0+128),f
  6205  0B14  1903               	skipnz
  6206  0B15  0AB6               	incf	(??_abs^(0+128)+1),f
  6207  0B16  0835               	movf	??_abs^(0+128),w
  6208  0B17  00B3               	movwf	?_abs^(0+128)
  6209  0B18  0836               	movf	(??_abs+1)^(0+128),w
  6210  0B19  00B4               	movwf	(?_abs+1)^(0+128)
  6211  0B1A  0008               	return
  6212  0B1B                     __end_of_abs:	
  6213                           
  6214                           	psect	text17
  6215  0F21                     __ptext17:	
  6216 ;; *************** function ___aomod *****************
  6217 ;; Defined at:
  6218 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  6219 ;; Parameters:    Size  Location     Type
  6220 ;;  divisor         8    0[BANK1 ] long long 
  6221 ;;  dividend        8    8[BANK1 ] long long 
  6222 ;; Auto vars:     Size  Location     Type
  6223 ;;  sign            1   18[BANK1 ] unsigned char 
  6224 ;;  counter         1   17[BANK1 ] unsigned char 
  6225 ;; Return value:  Size  Location     Type
  6226 ;;                  8    0[BANK1 ] long long 
  6227 ;; Registers used:
  6228 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6229 ;; Tracked objects:
  6230 ;;		On entry : 0/0
  6231 ;;		On exit  : 0/0
  6232 ;;		Unchanged: 0/0
  6233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6234 ;;      Params:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  6235 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6236 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6237 ;;      Totals:         0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0
  6238 ;;Total ram usage:       19 bytes
  6239 ;; Hardware stack levels used:    1
  6240 ;; Hardware stack levels required when called:    6
  6241 ;; This function calls:
  6242 ;;		Nothing
  6243 ;; This function is called by:
  6244 ;;		_dtoa
  6245 ;; This function uses a non-reentrant model
  6246 ;;
  6247                           
  6248                           
  6249                           ;psect for function ___aomod
  6250  0F21                     ___aomod:	
  6251                           
  6252                           ;incstack = 0
  6253                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  6254  0F21  0021               	movlb	1	; select bank1
  6255  0F22  01B2               	clrf	___aomod@sign^(0+128)
  6256  0F23  30A8               	movlw	low ___aomod@dividend
  6257  0F24  0086               	movwf	6
  6258  0F25  3000               	movlw	high ___aomod@dividend
  6259  0F26  0087               	movwf	7
  6260  0F27  3F47               	moviw [7]fsr1
  6261  0F28  00B0               	movwf	??___aomod^(0+128)
  6262  0F29  1FB0               	btfss	??___aomod^(0+128),7
  6263  0F2A  2F4D               	goto	l3168
  6264  0F2B  0021               	movlb	1	; select bank1
  6265  0F2C  09A8               	comf	___aomod@dividend^(0+128),f
  6266  0F2D  09A9               	comf	(___aomod@dividend+1)^(0+128),f
  6267  0F2E  09AA               	comf	(___aomod@dividend+2)^(0+128),f
  6268  0F2F  09AB               	comf	(___aomod@dividend+3)^(0+128),f
  6269  0F30  09AC               	comf	(___aomod@dividend+4)^(0+128),f
  6270  0F31  09AD               	comf	(___aomod@dividend+5)^(0+128),f
  6271  0F32  09AE               	comf	(___aomod@dividend+6)^(0+128),f
  6272  0F33  09AF               	comf	(___aomod@dividend+7)^(0+128),f
  6273  0F34  0AA8               	incf	___aomod@dividend^(0+128),f
  6274  0F35  1D03               	skipz
  6275  0F36  2F4A               	goto	u379lld
  6276  0F37  0AA9               	incf	(___aomod@dividend+1)^(0+128),f
  6277  0F38  1D03               	skipz
  6278  0F39  2F4A               	goto	u379lld
  6279  0F3A  0AAA               	incf	(___aomod@dividend+2)^(0+128),f
  6280  0F3B  1D03               	skipz
  6281  0F3C  2F4A               	goto	u379lld
  6282  0F3D  0AAB               	incf	(___aomod@dividend+3)^(0+128),f
  6283  0F3E  1D03               	skipz
  6284  0F3F  2F4A               	goto	u379lld
  6285  0F40  0AAC               	incf	(___aomod@dividend+4)^(0+128),f
  6286  0F41  1D03               	skipz
  6287  0F42  2F4A               	goto	u379lld
  6288  0F43  0AAD               	incf	(___aomod@dividend+5)^(0+128),f
  6289  0F44  1D03               	skipz
  6290  0F45  2F4A               	goto	u379lld
  6291  0F46  0AAE               	incf	(___aomod@dividend+6)^(0+128),f
  6292  0F47  1D03               	skipz
  6293  0F48  2F4A               	goto	u379lld
  6294  0F49  0AAF               	incf	(___aomod@dividend+7)^(0+128),f
  6295  0F4A                     u379lld:	
  6296  0F4A  0021               	movlb	1	; select bank1
  6297  0F4B  01B2               	clrf	___aomod@sign^(0+128)
  6298  0F4C  0AB2               	incf	___aomod@sign^(0+128),f
  6299  0F4D                     l3168:	
  6300  0F4D  30A0               	movlw	low ___aomod@divisor
  6301  0F4E  0086               	movwf	6
  6302  0F4F  3000               	movlw	high ___aomod@divisor
  6303  0F50  0087               	movwf	7
  6304  0F51  3F47               	moviw [7]fsr1
  6305  0F52  0021               	movlb	1	; select bank1
  6306  0F53  00B0               	movwf	??___aomod^(0+128)
  6307  0F54  1FB0               	btfss	??___aomod^(0+128),7
  6308  0F55  2F75               	goto	l3172
  6309  0F56  0021               	movlb	1	; select bank1
  6310  0F57  09A0               	comf	___aomod@divisor^(0+128),f
  6311  0F58  09A1               	comf	(___aomod@divisor+1)^(0+128),f
  6312  0F59  09A2               	comf	(___aomod@divisor+2)^(0+128),f
  6313  0F5A  09A3               	comf	(___aomod@divisor+3)^(0+128),f
  6314  0F5B  09A4               	comf	(___aomod@divisor+4)^(0+128),f
  6315  0F5C  09A5               	comf	(___aomod@divisor+5)^(0+128),f
  6316  0F5D  09A6               	comf	(___aomod@divisor+6)^(0+128),f
  6317  0F5E  09A7               	comf	(___aomod@divisor+7)^(0+128),f
  6318  0F5F  0AA0               	incf	___aomod@divisor^(0+128),f
  6319  0F60  1D03               	skipz
  6320  0F61  2F75               	goto	l3172
  6321  0F62  0AA1               	incf	(___aomod@divisor+1)^(0+128),f
  6322  0F63  1D03               	skipz
  6323  0F64  2F75               	goto	l3172
  6324  0F65  0AA2               	incf	(___aomod@divisor+2)^(0+128),f
  6325  0F66  1D03               	skipz
  6326  0F67  2F75               	goto	l3172
  6327  0F68  0AA3               	incf	(___aomod@divisor+3)^(0+128),f
  6328  0F69  1D03               	skipz
  6329  0F6A  2F75               	goto	l3172
  6330  0F6B  0AA4               	incf	(___aomod@divisor+4)^(0+128),f
  6331  0F6C  1D03               	skipz
  6332  0F6D  2F75               	goto	l3172
  6333  0F6E  0AA5               	incf	(___aomod@divisor+5)^(0+128),f
  6334  0F6F  1D03               	skipz
  6335  0F70  2F75               	goto	l3172
  6336  0F71  0AA6               	incf	(___aomod@divisor+6)^(0+128),f
  6337  0F72  1D03               	skipz
  6338  0F73  2F75               	goto	l3172
  6339  0F74  0AA7               	incf	(___aomod@divisor+7)^(0+128),f
  6340  0F75                     l3172:	
  6341  0F75  0021               	movlb	1	; select bank1
  6342  0F76  0820               	movf	___aomod@divisor^(0+128),w
  6343  0F77  0421               	iorwf	(___aomod@divisor+1)^(0+128),w
  6344  0F78  0422               	iorwf	(___aomod@divisor+2)^(0+128),w
  6345  0F79  0423               	iorwf	(___aomod@divisor+3)^(0+128),w
  6346  0F7A  0424               	iorwf	(___aomod@divisor+4)^(0+128),w
  6347  0F7B  0425               	iorwf	(___aomod@divisor+5)^(0+128),w
  6348  0F7C  0426               	iorwf	(___aomod@divisor+6)^(0+128),w
  6349  0F7D  0427               	iorwf	(___aomod@divisor+7)^(0+128),w
  6350  0F7E  1903               	skipnz
  6351  0F7F  2FCD               	goto	l3188
  6352  0F80  01B1               	clrf	___aomod@counter^(0+128)
  6353  0F81  0AB1               	incf	___aomod@counter^(0+128),f
  6354  0F82                     l3180:	
  6355  0F82  1BA7               	btfsc	(___aomod@divisor+7)^(0+128),7
  6356  0F83  2F91               	goto	l3182
  6357  0F84  35A0               	lslf	___aomod@divisor^(0+128),f
  6358  0F85  0DA1               	rlf	(___aomod@divisor+1)^(0+128),f
  6359  0F86  0DA2               	rlf	(___aomod@divisor+2)^(0+128),f
  6360  0F87  0DA3               	rlf	(___aomod@divisor+3)^(0+128),f
  6361  0F88  0DA4               	rlf	(___aomod@divisor+4)^(0+128),f
  6362  0F89  0DA5               	rlf	(___aomod@divisor+5)^(0+128),f
  6363  0F8A  0DA6               	rlf	(___aomod@divisor+6)^(0+128),f
  6364  0F8B  0DA7               	rlf	(___aomod@divisor+7)^(0+128),f
  6365  0F8C  3001               	movlw	1
  6366  0F8D  00B0               	movwf	??___aomod^(0+128)
  6367  0F8E  0830               	movf	??___aomod^(0+128),w
  6368  0F8F  07B1               	addwf	___aomod@counter^(0+128),f
  6369  0F90  2F82               	goto	l3180
  6370  0F91                     l3182:	
  6371  0F91  0827               	movf	(___aomod@divisor+7)^(0+128),w
  6372  0F92  022F               	subwf	(___aomod@dividend+7)^(0+128),w
  6373  0F93  1D03               	skipz
  6374  0F94  2FAF               	goto	u3845
  6375  0F95  0826               	movf	(___aomod@divisor+6)^(0+128),w
  6376  0F96  022E               	subwf	(___aomod@dividend+6)^(0+128),w
  6377  0F97  1D03               	skipz
  6378  0F98  2FAF               	goto	u3845
  6379  0F99  0825               	movf	(___aomod@divisor+5)^(0+128),w
  6380  0F9A  022D               	subwf	(___aomod@dividend+5)^(0+128),w
  6381  0F9B  1D03               	skipz
  6382  0F9C  2FAF               	goto	u3845
  6383  0F9D  0824               	movf	(___aomod@divisor+4)^(0+128),w
  6384  0F9E  022C               	subwf	(___aomod@dividend+4)^(0+128),w
  6385  0F9F  1D03               	skipz
  6386  0FA0  2FAF               	goto	u3845
  6387  0FA1  0823               	movf	(___aomod@divisor+3)^(0+128),w
  6388  0FA2  022B               	subwf	(___aomod@dividend+3)^(0+128),w
  6389  0FA3  1D03               	skipz
  6390  0FA4  2FAF               	goto	u3845
  6391  0FA5  0822               	movf	(___aomod@divisor+2)^(0+128),w
  6392  0FA6  022A               	subwf	(___aomod@dividend+2)^(0+128),w
  6393  0FA7  1D03               	skipz
  6394  0FA8  2FAF               	goto	u3845
  6395  0FA9  0821               	movf	(___aomod@divisor+1)^(0+128),w
  6396  0FAA  0229               	subwf	(___aomod@dividend+1)^(0+128),w
  6397  0FAB  1D03               	skipz
  6398  0FAC  2FAF               	goto	u3845
  6399  0FAD  0820               	movf	___aomod@divisor^(0+128),w
  6400  0FAE  0228               	subwf	___aomod@dividend^(0+128),w
  6401  0FAF                     u3845:	
  6402  0FAF  1C03               	skipc
  6403  0FB0  2FC1               	goto	l3186
  6404  0FB1  0820               	movf	___aomod@divisor^(0+128),w
  6405  0FB2  02A8               	subwf	___aomod@dividend^(0+128),f
  6406  0FB3  0821               	movf	(___aomod@divisor+1)^(0+128),w
  6407  0FB4  3BA9               	subwfb	(___aomod@dividend+1)^(0+128),f
  6408  0FB5  0822               	movf	(___aomod@divisor+2)^(0+128),w
  6409  0FB6  3BAA               	subwfb	(___aomod@dividend+2)^(0+128),f
  6410  0FB7  0823               	movf	(___aomod@divisor+3)^(0+128),w
  6411  0FB8  3BAB               	subwfb	(___aomod@dividend+3)^(0+128),f
  6412  0FB9  0824               	movf	(___aomod@divisor+4)^(0+128),w
  6413  0FBA  3BAC               	subwfb	(___aomod@dividend+4)^(0+128),f
  6414  0FBB  0825               	movf	(___aomod@divisor+5)^(0+128),w
  6415  0FBC  3BAD               	subwfb	(___aomod@dividend+5)^(0+128),f
  6416  0FBD  0826               	movf	(___aomod@divisor+6)^(0+128),w
  6417  0FBE  3BAE               	subwfb	(___aomod@dividend+6)^(0+128),f
  6418  0FBF  0827               	movf	(___aomod@divisor+7)^(0+128),w
  6419  0FC0  3BAF               	subwfb	(___aomod@dividend+7)^(0+128),f
  6420  0FC1                     l3186:	
  6421  0FC1  36A7               	lsrf	(___aomod@divisor+7)^(0+128),f
  6422  0FC2  0CA6               	rrf	(___aomod@divisor+6)^(0+128),f
  6423  0FC3  0CA5               	rrf	(___aomod@divisor+5)^(0+128),f
  6424  0FC4  0CA4               	rrf	(___aomod@divisor+4)^(0+128),f
  6425  0FC5  0CA3               	rrf	(___aomod@divisor+3)^(0+128),f
  6426  0FC6  0CA2               	rrf	(___aomod@divisor+2)^(0+128),f
  6427  0FC7  0CA1               	rrf	(___aomod@divisor+1)^(0+128),f
  6428  0FC8  0CA0               	rrf	___aomod@divisor^(0+128),f
  6429  0FC9  3001               	movlw	1
  6430  0FCA  02B1               	subwf	___aomod@counter^(0+128),f
  6431  0FCB  1D03               	btfss	3,2
  6432  0FCC  2F91               	goto	l3182
  6433  0FCD                     l3188:	
  6434  0FCD  0832               	movf	___aomod@sign^(0+128),w
  6435  0FCE  1903               	btfsc	3,2
  6436  0FCF  2FEE               	goto	l604
  6437  0FD0  09A8               	comf	___aomod@dividend^(0+128),f
  6438  0FD1  09A9               	comf	(___aomod@dividend+1)^(0+128),f
  6439  0FD2  09AA               	comf	(___aomod@dividend+2)^(0+128),f
  6440  0FD3  09AB               	comf	(___aomod@dividend+3)^(0+128),f
  6441  0FD4  09AC               	comf	(___aomod@dividend+4)^(0+128),f
  6442  0FD5  09AD               	comf	(___aomod@dividend+5)^(0+128),f
  6443  0FD6  09AE               	comf	(___aomod@dividend+6)^(0+128),f
  6444  0FD7  09AF               	comf	(___aomod@dividend+7)^(0+128),f
  6445  0FD8  0AA8               	incf	___aomod@dividend^(0+128),f
  6446  0FD9  1D03               	skipz
  6447  0FDA  2FEE               	goto	l604
  6448  0FDB  0AA9               	incf	(___aomod@dividend+1)^(0+128),f
  6449  0FDC  1D03               	skipz
  6450  0FDD  2FEE               	goto	l604
  6451  0FDE  0AAA               	incf	(___aomod@dividend+2)^(0+128),f
  6452  0FDF  1D03               	skipz
  6453  0FE0  2FEE               	goto	l604
  6454  0FE1  0AAB               	incf	(___aomod@dividend+3)^(0+128),f
  6455  0FE2  1D03               	skipz
  6456  0FE3  2FEE               	goto	l604
  6457  0FE4  0AAC               	incf	(___aomod@dividend+4)^(0+128),f
  6458  0FE5  1D03               	skipz
  6459  0FE6  2FEE               	goto	l604
  6460  0FE7  0AAD               	incf	(___aomod@dividend+5)^(0+128),f
  6461  0FE8  1D03               	skipz
  6462  0FE9  2FEE               	goto	l604
  6463  0FEA  0AAE               	incf	(___aomod@dividend+6)^(0+128),f
  6464  0FEB  1D03               	skipz
  6465  0FEC  2FEE               	goto	l604
  6466  0FED  0AAF               	incf	(___aomod@dividend+7)^(0+128),f
  6467  0FEE                     l604:	
  6468  0FEE  0021               	movlb	1	; select bank1
  6469  0FEF  0828               	movf	___aomod@dividend^(0+128),w
  6470  0FF0  00A0               	movwf	?___aomod^(0+128)
  6471  0FF1  0829               	movf	(___aomod@dividend+1)^(0+128),w
  6472  0FF2  00A1               	movwf	(?___aomod+1)^(0+128)
  6473  0FF3  082A               	movf	(___aomod@dividend+2)^(0+128),w
  6474  0FF4  00A2               	movwf	(?___aomod+2)^(0+128)
  6475  0FF5  082B               	movf	(___aomod@dividend+3)^(0+128),w
  6476  0FF6  00A3               	movwf	(?___aomod+3)^(0+128)
  6477  0FF7  082C               	movf	(___aomod@dividend+4)^(0+128),w
  6478  0FF8  00A4               	movwf	(?___aomod+4)^(0+128)
  6479  0FF9  082D               	movf	(___aomod@dividend+5)^(0+128),w
  6480  0FFA  00A5               	movwf	(?___aomod+5)^(0+128)
  6481  0FFB  082E               	movf	(___aomod@dividend+6)^(0+128),w
  6482  0FFC  00A6               	movwf	(?___aomod+6)^(0+128)
  6483  0FFD  082F               	movf	(___aomod@dividend+7)^(0+128),w
  6484  0FFE  00A7               	movwf	(?___aomod+7)^(0+128)
  6485  0FFF  0008               	return
  6486  1000                     __end_of___aomod:	
  6487                           
  6488                           	psect	text18
  6489  06A3                     __ptext18:	
  6490 ;; *************** function ___aodiv *****************
  6491 ;; Defined at:
  6492 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  6493 ;; Parameters:    Size  Location     Type
  6494 ;;  divisor         8    0[BANK1 ] long long 
  6495 ;;  dividend        8    8[BANK1 ] long long 
  6496 ;; Auto vars:     Size  Location     Type
  6497 ;;  quotient        8   19[BANK1 ] long long 
  6498 ;;  sign            1   18[BANK1 ] unsigned char 
  6499 ;;  counter         1   17[BANK1 ] unsigned char 
  6500 ;; Return value:  Size  Location     Type
  6501 ;;                  8    0[BANK1 ] long long 
  6502 ;; Registers used:
  6503 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6504 ;; Tracked objects:
  6505 ;;		On entry : 0/0
  6506 ;;		On exit  : 0/0
  6507 ;;		Unchanged: 0/0
  6508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6509 ;;      Params:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  6510 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  6511 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6512 ;;      Totals:         0       0      27       0       0       0       0       0       0       0       0       0       
      +0       0
  6513 ;;Total ram usage:       27 bytes
  6514 ;; Hardware stack levels used:    1
  6515 ;; Hardware stack levels required when called:    6
  6516 ;; This function calls:
  6517 ;;		Nothing
  6518 ;; This function is called by:
  6519 ;;		_dtoa
  6520 ;; This function uses a non-reentrant model
  6521 ;;
  6522                           
  6523                           
  6524                           ;psect for function ___aodiv
  6525  06A3                     ___aodiv:	
  6526                           
  6527                           ;incstack = 0
  6528                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  6529  06A3  0021               	movlb	1	; select bank1
  6530  06A4  01B2               	clrf	___aodiv@sign^(0+128)
  6531  06A5  30A0               	movlw	low ___aodiv@divisor
  6532  06A6  0086               	movwf	6
  6533  06A7  3000               	movlw	high ___aodiv@divisor
  6534  06A8  0087               	movwf	7
  6535  06A9  3F47               	moviw [7]fsr1
  6536  06AA  00B0               	movwf	??___aodiv^(0+128)
  6537  06AB  1FB0               	btfss	??___aodiv^(0+128),7
  6538  06AC  2ECF               	goto	l3130
  6539  06AD  0021               	movlb	1	; select bank1
  6540  06AE  09A0               	comf	___aodiv@divisor^(0+128),f
  6541  06AF  09A1               	comf	(___aodiv@divisor+1)^(0+128),f
  6542  06B0  09A2               	comf	(___aodiv@divisor+2)^(0+128),f
  6543  06B1  09A3               	comf	(___aodiv@divisor+3)^(0+128),f
  6544  06B2  09A4               	comf	(___aodiv@divisor+4)^(0+128),f
  6545  06B3  09A5               	comf	(___aodiv@divisor+5)^(0+128),f
  6546  06B4  09A6               	comf	(___aodiv@divisor+6)^(0+128),f
  6547  06B5  09A7               	comf	(___aodiv@divisor+7)^(0+128),f
  6548  06B6  0AA0               	incf	___aodiv@divisor^(0+128),f
  6549  06B7  1D03               	skipz
  6550  06B8  2ECC               	goto	u368lld
  6551  06B9  0AA1               	incf	(___aodiv@divisor+1)^(0+128),f
  6552  06BA  1D03               	skipz
  6553  06BB  2ECC               	goto	u368lld
  6554  06BC  0AA2               	incf	(___aodiv@divisor+2)^(0+128),f
  6555  06BD  1D03               	skipz
  6556  06BE  2ECC               	goto	u368lld
  6557  06BF  0AA3               	incf	(___aodiv@divisor+3)^(0+128),f
  6558  06C0  1D03               	skipz
  6559  06C1  2ECC               	goto	u368lld
  6560  06C2  0AA4               	incf	(___aodiv@divisor+4)^(0+128),f
  6561  06C3  1D03               	skipz
  6562  06C4  2ECC               	goto	u368lld
  6563  06C5  0AA5               	incf	(___aodiv@divisor+5)^(0+128),f
  6564  06C6  1D03               	skipz
  6565  06C7  2ECC               	goto	u368lld
  6566  06C8  0AA6               	incf	(___aodiv@divisor+6)^(0+128),f
  6567  06C9  1D03               	skipz
  6568  06CA  2ECC               	goto	u368lld
  6569  06CB  0AA7               	incf	(___aodiv@divisor+7)^(0+128),f
  6570  06CC                     u368lld:	
  6571  06CC  0021               	movlb	1	; select bank1
  6572  06CD  01B2               	clrf	___aodiv@sign^(0+128)
  6573  06CE  0AB2               	incf	___aodiv@sign^(0+128),f
  6574  06CF                     l3130:	
  6575  06CF  30A8               	movlw	low ___aodiv@dividend
  6576  06D0  0086               	movwf	6
  6577  06D1  3000               	movlw	high ___aodiv@dividend
  6578  06D2  0087               	movwf	7
  6579  06D3  3F47               	moviw [7]fsr1
  6580  06D4  0021               	movlb	1	; select bank1
  6581  06D5  00B0               	movwf	??___aodiv^(0+128)
  6582  06D6  1FB0               	btfss	??___aodiv^(0+128),7
  6583  06D7  2EFC               	goto	l3136
  6584  06D8  0021               	movlb	1	; select bank1
  6585  06D9  09A8               	comf	___aodiv@dividend^(0+128),f
  6586  06DA  09A9               	comf	(___aodiv@dividend+1)^(0+128),f
  6587  06DB  09AA               	comf	(___aodiv@dividend+2)^(0+128),f
  6588  06DC  09AB               	comf	(___aodiv@dividend+3)^(0+128),f
  6589  06DD  09AC               	comf	(___aodiv@dividend+4)^(0+128),f
  6590  06DE  09AD               	comf	(___aodiv@dividend+5)^(0+128),f
  6591  06DF  09AE               	comf	(___aodiv@dividend+6)^(0+128),f
  6592  06E0  09AF               	comf	(___aodiv@dividend+7)^(0+128),f
  6593  06E1  0AA8               	incf	___aodiv@dividend^(0+128),f
  6594  06E2  1D03               	skipz
  6595  06E3  2EF7               	goto	l3134
  6596  06E4  0AA9               	incf	(___aodiv@dividend+1)^(0+128),f
  6597  06E5  1D03               	skipz
  6598  06E6  2EF7               	goto	l3134
  6599  06E7  0AAA               	incf	(___aodiv@dividend+2)^(0+128),f
  6600  06E8  1D03               	skipz
  6601  06E9  2EF7               	goto	l3134
  6602  06EA  0AAB               	incf	(___aodiv@dividend+3)^(0+128),f
  6603  06EB  1D03               	skipz
  6604  06EC  2EF7               	goto	l3134
  6605  06ED  0AAC               	incf	(___aodiv@dividend+4)^(0+128),f
  6606  06EE  1D03               	skipz
  6607  06EF  2EF7               	goto	l3134
  6608  06F0  0AAD               	incf	(___aodiv@dividend+5)^(0+128),f
  6609  06F1  1D03               	skipz
  6610  06F2  2EF7               	goto	l3134
  6611  06F3  0AAE               	incf	(___aodiv@dividend+6)^(0+128),f
  6612  06F4  1D03               	skipz
  6613  06F5  2EF7               	goto	l3134
  6614  06F6  0AAF               	incf	(___aodiv@dividend+7)^(0+128),f
  6615  06F7                     l3134:	
  6616  06F7  3001               	movlw	1
  6617  06F8  0021               	movlb	1	; select bank1
  6618  06F9  00B0               	movwf	??___aodiv^(0+128)
  6619  06FA  0830               	movf	??___aodiv^(0+128),w
  6620  06FB  06B2               	xorwf	___aodiv@sign^(0+128),f
  6621  06FC                     l3136:	
  6622  06FC  30B3               	movlw	low ___aodiv@quotient
  6623  06FD  0086               	movwf	6
  6624  06FE  3000               	movlw	high ___aodiv@quotient
  6625  06FF  0087               	movwf	7
  6626  0700  3008               	movlw	8
  6627  0701  0021               	movlb	1	; select bank1
  6628  0702  00B0               	movwf	??___aodiv^(0+128)
  6629  0703  3000               	movlw	0
  6630  0704                     u3710:	
  6631  0704  001E               	movwi fsr1++
  6632  0705  0BB0               	decfsz	??___aodiv^(0+128),f
  6633  0706  2F04               	goto	u3710
  6634  0707  0820               	movf	___aodiv@divisor^(0+128),w
  6635  0708  0421               	iorwf	(___aodiv@divisor+1)^(0+128),w
  6636  0709  0422               	iorwf	(___aodiv@divisor+2)^(0+128),w
  6637  070A  0423               	iorwf	(___aodiv@divisor+3)^(0+128),w
  6638  070B  0424               	iorwf	(___aodiv@divisor+4)^(0+128),w
  6639  070C  0425               	iorwf	(___aodiv@divisor+5)^(0+128),w
  6640  070D  0426               	iorwf	(___aodiv@divisor+6)^(0+128),w
  6641  070E  0427               	iorwf	(___aodiv@divisor+7)^(0+128),w
  6642  070F  1903               	skipnz
  6643  0710  2F67               	goto	l3158
  6644  0711  01B1               	clrf	___aodiv@counter^(0+128)
  6645  0712  0AB1               	incf	___aodiv@counter^(0+128),f
  6646  0713                     l3146:	
  6647  0713  1BA7               	btfsc	(___aodiv@divisor+7)^(0+128),7
  6648  0714  2F22               	goto	l3148
  6649  0715  35A0               	lslf	___aodiv@divisor^(0+128),f
  6650  0716  0DA1               	rlf	(___aodiv@divisor+1)^(0+128),f
  6651  0717  0DA2               	rlf	(___aodiv@divisor+2)^(0+128),f
  6652  0718  0DA3               	rlf	(___aodiv@divisor+3)^(0+128),f
  6653  0719  0DA4               	rlf	(___aodiv@divisor+4)^(0+128),f
  6654  071A  0DA5               	rlf	(___aodiv@divisor+5)^(0+128),f
  6655  071B  0DA6               	rlf	(___aodiv@divisor+6)^(0+128),f
  6656  071C  0DA7               	rlf	(___aodiv@divisor+7)^(0+128),f
  6657  071D  3001               	movlw	1
  6658  071E  00B0               	movwf	??___aodiv^(0+128)
  6659  071F  0830               	movf	??___aodiv^(0+128),w
  6660  0720  07B1               	addwf	___aodiv@counter^(0+128),f
  6661  0721  2F13               	goto	l3146
  6662  0722                     l3148:	
  6663  0722  35B3               	lslf	___aodiv@quotient^(0+128),f
  6664  0723  0DB4               	rlf	(___aodiv@quotient+1)^(0+128),f
  6665  0724  0DB5               	rlf	(___aodiv@quotient+2)^(0+128),f
  6666  0725  0DB6               	rlf	(___aodiv@quotient+3)^(0+128),f
  6667  0726  0DB7               	rlf	(___aodiv@quotient+4)^(0+128),f
  6668  0727  0DB8               	rlf	(___aodiv@quotient+5)^(0+128),f
  6669  0728  0DB9               	rlf	(___aodiv@quotient+6)^(0+128),f
  6670  0729  0DBA               	rlf	(___aodiv@quotient+7)^(0+128),f
  6671  072A  0827               	movf	(___aodiv@divisor+7)^(0+128),w
  6672  072B  022F               	subwf	(___aodiv@dividend+7)^(0+128),w
  6673  072C  1D03               	skipz
  6674  072D  2F48               	goto	u3745
  6675  072E  0826               	movf	(___aodiv@divisor+6)^(0+128),w
  6676  072F  022E               	subwf	(___aodiv@dividend+6)^(0+128),w
  6677  0730  1D03               	skipz
  6678  0731  2F48               	goto	u3745
  6679  0732  0825               	movf	(___aodiv@divisor+5)^(0+128),w
  6680  0733  022D               	subwf	(___aodiv@dividend+5)^(0+128),w
  6681  0734  1D03               	skipz
  6682  0735  2F48               	goto	u3745
  6683  0736  0824               	movf	(___aodiv@divisor+4)^(0+128),w
  6684  0737  022C               	subwf	(___aodiv@dividend+4)^(0+128),w
  6685  0738  1D03               	skipz
  6686  0739  2F48               	goto	u3745
  6687  073A  0823               	movf	(___aodiv@divisor+3)^(0+128),w
  6688  073B  022B               	subwf	(___aodiv@dividend+3)^(0+128),w
  6689  073C  1D03               	skipz
  6690  073D  2F48               	goto	u3745
  6691  073E  0822               	movf	(___aodiv@divisor+2)^(0+128),w
  6692  073F  022A               	subwf	(___aodiv@dividend+2)^(0+128),w
  6693  0740  1D03               	skipz
  6694  0741  2F48               	goto	u3745
  6695  0742  0821               	movf	(___aodiv@divisor+1)^(0+128),w
  6696  0743  0229               	subwf	(___aodiv@dividend+1)^(0+128),w
  6697  0744  1D03               	skipz
  6698  0745  2F48               	goto	u3745
  6699  0746  0820               	movf	___aodiv@divisor^(0+128),w
  6700  0747  0228               	subwf	___aodiv@dividend^(0+128),w
  6701  0748                     u3745:	
  6702  0748  1C03               	skipc
  6703  0749  2F5B               	goto	l3156
  6704  074A  0820               	movf	___aodiv@divisor^(0+128),w
  6705  074B  02A8               	subwf	___aodiv@dividend^(0+128),f
  6706  074C  0821               	movf	(___aodiv@divisor+1)^(0+128),w
  6707  074D  3BA9               	subwfb	(___aodiv@dividend+1)^(0+128),f
  6708  074E  0822               	movf	(___aodiv@divisor+2)^(0+128),w
  6709  074F  3BAA               	subwfb	(___aodiv@dividend+2)^(0+128),f
  6710  0750  0823               	movf	(___aodiv@divisor+3)^(0+128),w
  6711  0751  3BAB               	subwfb	(___aodiv@dividend+3)^(0+128),f
  6712  0752  0824               	movf	(___aodiv@divisor+4)^(0+128),w
  6713  0753  3BAC               	subwfb	(___aodiv@dividend+4)^(0+128),f
  6714  0754  0825               	movf	(___aodiv@divisor+5)^(0+128),w
  6715  0755  3BAD               	subwfb	(___aodiv@dividend+5)^(0+128),f
  6716  0756  0826               	movf	(___aodiv@divisor+6)^(0+128),w
  6717  0757  3BAE               	subwfb	(___aodiv@dividend+6)^(0+128),f
  6718  0758  0827               	movf	(___aodiv@divisor+7)^(0+128),w
  6719  0759  3BAF               	subwfb	(___aodiv@dividend+7)^(0+128),f
  6720  075A  1433               	bsf	___aodiv@quotient^(0+128),0
  6721  075B                     l3156:	
  6722  075B  36A7               	lsrf	(___aodiv@divisor+7)^(0+128),f
  6723  075C  0CA6               	rrf	(___aodiv@divisor+6)^(0+128),f
  6724  075D  0CA5               	rrf	(___aodiv@divisor+5)^(0+128),f
  6725  075E  0CA4               	rrf	(___aodiv@divisor+4)^(0+128),f
  6726  075F  0CA3               	rrf	(___aodiv@divisor+3)^(0+128),f
  6727  0760  0CA2               	rrf	(___aodiv@divisor+2)^(0+128),f
  6728  0761  0CA1               	rrf	(___aodiv@divisor+1)^(0+128),f
  6729  0762  0CA0               	rrf	___aodiv@divisor^(0+128),f
  6730  0763  3001               	movlw	1
  6731  0764  02B1               	subwf	___aodiv@counter^(0+128),f
  6732  0765  1D03               	btfss	3,2
  6733  0766  2F22               	goto	l3148
  6734  0767                     l3158:	
  6735  0767  0832               	movf	___aodiv@sign^(0+128),w
  6736  0768  1903               	btfsc	3,2
  6737  0769  2F88               	goto	l591
  6738  076A  09B3               	comf	___aodiv@quotient^(0+128),f
  6739  076B  09B4               	comf	(___aodiv@quotient+1)^(0+128),f
  6740  076C  09B5               	comf	(___aodiv@quotient+2)^(0+128),f
  6741  076D  09B6               	comf	(___aodiv@quotient+3)^(0+128),f
  6742  076E  09B7               	comf	(___aodiv@quotient+4)^(0+128),f
  6743  076F  09B8               	comf	(___aodiv@quotient+5)^(0+128),f
  6744  0770  09B9               	comf	(___aodiv@quotient+6)^(0+128),f
  6745  0771  09BA               	comf	(___aodiv@quotient+7)^(0+128),f
  6746  0772  0AB3               	incf	___aodiv@quotient^(0+128),f
  6747  0773  1D03               	skipz
  6748  0774  2F88               	goto	l591
  6749  0775  0AB4               	incf	(___aodiv@quotient+1)^(0+128),f
  6750  0776  1D03               	skipz
  6751  0777  2F88               	goto	l591
  6752  0778  0AB5               	incf	(___aodiv@quotient+2)^(0+128),f
  6753  0779  1D03               	skipz
  6754  077A  2F88               	goto	l591
  6755  077B  0AB6               	incf	(___aodiv@quotient+3)^(0+128),f
  6756  077C  1D03               	skipz
  6757  077D  2F88               	goto	l591
  6758  077E  0AB7               	incf	(___aodiv@quotient+4)^(0+128),f
  6759  077F  1D03               	skipz
  6760  0780  2F88               	goto	l591
  6761  0781  0AB8               	incf	(___aodiv@quotient+5)^(0+128),f
  6762  0782  1D03               	skipz
  6763  0783  2F88               	goto	l591
  6764  0784  0AB9               	incf	(___aodiv@quotient+6)^(0+128),f
  6765  0785  1D03               	skipz
  6766  0786  2F88               	goto	l591
  6767  0787  0ABA               	incf	(___aodiv@quotient+7)^(0+128),f
  6768  0788                     l591:	
  6769  0788  0021               	movlb	1	; select bank1
  6770  0789  0833               	movf	___aodiv@quotient^(0+128),w
  6771  078A  00A0               	movwf	?___aodiv^(0+128)
  6772  078B  0834               	movf	(___aodiv@quotient+1)^(0+128),w
  6773  078C  00A1               	movwf	(?___aodiv+1)^(0+128)
  6774  078D  0835               	movf	(___aodiv@quotient+2)^(0+128),w
  6775  078E  00A2               	movwf	(?___aodiv+2)^(0+128)
  6776  078F  0836               	movf	(___aodiv@quotient+3)^(0+128),w
  6777  0790  00A3               	movwf	(?___aodiv+3)^(0+128)
  6778  0791  0837               	movf	(___aodiv@quotient+4)^(0+128),w
  6779  0792  00A4               	movwf	(?___aodiv+4)^(0+128)
  6780  0793  0838               	movf	(___aodiv@quotient+5)^(0+128),w
  6781  0794  00A5               	movwf	(?___aodiv+5)^(0+128)
  6782  0795  0839               	movf	(___aodiv@quotient+6)^(0+128),w
  6783  0796  00A6               	movwf	(?___aodiv+6)^(0+128)
  6784  0797  083A               	movf	(___aodiv@quotient+7)^(0+128),w
  6785  0798  00A7               	movwf	(?___aodiv+7)^(0+128)
  6786  0799  0008               	return
  6787  079A                     __end_of___aodiv:	
  6788                           
  6789                           	psect	text19
  6790  0A9A                     __ptext19:	
  6791 ;; *************** function _SYSTEM_Initialize *****************
  6792 ;; Defined at:
  6793 ;;		line 50 in file "mcc_generated_files/mcc.c"
  6794 ;; Parameters:    Size  Location     Type
  6795 ;;		None
  6796 ;; Auto vars:     Size  Location     Type
  6797 ;;		None
  6798 ;; Return value:  Size  Location     Type
  6799 ;;                  1    wreg      void 
  6800 ;; Registers used:
  6801 ;;		wreg, status,2, status,0, pclath, cstack
  6802 ;; Tracked objects:
  6803 ;;		On entry : 0/0
  6804 ;;		On exit  : 0/0
  6805 ;;		Unchanged: 0/0
  6806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6810 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6811 ;;Total ram usage:        0 bytes
  6812 ;; Hardware stack levels used:    1
  6813 ;; Hardware stack levels required when called:    8
  6814 ;; This function calls:
  6815 ;;		_EUSART_Initialize
  6816 ;;		_OSCILLATOR_Initialize
  6817 ;;		_PIN_MANAGER_Initialize
  6818 ;;		_TMR0_Initialize
  6819 ;; This function is called by:
  6820 ;;		_main
  6821 ;; This function uses a non-reentrant model
  6822 ;;
  6823                           
  6824                           
  6825                           ;psect for function _SYSTEM_Initialize
  6826  0A9A                     _SYSTEM_Initialize:	
  6827                           
  6828                           ;mcc_generated_files/mcc.c: 52:     PIN_MANAGER_Initialize();
  6829                           
  6830                           ;incstack = 0
  6831                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6832  0A9A  318C  240C  318A   	fcall	_PIN_MANAGER_Initialize
  6833                           
  6834                           ;mcc_generated_files/mcc.c: 53:     OSCILLATOR_Initialize();
  6835  0A9D  318A  224A  318A   	fcall	_OSCILLATOR_Initialize
  6836                           
  6837                           ;mcc_generated_files/mcc.c: 54:     TMR0_Initialize();
  6838  0AA0  318A  22EA  318A   	fcall	_TMR0_Initialize
  6839                           
  6840                           ;mcc_generated_files/mcc.c: 55:     EUSART_Initialize();
  6841  0AA3  318B  238E         	fcall	_EUSART_Initialize
  6842  0AA5  0008               	return
  6843  0AA6                     __end_of_SYSTEM_Initialize:	
  6844                           
  6845                           	psect	text20
  6846  0AEA                     __ptext20:	
  6847 ;; *************** function _TMR0_Initialize *****************
  6848 ;; Defined at:
  6849 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  6850 ;; Parameters:    Size  Location     Type
  6851 ;;		None
  6852 ;; Auto vars:     Size  Location     Type
  6853 ;;		None
  6854 ;; Return value:  Size  Location     Type
  6855 ;;                  1    wreg      void 
  6856 ;; Registers used:
  6857 ;;		wreg, status,2, status,0, pclath, cstack
  6858 ;; Tracked objects:
  6859 ;;		On entry : 0/0
  6860 ;;		On exit  : 0/0
  6861 ;;		Unchanged: 0/0
  6862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6865 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6866 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6867 ;;Total ram usage:        1 bytes
  6868 ;; Hardware stack levels used:    1
  6869 ;; Hardware stack levels required when called:    7
  6870 ;; This function calls:
  6871 ;;		_TMR0_SetInterruptHandler
  6872 ;; This function is called by:
  6873 ;;		_SYSTEM_Initialize
  6874 ;; This function uses a non-reentrant model
  6875 ;;
  6876                           
  6877                           
  6878                           ;psect for function _TMR0_Initialize
  6879  0AEA                     _TMR0_Initialize:	
  6880                           
  6881                           ;mcc_generated_files/tmr0.c: 69:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD4 
      +                          & 0x3F));
  6882                           
  6883                           ;incstack = 0
  6884                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6885  0AEA  0021               	movlb	1	; select bank1
  6886  0AEB  0815               	movf	21,w	;volatile
  6887  0AEC  39C0               	andlw	192
  6888  0AED  3814               	iorlw	20
  6889  0AEE  0095               	movwf	21	;volatile
  6890                           
  6891                           ;mcc_generated_files/tmr0.c: 72:     TMR0 = 0x83;
  6892  0AEF  3083               	movlw	131
  6893  0AF0  0020               	movlb	0	; select bank0
  6894  0AF1  0095               	movwf	21	;volatile
  6895                           
  6896                           ;mcc_generated_files/tmr0.c: 75:     timer0ReloadVal= 131;
  6897  0AF2  3083               	movlw	131
  6898  0AF3  0021               	movlb	1	; select bank1
  6899  0AF4  00A2               	movwf	??_TMR0_Initialize^(0+128)
  6900  0AF5  0822               	movf	??_TMR0_Initialize^(0+128),w
  6901  0AF6  0020               	movlb	0	; select bank0
  6902  0AF7  00DB               	movwf	_timer0ReloadVal	;volatile
  6903                           
  6904                           ;mcc_generated_files/tmr0.c: 78:     INTCONbits.TMR0IF = 0;
  6905  0AF8  110B               	bcf	11,2	;volatile
  6906                           
  6907                           ;mcc_generated_files/tmr0.c: 81:     INTCONbits.TMR0IE = 1;
  6908  0AF9  168B               	bsf	11,5	;volatile
  6909                           
  6910                           ;mcc_generated_files/tmr0.c: 84:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  6911  0AFA  30FB               	movlw	low _TMR0_DefaultInterruptHandler
  6912  0AFB  0021               	movlb	1	; select bank1
  6913  0AFC  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler^(0+128)
  6914  0AFD  3007               	movlw	high _TMR0_DefaultInterruptHandler
  6915  0AFE  00A1               	movwf	(TMR0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  6916  0AFF  318A  227D         	fcall	_TMR0_SetInterruptHandler
  6917  0B01  0008               	return
  6918  0B02                     __end_of_TMR0_Initialize:	
  6919                           
  6920                           	psect	text21
  6921  0A7D                     __ptext21:	
  6922 ;; *************** function _TMR0_SetInterruptHandler *****************
  6923 ;; Defined at:
  6924 ;;		line 125 in file "mcc_generated_files/tmr0.c"
  6925 ;; Parameters:    Size  Location     Type
  6926 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  6927 ;;		 -> timerISR(1), TMR0_DefaultInterruptHandler(1), 
  6928 ;; Auto vars:     Size  Location     Type
  6929 ;;		None
  6930 ;; Return value:  Size  Location     Type
  6931 ;;                  1    wreg      void 
  6932 ;; Registers used:
  6933 ;;		wreg
  6934 ;; Tracked objects:
  6935 ;;		On entry : 0/0
  6936 ;;		On exit  : 0/0
  6937 ;;		Unchanged: 0/0
  6938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6939 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6942 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6943 ;;Total ram usage:        2 bytes
  6944 ;; Hardware stack levels used:    1
  6945 ;; Hardware stack levels required when called:    6
  6946 ;; This function calls:
  6947 ;;		Nothing
  6948 ;; This function is called by:
  6949 ;;		_TMR0_Initialize
  6950 ;;		_main
  6951 ;; This function uses a non-reentrant model
  6952 ;;
  6953                           
  6954                           
  6955                           ;psect for function _TMR0_SetInterruptHandler
  6956  0A7D                     _TMR0_SetInterruptHandler:	
  6957                           
  6958                           ;mcc_generated_files/tmr0.c: 126:     TMR0_InterruptHandler = InterruptHandler;
  6959                           
  6960                           ;incstack = 0
  6961                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  6962  0A7D  0021               	movlb	1	; select bank1
  6963  0A7E  0821               	movf	(TMR0_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  6964  0A7F  0020               	movlb	0	; select bank0
  6965  0A80  00D4               	movwf	_TMR0_InterruptHandler+1
  6966  0A81  0021               	movlb	1	; select bank1
  6967  0A82  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler^(0+128),w
  6968  0A83  0020               	movlb	0	; select bank0
  6969  0A84  00D3               	movwf	_TMR0_InterruptHandler
  6970  0A85  0008               	return
  6971  0A86                     __end_of_TMR0_SetInterruptHandler:	
  6972                           
  6973                           	psect	text22
  6974  0C0C                     __ptext22:	
  6975 ;; *************** function _PIN_MANAGER_Initialize *****************
  6976 ;; Defined at:
  6977 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  6978 ;; Parameters:    Size  Location     Type
  6979 ;;		None
  6980 ;; Auto vars:     Size  Location     Type
  6981 ;;		None
  6982 ;; Return value:  Size  Location     Type
  6983 ;;                  1    wreg      void 
  6984 ;; Registers used:
  6985 ;;		wreg, status,2, status,0, pclath, cstack
  6986 ;; Tracked objects:
  6987 ;;		On entry : 0/0
  6988 ;;		On exit  : 0/0
  6989 ;;		Unchanged: 0/0
  6990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6995 ;;Total ram usage:        0 bytes
  6996 ;; Hardware stack levels used:    1
  6997 ;; Hardware stack levels required when called:    7
  6998 ;; This function calls:
  6999 ;;		_IOCCF7_SetInterruptHandler
  7000 ;; This function is called by:
  7001 ;;		_SYSTEM_Initialize
  7002 ;; This function uses a non-reentrant model
  7003 ;;
  7004                           
  7005                           
  7006                           ;psect for function _PIN_MANAGER_Initialize
  7007  0C0C                     _PIN_MANAGER_Initialize:	
  7008                           
  7009                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  7010                           
  7011                           ;incstack = 0
  7012                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7013  0C0C  0022               	movlb	2	; select bank2
  7014  0C0D  018C               	clrf	12	;volatile
  7015                           
  7016                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  7017  0C0E  018D               	clrf	13	;volatile
  7018                           
  7019                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  7020  0C0F  018E               	clrf	14	;volatile
  7021                           
  7022                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0x37;
  7023  0C10  3037               	movlw	55
  7024  0C11  0021               	movlb	1	; select bank1
  7025  0C12  008C               	movwf	12	;volatile
  7026                           
  7027                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0x70;
  7028  0C13  3070               	movlw	112
  7029  0C14  008D               	movwf	13	;volatile
  7030                           
  7031                           ;mcc_generated_files/pin_manager.c: 71:     TRISC = 0xFF;
  7032  0C15  30FF               	movlw	255
  7033  0C16  008E               	movwf	14	;volatile
  7034                           
  7035                           ;mcc_generated_files/pin_manager.c: 76:     ANSELC = 0x4F;
  7036  0C17  304F               	movlw	79
  7037  0C18  0023               	movlb	3	; select bank3
  7038  0C19  008E               	movwf	14	;volatile
  7039                           
  7040                           ;mcc_generated_files/pin_manager.c: 77:     ANSELB = 0x70;
  7041  0C1A  3070               	movlw	112
  7042  0C1B  008D               	movwf	13	;volatile
  7043                           
  7044                           ;mcc_generated_files/pin_manager.c: 78:     ANSELA = 0x17;
  7045  0C1C  3017               	movlw	23
  7046  0C1D  008C               	movwf	12	;volatile
  7047                           
  7048                           ;mcc_generated_files/pin_manager.c: 83:     WPUB = 0x00;
  7049  0C1E  0024               	movlb	4	; select bank4
  7050  0C1F  018D               	clrf	13	;volatile
  7051                           
  7052                           ;mcc_generated_files/pin_manager.c: 84:     WPUA = 0x00;
  7053  0C20  018C               	clrf	12	;volatile
  7054                           
  7055                           ;mcc_generated_files/pin_manager.c: 85:     WPUC = 0x00;
  7056  0C21  018E               	clrf	14	;volatile
  7057                           
  7058                           ;mcc_generated_files/pin_manager.c: 86:     OPTION_REGbits.nWPUEN = 1;
  7059  0C22  0021               	movlb	1	; select bank1
  7060  0C23  1795               	bsf	21,7	;volatile
  7061                           
  7062                           ;mcc_generated_files/pin_manager.c: 91:     ODCONA = 0x00;
  7063  0C24  0025               	movlb	5	; select bank5
  7064  0C25  018C               	clrf	12	;volatile
  7065                           
  7066                           ;mcc_generated_files/pin_manager.c: 92:     ODCONB = 0x00;
  7067  0C26  018D               	clrf	13	;volatile
  7068                           
  7069                           ;mcc_generated_files/pin_manager.c: 93:     ODCONC = 0x00;
  7070  0C27  018E               	clrf	14	;volatile
  7071                           
  7072                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONA = 0x37;
  7073  0C28  3037               	movlw	55
  7074  0C29  0026               	movlb	6	; select bank6
  7075  0C2A  008C               	movwf	12	;volatile
  7076                           
  7077                           ;mcc_generated_files/pin_manager.c: 99:     SLRCONB = 0xF0;
  7078  0C2B  30F0               	movlw	240
  7079  0C2C  008D               	movwf	13	;volatile
  7080                           
  7081                           ;mcc_generated_files/pin_manager.c: 100:     SLRCONC = 0xFF;
  7082  0C2D  30FF               	movlw	255
  7083  0C2E  008E               	movwf	14	;volatile
  7084                           
  7085                           ;mcc_generated_files/pin_manager.c: 107:     IOCCFbits.IOCCF7 = 0;
  7086  0C2F  0027               	movlb	7	; select bank7
  7087  0C30  1399               	bcf	25,7	;volatile
  7088                           
  7089                           ;mcc_generated_files/pin_manager.c: 109:     IOCCNbits.IOCCN7 = 0;
  7090  0C31  1398               	bcf	24,7	;volatile
  7091                           
  7092                           ;mcc_generated_files/pin_manager.c: 111:     IOCCPbits.IOCCP7 = 1;
  7093  0C32  1797               	bsf	23,7	;volatile
  7094                           
  7095                           ;mcc_generated_files/pin_manager.c: 116:     IOCCF7_SetInterruptHandler(IOCCF7_DefaultIn
      +                          terruptHandler);
  7096  0C33  30FC               	movlw	low _IOCCF7_DefaultInterruptHandler
  7097  0C34  0021               	movlb	1	; select bank1
  7098  0C35  00A0               	movwf	IOCCF7_SetInterruptHandler@InterruptHandler^(0+128)
  7099  0C36  3007               	movlw	high _IOCCF7_DefaultInterruptHandler
  7100  0C37  00A1               	movwf	(IOCCF7_SetInterruptHandler@InterruptHandler^(0+128)+1)
  7101  0C38  318A  2274         	fcall	_IOCCF7_SetInterruptHandler
  7102                           
  7103                           ;mcc_generated_files/pin_manager.c: 119:     INTCONbits.IOCIE = 1;
  7104  0C3A  158B               	bsf	11,3	;volatile
  7105                           
  7106                           ;mcc_generated_files/pin_manager.c: 122:     RB7PPS = 0x12;
  7107  0C3B  3012               	movlw	18
  7108  0C3C  003D               	movlb	29	; select bank29
  7109  0C3D  009F               	movwf	31	;volatile
  7110  0C3E  0008               	return
  7111  0C3F                     __end_of_PIN_MANAGER_Initialize:	
  7112                           
  7113                           	psect	text23
  7114  0A74                     __ptext23:	
  7115 ;; *************** function _IOCCF7_SetInterruptHandler *****************
  7116 ;; Defined at:
  7117 ;;		line 152 in file "mcc_generated_files/pin_manager.c"
  7118 ;; Parameters:    Size  Location     Type
  7119 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  7120 ;;		 -> speedCalc(1), IOCCF7_DefaultInterruptHandler(1), 
  7121 ;; Auto vars:     Size  Location     Type
  7122 ;;		None
  7123 ;; Return value:  Size  Location     Type
  7124 ;;                  1    wreg      void 
  7125 ;; Registers used:
  7126 ;;		wreg
  7127 ;; Tracked objects:
  7128 ;;		On entry : 0/0
  7129 ;;		On exit  : 0/0
  7130 ;;		Unchanged: 0/0
  7131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7132 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7135 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7136 ;;Total ram usage:        2 bytes
  7137 ;; Hardware stack levels used:    1
  7138 ;; Hardware stack levels required when called:    6
  7139 ;; This function calls:
  7140 ;;		Nothing
  7141 ;; This function is called by:
  7142 ;;		_PIN_MANAGER_Initialize
  7143 ;;		_main
  7144 ;; This function uses a non-reentrant model
  7145 ;;
  7146                           
  7147                           
  7148                           ;psect for function _IOCCF7_SetInterruptHandler
  7149  0A74                     _IOCCF7_SetInterruptHandler:	
  7150                           
  7151                           ;mcc_generated_files/pin_manager.c: 153:     IOCCF7_InterruptHandler = InterruptHandler;
  7152                           
  7153                           ;incstack = 0
  7154                           ; Regs used in _IOCCF7_SetInterruptHandler: [wreg]
  7155  0A74  0021               	movlb	1	; select bank1
  7156  0A75  0821               	movf	(IOCCF7_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  7157  0A76  0020               	movlb	0	; select bank0
  7158  0A77  00D6               	movwf	_IOCCF7_InterruptHandler+1
  7159  0A78  0021               	movlb	1	; select bank1
  7160  0A79  0820               	movf	IOCCF7_SetInterruptHandler@InterruptHandler^(0+128),w
  7161  0A7A  0020               	movlb	0	; select bank0
  7162  0A7B  00D5               	movwf	_IOCCF7_InterruptHandler
  7163  0A7C  0008               	return
  7164  0A7D                     __end_of_IOCCF7_SetInterruptHandler:	
  7165                           
  7166                           	psect	text24
  7167  0A4A                     __ptext24:	
  7168 ;; *************** function _OSCILLATOR_Initialize *****************
  7169 ;; Defined at:
  7170 ;;		line 58 in file "mcc_generated_files/mcc.c"
  7171 ;; Parameters:    Size  Location     Type
  7172 ;;		None
  7173 ;; Auto vars:     Size  Location     Type
  7174 ;;		None
  7175 ;; Return value:  Size  Location     Type
  7176 ;;                  1    wreg      void 
  7177 ;; Registers used:
  7178 ;;		wreg, status,2
  7179 ;; Tracked objects:
  7180 ;;		On entry : 0/0
  7181 ;;		On exit  : 0/0
  7182 ;;		Unchanged: 0/0
  7183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7188 ;;Total ram usage:        0 bytes
  7189 ;; Hardware stack levels used:    1
  7190 ;; Hardware stack levels required when called:    6
  7191 ;; This function calls:
  7192 ;;		Nothing
  7193 ;; This function is called by:
  7194 ;;		_SYSTEM_Initialize
  7195 ;; This function uses a non-reentrant model
  7196 ;;
  7197                           
  7198                           
  7199                           ;psect for function _OSCILLATOR_Initialize
  7200  0A4A                     _OSCILLATOR_Initialize:	
  7201                           
  7202                           ;mcc_generated_files/mcc.c: 61:     OSCCON = 0x7A;
  7203                           
  7204                           ;incstack = 0
  7205                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  7206  0A4A  307A               	movlw	122
  7207  0A4B  0021               	movlb	1	; select bank1
  7208  0A4C  0099               	movwf	25	;volatile
  7209                           
  7210                           ;mcc_generated_files/mcc.c: 63:     OSCTUNE = 0x00;
  7211  0A4D  0198               	clrf	24	;volatile
  7212                           
  7213                           ;mcc_generated_files/mcc.c: 65:     BORCON = 0x00;
  7214  0A4E  0022               	movlb	2	; select bank2
  7215  0A4F  0196               	clrf	22	;volatile
  7216  0A50  0008               	return
  7217  0A51                     __end_of_OSCILLATOR_Initialize:	
  7218                           
  7219                           	psect	text25
  7220  0B8E                     __ptext25:	
  7221 ;; *************** function _EUSART_Initialize *****************
  7222 ;; Defined at:
  7223 ;;		line 65 in file "mcc_generated_files/eusart.c"
  7224 ;; Parameters:    Size  Location     Type
  7225 ;;		None
  7226 ;; Auto vars:     Size  Location     Type
  7227 ;;		None
  7228 ;; Return value:  Size  Location     Type
  7229 ;;                  1    wreg      void 
  7230 ;; Registers used:
  7231 ;;		wreg, status,2, status,0, pclath, cstack
  7232 ;; Tracked objects:
  7233 ;;		On entry : 0/0
  7234 ;;		On exit  : 0/0
  7235 ;;		Unchanged: 0/0
  7236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7241 ;;Total ram usage:        0 bytes
  7242 ;; Hardware stack levels used:    1
  7243 ;; Hardware stack levels required when called:    7
  7244 ;; This function calls:
  7245 ;;		_EUSART_SetErrorHandler
  7246 ;;		_EUSART_SetFramingErrorHandler
  7247 ;;		_EUSART_SetOverrunErrorHandler
  7248 ;; This function is called by:
  7249 ;;		_SYSTEM_Initialize
  7250 ;; This function uses a non-reentrant model
  7251 ;;
  7252                           
  7253                           
  7254                           ;psect for function _EUSART_Initialize
  7255  0B8E                     _EUSART_Initialize:	
  7256                           
  7257                           ;mcc_generated_files/eusart.c: 70:     BAUD1CON = 0x08;
  7258                           
  7259                           ;incstack = 0
  7260                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7261  0B8E  3008               	movlw	8
  7262  0B8F  0023               	movlb	3	; select bank3
  7263  0B90  009F               	movwf	31	;volatile
  7264                           
  7265                           ;mcc_generated_files/eusart.c: 73:     RC1STA = 0x80;
  7266  0B91  3080               	movlw	128
  7267  0B92  009D               	movwf	29	;volatile
  7268                           
  7269                           ;mcc_generated_files/eusart.c: 76:     TX1STA = 0x24;
  7270  0B93  3024               	movlw	36
  7271  0B94  009E               	movwf	30	;volatile
  7272                           
  7273                           ;mcc_generated_files/eusart.c: 79:     SPBRGL = 0xA0;
  7274  0B95  30A0               	movlw	160
  7275  0B96  009B               	movwf	27	;volatile
  7276                           
  7277                           ;mcc_generated_files/eusart.c: 82:     SPBRGH = 0x01;
  7278  0B97  3001               	movlw	1
  7279  0B98  009C               	movwf	28	;volatile
  7280                           
  7281                           ;mcc_generated_files/eusart.c: 85:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  7282  0B99  3000               	movlw	0
  7283  0B9A  0021               	movlb	1	; select bank1
  7284  0B9B  00A0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128)
  7285  0B9C  3000               	movlw	0
  7286  0B9D  00A1               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler^(0+128)+1)
  7287  0B9E  318A  2262  318B   	fcall	_EUSART_SetFramingErrorHandler
  7288                           
  7289                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  7290  0BA1  3000               	movlw	0
  7291  0BA2  0021               	movlb	1	; select bank1
  7292  0BA3  00A0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)
  7293  0BA4  3000               	movlw	0
  7294  0BA5  00A1               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)+1)
  7295  0BA6  318A  226B  318B   	fcall	_EUSART_SetOverrunErrorHandler
  7296                           
  7297                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  7298  0BA9  3000               	movlw	0
  7299  0BAA  0021               	movlb	1	; select bank1
  7300  0BAB  00A0               	movwf	EUSART_SetErrorHandler@interruptHandler^(0+128)
  7301  0BAC  3000               	movlw	0
  7302  0BAD  00A1               	movwf	(EUSART_SetErrorHandler@interruptHandler^(0+128)+1)
  7303  0BAE  318A  2259         	fcall	_EUSART_SetErrorHandler
  7304                           
  7305                           ;mcc_generated_files/eusart.c: 89:     eusartRxLastError.status = 0;
  7306  0BB0  0020               	movlb	0	; select bank0
  7307  0BB1  01CE               	clrf	_eusartRxLastError	;volatile
  7308  0BB2  0008               	return
  7309  0BB3                     __end_of_EUSART_Initialize:	
  7310                           
  7311                           	psect	text26
  7312  0A6B                     __ptext26:	
  7313 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  7314 ;; Defined at:
  7315 ;;		line 175 in file "mcc_generated_files/eusart.c"
  7316 ;; Parameters:    Size  Location     Type
  7317 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  7318 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  7319 ;; Auto vars:     Size  Location     Type
  7320 ;;		None
  7321 ;; Return value:  Size  Location     Type
  7322 ;;                  1    wreg      void 
  7323 ;; Registers used:
  7324 ;;		wreg
  7325 ;; Tracked objects:
  7326 ;;		On entry : 0/0
  7327 ;;		On exit  : 0/0
  7328 ;;		Unchanged: 0/0
  7329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7330 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7333 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7334 ;;Total ram usage:        2 bytes
  7335 ;; Hardware stack levels used:    1
  7336 ;; Hardware stack levels required when called:    6
  7337 ;; This function calls:
  7338 ;;		Nothing
  7339 ;; This function is called by:
  7340 ;;		_EUSART_Initialize
  7341 ;; This function uses a non-reentrant model
  7342 ;;
  7343                           
  7344                           
  7345                           ;psect for function _EUSART_SetOverrunErrorHandler
  7346  0A6B                     _EUSART_SetOverrunErrorHandler:	
  7347                           
  7348                           ;mcc_generated_files/eusart.c: 176:     EUSART_OverrunErrorHandler = interruptHandler;
  7349                           
  7350                           ;incstack = 0
  7351                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  7352  0A6B  0021               	movlb	1	; select bank1
  7353  0A6C  0821               	movf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^(0+128),w
  7354  0A6D  0020               	movlb	0	; select bank0
  7355  0A6E  00D8               	movwf	_EUSART_OverrunErrorHandler+1
  7356  0A6F  0021               	movlb	1	; select bank1
  7357  0A70  0820               	movf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128),w
  7358  0A71  0020               	movlb	0	; select bank0
  7359  0A72  00D7               	movwf	_EUSART_OverrunErrorHandler
  7360  0A73  0008               	return
  7361  0A74                     __end_of_EUSART_SetOverrunErrorHandler:	
  7362                           
  7363                           	psect	text27
  7364  0A62                     __ptext27:	
  7365 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  7366 ;; Defined at:
  7367 ;;		line 171 in file "mcc_generated_files/eusart.c"
  7368 ;; Parameters:    Size  Location     Type
  7369 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  7370 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  7371 ;; Auto vars:     Size  Location     Type
  7372 ;;		None
  7373 ;; Return value:  Size  Location     Type
  7374 ;;                  1    wreg      void 
  7375 ;; Registers used:
  7376 ;;		wreg
  7377 ;; Tracked objects:
  7378 ;;		On entry : 0/0
  7379 ;;		On exit  : 0/0
  7380 ;;		Unchanged: 0/0
  7381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7382 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7385 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7386 ;;Total ram usage:        2 bytes
  7387 ;; Hardware stack levels used:    1
  7388 ;; Hardware stack levels required when called:    6
  7389 ;; This function calls:
  7390 ;;		Nothing
  7391 ;; This function is called by:
  7392 ;;		_EUSART_Initialize
  7393 ;; This function uses a non-reentrant model
  7394 ;;
  7395                           
  7396                           
  7397                           ;psect for function _EUSART_SetFramingErrorHandler
  7398  0A62                     _EUSART_SetFramingErrorHandler:	
  7399                           
  7400                           ;mcc_generated_files/eusart.c: 172:     EUSART_FramingErrorHandler = interruptHandler;
  7401                           
  7402                           ;incstack = 0
  7403                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  7404  0A62  0021               	movlb	1	; select bank1
  7405  0A63  0821               	movf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^(0+128),w
  7406  0A64  0020               	movlb	0	; select bank0
  7407  0A65  00DA               	movwf	_EUSART_FramingErrorHandler+1
  7408  0A66  0021               	movlb	1	; select bank1
  7409  0A67  0820               	movf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128),w
  7410  0A68  0020               	movlb	0	; select bank0
  7411  0A69  00D9               	movwf	_EUSART_FramingErrorHandler
  7412  0A6A  0008               	return
  7413  0A6B                     __end_of_EUSART_SetFramingErrorHandler:	
  7414                           
  7415                           	psect	text28
  7416  0A59                     __ptext28:	
  7417 ;; *************** function _EUSART_SetErrorHandler *****************
  7418 ;; Defined at:
  7419 ;;		line 179 in file "mcc_generated_files/eusart.c"
  7420 ;; Parameters:    Size  Location     Type
  7421 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  7422 ;;		 -> EUSART_DefaultErrorHandler(1), 
  7423 ;; Auto vars:     Size  Location     Type
  7424 ;;		None
  7425 ;; Return value:  Size  Location     Type
  7426 ;;                  1    wreg      void 
  7427 ;; Registers used:
  7428 ;;		wreg
  7429 ;; Tracked objects:
  7430 ;;		On entry : 0/0
  7431 ;;		On exit  : 0/0
  7432 ;;		Unchanged: 0/0
  7433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7434 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7437 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7438 ;;Total ram usage:        2 bytes
  7439 ;; Hardware stack levels used:    1
  7440 ;; Hardware stack levels required when called:    6
  7441 ;; This function calls:
  7442 ;;		Nothing
  7443 ;; This function is called by:
  7444 ;;		_EUSART_Initialize
  7445 ;; This function uses a non-reentrant model
  7446 ;;
  7447                           
  7448                           
  7449                           ;psect for function _EUSART_SetErrorHandler
  7450  0A59                     _EUSART_SetErrorHandler:	
  7451                           
  7452                           ;mcc_generated_files/eusart.c: 180:     EUSART_ErrorHandler = interruptHandler;
  7453                           
  7454                           ;incstack = 0
  7455                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  7456  0A59  0021               	movlb	1	; select bank1
  7457  0A5A  0821               	movf	(EUSART_SetErrorHandler@interruptHandler+1)^(0+128),w
  7458  0A5B  0022               	movlb	2	; select bank2
  7459  0A5C  00EF               	movwf	(_EUSART_ErrorHandler+1)^(0+256)
  7460  0A5D  0021               	movlb	1	; select bank1
  7461  0A5E  0820               	movf	EUSART_SetErrorHandler@interruptHandler^(0+128),w
  7462  0A5F  0022               	movlb	2	; select bank2
  7463  0A60  00EE               	movwf	_EUSART_ErrorHandler^(0+256)
  7464  0A61  0008               	return
  7465  0A62                     __end_of_EUSART_SetErrorHandler:	
  7466                           
  7467                           	psect	intentry
  7468  0004                     __pintentry:	
  7469 ;; *************** function _INTERRUPT_InterruptManager *****************
  7470 ;; Defined at:
  7471 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  7472 ;; Parameters:    Size  Location     Type
  7473 ;;		None
  7474 ;; Auto vars:     Size  Location     Type
  7475 ;;		None
  7476 ;; Return value:  Size  Location     Type
  7477 ;;                  1    wreg      void 
  7478 ;; Registers used:
  7479 ;;		wreg, status,2, status,0, pclath, cstack
  7480 ;; Tracked objects:
  7481 ;;		On entry : 0/0
  7482 ;;		On exit  : 0/0
  7483 ;;		Unchanged: 0/0
  7484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7489 ;;Total ram usage:        0 bytes
  7490 ;; Hardware stack levels used:    1
  7491 ;; Hardware stack levels required when called:    5
  7492 ;; This function calls:
  7493 ;;		_PIN_MANAGER_IOC
  7494 ;;		_TMR0_ISR
  7495 ;; This function is called by:
  7496 ;;		Interrupt level 1
  7497 ;; This function uses a non-reentrant model
  7498 ;;
  7499                           
  7500  0004                     _INTERRUPT_InterruptManager:	
  7501                           
  7502                           ;incstack = 0
  7503  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  7504                           
  7505                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  7506  0005  3180               	pagesel	$
  7507                           
  7508                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  7509  0006  1A8B               	btfsc	11,5	;volatile
  7510  0007  1D0B               	btfss	11,2	;volatile
  7511  0008  280D               	goto	i1l236
  7512                           
  7513                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
  7514  0009  318A  22B3  3180   	fcall	_TMR0_ISR
  7515                           
  7516                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  7517  000C  2812               	goto	i1l240
  7518  000D                     i1l236:	
  7519                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.IOCIE == 1 && INTCO
      +                          Nbits.IOCIF == 1)
  7520                           
  7521  000D  198B               	btfsc	11,3	;volatile
  7522  000E  1C0B               	btfss	11,0	;volatile
  7523  000F  2812               	goto	i1l240
  7524                           
  7525                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         PIN_MANAGER_IOC();
  7526  0010  318A  2232         	fcall	_PIN_MANAGER_IOC
  7527  0012                     i1l240:	
  7528                           ;mcc_generated_files/interrupt_manager.c: 62:     }
  7529                           
  7530  0012  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  7531  0013  0009               	retfie
  7532  0014                     __end_of_INTERRUPT_InterruptManager:	
  7533                           
  7534                           	psect	text30
  7535  0AB3                     __ptext30:	
  7536 ;; *************** function _TMR0_ISR *****************
  7537 ;; Defined at:
  7538 ;;		line 108 in file "mcc_generated_files/tmr0.c"
  7539 ;; Parameters:    Size  Location     Type
  7540 ;;		None
  7541 ;; Auto vars:     Size  Location     Type
  7542 ;;		None
  7543 ;; Return value:  Size  Location     Type
  7544 ;;                  1    wreg      void 
  7545 ;; Registers used:
  7546 ;;		wreg, status,2, status,0, pclath, cstack
  7547 ;; Tracked objects:
  7548 ;;		On entry : 0/0
  7549 ;;		On exit  : 0/0
  7550 ;;		Unchanged: 0/0
  7551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7555 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7556 ;;Total ram usage:        0 bytes
  7557 ;; Hardware stack levels used:    1
  7558 ;; Hardware stack levels required when called:    1
  7559 ;; This function calls:
  7560 ;;		Absolute function
  7561 ;;		_TMR0_DefaultInterruptHandler
  7562 ;;		_timerISR
  7563 ;; This function is called by:
  7564 ;;		_INTERRUPT_InterruptManager
  7565 ;; This function uses a non-reentrant model
  7566 ;;
  7567                           
  7568                           
  7569                           ;psect for function _TMR0_ISR
  7570  0AB3                     _TMR0_ISR:	
  7571                           
  7572                           ;mcc_generated_files/tmr0.c: 112:     INTCONbits.TMR0IF = 0;
  7573                           
  7574                           ;incstack = 0
  7575                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  7576  0AB3  110B               	bcf	11,2	;volatile
  7577                           
  7578                           ;mcc_generated_files/tmr0.c: 114:     TMR0 = timer0ReloadVal;
  7579  0AB4  0020               	movlb	0	; select bank0
  7580  0AB5  085B               	movf	_timer0ReloadVal,w	;volatile
  7581  0AB6  0095               	movwf	21	;volatile
  7582                           
  7583                           ;mcc_generated_files/tmr0.c: 116:     if(TMR0_InterruptHandler)
  7584  0AB7  0853               	movf	_TMR0_InterruptHandler,w
  7585  0AB8  0454               	iorwf	_TMR0_InterruptHandler+1,w
  7586  0AB9  1903               	btfsc	3,2
  7587  0ABA  0008               	return
  7588                           
  7589                           ;mcc_generated_files/tmr0.c: 117:     {;mcc_generated_files/tmr0.c: 118:         TMR0_In
      +                          terruptHandler();
  7590  0ABB  0854               	movf	_TMR0_InterruptHandler+1,w
  7591  0ABC  008A               	movwf	10
  7592  0ABD  0853               	movf	_TMR0_InterruptHandler,w
  7593  0ABE  000A               	callw
  7594  0ABF  318A               	pagesel	$
  7595  0AC0  0008               	return
  7596  0AC1                     __end_of_TMR0_ISR:	
  7597                           
  7598                           	psect	text31
  7599  07FB                     __ptext31:	
  7600 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  7601 ;; Defined at:
  7602 ;;		line 129 in file "mcc_generated_files/tmr0.c"
  7603 ;; Parameters:    Size  Location     Type
  7604 ;;		None
  7605 ;; Auto vars:     Size  Location     Type
  7606 ;;		None
  7607 ;; Return value:  Size  Location     Type
  7608 ;;                  1    wreg      void 
  7609 ;; Registers used:
  7610 ;;		None
  7611 ;; Tracked objects:
  7612 ;;		On entry : 0/0
  7613 ;;		On exit  : 0/0
  7614 ;;		Unchanged: 0/0
  7615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7620 ;;Total ram usage:        0 bytes
  7621 ;; Hardware stack levels used:    1
  7622 ;; This function calls:
  7623 ;;		Nothing
  7624 ;; This function is called by:
  7625 ;;		_TMR0_Initialize
  7626 ;;		_TMR0_ISR
  7627 ;; This function uses a non-reentrant model
  7628 ;;
  7629                           
  7630                           
  7631                           ;psect for function _TMR0_DefaultInterruptHandler
  7632  07FB                     _TMR0_DefaultInterruptHandler:	
  7633                           
  7634                           ;incstack = 0
  7635                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  7636  07FB  0008               	return
  7637  07FC                     __end_of_TMR0_DefaultInterruptHandler:	
  7638                           
  7639                           	psect	text32
  7640  0A86                     __ptext32:	
  7641 ;; *************** function _timerISR *****************
  7642 ;; Defined at:
  7643 ;;		line 67 in file "main.c"
  7644 ;; Parameters:    Size  Location     Type
  7645 ;;		None
  7646 ;; Auto vars:     Size  Location     Type
  7647 ;;		None
  7648 ;; Return value:  Size  Location     Type
  7649 ;;                  1    wreg      void 
  7650 ;; Registers used:
  7651 ;;		wreg
  7652 ;; Tracked objects:
  7653 ;;		On entry : 0/0
  7654 ;;		On exit  : 0/0
  7655 ;;		Unchanged: 0/0
  7656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7661 ;;Total ram usage:        0 bytes
  7662 ;; Hardware stack levels used:    1
  7663 ;; This function calls:
  7664 ;;		Nothing
  7665 ;; This function is called by:
  7666 ;;		_main
  7667 ;;		_TMR0_ISR
  7668 ;; This function uses a non-reentrant model
  7669 ;;
  7670                           
  7671                           
  7672                           ;psect for function _timerISR
  7673  0A86                     _timerISR:	
  7674                           
  7675                           ;main.c: 68:     counter++ ;
  7676                           
  7677                           ;incstack = 0
  7678                           ; Regs used in _timerISR: [wreg]
  7679  0A86  3001               	movlw	1
  7680  0A87  0020               	movlb	0	; select bank0
  7681  0A88  07C6               	addwf	_counter,f	;volatile
  7682  0A89  3000               	movlw	0
  7683  0A8A  3DC7               	addwfc	_counter+1,f	;volatile
  7684  0A8B  3000               	movlw	0
  7685  0A8C  3DC8               	addwfc	_counter+2,f	;volatile
  7686  0A8D  3000               	movlw	0
  7687  0A8E  3DC9               	addwfc	_counter+3,f	;volatile
  7688  0A8F  0008               	return
  7689  0A90                     __end_of_timerISR:	
  7690                           
  7691                           	psect	text33
  7692  0A32                     __ptext33:	
  7693 ;; *************** function _PIN_MANAGER_IOC *****************
  7694 ;; Defined at:
  7695 ;;		line 125 in file "mcc_generated_files/pin_manager.c"
  7696 ;; Parameters:    Size  Location     Type
  7697 ;;		None
  7698 ;; Auto vars:     Size  Location     Type
  7699 ;;		None
  7700 ;; Return value:  Size  Location     Type
  7701 ;;                  1    wreg      void 
  7702 ;; Registers used:
  7703 ;;		wreg, status,2, status,0, pclath, cstack
  7704 ;; Tracked objects:
  7705 ;;		On entry : 0/0
  7706 ;;		On exit  : 0/0
  7707 ;;		Unchanged: 0/0
  7708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7713 ;;Total ram usage:        0 bytes
  7714 ;; Hardware stack levels used:    1
  7715 ;; Hardware stack levels required when called:    4
  7716 ;; This function calls:
  7717 ;;		_IOCCF7_ISR
  7718 ;; This function is called by:
  7719 ;;		_INTERRUPT_InterruptManager
  7720 ;; This function uses a non-reentrant model
  7721 ;;
  7722                           
  7723                           
  7724                           ;psect for function _PIN_MANAGER_IOC
  7725  0A32                     _PIN_MANAGER_IOC:	
  7726                           
  7727                           ;mcc_generated_files/pin_manager.c: 128:     if(IOCCFbits.IOCCF7 == 1)
  7728                           
  7729                           ;incstack = 0
  7730                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
  7731  0A32  0027               	movlb	7	; select bank7
  7732  0A33  1F99               	btfss	25,7	;volatile
  7733  0A34  0008               	return
  7734                           
  7735                           ;mcc_generated_files/pin_manager.c: 129:     {;mcc_generated_files/pin_manager.c: 130:  
      +                                 IOCCF7_ISR();
  7736  0A35  318A  22A6         	fcall	_IOCCF7_ISR
  7737  0A37  0008               	return
  7738  0A38                     __end_of_PIN_MANAGER_IOC:	
  7739                           
  7740                           	psect	text34
  7741  0AA6                     __ptext34:	
  7742 ;; *************** function _IOCCF7_ISR *****************
  7743 ;; Defined at:
  7744 ;;		line 137 in file "mcc_generated_files/pin_manager.c"
  7745 ;; Parameters:    Size  Location     Type
  7746 ;;		None
  7747 ;; Auto vars:     Size  Location     Type
  7748 ;;		None
  7749 ;; Return value:  Size  Location     Type
  7750 ;;                  1    wreg      void 
  7751 ;; Registers used:
  7752 ;;		wreg, status,2, status,0, pclath, cstack
  7753 ;; Tracked objects:
  7754 ;;		On entry : 0/0
  7755 ;;		On exit  : 0/0
  7756 ;;		Unchanged: 0/0
  7757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7762 ;;Total ram usage:        0 bytes
  7763 ;; Hardware stack levels used:    1
  7764 ;; Hardware stack levels required when called:    3
  7765 ;; This function calls:
  7766 ;;		Absolute function
  7767 ;;		_IOCCF7_DefaultInterruptHandler
  7768 ;;		_speedCalc
  7769 ;; This function is called by:
  7770 ;;		_PIN_MANAGER_IOC
  7771 ;; This function uses a non-reentrant model
  7772 ;;
  7773                           
  7774                           
  7775                           ;psect for function _IOCCF7_ISR
  7776  0AA6                     _IOCCF7_ISR:	
  7777                           
  7778                           ;mcc_generated_files/pin_manager.c: 142:     if(IOCCF7_InterruptHandler)
  7779                           
  7780                           ;incstack = 0
  7781                           ; Regs used in _IOCCF7_ISR: [wreg+status,2+status,0+pclath+cstack]
  7782  0AA6  0020               	movlb	0	; select bank0
  7783  0AA7  0855               	movf	_IOCCF7_InterruptHandler,w
  7784  0AA8  0456               	iorwf	_IOCCF7_InterruptHandler+1,w
  7785  0AA9  1903               	btfsc	3,2
  7786  0AAA  2AB0               	goto	i1l2826
  7787                           
  7788                           ;mcc_generated_files/pin_manager.c: 143:     {;mcc_generated_files/pin_manager.c: 144:  
      +                                 IOCCF7_InterruptHandler();
  7789  0AAB  0856               	movf	_IOCCF7_InterruptHandler+1,w
  7790  0AAC  008A               	movwf	10
  7791  0AAD  0855               	movf	_IOCCF7_InterruptHandler,w
  7792  0AAE  000A               	callw
  7793  0AAF  318A               	pagesel	$
  7794  0AB0                     i1l2826:	
  7795                           
  7796                           ;mcc_generated_files/pin_manager.c: 146:     IOCCFbits.IOCCF7 = 0;
  7797  0AB0  0027               	movlb	7	; select bank7
  7798  0AB1  1399               	bcf	25,7	;volatile
  7799  0AB2  0008               	return
  7800  0AB3                     __end_of_IOCCF7_ISR:	
  7801                           
  7802                           	psect	text35
  7803  07FC                     __ptext35:	
  7804 ;; *************** function _IOCCF7_DefaultInterruptHandler *****************
  7805 ;; Defined at:
  7806 ;;		line 159 in file "mcc_generated_files/pin_manager.c"
  7807 ;; Parameters:    Size  Location     Type
  7808 ;;		None
  7809 ;; Auto vars:     Size  Location     Type
  7810 ;;		None
  7811 ;; Return value:  Size  Location     Type
  7812 ;;                  1    wreg      void 
  7813 ;; Registers used:
  7814 ;;		None
  7815 ;; Tracked objects:
  7816 ;;		On entry : 0/0
  7817 ;;		On exit  : 0/0
  7818 ;;		Unchanged: 0/0
  7819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7824 ;;Total ram usage:        0 bytes
  7825 ;; Hardware stack levels used:    1
  7826 ;; This function calls:
  7827 ;;		Nothing
  7828 ;; This function is called by:
  7829 ;;		_PIN_MANAGER_Initialize
  7830 ;;		_IOCCF7_ISR
  7831 ;; This function uses a non-reentrant model
  7832 ;;
  7833                           
  7834                           
  7835                           ;psect for function _IOCCF7_DefaultInterruptHandler
  7836  07FC                     _IOCCF7_DefaultInterruptHandler:	
  7837                           
  7838                           ;incstack = 0
  7839                           ; Regs used in _IOCCF7_DefaultInterruptHandler: []
  7840  07FC  0008               	return
  7841  07FD                     __end_of_IOCCF7_DefaultInterruptHandler:	
  7842                           
  7843                           	psect	text36
  7844  0E87                     __ptext36:	
  7845 ;; *************** function _speedCalc *****************
  7846 ;; Defined at:
  7847 ;;		line 71 in file "main.c"
  7848 ;; Parameters:    Size  Location     Type
  7849 ;;		None
  7850 ;; Auto vars:     Size  Location     Type
  7851 ;;		None
  7852 ;; Return value:  Size  Location     Type
  7853 ;;                  1    wreg      void 
  7854 ;; Registers used:
  7855 ;;		wreg, status,2, status,0, pclath, cstack
  7856 ;; Tracked objects:
  7857 ;;		On entry : 0/0
  7858 ;;		On exit  : 0/0
  7859 ;;		Unchanged: 0/0
  7860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7862 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7864 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7865 ;;Total ram usage:        4 bytes
  7866 ;; Hardware stack levels used:    1
  7867 ;; Hardware stack levels required when called:    2
  7868 ;; This function calls:
  7869 ;;		___aldiv
  7870 ;;		___fladd
  7871 ;;		___flmul
  7872 ;;		___lmul
  7873 ;;		___xxtofl
  7874 ;; This function is called by:
  7875 ;;		_main
  7876 ;;		_IOCCF7_ISR
  7877 ;; This function uses a non-reentrant model
  7878 ;;
  7879                           
  7880                           
  7881                           ;psect for function _speedCalc
  7882  0E87                     _speedCalc:	
  7883                           
  7884                           ;main.c: 73:     rpm = ( counter / 1000 ) * 60 ;
  7885                           
  7886                           ;incstack = 0
  7887                           ; Regs used in _speedCalc: [wreg+status,2+status,0+pclath+cstack]
  7888  0E87  3000               	movlw	0
  7889  0E88  00F3               	movwf	___aldiv@divisor+3
  7890  0E89  3000               	movlw	0
  7891  0E8A  00F2               	movwf	___aldiv@divisor+2
  7892  0E8B  3003               	movlw	3
  7893  0E8C  00F1               	movwf	___aldiv@divisor+1
  7894  0E8D  30E8               	movlw	232
  7895  0E8E  00F0               	movwf	___aldiv@divisor
  7896  0E8F  0020               	movlb	0	; select bank0
  7897  0E90  0849               	movf	_counter+3,w	;volatile
  7898  0E91  00F7               	movwf	___aldiv@dividend+3
  7899  0E92  0848               	movf	_counter+2,w	;volatile
  7900  0E93  00F6               	movwf	___aldiv@dividend+2
  7901  0E94  0847               	movf	_counter+1,w	;volatile
  7902  0E95  00F5               	movwf	___aldiv@dividend+1
  7903  0E96  0846               	movf	_counter,w	;volatile
  7904  0E97  00F4               	movwf	___aldiv@dividend
  7905  0E98  318D  2570  318E   	fcall	___aldiv
  7906  0E9B  0873               	movf	?___aldiv+3,w
  7907  0E9C  0020               	movlb	0	; select bank0
  7908  0E9D  00A9               	movwf	___lmul@multiplier+3
  7909  0E9E  0872               	movf	?___aldiv+2,w
  7910  0E9F  00A8               	movwf	___lmul@multiplier+2
  7911  0EA0  0871               	movf	?___aldiv+1,w
  7912  0EA1  00A7               	movwf	___lmul@multiplier+1
  7913  0EA2  0870               	movf	?___aldiv,w
  7914  0EA3  00A6               	movwf	___lmul@multiplier
  7915  0EA4  3000               	movlw	0
  7916  0EA5  00AD               	movwf	___lmul@multiplicand+3
  7917  0EA6  3000               	movlw	0
  7918  0EA7  00AC               	movwf	___lmul@multiplicand+2
  7919  0EA8  3000               	movlw	0
  7920  0EA9  00AB               	movwf	___lmul@multiplicand+1
  7921  0EAA  303C               	movlw	60
  7922  0EAB  00AA               	movwf	___lmul@multiplicand
  7923  0EAC  318B  23DC  318E   	fcall	___lmul
  7924  0EAF  0020               	movlb	0	; select bank0
  7925  0EB0  0829               	movf	?___lmul+3,w
  7926  0EB1  00D2               	movwf	_rpm+3	;volatile
  7927  0EB2  0828               	movf	?___lmul+2,w
  7928  0EB3  00D1               	movwf	_rpm+2	;volatile
  7929  0EB4  0827               	movf	?___lmul+1,w
  7930  0EB5  00D0               	movwf	_rpm+1	;volatile
  7931  0EB6  0826               	movf	?___lmul,w
  7932  0EB7  00CF               	movwf	_rpm	;volatile
  7933                           
  7934                           ;main.c: 76:     speed = 2.1 * rpm * (0.06) ;
  7935  0EB8  3040               	movlw	64
  7936  0EB9  00A3               	movwf	___flmul@b+3
  7937  0EBA  3006               	movlw	6
  7938  0EBB  00A2               	movwf	___flmul@b+2
  7939  0EBC  3066               	movlw	102
  7940  0EBD  00A1               	movwf	___flmul@b+1
  7941  0EBE  3066               	movlw	102
  7942  0EBF  00A0               	movwf	___flmul@b
  7943  0EC0  0852               	movf	_rpm+3,w	;volatile
  7944  0EC1  00F3               	movwf	___xxtofl@val+3
  7945  0EC2  0851               	movf	_rpm+2,w	;volatile
  7946  0EC3  00F2               	movwf	___xxtofl@val+2
  7947  0EC4  0850               	movf	_rpm+1,w	;volatile
  7948  0EC5  00F1               	movwf	___xxtofl@val+1
  7949  0EC6  084F               	movf	_rpm,w	;volatile
  7950  0EC7  00F0               	movwf	___xxtofl@val
  7951  0EC8  3001               	movlw	1
  7952  0EC9  318D  25F2  318E   	fcall	___xxtofl
  7953  0ECC  0873               	movf	?___xxtofl+3,w
  7954  0ECD  0020               	movlb	0	; select bank0
  7955  0ECE  00A7               	movwf	___flmul@a+3
  7956  0ECF  0872               	movf	?___xxtofl+2,w
  7957  0ED0  00A6               	movwf	___flmul@a+2
  7958  0ED1  0871               	movf	?___xxtofl+1,w
  7959  0ED2  00A5               	movwf	___flmul@a+1
  7960  0ED3  0870               	movf	?___xxtofl,w
  7961  0ED4  00A4               	movwf	___flmul@a
  7962  0ED5  3180  203A  318E   	fcall	___flmul
  7963  0ED8  0020               	movlb	0	; select bank0
  7964  0ED9  0823               	movf	?___flmul+3,w
  7965  0EDA  00BD               	movwf	_speedCalc$1213+3
  7966  0EDB  0822               	movf	?___flmul+2,w
  7967  0EDC  00BC               	movwf	_speedCalc$1213+2
  7968  0EDD  0821               	movf	?___flmul+1,w
  7969  0EDE  00BB               	movwf	_speedCalc$1213+1
  7970  0EDF  0820               	movf	?___flmul,w
  7971  0EE0  00BA               	movwf	_speedCalc$1213
  7972                           
  7973                           ;main.c: 76:     speed = 2.1 * rpm * (0.06) ;
  7974  0EE1  303D               	movlw	61
  7975  0EE2  00A3               	movwf	___flmul@b+3
  7976  0EE3  3075               	movlw	117
  7977  0EE4  00A2               	movwf	___flmul@b+2
  7978  0EE5  30C2               	movlw	194
  7979  0EE6  00A1               	movwf	___flmul@b+1
  7980  0EE7  308F               	movlw	143
  7981  0EE8  00A0               	movwf	___flmul@b
  7982  0EE9  083D               	movf	_speedCalc$1213+3,w
  7983  0EEA  00A7               	movwf	___flmul@a+3
  7984  0EEB  083C               	movf	_speedCalc$1213+2,w
  7985  0EEC  00A6               	movwf	___flmul@a+2
  7986  0EED  083B               	movf	_speedCalc$1213+1,w
  7987  0EEE  00A5               	movwf	___flmul@a+1
  7988  0EEF  083A               	movf	_speedCalc$1213,w
  7989  0EF0  00A4               	movwf	___flmul@a
  7990  0EF1  3180  203A  318E   	fcall	___flmul
  7991  0EF4  0020               	movlb	0	; select bank0
  7992  0EF5  0823               	movf	?___flmul+3,w
  7993  0EF6  00C5               	movwf	_speed+3	;volatile
  7994  0EF7  0822               	movf	?___flmul+2,w
  7995  0EF8  00C4               	movwf	_speed+2	;volatile
  7996  0EF9  0821               	movf	?___flmul+1,w
  7997  0EFA  00C3               	movwf	_speed+1	;volatile
  7998  0EFB  0820               	movf	?___flmul,w
  7999  0EFC  00C2               	movwf	_speed	;volatile
  8000                           
  8001                           ;main.c: 77:     counter = 0 ;
  8002  0EFD  3000               	movlw	0
  8003  0EFE  00C9               	movwf	_counter+3	;volatile
  8004  0EFF  3000               	movlw	0
  8005  0F00  00C8               	movwf	_counter+2	;volatile
  8006  0F01  3000               	movlw	0
  8007  0F02  00C7               	movwf	_counter+1	;volatile
  8008  0F03  3000               	movlw	0
  8009  0F04  00C6               	movwf	_counter	;volatile
  8010                           
  8011                           ;main.c: 78:     distance = distance + 2.1 ;
  8012  0F05  3040               	movlw	64
  8013  0F06  00F3               	movwf	___fladd@b+3
  8014  0F07  3006               	movlw	6
  8015  0F08  00F2               	movwf	___fladd@b+2
  8016  0F09  3066               	movlw	102
  8017  0F0A  00F1               	movwf	___fladd@b+1
  8018  0F0B  3066               	movlw	102
  8019  0F0C  00F0               	movwf	___fladd@b
  8020  0F0D  0841               	movf	_distance+3,w	;volatile
  8021  0F0E  00F7               	movwf	___fladd@a+3
  8022  0F0F  0840               	movf	_distance+2,w	;volatile
  8023  0F10  00F6               	movwf	___fladd@a+2
  8024  0F11  083F               	movf	_distance+1,w	;volatile
  8025  0F12  00F5               	movwf	___fladd@a+1
  8026  0F13  083E               	movf	_distance,w	;volatile
  8027  0F14  00F4               	movwf	___fladd@a
  8028  0F15  3182  2266         	fcall	___fladd
  8029  0F17  0873               	movf	?___fladd+3,w
  8030  0F18  0020               	movlb	0	; select bank0
  8031  0F19  00C1               	movwf	_distance+3	;volatile
  8032  0F1A  0872               	movf	?___fladd+2,w
  8033  0F1B  00C0               	movwf	_distance+2	;volatile
  8034  0F1C  0871               	movf	?___fladd+1,w
  8035  0F1D  00BF               	movwf	_distance+1	;volatile
  8036  0F1E  0870               	movf	?___fladd,w
  8037  0F1F  00BE               	movwf	_distance	;volatile
  8038  0F20  0008               	return
  8039  0F21                     __end_of_speedCalc:	
  8040                           
  8041                           	psect	text37
  8042  0DF2                     __ptext37:	
  8043 ;; *************** function ___xxtofl *****************
  8044 ;; Defined at:
  8045 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
  8046 ;; Parameters:    Size  Location     Type
  8047 ;;  sign            1    wreg     unsigned char 
  8048 ;;  val             4    0[COMMON] long 
  8049 ;; Auto vars:     Size  Location     Type
  8050 ;;  sign            1    8[COMMON] unsigned char 
  8051 ;;  arg             4   10[COMMON] unsigned long 
  8052 ;;  exp             1    9[COMMON] unsigned char 
  8053 ;; Return value:  Size  Location     Type
  8054 ;;                  4    0[COMMON] unsigned char 
  8055 ;; Registers used:
  8056 ;;		wreg, status,2, status,0
  8057 ;; Tracked objects:
  8058 ;;		On entry : 0/0
  8059 ;;		On exit  : 0/0
  8060 ;;		Unchanged: 0/0
  8061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8062 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8063 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8064 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8065 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8066 ;;Total ram usage:       14 bytes
  8067 ;; Hardware stack levels used:    1
  8068 ;; This function calls:
  8069 ;;		Nothing
  8070 ;; This function is called by:
  8071 ;;		_speedCalc
  8072 ;; This function uses a non-reentrant model
  8073 ;;
  8074                           
  8075                           
  8076                           ;psect for function ___xxtofl
  8077  0DF2                     ___xxtofl:	
  8078                           
  8079                           ;incstack = 0
  8080                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  8081                           ;___xxtofl@sign stored from wreg
  8082  0DF2  00F8               	movwf	___xxtofl@sign
  8083  0DF3  0878               	movf	___xxtofl@sign,w
  8084  0DF4  1D03               	btfss	3,2
  8085  0DF5  1FF3               	btfss	___xxtofl@val+3,7
  8086  0DF6  2E07               	goto	i1l2638
  8087  0DF7  0970               	comf	___xxtofl@val,w
  8088  0DF8  00FA               	movwf	___xxtofl@arg
  8089  0DF9  0971               	comf	___xxtofl@val+1,w
  8090  0DFA  00FB               	movwf	___xxtofl@arg+1
  8091  0DFB  0972               	comf	___xxtofl@val+2,w
  8092  0DFC  00FC               	movwf	___xxtofl@arg+2
  8093  0DFD  0973               	comf	___xxtofl@val+3,w
  8094  0DFE  00FD               	movwf	___xxtofl@arg+3
  8095  0DFF  0AFA               	incf	___xxtofl@arg,f
  8096  0E00  1903               	skipnz
  8097  0E01  0AFB               	incf	___xxtofl@arg+1,f
  8098  0E02  1903               	skipnz
  8099  0E03  0AFC               	incf	___xxtofl@arg+2,f
  8100  0E04  1903               	skipnz
  8101  0E05  0AFD               	incf	___xxtofl@arg+3,f
  8102  0E06  2E0F               	goto	i1l926
  8103  0E07                     i1l2638:	
  8104  0E07  0873               	movf	___xxtofl@val+3,w
  8105  0E08  00FD               	movwf	___xxtofl@arg+3
  8106  0E09  0872               	movf	___xxtofl@val+2,w
  8107  0E0A  00FC               	movwf	___xxtofl@arg+2
  8108  0E0B  0871               	movf	___xxtofl@val+1,w
  8109  0E0C  00FB               	movwf	___xxtofl@arg+1
  8110  0E0D  0870               	movf	___xxtofl@val,w
  8111  0E0E  00FA               	movwf	___xxtofl@arg
  8112  0E0F                     i1l926:	
  8113  0E0F  0873               	movf	___xxtofl@val+3,w
  8114  0E10  0472               	iorwf	___xxtofl@val+2,w
  8115  0E11  0471               	iorwf	___xxtofl@val+1,w
  8116  0E12  0470               	iorwf	___xxtofl@val,w
  8117  0E13  1D03               	skipz
  8118  0E14  2E1E               	goto	i1l2644
  8119  0E15  3000               	movlw	0
  8120  0E16  00F3               	movwf	?___xxtofl+3
  8121  0E17  3000               	movlw	0
  8122  0E18  00F2               	movwf	?___xxtofl+2
  8123  0E19  3000               	movlw	0
  8124  0E1A  00F1               	movwf	?___xxtofl+1
  8125  0E1B  3000               	movlw	0
  8126  0E1C  00F0               	movwf	?___xxtofl
  8127  0E1D  0008               	return
  8128  0E1E                     i1l2644:	
  8129  0E1E  3096               	movlw	150
  8130  0E1F  00F4               	movwf	??___xxtofl
  8131  0E20  0874               	movf	??___xxtofl,w
  8132  0E21  00F9               	movwf	___xxtofl@exp
  8133  0E22                     i1l2648:	
  8134  0E22  30FE               	movlw	254
  8135  0E23  057D               	andwf	___xxtofl@arg+3,w
  8136  0E24  1903               	btfsc	3,2
  8137  0E25  2E45               	goto	i1l932
  8138  0E26  3001               	movlw	1
  8139  0E27  00F4               	movwf	??___xxtofl
  8140  0E28  0874               	movf	??___xxtofl,w
  8141  0E29  07F9               	addwf	___xxtofl@exp,f
  8142  0E2A  3001               	movlw	1
  8143  0E2B                     u316_25:	
  8144  0E2B  36FD               	lsrf	___xxtofl@arg+3,f
  8145  0E2C  0CFC               	rrf	___xxtofl@arg+2,f
  8146  0E2D  0CFB               	rrf	___xxtofl@arg+1,f
  8147  0E2E  0CFA               	rrf	___xxtofl@arg,f
  8148  0E2F  0B89               	decfsz	9,f
  8149  0E30  2E2B               	goto	u316_25
  8150  0E31  2E22               	goto	i1l2648
  8151  0E32                     i1l2650:	
  8152  0E32  3001               	movlw	1
  8153  0E33  00F4               	movwf	??___xxtofl
  8154  0E34  0874               	movf	??___xxtofl,w
  8155  0E35  07F9               	addwf	___xxtofl@exp,f
  8156  0E36  3001               	movlw	1
  8157  0E37  07FA               	addwf	___xxtofl@arg,f
  8158  0E38  3000               	movlw	0
  8159  0E39  3DFB               	addwfc	___xxtofl@arg+1,f
  8160  0E3A  3000               	movlw	0
  8161  0E3B  3DFC               	addwfc	___xxtofl@arg+2,f
  8162  0E3C  3000               	movlw	0
  8163  0E3D  3DFD               	addwfc	___xxtofl@arg+3,f
  8164  0E3E  3001               	movlw	1
  8165  0E3F                     u318_25:	
  8166  0E3F  36FD               	lsrf	___xxtofl@arg+3,f
  8167  0E40  0CFC               	rrf	___xxtofl@arg+2,f
  8168  0E41  0CFB               	rrf	___xxtofl@arg+1,f
  8169  0E42  0CFA               	rrf	___xxtofl@arg,f
  8170  0E43  0B89               	decfsz	9,f
  8171  0E44  2E3F               	goto	u318_25
  8172  0E45                     i1l932:	
  8173  0E45  30FF               	movlw	255
  8174  0E46  057D               	andwf	___xxtofl@arg+3,w
  8175  0E47  1903               	btfsc	3,2
  8176  0E48  2E57               	goto	i1l2658
  8177  0E49  2E32               	goto	i1l2650
  8178  0E4A                     i1l2660:	
  8179  0E4A  3002               	movlw	2
  8180  0E4B  0279               	subwf	___xxtofl@exp,w
  8181  0E4C  1C03               	btfss	3,0
  8182  0E4D  2E59               	goto	i1l939
  8183  0E4E  3001               	movlw	1
  8184  0E4F  02F9               	subwf	___xxtofl@exp,f
  8185  0E50  3001               	movlw	1
  8186  0E51                     u320_25:	
  8187  0E51  35FA               	lslf	___xxtofl@arg,f
  8188  0E52  0DFB               	rlf	___xxtofl@arg+1,f
  8189  0E53  0DFC               	rlf	___xxtofl@arg+2,f
  8190  0E54  0DFD               	rlf	___xxtofl@arg+3,f
  8191  0E55  0B89               	decfsz	9,f
  8192  0E56  2E51               	goto	u320_25
  8193  0E57                     i1l2658:	
  8194  0E57  1FFC               	btfss	___xxtofl@arg+2,7
  8195  0E58  2E4A               	goto	i1l2660
  8196  0E59                     i1l939:	
  8197  0E59  1879               	btfsc	___xxtofl@exp,0
  8198  0E5A  2E63               	goto	i1l940
  8199  0E5B  30FF               	movlw	255
  8200  0E5C  05FA               	andwf	___xxtofl@arg,f
  8201  0E5D  30FF               	movlw	255
  8202  0E5E  05FB               	andwf	___xxtofl@arg+1,f
  8203  0E5F  307F               	movlw	127
  8204  0E60  05FC               	andwf	___xxtofl@arg+2,f
  8205  0E61  30FF               	movlw	255
  8206  0E62  05FD               	andwf	___xxtofl@arg+3,f
  8207  0E63                     i1l940:	
  8208  0E63  1003               	clrc
  8209  0E64  0CF9               	rrf	___xxtofl@exp,f
  8210  0E65  0879               	movf	___xxtofl@exp,w
  8211  0E66  00F4               	movwf	??___xxtofl
  8212  0E67  01F5               	clrf	??___xxtofl+1
  8213  0E68  01F6               	clrf	??___xxtofl+2
  8214  0E69  01F7               	clrf	??___xxtofl+3
  8215  0E6A  3018               	movlw	24
  8216  0E6B                     u324_25:	
  8217  0E6B  35F4               	lslf	??___xxtofl,f
  8218  0E6C  0DF5               	rlf	??___xxtofl+1,f
  8219  0E6D  0DF6               	rlf	??___xxtofl+2,f
  8220  0E6E  0DF7               	rlf	??___xxtofl+3,f
  8221  0E6F  0B89               	decfsz	9,f
  8222  0E70  2E6B               	goto	u324_25
  8223  0E71  0874               	movf	??___xxtofl,w
  8224  0E72  04FA               	iorwf	___xxtofl@arg,f
  8225  0E73  0875               	movf	??___xxtofl+1,w
  8226  0E74  04FB               	iorwf	___xxtofl@arg+1,f
  8227  0E75  0876               	movf	??___xxtofl+2,w
  8228  0E76  04FC               	iorwf	___xxtofl@arg+2,f
  8229  0E77  0877               	movf	??___xxtofl+3,w
  8230  0E78  04FD               	iorwf	___xxtofl@arg+3,f
  8231  0E79  0878               	movf	___xxtofl@sign,w
  8232  0E7A  1D03               	btfss	3,2
  8233  0E7B  1FF3               	btfss	___xxtofl@val+3,7
  8234  0E7C  2E7E               	goto	i1l2672
  8235  0E7D  17FD               	bsf	___xxtofl@arg+3,7
  8236  0E7E                     i1l2672:	
  8237  0E7E  087D               	movf	___xxtofl@arg+3,w
  8238  0E7F  00F3               	movwf	?___xxtofl+3
  8239  0E80  087C               	movf	___xxtofl@arg+2,w
  8240  0E81  00F2               	movwf	?___xxtofl+2
  8241  0E82  087B               	movf	___xxtofl@arg+1,w
  8242  0E83  00F1               	movwf	?___xxtofl+1
  8243  0E84  087A               	movf	___xxtofl@arg,w
  8244  0E85  00F0               	movwf	?___xxtofl
  8245  0E86  0008               	return
  8246  0E87                     __end_of___xxtofl:	
  8247                           
  8248                           	psect	text38
  8249  0BDC                     __ptext38:	
  8250 ;; *************** function ___lmul *****************
  8251 ;; Defined at:
  8252 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul32.c"
  8253 ;; Parameters:    Size  Location     Type
  8254 ;;  multiplier      4    6[BANK0 ] unsigned long 
  8255 ;;  multiplicand    4   10[BANK0 ] unsigned long 
  8256 ;; Auto vars:     Size  Location     Type
  8257 ;;  product         4    9[COMMON] unsigned long 
  8258 ;; Return value:  Size  Location     Type
  8259 ;;                  4    6[BANK0 ] unsigned long 
  8260 ;; Registers used:
  8261 ;;		wreg, status,2, status,0
  8262 ;; Tracked objects:
  8263 ;;		On entry : 0/0
  8264 ;;		On exit  : 0/0
  8265 ;;		Unchanged: 0/0
  8266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8267 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8268 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8270 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8271 ;;Total ram usage:       12 bytes
  8272 ;; Hardware stack levels used:    1
  8273 ;; This function calls:
  8274 ;;		Nothing
  8275 ;; This function is called by:
  8276 ;;		_speedCalc
  8277 ;; This function uses a non-reentrant model
  8278 ;;
  8279                           
  8280                           
  8281                           ;psect for function ___lmul
  8282  0BDC                     ___lmul:	
  8283                           
  8284                           ;incstack = 0
  8285                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  8286  0BDC  3000               	movlw	0
  8287  0BDD  00FC               	movwf	___lmul@product+3
  8288  0BDE  3000               	movlw	0
  8289  0BDF  00FB               	movwf	___lmul@product+2
  8290  0BE0  3000               	movlw	0
  8291  0BE1  00FA               	movwf	___lmul@product+1
  8292  0BE2  3000               	movlw	0
  8293  0BE3  00F9               	movwf	___lmul@product
  8294  0BE4                     i1l2246:	
  8295  0BE4  0020               	movlb	0	; select bank0
  8296  0BE5  1C26               	btfss	___lmul@multiplier,0
  8297  0BE6  2BEF               	goto	i1l2250
  8298  0BE7  082A               	movf	___lmul@multiplicand,w
  8299  0BE8  07F9               	addwf	___lmul@product,f
  8300  0BE9  082B               	movf	___lmul@multiplicand+1,w
  8301  0BEA  3DFA               	addwfc	___lmul@product+1,f
  8302  0BEB  082C               	movf	___lmul@multiplicand+2,w
  8303  0BEC  3DFB               	addwfc	___lmul@product+2,f
  8304  0BED  082D               	movf	___lmul@multiplicand+3,w
  8305  0BEE  3DFC               	addwfc	___lmul@product+3,f
  8306  0BEF                     i1l2250:	
  8307  0BEF  3001               	movlw	1
  8308  0BF0                     u231_25:	
  8309  0BF0  35AA               	lslf	___lmul@multiplicand,f
  8310  0BF1  0DAB               	rlf	___lmul@multiplicand+1,f
  8311  0BF2  0DAC               	rlf	___lmul@multiplicand+2,f
  8312  0BF3  0DAD               	rlf	___lmul@multiplicand+3,f
  8313  0BF4  0B89               	decfsz	9,f
  8314  0BF5  2BF0               	goto	u231_25
  8315  0BF6  3001               	movlw	1
  8316  0BF7                     u232_25:	
  8317  0BF7  36A9               	lsrf	___lmul@multiplier+3,f
  8318  0BF8  0CA8               	rrf	___lmul@multiplier+2,f
  8319  0BF9  0CA7               	rrf	___lmul@multiplier+1,f
  8320  0BFA  0CA6               	rrf	___lmul@multiplier,f
  8321  0BFB  0B89               	decfsz	9,f
  8322  0BFC  2BF7               	goto	u232_25
  8323  0BFD  0829               	movf	___lmul@multiplier+3,w
  8324  0BFE  0428               	iorwf	___lmul@multiplier+2,w
  8325  0BFF  0427               	iorwf	___lmul@multiplier+1,w
  8326  0C00  0426               	iorwf	___lmul@multiplier,w
  8327  0C01  1D03               	skipz
  8328  0C02  2BE4               	goto	i1l2246
  8329  0C03  087C               	movf	___lmul@product+3,w
  8330  0C04  00A9               	movwf	?___lmul+3
  8331  0C05  087B               	movf	___lmul@product+2,w
  8332  0C06  00A8               	movwf	?___lmul+2
  8333  0C07  087A               	movf	___lmul@product+1,w
  8334  0C08  00A7               	movwf	?___lmul+1
  8335  0C09  0879               	movf	___lmul@product,w
  8336  0C0A  00A6               	movwf	?___lmul
  8337  0C0B  0008               	return
  8338  0C0C                     __end_of___lmul:	
  8339                           
  8340                           	psect	text39
  8341  003A                     __ptext39:	
  8342 ;; *************** function ___flmul *****************
  8343 ;; Defined at:
  8344 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
  8345 ;; Parameters:    Size  Location     Type
  8346 ;;  b               4    0[BANK0 ] unsigned long 
  8347 ;;  a               4    4[BANK0 ] unsigned long 
  8348 ;; Auto vars:     Size  Location     Type
  8349 ;;  prod            4   20[BANK0 ] struct .
  8350 ;;  grs             4   14[BANK0 ] unsigned long 
  8351 ;;  temp            2   24[BANK0 ] struct .
  8352 ;;  bexp            1   19[BANK0 ] unsigned char 
  8353 ;;  aexp            1   18[BANK0 ] unsigned char 
  8354 ;;  sign            1   13[BANK0 ] unsigned char 
  8355 ;; Return value:  Size  Location     Type
  8356 ;;                  4    0[BANK0 ] unsigned char 
  8357 ;; Registers used:
  8358 ;;		wreg, status,2, status,0, pclath, cstack
  8359 ;; Tracked objects:
  8360 ;;		On entry : 0/0
  8361 ;;		On exit  : 0/0
  8362 ;;		Unchanged: 0/0
  8363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8364 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8365 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8366 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8367 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8368 ;;Total ram usage:       26 bytes
  8369 ;; Hardware stack levels used:    1
  8370 ;; Hardware stack levels required when called:    1
  8371 ;; This function calls:
  8372 ;;		__Umul8_16
  8373 ;; This function is called by:
  8374 ;;		_speedCalc
  8375 ;; This function uses a non-reentrant model
  8376 ;;
  8377                           
  8378                           
  8379                           ;psect for function ___flmul
  8380  003A                     ___flmul:	
  8381                           
  8382                           ;incstack = 0
  8383                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  8384  003A  0020               	movlb	0	; select bank0
  8385  003B  0823               	movf	___flmul@b+3,w
  8386  003C  3980               	andlw	128
  8387  003D  00A8               	movwf	??___flmul
  8388  003E  0828               	movf	??___flmul,w
  8389  003F  00AD               	movwf	___flmul@sign
  8390  0040  3523               	lslf	___flmul@b+3,w
  8391  0041  00A8               	movwf	??___flmul
  8392  0042  0828               	movf	??___flmul,w
  8393  0043  00B3               	movwf	___flmul@bexp
  8394  0044  1BA2               	btfsc	___flmul@b+2,7
  8395  0045  1433               	bsf	___flmul@bexp,0
  8396  0046  0833               	movf	___flmul@bexp,w
  8397  0047  1903               	btfsc	3,2
  8398  0048  2856               	goto	i1l2508
  8399  0049  0A33               	incf	___flmul@bexp,w
  8400  004A  1D03               	btfss	3,2
  8401  004B  2854               	goto	i1l2506
  8402  004C  3000               	movlw	0
  8403  004D  00A3               	movwf	___flmul@b+3
  8404  004E  3000               	movlw	0
  8405  004F  00A2               	movwf	___flmul@b+2
  8406  0050  3000               	movlw	0
  8407  0051  00A1               	movwf	___flmul@b+1
  8408  0052  3000               	movlw	0
  8409  0053  00A0               	movwf	___flmul@b
  8410  0054                     i1l2506:	
  8411  0054  17A2               	bsf	___flmul@b+2,7
  8412  0055  285E               	goto	i1l2510
  8413  0056                     i1l2508:	
  8414  0056  3000               	movlw	0
  8415  0057  00A3               	movwf	___flmul@b+3
  8416  0058  3000               	movlw	0
  8417  0059  00A2               	movwf	___flmul@b+2
  8418  005A  3000               	movlw	0
  8419  005B  00A1               	movwf	___flmul@b+1
  8420  005C  3000               	movlw	0
  8421  005D  00A0               	movwf	___flmul@b
  8422  005E                     i1l2510:	
  8423  005E  0827               	movf	___flmul@a+3,w
  8424  005F  3980               	andlw	128
  8425  0060  00A8               	movwf	??___flmul
  8426  0061  0828               	movf	??___flmul,w
  8427  0062  06AD               	xorwf	___flmul@sign,f
  8428  0063  3527               	lslf	___flmul@a+3,w
  8429  0064  00A8               	movwf	??___flmul
  8430  0065  0828               	movf	??___flmul,w
  8431  0066  00B2               	movwf	___flmul@aexp
  8432  0067  1BA6               	btfsc	___flmul@a+2,7
  8433  0068  1432               	bsf	___flmul@aexp,0
  8434  0069  0832               	movf	___flmul@aexp,w
  8435  006A  1903               	btfsc	3,2
  8436  006B  2879               	goto	i1l2526
  8437  006C  0A32               	incf	___flmul@aexp,w
  8438  006D  1D03               	btfss	3,2
  8439  006E  2877               	goto	i1l2524
  8440  006F  3000               	movlw	0
  8441  0070  00A7               	movwf	___flmul@a+3
  8442  0071  3000               	movlw	0
  8443  0072  00A6               	movwf	___flmul@a+2
  8444  0073  3000               	movlw	0
  8445  0074  00A5               	movwf	___flmul@a+1
  8446  0075  3000               	movlw	0
  8447  0076  00A4               	movwf	___flmul@a
  8448  0077                     i1l2524:	
  8449  0077  17A6               	bsf	___flmul@a+2,7
  8450  0078  2881               	goto	i1l2528
  8451  0079                     i1l2526:	
  8452  0079  3000               	movlw	0
  8453  007A  00A7               	movwf	___flmul@a+3
  8454  007B  3000               	movlw	0
  8455  007C  00A6               	movwf	___flmul@a+2
  8456  007D  3000               	movlw	0
  8457  007E  00A5               	movwf	___flmul@a+1
  8458  007F  3000               	movlw	0
  8459  0080  00A4               	movwf	___flmul@a
  8460  0081                     i1l2528:	
  8461  0081  0832               	movf	___flmul@aexp,w
  8462  0082  1D03               	btfss	3,2
  8463  0083  0833               	movf	___flmul@bexp,w
  8464  0084  1D03               	btfss	3,2
  8465  0085  288F               	goto	i1l2536
  8466  0086  3000               	movlw	0
  8467  0087  00A3               	movwf	?___flmul+3
  8468  0088  3000               	movlw	0
  8469  0089  00A2               	movwf	?___flmul+2
  8470  008A  3000               	movlw	0
  8471  008B  00A1               	movwf	?___flmul+1
  8472  008C  3000               	movlw	0
  8473  008D  00A0               	movwf	?___flmul
  8474  008E  0008               	return
  8475  008F                     i1l2536:	
  8476  008F  0820               	movf	___flmul@b,w
  8477  0090  00A8               	movwf	??___flmul
  8478  0091  0828               	movf	??___flmul,w
  8479  0092  00F0               	movwf	__Umul8_16@multiplicand
  8480  0093  0826               	movf	___flmul@a+2,w
  8481  0094  318B  234F  3180   	fcall	__Umul8_16
  8482  0097  0871               	movf	?__Umul8_16+1,w
  8483  0098  0020               	movlb	0	; select bank0
  8484  0099  00B9               	movwf	___flmul@temp+1
  8485  009A  0870               	movf	?__Umul8_16,w
  8486  009B  00B8               	movwf	___flmul@temp
  8487  009C  0838               	movf	___flmul@temp,w
  8488  009D  00A8               	movwf	??___flmul
  8489  009E  01A9               	clrf	??___flmul+1
  8490  009F  01AA               	clrf	??___flmul+2
  8491  00A0  01AB               	clrf	??___flmul+3
  8492  00A1  082B               	movf	??___flmul+3,w
  8493  00A2  00B1               	movwf	___flmul@grs+3
  8494  00A3  082A               	movf	??___flmul+2,w
  8495  00A4  00B0               	movwf	___flmul@grs+2
  8496  00A5  0829               	movf	??___flmul+1,w
  8497  00A6  00AF               	movwf	___flmul@grs+1
  8498  00A7  0828               	movf	??___flmul,w
  8499  00A8  00AE               	movwf	___flmul@grs
  8500  00A9  0839               	movf	___flmul@temp+1,w
  8501  00AA  00A8               	movwf	??___flmul
  8502  00AB  01A9               	clrf	??___flmul+1
  8503  00AC  01AA               	clrf	??___flmul+2
  8504  00AD  01AB               	clrf	??___flmul+3
  8505  00AE  082B               	movf	??___flmul+3,w
  8506  00AF  00B7               	movwf	___flmul@prod+3
  8507  00B0  082A               	movf	??___flmul+2,w
  8508  00B1  00B6               	movwf	___flmul@prod+2
  8509  00B2  0829               	movf	??___flmul+1,w
  8510  00B3  00B5               	movwf	___flmul@prod+1
  8511  00B4  0828               	movf	??___flmul,w
  8512  00B5  00B4               	movwf	___flmul@prod
  8513  00B6  0821               	movf	___flmul@b+1,w
  8514  00B7  00A8               	movwf	??___flmul
  8515  00B8  0828               	movf	??___flmul,w
  8516  00B9  00F0               	movwf	__Umul8_16@multiplicand
  8517  00BA  0825               	movf	___flmul@a+1,w
  8518  00BB  318B  234F  3180   	fcall	__Umul8_16
  8519  00BE  0871               	movf	?__Umul8_16+1,w
  8520  00BF  0020               	movlb	0	; select bank0
  8521  00C0  00B9               	movwf	___flmul@temp+1
  8522  00C1  0870               	movf	?__Umul8_16,w
  8523  00C2  00B8               	movwf	___flmul@temp
  8524  00C3  0838               	movf	___flmul@temp,w
  8525  00C4  00A8               	movwf	??___flmul
  8526  00C5  01A9               	clrf	??___flmul+1
  8527  00C6  01AA               	clrf	??___flmul+2
  8528  00C7  01AB               	clrf	??___flmul+3
  8529  00C8  0828               	movf	??___flmul,w
  8530  00C9  07AE               	addwf	___flmul@grs,f
  8531  00CA  0829               	movf	??___flmul+1,w
  8532  00CB  3DAF               	addwfc	___flmul@grs+1,f
  8533  00CC  082A               	movf	??___flmul+2,w
  8534  00CD  3DB0               	addwfc	___flmul@grs+2,f
  8535  00CE  082B               	movf	??___flmul+3,w
  8536  00CF  3DB1               	addwfc	___flmul@grs+3,f
  8537  00D0  0839               	movf	___flmul@temp+1,w
  8538  00D1  00A8               	movwf	??___flmul
  8539  00D2  01A9               	clrf	??___flmul+1
  8540  00D3  01AA               	clrf	??___flmul+2
  8541  00D4  01AB               	clrf	??___flmul+3
  8542  00D5  0828               	movf	??___flmul,w
  8543  00D6  07B4               	addwf	___flmul@prod,f
  8544  00D7  0829               	movf	??___flmul+1,w
  8545  00D8  3DB5               	addwfc	___flmul@prod+1,f
  8546  00D9  082A               	movf	??___flmul+2,w
  8547  00DA  3DB6               	addwfc	___flmul@prod+2,f
  8548  00DB  082B               	movf	??___flmul+3,w
  8549  00DC  3DB7               	addwfc	___flmul@prod+3,f
  8550  00DD  0822               	movf	___flmul@b+2,w
  8551  00DE  00A8               	movwf	??___flmul
  8552  00DF  0828               	movf	??___flmul,w
  8553  00E0  00F0               	movwf	__Umul8_16@multiplicand
  8554  00E1  0824               	movf	___flmul@a,w
  8555  00E2  318B  234F  3180   	fcall	__Umul8_16
  8556  00E5  0871               	movf	?__Umul8_16+1,w
  8557  00E6  0020               	movlb	0	; select bank0
  8558  00E7  00B9               	movwf	___flmul@temp+1
  8559  00E8  0870               	movf	?__Umul8_16,w
  8560  00E9  00B8               	movwf	___flmul@temp
  8561  00EA  0838               	movf	___flmul@temp,w
  8562  00EB  00A8               	movwf	??___flmul
  8563  00EC  01A9               	clrf	??___flmul+1
  8564  00ED  01AA               	clrf	??___flmul+2
  8565  00EE  01AB               	clrf	??___flmul+3
  8566  00EF  0828               	movf	??___flmul,w
  8567  00F0  07AE               	addwf	___flmul@grs,f
  8568  00F1  0829               	movf	??___flmul+1,w
  8569  00F2  3DAF               	addwfc	___flmul@grs+1,f
  8570  00F3  082A               	movf	??___flmul+2,w
  8571  00F4  3DB0               	addwfc	___flmul@grs+2,f
  8572  00F5  082B               	movf	??___flmul+3,w
  8573  00F6  3DB1               	addwfc	___flmul@grs+3,f
  8574  00F7  0839               	movf	___flmul@temp+1,w
  8575  00F8  00A8               	movwf	??___flmul
  8576  00F9  01A9               	clrf	??___flmul+1
  8577  00FA  01AA               	clrf	??___flmul+2
  8578  00FB  01AB               	clrf	??___flmul+3
  8579  00FC  0828               	movf	??___flmul,w
  8580  00FD  07B4               	addwf	___flmul@prod,f
  8581  00FE  0829               	movf	??___flmul+1,w
  8582  00FF  3DB5               	addwfc	___flmul@prod+1,f
  8583  0100  082A               	movf	??___flmul+2,w
  8584  0101  3DB6               	addwfc	___flmul@prod+2,f
  8585  0102  082B               	movf	??___flmul+3,w
  8586  0103  3DB7               	addwfc	___flmul@prod+3,f
  8587  0104  3008               	movlw	8
  8588  0105                     u295_25:	
  8589  0105  35AE               	lslf	___flmul@grs,f
  8590  0106  0DAF               	rlf	___flmul@grs+1,f
  8591  0107  0DB0               	rlf	___flmul@grs+2,f
  8592  0108  0DB1               	rlf	___flmul@grs+3,f
  8593  0109  0B89               	decfsz	9,f
  8594  010A  2905               	goto	u295_25
  8595  010B  0821               	movf	___flmul@b+1,w
  8596  010C  00A8               	movwf	??___flmul
  8597  010D  0828               	movf	??___flmul,w
  8598  010E  00F0               	movwf	__Umul8_16@multiplicand
  8599  010F  0824               	movf	___flmul@a,w
  8600  0110  318B  234F  3180   	fcall	__Umul8_16
  8601  0113  0871               	movf	?__Umul8_16+1,w
  8602  0114  0020               	movlb	0	; select bank0
  8603  0115  00B9               	movwf	___flmul@temp+1
  8604  0116  0870               	movf	?__Umul8_16,w
  8605  0117  00B8               	movwf	___flmul@temp
  8606  0118  0838               	movf	___flmul@temp,w
  8607  0119  07AE               	addwf	___flmul@grs,f
  8608  011A  0839               	movf	___flmul@temp+1,w
  8609  011B  3DAF               	addwfc	___flmul@grs+1,f
  8610  011C  3000               	movlw	0
  8611  011D  3DB0               	addwfc	___flmul@grs+2,f
  8612  011E  3DB1               	addwfc	___flmul@grs+3,f
  8613  011F  0820               	movf	___flmul@b,w
  8614  0120  00A8               	movwf	??___flmul
  8615  0121  0828               	movf	??___flmul,w
  8616  0122  00F0               	movwf	__Umul8_16@multiplicand
  8617  0123  0825               	movf	___flmul@a+1,w
  8618  0124  318B  234F  3180   	fcall	__Umul8_16
  8619  0127  0871               	movf	?__Umul8_16+1,w
  8620  0128  0020               	movlb	0	; select bank0
  8621  0129  00B9               	movwf	___flmul@temp+1
  8622  012A  0870               	movf	?__Umul8_16,w
  8623  012B  00B8               	movwf	___flmul@temp
  8624  012C  0838               	movf	___flmul@temp,w
  8625  012D  07AE               	addwf	___flmul@grs,f
  8626  012E  0839               	movf	___flmul@temp+1,w
  8627  012F  3DAF               	addwfc	___flmul@grs+1,f
  8628  0130  3000               	movlw	0
  8629  0131  3DB0               	addwfc	___flmul@grs+2,f
  8630  0132  3DB1               	addwfc	___flmul@grs+3,f
  8631  0133  3008               	movlw	8
  8632  0134                     u296_25:	
  8633  0134  35AE               	lslf	___flmul@grs,f
  8634  0135  0DAF               	rlf	___flmul@grs+1,f
  8635  0136  0DB0               	rlf	___flmul@grs+2,f
  8636  0137  0DB1               	rlf	___flmul@grs+3,f
  8637  0138  0B89               	decfsz	9,f
  8638  0139  2934               	goto	u296_25
  8639  013A  0820               	movf	___flmul@b,w
  8640  013B  00A8               	movwf	??___flmul
  8641  013C  0828               	movf	??___flmul,w
  8642  013D  00F0               	movwf	__Umul8_16@multiplicand
  8643  013E  0824               	movf	___flmul@a,w
  8644  013F  318B  234F  3180   	fcall	__Umul8_16
  8645  0142  0871               	movf	?__Umul8_16+1,w
  8646  0143  0020               	movlb	0	; select bank0
  8647  0144  00B9               	movwf	___flmul@temp+1
  8648  0145  0870               	movf	?__Umul8_16,w
  8649  0146  00B8               	movwf	___flmul@temp
  8650  0147  0838               	movf	___flmul@temp,w
  8651  0148  07AE               	addwf	___flmul@grs,f
  8652  0149  0839               	movf	___flmul@temp+1,w
  8653  014A  3DAF               	addwfc	___flmul@grs+1,f
  8654  014B  3000               	movlw	0
  8655  014C  3DB0               	addwfc	___flmul@grs+2,f
  8656  014D  3DB1               	addwfc	___flmul@grs+3,f
  8657  014E  0821               	movf	___flmul@b+1,w
  8658  014F  00A8               	movwf	??___flmul
  8659  0150  0828               	movf	??___flmul,w
  8660  0151  00F0               	movwf	__Umul8_16@multiplicand
  8661  0152  0826               	movf	___flmul@a+2,w
  8662  0153  318B  234F  3180   	fcall	__Umul8_16
  8663  0156  0871               	movf	?__Umul8_16+1,w
  8664  0157  0020               	movlb	0	; select bank0
  8665  0158  00B9               	movwf	___flmul@temp+1
  8666  0159  0870               	movf	?__Umul8_16,w
  8667  015A  00B8               	movwf	___flmul@temp
  8668  015B  0838               	movf	___flmul@temp,w
  8669  015C  07B4               	addwf	___flmul@prod,f
  8670  015D  0839               	movf	___flmul@temp+1,w
  8671  015E  3DB5               	addwfc	___flmul@prod+1,f
  8672  015F  3000               	movlw	0
  8673  0160  3DB6               	addwfc	___flmul@prod+2,f
  8674  0161  3DB7               	addwfc	___flmul@prod+3,f
  8675  0162  0822               	movf	___flmul@b+2,w
  8676  0163  00A8               	movwf	??___flmul
  8677  0164  0828               	movf	??___flmul,w
  8678  0165  00F0               	movwf	__Umul8_16@multiplicand
  8679  0166  0825               	movf	___flmul@a+1,w
  8680  0167  318B  234F  3180   	fcall	__Umul8_16
  8681  016A  0871               	movf	?__Umul8_16+1,w
  8682  016B  0020               	movlb	0	; select bank0
  8683  016C  00B9               	movwf	___flmul@temp+1
  8684  016D  0870               	movf	?__Umul8_16,w
  8685  016E  00B8               	movwf	___flmul@temp
  8686  016F  0838               	movf	___flmul@temp,w
  8687  0170  07B4               	addwf	___flmul@prod,f
  8688  0171  0839               	movf	___flmul@temp+1,w
  8689  0172  3DB5               	addwfc	___flmul@prod+1,f
  8690  0173  3000               	movlw	0
  8691  0174  3DB6               	addwfc	___flmul@prod+2,f
  8692  0175  3DB7               	addwfc	___flmul@prod+3,f
  8693  0176  0822               	movf	___flmul@b+2,w
  8694  0177  00A8               	movwf	??___flmul
  8695  0178  0828               	movf	??___flmul,w
  8696  0179  00F0               	movwf	__Umul8_16@multiplicand
  8697  017A  0826               	movf	___flmul@a+2,w
  8698  017B  318B  234F  3180   	fcall	__Umul8_16
  8699  017E  0871               	movf	?__Umul8_16+1,w
  8700  017F  0020               	movlb	0	; select bank0
  8701  0180  00B9               	movwf	___flmul@temp+1
  8702  0181  0870               	movf	?__Umul8_16,w
  8703  0182  00B8               	movwf	___flmul@temp
  8704  0183  0838               	movf	___flmul@temp,w
  8705  0184  00A8               	movwf	??___flmul
  8706  0185  0839               	movf	___flmul@temp+1,w
  8707  0186  00A9               	movwf	??___flmul+1
  8708  0187  01AA               	clrf	??___flmul+2
  8709  0188  01AB               	clrf	??___flmul+3
  8710  0189  3008               	movlw	8
  8711  018A                     u297_25:	
  8712  018A  35A8               	lslf	??___flmul,f
  8713  018B  0DA9               	rlf	??___flmul+1,f
  8714  018C  0DAA               	rlf	??___flmul+2,f
  8715  018D  0DAB               	rlf	??___flmul+3,f
  8716  018E  0B89               	decfsz	9,f
  8717  018F  298A               	goto	u297_25
  8718  0190  0828               	movf	??___flmul,w
  8719  0191  07B4               	addwf	___flmul@prod,f
  8720  0192  0829               	movf	??___flmul+1,w
  8721  0193  3DB5               	addwfc	___flmul@prod+1,f
  8722  0194  082A               	movf	??___flmul+2,w
  8723  0195  3DB6               	addwfc	___flmul@prod+2,f
  8724  0196  082B               	movf	??___flmul+3,w
  8725  0197  3DB7               	addwfc	___flmul@prod+3,f
  8726  0198  082E               	movf	___flmul@grs,w
  8727  0199  00A8               	movwf	??___flmul
  8728  019A  082F               	movf	___flmul@grs+1,w
  8729  019B  00A9               	movwf	??___flmul+1
  8730  019C  0830               	movf	___flmul@grs+2,w
  8731  019D  00AA               	movwf	??___flmul+2
  8732  019E  0831               	movf	___flmul@grs+3,w
  8733  019F  00AB               	movwf	??___flmul+3
  8734  01A0  3018               	movlw	24
  8735  01A1                     u298_25:	
  8736  01A1  36AB               	lsrf	??___flmul+3,f
  8737  01A2  0CAA               	rrf	??___flmul+2,f
  8738  01A3  0CA9               	rrf	??___flmul+1,f
  8739  01A4  0CA8               	rrf	??___flmul,f
  8740  01A5  0B89               	decfsz	9,f
  8741  01A6  29A1               	goto	u298_25
  8742  01A7  0828               	movf	??___flmul,w
  8743  01A8  07B4               	addwf	___flmul@prod,f
  8744  01A9  0829               	movf	??___flmul+1,w
  8745  01AA  3DB5               	addwfc	___flmul@prod+1,f
  8746  01AB  082A               	movf	??___flmul+2,w
  8747  01AC  3DB6               	addwfc	___flmul@prod+2,f
  8748  01AD  082B               	movf	??___flmul+3,w
  8749  01AE  3DB7               	addwfc	___flmul@prod+3,f
  8750  01AF  3008               	movlw	8
  8751  01B0                     u299_25:	
  8752  01B0  35AE               	lslf	___flmul@grs,f
  8753  01B1  0DAF               	rlf	___flmul@grs+1,f
  8754  01B2  0DB0               	rlf	___flmul@grs+2,f
  8755  01B3  0DB1               	rlf	___flmul@grs+3,f
  8756  01B4  0B89               	decfsz	9,f
  8757  01B5  29B0               	goto	u299_25
  8758  01B6  0833               	movf	___flmul@bexp,w
  8759  01B7  0732               	addwf	___flmul@aexp,w
  8760  01B8  00A8               	movwf	??___flmul
  8761  01B9  01A9               	clrf	??___flmul+1
  8762  01BA  0DA9               	rlf	??___flmul+1,f
  8763  01BB  0828               	movf	??___flmul,w
  8764  01BC  3E82               	addlw	130
  8765  01BD  00B8               	movwf	___flmul@temp
  8766  01BE  30FF               	movlw	255
  8767  01BF  3D29               	addwfc	??___flmul+1,w
  8768  01C0  00B9               	movwf	___flmul@temp+1
  8769  01C1                     i1l2588:	
  8770  01C1  1BB6               	btfsc	___flmul@prod+2,7
  8771  01C2  29D8               	goto	i1l2590
  8772  01C3  3001               	movlw	1
  8773  01C4                     u300_25:	
  8774  01C4  35B4               	lslf	___flmul@prod,f
  8775  01C5  0DB5               	rlf	___flmul@prod+1,f
  8776  01C6  0DB6               	rlf	___flmul@prod+2,f
  8777  01C7  0DB7               	rlf	___flmul@prod+3,f
  8778  01C8  0B89               	decfsz	9,f
  8779  01C9  29C4               	goto	u300_25
  8780  01CA  1BB1               	btfsc	___flmul@grs+3,7
  8781  01CB  1434               	bsf	___flmul@prod,0
  8782  01CC  3001               	movlw	1
  8783  01CD                     u302_25:	
  8784  01CD  35AE               	lslf	___flmul@grs,f
  8785  01CE  0DAF               	rlf	___flmul@grs+1,f
  8786  01CF  0DB0               	rlf	___flmul@grs+2,f
  8787  01D0  0DB1               	rlf	___flmul@grs+3,f
  8788  01D1  0B89               	decfsz	9,f
  8789  01D2  29CD               	goto	u302_25
  8790  01D3  30FF               	movlw	255
  8791  01D4  07B8               	addwf	___flmul@temp,f
  8792  01D5  30FF               	movlw	255
  8793  01D6  3DB9               	addwfc	___flmul@temp+1,f
  8794  01D7  29C1               	goto	i1l2588
  8795  01D8                     i1l2590:	
  8796  01D8  01B2               	clrf	___flmul@aexp
  8797  01D9  1FB1               	btfss	___flmul@grs+3,7
  8798  01DA  29F1               	goto	i1l2600
  8799  01DB  30FF               	movlw	255
  8800  01DC  052E               	andwf	___flmul@grs,w
  8801  01DD  00A8               	movwf	??___flmul
  8802  01DE  30FF               	movlw	255
  8803  01DF  052F               	andwf	___flmul@grs+1,w
  8804  01E0  00A9               	movwf	??___flmul+1
  8805  01E1  30FF               	movlw	255
  8806  01E2  0530               	andwf	___flmul@grs+2,w
  8807  01E3  00AA               	movwf	??___flmul+2
  8808  01E4  307F               	movlw	127
  8809  01E5  0531               	andwf	___flmul@grs+3,w
  8810  01E6  00AB               	movwf	??___flmul+3
  8811  01E7  082B               	movf	??___flmul+3,w
  8812  01E8  042A               	iorwf	??___flmul+2,w
  8813  01E9  0429               	iorwf	??___flmul+1,w
  8814  01EA  0428               	iorwf	??___flmul,w
  8815  01EB  1903               	skipnz
  8816  01EC  1834               	btfsc	___flmul@prod,0
  8817  01ED  29EF               	goto	i1l2596
  8818  01EE  29F1               	goto	i1l2600
  8819  01EF                     i1l2596:	
  8820  01EF  01B2               	clrf	___flmul@aexp
  8821  01F0  0AB2               	incf	___flmul@aexp,f
  8822  01F1                     i1l2600:	
  8823  01F1  0832               	movf	___flmul@aexp,w
  8824  01F2  1903               	btfsc	3,2
  8825  01F3  2A1A               	goto	i1l2610
  8826  01F4  3001               	movlw	1
  8827  01F5  07B4               	addwf	___flmul@prod,f
  8828  01F6  3000               	movlw	0
  8829  01F7  3DB5               	addwfc	___flmul@prod+1,f
  8830  01F8  3000               	movlw	0
  8831  01F9  3DB6               	addwfc	___flmul@prod+2,f
  8832  01FA  3000               	movlw	0
  8833  01FB  3DB7               	addwfc	___flmul@prod+3,f
  8834  01FC  1C37               	btfss	___flmul@prod+3,0
  8835  01FD  2A1A               	goto	i1l2610
  8836  01FE  0834               	movf	___flmul@prod,w
  8837  01FF  00A8               	movwf	??___flmul
  8838  0200  0835               	movf	___flmul@prod+1,w
  8839  0201  00A9               	movwf	??___flmul+1
  8840  0202  0836               	movf	___flmul@prod+2,w
  8841  0203  00AA               	movwf	??___flmul+2
  8842  0204  0837               	movf	___flmul@prod+3,w
  8843  0205  00AB               	movwf	??___flmul+3
  8844  0206  3001               	movlw	1
  8845  0207  00AC               	movwf	??___flmul+4
  8846  0208                     u309_25:	
  8847  0208  37AB               	asrf	??___flmul+3,f
  8848  0209  0CAA               	rrf	??___flmul+2,f
  8849  020A  0CA9               	rrf	??___flmul+1,f
  8850  020B  0CA8               	rrf	??___flmul,f
  8851  020C  0BAC               	decfsz	??___flmul+4,f
  8852  020D  2A08               	goto	u309_25
  8853  020E  082B               	movf	??___flmul+3,w
  8854  020F  00B7               	movwf	___flmul@prod+3
  8855  0210  082A               	movf	??___flmul+2,w
  8856  0211  00B6               	movwf	___flmul@prod+2
  8857  0212  0829               	movf	??___flmul+1,w
  8858  0213  00B5               	movwf	___flmul@prod+1
  8859  0214  0828               	movf	??___flmul,w
  8860  0215  00B4               	movwf	___flmul@prod
  8861  0216  3001               	movlw	1
  8862  0217  07B8               	addwf	___flmul@temp,f
  8863  0218  3000               	movlw	0
  8864  0219  3DB9               	addwfc	___flmul@temp+1,f
  8865  021A                     i1l2610:	
  8866  021A  0839               	movf	___flmul@temp+1,w
  8867  021B  3A80               	xorlw	128
  8868  021C  00A8               	movwf	??___flmul
  8869  021D  3080               	movlw	128
  8870  021E  0228               	subwf	??___flmul,w
  8871  021F  1D03               	skipz
  8872  0220  2A23               	goto	u310_25
  8873  0221  30FF               	movlw	255
  8874  0222  0238               	subwf	___flmul@temp,w
  8875  0223                     u310_25:	
  8876  0223  1C03               	skipc
  8877  0224  2A2F               	goto	i1l2614
  8878  0225  307F               	movlw	127
  8879  0226  0020               	movlb	0	; select bank0
  8880  0227  00B7               	movwf	___flmul@prod+3
  8881  0228  3080               	movlw	128
  8882  0229  00B6               	movwf	___flmul@prod+2
  8883  022A  3000               	movlw	0
  8884  022B  00B5               	movwf	___flmul@prod+1
  8885  022C  3000               	movlw	0
  8886  022D  00B4               	movwf	___flmul@prod
  8887  022E  2A59               	goto	i1l900
  8888  022F                     i1l2614:	
  8889  022F  0020               	movlb	0	; select bank0
  8890  0230  0839               	movf	___flmul@temp+1,w
  8891  0231  3A80               	xorlw	128
  8892  0232  00A8               	movwf	??___flmul
  8893  0233  3080               	movlw	128
  8894  0234  0228               	subwf	??___flmul,w
  8895  0235  1D03               	skipz
  8896  0236  2A39               	goto	u311_25
  8897  0237  3001               	movlw	1
  8898  0238  0238               	subwf	___flmul@temp,w
  8899  0239                     u311_25:	
  8900  0239  1803               	skipnc
  8901  023A  2A46               	goto	i1l2620
  8902  023B  3000               	movlw	0
  8903  023C  0020               	movlb	0	; select bank0
  8904  023D  00B7               	movwf	___flmul@prod+3
  8905  023E  3000               	movlw	0
  8906  023F  00B6               	movwf	___flmul@prod+2
  8907  0240  3000               	movlw	0
  8908  0241  00B5               	movwf	___flmul@prod+1
  8909  0242  3000               	movlw	0
  8910  0243  00B4               	movwf	___flmul@prod
  8911  0244  01AD               	clrf	___flmul@sign
  8912  0245  2A59               	goto	i1l900
  8913  0246                     i1l2620:	
  8914  0246  0020               	movlb	0	; select bank0
  8915  0247  0838               	movf	___flmul@temp,w
  8916  0248  00A8               	movwf	??___flmul
  8917  0249  0828               	movf	??___flmul,w
  8918  024A  00B3               	movwf	___flmul@bexp
  8919  024B  30FF               	movlw	255
  8920  024C  05B4               	andwf	___flmul@prod,f
  8921  024D  30FF               	movlw	255
  8922  024E  05B5               	andwf	___flmul@prod+1,f
  8923  024F  307F               	movlw	127
  8924  0250  05B6               	andwf	___flmul@prod+2,f
  8925  0251  3000               	movlw	0
  8926  0252  05B7               	andwf	___flmul@prod+3,f
  8927  0253  1833               	btfsc	___flmul@bexp,0
  8928  0254  17B6               	bsf	___flmul@prod+2,7
  8929  0255  3633               	lsrf	___flmul@bexp,w
  8930  0256  00A8               	movwf	??___flmul
  8931  0257  0828               	movf	??___flmul,w
  8932  0258  00B7               	movwf	___flmul@prod+3
  8933  0259                     i1l900:	
  8934  0259  082D               	movf	___flmul@sign,w
  8935  025A  00A8               	movwf	??___flmul
  8936  025B  0828               	movf	??___flmul,w
  8937  025C  04B7               	iorwf	___flmul@prod+3,f
  8938  025D  0837               	movf	___flmul@prod+3,w
  8939  025E  00A3               	movwf	?___flmul+3
  8940  025F  0836               	movf	___flmul@prod+2,w
  8941  0260  00A2               	movwf	?___flmul+2
  8942  0261  0835               	movf	___flmul@prod+1,w
  8943  0262  00A1               	movwf	?___flmul+1
  8944  0263  0834               	movf	___flmul@prod,w
  8945  0264  00A0               	movwf	?___flmul
  8946  0265  0008               	return
  8947  0266                     __end_of___flmul:	
  8948                           
  8949                           	psect	text40
  8950  0B4F                     __ptext40:	
  8951 ;; *************** function __Umul8_16 *****************
  8952 ;; Defined at:
  8953 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul8_16.c"
  8954 ;; Parameters:    Size  Location     Type
  8955 ;;  multiplier      1    wreg     unsigned char 
  8956 ;;  multiplicand    1    0[COMMON] unsigned char 
  8957 ;; Auto vars:     Size  Location     Type
  8958 ;;  multiplier      1    8[COMMON] unsigned char 
  8959 ;;  word_mpld       2    6[COMMON] unsigned int 
  8960 ;;  product         2    4[COMMON] unsigned int 
  8961 ;; Return value:  Size  Location     Type
  8962 ;;                  2    0[COMMON] unsigned int 
  8963 ;; Registers used:
  8964 ;;		wreg, status,2, status,0
  8965 ;; Tracked objects:
  8966 ;;		On entry : 0/0
  8967 ;;		On exit  : 0/0
  8968 ;;		Unchanged: 0/0
  8969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8970 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8971 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8972 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8973 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8974 ;;Total ram usage:        9 bytes
  8975 ;; Hardware stack levels used:    1
  8976 ;; This function calls:
  8977 ;;		Nothing
  8978 ;; This function is called by:
  8979 ;;		___flmul
  8980 ;; This function uses a non-reentrant model
  8981 ;;
  8982                           
  8983                           
  8984                           ;psect for function __Umul8_16
  8985  0B4F                     __Umul8_16:	
  8986                           
  8987                           ;incstack = 0
  8988                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  8989                           ;__Umul8_16@multiplier stored from wreg
  8990  0B4F  00F8               	movwf	__Umul8_16@multiplier
  8991  0B50  01F4               	clrf	__Umul8_16@product
  8992  0B51  01F5               	clrf	__Umul8_16@product+1
  8993  0B52  0870               	movf	__Umul8_16@multiplicand,w
  8994  0B53  00F2               	movwf	??__Umul8_16
  8995  0B54  01F3               	clrf	??__Umul8_16+1
  8996  0B55  0872               	movf	??__Umul8_16,w
  8997  0B56  00F6               	movwf	__Umul8_16@word_mpld
  8998  0B57  0873               	movf	??__Umul8_16+1,w
  8999  0B58  00F7               	movwf	__Umul8_16@word_mpld+1
  9000  0B59                     i1l2176:	
  9001  0B59  1C78               	btfss	__Umul8_16@multiplier,0
  9002  0B5A  2B5F               	goto	i1l994
  9003  0B5B  0876               	movf	__Umul8_16@word_mpld,w
  9004  0B5C  07F4               	addwf	__Umul8_16@product,f
  9005  0B5D  0877               	movf	__Umul8_16@word_mpld+1,w
  9006  0B5E  3DF5               	addwfc	__Umul8_16@product+1,f
  9007  0B5F                     i1l994:	
  9008  0B5F  3001               	movlw	1
  9009  0B60                     u212_25:	
  9010  0B60  35F6               	lslf	__Umul8_16@word_mpld,f
  9011  0B61  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  9012  0B62  0B89               	decfsz	9,f
  9013  0B63  2B60               	goto	u212_25
  9014  0B64  1003               	clrc
  9015  0B65  0CF8               	rrf	__Umul8_16@multiplier,f
  9016  0B66  0878               	movf	__Umul8_16@multiplier,w
  9017  0B67  1D03               	btfss	3,2
  9018  0B68  2B59               	goto	i1l2176
  9019  0B69  0875               	movf	__Umul8_16@product+1,w
  9020  0B6A  00F1               	movwf	?__Umul8_16+1
  9021  0B6B  0874               	movf	__Umul8_16@product,w
  9022  0B6C  00F0               	movwf	?__Umul8_16
  9023  0B6D  0008               	return
  9024  0B6E                     __end_of__Umul8_16:	
  9025                           
  9026                           	psect	text41
  9027  0266                     __ptext41:	
  9028 ;; *************** function ___fladd *****************
  9029 ;; Defined at:
  9030 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  9031 ;; Parameters:    Size  Location     Type
  9032 ;;  b               4    0[COMMON] unsigned int 
  9033 ;;  a               4    4[COMMON] unsigned int 
  9034 ;; Auto vars:     Size  Location     Type
  9035 ;;  grs             1   11[COMMON] unsigned char 
  9036 ;;  bexp            1   10[COMMON] unsigned char 
  9037 ;;  aexp            1    9[COMMON] unsigned char 
  9038 ;;  signs           1    8[COMMON] unsigned char 
  9039 ;; Return value:  Size  Location     Type
  9040 ;;                  4    0[COMMON] unsigned char 
  9041 ;; Registers used:
  9042 ;;		wreg, status,2, status,0
  9043 ;; Tracked objects:
  9044 ;;		On entry : 0/0
  9045 ;;		On exit  : 0/0
  9046 ;;		Unchanged: 0/0
  9047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9048 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9049 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9050 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9051 ;;      Totals:        12       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9052 ;;Total ram usage:       20 bytes
  9053 ;; Hardware stack levels used:    1
  9054 ;; This function calls:
  9055 ;;		Nothing
  9056 ;; This function is called by:
  9057 ;;		_speedCalc
  9058 ;; This function uses a non-reentrant model
  9059 ;;
  9060                           
  9061                           
  9062                           ;psect for function ___fladd
  9063  0266                     ___fladd:	
  9064                           
  9065                           ;incstack = 0
  9066                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  9067  0266  0873               	movf	___fladd@b+3,w
  9068  0267  3980               	andlw	128
  9069  0268  0020               	movlb	0	; select bank0
  9070  0269  00A0               	movwf	??___fladd
  9071  026A  0820               	movf	??___fladd,w
  9072  026B  00F8               	movwf	___fladd@signs
  9073  026C  3573               	lslf	___fladd@b+3,w
  9074  026D  00A0               	movwf	??___fladd
  9075  026E  0820               	movf	??___fladd,w
  9076  026F  00FA               	movwf	___fladd@bexp
  9077  0270  1BF2               	btfsc	___fladd@b+2,7
  9078  0271  147A               	bsf	___fladd@bexp,0
  9079  0272  087A               	movf	___fladd@bexp,w
  9080  0273  1903               	btfsc	3,2
  9081  0274  2A83               	goto	i1l2316
  9082  0275  0A7A               	incf	___fladd@bexp,w
  9083  0276  1D03               	btfss	3,2
  9084  0277  2A80               	goto	i1l2312
  9085  0278  3000               	movlw	0
  9086  0279  00F3               	movwf	___fladd@b+3
  9087  027A  3000               	movlw	0
  9088  027B  00F2               	movwf	___fladd@b+2
  9089  027C  3000               	movlw	0
  9090  027D  00F1               	movwf	___fladd@b+1
  9091  027E  3000               	movlw	0
  9092  027F  00F0               	movwf	___fladd@b
  9093  0280                     i1l2312:	
  9094  0280  17F2               	bsf	___fladd@b+2,7
  9095  0281  01F3               	clrf	___fladd@b+3
  9096  0282  2A8B               	goto	i1l2318
  9097  0283                     i1l2316:	
  9098  0283  3000               	movlw	0
  9099  0284  00F3               	movwf	___fladd@b+3
  9100  0285  3000               	movlw	0
  9101  0286  00F2               	movwf	___fladd@b+2
  9102  0287  3000               	movlw	0
  9103  0288  00F1               	movwf	___fladd@b+1
  9104  0289  3000               	movlw	0
  9105  028A  00F0               	movwf	___fladd@b
  9106  028B                     i1l2318:	
  9107  028B  0877               	movf	___fladd@a+3,w
  9108  028C  3980               	andlw	128
  9109  028D  00A0               	movwf	??___fladd
  9110  028E  0820               	movf	??___fladd,w
  9111  028F  00F9               	movwf	___fladd@aexp
  9112  0290  0879               	movf	___fladd@aexp,w
  9113  0291  0678               	xorwf	___fladd@signs,w
  9114  0292  1D03               	btfss	3,2
  9115  0293  1778               	bsf	___fladd@signs,6
  9116  0294  3577               	lslf	___fladd@a+3,w
  9117  0295  00A0               	movwf	??___fladd
  9118  0296  0820               	movf	??___fladd,w
  9119  0297  00F9               	movwf	___fladd@aexp
  9120  0298  1BF6               	btfsc	___fladd@a+2,7
  9121  0299  1479               	bsf	___fladd@aexp,0
  9122  029A  0879               	movf	___fladd@aexp,w
  9123  029B  1903               	btfsc	3,2
  9124  029C  2AAB               	goto	i1l2340
  9125  029D  0A79               	incf	___fladd@aexp,w
  9126  029E  1D03               	btfss	3,2
  9127  029F  2AA8               	goto	i1l2336
  9128  02A0  3000               	movlw	0
  9129  02A1  00F7               	movwf	___fladd@a+3
  9130  02A2  3000               	movlw	0
  9131  02A3  00F6               	movwf	___fladd@a+2
  9132  02A4  3000               	movlw	0
  9133  02A5  00F5               	movwf	___fladd@a+1
  9134  02A6  3000               	movlw	0
  9135  02A7  00F4               	movwf	___fladd@a
  9136  02A8                     i1l2336:	
  9137  02A8  17F6               	bsf	___fladd@a+2,7
  9138  02A9  01F7               	clrf	___fladd@a+3
  9139  02AA  2AB3               	goto	i1l792
  9140  02AB                     i1l2340:	
  9141  02AB  3000               	movlw	0
  9142  02AC  00F7               	movwf	___fladd@a+3
  9143  02AD  3000               	movlw	0
  9144  02AE  00F6               	movwf	___fladd@a+2
  9145  02AF  3000               	movlw	0
  9146  02B0  00F5               	movwf	___fladd@a+1
  9147  02B1  3000               	movlw	0
  9148  02B2  00F4               	movwf	___fladd@a
  9149  02B3                     i1l792:	
  9150  02B3  087A               	movf	___fladd@bexp,w
  9151  02B4  0279               	subwf	___fladd@aexp,w
  9152  02B5  1803               	skipnc
  9153  02B6  2AF9               	goto	i1l2376
  9154  02B7  1F78               	btfss	___fladd@signs,6
  9155  02B8  2ABD               	goto	i1l2346
  9156  02B9  3080               	movlw	128
  9157  02BA  00A0               	movwf	??___fladd
  9158  02BB  0820               	movf	??___fladd,w
  9159  02BC  06F8               	xorwf	___fladd@signs,f
  9160  02BD                     i1l2346:	
  9161  02BD  087A               	movf	___fladd@bexp,w
  9162  02BE  00A0               	movwf	??___fladd
  9163  02BF  0820               	movf	??___fladd,w
  9164  02C0  00FB               	movwf	___fladd@grs
  9165  02C1  0879               	movf	___fladd@aexp,w
  9166  02C2  00A0               	movwf	??___fladd
  9167  02C3  0820               	movf	??___fladd,w
  9168  02C4  00FA               	movwf	___fladd@bexp
  9169  02C5  087B               	movf	___fladd@grs,w
  9170  02C6  00A0               	movwf	??___fladd
  9171  02C7  0820               	movf	??___fladd,w
  9172  02C8  00F9               	movwf	___fladd@aexp
  9173  02C9  0870               	movf	___fladd@b,w
  9174  02CA  00A0               	movwf	??___fladd
  9175  02CB  0820               	movf	??___fladd,w
  9176  02CC  00FB               	movwf	___fladd@grs
  9177  02CD  0874               	movf	___fladd@a,w
  9178  02CE  00A0               	movwf	??___fladd
  9179  02CF  0820               	movf	??___fladd,w
  9180  02D0  00F0               	movwf	___fladd@b
  9181  02D1  087B               	movf	___fladd@grs,w
  9182  02D2  00A0               	movwf	??___fladd
  9183  02D3  0820               	movf	??___fladd,w
  9184  02D4  00F4               	movwf	___fladd@a
  9185  02D5  0871               	movf	___fladd@b+1,w
  9186  02D6  00A0               	movwf	??___fladd
  9187  02D7  0820               	movf	??___fladd,w
  9188  02D8  00FB               	movwf	___fladd@grs
  9189  02D9  0875               	movf	___fladd@a+1,w
  9190  02DA  00A0               	movwf	??___fladd
  9191  02DB  0820               	movf	??___fladd,w
  9192  02DC  00F1               	movwf	___fladd@b+1
  9193  02DD  087B               	movf	___fladd@grs,w
  9194  02DE  00A0               	movwf	??___fladd
  9195  02DF  0820               	movf	??___fladd,w
  9196  02E0  00F5               	movwf	___fladd@a+1
  9197  02E1  0872               	movf	___fladd@b+2,w
  9198  02E2  00A0               	movwf	??___fladd
  9199  02E3  0820               	movf	??___fladd,w
  9200  02E4  00FB               	movwf	___fladd@grs
  9201  02E5  0876               	movf	___fladd@a+2,w
  9202  02E6  00A0               	movwf	??___fladd
  9203  02E7  0820               	movf	??___fladd,w
  9204  02E8  00F2               	movwf	___fladd@b+2
  9205  02E9  087B               	movf	___fladd@grs,w
  9206  02EA  00A0               	movwf	??___fladd
  9207  02EB  0820               	movf	??___fladd,w
  9208  02EC  00F6               	movwf	___fladd@a+2
  9209  02ED  0873               	movf	___fladd@b+3,w
  9210  02EE  00A0               	movwf	??___fladd
  9211  02EF  0820               	movf	??___fladd,w
  9212  02F0  00FB               	movwf	___fladd@grs
  9213  02F1  0877               	movf	___fladd@a+3,w
  9214  02F2  00A0               	movwf	??___fladd
  9215  02F3  0820               	movf	??___fladd,w
  9216  02F4  00F3               	movwf	___fladd@b+3
  9217  02F5  087B               	movf	___fladd@grs,w
  9218  02F6  00A0               	movwf	??___fladd
  9219  02F7  0820               	movf	??___fladd,w
  9220  02F8  00F7               	movwf	___fladd@a+3
  9221  02F9                     i1l2376:	
  9222  02F9  01FB               	clrf	___fladd@grs
  9223  02FA  0879               	movf	___fladd@aexp,w
  9224  02FB  00A0               	movwf	??___fladd
  9225  02FC  01A1               	clrf	??___fladd+1
  9226  02FD  0821               	movf	??___fladd+1,w
  9227  02FE  00A3               	movwf	??___fladd+3
  9228  02FF  087A               	movf	___fladd@bexp,w
  9229  0300  0220               	subwf	??___fladd,w
  9230  0301  00A2               	movwf	??___fladd+2
  9231  0302  1C03               	skipc
  9232  0303  03A3               	decf	??___fladd+3,f
  9233  0304  0823               	movf	??___fladd+3,w
  9234  0305  3A80               	xorlw	128
  9235  0306  00A4               	movwf	??___fladd+4
  9236  0307  3080               	movlw	128
  9237  0308  0224               	subwf	??___fladd+4,w
  9238  0309  1D03               	skipz
  9239  030A  2B0D               	goto	u253_25
  9240  030B  301A               	movlw	26
  9241  030C  0222               	subwf	??___fladd+2,w
  9242  030D                     u253_25:	
  9243  030D  1C03               	skipc
  9244  030E  2B43               	goto	i1l2394
  9245  030F  0873               	movf	___fladd@b+3,w
  9246  0310  0472               	iorwf	___fladd@b+2,w
  9247  0311  0471               	iorwf	___fladd@b+1,w
  9248  0312  0470               	iorwf	___fladd@b,w
  9249  0313  1903               	btfsc	3,2
  9250  0314  2B17               	goto	u254_20
  9251  0315  3001               	movlw	1
  9252  0316  2B18               	goto	u255_20
  9253  0317                     u254_20:	
  9254  0317  3000               	movlw	0
  9255  0318                     u255_20:	
  9256  0318  0020               	movlb	0	; select bank0
  9257  0319  00A0               	movwf	??___fladd
  9258  031A  0820               	movf	??___fladd,w
  9259  031B  00FB               	movwf	___fladd@grs
  9260  031C  3000               	movlw	0
  9261  031D  00F3               	movwf	___fladd@b+3
  9262  031E  3000               	movlw	0
  9263  031F  00F2               	movwf	___fladd@b+2
  9264  0320  3000               	movlw	0
  9265  0321  00F1               	movwf	___fladd@b+1
  9266  0322  3000               	movlw	0
  9267  0323  00F0               	movwf	___fladd@b
  9268  0324  0879               	movf	___fladd@aexp,w
  9269  0325  00A0               	movwf	??___fladd
  9270  0326  0820               	movf	??___fladd,w
  9271  0327  00FA               	movwf	___fladd@bexp
  9272  0328  2B47               	goto	i1l796
  9273  0329                     i1l798:	
  9274  0329  1C7B               	btfss	___fladd@grs,0
  9275  032A  2B32               	goto	i1l2384
  9276  032B  367B               	lsrf	___fladd@grs,w
  9277  032C  3801               	iorlw	1
  9278  032D  0020               	movlb	0	; select bank0
  9279  032E  00A0               	movwf	??___fladd
  9280  032F  0820               	movf	??___fladd,w
  9281  0330  00FB               	movwf	___fladd@grs
  9282  0331  2B34               	goto	i1l2386
  9283  0332                     i1l2384:	
  9284  0332  1003               	clrc
  9285  0333  0CFB               	rrf	___fladd@grs,f
  9286  0334                     i1l2386:	
  9287  0334  1870               	btfsc	___fladd@b,0
  9288  0335  17FB               	bsf	___fladd@grs,7
  9289  0336  3001               	movlw	1
  9290  0337  0020               	movlb	0	; select bank0
  9291  0338  00A0               	movwf	??___fladd
  9292  0339                     u258_25:	
  9293  0339  37F3               	asrf	___fladd@b+3,f
  9294  033A  0CF2               	rrf	___fladd@b+2,f
  9295  033B  0CF1               	rrf	___fladd@b+1,f
  9296  033C  0CF0               	rrf	___fladd@b,f
  9297  033D  0BA0               	decfsz	??___fladd& (0+127),f
  9298  033E  2B39               	goto	u258_25
  9299  033F  3001               	movlw	1
  9300  0340  00A0               	movwf	??___fladd
  9301  0341  0820               	movf	??___fladd,w
  9302  0342  07FA               	addwf	___fladd@bexp,f
  9303  0343                     i1l2394:	
  9304  0343  0879               	movf	___fladd@aexp,w
  9305  0344  027A               	subwf	___fladd@bexp,w
  9306  0345  1C03               	skipc
  9307  0346  2B29               	goto	i1l798
  9308  0347                     i1l796:	
  9309  0347  1B78               	btfsc	___fladd@signs,6
  9310  0348  2B7A               	goto	i1l2420
  9311  0349  087A               	movf	___fladd@bexp,w
  9312  034A  1D03               	btfss	3,2
  9313  034B  2B55               	goto	i1l2402
  9314  034C  3000               	movlw	0
  9315  034D  00F3               	movwf	?___fladd+3
  9316  034E  3000               	movlw	0
  9317  034F  00F2               	movwf	?___fladd+2
  9318  0350  3000               	movlw	0
  9319  0351  00F1               	movwf	?___fladd+1
  9320  0352  3000               	movlw	0
  9321  0353  00F0               	movwf	?___fladd
  9322  0354  0008               	return
  9323  0355                     i1l2402:	
  9324  0355  0874               	movf	___fladd@a,w
  9325  0356  07F0               	addwf	___fladd@b,f
  9326  0357  0875               	movf	___fladd@a+1,w
  9327  0358  3DF1               	addwfc	___fladd@b+1,f
  9328  0359  0876               	movf	___fladd@a+2,w
  9329  035A  3DF2               	addwfc	___fladd@b+2,f
  9330  035B  0877               	movf	___fladd@a+3,w
  9331  035C  3DF3               	addwfc	___fladd@b+3,f
  9332  035D  1C73               	btfss	___fladd@b+3,0
  9333  035E  2BF5               	goto	i1l2454
  9334  035F  1C7B               	btfss	___fladd@grs,0
  9335  0360  2B68               	goto	i1l2410
  9336  0361  367B               	lsrf	___fladd@grs,w
  9337  0362  3801               	iorlw	1
  9338  0363  0020               	movlb	0	; select bank0
  9339  0364  00A0               	movwf	??___fladd
  9340  0365  0820               	movf	??___fladd,w
  9341  0366  00FB               	movwf	___fladd@grs
  9342  0367  2B6A               	goto	i1l2412
  9343  0368                     i1l2410:	
  9344  0368  1003               	clrc
  9345  0369  0CFB               	rrf	___fladd@grs,f
  9346  036A                     i1l2412:	
  9347  036A  1870               	btfsc	___fladd@b,0
  9348  036B  17FB               	bsf	___fladd@grs,7
  9349  036C  3001               	movlw	1
  9350  036D  0020               	movlb	0	; select bank0
  9351  036E  00A0               	movwf	??___fladd
  9352  036F                     u265_25:	
  9353  036F  37F3               	asrf	___fladd@b+3,f
  9354  0370  0CF2               	rrf	___fladd@b+2,f
  9355  0371  0CF1               	rrf	___fladd@b+1,f
  9356  0372  0CF0               	rrf	___fladd@b,f
  9357  0373  0BA0               	decfsz	??___fladd& (0+127),f
  9358  0374  2B6F               	goto	u265_25
  9359  0375  3001               	movlw	1
  9360  0376  00A0               	movwf	??___fladd
  9361  0377  0820               	movf	??___fladd,w
  9362  0378  07FA               	addwf	___fladd@bexp,f
  9363  0379  2BF5               	goto	i1l2454
  9364  037A                     i1l2420:	
  9365  037A  0873               	movf	___fladd@b+3,w
  9366  037B  3A80               	xorlw	128
  9367  037C  0020               	movlb	0	; select bank0
  9368  037D  00A0               	movwf	??___fladd
  9369  037E  0877               	movf	___fladd@a+3,w
  9370  037F  3A80               	xorlw	128
  9371  0380  0220               	subwf	??___fladd,w
  9372  0381  1D03               	skipz
  9373  0382  2B8D               	goto	u266_23
  9374  0383  0876               	movf	___fladd@a+2,w
  9375  0384  0272               	subwf	___fladd@b+2,w
  9376  0385  1D03               	skipz
  9377  0386  2B8D               	goto	u266_23
  9378  0387  0875               	movf	___fladd@a+1,w
  9379  0388  0271               	subwf	___fladd@b+1,w
  9380  0389  1D03               	skipz
  9381  038A  2B8D               	goto	u266_23
  9382  038B  0874               	movf	___fladd@a,w
  9383  038C  0270               	subwf	___fladd@b,w
  9384  038D                     u266_23:	
  9385  038D  1803               	skipnc
  9386  038E  2BC5               	goto	i1l2430
  9387  038F  30FF               	movlw	255
  9388  0390  00A0               	movwf	??___fladd
  9389  0391  30FF               	movlw	255
  9390  0392  00A1               	movwf	??___fladd+1
  9391  0393  30FF               	movlw	255
  9392  0394  00A2               	movwf	??___fladd+2
  9393  0395  30FF               	movlw	255
  9394  0396  00A3               	movwf	??___fladd+3
  9395  0397  0870               	movf	___fladd@b,w
  9396  0398  0274               	subwf	___fladd@a,w
  9397  0399  00A4               	movwf	??___fladd+4
  9398  039A  0871               	movf	___fladd@b+1,w
  9399  039B  3B75               	subwfb	___fladd@a+1,w
  9400  039C  00A5               	movwf	??___fladd+5
  9401  039D  0872               	movf	___fladd@b+2,w
  9402  039E  3B76               	subwfb	___fladd@a+2,w
  9403  039F  00A6               	movwf	??___fladd+6
  9404  03A0  0873               	movf	___fladd@b+3,w
  9405  03A1  3B77               	subwfb	___fladd@a+3,w
  9406  03A2  00A7               	movwf	??___fladd+7
  9407  03A3  0824               	movf	??___fladd+4,w
  9408  03A4  07A0               	addwf	??___fladd,f
  9409  03A5  0825               	movf	??___fladd+5,w
  9410  03A6  3DA1               	addwfc	??___fladd+1,f
  9411  03A7  0826               	movf	??___fladd+6,w
  9412  03A8  3DA2               	addwfc	??___fladd+2,f
  9413  03A9  0827               	movf	??___fladd+7,w
  9414  03AA  3DA3               	addwfc	??___fladd+3,f
  9415  03AB  0823               	movf	??___fladd+3,w
  9416  03AC  00F3               	movwf	___fladd@b+3
  9417  03AD  0822               	movf	??___fladd+2,w
  9418  03AE  00F2               	movwf	___fladd@b+2
  9419  03AF  0821               	movf	??___fladd+1,w
  9420  03B0  00F1               	movwf	___fladd@b+1
  9421  03B1  0820               	movf	??___fladd,w
  9422  03B2  00F0               	movwf	___fladd@b
  9423  03B3  3080               	movlw	128
  9424  03B4  00A0               	movwf	??___fladd
  9425  03B5  0820               	movf	??___fladd,w
  9426  03B6  06F8               	xorwf	___fladd@signs,f
  9427  03B7  09FB               	comf	___fladd@grs,f
  9428  03B8  0AFB               	incf	___fladd@grs,f
  9429  03B9  087B               	movf	___fladd@grs,w
  9430  03BA  1D03               	btfss	3,2
  9431  03BB  2BCD               	goto	i1l813
  9432  03BC  3001               	movlw	1
  9433  03BD  07F0               	addwf	___fladd@b,f
  9434  03BE  3000               	movlw	0
  9435  03BF  3DF1               	addwfc	___fladd@b+1,f
  9436  03C0  3000               	movlw	0
  9437  03C1  3DF2               	addwfc	___fladd@b+2,f
  9438  03C2  3000               	movlw	0
  9439  03C3  3DF3               	addwfc	___fladd@b+3,f
  9440  03C4  2BCD               	goto	i1l813
  9441  03C5                     i1l2430:	
  9442  03C5  0874               	movf	___fladd@a,w
  9443  03C6  02F0               	subwf	___fladd@b,f
  9444  03C7  0875               	movf	___fladd@a+1,w
  9445  03C8  3BF1               	subwfb	___fladd@b+1,f
  9446  03C9  0876               	movf	___fladd@a+2,w
  9447  03CA  3BF2               	subwfb	___fladd@b+2,f
  9448  03CB  0877               	movf	___fladd@a+3,w
  9449  03CC  3BF3               	subwfb	___fladd@b+3,f
  9450  03CD                     i1l813:	
  9451  03CD  0873               	movf	___fladd@b+3,w
  9452  03CE  0472               	iorwf	___fladd@b+2,w
  9453  03CF  0471               	iorwf	___fladd@b+1,w
  9454  03D0  0470               	iorwf	___fladd@b,w
  9455  03D1  1D03               	skipz
  9456  03D2  2BF3               	goto	i1l2452
  9457  03D3  087B               	movf	___fladd@grs,w
  9458  03D4  1D03               	btfss	3,2
  9459  03D5  2BF3               	goto	i1l2452
  9460  03D6  3000               	movlw	0
  9461  03D7  00F3               	movwf	?___fladd+3
  9462  03D8  3000               	movlw	0
  9463  03D9  00F2               	movwf	?___fladd+2
  9464  03DA  3000               	movlw	0
  9465  03DB  00F1               	movwf	?___fladd+1
  9466  03DC  3000               	movlw	0
  9467  03DD  00F0               	movwf	?___fladd
  9468  03DE  0008               	return
  9469  03DF                     i1l2438:	
  9470  03DF  3001               	movlw	1
  9471  03E0                     u270_25:	
  9472  03E0  35F0               	lslf	___fladd@b,f
  9473  03E1  0DF1               	rlf	___fladd@b+1,f
  9474  03E2  0DF2               	rlf	___fladd@b+2,f
  9475  03E3  0DF3               	rlf	___fladd@b+3,f
  9476  03E4  0B89               	decfsz	9,f
  9477  03E5  2BE0               	goto	u270_25
  9478  03E6  1BFB               	btfsc	___fladd@grs,7
  9479  03E7  1470               	bsf	___fladd@b,0
  9480  03E8  1C7B               	btfss	___fladd@grs,0
  9481  03E9  2BEC               	goto	i1l2446
  9482  03EA  1403               	setc
  9483  03EB  2BED               	goto	L2
  9484  03EC                     i1l2446:	
  9485  03EC  1003               	clrc
  9486  03ED                     L2:	
  9487  03ED  0DFB               	rlf	___fladd@grs,f
  9488  03EE  087A               	movf	___fladd@bexp,w
  9489  03EF  1903               	btfsc	3,2
  9490  03F0  2BF3               	goto	i1l2452
  9491  03F1  3001               	movlw	1
  9492  03F2  02FA               	subwf	___fladd@bexp,f
  9493  03F3                     i1l2452:	
  9494  03F3  1FF2               	btfss	___fladd@b+2,7
  9495  03F4  2BDF               	goto	i1l2438
  9496  03F5                     i1l2454:	
  9497  03F5  01F9               	clrf	___fladd@aexp
  9498  03F6  1FFB               	btfss	___fladd@grs,7
  9499  03F7  2C00               	goto	i1l2464
  9500  03F8  087B               	movf	___fladd@grs,w
  9501  03F9  397F               	andlw	127
  9502  03FA  1903               	btfsc	3,2
  9503  03FB  1870               	btfsc	___fladd@b,0
  9504  03FC  2BFE               	goto	i1l2460
  9505  03FD  2C00               	goto	i1l2464
  9506  03FE                     i1l2460:	
  9507  03FE  01F9               	clrf	___fladd@aexp
  9508  03FF  0AF9               	incf	___fladd@aexp,f
  9509  0400                     i1l2464:	
  9510  0400  0879               	movf	___fladd@aexp,w
  9511  0401  1903               	btfsc	3,2
  9512  0402  2C2D               	goto	i1l826
  9513  0403  3001               	movlw	1
  9514  0404  07F0               	addwf	___fladd@b,f
  9515  0405  3000               	movlw	0
  9516  0406  3DF1               	addwfc	___fladd@b+1,f
  9517  0407  3000               	movlw	0
  9518  0408  3DF2               	addwfc	___fladd@b+2,f
  9519  0409  3000               	movlw	0
  9520  040A  3DF3               	addwfc	___fladd@b+3,f
  9521  040B  1C73               	btfss	___fladd@b+3,0
  9522  040C  2C2D               	goto	i1l826
  9523  040D  0870               	movf	___fladd@b,w
  9524  040E  0020               	movlb	0	; select bank0
  9525  040F  00A0               	movwf	??___fladd
  9526  0410  0871               	movf	___fladd@b+1,w
  9527  0411  00A1               	movwf	??___fladd+1
  9528  0412  0872               	movf	___fladd@b+2,w
  9529  0413  00A2               	movwf	??___fladd+2
  9530  0414  0873               	movf	___fladd@b+3,w
  9531  0415  00A3               	movwf	??___fladd+3
  9532  0416  3001               	movlw	1
  9533  0417  00A4               	movwf	??___fladd+4
  9534  0418                     u280_25:	
  9535  0418  37A3               	asrf	??___fladd+3,f
  9536  0419  0CA2               	rrf	??___fladd+2,f
  9537  041A  0CA1               	rrf	??___fladd+1,f
  9538  041B  0CA0               	rrf	??___fladd,f
  9539  041C  0BA4               	decfsz	??___fladd+4,f
  9540  041D  2C18               	goto	u280_25
  9541  041E  0823               	movf	??___fladd+3,w
  9542  041F  00F3               	movwf	___fladd@b+3
  9543  0420  0822               	movf	??___fladd+2,w
  9544  0421  00F2               	movwf	___fladd@b+2
  9545  0422  0821               	movf	??___fladd+1,w
  9546  0423  00F1               	movwf	___fladd@b+1
  9547  0424  0820               	movf	??___fladd,w
  9548  0425  00F0               	movwf	___fladd@b
  9549  0426  0A7A               	incf	___fladd@bexp,w
  9550  0427  1903               	btfsc	3,2
  9551  0428  2C2D               	goto	i1l826
  9552  0429  3001               	movlw	1
  9553  042A  00A0               	movwf	??___fladd
  9554  042B  0820               	movf	??___fladd,w
  9555  042C  07FA               	addwf	___fladd@bexp,f
  9556  042D                     i1l826:	
  9557  042D  0A7A               	incf	___fladd@bexp,w
  9558  042E  1D03               	btfss	3,2
  9559  042F  087A               	movf	___fladd@bexp,w
  9560  0430  1D03               	btfss	3,2
  9561  0431  2C3D               	goto	i1l2482
  9562  0432  3000               	movlw	0
  9563  0433  00F3               	movwf	___fladd@b+3
  9564  0434  3000               	movlw	0
  9565  0435  00F2               	movwf	___fladd@b+2
  9566  0436  3000               	movlw	0
  9567  0437  00F1               	movwf	___fladd@b+1
  9568  0438  3000               	movlw	0
  9569  0439  00F0               	movwf	___fladd@b
  9570  043A  087A               	movf	___fladd@bexp,w
  9571  043B  1903               	btfsc	3,2
  9572  043C  01F8               	clrf	___fladd@signs
  9573  043D                     i1l2482:	
  9574  043D  1C7A               	btfss	___fladd@bexp,0
  9575  043E  2C41               	goto	i1l2486
  9576  043F  17F2               	bsf	___fladd@b+2,7
  9577  0440  2C46               	goto	i1l834
  9578  0441                     i1l2486:	
  9579  0441  307F               	movlw	127
  9580  0442  0020               	movlb	0	; select bank0
  9581  0443  00A0               	movwf	??___fladd
  9582  0444  0820               	movf	??___fladd,w
  9583  0445  05F2               	andwf	___fladd@b+2,f
  9584  0446                     i1l834:	
  9585  0446  367A               	lsrf	___fladd@bexp,w
  9586  0447  0020               	movlb	0	; select bank0
  9587  0448  00A0               	movwf	??___fladd
  9588  0449  0820               	movf	??___fladd,w
  9589  044A  00F3               	movwf	___fladd@b+3
  9590  044B  1FF8               	btfss	___fladd@signs,7
  9591  044C  0008               	return
  9592  044D  17F3               	bsf	___fladd@b+3,7
  9593  044E  0008               	return
  9594  044F                     __end_of___fladd:	
  9595                           
  9596                           	psect	text42
  9597  0D70                     __ptext42:	
  9598 ;; *************** function ___aldiv *****************
  9599 ;; Defined at:
  9600 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aldiv.c"
  9601 ;; Parameters:    Size  Location     Type
  9602 ;;  divisor         4    0[COMMON] long 
  9603 ;;  dividend        4    4[COMMON] long 
  9604 ;; Auto vars:     Size  Location     Type
  9605 ;;  quotient        4    2[BANK0 ] long 
  9606 ;;  sign            1    1[BANK0 ] unsigned char 
  9607 ;;  counter         1    0[BANK0 ] unsigned char 
  9608 ;; Return value:  Size  Location     Type
  9609 ;;                  4    0[COMMON] long 
  9610 ;; Registers used:
  9611 ;;		wreg, status,2, status,0
  9612 ;; Tracked objects:
  9613 ;;		On entry : 0/0
  9614 ;;		On exit  : 0/0
  9615 ;;		Unchanged: 0/0
  9616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9617 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9618 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9619 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9620 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9621 ;;Total ram usage:       15 bytes
  9622 ;; Hardware stack levels used:    1
  9623 ;; This function calls:
  9624 ;;		Nothing
  9625 ;; This function is called by:
  9626 ;;		_speedCalc
  9627 ;; This function uses a non-reentrant model
  9628 ;;
  9629                           
  9630                           
  9631                           ;psect for function ___aldiv
  9632  0D70                     ___aldiv:	
  9633                           
  9634                           ;incstack = 0
  9635                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  9636  0D70  0020               	movlb	0	; select bank0
  9637  0D71  01A1               	clrf	___aldiv@sign
  9638  0D72  1FF3               	btfss	___aldiv@divisor+3,7
  9639  0D73  2D81               	goto	i1l556
  9640  0D74  09F0               	comf	___aldiv@divisor,f
  9641  0D75  09F1               	comf	___aldiv@divisor+1,f
  9642  0D76  09F2               	comf	___aldiv@divisor+2,f
  9643  0D77  09F3               	comf	___aldiv@divisor+3,f
  9644  0D78  0AF0               	incf	___aldiv@divisor,f
  9645  0D79  1903               	skipnz
  9646  0D7A  0AF1               	incf	___aldiv@divisor+1,f
  9647  0D7B  1903               	skipnz
  9648  0D7C  0AF2               	incf	___aldiv@divisor+2,f
  9649  0D7D  1903               	skipnz
  9650  0D7E  0AF3               	incf	___aldiv@divisor+3,f
  9651  0D7F  01A1               	clrf	___aldiv@sign
  9652  0D80  0AA1               	incf	___aldiv@sign,f
  9653  0D81                     i1l556:	
  9654  0D81  1FF7               	btfss	___aldiv@dividend+3,7
  9655  0D82  2D92               	goto	i1l2268
  9656  0D83  09F4               	comf	___aldiv@dividend,f
  9657  0D84  09F5               	comf	___aldiv@dividend+1,f
  9658  0D85  09F6               	comf	___aldiv@dividend+2,f
  9659  0D86  09F7               	comf	___aldiv@dividend+3,f
  9660  0D87  0AF4               	incf	___aldiv@dividend,f
  9661  0D88  1903               	skipnz
  9662  0D89  0AF5               	incf	___aldiv@dividend+1,f
  9663  0D8A  1903               	skipnz
  9664  0D8B  0AF6               	incf	___aldiv@dividend+2,f
  9665  0D8C  1903               	skipnz
  9666  0D8D  0AF7               	incf	___aldiv@dividend+3,f
  9667  0D8E  3001               	movlw	1
  9668  0D8F  00F8               	movwf	??___aldiv
  9669  0D90  0878               	movf	??___aldiv,w
  9670  0D91  06A1               	xorwf	___aldiv@sign,f
  9671  0D92                     i1l2268:	
  9672  0D92  3000               	movlw	0
  9673  0D93  00A5               	movwf	___aldiv@quotient+3
  9674  0D94  3000               	movlw	0
  9675  0D95  00A4               	movwf	___aldiv@quotient+2
  9676  0D96  3000               	movlw	0
  9677  0D97  00A3               	movwf	___aldiv@quotient+1
  9678  0D98  3000               	movlw	0
  9679  0D99  00A2               	movwf	___aldiv@quotient
  9680  0D9A  0873               	movf	___aldiv@divisor+3,w
  9681  0D9B  0472               	iorwf	___aldiv@divisor+2,w
  9682  0D9C  0471               	iorwf	___aldiv@divisor+1,w
  9683  0D9D  0470               	iorwf	___aldiv@divisor,w
  9684  0D9E  1903               	skipnz
  9685  0D9F  2DDB               	goto	i1l2290
  9686  0DA0  01A0               	clrf	___aldiv@counter
  9687  0DA1  0AA0               	incf	___aldiv@counter,f
  9688  0DA2                     i1l2276:	
  9689  0DA2  1BF3               	btfsc	___aldiv@divisor+3,7
  9690  0DA3  2DB0               	goto	i1l2278
  9691  0DA4  3001               	movlw	1
  9692  0DA5                     u237_25:	
  9693  0DA5  35F0               	lslf	___aldiv@divisor,f
  9694  0DA6  0DF1               	rlf	___aldiv@divisor+1,f
  9695  0DA7  0DF2               	rlf	___aldiv@divisor+2,f
  9696  0DA8  0DF3               	rlf	___aldiv@divisor+3,f
  9697  0DA9  0B89               	decfsz	9,f
  9698  0DAA  2DA5               	goto	u237_25
  9699  0DAB  3001               	movlw	1
  9700  0DAC  00F8               	movwf	??___aldiv
  9701  0DAD  0878               	movf	??___aldiv,w
  9702  0DAE  07A0               	addwf	___aldiv@counter,f
  9703  0DAF  2DA2               	goto	i1l2276
  9704  0DB0                     i1l2278:	
  9705  0DB0  3001               	movlw	1
  9706  0DB1                     u239_25:	
  9707  0DB1  35A2               	lslf	___aldiv@quotient,f
  9708  0DB2  0DA3               	rlf	___aldiv@quotient+1,f
  9709  0DB3  0DA4               	rlf	___aldiv@quotient+2,f
  9710  0DB4  0DA5               	rlf	___aldiv@quotient+3,f
  9711  0DB5  0B89               	decfsz	9,f
  9712  0DB6  2DB1               	goto	u239_25
  9713  0DB7  0873               	movf	___aldiv@divisor+3,w
  9714  0DB8  0277               	subwf	___aldiv@dividend+3,w
  9715  0DB9  1D03               	skipz
  9716  0DBA  2DC5               	goto	u240_25
  9717  0DBB  0872               	movf	___aldiv@divisor+2,w
  9718  0DBC  0276               	subwf	___aldiv@dividend+2,w
  9719  0DBD  1D03               	skipz
  9720  0DBE  2DC5               	goto	u240_25
  9721  0DBF  0871               	movf	___aldiv@divisor+1,w
  9722  0DC0  0275               	subwf	___aldiv@dividend+1,w
  9723  0DC1  1D03               	skipz
  9724  0DC2  2DC5               	goto	u240_25
  9725  0DC3  0870               	movf	___aldiv@divisor,w
  9726  0DC4  0274               	subwf	___aldiv@dividend,w
  9727  0DC5                     u240_25:	
  9728  0DC5  1C03               	skipc
  9729  0DC6  2DD0               	goto	i1l2286
  9730  0DC7  0870               	movf	___aldiv@divisor,w
  9731  0DC8  02F4               	subwf	___aldiv@dividend,f
  9732  0DC9  0871               	movf	___aldiv@divisor+1,w
  9733  0DCA  3BF5               	subwfb	___aldiv@dividend+1,f
  9734  0DCB  0872               	movf	___aldiv@divisor+2,w
  9735  0DCC  3BF6               	subwfb	___aldiv@dividend+2,f
  9736  0DCD  0873               	movf	___aldiv@divisor+3,w
  9737  0DCE  3BF7               	subwfb	___aldiv@dividend+3,f
  9738  0DCF  1422               	bsf	___aldiv@quotient,0
  9739  0DD0                     i1l2286:	
  9740  0DD0  3001               	movlw	1
  9741  0DD1                     u241_25:	
  9742  0DD1  36F3               	lsrf	___aldiv@divisor+3,f
  9743  0DD2  0CF2               	rrf	___aldiv@divisor+2,f
  9744  0DD3  0CF1               	rrf	___aldiv@divisor+1,f
  9745  0DD4  0CF0               	rrf	___aldiv@divisor,f
  9746  0DD5  0B89               	decfsz	9,f
  9747  0DD6  2DD1               	goto	u241_25
  9748  0DD7  3001               	movlw	1
  9749  0DD8  02A0               	subwf	___aldiv@counter,f
  9750  0DD9  1D03               	btfss	3,2
  9751  0DDA  2DB0               	goto	i1l2278
  9752  0DDB                     i1l2290:	
  9753  0DDB  0821               	movf	___aldiv@sign,w
  9754  0DDC  1903               	btfsc	3,2
  9755  0DDD  2DE9               	goto	i1l2294
  9756  0DDE  09A2               	comf	___aldiv@quotient,f
  9757  0DDF  09A3               	comf	___aldiv@quotient+1,f
  9758  0DE0  09A4               	comf	___aldiv@quotient+2,f
  9759  0DE1  09A5               	comf	___aldiv@quotient+3,f
  9760  0DE2  0AA2               	incf	___aldiv@quotient,f
  9761  0DE3  1903               	skipnz
  9762  0DE4  0AA3               	incf	___aldiv@quotient+1,f
  9763  0DE5  1903               	skipnz
  9764  0DE6  0AA4               	incf	___aldiv@quotient+2,f
  9765  0DE7  1903               	skipnz
  9766  0DE8  0AA5               	incf	___aldiv@quotient+3,f
  9767  0DE9                     i1l2294:	
  9768  0DE9  0825               	movf	___aldiv@quotient+3,w
  9769  0DEA  00F3               	movwf	?___aldiv+3
  9770  0DEB  0824               	movf	___aldiv@quotient+2,w
  9771  0DEC  00F2               	movwf	?___aldiv+2
  9772  0DED  0823               	movf	___aldiv@quotient+1,w
  9773  0DEE  00F1               	movwf	?___aldiv+1
  9774  0DEF  0822               	movf	___aldiv@quotient,w
  9775  0DF0  00F0               	movwf	?___aldiv
  9776  0DF1  0008               	return
  9777  0DF2                     __end_of___aldiv:	
  9778  007E                     btemp	set	126	;btemp
  9779  007E                     int$flags	set	126
  9780  007E                     wtemp0	set	126


Data Sizes:
    Strings     27
    Constant    0
    Data        32
    BSS         57
    Persistent  43
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     30      60
    BANK1            80     76      80
    BANK2            80     14      80
    BANK3            80      5       5
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    puts@s	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_3(CODE[3]), hrDisp(BANK2[13]), distanceDisp(BANK2[11]), speedDisp(BANK2[8]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[10]), STR_1(CODE[14]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK2[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), STR_3(CODE[3]), hrDisp(BANK2[13]), distanceDisp(BANK2[11]), 
		 -> speedDisp(BANK2[8]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S986_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK3[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[10]), STR_1(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[10]), STR_1(CODE[14]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 4
		 -> ?_printf(BANK2[2]), rpm(BANK0[4]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK3[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK2[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    writeString@string	PTR unsigned char  size(1) Largest target is 13
		 -> hrDisp(BANK2[13]), distanceDisp(BANK2[11]), speedDisp(BANK2[8]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timerISR(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timerISR(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    IOCCF7_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> speedCalc(), IOCCF7_DefaultInterruptHandler(), 

    IOCCF7_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> speedCalc(), Absolute function(), IOCCF7_DefaultInterruptHandler(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _speedCalc->___xxtofl
    ___lmul->___aldiv
    ___flmul->___xxtofl

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _IOCCF7_ISR->_speedCalc
    _speedCalc->___flmul
    ___lmul->___aldiv

Critical Paths under _main in BANK1

    _writeString->_puts
    _setCursor->_EUSART_Write
    _setCursor->_EUSART_is_tx_ready
    _resetCursor->_puts
    _puts->_fputs
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _abs->___aomod
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCCF7_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_printf
    _printf->_vfprintf

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    _main->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   17952
                                              4 BANK3      1     1      0
         _IOCCF7_SetInterruptHandler
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                             _printf
                        _resetCursor
                          _setCursor
                        _writeString
 ---------------------------------------------------------------------------------
 (1) _writeString                                          1     1      0    3558
                                             24 BANK1      1     1      0
                 _EUSART_is_tx_ready
                               _puts
 ---------------------------------------------------------------------------------
 (1) _setCursor                                            4     3      1     763
                                              1 BANK1      4     3      1
                       _EUSART_Write
                 _EUSART_is_tx_ready
 ---------------------------------------------------------------------------------
 (2) _EUSART_is_tx_ready                                   1     1      0      37
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _resetCursor                                          0     0      0    3382
                               _puts
 ---------------------------------------------------------------------------------
 (2) _puts                                                 5     3      2    3382
                                             19 BANK1      5     3      2
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (1) _printf                                              10     4      6    9042
                                              8 BANK2      6     0      6
                                              0 BANK3      4     4      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    8596
                                              0 BANK2      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    8149
                                             58 BANK1     18    16      2
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    6109
                                             28 BANK1     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    3878
                                             19 BANK1      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     166
                                              0 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 (3) _fputs                                                9     6      3    1914
                                             10 BANK1      9     6      3
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3    1210
                                              2 BANK1      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      62
                                              1 BANK1      1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             19 BANK1      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     613
                                              0 BANK1     19     3     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     625
                                              0 BANK1     27    11     16
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     785
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0     211
                                              2 BANK1      1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     211
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     211
         _IOCCF7_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCCF7_SetInterruptHandler                           2     0      2     211
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     363
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          0     0      0    5948
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                           _timerISR *
 ---------------------------------------------------------------------------------
 (12) _timerISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _PIN_MANAGER_IOC                                     0     0      0    5948
                         _IOCCF7_ISR
 ---------------------------------------------------------------------------------
 (12) _IOCCF7_ISR                                          0     0      0    5948
                   Absolute function *
     _IOCCF7_DefaultInterruptHandler *
                          _speedCalc *
 ---------------------------------------------------------------------------------
 (13) _speedCalc                                           4     4      0    5948
                                             26 BANK0      4     4      0
                            ___aldiv
                            ___fladd
                            ___flmul
                             ___lmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (14) ___xxtofl                                           14    10      4     398
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (14) ___lmul                                             12     4      8     244
                                              9 COMMON     4     4      0
                                              6 BANK0      8     0      8
                            ___aldiv (ARG)
 ---------------------------------------------------------------------------------
 (14) ___flmul                                            26    18      8    2569
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (15) __Umul8_16                                           9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (14) ___fladd                                            20    12      8    2262
                                              0 COMMON    12     4      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (14) ___aldiv                                            15     7      8     452
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (13) _IOCCF7_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _IOCCF7_SetInterruptHandler
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCCF7_SetInterruptHandler
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _TMR0_SetInterruptHandler
   _printf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART_Write
             _fputs
               _fputc
                 _putch
                   _EUSART_Write
             _strlen
         _fputc
           _putch
             _EUSART_Write
   _resetCursor
     _puts
       _fputc
         _putch
           _EUSART_Write
       _fputs
         _fputc
           _putch
             _EUSART_Write
   _setCursor
     _EUSART_Write
     _EUSART_is_tx_ready
   _writeString
     _EUSART_is_tx_ready
     _puts
       _fputc
         _putch
           _EUSART_Write
       _fputs
         _fputc
           _putch
             _EUSART_Write

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
     _IOCCF7_ISR
       Absolute function(Fake) *
       _IOCCF7_DefaultInterruptHandler *
       _speedCalc *
         ___aldiv
         ___fladd
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___lmul
           ___aldiv (ARG)
         ___xxtofl
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _timerISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1E      3C       5       75.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     4C      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      E      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      5       5      11        6.3%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      EF      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      EF      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Mar 18 12:11:16 2019

                                  __CFG_CP$OFF 0000                                             l69 0A92  
                              _timer0ReloadVal 005B                            __Umul8_16@word_mpld 0076  
                                          l350 0CAE                                            l441 07B3  
                                          l450 049C                                            l604 0FEE  
                                          l444 07D3                                            l454 04B2  
                                          l455 04C4                                            l449 0495  
                                          l458 0559                                            l591 0788  
                                          _abs 0B02                                            _pad 079A  
                                          _rpm 004F                 ?_EUSART_SetFramingErrorHandler 00A0  
                                 __CFG_BORV$LO 0000                                            wreg 0009  
                                 __CFG_IESO$ON 0000                                   ___flmul@aexp 0032  
                                 ___flmul@bexp 0033         __end_of_IOCCF7_DefaultInterruptHandler 07FD  
      __size_of_IOCCF7_DefaultInterruptHandler 0001                 _IOCCF7_DefaultInterruptHandler 07FC  
                                 ___flmul@sign 002D                                   ___flmul@temp 0038  
                                 ___flmul@prod 0034                                   __CFG_LVP$OFF 0000  
                                 __CFG_ZCD$OFF 0000                                           ?_abs 00B3  
                                         l3102 07A9                                           l3112 07B5  
                                         l3130 06CF                                           l3106 07B1  
                                         l3210 04C0                                           l3116 07E1  
                                         l3204 04AD                                           l3134 06F7  
                                         l3070 0CDD                                           l3214 04F0  
                                         l3302 0674                                           l3136 06FC  
                                         l3072 0CE6                                           l3224 04CB  
                                         l3232 0565                                           l3146 0713  
                                         l3066 0CBA                                           l3082 0BB6  
                                         l3242 0576                                           l3410 0C69  
                                         l3156 075B                                           l3148 0722  
                                         l3180 0F82                                           l3172 0F75  
                                         l3084 0BD7                                           l3092 0B21  
                                         l3236 056C                                           l3308 067E  
                                         l3420 0C74                                           l3158 0767  
                                         l3182 0F91                                           l3094 0B2D  
                                         l3246 0583                                           l3334 07F8  
                                         l3430 0C8D                                           l3168 0F4D  
                                         l3280 0617                                           l3272 05DA  
                                         l3408 0C48                                           l3432 0C92  
                                         l3186 0FC1                                           l3426 0C83  
                                         l3188 0FCD                                           l3292 064B  
                                         l3428 0C88                                           l3436 0C97  
                                         l3446 0AD7                                           l3288 0647  
                                         l3298 066E                                           l3634 0CA0  
                                         ?_pad 00B3                                           l3588 0D2B  
                                         STR_1 1000                                           STR_2 100E  
                                         STR_3 1018                                           _LATA 010C  
                                         _LATB 010D                                           _LATC 010E  
                                         u4227 0AE6                                           u4237 0C7F  
                                         u3710 0704                                           u3645 07BF  
                                         u3745 0748                                           u3665 0B0C  
                                         u3595 0CDB                                           u3845 0FAF  
                                         u3935 04A5                                           u3880 046B  
                                         u3890 046C                                           u3965 0563  
                                         u3985 04DF                                           u3995 04EB  
                                         _TMR0 0015                                           _WPUA 020C  
                                         _WPUB 020D                                           _WPUC 020E  
                                 __CFG_WRT$OFF 0000                                  __CFG_FCMEN$ON 0000  
                                         abs@a 00B3                                           _dbuf 0120  
                                         _main 0CEF                                           _dtoa 044F  
                                         _prec 00EC                                           _nout 004A  
                                         pad@i 00B7                                           pad@p 00B4  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         pad@w 00B9                                           btemp 007E  
                                         _puts 0B34                                  __CFG_BOREN$ON 0000  
                                         start 0014                                  __CFG_MCLRE$ON 0000  
                                        ??_abs 00B5                                          ??_pad 00B6  
                      __end_of_TMR0_Initialize 0B02                 ??_TMR0_DefaultInterruptHandler 0070  
                                ?_EUSART_Write 0070                 __size_of_OSCILLATOR_Initialize 0007  
                __end_of_OSCILLATOR_Initialize 0A51                            __size_of_IOCCF7_ISR 000D  
                              __end_of___aldiv 0DF2                                __end_of___aodiv 079A  
                              __end_of___fladd 044F                                          ?_main 0070  
                                        ?_dtoa 00BC                                __end_of___aomod 1000  
                                __CFG_WDTE$OFF 0000                                __end_of___flmul 0266  
                                        ?_puts 00B3                                          i1l240 0012  
                                        i1l236 000D                                          i1l556 0D81  
                                        i1l900 0259                                          i1l813 03CD  
                                        i1l834 0446                                          i1l826 042D  
                                        i1l940 0E63                                          i1l932 0E45  
                                        i1l926 0E0F                                          i1l792 02B3  
                                        i1l939 0E59                                          i1l796 0347  
                                        i1l798 0329                                          i1l994 0B5F  
                                 vfpfcnvrt@fmt 00DA                                          _TRISA 008C  
                                        _TRISB 008D                                          _TRISC 008E  
                                  _writeString 0AD5              __size_of_TMR0_SetInterruptHandler 0009  
                          ___lmul@multiplicand 002A                      ?_TMR0_SetInterruptHandler 00A0  
                             __end_of_TMR0_ISR 0AC1                        __end_of_PIN_MANAGER_IOC 0A38  
                                        _flags 00EE                                          _fputc 0CAF  
                                        _fputs 0BB3                                          _speed 0042  
                                        pad@fp 00BB                                          _width 004C  
                                        _putch 0A38                                          dtoa@d 00BC  
                                        dtoa@i 00D8                                          dtoa@n 00D0  
                                        dtoa@p 00CA                                          dtoa@s 00CE  
                                        dtoa@w 00CC                                          pclath 000A  
                                        puts@s 00B3                                          status 0003  
                                        wtemp0 007E                                __initialization 0016  
                                 __end_of_main 0D70                                   __end_of_dtoa 0595  
                                 __end_of_puts 0B4F                                 ??_EUSART_Write 00A0  
                               __CFG_LPBOR$OFF 0000                    ?_INTERRUPT_InterruptManager 0070  
                                       ??_main 01A4                                         ??_dtoa 00C4  
                                       ??_puts 00B5                                 __CFG_PLLEN$OFF 0000  
            _EUSART_DefaultFramingErrorHandler 0000                     _EUSART_OverrunErrorHandler 0057  
                                       ?_fputc 00A2                                         ?_fputs 00AA  
                                       _ANSELA 018C                                         ?_putch 0070  
                                       _ANSELB 018D                                         _ANSELC 018E  
                 ??_IOCCF7_SetInterruptHandler 00A2                                         _BORCON 0116  
                                       _RC1REG 0199                                         _RC1STA 019D  
                                       _RB7PPS 0E9F                                         i1l2312 0280  
                                       _ODCONA 028C                                         i1l2410 0368  
                                       i1l2402 0355                                         i1l2250 0BEF  
                                       _ODCONB 028D                                         _ODCONC 028E  
                                       i1l2412 036A                                         i1l2420 037A  
                                       i1l2340 02AB                                         i1l2316 0283  
                                       i1l2430 03C5                                         i1l2318 028B  
                                       i1l2510 005E                                         i1l2246 0BE4  
                                       i1l2336 02A8                                         i1l2176 0B59  
                                       i1l2600 01F1                                         i1l2290 0DDB  
                                       i1l2346 02BD                                         i1l2610 021A  
                                       i1l2506 0054                                         i1l2276 0DA2  
                                       i1l2268 0D92                                         i1l2460 03FE  
                                       i1l2452 03F3                                         i1l2620 0246  
                                       i1l2524 0077                                         i1l2508 0056  
                                       i1l2294 0DE9                                         i1l2286 0DD0  
                                       i1l2278 0DB0                                         i1l2446 03EC  
                                       i1l2438 03DF                                         i1l2454 03F5  
                                       i1l2614 022F                                         i1l2526 0079  
                                       i1l2464 0400                                         i1l2384 0332  
                                       i1l2376 02F9                                         i1l2536 008F  
                                       i1l2528 0081                                         i1l2482 043D  
                                       i1l2386 0334                                         i1l2394 0343  
                                       i1l2650 0E32                                         i1l2660 0E4A  
                                       i1l2644 0E1E                                         i1l2486 0441  
                                       i1l2590 01D8                                         i1l2638 0E07  
                                       i1l2672 0E7E                                         i1l2648 0E22  
                                       i1l2658 0E57                                         i1l2826 0AB0  
                                       i1l2596 01EF                                         i1l2588 01C1  
                                       u212_25 0B60                                         u300_25 01C4  
                                       u310_25 0223                                         u302_25 01CD  
                                       u311_25 0239                                         u231_25 0BF0  
                                       u240_25 0DC5                                         u232_25 0BF7  
                                       u320_25 0E51                                         u241_25 0DD1  
                                       u324_25 0E6B                                         u316_25 0E2B  
                   __end_of_EUSART_is_tx_ready 07FB                                         u237_25 0DA5  
                                       u253_25 030D                                         u309_25 0208  
                                       u254_20 0317                                         u270_25 03E0  
                                       u318_25 0E3F                                         u255_20 0318  
                                       u239_25 0DB1                                         u280_25 0418  
                                       u265_25 036F                                         u266_23 038D  
                                       u258_25 0339                                         u295_25 0105  
                                       u296_25 0134                                         u297_25 018A  
                                       _OSCCON 0099                                         u298_25 01A1  
                                       u299_25 01B0                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _TX1REG 019A  
                                       _TX1STA 019E                                   ?_resetCursor 0070  
                                       u368lld 06CC                                         u379lld 0F4A  
                             __end_of___xxtofl 0E87                                 __CFG_PWRTE$OFF 0000  
                                 vfprintf@cfmt 0166                                         ___lmul 0BDC  
                                    ??___aldiv 0078                                      ??___aodiv 00B0  
                                    ??___fladd 0020                                      ??___aomod 00B0  
                               __CFG_STVREN$ON 0000                                      ??___flmul 0028  
                                       _hrDisp 0140                               ?_TMR0_Initialize 0070  
                                       _printf 0AC1                                         pad@buf 00B3  
                                       dtoa@fp 00C9                                         _strlen 0B1B  
          __size_of_IOCCF7_SetInterruptHandler 0009                                         fputc@c 00A2  
                                       fputs@c 00B0                                         fputs@i 00B1  
                                       fputs@s 00AA                             __size_of__Umul8_16 001F  
                             __end_of_timerISR 0A90                               __end_of_vfprintf 0C72  
     TMR0_SetInterruptHandler@InterruptHandler 00A0     IOCCF7_SetInterruptHandler@InterruptHandler 00A0  
                             ?_PIN_MANAGER_IOC 0070                                   ??_IOCCF7_ISR 007E  
                                 ___xxtofl@arg 007A                                   ___xxtofl@exp 0079  
                            _SYSTEM_Initialize 0A9A                                   ___xxtofl@val 0070  
                      __end_of__initialization 0036                             ?_SYSTEM_Initialize 0070  
                               __pcstackCOMMON 0070                                   __pidataBANK2 0B6E  
                          ??_SYSTEM_Initialize 00A3                                      ?_TMR0_ISR 0070  
                                __end_of_fputc 0CEF                                  __end_of_fputs 0BDC  
                                __end_of_putch 0A3E                             __end_of_IOCCF7_ISR 0AB3  
                               _OPTION_REGbits 0095                ??_EUSART_SetOverrunErrorHandler 00A2  
                                      ??_fputc 00A5                      __end_of_SYSTEM_Initialize 0AA6  
                                      ??_fputs 00AD                                        ??_putch 00A1  
                                   __pbssBANK0 003E                                     __pbssBANK1 00EC  
                                   __pbssBANK2 0120                           __end_of_EUSART_Write 0A9A  
                            __end_of__Umul8_16 0B6E                                     __pmaintext 0CEF  
             __end_of_TMR0_SetInterruptHandler 0A86                                        ?___lmul 0026  
                                   ??_TMR0_ISR 0070                                __CFG_PPS1WAY$ON 0000  
                           __size_of_setCursor 003D                                     __pintentry 0004  
                               ___lmul@product 0079                                        ?_printf 0168  
                                      ?_strlen 00A0                             __size_of_speedCalc 009A  
                              __CFG_WDTCCS$SWC 0000                                      ?___xxtofl 0070  
                                 ?_writeString 0070                             __size_of_vfpfcnvrt 010E  
                                      _OSCTUNE 0098                                        _SLRCONA 030C  
                                      _SLRCONB 030D                                        _SLRCONC 030E  
           __end_of_IOCCF7_SetInterruptHandler 0A7D                     _IOCCF7_SetInterruptHandler 0A74  
                     ??_EUSART_SetErrorHandler 00A2                           __size_of_resetCursor 0008  
                                    ?_timerISR 0070                                        ___aldiv 0D70  
                                      ___aodiv 06A3                                        ___fladd 0266  
                                      ___aomod 0F21                                __size_of___lmul 0030  
                                      ___flmul 003A                                      ?_vfprintf 0160  
                                      __ptext1 0AD5                                        __ptext2 0C72  
                                      __ptext3 07ED                                        __ptext4 0A51  
                                      __ptext5 0B34                                        __ptext6 0AC1  
                                      __ptext7 0C3F                                        __ptext8 0595  
                                      __ptext9 044F                                __size_of_printf 0014  
                              __size_of_strlen 0019                                        _counter 0046  
                        _OSCILLATOR_Initialize 0A4A                                   __size_of_abs 0019  
                                 __size_of_pad 0053                                     ??___xxtofl 0074  
                             ___aldiv@dividend 0074                       ??_PIN_MANAGER_Initialize 00A2  
                                    _IOCCFbits 0399                                      _IOCCNbits 0398  
                                    _IOCCPbits 0397                     __size_of_SYSTEM_Initialize 000C  
                                      clrloop0 0A3F                           end_of_initialization 0036  
                            __end_of_setCursor 0CAF          __end_of_EUSART_SetOverrunErrorHandler 0A74  
       __size_of_EUSART_SetOverrunErrorHandler 0009                  _EUSART_SetOverrunErrorHandler 0A6B  
                                      fputc@fp 00A4                                        init_ram 0A44  
                                      fputs@fp 00AC                                        initloop 0A45  
                            __end_of_speedCalc 0F21                              _EUSART_Initialize 0B8E  
                           ?_EUSART_Initialize 0070                              __end_of_vfpfcnvrt 06A3  
                                   ??_timerISR 0070                               ___aldiv@quotient 0022  
                           _EUSART_is_tx_ready 07ED                                     ??_vfprintf 0163  
                                      strlen@a 00A3                                        strlen@s 00A4  
                          ??_EUSART_Initialize 00A2                                   _distanceDisp 014D  
                     _TMR0_SetInterruptHandler 0A7D                            ?_EUSART_is_tx_ready 0070  
                                  ___fladd@grs 007B                               __CFG_FOSC$INTOSC 0000  
                                ___xxtofl@sign 0078                          __size_of_EUSART_Write 000A  
              __size_of_EUSART_SetErrorHandler 0009                                    ___flmul@grs 002E  
                    __end_of_EUSART_Initialize 0BB3                           ??_EUSART_is_tx_ready 00A0  
                               _speedCalc$1213 003A                                 __end_of___lmul 0C0C  
                   _EUSART_DefaultErrorHandler 0000                                    vfpfcnvrt@ap 00DB  
                                  vfpfcnvrt@fp 00EB                                    vfpfcnvrt@ll 00E1  
                                  vfpfcnvrt@vp 00E9                                   _EUSART_Write 0A90  
                            __size_of_TMR0_ISR 000E                         ?_OSCILLATOR_Initialize 0070  
                            writeString@string 00B8                                 __end_of_printf 0AD5  
                               __end_of_strlen 0B34                            start_initialization 0016  
                     __size_of_TMR0_Initialize 0018                __size_of_PIN_MANAGER_Initialize 0033  
                                  __end_of_abs 0B1B                                    __end_of_pad 07ED  
                         __size_of_writeString 0015                         _EUSART_is_tx_ready$167 00A0  
                                  putch@txData 00A1                       __size_of_PIN_MANAGER_IOC 0006  
               ?_EUSART_SetOverrunErrorHandler 00A0                                    vfprintf@fmt 0160  
                   _EUSART_FramingErrorHandler 0059                                       ??___lmul 0079  
                       _EUSART_SetErrorHandler 0A59                                      __Umul8_16 0B4F  
                                  __pdataBANK2 0140                                       ??_printf 01A0  
                                     ??_strlen 00A2                                      ___fladd@a 0074  
                                    ___fladd@b 0070                                      ___flmul@a 0024  
                                    ___flmul@b 0020                                      ___latbits 0002  
                                __pcstackBANK0 0020                                  __pcstackBANK1 00A0  
                                __pcstackBANK2 0160                                  __pcstackBANK3 01A0  
                             ___aodiv@dividend 00A8                              __size_of___xxtofl 0095  
                  ?_IOCCF7_SetInterruptHandler 00A0                     __size_of_EUSART_Initialize 0025  
                        _TMR0_InterruptHandler 0053                                      __pnvBANK0 0053  
                                    __pnvBANK2 016E                         _PIN_MANAGER_Initialize 0C0C  
                                     ?___aldiv 0070                                       ?___aodiv 00A0  
                                     ?___fladd 0070                                       ?___aomod 00A0  
                             ___aodiv@quotient 00B3                                       ?___flmul 0020  
                                   ?__Umul8_16 0070                                     setCursor@a 00A4  
                                   setCursor@b 00A1                              __size_of_timerISR 000A  
                 ??_INTERRUPT_InterruptManager 007E                              __size_of_vfprintf 0033  
                                     _BAUD1CON 019F                                 __size_of_fputc 0040  
                               __size_of_fputs 0029                                 __size_of_putch 0006  
                              ___aldiv@divisor 0070                              ??_TMR0_Initialize 00A2  
                                ??_resetCursor 00B8                                ___aldiv@counter 0020  
       EUSART_SetErrorHandler@interruptHandler 00A0                                      _setCursor 0C72  
                                    clear_ram0 0A3E                              _eusartRxLastError 004E  
          __size_of_INTERRUPT_InterruptManager 0010                     ??_TMR0_SetInterruptHandler 00A2  
                                     _PIR1bits 0010                ??_EUSART_SetFramingErrorHandler 00A2  
                                    _puts$1032 00B7                                      _speedCalc 0E87  
                                    _speedDisp 0158               ??_IOCCF7_DefaultInterruptHandler 0070  
              ?_IOCCF7_DefaultInterruptHandler 0070                           __CFG_WDTCPS$WDTCPS1F 0000  
                                     _TMR0_ISR 0AB3              _EUSART_DefaultOverrunErrorHandler 0000  
                            ??_PIN_MANAGER_IOC 007E                                      _vfpfcnvrt 0595  
                            ___lmul@multiplier 0026                                     ?_setCursor 00A1  
                                   vfprintf@ap 0162                                     vfprintf@fp 0165  
                          __end_of_resetCursor 0A59                                     ?_speedCalc 0070  
                      ??_OSCILLATOR_Initialize 00A0                                    ??__Umul8_16 0072  
                          _EUSART_ErrorHandler 016E                               __size_of___aldiv 0082  
                             __size_of___aodiv 00F7                               __size_of___fladd 01E9  
                             __size_of___aomod 00DF                               __size_of___flmul 022C  
                                   ?_vfpfcnvrt 00DA                                ___aodiv@divisor 00A0  
                              ___aodiv@counter 00B1                                       ___xxtofl 0DF2  
                                     _dtoa$686 00C7                                       __ptext10 079A  
                                     __ptext11 0B1B                                       __ptext20 0AEA  
                                     __ptext12 0BB3                                       __ptext21 0A7D  
                                     __ptext13 0CAF                                       __ptext30 0AB3  
                                     __ptext22 0C0C                                       __ptext14 0A38  
                                     __ptext31 07FB                                       __ptext23 0A74  
                                     __ptext15 0A90                                       __ptext40 0B4F  
                                     __ptext32 0A86                                       __ptext24 0A4A  
                                     __ptext16 0B02                                       __ptext41 0266  
                                     __ptext33 0A32                                       __ptext25 0B8E  
                                     __ptext17 0F21                                       __ptext42 0D70  
                                     __ptext34 0AA6                                       __ptext26 0A6B  
                                     __ptext18 06A3                                       __ptext35 07FC  
                                     __ptext27 0A62                                       __ptext19 0A9A  
                                     __ptext36 0E87                                       __ptext28 0A59  
                                     __ptext37 0DF2                                       __ptext38 0BDC  
                                     __ptext39 003A                                       _distance 003E  
                                   _IOCCF7_ISR 0AA6                                  __size_of_main 0081  
                                __size_of_dtoa 0146                                  __size_of_puts 001B  
                  __size_of_EUSART_is_tx_ready 000E           __end_of_TMR0_DefaultInterruptHandler 07FC  
        __size_of_TMR0_DefaultInterruptHandler 0001                   _TMR0_DefaultInterruptHandler 07FB  
                         __CFG_WDTCWS$WDTCWSSW 0000                        ?_EUSART_SetErrorHandler 00A0  
                                   _RC1STAbits 019D  EUSART_SetOverrunErrorHandler@interruptHandler 00A0  
                                     _timerISR 0A86                                       int$flags 007E  
                                     _vfprintf 0C3F             __end_of_INTERRUPT_InterruptManager 0014  
                   _INTERRUPT_InterruptManager 0004                                      printf@fmt 0168  
        __end_of_EUSART_SetFramingErrorHandler 0A6B         __size_of_EUSART_SetFramingErrorHandler 0009  
                _EUSART_SetFramingErrorHandler 0A62                               ___aomod@dividend 00A8  
                                ??_writeString 00B8                                     _INTCONbits 000B  
                                     intlevel1 0000                        ?_PIN_MANAGER_Initialize 0070  
                                  _resetCursor 0A51                 __end_of_EUSART_SetErrorHandler 0A62  
                                  ??_setCursor 00A2                              __CFG_CLKOUTEN$OFF 0000  
                ?_TMR0_DefaultInterruptHandler 0070                                    ??_speedCalc 007E  
                                     printf@ap 01A3  EUSART_SetFramingErrorHandler@interruptHandler 00A0  
                              ___aomod@divisor 00A0                                    ??_vfpfcnvrt 00DC  
                              ___aomod@counter 00B1                                  __pstringtext1 1000  
                                __pstringtext2 100E                                  __pstringtext3 1018  
                                __pstringtext4 0000                         __Umul8_16@multiplicand 0070  
                                   _OPTION_REG 0095                                _TMR0_Initialize 0AEA  
                                 ___aldiv@sign 0021                                     _TX1STAbits 019E  
                                ___fladd@signs 0078                             EUSART_Write@txData 00A0  
                          __end_of_writeString 0AEA                                   ___aodiv@sign 00B2  
               __end_of_PIN_MANAGER_Initialize 0C3F                                    ?_IOCCF7_ISR 0070  
                                 ___fladd@aexp 0079                                   ___fladd@bexp 007A  
                              _PIN_MANAGER_IOC 0A32                           __Umul8_16@multiplier 0078  
                                 ___aomod@sign 00B2                        _IOCCF7_InterruptHandler 0055  
                            __Umul8_16@product 0074  
