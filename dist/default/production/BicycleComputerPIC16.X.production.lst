

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Mar 12 12:40:49 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1619
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	stringtext3,global,class=STRCODE,delta=2
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2
    22                           	psect	text2,local,class=CODE,merge=1,delta=2
    23                           	psect	text3,local,class=CODE,merge=1,delta=2
    24                           	psect	text4,local,class=CODE,merge=1,delta=2
    25                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text7,local,class=CODE,merge=1,delta=2
    28                           	psect	text8,local,class=CODE,merge=1,delta=2
    29                           	psect	text9,local,class=CODE,merge=1,delta=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2
    35                           	psect	text15,local,class=CODE,merge=1,delta=2
    36                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text19,local,class=CODE,merge=1,delta=2
    40                           	psect	text20,local,class=CODE,merge=1,delta=2
    41                           	psect	text21,local,class=CODE,merge=1,delta=2
    42                           	psect	text22,local,class=CODE,merge=1,delta=2
    43                           	psect	text23,local,class=CODE,merge=1,delta=2
    44                           	psect	text24,local,class=CODE,merge=1,delta=2
    45                           	psect	text25,local,class=CODE,merge=1,delta=2
    46                           	psect	text26,local,class=CODE,merge=1,delta=2
    47                           	psect	text27,local,class=CODE,merge=1,delta=2
    48                           	psect	text28,local,class=CODE,merge=1,delta=2
    49                           	psect	intentry,global,class=CODE,delta=2
    50                           	psect	text30,local,class=CODE,merge=1,delta=2
    51                           	psect	text31,local,class=CODE,merge=1,delta=2
    52                           	psect	text32,local,class=CODE,merge=1,delta=2
    53                           	psect	text33,local,class=CODE,merge=1,delta=2,group=1
    54                           	psect	text34,local,class=CODE,merge=1,delta=2
    55                           	psect	text35,local,class=CODE,merge=1,delta=2
    56                           	psect	text36,local,class=CODE,merge=1,delta=2
    57                           	psect	text37,local,class=CODE,merge=1,delta=2
    58                           	psect	text38,local,class=CODE,merge=1,delta=2,group=1
    59                           	psect	text39,local,class=CODE,merge=1,delta=2,group=1
    60                           	psect	text40,local,class=CODE,merge=1,delta=2,group=1
    61                           	psect	text41,local,class=CODE,merge=1,delta=2,group=1
    62                           	psect	text42,local,class=CODE,merge=1,delta=2,group=1
    63                           	psect	text43,local,class=CODE,merge=1,delta=2,group=1
    64                           	dabs	1,0x7E,2
    65  0000                     
    66                           ; Version 2.05
    67                           ; Generated 20/12/2018 GMT
    68                           ; 
    69                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    70                           ; All rights reserved.
    71                           ; 
    72                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    73                           ; 
    74                           ; Redistribution and use in source and binary forms, with or without modification, are
    75                           ; permitted provided that the following conditions are met:
    76                           ; 
    77                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    78                           ;        conditions and the following disclaimer.
    79                           ; 
    80                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    81                           ;        of conditions and the following disclaimer in the documentation and/or other
    82                           ;        materials provided with the distribution.
    83                           ; 
    84                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    85                           ;        software without specific prior written permission.
    86                           ; 
    87                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    88                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    89                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    90                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    91                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    92                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    93                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    94                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    95                           ; 
    96                           ; 
    97                           ; Code-generator required, PIC16F1619 Definitions
    98                           ; 
    99                           ; SFR Addresses
   100  0000                     	;# 
   101  0001                     	;# 
   102  0002                     	;# 
   103  0003                     	;# 
   104  0004                     	;# 
   105  0005                     	;# 
   106  0006                     	;# 
   107  0007                     	;# 
   108  0008                     	;# 
   109  0009                     	;# 
   110  000A                     	;# 
   111  000B                     	;# 
   112  000C                     	;# 
   113  000D                     	;# 
   114  000E                     	;# 
   115  0010                     	;# 
   116  0011                     	;# 
   117  0012                     	;# 
   118  0013                     	;# 
   119  0014                     	;# 
   120  0015                     	;# 
   121  0016                     	;# 
   122  0016                     	;# 
   123  0017                     	;# 
   124  0018                     	;# 
   125  0019                     	;# 
   126  001A                     	;# 
   127  001A                     	;# 
   128  001B                     	;# 
   129  001B                     	;# 
   130  001C                     	;# 
   131  001D                     	;# 
   132  001E                     	;# 
   133  001F                     	;# 
   134  008C                     	;# 
   135  008D                     	;# 
   136  008E                     	;# 
   137  0090                     	;# 
   138  0091                     	;# 
   139  0092                     	;# 
   140  0093                     	;# 
   141  0094                     	;# 
   142  0095                     	;# 
   143  0096                     	;# 
   144  0098                     	;# 
   145  0099                     	;# 
   146  009A                     	;# 
   147  009B                     	;# 
   148  009B                     	;# 
   149  009C                     	;# 
   150  009D                     	;# 
   151  009E                     	;# 
   152  009F                     	;# 
   153  010C                     	;# 
   154  010D                     	;# 
   155  010E                     	;# 
   156  0111                     	;# 
   157  0112                     	;# 
   158  0113                     	;# 
   159  0114                     	;# 
   160  0115                     	;# 
   161  0116                     	;# 
   162  0117                     	;# 
   163  0118                     	;# 
   164  0119                     	;# 
   165  011C                     	;# 
   166  018C                     	;# 
   167  018D                     	;# 
   168  018E                     	;# 
   169  0191                     	;# 
   170  0191                     	;# 
   171  0192                     	;# 
   172  0193                     	;# 
   173  0193                     	;# 
   174  0194                     	;# 
   175  0195                     	;# 
   176  0196                     	;# 
   177  0197                     	;# 
   178  0199                     	;# 
   179  0199                     	;# 
   180  0199                     	;# 
   181  019A                     	;# 
   182  019A                     	;# 
   183  019A                     	;# 
   184  019B                     	;# 
   185  019B                     	;# 
   186  019B                     	;# 
   187  019B                     	;# 
   188  019B                     	;# 
   189  019C                     	;# 
   190  019C                     	;# 
   191  019C                     	;# 
   192  019D                     	;# 
   193  019D                     	;# 
   194  019D                     	;# 
   195  019E                     	;# 
   196  019E                     	;# 
   197  019E                     	;# 
   198  019F                     	;# 
   199  019F                     	;# 
   200  019F                     	;# 
   201  019F                     	;# 
   202  019F                     	;# 
   203  020C                     	;# 
   204  020D                     	;# 
   205  020E                     	;# 
   206  0211                     	;# 
   207  0211                     	;# 
   208  0212                     	;# 
   209  0212                     	;# 
   210  0213                     	;# 
   211  0213                     	;# 
   212  0214                     	;# 
   213  0214                     	;# 
   214  0215                     	;# 
   215  0215                     	;# 
   216  0215                     	;# 
   217  0215                     	;# 
   218  0216                     	;# 
   219  0216                     	;# 
   220  0217                     	;# 
   221  0217                     	;# 
   222  028C                     	;# 
   223  028D                     	;# 
   224  028E                     	;# 
   225  0291                     	;# 
   226  0291                     	;# 
   227  0292                     	;# 
   228  0293                     	;# 
   229  0294                     	;# 
   230  0298                     	;# 
   231  0298                     	;# 
   232  0299                     	;# 
   233  029A                     	;# 
   234  029B                     	;# 
   235  029E                     	;# 
   236  030C                     	;# 
   237  030D                     	;# 
   238  030E                     	;# 
   239  038C                     	;# 
   240  038D                     	;# 
   241  038E                     	;# 
   242  0391                     	;# 
   243  0392                     	;# 
   244  0393                     	;# 
   245  0394                     	;# 
   246  0395                     	;# 
   247  0396                     	;# 
   248  0397                     	;# 
   249  0398                     	;# 
   250  0399                     	;# 
   251  040E                     	;# 
   252  0413                     	;# 
   253  0413                     	;# 
   254  0414                     	;# 
   255  0414                     	;# 
   256  0415                     	;# 
   257  0416                     	;# 
   258  0417                     	;# 
   259  0418                     	;# 
   260  041A                     	;# 
   261  041A                     	;# 
   262  041B                     	;# 
   263  041B                     	;# 
   264  041C                     	;# 
   265  041D                     	;# 
   266  041E                     	;# 
   267  041F                     	;# 
   268  0493                     	;# 
   269  0494                     	;# 
   270  0495                     	;# 
   271  0496                     	;# 
   272  049A                     	;# 
   273  049B                     	;# 
   274  049C                     	;# 
   275  049D                     	;# 
   276  058C                     	;# 
   277  058C                     	;# 
   278  058D                     	;# 
   279  058E                     	;# 
   280  058E                     	;# 
   281  058F                     	;# 
   282  0590                     	;# 
   283  0590                     	;# 
   284  0591                     	;# 
   285  0592                     	;# 
   286  0592                     	;# 
   287  0593                     	;# 
   288  0594                     	;# 
   289  0594                     	;# 
   290  0595                     	;# 
   291  0596                     	;# 
   292  0596                     	;# 
   293  0597                     	;# 
   294  0598                     	;# 
   295  0599                     	;# 
   296  059A                     	;# 
   297  059B                     	;# 
   298  059B                     	;# 
   299  059C                     	;# 
   300  059D                     	;# 
   301  060C                     	;# 
   302  060C                     	;# 
   303  060D                     	;# 
   304  060E                     	;# 
   305  060F                     	;# 
   306  060F                     	;# 
   307  0610                     	;# 
   308  0611                     	;# 
   309  0612                     	;# 
   310  0613                     	;# 
   311  0614                     	;# 
   312  0617                     	;# 
   313  0617                     	;# 
   314  0618                     	;# 
   315  0619                     	;# 
   316  061A                     	;# 
   317  061A                     	;# 
   318  061B                     	;# 
   319  061C                     	;# 
   320  0691                     	;# 
   321  0692                     	;# 
   322  0693                     	;# 
   323  0694                     	;# 
   324  0695                     	;# 
   325  0696                     	;# 
   326  0697                     	;# 
   327  0699                     	;# 
   328  069A                     	;# 
   329  0711                     	;# 
   330  0712                     	;# 
   331  0713                     	;# 
   332  0714                     	;# 
   333  0715                     	;# 
   334  0718                     	;# 
   335  0718                     	;# 
   336  0719                     	;# 
   337  071A                     	;# 
   338  071A                     	;# 
   339  071B                     	;# 
   340  071C                     	;# 
   341  071D                     	;# 
   342  0791                     	;# 
   343  0791                     	;# 
   344  0792                     	;# 
   345  0793                     	;# 
   346  0793                     	;# 
   347  0794                     	;# 
   348  0795                     	;# 
   349  0795                     	;# 
   350  0796                     	;# 
   351  0797                     	;# 
   352  0797                     	;# 
   353  0798                     	;# 
   354  0799                     	;# 
   355  079A                     	;# 
   356  080C                     	;# 
   357  080C                     	;# 
   358  080D                     	;# 
   359  080E                     	;# 
   360  080E                     	;# 
   361  080F                     	;# 
   362  0810                     	;# 
   363  0810                     	;# 
   364  0811                     	;# 
   365  0812                     	;# 
   366  0812                     	;# 
   367  0813                     	;# 
   368  0814                     	;# 
   369  0815                     	;# 
   370  0816                     	;# 
   371  0817                     	;# 
   372  0818                     	;# 
   373  0819                     	;# 
   374  081A                     	;# 
   375  081A                     	;# 
   376  081B                     	;# 
   377  081C                     	;# 
   378  081C                     	;# 
   379  081D                     	;# 
   380  088C                     	;# 
   381  088D                     	;# 
   382  088E                     	;# 
   383  088F                     	;# 
   384  088F                     	;# 
   385  0890                     	;# 
   386  0891                     	;# 
   387  0892                     	;# 
   388  0893                     	;# 
   389  0893                     	;# 
   390  0894                     	;# 
   391  0895                     	;# 
   392  0896                     	;# 
   393  0897                     	;# 
   394  0897                     	;# 
   395  0898                     	;# 
   396  0899                     	;# 
   397  0D8C                     	;# 
   398  0D8C                     	;# 
   399  0D8D                     	;# 
   400  0D8E                     	;# 
   401  0D8F                     	;# 
   402  0D8F                     	;# 
   403  0D90                     	;# 
   404  0D91                     	;# 
   405  0D92                     	;# 
   406  0D92                     	;# 
   407  0D93                     	;# 
   408  0D94                     	;# 
   409  0D95                     	;# 
   410  0D95                     	;# 
   411  0D96                     	;# 
   412  0D97                     	;# 
   413  0D98                     	;# 
   414  0D99                     	;# 
   415  0D9A                     	;# 
   416  0D9B                     	;# 
   417  0D9C                     	;# 
   418  0D9D                     	;# 
   419  0D9E                     	;# 
   420  0D9E                     	;# 
   421  0D9F                     	;# 
   422  0DA0                     	;# 
   423  0DA1                     	;# 
   424  0DA1                     	;# 
   425  0DA2                     	;# 
   426  0DA3                     	;# 
   427  0DA4                     	;# 
   428  0DA4                     	;# 
   429  0DA5                     	;# 
   430  0DA6                     	;# 
   431  0DA7                     	;# 
   432  0DA7                     	;# 
   433  0DA8                     	;# 
   434  0DA9                     	;# 
   435  0DAA                     	;# 
   436  0DAB                     	;# 
   437  0DAC                     	;# 
   438  0DAD                     	;# 
   439  0DAE                     	;# 
   440  0DAF                     	;# 
   441  0E0F                     	;# 
   442  0E10                     	;# 
   443  0E11                     	;# 
   444  0E12                     	;# 
   445  0E13                     	;# 
   446  0E14                     	;# 
   447  0E15                     	;# 
   448  0E16                     	;# 
   449  0E17                     	;# 
   450  0E18                     	;# 
   451  0E19                     	;# 
   452  0E1A                     	;# 
   453  0E1B                     	;# 
   454  0E1C                     	;# 
   455  0E1D                     	;# 
   456  0E1E                     	;# 
   457  0E1F                     	;# 
   458  0E20                     	;# 
   459  0E21                     	;# 
   460  0E22                     	;# 
   461  0E23                     	;# 
   462  0E24                     	;# 
   463  0E25                     	;# 
   464  0E26                     	;# 
   465  0E27                     	;# 
   466  0E28                     	;# 
   467  0E29                     	;# 
   468  0E2A                     	;# 
   469  0E2B                     	;# 
   470  0E2C                     	;# 
   471  0E2D                     	;# 
   472  0E2E                     	;# 
   473  0E90                     	;# 
   474  0E91                     	;# 
   475  0E92                     	;# 
   476  0E94                     	;# 
   477  0E95                     	;# 
   478  0E9C                     	;# 
   479  0E9D                     	;# 
   480  0E9E                     	;# 
   481  0E9F                     	;# 
   482  0EA0                     	;# 
   483  0EA1                     	;# 
   484  0EA2                     	;# 
   485  0EA3                     	;# 
   486  0EA4                     	;# 
   487  0EA5                     	;# 
   488  0EA6                     	;# 
   489  0EA7                     	;# 
   490  0F0F                     	;# 
   491  0F10                     	;# 
   492  0F11                     	;# 
   493  0F12                     	;# 
   494  0F13                     	;# 
   495  0F14                     	;# 
   496  0F15                     	;# 
   497  0F16                     	;# 
   498  0F17                     	;# 
   499  0F18                     	;# 
   500  0F19                     	;# 
   501  0F1A                     	;# 
   502  0F1B                     	;# 
   503  0F1C                     	;# 
   504  0F1D                     	;# 
   505  0F1E                     	;# 
   506  0F1F                     	;# 
   507  0F20                     	;# 
   508  0F21                     	;# 
   509  0F22                     	;# 
   510  0F23                     	;# 
   511  0F24                     	;# 
   512  0F25                     	;# 
   513  0F26                     	;# 
   514  0F27                     	;# 
   515  0F28                     	;# 
   516  0F29                     	;# 
   517  0F2A                     	;# 
   518  0F2B                     	;# 
   519  0F2C                     	;# 
   520  0F2D                     	;# 
   521  0F2E                     	;# 
   522  0F2F                     	;# 
   523  0F30                     	;# 
   524  0F31                     	;# 
   525  0F32                     	;# 
   526  0F33                     	;# 
   527  0F34                     	;# 
   528  0F35                     	;# 
   529  0F36                     	;# 
   530  0F37                     	;# 
   531  0FE4                     	;# 
   532  0FE5                     	;# 
   533  0FE6                     	;# 
   534  0FE7                     	;# 
   535  0FE8                     	;# 
   536  0FE9                     	;# 
   537  0FEA                     	;# 
   538  0FEB                     	;# 
   539  0FED                     	;# 
   540  0FEE                     	;# 
   541  0FEF                     	;# 
   542  0000                     	;# 
   543  0001                     	;# 
   544  0002                     	;# 
   545  0003                     	;# 
   546  0004                     	;# 
   547  0005                     	;# 
   548  0006                     	;# 
   549  0007                     	;# 
   550  0008                     	;# 
   551  0009                     	;# 
   552  000A                     	;# 
   553  000B                     	;# 
   554  000C                     	;# 
   555  000D                     	;# 
   556  000E                     	;# 
   557  0010                     	;# 
   558  0011                     	;# 
   559  0012                     	;# 
   560  0013                     	;# 
   561  0014                     	;# 
   562  0015                     	;# 
   563  0016                     	;# 
   564  0016                     	;# 
   565  0017                     	;# 
   566  0018                     	;# 
   567  0019                     	;# 
   568  001A                     	;# 
   569  001A                     	;# 
   570  001B                     	;# 
   571  001B                     	;# 
   572  001C                     	;# 
   573  001D                     	;# 
   574  001E                     	;# 
   575  001F                     	;# 
   576  008C                     	;# 
   577  008D                     	;# 
   578  008E                     	;# 
   579  0090                     	;# 
   580  0091                     	;# 
   581  0092                     	;# 
   582  0093                     	;# 
   583  0094                     	;# 
   584  0095                     	;# 
   585  0096                     	;# 
   586  0098                     	;# 
   587  0099                     	;# 
   588  009A                     	;# 
   589  009B                     	;# 
   590  009B                     	;# 
   591  009C                     	;# 
   592  009D                     	;# 
   593  009E                     	;# 
   594  009F                     	;# 
   595  010C                     	;# 
   596  010D                     	;# 
   597  010E                     	;# 
   598  0111                     	;# 
   599  0112                     	;# 
   600  0113                     	;# 
   601  0114                     	;# 
   602  0115                     	;# 
   603  0116                     	;# 
   604  0117                     	;# 
   605  0118                     	;# 
   606  0119                     	;# 
   607  011C                     	;# 
   608  018C                     	;# 
   609  018D                     	;# 
   610  018E                     	;# 
   611  0191                     	;# 
   612  0191                     	;# 
   613  0192                     	;# 
   614  0193                     	;# 
   615  0193                     	;# 
   616  0194                     	;# 
   617  0195                     	;# 
   618  0196                     	;# 
   619  0197                     	;# 
   620  0199                     	;# 
   621  0199                     	;# 
   622  0199                     	;# 
   623  019A                     	;# 
   624  019A                     	;# 
   625  019A                     	;# 
   626  019B                     	;# 
   627  019B                     	;# 
   628  019B                     	;# 
   629  019B                     	;# 
   630  019B                     	;# 
   631  019C                     	;# 
   632  019C                     	;# 
   633  019C                     	;# 
   634  019D                     	;# 
   635  019D                     	;# 
   636  019D                     	;# 
   637  019E                     	;# 
   638  019E                     	;# 
   639  019E                     	;# 
   640  019F                     	;# 
   641  019F                     	;# 
   642  019F                     	;# 
   643  019F                     	;# 
   644  019F                     	;# 
   645  020C                     	;# 
   646  020D                     	;# 
   647  020E                     	;# 
   648  0211                     	;# 
   649  0211                     	;# 
   650  0212                     	;# 
   651  0212                     	;# 
   652  0213                     	;# 
   653  0213                     	;# 
   654  0214                     	;# 
   655  0214                     	;# 
   656  0215                     	;# 
   657  0215                     	;# 
   658  0215                     	;# 
   659  0215                     	;# 
   660  0216                     	;# 
   661  0216                     	;# 
   662  0217                     	;# 
   663  0217                     	;# 
   664  028C                     	;# 
   665  028D                     	;# 
   666  028E                     	;# 
   667  0291                     	;# 
   668  0291                     	;# 
   669  0292                     	;# 
   670  0293                     	;# 
   671  0294                     	;# 
   672  0298                     	;# 
   673  0298                     	;# 
   674  0299                     	;# 
   675  029A                     	;# 
   676  029B                     	;# 
   677  029E                     	;# 
   678  030C                     	;# 
   679  030D                     	;# 
   680  030E                     	;# 
   681  038C                     	;# 
   682  038D                     	;# 
   683  038E                     	;# 
   684  0391                     	;# 
   685  0392                     	;# 
   686  0393                     	;# 
   687  0394                     	;# 
   688  0395                     	;# 
   689  0396                     	;# 
   690  0397                     	;# 
   691  0398                     	;# 
   692  0399                     	;# 
   693  040E                     	;# 
   694  0413                     	;# 
   695  0413                     	;# 
   696  0414                     	;# 
   697  0414                     	;# 
   698  0415                     	;# 
   699  0416                     	;# 
   700  0417                     	;# 
   701  0418                     	;# 
   702  041A                     	;# 
   703  041A                     	;# 
   704  041B                     	;# 
   705  041B                     	;# 
   706  041C                     	;# 
   707  041D                     	;# 
   708  041E                     	;# 
   709  041F                     	;# 
   710  0493                     	;# 
   711  0494                     	;# 
   712  0495                     	;# 
   713  0496                     	;# 
   714  049A                     	;# 
   715  049B                     	;# 
   716  049C                     	;# 
   717  049D                     	;# 
   718  058C                     	;# 
   719  058C                     	;# 
   720  058D                     	;# 
   721  058E                     	;# 
   722  058E                     	;# 
   723  058F                     	;# 
   724  0590                     	;# 
   725  0590                     	;# 
   726  0591                     	;# 
   727  0592                     	;# 
   728  0592                     	;# 
   729  0593                     	;# 
   730  0594                     	;# 
   731  0594                     	;# 
   732  0595                     	;# 
   733  0596                     	;# 
   734  0596                     	;# 
   735  0597                     	;# 
   736  0598                     	;# 
   737  0599                     	;# 
   738  059A                     	;# 
   739  059B                     	;# 
   740  059B                     	;# 
   741  059C                     	;# 
   742  059D                     	;# 
   743  060C                     	;# 
   744  060C                     	;# 
   745  060D                     	;# 
   746  060E                     	;# 
   747  060F                     	;# 
   748  060F                     	;# 
   749  0610                     	;# 
   750  0611                     	;# 
   751  0612                     	;# 
   752  0613                     	;# 
   753  0614                     	;# 
   754  0617                     	;# 
   755  0617                     	;# 
   756  0618                     	;# 
   757  0619                     	;# 
   758  061A                     	;# 
   759  061A                     	;# 
   760  061B                     	;# 
   761  061C                     	;# 
   762  0691                     	;# 
   763  0692                     	;# 
   764  0693                     	;# 
   765  0694                     	;# 
   766  0695                     	;# 
   767  0696                     	;# 
   768  0697                     	;# 
   769  0699                     	;# 
   770  069A                     	;# 
   771  0711                     	;# 
   772  0712                     	;# 
   773  0713                     	;# 
   774  0714                     	;# 
   775  0715                     	;# 
   776  0718                     	;# 
   777  0718                     	;# 
   778  0719                     	;# 
   779  071A                     	;# 
   780  071A                     	;# 
   781  071B                     	;# 
   782  071C                     	;# 
   783  071D                     	;# 
   784  0791                     	;# 
   785  0791                     	;# 
   786  0792                     	;# 
   787  0793                     	;# 
   788  0793                     	;# 
   789  0794                     	;# 
   790  0795                     	;# 
   791  0795                     	;# 
   792  0796                     	;# 
   793  0797                     	;# 
   794  0797                     	;# 
   795  0798                     	;# 
   796  0799                     	;# 
   797  079A                     	;# 
   798  080C                     	;# 
   799  080C                     	;# 
   800  080D                     	;# 
   801  080E                     	;# 
   802  080E                     	;# 
   803  080F                     	;# 
   804  0810                     	;# 
   805  0810                     	;# 
   806  0811                     	;# 
   807  0812                     	;# 
   808  0812                     	;# 
   809  0813                     	;# 
   810  0814                     	;# 
   811  0815                     	;# 
   812  0816                     	;# 
   813  0817                     	;# 
   814  0818                     	;# 
   815  0819                     	;# 
   816  081A                     	;# 
   817  081A                     	;# 
   818  081B                     	;# 
   819  081C                     	;# 
   820  081C                     	;# 
   821  081D                     	;# 
   822  088C                     	;# 
   823  088D                     	;# 
   824  088E                     	;# 
   825  088F                     	;# 
   826  088F                     	;# 
   827  0890                     	;# 
   828  0891                     	;# 
   829  0892                     	;# 
   830  0893                     	;# 
   831  0893                     	;# 
   832  0894                     	;# 
   833  0895                     	;# 
   834  0896                     	;# 
   835  0897                     	;# 
   836  0897                     	;# 
   837  0898                     	;# 
   838  0899                     	;# 
   839  0D8C                     	;# 
   840  0D8C                     	;# 
   841  0D8D                     	;# 
   842  0D8E                     	;# 
   843  0D8F                     	;# 
   844  0D8F                     	;# 
   845  0D90                     	;# 
   846  0D91                     	;# 
   847  0D92                     	;# 
   848  0D92                     	;# 
   849  0D93                     	;# 
   850  0D94                     	;# 
   851  0D95                     	;# 
   852  0D95                     	;# 
   853  0D96                     	;# 
   854  0D97                     	;# 
   855  0D98                     	;# 
   856  0D99                     	;# 
   857  0D9A                     	;# 
   858  0D9B                     	;# 
   859  0D9C                     	;# 
   860  0D9D                     	;# 
   861  0D9E                     	;# 
   862  0D9E                     	;# 
   863  0D9F                     	;# 
   864  0DA0                     	;# 
   865  0DA1                     	;# 
   866  0DA1                     	;# 
   867  0DA2                     	;# 
   868  0DA3                     	;# 
   869  0DA4                     	;# 
   870  0DA4                     	;# 
   871  0DA5                     	;# 
   872  0DA6                     	;# 
   873  0DA7                     	;# 
   874  0DA7                     	;# 
   875  0DA8                     	;# 
   876  0DA9                     	;# 
   877  0DAA                     	;# 
   878  0DAB                     	;# 
   879  0DAC                     	;# 
   880  0DAD                     	;# 
   881  0DAE                     	;# 
   882  0DAF                     	;# 
   883  0E0F                     	;# 
   884  0E10                     	;# 
   885  0E11                     	;# 
   886  0E12                     	;# 
   887  0E13                     	;# 
   888  0E14                     	;# 
   889  0E15                     	;# 
   890  0E16                     	;# 
   891  0E17                     	;# 
   892  0E18                     	;# 
   893  0E19                     	;# 
   894  0E1A                     	;# 
   895  0E1B                     	;# 
   896  0E1C                     	;# 
   897  0E1D                     	;# 
   898  0E1E                     	;# 
   899  0E1F                     	;# 
   900  0E20                     	;# 
   901  0E21                     	;# 
   902  0E22                     	;# 
   903  0E23                     	;# 
   904  0E24                     	;# 
   905  0E25                     	;# 
   906  0E26                     	;# 
   907  0E27                     	;# 
   908  0E28                     	;# 
   909  0E29                     	;# 
   910  0E2A                     	;# 
   911  0E2B                     	;# 
   912  0E2C                     	;# 
   913  0E2D                     	;# 
   914  0E2E                     	;# 
   915  0E90                     	;# 
   916  0E91                     	;# 
   917  0E92                     	;# 
   918  0E94                     	;# 
   919  0E95                     	;# 
   920  0E9C                     	;# 
   921  0E9D                     	;# 
   922  0E9E                     	;# 
   923  0E9F                     	;# 
   924  0EA0                     	;# 
   925  0EA1                     	;# 
   926  0EA2                     	;# 
   927  0EA3                     	;# 
   928  0EA4                     	;# 
   929  0EA5                     	;# 
   930  0EA6                     	;# 
   931  0EA7                     	;# 
   932  0F0F                     	;# 
   933  0F10                     	;# 
   934  0F11                     	;# 
   935  0F12                     	;# 
   936  0F13                     	;# 
   937  0F14                     	;# 
   938  0F15                     	;# 
   939  0F16                     	;# 
   940  0F17                     	;# 
   941  0F18                     	;# 
   942  0F19                     	;# 
   943  0F1A                     	;# 
   944  0F1B                     	;# 
   945  0F1C                     	;# 
   946  0F1D                     	;# 
   947  0F1E                     	;# 
   948  0F1F                     	;# 
   949  0F20                     	;# 
   950  0F21                     	;# 
   951  0F22                     	;# 
   952  0F23                     	;# 
   953  0F24                     	;# 
   954  0F25                     	;# 
   955  0F26                     	;# 
   956  0F27                     	;# 
   957  0F28                     	;# 
   958  0F29                     	;# 
   959  0F2A                     	;# 
   960  0F2B                     	;# 
   961  0F2C                     	;# 
   962  0F2D                     	;# 
   963  0F2E                     	;# 
   964  0F2F                     	;# 
   965  0F30                     	;# 
   966  0F31                     	;# 
   967  0F32                     	;# 
   968  0F33                     	;# 
   969  0F34                     	;# 
   970  0F35                     	;# 
   971  0F36                     	;# 
   972  0F37                     	;# 
   973  0FE4                     	;# 
   974  0FE5                     	;# 
   975  0FE6                     	;# 
   976  0FE7                     	;# 
   977  0FE8                     	;# 
   978  0FE9                     	;# 
   979  0FEA                     	;# 
   980  0FEB                     	;# 
   981  0FED                     	;# 
   982  0FEE                     	;# 
   983  0FEF                     	;# 
   984  0000                     	;# 
   985  0001                     	;# 
   986  0002                     	;# 
   987  0003                     	;# 
   988  0004                     	;# 
   989  0005                     	;# 
   990  0006                     	;# 
   991  0007                     	;# 
   992  0008                     	;# 
   993  0009                     	;# 
   994  000A                     	;# 
   995  000B                     	;# 
   996  000C                     	;# 
   997  000D                     	;# 
   998  000E                     	;# 
   999  0010                     	;# 
  1000  0011                     	;# 
  1001  0012                     	;# 
  1002  0013                     	;# 
  1003  0014                     	;# 
  1004  0015                     	;# 
  1005  0016                     	;# 
  1006  0016                     	;# 
  1007  0017                     	;# 
  1008  0018                     	;# 
  1009  0019                     	;# 
  1010  001A                     	;# 
  1011  001A                     	;# 
  1012  001B                     	;# 
  1013  001B                     	;# 
  1014  001C                     	;# 
  1015  001D                     	;# 
  1016  001E                     	;# 
  1017  001F                     	;# 
  1018  008C                     	;# 
  1019  008D                     	;# 
  1020  008E                     	;# 
  1021  0090                     	;# 
  1022  0091                     	;# 
  1023  0092                     	;# 
  1024  0093                     	;# 
  1025  0094                     	;# 
  1026  0095                     	;# 
  1027  0096                     	;# 
  1028  0098                     	;# 
  1029  0099                     	;# 
  1030  009A                     	;# 
  1031  009B                     	;# 
  1032  009B                     	;# 
  1033  009C                     	;# 
  1034  009D                     	;# 
  1035  009E                     	;# 
  1036  009F                     	;# 
  1037  010C                     	;# 
  1038  010D                     	;# 
  1039  010E                     	;# 
  1040  0111                     	;# 
  1041  0112                     	;# 
  1042  0113                     	;# 
  1043  0114                     	;# 
  1044  0115                     	;# 
  1045  0116                     	;# 
  1046  0117                     	;# 
  1047  0118                     	;# 
  1048  0119                     	;# 
  1049  011C                     	;# 
  1050  018C                     	;# 
  1051  018D                     	;# 
  1052  018E                     	;# 
  1053  0191                     	;# 
  1054  0191                     	;# 
  1055  0192                     	;# 
  1056  0193                     	;# 
  1057  0193                     	;# 
  1058  0194                     	;# 
  1059  0195                     	;# 
  1060  0196                     	;# 
  1061  0197                     	;# 
  1062  0199                     	;# 
  1063  0199                     	;# 
  1064  0199                     	;# 
  1065  019A                     	;# 
  1066  019A                     	;# 
  1067  019A                     	;# 
  1068  019B                     	;# 
  1069  019B                     	;# 
  1070  019B                     	;# 
  1071  019B                     	;# 
  1072  019B                     	;# 
  1073  019C                     	;# 
  1074  019C                     	;# 
  1075  019C                     	;# 
  1076  019D                     	;# 
  1077  019D                     	;# 
  1078  019D                     	;# 
  1079  019E                     	;# 
  1080  019E                     	;# 
  1081  019E                     	;# 
  1082  019F                     	;# 
  1083  019F                     	;# 
  1084  019F                     	;# 
  1085  019F                     	;# 
  1086  019F                     	;# 
  1087  020C                     	;# 
  1088  020D                     	;# 
  1089  020E                     	;# 
  1090  0211                     	;# 
  1091  0211                     	;# 
  1092  0212                     	;# 
  1093  0212                     	;# 
  1094  0213                     	;# 
  1095  0213                     	;# 
  1096  0214                     	;# 
  1097  0214                     	;# 
  1098  0215                     	;# 
  1099  0215                     	;# 
  1100  0215                     	;# 
  1101  0215                     	;# 
  1102  0216                     	;# 
  1103  0216                     	;# 
  1104  0217                     	;# 
  1105  0217                     	;# 
  1106  028C                     	;# 
  1107  028D                     	;# 
  1108  028E                     	;# 
  1109  0291                     	;# 
  1110  0291                     	;# 
  1111  0292                     	;# 
  1112  0293                     	;# 
  1113  0294                     	;# 
  1114  0298                     	;# 
  1115  0298                     	;# 
  1116  0299                     	;# 
  1117  029A                     	;# 
  1118  029B                     	;# 
  1119  029E                     	;# 
  1120  030C                     	;# 
  1121  030D                     	;# 
  1122  030E                     	;# 
  1123  038C                     	;# 
  1124  038D                     	;# 
  1125  038E                     	;# 
  1126  0391                     	;# 
  1127  0392                     	;# 
  1128  0393                     	;# 
  1129  0394                     	;# 
  1130  0395                     	;# 
  1131  0396                     	;# 
  1132  0397                     	;# 
  1133  0398                     	;# 
  1134  0399                     	;# 
  1135  040E                     	;# 
  1136  0413                     	;# 
  1137  0413                     	;# 
  1138  0414                     	;# 
  1139  0414                     	;# 
  1140  0415                     	;# 
  1141  0416                     	;# 
  1142  0417                     	;# 
  1143  0418                     	;# 
  1144  041A                     	;# 
  1145  041A                     	;# 
  1146  041B                     	;# 
  1147  041B                     	;# 
  1148  041C                     	;# 
  1149  041D                     	;# 
  1150  041E                     	;# 
  1151  041F                     	;# 
  1152  0493                     	;# 
  1153  0494                     	;# 
  1154  0495                     	;# 
  1155  0496                     	;# 
  1156  049A                     	;# 
  1157  049B                     	;# 
  1158  049C                     	;# 
  1159  049D                     	;# 
  1160  058C                     	;# 
  1161  058C                     	;# 
  1162  058D                     	;# 
  1163  058E                     	;# 
  1164  058E                     	;# 
  1165  058F                     	;# 
  1166  0590                     	;# 
  1167  0590                     	;# 
  1168  0591                     	;# 
  1169  0592                     	;# 
  1170  0592                     	;# 
  1171  0593                     	;# 
  1172  0594                     	;# 
  1173  0594                     	;# 
  1174  0595                     	;# 
  1175  0596                     	;# 
  1176  0596                     	;# 
  1177  0597                     	;# 
  1178  0598                     	;# 
  1179  0599                     	;# 
  1180  059A                     	;# 
  1181  059B                     	;# 
  1182  059B                     	;# 
  1183  059C                     	;# 
  1184  059D                     	;# 
  1185  060C                     	;# 
  1186  060C                     	;# 
  1187  060D                     	;# 
  1188  060E                     	;# 
  1189  060F                     	;# 
  1190  060F                     	;# 
  1191  0610                     	;# 
  1192  0611                     	;# 
  1193  0612                     	;# 
  1194  0613                     	;# 
  1195  0614                     	;# 
  1196  0617                     	;# 
  1197  0617                     	;# 
  1198  0618                     	;# 
  1199  0619                     	;# 
  1200  061A                     	;# 
  1201  061A                     	;# 
  1202  061B                     	;# 
  1203  061C                     	;# 
  1204  0691                     	;# 
  1205  0692                     	;# 
  1206  0693                     	;# 
  1207  0694                     	;# 
  1208  0695                     	;# 
  1209  0696                     	;# 
  1210  0697                     	;# 
  1211  0699                     	;# 
  1212  069A                     	;# 
  1213  0711                     	;# 
  1214  0712                     	;# 
  1215  0713                     	;# 
  1216  0714                     	;# 
  1217  0715                     	;# 
  1218  0718                     	;# 
  1219  0718                     	;# 
  1220  0719                     	;# 
  1221  071A                     	;# 
  1222  071A                     	;# 
  1223  071B                     	;# 
  1224  071C                     	;# 
  1225  071D                     	;# 
  1226  0791                     	;# 
  1227  0791                     	;# 
  1228  0792                     	;# 
  1229  0793                     	;# 
  1230  0793                     	;# 
  1231  0794                     	;# 
  1232  0795                     	;# 
  1233  0795                     	;# 
  1234  0796                     	;# 
  1235  0797                     	;# 
  1236  0797                     	;# 
  1237  0798                     	;# 
  1238  0799                     	;# 
  1239  079A                     	;# 
  1240  080C                     	;# 
  1241  080C                     	;# 
  1242  080D                     	;# 
  1243  080E                     	;# 
  1244  080E                     	;# 
  1245  080F                     	;# 
  1246  0810                     	;# 
  1247  0810                     	;# 
  1248  0811                     	;# 
  1249  0812                     	;# 
  1250  0812                     	;# 
  1251  0813                     	;# 
  1252  0814                     	;# 
  1253  0815                     	;# 
  1254  0816                     	;# 
  1255  0817                     	;# 
  1256  0818                     	;# 
  1257  0819                     	;# 
  1258  081A                     	;# 
  1259  081A                     	;# 
  1260  081B                     	;# 
  1261  081C                     	;# 
  1262  081C                     	;# 
  1263  081D                     	;# 
  1264  088C                     	;# 
  1265  088D                     	;# 
  1266  088E                     	;# 
  1267  088F                     	;# 
  1268  088F                     	;# 
  1269  0890                     	;# 
  1270  0891                     	;# 
  1271  0892                     	;# 
  1272  0893                     	;# 
  1273  0893                     	;# 
  1274  0894                     	;# 
  1275  0895                     	;# 
  1276  0896                     	;# 
  1277  0897                     	;# 
  1278  0897                     	;# 
  1279  0898                     	;# 
  1280  0899                     	;# 
  1281  0D8C                     	;# 
  1282  0D8C                     	;# 
  1283  0D8D                     	;# 
  1284  0D8E                     	;# 
  1285  0D8F                     	;# 
  1286  0D8F                     	;# 
  1287  0D90                     	;# 
  1288  0D91                     	;# 
  1289  0D92                     	;# 
  1290  0D92                     	;# 
  1291  0D93                     	;# 
  1292  0D94                     	;# 
  1293  0D95                     	;# 
  1294  0D95                     	;# 
  1295  0D96                     	;# 
  1296  0D97                     	;# 
  1297  0D98                     	;# 
  1298  0D99                     	;# 
  1299  0D9A                     	;# 
  1300  0D9B                     	;# 
  1301  0D9C                     	;# 
  1302  0D9D                     	;# 
  1303  0D9E                     	;# 
  1304  0D9E                     	;# 
  1305  0D9F                     	;# 
  1306  0DA0                     	;# 
  1307  0DA1                     	;# 
  1308  0DA1                     	;# 
  1309  0DA2                     	;# 
  1310  0DA3                     	;# 
  1311  0DA4                     	;# 
  1312  0DA4                     	;# 
  1313  0DA5                     	;# 
  1314  0DA6                     	;# 
  1315  0DA7                     	;# 
  1316  0DA7                     	;# 
  1317  0DA8                     	;# 
  1318  0DA9                     	;# 
  1319  0DAA                     	;# 
  1320  0DAB                     	;# 
  1321  0DAC                     	;# 
  1322  0DAD                     	;# 
  1323  0DAE                     	;# 
  1324  0DAF                     	;# 
  1325  0E0F                     	;# 
  1326  0E10                     	;# 
  1327  0E11                     	;# 
  1328  0E12                     	;# 
  1329  0E13                     	;# 
  1330  0E14                     	;# 
  1331  0E15                     	;# 
  1332  0E16                     	;# 
  1333  0E17                     	;# 
  1334  0E18                     	;# 
  1335  0E19                     	;# 
  1336  0E1A                     	;# 
  1337  0E1B                     	;# 
  1338  0E1C                     	;# 
  1339  0E1D                     	;# 
  1340  0E1E                     	;# 
  1341  0E1F                     	;# 
  1342  0E20                     	;# 
  1343  0E21                     	;# 
  1344  0E22                     	;# 
  1345  0E23                     	;# 
  1346  0E24                     	;# 
  1347  0E25                     	;# 
  1348  0E26                     	;# 
  1349  0E27                     	;# 
  1350  0E28                     	;# 
  1351  0E29                     	;# 
  1352  0E2A                     	;# 
  1353  0E2B                     	;# 
  1354  0E2C                     	;# 
  1355  0E2D                     	;# 
  1356  0E2E                     	;# 
  1357  0E90                     	;# 
  1358  0E91                     	;# 
  1359  0E92                     	;# 
  1360  0E94                     	;# 
  1361  0E95                     	;# 
  1362  0E9C                     	;# 
  1363  0E9D                     	;# 
  1364  0E9E                     	;# 
  1365  0E9F                     	;# 
  1366  0EA0                     	;# 
  1367  0EA1                     	;# 
  1368  0EA2                     	;# 
  1369  0EA3                     	;# 
  1370  0EA4                     	;# 
  1371  0EA5                     	;# 
  1372  0EA6                     	;# 
  1373  0EA7                     	;# 
  1374  0F0F                     	;# 
  1375  0F10                     	;# 
  1376  0F11                     	;# 
  1377  0F12                     	;# 
  1378  0F13                     	;# 
  1379  0F14                     	;# 
  1380  0F15                     	;# 
  1381  0F16                     	;# 
  1382  0F17                     	;# 
  1383  0F18                     	;# 
  1384  0F19                     	;# 
  1385  0F1A                     	;# 
  1386  0F1B                     	;# 
  1387  0F1C                     	;# 
  1388  0F1D                     	;# 
  1389  0F1E                     	;# 
  1390  0F1F                     	;# 
  1391  0F20                     	;# 
  1392  0F21                     	;# 
  1393  0F22                     	;# 
  1394  0F23                     	;# 
  1395  0F24                     	;# 
  1396  0F25                     	;# 
  1397  0F26                     	;# 
  1398  0F27                     	;# 
  1399  0F28                     	;# 
  1400  0F29                     	;# 
  1401  0F2A                     	;# 
  1402  0F2B                     	;# 
  1403  0F2C                     	;# 
  1404  0F2D                     	;# 
  1405  0F2E                     	;# 
  1406  0F2F                     	;# 
  1407  0F30                     	;# 
  1408  0F31                     	;# 
  1409  0F32                     	;# 
  1410  0F33                     	;# 
  1411  0F34                     	;# 
  1412  0F35                     	;# 
  1413  0F36                     	;# 
  1414  0F37                     	;# 
  1415  0FE4                     	;# 
  1416  0FE5                     	;# 
  1417  0FE6                     	;# 
  1418  0FE7                     	;# 
  1419  0FE8                     	;# 
  1420  0FE9                     	;# 
  1421  0FEA                     	;# 
  1422  0FEB                     	;# 
  1423  0FED                     	;# 
  1424  0FEE                     	;# 
  1425  0FEF                     	;# 
  1426  0000                     	;# 
  1427  0001                     	;# 
  1428  0002                     	;# 
  1429  0003                     	;# 
  1430  0004                     	;# 
  1431  0005                     	;# 
  1432  0006                     	;# 
  1433  0007                     	;# 
  1434  0008                     	;# 
  1435  0009                     	;# 
  1436  000A                     	;# 
  1437  000B                     	;# 
  1438  000C                     	;# 
  1439  000D                     	;# 
  1440  000E                     	;# 
  1441  0010                     	;# 
  1442  0011                     	;# 
  1443  0012                     	;# 
  1444  0013                     	;# 
  1445  0014                     	;# 
  1446  0015                     	;# 
  1447  0016                     	;# 
  1448  0016                     	;# 
  1449  0017                     	;# 
  1450  0018                     	;# 
  1451  0019                     	;# 
  1452  001A                     	;# 
  1453  001A                     	;# 
  1454  001B                     	;# 
  1455  001B                     	;# 
  1456  001C                     	;# 
  1457  001D                     	;# 
  1458  001E                     	;# 
  1459  001F                     	;# 
  1460  008C                     	;# 
  1461  008D                     	;# 
  1462  008E                     	;# 
  1463  0090                     	;# 
  1464  0091                     	;# 
  1465  0092                     	;# 
  1466  0093                     	;# 
  1467  0094                     	;# 
  1468  0095                     	;# 
  1469  0096                     	;# 
  1470  0098                     	;# 
  1471  0099                     	;# 
  1472  009A                     	;# 
  1473  009B                     	;# 
  1474  009B                     	;# 
  1475  009C                     	;# 
  1476  009D                     	;# 
  1477  009E                     	;# 
  1478  009F                     	;# 
  1479  010C                     	;# 
  1480  010D                     	;# 
  1481  010E                     	;# 
  1482  0111                     	;# 
  1483  0112                     	;# 
  1484  0113                     	;# 
  1485  0114                     	;# 
  1486  0115                     	;# 
  1487  0116                     	;# 
  1488  0117                     	;# 
  1489  0118                     	;# 
  1490  0119                     	;# 
  1491  011C                     	;# 
  1492  018C                     	;# 
  1493  018D                     	;# 
  1494  018E                     	;# 
  1495  0191                     	;# 
  1496  0191                     	;# 
  1497  0192                     	;# 
  1498  0193                     	;# 
  1499  0193                     	;# 
  1500  0194                     	;# 
  1501  0195                     	;# 
  1502  0196                     	;# 
  1503  0197                     	;# 
  1504  0199                     	;# 
  1505  0199                     	;# 
  1506  0199                     	;# 
  1507  019A                     	;# 
  1508  019A                     	;# 
  1509  019A                     	;# 
  1510  019B                     	;# 
  1511  019B                     	;# 
  1512  019B                     	;# 
  1513  019B                     	;# 
  1514  019B                     	;# 
  1515  019C                     	;# 
  1516  019C                     	;# 
  1517  019C                     	;# 
  1518  019D                     	;# 
  1519  019D                     	;# 
  1520  019D                     	;# 
  1521  019E                     	;# 
  1522  019E                     	;# 
  1523  019E                     	;# 
  1524  019F                     	;# 
  1525  019F                     	;# 
  1526  019F                     	;# 
  1527  019F                     	;# 
  1528  019F                     	;# 
  1529  020C                     	;# 
  1530  020D                     	;# 
  1531  020E                     	;# 
  1532  0211                     	;# 
  1533  0211                     	;# 
  1534  0212                     	;# 
  1535  0212                     	;# 
  1536  0213                     	;# 
  1537  0213                     	;# 
  1538  0214                     	;# 
  1539  0214                     	;# 
  1540  0215                     	;# 
  1541  0215                     	;# 
  1542  0215                     	;# 
  1543  0215                     	;# 
  1544  0216                     	;# 
  1545  0216                     	;# 
  1546  0217                     	;# 
  1547  0217                     	;# 
  1548  028C                     	;# 
  1549  028D                     	;# 
  1550  028E                     	;# 
  1551  0291                     	;# 
  1552  0291                     	;# 
  1553  0292                     	;# 
  1554  0293                     	;# 
  1555  0294                     	;# 
  1556  0298                     	;# 
  1557  0298                     	;# 
  1558  0299                     	;# 
  1559  029A                     	;# 
  1560  029B                     	;# 
  1561  029E                     	;# 
  1562  030C                     	;# 
  1563  030D                     	;# 
  1564  030E                     	;# 
  1565  038C                     	;# 
  1566  038D                     	;# 
  1567  038E                     	;# 
  1568  0391                     	;# 
  1569  0392                     	;# 
  1570  0393                     	;# 
  1571  0394                     	;# 
  1572  0395                     	;# 
  1573  0396                     	;# 
  1574  0397                     	;# 
  1575  0398                     	;# 
  1576  0399                     	;# 
  1577  040E                     	;# 
  1578  0413                     	;# 
  1579  0413                     	;# 
  1580  0414                     	;# 
  1581  0414                     	;# 
  1582  0415                     	;# 
  1583  0416                     	;# 
  1584  0417                     	;# 
  1585  0418                     	;# 
  1586  041A                     	;# 
  1587  041A                     	;# 
  1588  041B                     	;# 
  1589  041B                     	;# 
  1590  041C                     	;# 
  1591  041D                     	;# 
  1592  041E                     	;# 
  1593  041F                     	;# 
  1594  0493                     	;# 
  1595  0494                     	;# 
  1596  0495                     	;# 
  1597  0496                     	;# 
  1598  049A                     	;# 
  1599  049B                     	;# 
  1600  049C                     	;# 
  1601  049D                     	;# 
  1602  058C                     	;# 
  1603  058C                     	;# 
  1604  058D                     	;# 
  1605  058E                     	;# 
  1606  058E                     	;# 
  1607  058F                     	;# 
  1608  0590                     	;# 
  1609  0590                     	;# 
  1610  0591                     	;# 
  1611  0592                     	;# 
  1612  0592                     	;# 
  1613  0593                     	;# 
  1614  0594                     	;# 
  1615  0594                     	;# 
  1616  0595                     	;# 
  1617  0596                     	;# 
  1618  0596                     	;# 
  1619  0597                     	;# 
  1620  0598                     	;# 
  1621  0599                     	;# 
  1622  059A                     	;# 
  1623  059B                     	;# 
  1624  059B                     	;# 
  1625  059C                     	;# 
  1626  059D                     	;# 
  1627  060C                     	;# 
  1628  060C                     	;# 
  1629  060D                     	;# 
  1630  060E                     	;# 
  1631  060F                     	;# 
  1632  060F                     	;# 
  1633  0610                     	;# 
  1634  0611                     	;# 
  1635  0612                     	;# 
  1636  0613                     	;# 
  1637  0614                     	;# 
  1638  0617                     	;# 
  1639  0617                     	;# 
  1640  0618                     	;# 
  1641  0619                     	;# 
  1642  061A                     	;# 
  1643  061A                     	;# 
  1644  061B                     	;# 
  1645  061C                     	;# 
  1646  0691                     	;# 
  1647  0692                     	;# 
  1648  0693                     	;# 
  1649  0694                     	;# 
  1650  0695                     	;# 
  1651  0696                     	;# 
  1652  0697                     	;# 
  1653  0699                     	;# 
  1654  069A                     	;# 
  1655  0711                     	;# 
  1656  0712                     	;# 
  1657  0713                     	;# 
  1658  0714                     	;# 
  1659  0715                     	;# 
  1660  0718                     	;# 
  1661  0718                     	;# 
  1662  0719                     	;# 
  1663  071A                     	;# 
  1664  071A                     	;# 
  1665  071B                     	;# 
  1666  071C                     	;# 
  1667  071D                     	;# 
  1668  0791                     	;# 
  1669  0791                     	;# 
  1670  0792                     	;# 
  1671  0793                     	;# 
  1672  0793                     	;# 
  1673  0794                     	;# 
  1674  0795                     	;# 
  1675  0795                     	;# 
  1676  0796                     	;# 
  1677  0797                     	;# 
  1678  0797                     	;# 
  1679  0798                     	;# 
  1680  0799                     	;# 
  1681  079A                     	;# 
  1682  080C                     	;# 
  1683  080C                     	;# 
  1684  080D                     	;# 
  1685  080E                     	;# 
  1686  080E                     	;# 
  1687  080F                     	;# 
  1688  0810                     	;# 
  1689  0810                     	;# 
  1690  0811                     	;# 
  1691  0812                     	;# 
  1692  0812                     	;# 
  1693  0813                     	;# 
  1694  0814                     	;# 
  1695  0815                     	;# 
  1696  0816                     	;# 
  1697  0817                     	;# 
  1698  0818                     	;# 
  1699  0819                     	;# 
  1700  081A                     	;# 
  1701  081A                     	;# 
  1702  081B                     	;# 
  1703  081C                     	;# 
  1704  081C                     	;# 
  1705  081D                     	;# 
  1706  088C                     	;# 
  1707  088D                     	;# 
  1708  088E                     	;# 
  1709  088F                     	;# 
  1710  088F                     	;# 
  1711  0890                     	;# 
  1712  0891                     	;# 
  1713  0892                     	;# 
  1714  0893                     	;# 
  1715  0893                     	;# 
  1716  0894                     	;# 
  1717  0895                     	;# 
  1718  0896                     	;# 
  1719  0897                     	;# 
  1720  0897                     	;# 
  1721  0898                     	;# 
  1722  0899                     	;# 
  1723  0D8C                     	;# 
  1724  0D8C                     	;# 
  1725  0D8D                     	;# 
  1726  0D8E                     	;# 
  1727  0D8F                     	;# 
  1728  0D8F                     	;# 
  1729  0D90                     	;# 
  1730  0D91                     	;# 
  1731  0D92                     	;# 
  1732  0D92                     	;# 
  1733  0D93                     	;# 
  1734  0D94                     	;# 
  1735  0D95                     	;# 
  1736  0D95                     	;# 
  1737  0D96                     	;# 
  1738  0D97                     	;# 
  1739  0D98                     	;# 
  1740  0D99                     	;# 
  1741  0D9A                     	;# 
  1742  0D9B                     	;# 
  1743  0D9C                     	;# 
  1744  0D9D                     	;# 
  1745  0D9E                     	;# 
  1746  0D9E                     	;# 
  1747  0D9F                     	;# 
  1748  0DA0                     	;# 
  1749  0DA1                     	;# 
  1750  0DA1                     	;# 
  1751  0DA2                     	;# 
  1752  0DA3                     	;# 
  1753  0DA4                     	;# 
  1754  0DA4                     	;# 
  1755  0DA5                     	;# 
  1756  0DA6                     	;# 
  1757  0DA7                     	;# 
  1758  0DA7                     	;# 
  1759  0DA8                     	;# 
  1760  0DA9                     	;# 
  1761  0DAA                     	;# 
  1762  0DAB                     	;# 
  1763  0DAC                     	;# 
  1764  0DAD                     	;# 
  1765  0DAE                     	;# 
  1766  0DAF                     	;# 
  1767  0E0F                     	;# 
  1768  0E10                     	;# 
  1769  0E11                     	;# 
  1770  0E12                     	;# 
  1771  0E13                     	;# 
  1772  0E14                     	;# 
  1773  0E15                     	;# 
  1774  0E16                     	;# 
  1775  0E17                     	;# 
  1776  0E18                     	;# 
  1777  0E19                     	;# 
  1778  0E1A                     	;# 
  1779  0E1B                     	;# 
  1780  0E1C                     	;# 
  1781  0E1D                     	;# 
  1782  0E1E                     	;# 
  1783  0E1F                     	;# 
  1784  0E20                     	;# 
  1785  0E21                     	;# 
  1786  0E22                     	;# 
  1787  0E23                     	;# 
  1788  0E24                     	;# 
  1789  0E25                     	;# 
  1790  0E26                     	;# 
  1791  0E27                     	;# 
  1792  0E28                     	;# 
  1793  0E29                     	;# 
  1794  0E2A                     	;# 
  1795  0E2B                     	;# 
  1796  0E2C                     	;# 
  1797  0E2D                     	;# 
  1798  0E2E                     	;# 
  1799  0E90                     	;# 
  1800  0E91                     	;# 
  1801  0E92                     	;# 
  1802  0E94                     	;# 
  1803  0E95                     	;# 
  1804  0E9C                     	;# 
  1805  0E9D                     	;# 
  1806  0E9E                     	;# 
  1807  0E9F                     	;# 
  1808  0EA0                     	;# 
  1809  0EA1                     	;# 
  1810  0EA2                     	;# 
  1811  0EA3                     	;# 
  1812  0EA4                     	;# 
  1813  0EA5                     	;# 
  1814  0EA6                     	;# 
  1815  0EA7                     	;# 
  1816  0F0F                     	;# 
  1817  0F10                     	;# 
  1818  0F11                     	;# 
  1819  0F12                     	;# 
  1820  0F13                     	;# 
  1821  0F14                     	;# 
  1822  0F15                     	;# 
  1823  0F16                     	;# 
  1824  0F17                     	;# 
  1825  0F18                     	;# 
  1826  0F19                     	;# 
  1827  0F1A                     	;# 
  1828  0F1B                     	;# 
  1829  0F1C                     	;# 
  1830  0F1D                     	;# 
  1831  0F1E                     	;# 
  1832  0F1F                     	;# 
  1833  0F20                     	;# 
  1834  0F21                     	;# 
  1835  0F22                     	;# 
  1836  0F23                     	;# 
  1837  0F24                     	;# 
  1838  0F25                     	;# 
  1839  0F26                     	;# 
  1840  0F27                     	;# 
  1841  0F28                     	;# 
  1842  0F29                     	;# 
  1843  0F2A                     	;# 
  1844  0F2B                     	;# 
  1845  0F2C                     	;# 
  1846  0F2D                     	;# 
  1847  0F2E                     	;# 
  1848  0F2F                     	;# 
  1849  0F30                     	;# 
  1850  0F31                     	;# 
  1851  0F32                     	;# 
  1852  0F33                     	;# 
  1853  0F34                     	;# 
  1854  0F35                     	;# 
  1855  0F36                     	;# 
  1856  0F37                     	;# 
  1857  0FE4                     	;# 
  1858  0FE5                     	;# 
  1859  0FE6                     	;# 
  1860  0FE7                     	;# 
  1861  0FE8                     	;# 
  1862  0FE9                     	;# 
  1863  0FEA                     	;# 
  1864  0FEB                     	;# 
  1865  0FED                     	;# 
  1866  0FEE                     	;# 
  1867  0FEF                     	;# 
  1868  0000                     	;# 
  1869  0001                     	;# 
  1870  0002                     	;# 
  1871  0003                     	;# 
  1872  0004                     	;# 
  1873  0005                     	;# 
  1874  0006                     	;# 
  1875  0007                     	;# 
  1876  0008                     	;# 
  1877  0009                     	;# 
  1878  000A                     	;# 
  1879  000B                     	;# 
  1880  000C                     	;# 
  1881  000D                     	;# 
  1882  000E                     	;# 
  1883  0010                     	;# 
  1884  0011                     	;# 
  1885  0012                     	;# 
  1886  0013                     	;# 
  1887  0014                     	;# 
  1888  0015                     	;# 
  1889  0016                     	;# 
  1890  0016                     	;# 
  1891  0017                     	;# 
  1892  0018                     	;# 
  1893  0019                     	;# 
  1894  001A                     	;# 
  1895  001A                     	;# 
  1896  001B                     	;# 
  1897  001B                     	;# 
  1898  001C                     	;# 
  1899  001D                     	;# 
  1900  001E                     	;# 
  1901  001F                     	;# 
  1902  008C                     	;# 
  1903  008D                     	;# 
  1904  008E                     	;# 
  1905  0090                     	;# 
  1906  0091                     	;# 
  1907  0092                     	;# 
  1908  0093                     	;# 
  1909  0094                     	;# 
  1910  0095                     	;# 
  1911  0096                     	;# 
  1912  0098                     	;# 
  1913  0099                     	;# 
  1914  009A                     	;# 
  1915  009B                     	;# 
  1916  009B                     	;# 
  1917  009C                     	;# 
  1918  009D                     	;# 
  1919  009E                     	;# 
  1920  009F                     	;# 
  1921  010C                     	;# 
  1922  010D                     	;# 
  1923  010E                     	;# 
  1924  0111                     	;# 
  1925  0112                     	;# 
  1926  0113                     	;# 
  1927  0114                     	;# 
  1928  0115                     	;# 
  1929  0116                     	;# 
  1930  0117                     	;# 
  1931  0118                     	;# 
  1932  0119                     	;# 
  1933  011C                     	;# 
  1934  018C                     	;# 
  1935  018D                     	;# 
  1936  018E                     	;# 
  1937  0191                     	;# 
  1938  0191                     	;# 
  1939  0192                     	;# 
  1940  0193                     	;# 
  1941  0193                     	;# 
  1942  0194                     	;# 
  1943  0195                     	;# 
  1944  0196                     	;# 
  1945  0197                     	;# 
  1946  0199                     	;# 
  1947  0199                     	;# 
  1948  0199                     	;# 
  1949  019A                     	;# 
  1950  019A                     	;# 
  1951  019A                     	;# 
  1952  019B                     	;# 
  1953  019B                     	;# 
  1954  019B                     	;# 
  1955  019B                     	;# 
  1956  019B                     	;# 
  1957  019C                     	;# 
  1958  019C                     	;# 
  1959  019C                     	;# 
  1960  019D                     	;# 
  1961  019D                     	;# 
  1962  019D                     	;# 
  1963  019E                     	;# 
  1964  019E                     	;# 
  1965  019E                     	;# 
  1966  019F                     	;# 
  1967  019F                     	;# 
  1968  019F                     	;# 
  1969  019F                     	;# 
  1970  019F                     	;# 
  1971  020C                     	;# 
  1972  020D                     	;# 
  1973  020E                     	;# 
  1974  0211                     	;# 
  1975  0211                     	;# 
  1976  0212                     	;# 
  1977  0212                     	;# 
  1978  0213                     	;# 
  1979  0213                     	;# 
  1980  0214                     	;# 
  1981  0214                     	;# 
  1982  0215                     	;# 
  1983  0215                     	;# 
  1984  0215                     	;# 
  1985  0215                     	;# 
  1986  0216                     	;# 
  1987  0216                     	;# 
  1988  0217                     	;# 
  1989  0217                     	;# 
  1990  028C                     	;# 
  1991  028D                     	;# 
  1992  028E                     	;# 
  1993  0291                     	;# 
  1994  0291                     	;# 
  1995  0292                     	;# 
  1996  0293                     	;# 
  1997  0294                     	;# 
  1998  0298                     	;# 
  1999  0298                     	;# 
  2000  0299                     	;# 
  2001  029A                     	;# 
  2002  029B                     	;# 
  2003  029E                     	;# 
  2004  030C                     	;# 
  2005  030D                     	;# 
  2006  030E                     	;# 
  2007  038C                     	;# 
  2008  038D                     	;# 
  2009  038E                     	;# 
  2010  0391                     	;# 
  2011  0392                     	;# 
  2012  0393                     	;# 
  2013  0394                     	;# 
  2014  0395                     	;# 
  2015  0396                     	;# 
  2016  0397                     	;# 
  2017  0398                     	;# 
  2018  0399                     	;# 
  2019  040E                     	;# 
  2020  0413                     	;# 
  2021  0413                     	;# 
  2022  0414                     	;# 
  2023  0414                     	;# 
  2024  0415                     	;# 
  2025  0416                     	;# 
  2026  0417                     	;# 
  2027  0418                     	;# 
  2028  041A                     	;# 
  2029  041A                     	;# 
  2030  041B                     	;# 
  2031  041B                     	;# 
  2032  041C                     	;# 
  2033  041D                     	;# 
  2034  041E                     	;# 
  2035  041F                     	;# 
  2036  0493                     	;# 
  2037  0494                     	;# 
  2038  0495                     	;# 
  2039  0496                     	;# 
  2040  049A                     	;# 
  2041  049B                     	;# 
  2042  049C                     	;# 
  2043  049D                     	;# 
  2044  058C                     	;# 
  2045  058C                     	;# 
  2046  058D                     	;# 
  2047  058E                     	;# 
  2048  058E                     	;# 
  2049  058F                     	;# 
  2050  0590                     	;# 
  2051  0590                     	;# 
  2052  0591                     	;# 
  2053  0592                     	;# 
  2054  0592                     	;# 
  2055  0593                     	;# 
  2056  0594                     	;# 
  2057  0594                     	;# 
  2058  0595                     	;# 
  2059  0596                     	;# 
  2060  0596                     	;# 
  2061  0597                     	;# 
  2062  0598                     	;# 
  2063  0599                     	;# 
  2064  059A                     	;# 
  2065  059B                     	;# 
  2066  059B                     	;# 
  2067  059C                     	;# 
  2068  059D                     	;# 
  2069  060C                     	;# 
  2070  060C                     	;# 
  2071  060D                     	;# 
  2072  060E                     	;# 
  2073  060F                     	;# 
  2074  060F                     	;# 
  2075  0610                     	;# 
  2076  0611                     	;# 
  2077  0612                     	;# 
  2078  0613                     	;# 
  2079  0614                     	;# 
  2080  0617                     	;# 
  2081  0617                     	;# 
  2082  0618                     	;# 
  2083  0619                     	;# 
  2084  061A                     	;# 
  2085  061A                     	;# 
  2086  061B                     	;# 
  2087  061C                     	;# 
  2088  0691                     	;# 
  2089  0692                     	;# 
  2090  0693                     	;# 
  2091  0694                     	;# 
  2092  0695                     	;# 
  2093  0696                     	;# 
  2094  0697                     	;# 
  2095  0699                     	;# 
  2096  069A                     	;# 
  2097  0711                     	;# 
  2098  0712                     	;# 
  2099  0713                     	;# 
  2100  0714                     	;# 
  2101  0715                     	;# 
  2102  0718                     	;# 
  2103  0718                     	;# 
  2104  0719                     	;# 
  2105  071A                     	;# 
  2106  071A                     	;# 
  2107  071B                     	;# 
  2108  071C                     	;# 
  2109  071D                     	;# 
  2110  0791                     	;# 
  2111  0791                     	;# 
  2112  0792                     	;# 
  2113  0793                     	;# 
  2114  0793                     	;# 
  2115  0794                     	;# 
  2116  0795                     	;# 
  2117  0795                     	;# 
  2118  0796                     	;# 
  2119  0797                     	;# 
  2120  0797                     	;# 
  2121  0798                     	;# 
  2122  0799                     	;# 
  2123  079A                     	;# 
  2124  080C                     	;# 
  2125  080C                     	;# 
  2126  080D                     	;# 
  2127  080E                     	;# 
  2128  080E                     	;# 
  2129  080F                     	;# 
  2130  0810                     	;# 
  2131  0810                     	;# 
  2132  0811                     	;# 
  2133  0812                     	;# 
  2134  0812                     	;# 
  2135  0813                     	;# 
  2136  0814                     	;# 
  2137  0815                     	;# 
  2138  0816                     	;# 
  2139  0817                     	;# 
  2140  0818                     	;# 
  2141  0819                     	;# 
  2142  081A                     	;# 
  2143  081A                     	;# 
  2144  081B                     	;# 
  2145  081C                     	;# 
  2146  081C                     	;# 
  2147  081D                     	;# 
  2148  088C                     	;# 
  2149  088D                     	;# 
  2150  088E                     	;# 
  2151  088F                     	;# 
  2152  088F                     	;# 
  2153  0890                     	;# 
  2154  0891                     	;# 
  2155  0892                     	;# 
  2156  0893                     	;# 
  2157  0893                     	;# 
  2158  0894                     	;# 
  2159  0895                     	;# 
  2160  0896                     	;# 
  2161  0897                     	;# 
  2162  0897                     	;# 
  2163  0898                     	;# 
  2164  0899                     	;# 
  2165  0D8C                     	;# 
  2166  0D8C                     	;# 
  2167  0D8D                     	;# 
  2168  0D8E                     	;# 
  2169  0D8F                     	;# 
  2170  0D8F                     	;# 
  2171  0D90                     	;# 
  2172  0D91                     	;# 
  2173  0D92                     	;# 
  2174  0D92                     	;# 
  2175  0D93                     	;# 
  2176  0D94                     	;# 
  2177  0D95                     	;# 
  2178  0D95                     	;# 
  2179  0D96                     	;# 
  2180  0D97                     	;# 
  2181  0D98                     	;# 
  2182  0D99                     	;# 
  2183  0D9A                     	;# 
  2184  0D9B                     	;# 
  2185  0D9C                     	;# 
  2186  0D9D                     	;# 
  2187  0D9E                     	;# 
  2188  0D9E                     	;# 
  2189  0D9F                     	;# 
  2190  0DA0                     	;# 
  2191  0DA1                     	;# 
  2192  0DA1                     	;# 
  2193  0DA2                     	;# 
  2194  0DA3                     	;# 
  2195  0DA4                     	;# 
  2196  0DA4                     	;# 
  2197  0DA5                     	;# 
  2198  0DA6                     	;# 
  2199  0DA7                     	;# 
  2200  0DA7                     	;# 
  2201  0DA8                     	;# 
  2202  0DA9                     	;# 
  2203  0DAA                     	;# 
  2204  0DAB                     	;# 
  2205  0DAC                     	;# 
  2206  0DAD                     	;# 
  2207  0DAE                     	;# 
  2208  0DAF                     	;# 
  2209  0E0F                     	;# 
  2210  0E10                     	;# 
  2211  0E11                     	;# 
  2212  0E12                     	;# 
  2213  0E13                     	;# 
  2214  0E14                     	;# 
  2215  0E15                     	;# 
  2216  0E16                     	;# 
  2217  0E17                     	;# 
  2218  0E18                     	;# 
  2219  0E19                     	;# 
  2220  0E1A                     	;# 
  2221  0E1B                     	;# 
  2222  0E1C                     	;# 
  2223  0E1D                     	;# 
  2224  0E1E                     	;# 
  2225  0E1F                     	;# 
  2226  0E20                     	;# 
  2227  0E21                     	;# 
  2228  0E22                     	;# 
  2229  0E23                     	;# 
  2230  0E24                     	;# 
  2231  0E25                     	;# 
  2232  0E26                     	;# 
  2233  0E27                     	;# 
  2234  0E28                     	;# 
  2235  0E29                     	;# 
  2236  0E2A                     	;# 
  2237  0E2B                     	;# 
  2238  0E2C                     	;# 
  2239  0E2D                     	;# 
  2240  0E2E                     	;# 
  2241  0E90                     	;# 
  2242  0E91                     	;# 
  2243  0E92                     	;# 
  2244  0E94                     	;# 
  2245  0E95                     	;# 
  2246  0E9C                     	;# 
  2247  0E9D                     	;# 
  2248  0E9E                     	;# 
  2249  0E9F                     	;# 
  2250  0EA0                     	;# 
  2251  0EA1                     	;# 
  2252  0EA2                     	;# 
  2253  0EA3                     	;# 
  2254  0EA4                     	;# 
  2255  0EA5                     	;# 
  2256  0EA6                     	;# 
  2257  0EA7                     	;# 
  2258  0F0F                     	;# 
  2259  0F10                     	;# 
  2260  0F11                     	;# 
  2261  0F12                     	;# 
  2262  0F13                     	;# 
  2263  0F14                     	;# 
  2264  0F15                     	;# 
  2265  0F16                     	;# 
  2266  0F17                     	;# 
  2267  0F18                     	;# 
  2268  0F19                     	;# 
  2269  0F1A                     	;# 
  2270  0F1B                     	;# 
  2271  0F1C                     	;# 
  2272  0F1D                     	;# 
  2273  0F1E                     	;# 
  2274  0F1F                     	;# 
  2275  0F20                     	;# 
  2276  0F21                     	;# 
  2277  0F22                     	;# 
  2278  0F23                     	;# 
  2279  0F24                     	;# 
  2280  0F25                     	;# 
  2281  0F26                     	;# 
  2282  0F27                     	;# 
  2283  0F28                     	;# 
  2284  0F29                     	;# 
  2285  0F2A                     	;# 
  2286  0F2B                     	;# 
  2287  0F2C                     	;# 
  2288  0F2D                     	;# 
  2289  0F2E                     	;# 
  2290  0F2F                     	;# 
  2291  0F30                     	;# 
  2292  0F31                     	;# 
  2293  0F32                     	;# 
  2294  0F33                     	;# 
  2295  0F34                     	;# 
  2296  0F35                     	;# 
  2297  0F36                     	;# 
  2298  0F37                     	;# 
  2299  0FE4                     	;# 
  2300  0FE5                     	;# 
  2301  0FE6                     	;# 
  2302  0FE7                     	;# 
  2303  0FE8                     	;# 
  2304  0FE9                     	;# 
  2305  0FEA                     	;# 
  2306  0FEB                     	;# 
  2307  0FED                     	;# 
  2308  0FEE                     	;# 
  2309  0FEF                     	;# 
  2310  0000                     	;# 
  2311  0001                     	;# 
  2312  0002                     	;# 
  2313  0003                     	;# 
  2314  0004                     	;# 
  2315  0005                     	;# 
  2316  0006                     	;# 
  2317  0007                     	;# 
  2318  0008                     	;# 
  2319  0009                     	;# 
  2320  000A                     	;# 
  2321  000B                     	;# 
  2322  000C                     	;# 
  2323  000D                     	;# 
  2324  000E                     	;# 
  2325  0010                     	;# 
  2326  0011                     	;# 
  2327  0012                     	;# 
  2328  0013                     	;# 
  2329  0014                     	;# 
  2330  0015                     	;# 
  2331  0016                     	;# 
  2332  0016                     	;# 
  2333  0017                     	;# 
  2334  0018                     	;# 
  2335  0019                     	;# 
  2336  001A                     	;# 
  2337  001A                     	;# 
  2338  001B                     	;# 
  2339  001B                     	;# 
  2340  001C                     	;# 
  2341  001D                     	;# 
  2342  001E                     	;# 
  2343  001F                     	;# 
  2344  008C                     	;# 
  2345  008D                     	;# 
  2346  008E                     	;# 
  2347  0090                     	;# 
  2348  0091                     	;# 
  2349  0092                     	;# 
  2350  0093                     	;# 
  2351  0094                     	;# 
  2352  0095                     	;# 
  2353  0096                     	;# 
  2354  0098                     	;# 
  2355  0099                     	;# 
  2356  009A                     	;# 
  2357  009B                     	;# 
  2358  009B                     	;# 
  2359  009C                     	;# 
  2360  009D                     	;# 
  2361  009E                     	;# 
  2362  009F                     	;# 
  2363  010C                     	;# 
  2364  010D                     	;# 
  2365  010E                     	;# 
  2366  0111                     	;# 
  2367  0112                     	;# 
  2368  0113                     	;# 
  2369  0114                     	;# 
  2370  0115                     	;# 
  2371  0116                     	;# 
  2372  0117                     	;# 
  2373  0118                     	;# 
  2374  0119                     	;# 
  2375  011C                     	;# 
  2376  018C                     	;# 
  2377  018D                     	;# 
  2378  018E                     	;# 
  2379  0191                     	;# 
  2380  0191                     	;# 
  2381  0192                     	;# 
  2382  0193                     	;# 
  2383  0193                     	;# 
  2384  0194                     	;# 
  2385  0195                     	;# 
  2386  0196                     	;# 
  2387  0197                     	;# 
  2388  0199                     	;# 
  2389  0199                     	;# 
  2390  0199                     	;# 
  2391  019A                     	;# 
  2392  019A                     	;# 
  2393  019A                     	;# 
  2394  019B                     	;# 
  2395  019B                     	;# 
  2396  019B                     	;# 
  2397  019B                     	;# 
  2398  019B                     	;# 
  2399  019C                     	;# 
  2400  019C                     	;# 
  2401  019C                     	;# 
  2402  019D                     	;# 
  2403  019D                     	;# 
  2404  019D                     	;# 
  2405  019E                     	;# 
  2406  019E                     	;# 
  2407  019E                     	;# 
  2408  019F                     	;# 
  2409  019F                     	;# 
  2410  019F                     	;# 
  2411  019F                     	;# 
  2412  019F                     	;# 
  2413  020C                     	;# 
  2414  020D                     	;# 
  2415  020E                     	;# 
  2416  0211                     	;# 
  2417  0211                     	;# 
  2418  0212                     	;# 
  2419  0212                     	;# 
  2420  0213                     	;# 
  2421  0213                     	;# 
  2422  0214                     	;# 
  2423  0214                     	;# 
  2424  0215                     	;# 
  2425  0215                     	;# 
  2426  0215                     	;# 
  2427  0215                     	;# 
  2428  0216                     	;# 
  2429  0216                     	;# 
  2430  0217                     	;# 
  2431  0217                     	;# 
  2432  028C                     	;# 
  2433  028D                     	;# 
  2434  028E                     	;# 
  2435  0291                     	;# 
  2436  0291                     	;# 
  2437  0292                     	;# 
  2438  0293                     	;# 
  2439  0294                     	;# 
  2440  0298                     	;# 
  2441  0298                     	;# 
  2442  0299                     	;# 
  2443  029A                     	;# 
  2444  029B                     	;# 
  2445  029E                     	;# 
  2446  030C                     	;# 
  2447  030D                     	;# 
  2448  030E                     	;# 
  2449  038C                     	;# 
  2450  038D                     	;# 
  2451  038E                     	;# 
  2452  0391                     	;# 
  2453  0392                     	;# 
  2454  0393                     	;# 
  2455  0394                     	;# 
  2456  0395                     	;# 
  2457  0396                     	;# 
  2458  0397                     	;# 
  2459  0398                     	;# 
  2460  0399                     	;# 
  2461  040E                     	;# 
  2462  0413                     	;# 
  2463  0413                     	;# 
  2464  0414                     	;# 
  2465  0414                     	;# 
  2466  0415                     	;# 
  2467  0416                     	;# 
  2468  0417                     	;# 
  2469  0418                     	;# 
  2470  041A                     	;# 
  2471  041A                     	;# 
  2472  041B                     	;# 
  2473  041B                     	;# 
  2474  041C                     	;# 
  2475  041D                     	;# 
  2476  041E                     	;# 
  2477  041F                     	;# 
  2478  0493                     	;# 
  2479  0494                     	;# 
  2480  0495                     	;# 
  2481  0496                     	;# 
  2482  049A                     	;# 
  2483  049B                     	;# 
  2484  049C                     	;# 
  2485  049D                     	;# 
  2486  058C                     	;# 
  2487  058C                     	;# 
  2488  058D                     	;# 
  2489  058E                     	;# 
  2490  058E                     	;# 
  2491  058F                     	;# 
  2492  0590                     	;# 
  2493  0590                     	;# 
  2494  0591                     	;# 
  2495  0592                     	;# 
  2496  0592                     	;# 
  2497  0593                     	;# 
  2498  0594                     	;# 
  2499  0594                     	;# 
  2500  0595                     	;# 
  2501  0596                     	;# 
  2502  0596                     	;# 
  2503  0597                     	;# 
  2504  0598                     	;# 
  2505  0599                     	;# 
  2506  059A                     	;# 
  2507  059B                     	;# 
  2508  059B                     	;# 
  2509  059C                     	;# 
  2510  059D                     	;# 
  2511  060C                     	;# 
  2512  060C                     	;# 
  2513  060D                     	;# 
  2514  060E                     	;# 
  2515  060F                     	;# 
  2516  060F                     	;# 
  2517  0610                     	;# 
  2518  0611                     	;# 
  2519  0612                     	;# 
  2520  0613                     	;# 
  2521  0614                     	;# 
  2522  0617                     	;# 
  2523  0617                     	;# 
  2524  0618                     	;# 
  2525  0619                     	;# 
  2526  061A                     	;# 
  2527  061A                     	;# 
  2528  061B                     	;# 
  2529  061C                     	;# 
  2530  0691                     	;# 
  2531  0692                     	;# 
  2532  0693                     	;# 
  2533  0694                     	;# 
  2534  0695                     	;# 
  2535  0696                     	;# 
  2536  0697                     	;# 
  2537  0699                     	;# 
  2538  069A                     	;# 
  2539  0711                     	;# 
  2540  0712                     	;# 
  2541  0713                     	;# 
  2542  0714                     	;# 
  2543  0715                     	;# 
  2544  0718                     	;# 
  2545  0718                     	;# 
  2546  0719                     	;# 
  2547  071A                     	;# 
  2548  071A                     	;# 
  2549  071B                     	;# 
  2550  071C                     	;# 
  2551  071D                     	;# 
  2552  0791                     	;# 
  2553  0791                     	;# 
  2554  0792                     	;# 
  2555  0793                     	;# 
  2556  0793                     	;# 
  2557  0794                     	;# 
  2558  0795                     	;# 
  2559  0795                     	;# 
  2560  0796                     	;# 
  2561  0797                     	;# 
  2562  0797                     	;# 
  2563  0798                     	;# 
  2564  0799                     	;# 
  2565  079A                     	;# 
  2566  080C                     	;# 
  2567  080C                     	;# 
  2568  080D                     	;# 
  2569  080E                     	;# 
  2570  080E                     	;# 
  2571  080F                     	;# 
  2572  0810                     	;# 
  2573  0810                     	;# 
  2574  0811                     	;# 
  2575  0812                     	;# 
  2576  0812                     	;# 
  2577  0813                     	;# 
  2578  0814                     	;# 
  2579  0815                     	;# 
  2580  0816                     	;# 
  2581  0817                     	;# 
  2582  0818                     	;# 
  2583  0819                     	;# 
  2584  081A                     	;# 
  2585  081A                     	;# 
  2586  081B                     	;# 
  2587  081C                     	;# 
  2588  081C                     	;# 
  2589  081D                     	;# 
  2590  088C                     	;# 
  2591  088D                     	;# 
  2592  088E                     	;# 
  2593  088F                     	;# 
  2594  088F                     	;# 
  2595  0890                     	;# 
  2596  0891                     	;# 
  2597  0892                     	;# 
  2598  0893                     	;# 
  2599  0893                     	;# 
  2600  0894                     	;# 
  2601  0895                     	;# 
  2602  0896                     	;# 
  2603  0897                     	;# 
  2604  0897                     	;# 
  2605  0898                     	;# 
  2606  0899                     	;# 
  2607  0D8C                     	;# 
  2608  0D8C                     	;# 
  2609  0D8D                     	;# 
  2610  0D8E                     	;# 
  2611  0D8F                     	;# 
  2612  0D8F                     	;# 
  2613  0D90                     	;# 
  2614  0D91                     	;# 
  2615  0D92                     	;# 
  2616  0D92                     	;# 
  2617  0D93                     	;# 
  2618  0D94                     	;# 
  2619  0D95                     	;# 
  2620  0D95                     	;# 
  2621  0D96                     	;# 
  2622  0D97                     	;# 
  2623  0D98                     	;# 
  2624  0D99                     	;# 
  2625  0D9A                     	;# 
  2626  0D9B                     	;# 
  2627  0D9C                     	;# 
  2628  0D9D                     	;# 
  2629  0D9E                     	;# 
  2630  0D9E                     	;# 
  2631  0D9F                     	;# 
  2632  0DA0                     	;# 
  2633  0DA1                     	;# 
  2634  0DA1                     	;# 
  2635  0DA2                     	;# 
  2636  0DA3                     	;# 
  2637  0DA4                     	;# 
  2638  0DA4                     	;# 
  2639  0DA5                     	;# 
  2640  0DA6                     	;# 
  2641  0DA7                     	;# 
  2642  0DA7                     	;# 
  2643  0DA8                     	;# 
  2644  0DA9                     	;# 
  2645  0DAA                     	;# 
  2646  0DAB                     	;# 
  2647  0DAC                     	;# 
  2648  0DAD                     	;# 
  2649  0DAE                     	;# 
  2650  0DAF                     	;# 
  2651  0E0F                     	;# 
  2652  0E10                     	;# 
  2653  0E11                     	;# 
  2654  0E12                     	;# 
  2655  0E13                     	;# 
  2656  0E14                     	;# 
  2657  0E15                     	;# 
  2658  0E16                     	;# 
  2659  0E17                     	;# 
  2660  0E18                     	;# 
  2661  0E19                     	;# 
  2662  0E1A                     	;# 
  2663  0E1B                     	;# 
  2664  0E1C                     	;# 
  2665  0E1D                     	;# 
  2666  0E1E                     	;# 
  2667  0E1F                     	;# 
  2668  0E20                     	;# 
  2669  0E21                     	;# 
  2670  0E22                     	;# 
  2671  0E23                     	;# 
  2672  0E24                     	;# 
  2673  0E25                     	;# 
  2674  0E26                     	;# 
  2675  0E27                     	;# 
  2676  0E28                     	;# 
  2677  0E29                     	;# 
  2678  0E2A                     	;# 
  2679  0E2B                     	;# 
  2680  0E2C                     	;# 
  2681  0E2D                     	;# 
  2682  0E2E                     	;# 
  2683  0E90                     	;# 
  2684  0E91                     	;# 
  2685  0E92                     	;# 
  2686  0E94                     	;# 
  2687  0E95                     	;# 
  2688  0E9C                     	;# 
  2689  0E9D                     	;# 
  2690  0E9E                     	;# 
  2691  0E9F                     	;# 
  2692  0EA0                     	;# 
  2693  0EA1                     	;# 
  2694  0EA2                     	;# 
  2695  0EA3                     	;# 
  2696  0EA4                     	;# 
  2697  0EA5                     	;# 
  2698  0EA6                     	;# 
  2699  0EA7                     	;# 
  2700  0F0F                     	;# 
  2701  0F10                     	;# 
  2702  0F11                     	;# 
  2703  0F12                     	;# 
  2704  0F13                     	;# 
  2705  0F14                     	;# 
  2706  0F15                     	;# 
  2707  0F16                     	;# 
  2708  0F17                     	;# 
  2709  0F18                     	;# 
  2710  0F19                     	;# 
  2711  0F1A                     	;# 
  2712  0F1B                     	;# 
  2713  0F1C                     	;# 
  2714  0F1D                     	;# 
  2715  0F1E                     	;# 
  2716  0F1F                     	;# 
  2717  0F20                     	;# 
  2718  0F21                     	;# 
  2719  0F22                     	;# 
  2720  0F23                     	;# 
  2721  0F24                     	;# 
  2722  0F25                     	;# 
  2723  0F26                     	;# 
  2724  0F27                     	;# 
  2725  0F28                     	;# 
  2726  0F29                     	;# 
  2727  0F2A                     	;# 
  2728  0F2B                     	;# 
  2729  0F2C                     	;# 
  2730  0F2D                     	;# 
  2731  0F2E                     	;# 
  2732  0F2F                     	;# 
  2733  0F30                     	;# 
  2734  0F31                     	;# 
  2735  0F32                     	;# 
  2736  0F33                     	;# 
  2737  0F34                     	;# 
  2738  0F35                     	;# 
  2739  0F36                     	;# 
  2740  0F37                     	;# 
  2741  0FE4                     	;# 
  2742  0FE5                     	;# 
  2743  0FE6                     	;# 
  2744  0FE7                     	;# 
  2745  0FE8                     	;# 
  2746  0FE9                     	;# 
  2747  0FEA                     	;# 
  2748  0FEB                     	;# 
  2749  0FED                     	;# 
  2750  0FEE                     	;# 
  2751  0FEF                     	;# 
  2752  0000                     	;# 
  2753  0001                     	;# 
  2754  0002                     	;# 
  2755  0003                     	;# 
  2756  0004                     	;# 
  2757  0005                     	;# 
  2758  0006                     	;# 
  2759  0007                     	;# 
  2760  0008                     	;# 
  2761  0009                     	;# 
  2762  000A                     	;# 
  2763  000B                     	;# 
  2764  000C                     	;# 
  2765  000D                     	;# 
  2766  000E                     	;# 
  2767  0010                     	;# 
  2768  0011                     	;# 
  2769  0012                     	;# 
  2770  0013                     	;# 
  2771  0014                     	;# 
  2772  0015                     	;# 
  2773  0016                     	;# 
  2774  0016                     	;# 
  2775  0017                     	;# 
  2776  0018                     	;# 
  2777  0019                     	;# 
  2778  001A                     	;# 
  2779  001A                     	;# 
  2780  001B                     	;# 
  2781  001B                     	;# 
  2782  001C                     	;# 
  2783  001D                     	;# 
  2784  001E                     	;# 
  2785  001F                     	;# 
  2786  008C                     	;# 
  2787  008D                     	;# 
  2788  008E                     	;# 
  2789  0090                     	;# 
  2790  0091                     	;# 
  2791  0092                     	;# 
  2792  0093                     	;# 
  2793  0094                     	;# 
  2794  0095                     	;# 
  2795  0096                     	;# 
  2796  0098                     	;# 
  2797  0099                     	;# 
  2798  009A                     	;# 
  2799  009B                     	;# 
  2800  009B                     	;# 
  2801  009C                     	;# 
  2802  009D                     	;# 
  2803  009E                     	;# 
  2804  009F                     	;# 
  2805  010C                     	;# 
  2806  010D                     	;# 
  2807  010E                     	;# 
  2808  0111                     	;# 
  2809  0112                     	;# 
  2810  0113                     	;# 
  2811  0114                     	;# 
  2812  0115                     	;# 
  2813  0116                     	;# 
  2814  0117                     	;# 
  2815  0118                     	;# 
  2816  0119                     	;# 
  2817  011C                     	;# 
  2818  018C                     	;# 
  2819  018D                     	;# 
  2820  018E                     	;# 
  2821  0191                     	;# 
  2822  0191                     	;# 
  2823  0192                     	;# 
  2824  0193                     	;# 
  2825  0193                     	;# 
  2826  0194                     	;# 
  2827  0195                     	;# 
  2828  0196                     	;# 
  2829  0197                     	;# 
  2830  0199                     	;# 
  2831  0199                     	;# 
  2832  0199                     	;# 
  2833  019A                     	;# 
  2834  019A                     	;# 
  2835  019A                     	;# 
  2836  019B                     	;# 
  2837  019B                     	;# 
  2838  019B                     	;# 
  2839  019B                     	;# 
  2840  019B                     	;# 
  2841  019C                     	;# 
  2842  019C                     	;# 
  2843  019C                     	;# 
  2844  019D                     	;# 
  2845  019D                     	;# 
  2846  019D                     	;# 
  2847  019E                     	;# 
  2848  019E                     	;# 
  2849  019E                     	;# 
  2850  019F                     	;# 
  2851  019F                     	;# 
  2852  019F                     	;# 
  2853  019F                     	;# 
  2854  019F                     	;# 
  2855  020C                     	;# 
  2856  020D                     	;# 
  2857  020E                     	;# 
  2858  0211                     	;# 
  2859  0211                     	;# 
  2860  0212                     	;# 
  2861  0212                     	;# 
  2862  0213                     	;# 
  2863  0213                     	;# 
  2864  0214                     	;# 
  2865  0214                     	;# 
  2866  0215                     	;# 
  2867  0215                     	;# 
  2868  0215                     	;# 
  2869  0215                     	;# 
  2870  0216                     	;# 
  2871  0216                     	;# 
  2872  0217                     	;# 
  2873  0217                     	;# 
  2874  028C                     	;# 
  2875  028D                     	;# 
  2876  028E                     	;# 
  2877  0291                     	;# 
  2878  0291                     	;# 
  2879  0292                     	;# 
  2880  0293                     	;# 
  2881  0294                     	;# 
  2882  0298                     	;# 
  2883  0298                     	;# 
  2884  0299                     	;# 
  2885  029A                     	;# 
  2886  029B                     	;# 
  2887  029E                     	;# 
  2888  030C                     	;# 
  2889  030D                     	;# 
  2890  030E                     	;# 
  2891  038C                     	;# 
  2892  038D                     	;# 
  2893  038E                     	;# 
  2894  0391                     	;# 
  2895  0392                     	;# 
  2896  0393                     	;# 
  2897  0394                     	;# 
  2898  0395                     	;# 
  2899  0396                     	;# 
  2900  0397                     	;# 
  2901  0398                     	;# 
  2902  0399                     	;# 
  2903  040E                     	;# 
  2904  0413                     	;# 
  2905  0413                     	;# 
  2906  0414                     	;# 
  2907  0414                     	;# 
  2908  0415                     	;# 
  2909  0416                     	;# 
  2910  0417                     	;# 
  2911  0418                     	;# 
  2912  041A                     	;# 
  2913  041A                     	;# 
  2914  041B                     	;# 
  2915  041B                     	;# 
  2916  041C                     	;# 
  2917  041D                     	;# 
  2918  041E                     	;# 
  2919  041F                     	;# 
  2920  0493                     	;# 
  2921  0494                     	;# 
  2922  0495                     	;# 
  2923  0496                     	;# 
  2924  049A                     	;# 
  2925  049B                     	;# 
  2926  049C                     	;# 
  2927  049D                     	;# 
  2928  058C                     	;# 
  2929  058C                     	;# 
  2930  058D                     	;# 
  2931  058E                     	;# 
  2932  058E                     	;# 
  2933  058F                     	;# 
  2934  0590                     	;# 
  2935  0590                     	;# 
  2936  0591                     	;# 
  2937  0592                     	;# 
  2938  0592                     	;# 
  2939  0593                     	;# 
  2940  0594                     	;# 
  2941  0594                     	;# 
  2942  0595                     	;# 
  2943  0596                     	;# 
  2944  0596                     	;# 
  2945  0597                     	;# 
  2946  0598                     	;# 
  2947  0599                     	;# 
  2948  059A                     	;# 
  2949  059B                     	;# 
  2950  059B                     	;# 
  2951  059C                     	;# 
  2952  059D                     	;# 
  2953  060C                     	;# 
  2954  060C                     	;# 
  2955  060D                     	;# 
  2956  060E                     	;# 
  2957  060F                     	;# 
  2958  060F                     	;# 
  2959  0610                     	;# 
  2960  0611                     	;# 
  2961  0612                     	;# 
  2962  0613                     	;# 
  2963  0614                     	;# 
  2964  0617                     	;# 
  2965  0617                     	;# 
  2966  0618                     	;# 
  2967  0619                     	;# 
  2968  061A                     	;# 
  2969  061A                     	;# 
  2970  061B                     	;# 
  2971  061C                     	;# 
  2972  0691                     	;# 
  2973  0692                     	;# 
  2974  0693                     	;# 
  2975  0694                     	;# 
  2976  0695                     	;# 
  2977  0696                     	;# 
  2978  0697                     	;# 
  2979  0699                     	;# 
  2980  069A                     	;# 
  2981  0711                     	;# 
  2982  0712                     	;# 
  2983  0713                     	;# 
  2984  0714                     	;# 
  2985  0715                     	;# 
  2986  0718                     	;# 
  2987  0718                     	;# 
  2988  0719                     	;# 
  2989  071A                     	;# 
  2990  071A                     	;# 
  2991  071B                     	;# 
  2992  071C                     	;# 
  2993  071D                     	;# 
  2994  0791                     	;# 
  2995  0791                     	;# 
  2996  0792                     	;# 
  2997  0793                     	;# 
  2998  0793                     	;# 
  2999  0794                     	;# 
  3000  0795                     	;# 
  3001  0795                     	;# 
  3002  0796                     	;# 
  3003  0797                     	;# 
  3004  0797                     	;# 
  3005  0798                     	;# 
  3006  0799                     	;# 
  3007  079A                     	;# 
  3008  080C                     	;# 
  3009  080C                     	;# 
  3010  080D                     	;# 
  3011  080E                     	;# 
  3012  080E                     	;# 
  3013  080F                     	;# 
  3014  0810                     	;# 
  3015  0810                     	;# 
  3016  0811                     	;# 
  3017  0812                     	;# 
  3018  0812                     	;# 
  3019  0813                     	;# 
  3020  0814                     	;# 
  3021  0815                     	;# 
  3022  0816                     	;# 
  3023  0817                     	;# 
  3024  0818                     	;# 
  3025  0819                     	;# 
  3026  081A                     	;# 
  3027  081A                     	;# 
  3028  081B                     	;# 
  3029  081C                     	;# 
  3030  081C                     	;# 
  3031  081D                     	;# 
  3032  088C                     	;# 
  3033  088D                     	;# 
  3034  088E                     	;# 
  3035  088F                     	;# 
  3036  088F                     	;# 
  3037  0890                     	;# 
  3038  0891                     	;# 
  3039  0892                     	;# 
  3040  0893                     	;# 
  3041  0893                     	;# 
  3042  0894                     	;# 
  3043  0895                     	;# 
  3044  0896                     	;# 
  3045  0897                     	;# 
  3046  0897                     	;# 
  3047  0898                     	;# 
  3048  0899                     	;# 
  3049  0D8C                     	;# 
  3050  0D8C                     	;# 
  3051  0D8D                     	;# 
  3052  0D8E                     	;# 
  3053  0D8F                     	;# 
  3054  0D8F                     	;# 
  3055  0D90                     	;# 
  3056  0D91                     	;# 
  3057  0D92                     	;# 
  3058  0D92                     	;# 
  3059  0D93                     	;# 
  3060  0D94                     	;# 
  3061  0D95                     	;# 
  3062  0D95                     	;# 
  3063  0D96                     	;# 
  3064  0D97                     	;# 
  3065  0D98                     	;# 
  3066  0D99                     	;# 
  3067  0D9A                     	;# 
  3068  0D9B                     	;# 
  3069  0D9C                     	;# 
  3070  0D9D                     	;# 
  3071  0D9E                     	;# 
  3072  0D9E                     	;# 
  3073  0D9F                     	;# 
  3074  0DA0                     	;# 
  3075  0DA1                     	;# 
  3076  0DA1                     	;# 
  3077  0DA2                     	;# 
  3078  0DA3                     	;# 
  3079  0DA4                     	;# 
  3080  0DA4                     	;# 
  3081  0DA5                     	;# 
  3082  0DA6                     	;# 
  3083  0DA7                     	;# 
  3084  0DA7                     	;# 
  3085  0DA8                     	;# 
  3086  0DA9                     	;# 
  3087  0DAA                     	;# 
  3088  0DAB                     	;# 
  3089  0DAC                     	;# 
  3090  0DAD                     	;# 
  3091  0DAE                     	;# 
  3092  0DAF                     	;# 
  3093  0E0F                     	;# 
  3094  0E10                     	;# 
  3095  0E11                     	;# 
  3096  0E12                     	;# 
  3097  0E13                     	;# 
  3098  0E14                     	;# 
  3099  0E15                     	;# 
  3100  0E16                     	;# 
  3101  0E17                     	;# 
  3102  0E18                     	;# 
  3103  0E19                     	;# 
  3104  0E1A                     	;# 
  3105  0E1B                     	;# 
  3106  0E1C                     	;# 
  3107  0E1D                     	;# 
  3108  0E1E                     	;# 
  3109  0E1F                     	;# 
  3110  0E20                     	;# 
  3111  0E21                     	;# 
  3112  0E22                     	;# 
  3113  0E23                     	;# 
  3114  0E24                     	;# 
  3115  0E25                     	;# 
  3116  0E26                     	;# 
  3117  0E27                     	;# 
  3118  0E28                     	;# 
  3119  0E29                     	;# 
  3120  0E2A                     	;# 
  3121  0E2B                     	;# 
  3122  0E2C                     	;# 
  3123  0E2D                     	;# 
  3124  0E2E                     	;# 
  3125  0E90                     	;# 
  3126  0E91                     	;# 
  3127  0E92                     	;# 
  3128  0E94                     	;# 
  3129  0E95                     	;# 
  3130  0E9C                     	;# 
  3131  0E9D                     	;# 
  3132  0E9E                     	;# 
  3133  0E9F                     	;# 
  3134  0EA0                     	;# 
  3135  0EA1                     	;# 
  3136  0EA2                     	;# 
  3137  0EA3                     	;# 
  3138  0EA4                     	;# 
  3139  0EA5                     	;# 
  3140  0EA6                     	;# 
  3141  0EA7                     	;# 
  3142  0F0F                     	;# 
  3143  0F10                     	;# 
  3144  0F11                     	;# 
  3145  0F12                     	;# 
  3146  0F13                     	;# 
  3147  0F14                     	;# 
  3148  0F15                     	;# 
  3149  0F16                     	;# 
  3150  0F17                     	;# 
  3151  0F18                     	;# 
  3152  0F19                     	;# 
  3153  0F1A                     	;# 
  3154  0F1B                     	;# 
  3155  0F1C                     	;# 
  3156  0F1D                     	;# 
  3157  0F1E                     	;# 
  3158  0F1F                     	;# 
  3159  0F20                     	;# 
  3160  0F21                     	;# 
  3161  0F22                     	;# 
  3162  0F23                     	;# 
  3163  0F24                     	;# 
  3164  0F25                     	;# 
  3165  0F26                     	;# 
  3166  0F27                     	;# 
  3167  0F28                     	;# 
  3168  0F29                     	;# 
  3169  0F2A                     	;# 
  3170  0F2B                     	;# 
  3171  0F2C                     	;# 
  3172  0F2D                     	;# 
  3173  0F2E                     	;# 
  3174  0F2F                     	;# 
  3175  0F30                     	;# 
  3176  0F31                     	;# 
  3177  0F32                     	;# 
  3178  0F33                     	;# 
  3179  0F34                     	;# 
  3180  0F35                     	;# 
  3181  0F36                     	;# 
  3182  0F37                     	;# 
  3183  0FE4                     	;# 
  3184  0FE5                     	;# 
  3185  0FE6                     	;# 
  3186  0FE7                     	;# 
  3187  0FE8                     	;# 
  3188  0FE9                     	;# 
  3189  0FEA                     	;# 
  3190  0FEB                     	;# 
  3191  0FED                     	;# 
  3192  0FEE                     	;# 
  3193  0FEF                     	;# 
  3194                           
  3195 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  3196  0000                     
  3197 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  3198  0000                     
  3199 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  3200  0000                     
  3201                           	psect	idataBANK2
  3202  0B8C                     __pidataBANK2:	
  3203                           
  3204                           ;initializer for _hrDisp
  3205  0B8C  3448               	retlw	72
  3206  0B8D  3465               	retlw	101
  3207  0B8E  3461               	retlw	97
  3208  0B8F  3472               	retlw	114
  3209  0B90  3474               	retlw	116
  3210  0B91  3420               	retlw	32
  3211  0B92  3452               	retlw	82
  3212  0B93  3461               	retlw	97
  3213  0B94  3474               	retlw	116
  3214  0B95  3465               	retlw	101
  3215  0B96  343A               	retlw	58
  3216  0B97  3420               	retlw	32
  3217  0B98  3400               	retlw	0
  3218                           
  3219                           ;initializer for _distanceDisp
  3220  0B99  3444               	retlw	68
  3221  0B9A  3469               	retlw	105
  3222  0B9B  3473               	retlw	115
  3223  0B9C  3474               	retlw	116
  3224  0B9D  3461               	retlw	97
  3225  0B9E  346E               	retlw	110
  3226  0B9F  3463               	retlw	99
  3227  0BA0  3465               	retlw	101
  3228  0BA1  343A               	retlw	58
  3229  0BA2  3420               	retlw	32
  3230  0BA3  3400               	retlw	0
  3231                           
  3232                           ;initializer for _speedDisp
  3233  0BA4  3453               	retlw	83
  3234  0BA5  3470               	retlw	112
  3235  0BA6  3465               	retlw	101
  3236  0BA7  3465               	retlw	101
  3237  0BA8  3464               	retlw	100
  3238  0BA9  343A               	retlw	58
  3239  0BAA  3420               	retlw	32
  3240  0BAB  3400               	retlw	0
  3241                           
  3242                           	psect	nvBANK0
  3243  0056                     __pnvBANK0:	
  3244  0056                     _TMR0_InterruptHandler:	
  3245  0056                     	ds	2
  3246  0058                     _IOCCF5_InterruptHandler:	
  3247  0058                     	ds	2
  3248  005A                     _EUSART_ErrorHandler:	
  3249  005A                     	ds	2
  3250  005C                     _EUSART_OverrunErrorHandler:	
  3251  005C                     	ds	2
  3252  005E                     _EUSART_FramingErrorHandler:	
  3253  005E                     	ds	2
  3254  0060                     _timer0ReloadVal:	
  3255  0060                     	ds	1
  3256  0015                     _TMR0	set	21
  3257  000B                     _INTCONbits	set	11
  3258  0010                     _PIR1bits	set	16
  3259  0095                     _OPTION_REG	set	149
  3260  0095                     _OPTION_REGbits	set	149
  3261  008E                     _TRISC	set	142
  3262  008D                     _TRISB	set	141
  3263  008C                     _TRISA	set	140
  3264  0098                     _OSCTUNE	set	152
  3265  0099                     _OSCCON	set	153
  3266  010E                     _LATC	set	270
  3267  010D                     _LATB	set	269
  3268  010C                     _LATA	set	268
  3269  0116                     _BORCON	set	278
  3270  018C                     _ANSELA	set	396
  3271  018D                     _ANSELB	set	397
  3272  018E                     _ANSELC	set	398
  3273  019A                     _TX1REG	set	410
  3274  0199                     _RC1REG	set	409
  3275  019D                     _RC1STAbits	set	413
  3276  019E                     _TX1STAbits	set	414
  3277  019C                     _SPBRGH	set	412
  3278  019B                     _SPBRGL	set	411
  3279  019E                     _TX1STA	set	414
  3280  019D                     _RC1STA	set	413
  3281  019F                     _BAUD1CON	set	415
  3282  020E                     _WPUC	set	526
  3283  020C                     _WPUA	set	524
  3284  020D                     _WPUB	set	525
  3285  028E                     _ODCONC	set	654
  3286  028D                     _ODCONB	set	653
  3287  028C                     _ODCONA	set	652
  3288  030E                     _SLRCONC	set	782
  3289  030D                     _SLRCONB	set	781
  3290  030C                     _SLRCONA	set	780
  3291  0397                     _IOCCPbits	set	919
  3292  0398                     _IOCCNbits	set	920
  3293  0399                     _IOCCFbits	set	921
  3294  0E9F                     _RB7PPS	set	3743
  3295                           
  3296                           	psect	stringtext1
  3297  1000                     __pstringtext1:	
  3298  1000                     STR_3:	
  3299  1000  347C               	retlw	124	;'|'
  3300  1001  342D               	retlw	45	;'-'
  3301  1002  3400               	retlw	0
  3302                           
  3303                           	psect	stringtext2
  3304  1003                     __pstringtext2:	
  3305  1003                     STR_1:	
  3306  1003  3425               	retlw	37	;'%'
  3307  1004  3464               	retlw	100	;'d'
  3308  1005  3400               	retlw	0
  3309                           
  3310                           	psect	stringtext3
  3311  0000                     __pstringtext3:	
  3312  1003                     
  3313                           ; #config settings
  3314  0000                     
  3315                           	psect	cinit
  3316  0016                     start_initialization:	
  3317  0016                     __initialization:	
  3318                           
  3319                           ; Initialize objects allocated to BANK2
  3320  0016  308C               	movlw	low __pidataBANK2
  3321  0017  0084               	movwf	4
  3322  0018  308B               	movlw	(high __pidataBANK2)| (0+128)
  3323  0019  0085               	movwf	5
  3324  001A  3020               	movlw	low __pdataBANK2
  3325  001B  0086               	movwf	6
  3326  001C  3001               	movlw	high __pdataBANK2
  3327  001D  0087               	movwf	7
  3328  001E  3020               	movlw	32
  3329  001F  318A  2232  3180   	fcall	init_ram
  3330                           
  3331                           ; Clear objects allocated to BANK0
  3332  0022  3049               	movlw	low __pbssBANK0
  3333  0023  0084               	movwf	4
  3334  0024  3000               	movlw	high __pbssBANK0
  3335  0025  0085               	movwf	5
  3336  0026  300D               	movlw	13
  3337  0027  318A  222C  3180   	fcall	clear_ram0
  3338                           
  3339                           ; Clear objects allocated to BANK2
  3340  002A  0022               	movlb	2	; select bank2
  3341  002B  01CD               	clrf	__pbssBANK2& (0+127)
  3342  002C  01CE               	clrf	(__pbssBANK2+1)& (0+127)
  3343  002D  01CF               	clrf	(__pbssBANK2+2)& (0+127)
  3344  002E  01D0               	clrf	(__pbssBANK2+3)& (0+127)
  3345  002F  01D1               	clrf	(__pbssBANK2+4)& (0+127)
  3346  0030  01D2               	clrf	(__pbssBANK2+5)& (0+127)
  3347                           
  3348                           ; Clear objects allocated to BANK3
  3349  0031  30A0               	movlw	low __pbssBANK3
  3350  0032  0084               	movwf	4
  3351  0033  3001               	movlw	high __pbssBANK3
  3352  0034  0085               	movwf	5
  3353  0035  3020               	movlw	32
  3354  0036  318A  222C         	fcall	clear_ram0
  3355  0038                     end_of_initialization:	
  3356                           ;End of C runtime variable initialization code
  3357                           
  3358  0038                     __end_of__initialization:	
  3359  0038  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3360  0039  0020               	movlb	0
  3361  003A  318D  2D88         	ljmp	_main	;jump to C main() function
  3362                           
  3363                           	psect	bssBANK0
  3364  0049                     __pbssBANK0:	
  3365  0049                     _width:	
  3366  0049                     	ds	2
  3367  004B                     _prec:	
  3368  004B                     	ds	2
  3369  004D                     _flags:	
  3370  004D                     	ds	2
  3371  004F                     _counter:	
  3372  004F                     	ds	2
  3373  0051                     _second:	
  3374  0051                     	ds	2
  3375  0053                     _eusartRxLastError:	
  3376  0053                     	ds	1
  3377  0054                     _rpm:	
  3378  0054                     	ds	2
  3379                           
  3380                           	psect	bssBANK2
  3381  014D                     __pbssBANK2:	
  3382  014D                     _nout:	
  3383  014D                     	ds	2
  3384  014F                     _speed:	
  3385  014F                     	ds	2
  3386  0151                     _distance:	
  3387  0151                     	ds	2
  3388                           
  3389                           	psect	dataBANK2
  3390  0120                     __pdataBANK2:	
  3391  0120                     _hrDisp:	
  3392  0120                     	ds	13
  3393  012D                     _distanceDisp:	
  3394  012D                     	ds	11
  3395  0138                     _speedDisp:	
  3396  0138                     	ds	8
  3397                           
  3398                           	psect	bssBANK3
  3399  01A0                     __pbssBANK3:	
  3400  01A0                     _dbuf:	
  3401  01A0                     	ds	32
  3402                           
  3403                           	psect	inittext
  3404  0A32                     init_ram:	
  3405  0A32  00FE               	movwf	126
  3406  0A33                     initloop:	
  3407  0A33  0012               	moviw fsr0++
  3408  0A34  001E               	movwi fsr1++
  3409  0A35  0BFE               	decfsz	126,f
  3410  0A36  2A33               	goto	initloop
  3411  0A37  3400               	retlw	0
  3412                           
  3413                           	psect	clrtext
  3414  0A2C                     clear_ram0:	
  3415                           ;	Called with FSR0 containing the base address, and
  3416                           ;	WREG with the size to clear
  3417                           
  3418  0A2C  0064               	clrwdt	;clear the watchdog before getting into this loop
  3419  0A2D                     clrloop0:	
  3420  0A2D  0180               	clrf	0	;clear RAM location pointed to by FSR
  3421  0A2E  3101               	addfsr 0,1
  3422  0A2F  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3423  0A30  2A2D               	goto	clrloop0	;have we reached the end yet?
  3424  0A31  3400               	retlw	0	;all done for this memory range, return
  3425                           
  3426                           	psect	cstackBANK2
  3427  0140                     __pcstackBANK2:	
  3428  0140                     ??_vfprintf:	
  3429                           
  3430                           ; 1 bytes @ 0x0
  3431  0140                     	ds	2
  3432  0142                     vfprintf@fp:	
  3433                           
  3434                           ; 1 bytes @ 0x2
  3435  0142                     	ds	1
  3436  0143                     vfprintf@cfmt:	
  3437                           
  3438                           ; 2 bytes @ 0x3
  3439  0143                     	ds	2
  3440  0145                     ?_printf:	
  3441  0145                     printf@fmt:	
  3442                           ; 2 bytes @ 0x5
  3443                           
  3444                           
  3445                           ; 2 bytes @ 0x5
  3446  0145                     	ds	6
  3447  014B                     printf@ap:	
  3448                           
  3449                           ; 1 bytes @ 0xB
  3450  014B                     	ds	1
  3451  014C                     ??_main:	
  3452                           
  3453                           ; 1 bytes @ 0xC
  3454  014C                     	ds	1
  3455                           
  3456                           	psect	cstackBANK1
  3457  00A0                     __pcstackBANK1:	
  3458  00A0                     ?_EUSART_SetFramingErrorHandler:	
  3459  00A0                     ?_EUSART_SetOverrunErrorHandler:	
  3460                           ; 1 bytes @ 0x0
  3461                           
  3462  00A0                     ?_EUSART_SetErrorHandler:	
  3463                           ; 1 bytes @ 0x0
  3464                           
  3465  00A0                     ??_OSCILLATOR_Initialize:	
  3466                           ; 1 bytes @ 0x0
  3467                           
  3468  00A0                     ?_IOCCF5_SetInterruptHandler:	
  3469                           ; 1 bytes @ 0x0
  3470                           
  3471  00A0                     ?_TMR0_SetInterruptHandler:	
  3472                           ; 1 bytes @ 0x0
  3473                           
  3474  00A0                     ??_EUSART_is_tx_ready:	
  3475                           ; 1 bytes @ 0x0
  3476                           
  3477  00A0                     ??_EUSART_Write:	
  3478                           ; 1 bytes @ 0x0
  3479                           
  3480  00A0                     ?_strlen:	
  3481                           ; 1 bytes @ 0x0
  3482                           
  3483  00A0                     ?___aodiv:	
  3484                           ; 2 bytes @ 0x0
  3485                           
  3486  00A0                     ?___aomod:	
  3487                           ; 8 bytes @ 0x0
  3488                           
  3489  00A0                     _EUSART_is_tx_ready$167:	
  3490                           ; 8 bytes @ 0x0
  3491                           
  3492  00A0                     EUSART_Write@txData:	
  3493                           ; 1 bytes @ 0x0
  3494                           
  3495  00A0                     EUSART_SetFramingErrorHandler@interruptHandler:	
  3496                           ; 1 bytes @ 0x0
  3497                           
  3498  00A0                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  3499                           ; 2 bytes @ 0x0
  3500                           
  3501  00A0                     EUSART_SetErrorHandler@interruptHandler:	
  3502                           ; 2 bytes @ 0x0
  3503                           
  3504  00A0                     IOCCF5_SetInterruptHandler@InterruptHandler:	
  3505                           ; 2 bytes @ 0x0
  3506                           
  3507  00A0                     TMR0_SetInterruptHandler@InterruptHandler:	
  3508                           ; 2 bytes @ 0x0
  3509                           
  3510  00A0                     ___aodiv@divisor:	
  3511                           ; 2 bytes @ 0x0
  3512                           
  3513  00A0                     ___aomod@divisor:	
  3514                           ; 8 bytes @ 0x0
  3515                           
  3516                           
  3517                           ; 8 bytes @ 0x0
  3518  00A0                     	ds	1
  3519  00A1                     ?_setCursor:	
  3520  00A1                     ??_putch:	
  3521                           ; 1 bytes @ 0x1
  3522                           
  3523  00A1                     putch@txData:	
  3524                           ; 1 bytes @ 0x1
  3525                           
  3526  00A1                     setCursor@b:	
  3527                           ; 1 bytes @ 0x1
  3528                           
  3529                           
  3530                           ; 1 bytes @ 0x1
  3531  00A1                     	ds	1
  3532  00A2                     ??_EUSART_SetFramingErrorHandler:	
  3533  00A2                     ??_EUSART_SetOverrunErrorHandler:	
  3534                           ; 1 bytes @ 0x2
  3535                           
  3536  00A2                     ??_EUSART_SetErrorHandler:	
  3537                           ; 1 bytes @ 0x2
  3538                           
  3539  00A2                     ??_PIN_MANAGER_Initialize:	
  3540                           ; 1 bytes @ 0x2
  3541                           
  3542  00A2                     ??_TMR0_Initialize:	
  3543                           ; 1 bytes @ 0x2
  3544                           
  3545  00A2                     ??_IOCCF5_SetInterruptHandler:	
  3546                           ; 1 bytes @ 0x2
  3547                           
  3548  00A2                     ??_TMR0_SetInterruptHandler:	
  3549                           ; 1 bytes @ 0x2
  3550                           
  3551  00A2                     ??_setCursor:	
  3552                           ; 1 bytes @ 0x2
  3553                           
  3554  00A2                     ??_strlen:	
  3555                           ; 1 bytes @ 0x2
  3556                           
  3557  00A2                     ??_EUSART_Initialize:	
  3558                           ; 1 bytes @ 0x2
  3559                           
  3560  00A2                     ?_fputc:	
  3561                           ; 1 bytes @ 0x2
  3562                           
  3563  00A2                     fputc@c:	
  3564                           ; 2 bytes @ 0x2
  3565                           
  3566                           
  3567                           ; 2 bytes @ 0x2
  3568  00A2                     	ds	1
  3569  00A3                     ??_SYSTEM_Initialize:	
  3570  00A3                     strlen@a:	
  3571                           ; 1 bytes @ 0x3
  3572                           
  3573                           
  3574                           ; 1 bytes @ 0x3
  3575  00A3                     	ds	1
  3576  00A4                     setCursor@a:	
  3577  00A4                     fputc@fp:	
  3578                           ; 1 bytes @ 0x4
  3579                           
  3580  00A4                     strlen@s:	
  3581                           ; 1 bytes @ 0x4
  3582                           
  3583                           
  3584                           ; 1 bytes @ 0x4
  3585  00A4                     	ds	1
  3586  00A5                     ??_fputc:	
  3587                           
  3588                           ; 1 bytes @ 0x5
  3589  00A5                     	ds	3
  3590  00A8                     ___aodiv@dividend:	
  3591  00A8                     ___aomod@dividend:	
  3592                           ; 8 bytes @ 0x8
  3593                           
  3594                           
  3595                           ; 8 bytes @ 0x8
  3596  00A8                     	ds	2
  3597  00AA                     ?_fputs:	
  3598  00AA                     fputs@s:	
  3599                           ; 2 bytes @ 0xA
  3600                           
  3601                           
  3602                           ; 2 bytes @ 0xA
  3603  00AA                     	ds	2
  3604  00AC                     fputs@fp:	
  3605                           
  3606                           ; 1 bytes @ 0xC
  3607  00AC                     	ds	1
  3608  00AD                     ??_fputs:	
  3609                           
  3610                           ; 1 bytes @ 0xD
  3611  00AD                     	ds	3
  3612  00B0                     ??___aodiv:	
  3613  00B0                     ??___aomod:	
  3614                           ; 1 bytes @ 0x10
  3615                           
  3616  00B0                     fputs@c:	
  3617                           ; 1 bytes @ 0x10
  3618                           
  3619                           
  3620                           ; 1 bytes @ 0x10
  3621  00B0                     	ds	1
  3622  00B1                     ___aodiv@counter:	
  3623  00B1                     ___aomod@counter:	
  3624                           ; 1 bytes @ 0x11
  3625                           
  3626  00B1                     fputs@i:	
  3627                           ; 1 bytes @ 0x11
  3628                           
  3629                           
  3630                           ; 2 bytes @ 0x11
  3631  00B1                     	ds	1
  3632  00B2                     ___aodiv@sign:	
  3633  00B2                     ___aomod@sign:	
  3634                           ; 1 bytes @ 0x12
  3635                           
  3636                           
  3637                           ; 1 bytes @ 0x12
  3638  00B2                     	ds	1
  3639  00B3                     ?_puts:	
  3640  00B3                     ?_abs:	
  3641                           ; 2 bytes @ 0x13
  3642                           
  3643  00B3                     ?_pad:	
  3644                           ; 2 bytes @ 0x13
  3645                           
  3646  00B3                     pad@buf:	
  3647                           ; 2 bytes @ 0x13
  3648                           
  3649  00B3                     abs@a:	
  3650                           ; 1 bytes @ 0x13
  3651                           
  3652  00B3                     puts@s:	
  3653                           ; 2 bytes @ 0x13
  3654                           
  3655  00B3                     ___aodiv@quotient:	
  3656                           ; 2 bytes @ 0x13
  3657                           
  3658                           
  3659                           ; 8 bytes @ 0x13
  3660  00B3                     	ds	1
  3661  00B4                     pad@p:	
  3662                           
  3663                           ; 2 bytes @ 0x14
  3664  00B4                     	ds	1
  3665  00B5                     ??_puts:	
  3666  00B5                     ??_abs:	
  3667                           ; 1 bytes @ 0x15
  3668                           
  3669                           
  3670                           ; 1 bytes @ 0x15
  3671  00B5                     	ds	1
  3672  00B6                     ??_pad:	
  3673                           
  3674                           ; 1 bytes @ 0x16
  3675  00B6                     	ds	1
  3676  00B7                     _puts$1033:	
  3677  00B7                     pad@i:	
  3678                           ; 1 bytes @ 0x17
  3679                           
  3680                           
  3681                           ; 2 bytes @ 0x17
  3682  00B7                     	ds	1
  3683  00B8                     ??_resetCursor:	
  3684  00B8                     ??_writeString:	
  3685                           ; 1 bytes @ 0x18
  3686                           
  3687  00B8                     writeString@string:	
  3688                           ; 1 bytes @ 0x18
  3689                           
  3690                           
  3691                           ; 1 bytes @ 0x18
  3692  00B8                     	ds	1
  3693  00B9                     pad@w:	
  3694                           
  3695                           ; 2 bytes @ 0x19
  3696  00B9                     	ds	2
  3697  00BB                     pad@fp:	
  3698                           
  3699                           ; 1 bytes @ 0x1B
  3700  00BB                     	ds	1
  3701  00BC                     ?_dtoa:	
  3702  00BC                     dtoa@d:	
  3703                           ; 2 bytes @ 0x1C
  3704                           
  3705                           
  3706                           ; 8 bytes @ 0x1C
  3707  00BC                     	ds	8
  3708  00C4                     ??_dtoa:	
  3709                           
  3710                           ; 1 bytes @ 0x24
  3711  00C4                     	ds	3
  3712  00C7                     _dtoa$687:	
  3713                           
  3714                           ; 2 bytes @ 0x27
  3715  00C7                     	ds	2
  3716  00C9                     dtoa@p:	
  3717                           
  3718                           ; 2 bytes @ 0x29
  3719  00C9                     	ds	2
  3720  00CB                     dtoa@fp:	
  3721                           
  3722                           ; 1 bytes @ 0x2B
  3723  00CB                     	ds	1
  3724  00CC                     dtoa@w:	
  3725                           
  3726                           ; 2 bytes @ 0x2C
  3727  00CC                     	ds	2
  3728  00CE                     dtoa@s:	
  3729                           
  3730                           ; 2 bytes @ 0x2E
  3731  00CE                     	ds	2
  3732  00D0                     dtoa@n:	
  3733                           
  3734                           ; 8 bytes @ 0x30
  3735  00D0                     	ds	8
  3736  00D8                     dtoa@i:	
  3737                           
  3738                           ; 2 bytes @ 0x38
  3739  00D8                     	ds	2
  3740  00DA                     ?_vfpfcnvrt:	
  3741  00DA                     vfpfcnvrt@fmt:	
  3742                           ; 2 bytes @ 0x3A
  3743                           
  3744                           
  3745                           ; 1 bytes @ 0x3A
  3746  00DA                     	ds	1
  3747  00DB                     vfpfcnvrt@ap:	
  3748                           
  3749                           ; 1 bytes @ 0x3B
  3750  00DB                     	ds	1
  3751  00DC                     ??_vfpfcnvrt:	
  3752                           
  3753                           ; 1 bytes @ 0x3C
  3754  00DC                     	ds	5
  3755  00E1                     vfpfcnvrt@ll:	
  3756                           
  3757                           ; 8 bytes @ 0x41
  3758  00E1                     	ds	8
  3759  00E9                     vfpfcnvrt@vp:	
  3760                           
  3761                           ; 2 bytes @ 0x49
  3762  00E9                     	ds	2
  3763  00EB                     vfpfcnvrt@fp:	
  3764                           
  3765                           ; 1 bytes @ 0x4B
  3766  00EB                     	ds	1
  3767  00EC                     ?_vfprintf:	
  3768  00EC                     vfprintf@fmt:	
  3769                           ; 2 bytes @ 0x4C
  3770                           
  3771                           
  3772                           ; 2 bytes @ 0x4C
  3773  00EC                     	ds	2
  3774  00EE                     vfprintf@ap:	
  3775                           
  3776                           ; 1 bytes @ 0x4E
  3777  00EE                     	ds	1
  3778  00EF                     ??_printf:	
  3779                           
  3780                           ; 1 bytes @ 0x4F
  3781  00EF                     	ds	1
  3782                           
  3783                           	psect	cstackCOMMON
  3784  0070                     __pcstackCOMMON:	
  3785  0070                     ?_PIN_MANAGER_Initialize:	
  3786  0070                     ?_OSCILLATOR_Initialize:	
  3787                           ; 1 bytes @ 0x0
  3788                           
  3789  0070                     ?_TMR0_Initialize:	
  3790                           ; 1 bytes @ 0x0
  3791                           
  3792  0070                     ?_IOCCF5_DefaultInterruptHandler:	
  3793                           ; 1 bytes @ 0x0
  3794                           
  3795  0070                     ??_IOCCF5_DefaultInterruptHandler:	
  3796                           ; 1 bytes @ 0x0
  3797                           
  3798  0070                     ?_IOCCF5_ISR:	
  3799                           ; 1 bytes @ 0x0
  3800                           
  3801  0070                     ?_TMR0_DefaultInterruptHandler:	
  3802                           ; 1 bytes @ 0x0
  3803                           
  3804  0070                     ??_TMR0_DefaultInterruptHandler:	
  3805                           ; 1 bytes @ 0x0
  3806                           
  3807  0070                     ?_timerISR:	
  3808                           ; 1 bytes @ 0x0
  3809                           
  3810  0070                     ?_speedCalc:	
  3811                           ; 1 bytes @ 0x0
  3812                           
  3813  0070                     ?_resetCursor:	
  3814                           ; 1 bytes @ 0x0
  3815                           
  3816  0070                     ?_writeString:	
  3817                           ; 1 bytes @ 0x0
  3818                           
  3819  0070                     ?_EUSART_Initialize:	
  3820                           ; 1 bytes @ 0x0
  3821                           
  3822  0070                     ?_EUSART_is_tx_ready:	
  3823                           ; 1 bytes @ 0x0
  3824                           
  3825  0070                     ?_EUSART_Write:	
  3826                           ; 1 bytes @ 0x0
  3827                           
  3828  0070                     ?_putch:	
  3829                           ; 1 bytes @ 0x0
  3830                           
  3831  0070                     ?_SYSTEM_Initialize:	
  3832                           ; 1 bytes @ 0x0
  3833                           
  3834  0070                     ?_PIN_MANAGER_IOC:	
  3835                           ; 1 bytes @ 0x0
  3836                           
  3837  0070                     ?_TMR0_ISR:	
  3838                           ; 1 bytes @ 0x0
  3839                           
  3840  0070                     ?_INTERRUPT_InterruptManager:	
  3841                           ; 1 bytes @ 0x0
  3842                           
  3843  0070                     ?_main:	
  3844                           ; 1 bytes @ 0x0
  3845                           
  3846  0070                     ?__Umul8_16:	
  3847                           ; 1 bytes @ 0x0
  3848                           
  3849  0070                     ?___wmul:	
  3850                           ; 2 bytes @ 0x0
  3851                           
  3852  0070                     ?___awmod:	
  3853                           ; 2 bytes @ 0x0
  3854                           
  3855  0070                     ?___xxtofl:	
  3856                           ; 2 bytes @ 0x0
  3857                           
  3858  0070                     __Umul8_16@multiplicand:	
  3859                           ; 4 bytes @ 0x0
  3860                           
  3861  0070                     ___wmul@multiplier:	
  3862                           ; 1 bytes @ 0x0
  3863                           
  3864  0070                     ___awmod@divisor:	
  3865                           ; 2 bytes @ 0x0
  3866                           
  3867  0070                     ___xxtofl@val:	
  3868                           ; 2 bytes @ 0x0
  3869                           
  3870                           
  3871                           ; 4 bytes @ 0x0
  3872  0070                     	ds	2
  3873  0072                     ??__Umul8_16:	
  3874  0072                     ___wmul@multiplicand:	
  3875                           ; 1 bytes @ 0x2
  3876                           
  3877  0072                     ___awmod@dividend:	
  3878                           ; 2 bytes @ 0x2
  3879                           
  3880                           
  3881                           ; 2 bytes @ 0x2
  3882  0072                     	ds	2
  3883  0074                     ??___wmul:	
  3884  0074                     ??___awmod:	
  3885                           ; 1 bytes @ 0x4
  3886                           
  3887  0074                     ??___xxtofl:	
  3888                           ; 1 bytes @ 0x4
  3889                           
  3890  0074                     ___wmul@product:	
  3891                           ; 1 bytes @ 0x4
  3892                           
  3893  0074                     __Umul8_16@product:	
  3894                           ; 2 bytes @ 0x4
  3895                           
  3896                           
  3897                           ; 2 bytes @ 0x4
  3898  0074                     	ds	1
  3899  0075                     ___awmod@counter:	
  3900                           
  3901                           ; 1 bytes @ 0x5
  3902  0075                     	ds	1
  3903  0076                     ___awmod@sign:	
  3904  0076                     __Umul8_16@word_mpld:	
  3905                           ; 1 bytes @ 0x6
  3906                           
  3907                           
  3908                           ; 2 bytes @ 0x6
  3909  0076                     	ds	1
  3910  0077                     ??_timerISR:	
  3911  0077                     ??_TMR0_ISR:	
  3912                           ; 1 bytes @ 0x7
  3913                           
  3914                           
  3915                           ; 1 bytes @ 0x7
  3916  0077                     	ds	1
  3917  0078                     ___xxtofl@sign:	
  3918  0078                     __Umul8_16@multiplier:	
  3919                           ; 1 bytes @ 0x8
  3920                           
  3921                           
  3922                           ; 1 bytes @ 0x8
  3923  0078                     	ds	1
  3924  0079                     ___xxtofl@exp:	
  3925                           
  3926                           ; 1 bytes @ 0x9
  3927  0079                     	ds	1
  3928  007A                     ___xxtofl@arg:	
  3929                           
  3930                           ; 4 bytes @ 0xA
  3931  007A                     	ds	4
  3932  007E                     ??_IOCCF5_ISR:	
  3933  007E                     ??_speedCalc:	
  3934                           ; 1 bytes @ 0xE
  3935                           
  3936  007E                     ??_PIN_MANAGER_IOC:	
  3937                           ; 1 bytes @ 0xE
  3938                           
  3939  007E                     ??_INTERRUPT_InterruptManager:	
  3940                           ; 1 bytes @ 0xE
  3941                           
  3942                           
  3943                           	psect	cstackBANK0
  3944  0020                     __pcstackBANK0:	
  3945                           ; 1 bytes @ 0xE
  3946                           
  3947  0020                     ?___fladd:	
  3948  0020                     ?___flmul:	
  3949                           ; 4 bytes @ 0x0
  3950                           
  3951  0020                     ___fladd@b:	
  3952                           ; 4 bytes @ 0x0
  3953                           
  3954  0020                     ___flmul@b:	
  3955                           ; 4 bytes @ 0x0
  3956                           
  3957                           
  3958                           ; 4 bytes @ 0x0
  3959  0020                     	ds	4
  3960  0024                     ___fladd@a:	
  3961  0024                     ___flmul@a:	
  3962                           ; 4 bytes @ 0x4
  3963                           
  3964                           
  3965                           ; 4 bytes @ 0x4
  3966  0024                     	ds	4
  3967  0028                     ??___fladd:	
  3968  0028                     ??___flmul:	
  3969                           ; 1 bytes @ 0x8
  3970                           
  3971                           
  3972                           ; 1 bytes @ 0x8
  3973  0028                     	ds	5
  3974  002D                     ___flmul@sign:	
  3975                           
  3976                           ; 1 bytes @ 0xD
  3977  002D                     	ds	1
  3978  002E                     ___flmul@grs:	
  3979                           
  3980                           ; 4 bytes @ 0xE
  3981  002E                     	ds	2
  3982  0030                     ___fladd@signs:	
  3983                           
  3984                           ; 1 bytes @ 0x10
  3985  0030                     	ds	1
  3986  0031                     ___fladd@aexp:	
  3987                           
  3988                           ; 1 bytes @ 0x11
  3989  0031                     	ds	1
  3990  0032                     ___fladd@bexp:	
  3991  0032                     ___flmul@aexp:	
  3992                           ; 1 bytes @ 0x12
  3993                           
  3994                           
  3995                           ; 1 bytes @ 0x12
  3996  0032                     	ds	1
  3997  0033                     ___fladd@grs:	
  3998  0033                     ___flmul@bexp:	
  3999                           ; 1 bytes @ 0x13
  4000                           
  4001                           
  4002                           ; 1 bytes @ 0x13
  4003  0033                     	ds	1
  4004  0034                     ___flmul@prod:	
  4005                           
  4006                           ; 4 bytes @ 0x14
  4007  0034                     	ds	4
  4008  0038                     ___flmul@temp:	
  4009                           
  4010                           ; 2 bytes @ 0x18
  4011  0038                     	ds	2
  4012  003A                     ?___fltol:	
  4013  003A                     ___fltol@f1:	
  4014                           ; 4 bytes @ 0x1A
  4015                           
  4016                           
  4017                           ; 4 bytes @ 0x1A
  4018  003A                     	ds	4
  4019  003E                     ??___fltol:	
  4020                           
  4021                           ; 1 bytes @ 0x1E
  4022  003E                     	ds	5
  4023  0043                     ___fltol@sign1:	
  4024                           
  4025                           ; 1 bytes @ 0x23
  4026  0043                     	ds	1
  4027  0044                     ___fltol@exp1:	
  4028                           
  4029                           ; 1 bytes @ 0x24
  4030  0044                     	ds	1
  4031  0045                     _speedCalc$1214:	
  4032                           
  4033                           ; 4 bytes @ 0x25
  4034  0045                     	ds	4
  4035                           
  4036                           	psect	maintext
  4037  0D88                     __pmaintext:	
  4038 ;;
  4039 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  4040 ;;
  4041 ;; *************** function _main *****************
  4042 ;; Defined at:
  4043 ;;		line 37 in file "main.c"
  4044 ;; Parameters:    Size  Location     Type
  4045 ;;		None
  4046 ;; Auto vars:     Size  Location     Type
  4047 ;;		None
  4048 ;; Return value:  Size  Location     Type
  4049 ;;                  1    wreg      void 
  4050 ;; Registers used:
  4051 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4052 ;; Tracked objects:
  4053 ;;		On entry : B1F/0
  4054 ;;		On exit  : 0/0
  4055 ;;		Unchanged: 0/0
  4056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4059 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  4060 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  4061 ;;Total ram usage:        1 bytes
  4062 ;; Hardware stack levels required when called:   15
  4063 ;; This function calls:
  4064 ;;		_IOCCF5_SetInterruptHandler
  4065 ;;		_SYSTEM_Initialize
  4066 ;;		_TMR0_SetInterruptHandler
  4067 ;;		_printf
  4068 ;;		_resetCursor
  4069 ;;		_setCursor
  4070 ;;		_writeString
  4071 ;; This function is called by:
  4072 ;;		Startup code after reset
  4073 ;; This function uses a non-reentrant model
  4074 ;;
  4075                           
  4076                           
  4077                           ;psect for function _main
  4078  0D88                     _main:	
  4079                           
  4080                           ;main.c: 40:     SYSTEM_Initialize();
  4081                           
  4082                           ;incstack = 0
  4083                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4084  0D88  318A  2274  318D   	fcall	_SYSTEM_Initialize
  4085                           
  4086                           ;main.c: 42:     TMR0_SetInterruptHandler( timerISR ) ;
  4087  0D8B  301D               	movlw	low _timerISR
  4088  0D8C  0021               	movlb	1	; select bank1
  4089  0D8D  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler^(0+128)
  4090  0D8E  300B               	movlw	high _timerISR
  4091  0D8F  00A1               	movwf	(TMR0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  4092  0D90  318A  226B  318D   	fcall	_TMR0_SetInterruptHandler
  4093                           
  4094                           ;main.c: 43:     IOCCF5_SetInterruptHandler( speedCalc ) ;
  4095  0D93  3086               	movlw	low _speedCalc
  4096  0D94  0021               	movlb	1	; select bank1
  4097  0D95  00A0               	movwf	IOCCF5_SetInterruptHandler@InterruptHandler^(0+128)
  4098  0D96  300E               	movlw	high _speedCalc
  4099  0D97  00A1               	movwf	(IOCCF5_SetInterruptHandler@InterruptHandler^(0+128)+1)
  4100  0D98  318A  2262  318D   	fcall	_IOCCF5_SetInterruptHandler
  4101                           
  4102                           ;main.c: 46:     resetCursor() ;
  4103  0D9B  318A  223F  318D   	fcall	_resetCursor
  4104                           
  4105                           ;main.c: 48:     setCursor(1,0) ;
  4106  0D9E  0021               	movlb	1	; select bank1
  4107  0D9F  01A1               	clrf	setCursor@b^(0+128)
  4108  0DA0  3001               	movlw	1
  4109  0DA1  318C  2460  318D   	fcall	_setCursor
  4110                           
  4111                           ;main.c: 49:     writeString(speedDisp);
  4112  0DA4  3038               	movlw	(low (_speedDisp| (0+256)))& (0+255)
  4113  0DA5  318A  22BE  318D   	fcall	_writeString
  4114                           
  4115                           ;main.c: 50:     setCursor(2,0) ;
  4116  0DA8  0021               	movlb	1	; select bank1
  4117  0DA9  01A1               	clrf	setCursor@b^(0+128)
  4118  0DAA  3002               	movlw	2
  4119  0DAB  318C  2460  318D   	fcall	_setCursor
  4120                           
  4121                           ;main.c: 51:     writeString(distanceDisp);
  4122  0DAE  302D               	movlw	(low (_distanceDisp| (0+256)))& (0+255)
  4123  0DAF  318A  22BE  318D   	fcall	_writeString
  4124                           
  4125                           ;main.c: 52:     setCursor(3,0) ;
  4126  0DB2  0021               	movlb	1	; select bank1
  4127  0DB3  01A1               	clrf	setCursor@b^(0+128)
  4128  0DB4  3003               	movlw	3
  4129  0DB5  318C  2460  318D   	fcall	_setCursor
  4130                           
  4131                           ;main.c: 53:     writeString(hrDisp);
  4132  0DB8  3020               	movlw	(low (_hrDisp| (0+256)))& (0+255)
  4133  0DB9  318A  22BE  318D   	fcall	_writeString
  4134                           
  4135                           ;main.c: 54:     setCursor(4,0) ;
  4136  0DBC  0021               	movlb	1	; select bank1
  4137  0DBD  01A1               	clrf	setCursor@b^(0+128)
  4138  0DBE  3004               	movlw	4
  4139  0DBF  318C  2460  318D   	fcall	_setCursor
  4140                           
  4141                           ;main.c: 56:     (INTCONbits.GIE = 1);
  4142  0DC2  178B               	bsf	11,7	;volatile
  4143                           
  4144                           ;main.c: 57:     (INTCONbits.PEIE = 1);
  4145  0DC3  170B               	bsf	11,6	;volatile
  4146  0DC4                     l3176:	
  4147                           
  4148                           ;main.c: 59:         setCursor(1,10) ;
  4149  0DC4  300A               	movlw	10
  4150  0DC5  0022               	movlb	2	; select bank2
  4151  0DC6  00CC               	movwf	??_main^(0+256)
  4152  0DC7  084C               	movf	??_main^(0+256),w
  4153  0DC8  0021               	movlb	1	; select bank1
  4154  0DC9  00A1               	movwf	setCursor@b^(0+128)
  4155  0DCA  3001               	movlw	1
  4156  0DCB  318C  2460  318D   	fcall	_setCursor
  4157                           
  4158                           ;main.c: 60:         printf( "%d", speed ) ;
  4159  0DCE  3003               	movlw	low (STR_1| (0+32768))
  4160  0DCF  0022               	movlb	2	; select bank2
  4161  0DD0  00C5               	movwf	printf@fmt^(0+256)
  4162  0DD1  3090               	movlw	high (STR_1| (0+32768))
  4163  0DD2  00C6               	movwf	(printf@fmt^(0+256)+1)
  4164  0DD3  0850               	movf	(_speed+1)^(0+256),w
  4165  0DD4  00C8               	movwf	((?_printf+1)^(0+256)+2)
  4166  0DD5  084F               	movf	_speed^(0+256),w
  4167  0DD6  00C7               	movwf	(?_printf^(0+256)+2)
  4168  0DD7  318A  22A9  318D   	fcall	_printf
  4169                           
  4170                           ;main.c: 61:         setCursor(2,11) ;
  4171  0DDA  300B               	movlw	11
  4172  0DDB  0022               	movlb	2	; select bank2
  4173  0DDC  00CC               	movwf	??_main^(0+256)
  4174  0DDD  084C               	movf	??_main^(0+256),w
  4175  0DDE  0021               	movlb	1	; select bank1
  4176  0DDF  00A1               	movwf	setCursor@b^(0+128)
  4177  0DE0  3002               	movlw	2
  4178  0DE1  318C  2460  318D   	fcall	_setCursor
  4179                           
  4180                           ;main.c: 62:         printf( "%d", distance ) ;
  4181  0DE4  3003               	movlw	low (STR_1| (0+32768))
  4182  0DE5  0022               	movlb	2	; select bank2
  4183  0DE6  00C5               	movwf	printf@fmt^(0+256)
  4184  0DE7  3090               	movlw	high (STR_1| (0+32768))
  4185  0DE8  00C6               	movwf	(printf@fmt^(0+256)+1)
  4186  0DE9  0852               	movf	(_distance+1)^(0+256),w
  4187  0DEA  00C8               	movwf	((?_printf+1)^(0+256)+2)
  4188  0DEB  0851               	movf	_distance^(0+256),w
  4189  0DEC  00C7               	movwf	(?_printf^(0+256)+2)
  4190  0DED  318A  22A9  318D   	fcall	_printf
  4191  0DF0  2DC4               	goto	l3176
  4192  0DF1                     __end_of_main:	
  4193                           
  4194                           	psect	text1
  4195  0ABE                     __ptext1:	
  4196 ;; *************** function _writeString *****************
  4197 ;; Defined at:
  4198 ;;		line 60 in file "displayOptions.c"
  4199 ;; Parameters:    Size  Location     Type
  4200 ;;  string          1    wreg     PTR unsigned char 
  4201 ;;		 -> hrDisp(13), distanceDisp(11), speedDisp(8), 
  4202 ;; Auto vars:     Size  Location     Type
  4203 ;;  string          1   24[BANK1 ] PTR unsigned char 
  4204 ;;		 -> hrDisp(13), distanceDisp(11), speedDisp(8), 
  4205 ;; Return value:  Size  Location     Type
  4206 ;;                  1    wreg      void 
  4207 ;; Registers used:
  4208 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4209 ;; Tracked objects:
  4210 ;;		On entry : 0/0
  4211 ;;		On exit  : 0/0
  4212 ;;		Unchanged: 0/0
  4213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4215 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4217 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4218 ;;Total ram usage:        1 bytes
  4219 ;; Hardware stack levels used:    1
  4220 ;; Hardware stack levels required when called:   11
  4221 ;; This function calls:
  4222 ;;		_EUSART_is_tx_ready
  4223 ;;		_puts
  4224 ;; This function is called by:
  4225 ;;		_main
  4226 ;; This function uses a non-reentrant model
  4227 ;;
  4228                           
  4229                           
  4230                           ;psect for function _writeString
  4231  0ABE                     _writeString:	
  4232                           
  4233                           ;incstack = 0
  4234                           ; Regs used in _writeString: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4235                           ;writeString@string stored from wreg
  4236  0ABE  0021               	movlb	1	; select bank1
  4237  0ABF  00B8               	movwf	writeString@string^(0+128)
  4238  0AC0                     l3004:	
  4239                           ;displayOptions.c: 61:     while( !EUSART_is_tx_ready() ) ;
  4240                           
  4241  0AC0  318A  229B  318A   	fcall	_EUSART_is_tx_ready
  4242  0AC3  3A00               	xorlw	0
  4243  0AC4  1903               	skipnz
  4244  0AC5  2AC0               	goto	l3004
  4245                           
  4246                           ;displayOptions.c: 62:     puts( string );
  4247  0AC6  0021               	movlb	1	; select bank1
  4248  0AC7  0838               	movf	writeString@string^(0+128),w
  4249  0AC8  00B3               	movwf	puts@s^(0+128)
  4250  0AC9  3001               	movlw	1
  4251  0ACA  00B4               	movwf	(puts@s+1)^(0+128)
  4252  0ACB  318B  2352  318A   	fcall	_puts
  4253                           
  4254                           ;displayOptions.c: 63:     _delay((unsigned long)((200)*(500000/4000000.0)));
  4255  0ACE  3008               	movlw	8
  4256  0ACF                     u3777:	
  4257  0ACF  0B89               	decfsz	9,f
  4258  0AD0  2ACF               	goto	u3777
  4259  0AD1  0000               	nop
  4260  0AD2  0008               	return
  4261  0AD3                     __end_of_writeString:	
  4262                           
  4263                           	psect	text2
  4264  0C60                     __ptext2:	
  4265 ;; *************** function _setCursor *****************
  4266 ;; Defined at:
  4267 ;;		line 72 in file "displayOptions.c"
  4268 ;; Parameters:    Size  Location     Type
  4269 ;;  a               1    wreg     unsigned char 
  4270 ;;  b               1    1[BANK1 ] unsigned char 
  4271 ;; Auto vars:     Size  Location     Type
  4272 ;;  a               1    4[BANK1 ] unsigned char 
  4273 ;; Return value:  Size  Location     Type
  4274 ;;                  1    wreg      void 
  4275 ;; Registers used:
  4276 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4277 ;; Tracked objects:
  4278 ;;		On entry : 0/0
  4279 ;;		On exit  : 0/0
  4280 ;;		Unchanged: 0/0
  4281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4282 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4283 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4284 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4285 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4286 ;;Total ram usage:        4 bytes
  4287 ;; Hardware stack levels used:    1
  4288 ;; Hardware stack levels required when called:    7
  4289 ;; This function calls:
  4290 ;;		_EUSART_Write
  4291 ;;		_EUSART_is_tx_ready
  4292 ;; This function is called by:
  4293 ;;		_main
  4294 ;; This function uses a non-reentrant model
  4295 ;;
  4296                           
  4297                           
  4298                           ;psect for function _setCursor
  4299  0C60                     _setCursor:	
  4300                           
  4301                           ;incstack = 0
  4302                           ; Regs used in _setCursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4303                           ;setCursor@a stored from wreg
  4304  0C60  0021               	movlb	1	; select bank1
  4305  0C61  00A4               	movwf	setCursor@a^(0+128)
  4306  0C62                     l2978:	
  4307                           ;displayOptions.c: 73:     while( !EUSART_is_tx_ready() ) ;
  4308                           
  4309  0C62  318A  229B  318C   	fcall	_EUSART_is_tx_ready
  4310  0C65  3A00               	xorlw	0
  4311  0C66  1903               	skipnz
  4312  0C67  2C62               	goto	l2978
  4313                           
  4314                           ;displayOptions.c: 74:     EUSART_Write( 254 );
  4315  0C68  30FE               	movlw	254
  4316  0C69  3187  27F6  318C   	fcall	_EUSART_Write
  4317                           
  4318                           ;displayOptions.c: 75:     _delay((unsigned long)((200)*(500000/4000000.0)));
  4319  0C6C  3008               	movlw	8
  4320  0C6D                     u3787:	
  4321  0C6D  0B89               	decfsz	9,f
  4322  0C6E  2C6D               	goto	u3787
  4323  0C6F  0000               	nop
  4324                           
  4325                           ;displayOptions.c: 76:     switch ( a ){
  4326  0C70  2C85               	goto	l2994
  4327  0C71                     l2984:	
  4328                           
  4329                           ;displayOptions.c: 78:         {;displayOptions.c: 79:             EUSART_Write(128 + 0 
      +                          + b) ;
  4330  0C71  0821               	movf	setCursor@b^(0+128),w
  4331  0C72  3E80               	addlw	128
  4332  0C73  3187  27F6         	fcall	_EUSART_Write
  4333                           
  4334                           ;displayOptions.c: 80:             break ;
  4335  0C75  0008               	return
  4336  0C76                     l2986:	
  4337                           
  4338                           ;displayOptions.c: 83:         {;displayOptions.c: 84:            EUSART_Write(128 + 64 
      +                          + b) ;
  4339  0C76  0821               	movf	setCursor@b^(0+128),w
  4340  0C77  3EC0               	addlw	192
  4341  0C78  3187  27F6         	fcall	_EUSART_Write
  4342                           
  4343                           ;displayOptions.c: 85:            break ;
  4344  0C7A  0008               	return
  4345  0C7B                     l2988:	
  4346                           
  4347                           ;displayOptions.c: 88:         {;displayOptions.c: 89:             EUSART_Write(128 + 20
      +                           + b) ;
  4348  0C7B  0821               	movf	setCursor@b^(0+128),w
  4349  0C7C  3E94               	addlw	148
  4350  0C7D  3187  27F6         	fcall	_EUSART_Write
  4351                           
  4352                           ;displayOptions.c: 90:             break ;
  4353  0C7F  0008               	return
  4354  0C80                     l2990:	
  4355                           
  4356                           ;displayOptions.c: 93:         {;displayOptions.c: 94:             EUSART_Write(128 + 84
      +                           + b) ;
  4357  0C80  0821               	movf	setCursor@b^(0+128),w
  4358  0C81  3ED4               	addlw	212
  4359  0C82  3187  27F6         	fcall	_EUSART_Write
  4360                           
  4361                           ;displayOptions.c: 95:             break ;
  4362  0C84  0008               	return
  4363  0C85                     l2994:	
  4364  0C85  0021               	movlb	1	; select bank1
  4365  0C86  0824               	movf	setCursor@a^(0+128),w
  4366  0C87  00A2               	movwf	??_setCursor^(0+128)
  4367  0C88  01A3               	clrf	(??_setCursor^(0+128)+1)
  4368                           
  4369                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4370                           ; Switch size 1, requested type "simple"
  4371                           ; Number of cases is 1, Range of values is 0 to 0
  4372                           ; switch strategies available:
  4373                           ; Name         Instructions Cycles
  4374                           ; simple_byte            4     3 (average)
  4375                           ; direct_byte            8     6 (fixed)
  4376                           ; jumptable            260     6 (fixed)
  4377                           ;	Chosen strategy is simple_byte
  4378  0C89  0823               	movf	(??_setCursor+1)^(0+128),w
  4379  0C8A  3A00               	xorlw	0	; case 0
  4380  0C8B  1903               	skipnz
  4381  0C8C  2C8E               	goto	l3222
  4382  0C8D  2C9C               	goto	l352
  4383  0C8E                     l3222:	
  4384                           
  4385                           ; Switch size 1, requested type "simple"
  4386                           ; Number of cases is 4, Range of values is 1 to 4
  4387                           ; switch strategies available:
  4388                           ; Name         Instructions Cycles
  4389                           ; simple_byte           13     7 (average)
  4390                           ; direct_byte           17     9 (fixed)
  4391                           ; jumptable            263     9 (fixed)
  4392                           ;	Chosen strategy is simple_byte
  4393  0C8E  0822               	movf	??_setCursor^(0+128),w
  4394  0C8F  3A01               	xorlw	1	; case 1
  4395  0C90  1903               	skipnz
  4396  0C91  2C71               	goto	l2984
  4397  0C92  3A03               	xorlw	3	; case 2
  4398  0C93  1903               	skipnz
  4399  0C94  2C76               	goto	l2986
  4400  0C95  3A01               	xorlw	1	; case 3
  4401  0C96  1903               	skipnz
  4402  0C97  2C7B               	goto	l2988
  4403  0C98  3A07               	xorlw	7	; case 4
  4404  0C99  1903               	skipnz
  4405  0C9A  2C80               	goto	l2990
  4406  0C9B  2C9C               	goto	l352
  4407  0C9C                     l352:	
  4408  0C9C  0008               	return
  4409  0C9D                     __end_of_setCursor:	
  4410                           
  4411                           	psect	text3
  4412  0A9B                     __ptext3:	
  4413 ;; *************** function _EUSART_is_tx_ready *****************
  4414 ;; Defined at:
  4415 ;;		line 93 in file "mcc_generated_files/eusart.c"
  4416 ;; Parameters:    Size  Location     Type
  4417 ;;		None
  4418 ;; Auto vars:     Size  Location     Type
  4419 ;;		None
  4420 ;; Return value:  Size  Location     Type
  4421 ;;                  1    wreg      _Bool 
  4422 ;; Registers used:
  4423 ;;		wreg, status,2
  4424 ;; Tracked objects:
  4425 ;;		On entry : 0/0
  4426 ;;		On exit  : 0/0
  4427 ;;		Unchanged: 0/0
  4428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4430 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4432 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4433 ;;Total ram usage:        1 bytes
  4434 ;; Hardware stack levels used:    1
  4435 ;; Hardware stack levels required when called:    6
  4436 ;; This function calls:
  4437 ;;		Nothing
  4438 ;; This function is called by:
  4439 ;;		_writeString
  4440 ;;		_setCursor
  4441 ;;		_backlightBrightness
  4442 ;;		_writePrintf
  4443 ;; This function uses a non-reentrant model
  4444 ;;
  4445                           
  4446                           
  4447                           ;psect for function _EUSART_is_tx_ready
  4448  0A9B                     _EUSART_is_tx_ready:	
  4449                           
  4450                           ;mcc_generated_files/eusart.c: 95:     return (_Bool)(PIR1bits.TXIF && TX1STAbits.TXEN);
  4451                           
  4452                           ;incstack = 0
  4453                           ; Regs used in _EUSART_is_tx_ready: [wreg+status,2]
  4454  0A9B  0021               	movlb	1	; select bank1
  4455  0A9C  01A0               	clrf	_EUSART_is_tx_ready$167^(0+128)
  4456  0A9D  0020               	movlb	0	; select bank0
  4457  0A9E  1E10               	btfss	16,4	;volatile
  4458  0A9F  2AA6               	goto	l2844
  4459  0AA0  0023               	movlb	3	; select bank3
  4460  0AA1  1E9E               	btfss	30,5	;volatile
  4461  0AA2  2AA6               	goto	l2844
  4462  0AA3  0021               	movlb	1	; select bank1
  4463  0AA4  01A0               	clrf	_EUSART_is_tx_ready$167^(0+128)
  4464  0AA5  0AA0               	incf	_EUSART_is_tx_ready$167^(0+128),f
  4465  0AA6                     l2844:	
  4466  0AA6  0021               	movlb	1	; select bank1
  4467  0AA7  0820               	movf	_EUSART_is_tx_ready$167^(0+128),w
  4468  0AA8  0008               	return
  4469  0AA9                     __end_of_EUSART_is_tx_ready:	
  4470                           
  4471                           	psect	text4
  4472  0A3F                     __ptext4:	
  4473 ;; *************** function _resetCursor *****************
  4474 ;; Defined at:
  4475 ;;		line 56 in file "displayOptions.c"
  4476 ;; Parameters:    Size  Location     Type
  4477 ;;		None
  4478 ;; Auto vars:     Size  Location     Type
  4479 ;;		None
  4480 ;; Return value:  Size  Location     Type
  4481 ;;                  1    wreg      void 
  4482 ;; Registers used:
  4483 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4484 ;; Tracked objects:
  4485 ;;		On entry : 0/0
  4486 ;;		On exit  : 0/0
  4487 ;;		Unchanged: 0/0
  4488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4492 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4493 ;;Total ram usage:        0 bytes
  4494 ;; Hardware stack levels used:    1
  4495 ;; Hardware stack levels required when called:   11
  4496 ;; This function calls:
  4497 ;;		_puts
  4498 ;; This function is called by:
  4499 ;;		_main
  4500 ;; This function uses a non-reentrant model
  4501 ;;
  4502                           
  4503                           
  4504                           ;psect for function _resetCursor
  4505  0A3F                     _resetCursor:	
  4506                           
  4507                           ;displayOptions.c: 57:     puts("|-");
  4508                           
  4509                           ;incstack = 0
  4510                           ; Regs used in _resetCursor: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4511  0A3F  3000               	movlw	low (STR_3| (0+32768))
  4512  0A40  0021               	movlb	1	; select bank1
  4513  0A41  00B3               	movwf	puts@s^(0+128)
  4514  0A42  3090               	movlw	high (STR_3| (0+32768))
  4515  0A43  00B4               	movwf	(puts@s^(0+128)+1)
  4516  0A44  318B  2352         	fcall	_puts
  4517  0A46  0008               	return
  4518  0A47                     __end_of_resetCursor:	
  4519                           
  4520                           	psect	text5
  4521  0B52                     __ptext5:	
  4522 ;; *************** function _puts *****************
  4523 ;; Defined at:
  4524 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\puts.c"
  4525 ;; Parameters:    Size  Location     Type
  4526 ;;  s               2   19[BANK1 ] PTR const unsigned char 
  4527 ;;		 -> STR_3(3), hrDisp(13), distanceDisp(11), speedDisp(8), 
  4528 ;; Auto vars:     Size  Location     Type
  4529 ;;  r               2    0        int 
  4530 ;; Return value:  Size  Location     Type
  4531 ;;                  2   19[BANK1 ] int 
  4532 ;; Registers used:
  4533 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4534 ;; Tracked objects:
  4535 ;;		On entry : 0/0
  4536 ;;		On exit  : 0/0
  4537 ;;		Unchanged: 0/0
  4538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4539 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4540 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4542 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  4543 ;;Total ram usage:        5 bytes
  4544 ;; Hardware stack levels used:    1
  4545 ;; Hardware stack levels required when called:   10
  4546 ;; This function calls:
  4547 ;;		_fputc
  4548 ;;		_fputs
  4549 ;; This function is called by:
  4550 ;;		_resetCursor
  4551 ;;		_writeString
  4552 ;; This function uses a non-reentrant model
  4553 ;;
  4554                           
  4555                           
  4556                           ;psect for function _puts
  4557  0B52                     _puts:	
  4558                           
  4559                           ;incstack = 0
  4560                           ; Regs used in _puts: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4561  0B52  0021               	movlb	1	; select bank1
  4562  0B53  01B7               	clrf	_puts$1033^(0+128)
  4563  0B54  0AB7               	incf	_puts$1033^(0+128),f
  4564  0B55  0834               	movf	(puts@s+1)^(0+128),w
  4565  0B56  00AB               	movwf	(fputs@s+1)^(0+128)
  4566  0B57  0833               	movf	puts@s^(0+128),w
  4567  0B58  00AA               	movwf	fputs@s^(0+128)
  4568  0B59  01AC               	clrf	fputs@fp^(0+128)
  4569  0B5A  318B  23D0  318B   	fcall	_fputs
  4570  0B5D  0021               	movlb	1	; select bank1
  4571  0B5E  1BAB               	btfsc	(?_fputs+1)^(0+128),7
  4572  0B5F  0008               	return
  4573  0B60  300A               	movlw	10
  4574  0B61  00A2               	movwf	fputc@c^(0+128)
  4575  0B62  3000               	movlw	0
  4576  0B63  00A3               	movwf	(fputc@c^(0+128)+1)
  4577  0B64  01A4               	clrf	fputc@fp^(0+128)
  4578  0B65  318C  249D  318B   	fcall	_fputc
  4579  0B68  0021               	movlb	1	; select bank1
  4580  0B69  1BA3               	btfsc	(?_fputc+1)^(0+128),7
  4581  0B6A  0008               	return
  4582  0B6B  01B7               	clrf	_puts$1033^(0+128)
  4583  0B6C  0008               	return
  4584  0B6D                     __end_of_puts:	
  4585                           
  4586                           	psect	text6
  4587  0AA9                     __ptext6:	
  4588 ;; *************** function _printf *****************
  4589 ;; Defined at:
  4590 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  4591 ;; Parameters:    Size  Location     Type
  4592 ;;  fmt             2    5[BANK2 ] PTR const unsigned char 
  4593 ;;		 -> STR_2(3), STR_1(3), 
  4594 ;; Auto vars:     Size  Location     Type
  4595 ;;  ret             2    0        int 
  4596 ;;  ap              1   11[BANK2 ] PTR void [1]
  4597 ;;		 -> ?_printf(2), 
  4598 ;; Return value:  Size  Location     Type
  4599 ;;                  2    5[BANK2 ] int 
  4600 ;; Registers used:
  4601 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4602 ;; Tracked objects:
  4603 ;;		On entry : 0/0
  4604 ;;		On exit  : 0/0
  4605 ;;		Unchanged: 0/0
  4606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4607 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  4608 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  4609 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4610 ;;      Totals:         0       0       1       7       0       0       0       0       0       0       0       0       
      +0       0
  4611 ;;Total ram usage:        8 bytes
  4612 ;; Hardware stack levels used:    1
  4613 ;; Hardware stack levels required when called:   14
  4614 ;; This function calls:
  4615 ;;		_vfprintf
  4616 ;; This function is called by:
  4617 ;;		_main
  4618 ;;		_writePrintf
  4619 ;; This function uses a non-reentrant model
  4620 ;;
  4621                           
  4622                           
  4623                           ;psect for function _printf
  4624  0AA9                     _printf:	
  4625                           
  4626                           ;incstack = 0
  4627                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4628  0AA9  3047               	movlw	(low ((?_printf| (0+256)+2)))& (0+255)
  4629  0AAA  0021               	movlb	1	; select bank1
  4630  0AAB  00EF               	movwf	??_printf^(0+128)
  4631  0AAC  086F               	movf	??_printf^(0+128),w
  4632  0AAD  0022               	movlb	2	; select bank2
  4633  0AAE  00CB               	movwf	printf@ap^(0+256)
  4634  0AAF  0846               	movf	(printf@fmt+1)^(0+256),w
  4635  0AB0  0021               	movlb	1	; select bank1
  4636  0AB1  00ED               	movwf	(vfprintf@fmt+1)^(0+128)
  4637  0AB2  0022               	movlb	2	; select bank2
  4638  0AB3  0845               	movf	printf@fmt^(0+256),w
  4639  0AB4  0021               	movlb	1	; select bank1
  4640  0AB5  00EC               	movwf	vfprintf@fmt^(0+128)
  4641  0AB6  304B               	movlw	(low (printf@ap| (0+256)))& (0+255)
  4642  0AB7  00EF               	movwf	??_printf^(0+128)
  4643  0AB8  086F               	movf	??_printf^(0+128),w
  4644  0AB9  00EE               	movwf	vfprintf@ap^(0+128)
  4645  0ABA  3000               	movlw	0
  4646  0ABB  318C  242C         	fcall	_vfprintf
  4647  0ABD  0008               	return
  4648  0ABE                     __end_of_printf:	
  4649                           
  4650                           	psect	text7
  4651  0C2C                     __ptext7:	
  4652 ;; *************** function _vfprintf *****************
  4653 ;; Defined at:
  4654 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4655 ;; Parameters:    Size  Location     Type
  4656 ;;  fp              1    wreg     PTR struct _IO_FILE
  4657 ;;		 -> NULL(0), 
  4658 ;;  fmt             2   76[BANK1 ] PTR const unsigned char 
  4659 ;;		 -> STR_2(3), STR_1(3), 
  4660 ;;  ap              1   78[BANK1 ] PTR PTR void 
  4661 ;;		 -> printf@ap(1), 
  4662 ;; Auto vars:     Size  Location     Type
  4663 ;;  fp              1    2[BANK2 ] PTR struct _IO_FILE
  4664 ;;		 -> NULL(0), 
  4665 ;;  cfmt            2    3[BANK2 ] PTR unsigned char 
  4666 ;;		 -> STR_2(3), STR_1(3), 
  4667 ;; Return value:  Size  Location     Type
  4668 ;;                  2   76[BANK1 ] int 
  4669 ;; Registers used:
  4670 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4671 ;; Tracked objects:
  4672 ;;		On entry : 0/0
  4673 ;;		On exit  : 0/0
  4674 ;;		Unchanged: 0/0
  4675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4676 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4677 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  4678 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  4679 ;;      Totals:         0       0       3       5       0       0       0       0       0       0       0       0       
      +0       0
  4680 ;;Total ram usage:        8 bytes
  4681 ;; Hardware stack levels used:    1
  4682 ;; Hardware stack levels required when called:   13
  4683 ;; This function calls:
  4684 ;;		_vfpfcnvrt
  4685 ;; This function is called by:
  4686 ;;		_printf
  4687 ;; This function uses a non-reentrant model
  4688 ;;
  4689                           
  4690                           
  4691                           ;psect for function _vfprintf
  4692  0C2C                     _vfprintf:	
  4693                           
  4694                           ;incstack = 0
  4695                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4696                           ;vfprintf@fp stored from wreg
  4697  0C2C  0022               	movlb	2	; select bank2
  4698  0C2D  00C2               	movwf	vfprintf@fp^(0+256)
  4699                           
  4700                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  4701  0C2E  0021               	movlb	1	; select bank1
  4702  0C2F  086D               	movf	(vfprintf@fmt+1)^(0+128),w
  4703  0C30  0022               	movlb	2	; select bank2
  4704  0C31  00C4               	movwf	(vfprintf@cfmt+1)^(0+256)
  4705  0C32  0021               	movlb	1	; select bank1
  4706  0C33  086C               	movf	vfprintf@fmt^(0+128),w
  4707  0C34  0022               	movlb	2	; select bank2
  4708  0C35  00C3               	movwf	vfprintf@cfmt^(0+256)
  4709                           
  4710                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  4711  0C36  01CD               	clrf	_nout^(0+256)
  4712  0C37  01CE               	clrf	(_nout+1)^(0+256)
  4713  0C38                     l3142:	
  4714                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  4715                           
  4716                           
  4717                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  4718  0C38  0843               	movf	vfprintf@cfmt^(0+256),w
  4719  0C39  0084               	movwf	4
  4720  0C3A  0844               	movf	(vfprintf@cfmt+1)^(0+256),w
  4721  0C3B  0085               	movwf	5
  4722  0C3C  0012               	moviw fsr0++
  4723  0C3D  1903               	btfsc	3,2
  4724  0C3E  2C58               	goto	l3144
  4725                           
  4726                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  4727  0C3F  3043               	movlw	(low (vfprintf@cfmt| (0+256)))& (0+255)
  4728  0C40  00C0               	movwf	??_vfprintf^(0+256)
  4729  0C41  0840               	movf	??_vfprintf^(0+256),w
  4730  0C42  0021               	movlb	1	; select bank1
  4731  0C43  00DA               	movwf	vfpfcnvrt@fmt^(0+128)
  4732  0C44  086E               	movf	vfprintf@ap^(0+128),w
  4733  0C45  0022               	movlb	2	; select bank2
  4734  0C46  00C1               	movwf	(??_vfprintf+1)^(0+256)
  4735  0C47  0841               	movf	(??_vfprintf+1)^(0+256),w
  4736  0C48  0021               	movlb	1	; select bank1
  4737  0C49  00DB               	movwf	vfpfcnvrt@ap^(0+128)
  4738  0C4A  0022               	movlb	2	; select bank2
  4739  0C4B  0842               	movf	vfprintf@fp^(0+256),w
  4740  0C4C  3185  259B  318C   	fcall	_vfpfcnvrt
  4741  0C4F  0021               	movlb	1	; select bank1
  4742  0C50  085A               	movf	?_vfpfcnvrt^(0+128),w
  4743  0C51  0022               	movlb	2	; select bank2
  4744  0C52  07CD               	addwf	_nout^(0+256),f
  4745  0C53  0021               	movlb	1	; select bank1
  4746  0C54  085B               	movf	(?_vfpfcnvrt+1)^(0+128),w
  4747  0C55  0022               	movlb	2	; select bank2
  4748  0C56  3DCE               	addwfc	(_nout+1)^(0+256),f
  4749  0C57  2C38               	goto	l3142
  4750  0C58                     l3144:	
  4751                           
  4752                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  4753  0C58  084E               	movf	(_nout+1)^(0+256),w
  4754  0C59  0021               	movlb	1	; select bank1
  4755  0C5A  00ED               	movwf	(?_vfprintf+1)^(0+128)
  4756  0C5B  0022               	movlb	2	; select bank2
  4757  0C5C  084D               	movf	_nout^(0+256),w
  4758  0C5D  0021               	movlb	1	; select bank1
  4759  0C5E  00EC               	movwf	?_vfprintf^(0+128)
  4760  0C5F  0008               	return
  4761  0C60                     __end_of_vfprintf:	
  4762                           
  4763                           	psect	text8
  4764  059B                     __ptext8:	
  4765 ;; *************** function _vfpfcnvrt *****************
  4766 ;; Defined at:
  4767 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4768 ;; Parameters:    Size  Location     Type
  4769 ;;  fp              1    wreg     PTR struct _IO_FILE
  4770 ;;		 -> NULL(0), 
  4771 ;;  fmt             1   58[BANK1 ] PTR PTR unsigned char 
  4772 ;;		 -> vfprintf@cfmt(2), 
  4773 ;;  ap              1   59[BANK1 ] PTR PTR void 
  4774 ;;		 -> printf@ap(1), 
  4775 ;; Auto vars:     Size  Location     Type
  4776 ;;  fp              1   75[BANK1 ] PTR struct _IO_FILE
  4777 ;;		 -> NULL(0), 
  4778 ;;  ll              8   65[BANK1 ] long long 
  4779 ;;  llu             8    0        unsigned long long 
  4780 ;;  f               4    0        unsigned long long 
  4781 ;;  ct              3    0        unsigned char [3]
  4782 ;;  vp              2   73[BANK1 ] PTR void 
  4783 ;;		 -> ?_printf(2), rpm(2), 
  4784 ;;  i               2    0        int 
  4785 ;;  done            2    0        int 
  4786 ;;  cp              2    0        PTR unsigned char 
  4787 ;;  c               1    0        unsigned char 
  4788 ;; Return value:  Size  Location     Type
  4789 ;;                  2   58[BANK1 ] int 
  4790 ;; Registers used:
  4791 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4792 ;; Tracked objects:
  4793 ;;		On entry : 0/0
  4794 ;;		On exit  : 0/0
  4795 ;;		Unchanged: 0/0
  4796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4797 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4798 ;;      Locals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0
  4799 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  4800 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0
  4801 ;;Total ram usage:       18 bytes
  4802 ;; Hardware stack levels used:    1
  4803 ;; Hardware stack levels required when called:   12
  4804 ;; This function calls:
  4805 ;;		_dtoa
  4806 ;;		_fputc
  4807 ;; This function is called by:
  4808 ;;		_vfprintf
  4809 ;; This function uses a non-reentrant model
  4810 ;;
  4811                           
  4812                           
  4813                           ;psect for function _vfpfcnvrt
  4814  059B                     _vfpfcnvrt:	
  4815                           
  4816                           ;incstack = 0
  4817                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4818                           ;vfpfcnvrt@fp stored from wreg
  4819  059B  0021               	movlb	1	; select bank1
  4820  059C  00EB               	movwf	vfpfcnvrt@fp^(0+128)
  4821                           
  4822                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  4823  059D  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  4824  059E  0086               	movwf	6
  4825  059F  3001               	movlw	1	; select bank2/3
  4826  05A0  0087               	movwf	7
  4827  05A1  3F40               	moviw [0]fsr1
  4828  05A2  00DC               	movwf	??_vfpfcnvrt^(0+128)
  4829  05A3  3F41               	moviw [1]fsr1
  4830  05A4  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  4831  05A5  085C               	movf	??_vfpfcnvrt^(0+128),w
  4832  05A6  0084               	movwf	4
  4833  05A7  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4834  05A8  0085               	movwf	5
  4835  05A9  0012               	moviw fsr0++
  4836  05AA  3A25               	xorlw	37
  4837  05AB  1D03               	btfss	3,2
  4838  05AC  2E84               	goto	l2778
  4839                           
  4840                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  4841  05AD  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  4842  05AE  0086               	movwf	6
  4843  05AF  3001               	movlw	1	; select bank2/3
  4844  05B0  0087               	movwf	7
  4845  05B1  3001               	movlw	1
  4846  05B2  0781               	addwf	1,f
  4847  05B3  3141               	addfsr 1,1
  4848  05B4  1803               	skipnc
  4849  05B5  0A81               	incf	1,f
  4850                           
  4851                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  4852  05B6  0020               	movlb	0	; select bank0
  4853  05B7  01C9               	clrf	_width
  4854  05B8  01CA               	clrf	_width+1
  4855  05B9  01CD               	clrf	_flags
  4856  05BA  01CE               	clrf	_flags+1
  4857                           
  4858                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  4859  05BB  30FF               	movlw	255
  4860  05BC  00CB               	movwf	_prec
  4861  05BD  30FF               	movlw	255
  4862  05BE  00CC               	movwf	_prec+1
  4863                           
  4864                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  4865  05BF  0021               	movlb	1	; select bank1
  4866  05C0  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  4867  05C1  0086               	movwf	6
  4868  05C2  3001               	movlw	1	; select bank2/3
  4869  05C3  0087               	movwf	7
  4870  05C4  3F40               	moviw [0]fsr1
  4871  05C5  00DC               	movwf	??_vfpfcnvrt^(0+128)
  4872  05C6  3F41               	moviw [1]fsr1
  4873  05C7  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  4874  05C8  085C               	movf	??_vfpfcnvrt^(0+128),w
  4875  05C9  0084               	movwf	4
  4876  05CA  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4877  05CB  0085               	movwf	5
  4878  05CC  0012               	moviw fsr0++
  4879  05CD  3A64               	xorlw	100
  4880  05CE  1903               	btfsc	3,2
  4881  05CF  2DE0               	goto	l2742
  4882  05D0  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  4883  05D1  0086               	movwf	6
  4884  05D2  3001               	movlw	1	; select bank2/3
  4885  05D3  0087               	movwf	7
  4886  05D4  3F40               	moviw [0]fsr1
  4887  05D5  00DC               	movwf	??_vfpfcnvrt^(0+128)
  4888  05D6  3F41               	moviw [1]fsr1
  4889  05D7  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  4890  05D8  085C               	movf	??_vfpfcnvrt^(0+128),w
  4891  05D9  0084               	movwf	4
  4892  05DA  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4893  05DB  0085               	movwf	5
  4894  05DC  0012               	moviw fsr0++
  4895  05DD  3A69               	xorlw	105
  4896  05DE  1D03               	btfss	3,2
  4897  05DF  2E1D               	goto	l2750
  4898  05E0                     l2742:	
  4899                           
  4900                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  4901  05E0  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  4902  05E1  0086               	movwf	6
  4903  05E2  3001               	movlw	1	; select bank2/3
  4904  05E3  0087               	movwf	7
  4905  05E4  3001               	movlw	1
  4906  05E5  0781               	addwf	1,f
  4907  05E6  3141               	addfsr 1,1
  4908  05E7  1803               	skipnc
  4909  05E8  0A81               	incf	1,f
  4910                           
  4911                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4912  05E9  085B               	movf	vfpfcnvrt@ap^(0+128),w
  4913  05EA  0086               	movwf	6
  4914  05EB  3001               	movlw	1	; select bank2/3
  4915  05EC  0087               	movwf	7
  4916  05ED  0801               	movf	1,w
  4917  05EE  0084               	movwf	4
  4918  05EF  3001               	movlw	1	; select bank2/3
  4919  05F0  0085               	movwf	5
  4920  05F1  3002               	movlw	2
  4921  05F2  0781               	addwf	1,f
  4922  05F3  3F00               	moviw [0]fsr0
  4923  05F4  00DC               	movwf	??_vfpfcnvrt^(0+128)
  4924  05F5  3F01               	moviw [1]fsr0
  4925  05F6  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  4926  05F7  085C               	movf	??_vfpfcnvrt^(0+128),w
  4927  05F8  00E1               	movwf	vfpfcnvrt@ll^(0+128)
  4928  05F9  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4929  05FA  00E2               	movwf	(vfpfcnvrt@ll+1)^(0+128)
  4930  05FB  0D89               	rlf	9,f
  4931  05FC  3B89               	subwfb	9,f
  4932  05FD  0989               	comf	9,f
  4933  05FE  00E3               	movwf	(vfpfcnvrt@ll+2)^(0+128)
  4934  05FF  00E4               	movwf	(vfpfcnvrt@ll+3)^(0+128)
  4935  0600  00E5               	movwf	(vfpfcnvrt@ll+4)^(0+128)
  4936  0601  00E6               	movwf	(vfpfcnvrt@ll+5)^(0+128)
  4937  0602  00E7               	movwf	(vfpfcnvrt@ll+6)^(0+128)
  4938  0603  00E8               	movwf	(vfpfcnvrt@ll+7)^(0+128)
  4939                           
  4940                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  4941  0604  0861               	movf	vfpfcnvrt@ll^(0+128),w
  4942  0605  00BC               	movwf	dtoa@d^(0+128)
  4943  0606  0862               	movf	(vfpfcnvrt@ll+1)^(0+128),w
  4944  0607  00BD               	movwf	(dtoa@d+1)^(0+128)
  4945  0608  0863               	movf	(vfpfcnvrt@ll+2)^(0+128),w
  4946  0609  00BE               	movwf	(dtoa@d+2)^(0+128)
  4947  060A  0864               	movf	(vfpfcnvrt@ll+3)^(0+128),w
  4948  060B  00BF               	movwf	(dtoa@d+3)^(0+128)
  4949  060C  0865               	movf	(vfpfcnvrt@ll+4)^(0+128),w
  4950  060D  00C0               	movwf	(dtoa@d+4)^(0+128)
  4951  060E  0866               	movf	(vfpfcnvrt@ll+5)^(0+128),w
  4952  060F  00C1               	movwf	(dtoa@d+5)^(0+128)
  4953  0610  0867               	movf	(vfpfcnvrt@ll+6)^(0+128),w
  4954  0611  00C2               	movwf	(dtoa@d+6)^(0+128)
  4955  0612  0868               	movf	(vfpfcnvrt@ll+7)^(0+128),w
  4956  0613  00C3               	movwf	(dtoa@d+7)^(0+128)
  4957  0614  086B               	movf	vfpfcnvrt@fp^(0+128),w
  4958  0615  3184  244A         	fcall	_dtoa
  4959  0617  0021               	movlb	1	; select bank1
  4960  0618  083D               	movf	(?_dtoa+1)^(0+128),w
  4961  0619  00DB               	movwf	(?_vfpfcnvrt+1)^(0+128)
  4962  061A  083C               	movf	?_dtoa^(0+128),w
  4963  061B  00DA               	movwf	?_vfpfcnvrt^(0+128)
  4964  061C  0008               	return
  4965  061D                     l2750:	
  4966                           
  4967                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1077:      
      +                             if (*fmt[0] == 'n') {
  4968  061D  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  4969  061E  0086               	movwf	6
  4970  061F  3001               	movlw	1	; select bank2/3
  4971  0620  0087               	movwf	7
  4972  0621  3F40               	moviw [0]fsr1
  4973  0622  00DC               	movwf	??_vfpfcnvrt^(0+128)
  4974  0623  3F41               	moviw [1]fsr1
  4975  0624  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  4976  0625  085C               	movf	??_vfpfcnvrt^(0+128),w
  4977  0626  0084               	movwf	4
  4978  0627  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4979  0628  0085               	movwf	5
  4980  0629  0012               	moviw fsr0++
  4981  062A  3A6E               	xorlw	110
  4982  062B  1D03               	btfss	3,2
  4983  062C  2E51               	goto	l2762
  4984                           
  4985                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1078:      
      +                                 ++*fmt;
  4986  062D  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  4987  062E  0086               	movwf	6
  4988  062F  3001               	movlw	1	; select bank2/3
  4989  0630  0087               	movwf	7
  4990  0631  3001               	movlw	1
  4991  0632  0781               	addwf	1,f
  4992  0633  3141               	addfsr 1,1
  4993  0634  1803               	skipnc
  4994  0635  0A81               	incf	1,f
  4995                           
  4996                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1079:      
      +                                 vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
  4997  0636  085B               	movf	vfpfcnvrt@ap^(0+128),w
  4998  0637  0086               	movwf	6
  4999  0638  3001               	movlw	1	; select bank2/3
  5000  0639  0087               	movwf	7
  5001  063A  0801               	movf	1,w
  5002  063B  0084               	movwf	4
  5003  063C  3001               	movlw	1	; select bank2/3
  5004  063D  0085               	movwf	5
  5005  063E  3002               	movlw	2
  5006  063F  0781               	addwf	1,f
  5007  0640  3F00               	moviw [0]fsr0
  5008  0641  00E9               	movwf	vfpfcnvrt@vp^(0+128)
  5009  0642  3F01               	moviw [1]fsr0
  5010  0643  00EA               	movwf	(vfpfcnvrt@vp+1)^(0+128)
  5011                           
  5012                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1080:      
      +                                 *(int *)vp = nout;
  5013  0644  0869               	movf	vfpfcnvrt@vp^(0+128),w
  5014  0645  0086               	movwf	6
  5015  0646  086A               	movf	(vfpfcnvrt@vp+1)^(0+128),w
  5016  0647  0087               	movwf	7
  5017  0648  0022               	movlb	2	; select bank2
  5018  0649  084D               	movf	_nout^(0+256),w
  5019  064A  3FC0               	movwi [0]fsr1
  5020  064B  084E               	movf	(_nout+1)^(0+256),w
  5021  064C  3FC1               	movwi [1]fsr1
  5022  064D                     l2758:	
  5023                           
  5024                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1081:      
      +                                 return 0;
  5025  064D  0021               	movlb	1	; select bank1
  5026  064E  01DA               	clrf	?_vfpfcnvrt^(0+128)
  5027  064F  01DB               	clrf	(?_vfpfcnvrt+1)^(0+128)
  5028  0650  0008               	return
  5029  0651                     l2762:	
  5030                           
  5031                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  5032  0651  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5033  0652  0086               	movwf	6
  5034  0653  3001               	movlw	1	; select bank2/3
  5035  0654  0087               	movwf	7
  5036  0655  3F40               	moviw [0]fsr1
  5037  0656  00DC               	movwf	??_vfpfcnvrt^(0+128)
  5038  0657  3F41               	moviw [1]fsr1
  5039  0658  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5040  0659  085C               	movf	??_vfpfcnvrt^(0+128),w
  5041  065A  0084               	movwf	4
  5042  065B  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5043  065C  0085               	movwf	5
  5044  065D  0012               	moviw fsr0++
  5045  065E  3A25               	xorlw	37
  5046  065F  1D03               	btfss	3,2
  5047  0660  2E7A               	goto	l2772
  5048                           
  5049                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  5050  0661  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5051  0662  0086               	movwf	6
  5052  0663  3001               	movlw	1	; select bank2/3
  5053  0664  0087               	movwf	7
  5054  0665  3001               	movlw	1
  5055  0666  0781               	addwf	1,f
  5056  0667  3141               	addfsr 1,1
  5057  0668  1803               	skipnc
  5058  0669  0A81               	incf	1,f
  5059                           
  5060                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  5061  066A  3025               	movlw	37
  5062  066B  00A2               	movwf	fputc@c^(0+128)
  5063  066C  3000               	movlw	0
  5064  066D  00A3               	movwf	(fputc@c^(0+128)+1)
  5065  066E  086B               	movf	vfpfcnvrt@fp^(0+128),w
  5066  066F  00DC               	movwf	??_vfpfcnvrt^(0+128)
  5067  0670  085C               	movf	??_vfpfcnvrt^(0+128),w
  5068  0671  00A4               	movwf	fputc@fp^(0+128)
  5069  0672  318C  249D         	fcall	_fputc
  5070  0674                     l2768:	
  5071                           
  5072                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  5073  0674  3001               	movlw	1
  5074  0675  0021               	movlb	1	; select bank1
  5075  0676  00DA               	movwf	?_vfpfcnvrt^(0+128)
  5076  0677  3000               	movlw	0
  5077  0678  00DB               	movwf	(?_vfpfcnvrt^(0+128)+1)
  5078  0679  0008               	return
  5079  067A                     l2772:	
  5080                           
  5081                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  5082  067A  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5083  067B  0086               	movwf	6
  5084  067C  3001               	movlw	1	; select bank2/3
  5085  067D  0087               	movwf	7
  5086  067E  3001               	movlw	1
  5087  067F  0781               	addwf	1,f
  5088  0680  3141               	addfsr 1,1
  5089  0681  1803               	skipnc
  5090  0682  0A81               	incf	1,f
  5091  0683  2E4D               	goto	l2758
  5092  0684                     l2778:	
  5093                           
  5094                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  5095  0684  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5096  0685  0086               	movwf	6
  5097  0686  3001               	movlw	1	; select bank2/3
  5098  0687  0087               	movwf	7
  5099  0688  3F40               	moviw [0]fsr1
  5100  0689  00DC               	movwf	??_vfpfcnvrt^(0+128)
  5101  068A  3F41               	moviw [1]fsr1
  5102  068B  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5103  068C  085C               	movf	??_vfpfcnvrt^(0+128),w
  5104  068D  0084               	movwf	4
  5105  068E  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5106  068F  0085               	movwf	5
  5107  0690  0800               	movf	0,w	;code access
  5108  0691  00DE               	movwf	(??_vfpfcnvrt+2)^(0+128)
  5109  0692  01DF               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  5110  0693  085E               	movf	(??_vfpfcnvrt+2)^(0+128),w
  5111  0694  00A2               	movwf	fputc@c^(0+128)
  5112  0695  085F               	movf	(??_vfpfcnvrt+3)^(0+128),w
  5113  0696  00A3               	movwf	(fputc@c+1)^(0+128)
  5114  0697  086B               	movf	vfpfcnvrt@fp^(0+128),w
  5115  0698  00E0               	movwf	(??_vfpfcnvrt+4)^(0+128)
  5116  0699  0860               	movf	(??_vfpfcnvrt+4)^(0+128),w
  5117  069A  00A4               	movwf	fputc@fp^(0+128)
  5118  069B  318C  249D  3185   	fcall	_fputc
  5119                           
  5120                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  5121  069E  0021               	movlb	1	; select bank1
  5122  069F  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5123  06A0  0086               	movwf	6
  5124  06A1  3001               	movlw	1	; select bank2/3
  5125  06A2  0087               	movwf	7
  5126  06A3  3001               	movlw	1
  5127  06A4  0781               	addwf	1,f
  5128  06A5  3141               	addfsr 1,1
  5129  06A6  1803               	skipnc
  5130  06A7  0A81               	incf	1,f
  5131  06A8  2E74               	goto	l2768
  5132  06A9                     __end_of_vfpfcnvrt:	
  5133                           
  5134                           	psect	text9
  5135  044A                     __ptext9:	
  5136 ;; *************** function _dtoa *****************
  5137 ;; Defined at:
  5138 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5139 ;; Parameters:    Size  Location     Type
  5140 ;;  fp              1    wreg     PTR struct _IO_FILE
  5141 ;;		 -> NULL(0), 
  5142 ;;  d               8   28[BANK1 ] long long 
  5143 ;; Auto vars:     Size  Location     Type
  5144 ;;  fp              1   43[BANK1 ] PTR struct _IO_FILE
  5145 ;;		 -> NULL(0), 
  5146 ;;  n               8   48[BANK1 ] long long 
  5147 ;;  i               2   56[BANK1 ] int 
  5148 ;;  s               2   46[BANK1 ] int 
  5149 ;;  w               2   44[BANK1 ] int 
  5150 ;;  p               2   41[BANK1 ] int 
  5151 ;; Return value:  Size  Location     Type
  5152 ;;                  2   28[BANK1 ] int 
  5153 ;; Registers used:
  5154 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5155 ;; Tracked objects:
  5156 ;;		On entry : 0/0
  5157 ;;		On exit  : 0/0
  5158 ;;		Unchanged: 0/0
  5159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5160 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  5161 ;;      Locals:         0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0
  5162 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5163 ;;      Totals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0
  5164 ;;Total ram usage:       30 bytes
  5165 ;; Hardware stack levels used:    1
  5166 ;; Hardware stack levels required when called:   11
  5167 ;; This function calls:
  5168 ;;		___aodiv
  5169 ;;		___aomod
  5170 ;;		_abs
  5171 ;;		_pad
  5172 ;; This function is called by:
  5173 ;;		_vfpfcnvrt
  5174 ;; This function uses a non-reentrant model
  5175 ;;
  5176                           
  5177                           
  5178                           ;psect for function _dtoa
  5179  044A                     _dtoa:	
  5180                           
  5181                           ;incstack = 0
  5182                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5183                           ;dtoa@fp stored from wreg
  5184  044A  0021               	movlb	1	; select bank1
  5185  044B  00CB               	movwf	dtoa@fp^(0+128)
  5186                           
  5187                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  5188  044C  083C               	movf	dtoa@d^(0+128),w
  5189  044D  00D0               	movwf	dtoa@n^(0+128)
  5190  044E  083D               	movf	(dtoa@d+1)^(0+128),w
  5191  044F  00D1               	movwf	(dtoa@n+1)^(0+128)
  5192  0450  083E               	movf	(dtoa@d+2)^(0+128),w
  5193  0451  00D2               	movwf	(dtoa@n+2)^(0+128)
  5194  0452  083F               	movf	(dtoa@d+3)^(0+128),w
  5195  0453  00D3               	movwf	(dtoa@n+3)^(0+128)
  5196  0454  0840               	movf	(dtoa@d+4)^(0+128),w
  5197  0455  00D4               	movwf	(dtoa@n+4)^(0+128)
  5198  0456  0841               	movf	(dtoa@d+5)^(0+128),w
  5199  0457  00D5               	movwf	(dtoa@n+5)^(0+128)
  5200  0458  0842               	movf	(dtoa@d+6)^(0+128),w
  5201  0459  00D6               	movwf	(dtoa@n+6)^(0+128)
  5202  045A  0843               	movf	(dtoa@d+7)^(0+128),w
  5203  045B  00D7               	movwf	(dtoa@n+7)^(0+128)
  5204                           
  5205                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  5206  045C  30D0               	movlw	low dtoa@n
  5207  045D  0086               	movwf	6
  5208  045E  3000               	movlw	high dtoa@n
  5209  045F  0087               	movwf	7
  5210  0460  3F47               	moviw [7]fsr1
  5211  0461  00C4               	movwf	??_dtoa^(0+128)
  5212  0462  1FC4               	btfss	??_dtoa^(0+128),7
  5213  0463  2C66               	goto	u2240
  5214  0464  3001               	movlw	1
  5215  0465  2C67               	goto	u2250
  5216  0466                     u2240:	
  5217  0466  3000               	movlw	0
  5218  0467                     u2250:	
  5219  0467  0021               	movlb	1	; select bank1
  5220  0468  00C5               	movwf	(??_dtoa+1)^(0+128)
  5221  0469  01C6               	clrf	((??_dtoa+1)^(0+128)+1)
  5222  046A  0845               	movf	(??_dtoa+1)^(0+128),w
  5223  046B  00CE               	movwf	dtoa@s^(0+128)
  5224  046C  0846               	movf	(??_dtoa+2)^(0+128),w
  5225  046D  00CF               	movwf	(dtoa@s+1)^(0+128)
  5226                           
  5227                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  5228  046E  084E               	movf	dtoa@s^(0+128),w
  5229  046F  044F               	iorwf	(dtoa@s+1)^(0+128),w
  5230  0470  1903               	btfsc	3,2
  5231  0471  2C90               	goto	l451
  5232                           
  5233                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  5234  0472  09D0               	comf	dtoa@n^(0+128),f
  5235  0473  09D1               	comf	(dtoa@n+1)^(0+128),f
  5236  0474  09D2               	comf	(dtoa@n+2)^(0+128),f
  5237  0475  09D3               	comf	(dtoa@n+3)^(0+128),f
  5238  0476  09D4               	comf	(dtoa@n+4)^(0+128),f
  5239  0477  09D5               	comf	(dtoa@n+5)^(0+128),f
  5240  0478  09D6               	comf	(dtoa@n+6)^(0+128),f
  5241  0479  09D7               	comf	(dtoa@n+7)^(0+128),f
  5242  047A  0AD0               	incf	dtoa@n^(0+128),f
  5243  047B  1D03               	skipz
  5244  047C  2C90               	goto	l451
  5245  047D  0AD1               	incf	(dtoa@n+1)^(0+128),f
  5246  047E  1D03               	skipz
  5247  047F  2C90               	goto	l451
  5248  0480  0AD2               	incf	(dtoa@n+2)^(0+128),f
  5249  0481  1D03               	skipz
  5250  0482  2C90               	goto	l451
  5251  0483  0AD3               	incf	(dtoa@n+3)^(0+128),f
  5252  0484  1D03               	skipz
  5253  0485  2C90               	goto	l451
  5254  0486  0AD4               	incf	(dtoa@n+4)^(0+128),f
  5255  0487  1D03               	skipz
  5256  0488  2C90               	goto	l451
  5257  0489  0AD5               	incf	(dtoa@n+5)^(0+128),f
  5258  048A  1D03               	skipz
  5259  048B  2C90               	goto	l451
  5260  048C  0AD6               	incf	(dtoa@n+6)^(0+128),f
  5261  048D  1D03               	skipz
  5262  048E  2C90               	goto	l451
  5263  048F  0AD7               	incf	(dtoa@n+7)^(0+128),f
  5264  0490                     l451:	
  5265                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 284:     }
  5266                           
  5267                           
  5268                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  5269  0490  0020               	movlb	0	; select bank0
  5270  0491  1BCC               	btfsc	_prec+1,7
  5271  0492  2C97               	goto	l452
  5272                           
  5273                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  5274  0493  30FD               	movlw	253
  5275  0494  05CD               	andwf	_flags,f
  5276  0495  30FF               	movlw	255
  5277  0496  05CE               	andwf	_flags+1,f
  5278  0497                     l452:	
  5279                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 289:     }
  5280                           
  5281                           
  5282                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  5283  0497  084C               	movf	_prec+1,w
  5284  0498  3A80               	xorlw	128
  5285  0499  0021               	movlb	1	; select bank1
  5286  049A  00C4               	movwf	??_dtoa^(0+128)
  5287  049B  3080               	movlw	128
  5288  049C  0244               	subwf	??_dtoa^(0+128),w
  5289  049D  1D03               	skipz
  5290  049E  2CA2               	goto	u2295
  5291  049F  3001               	movlw	1
  5292  04A0  0020               	movlb	0	; select bank0
  5293  04A1  024B               	subwf	_prec,w
  5294  04A2                     u2295:	
  5295  04A2  1803               	skipnc
  5296  04A3  2CAA               	goto	l2240
  5297  04A4  3001               	movlw	1
  5298  04A5  0021               	movlb	1	; select bank1
  5299  04A6  00C9               	movwf	dtoa@p^(0+128)
  5300  04A7  3000               	movlw	0
  5301  04A8  00CA               	movwf	(dtoa@p^(0+128)+1)
  5302  04A9  2CB2               	goto	l456
  5303  04AA                     l2240:	
  5304  04AA  0020               	movlb	0	; select bank0
  5305  04AB  084C               	movf	_prec+1,w
  5306  04AC  0021               	movlb	1	; select bank1
  5307  04AD  00CA               	movwf	(dtoa@p+1)^(0+128)
  5308  04AE  0020               	movlb	0	; select bank0
  5309  04AF  084B               	movf	_prec,w
  5310  04B0  0021               	movlb	1	; select bank1
  5311  04B1  00C9               	movwf	dtoa@p^(0+128)
  5312  04B2                     l456:	
  5313                           
  5314                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  5315  04B2  0020               	movlb	0	; select bank0
  5316  04B3  084A               	movf	_width+1,w
  5317  04B4  0021               	movlb	1	; select bank1
  5318  04B5  00CD               	movwf	(dtoa@w+1)^(0+128)
  5319  04B6  0020               	movlb	0	; select bank0
  5320  04B7  0849               	movf	_width,w
  5321  04B8  0021               	movlb	1	; select bank1
  5322  04B9  00CC               	movwf	dtoa@w^(0+128)
  5323                           
  5324                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  5325  04BA  084E               	movf	dtoa@s^(0+128),w
  5326  04BB  044F               	iorwf	(dtoa@s+1)^(0+128),w
  5327  04BC  1D03               	btfss	3,2
  5328  04BD  2CC1               	goto	l2246
  5329  04BE  0020               	movlb	0	; select bank0
  5330  04BF  1D4D               	btfss	_flags,2
  5331  04C0  2CC6               	goto	l457
  5332  04C1                     l2246:	
  5333                           
  5334                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  5335  04C1  30FF               	movlw	255
  5336  04C2  0021               	movlb	1	; select bank1
  5337  04C3  07CC               	addwf	dtoa@w^(0+128),f
  5338  04C4  30FF               	movlw	255
  5339  04C5  3DCD               	addwfc	(dtoa@w+1)^(0+128),f
  5340  04C6                     l457:	
  5341                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 294:     }
  5342                           
  5343                           
  5344                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  5345  04C6  301F               	movlw	31
  5346  04C7  0021               	movlb	1	; select bank1
  5347  04C8  00D8               	movwf	dtoa@i^(0+128)
  5348  04C9  3000               	movlw	0
  5349  04CA  00D9               	movwf	(dtoa@i^(0+128)+1)
  5350                           
  5351                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  5352  04CB  0023               	movlb	3	; select bank3
  5353  04CC  01BF               	clrf	(_dbuf^(0+384)+31)
  5354                           
  5355                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5356  04CD  2D5C               	goto	l460
  5357  04CE                     l2260:	
  5358  04CE  0021               	movlb	1	; select bank1
  5359  04CF  0850               	movf	dtoa@n^(0+128),w
  5360  04D0  0451               	iorwf	(dtoa@n+1)^(0+128),w
  5361  04D1  0452               	iorwf	(dtoa@n+2)^(0+128),w
  5362  04D2  0453               	iorwf	(dtoa@n+3)^(0+128),w
  5363  04D3  0454               	iorwf	(dtoa@n+4)^(0+128),w
  5364  04D4  0455               	iorwf	(dtoa@n+5)^(0+128),w
  5365  04D5  0456               	iorwf	(dtoa@n+6)^(0+128),w
  5366  04D6  0457               	iorwf	(dtoa@n+7)^(0+128),w
  5367  04D7  1D03               	skipz
  5368  04D8  2CF3               	goto	l2250
  5369  04D9  084A               	movf	(dtoa@p+1)^(0+128),w
  5370  04DA  3A80               	xorlw	128
  5371  04DB  00C4               	movwf	??_dtoa^(0+128)
  5372  04DC  3080               	movlw	128
  5373  04DD  0244               	subwf	??_dtoa^(0+128),w
  5374  04DE  1D03               	skipz
  5375  04DF  2CE2               	goto	u2345
  5376  04E0  3001               	movlw	1
  5377  04E1  0249               	subwf	dtoa@p^(0+128),w
  5378  04E2                     u2345:	
  5379  04E2  1803               	skipnc
  5380  04E3  2CF3               	goto	l2250
  5381  04E4  0021               	movlb	1	; select bank1
  5382  04E5  084D               	movf	(dtoa@w+1)^(0+128),w
  5383  04E6  3A80               	xorlw	128
  5384  04E7  00C4               	movwf	??_dtoa^(0+128)
  5385  04E8  3080               	movlw	128
  5386  04E9  0244               	subwf	??_dtoa^(0+128),w
  5387  04EA  1D03               	skipz
  5388  04EB  2CEE               	goto	u2355
  5389  04EC  3001               	movlw	1
  5390  04ED  024C               	subwf	dtoa@w^(0+128),w
  5391  04EE                     u2355:	
  5392  04EE  1C03               	skipc
  5393  04EF  2D68               	goto	l2268
  5394  04F0  0020               	movlb	0	; select bank0
  5395  04F1  1CCD               	btfss	_flags,1
  5396  04F2  2D68               	goto	l2268
  5397  04F3                     l2250:	
  5398                           
  5399                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  5400  04F3  30FF               	movlw	255
  5401  04F4  0021               	movlb	1	; select bank1
  5402  04F5  07D8               	addwf	dtoa@i^(0+128),f
  5403  04F6  30FF               	movlw	255
  5404  04F7  3DD9               	addwfc	(dtoa@i+1)^(0+128),f
  5405                           
  5406                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  5407  04F8  300A               	movlw	10
  5408  04F9  00A0               	movwf	___aomod@divisor^(0+128)
  5409  04FA  01A1               	clrf	(___aomod@divisor+1)^(0+128)
  5410  04FB  01A2               	clrf	(___aomod@divisor+2)^(0+128)
  5411  04FC  01A3               	clrf	(___aomod@divisor+3)^(0+128)
  5412  04FD  01A4               	clrf	(___aomod@divisor+4)^(0+128)
  5413  04FE  01A5               	clrf	(___aomod@divisor+5)^(0+128)
  5414  04FF  01A6               	clrf	(___aomod@divisor+6)^(0+128)
  5415  0500  01A7               	clrf	(___aomod@divisor+7)^(0+128)
  5416  0501  0850               	movf	dtoa@n^(0+128),w
  5417  0502  00A8               	movwf	___aomod@dividend^(0+128)
  5418  0503  0851               	movf	(dtoa@n+1)^(0+128),w
  5419  0504  00A9               	movwf	(___aomod@dividend+1)^(0+128)
  5420  0505  0852               	movf	(dtoa@n+2)^(0+128),w
  5421  0506  00AA               	movwf	(___aomod@dividend+2)^(0+128)
  5422  0507  0853               	movf	(dtoa@n+3)^(0+128),w
  5423  0508  00AB               	movwf	(___aomod@dividend+3)^(0+128)
  5424  0509  0854               	movf	(dtoa@n+4)^(0+128),w
  5425  050A  00AC               	movwf	(___aomod@dividend+4)^(0+128)
  5426  050B  0855               	movf	(dtoa@n+5)^(0+128),w
  5427  050C  00AD               	movwf	(___aomod@dividend+5)^(0+128)
  5428  050D  0856               	movf	(dtoa@n+6)^(0+128),w
  5429  050E  00AE               	movwf	(___aomod@dividend+6)^(0+128)
  5430  050F  0857               	movf	(dtoa@n+7)^(0+128),w
  5431  0510  00AF               	movwf	(___aomod@dividend+7)^(0+128)
  5432  0511  318F  2721  3184   	fcall	___aomod
  5433  0514  0021               	movlb	1	; select bank1
  5434  0515  0821               	movf	(?___aomod+1)^(0+128),w
  5435  0516  00B4               	movwf	(abs@a+1)^(0+128)
  5436  0517  0820               	movf	?___aomod^(0+128),w
  5437  0518  00B3               	movwf	abs@a^(0+128)
  5438  0519  318A  22EB  3184   	fcall	_abs
  5439  051C  0021               	movlb	1	; select bank1
  5440  051D  0833               	movf	?_abs^(0+128),w
  5441  051E  3E30               	addlw	48
  5442  051F  00C4               	movwf	??_dtoa^(0+128)
  5443  0520  0858               	movf	dtoa@i^(0+128),w
  5444  0521  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5445  0522  0086               	movwf	6
  5446  0523  3001               	movlw	1	; select bank3/4
  5447  0524  0087               	movwf	7
  5448  0525  0844               	movf	??_dtoa^(0+128),w
  5449  0526  0081               	movwf	1
  5450                           
  5451                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  5452  0527  30FF               	movlw	255
  5453  0528  07C9               	addwf	dtoa@p^(0+128),f
  5454  0529  30FF               	movlw	255
  5455  052A  3DCA               	addwfc	(dtoa@p+1)^(0+128),f
  5456                           
  5457                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  5458  052B  30FF               	movlw	255
  5459  052C  07CC               	addwf	dtoa@w^(0+128),f
  5460  052D  30FF               	movlw	255
  5461  052E  3DCD               	addwfc	(dtoa@w+1)^(0+128),f
  5462                           
  5463                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  5464  052F  300A               	movlw	10
  5465  0530  00A0               	movwf	___aodiv@divisor^(0+128)
  5466  0531  01A1               	clrf	(___aodiv@divisor+1)^(0+128)
  5467  0532  01A2               	clrf	(___aodiv@divisor+2)^(0+128)
  5468  0533  01A3               	clrf	(___aodiv@divisor+3)^(0+128)
  5469  0534  01A4               	clrf	(___aodiv@divisor+4)^(0+128)
  5470  0535  01A5               	clrf	(___aodiv@divisor+5)^(0+128)
  5471  0536  01A6               	clrf	(___aodiv@divisor+6)^(0+128)
  5472  0537  01A7               	clrf	(___aodiv@divisor+7)^(0+128)
  5473  0538  0850               	movf	dtoa@n^(0+128),w
  5474  0539  00A8               	movwf	___aodiv@dividend^(0+128)
  5475  053A  0851               	movf	(dtoa@n+1)^(0+128),w
  5476  053B  00A9               	movwf	(___aodiv@dividend+1)^(0+128)
  5477  053C  0852               	movf	(dtoa@n+2)^(0+128),w
  5478  053D  00AA               	movwf	(___aodiv@dividend+2)^(0+128)
  5479  053E  0853               	movf	(dtoa@n+3)^(0+128),w
  5480  053F  00AB               	movwf	(___aodiv@dividend+3)^(0+128)
  5481  0540  0854               	movf	(dtoa@n+4)^(0+128),w
  5482  0541  00AC               	movwf	(___aodiv@dividend+4)^(0+128)
  5483  0542  0855               	movf	(dtoa@n+5)^(0+128),w
  5484  0543  00AD               	movwf	(___aodiv@dividend+5)^(0+128)
  5485  0544  0856               	movf	(dtoa@n+6)^(0+128),w
  5486  0545  00AE               	movwf	(___aodiv@dividend+6)^(0+128)
  5487  0546  0857               	movf	(dtoa@n+7)^(0+128),w
  5488  0547  00AF               	movwf	(___aodiv@dividend+7)^(0+128)
  5489  0548  3186  26A9  3184   	fcall	___aodiv
  5490  054B  0021               	movlb	1	; select bank1
  5491  054C  0820               	movf	?___aodiv^(0+128),w
  5492  054D  00D0               	movwf	dtoa@n^(0+128)
  5493  054E  0821               	movf	(?___aodiv+1)^(0+128),w
  5494  054F  00D1               	movwf	(dtoa@n+1)^(0+128)
  5495  0550  0822               	movf	(?___aodiv+2)^(0+128),w
  5496  0551  00D2               	movwf	(dtoa@n+2)^(0+128)
  5497  0552  0823               	movf	(?___aodiv+3)^(0+128),w
  5498  0553  00D3               	movwf	(dtoa@n+3)^(0+128)
  5499  0554  0824               	movf	(?___aodiv+4)^(0+128),w
  5500  0555  00D4               	movwf	(dtoa@n+4)^(0+128)
  5501  0556  0825               	movf	(?___aodiv+5)^(0+128),w
  5502  0557  00D5               	movwf	(dtoa@n+5)^(0+128)
  5503  0558  0826               	movf	(?___aodiv+6)^(0+128),w
  5504  0559  00D6               	movwf	(dtoa@n+6)^(0+128)
  5505  055A  0827               	movf	(?___aodiv+7)^(0+128),w
  5506  055B  00D7               	movwf	(dtoa@n+7)^(0+128)
  5507  055C                     l460:	
  5508                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 305:     }
  5509                           
  5510                           
  5511                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5512  055C  0021               	movlb	1	; select bank1
  5513  055D  0859               	movf	(dtoa@i+1)^(0+128),w
  5514  055E  3A80               	xorlw	128
  5515  055F  00C4               	movwf	??_dtoa^(0+128)
  5516  0560  3080               	movlw	128
  5517  0561  0244               	subwf	??_dtoa^(0+128),w
  5518  0562  1D03               	skipz
  5519  0563  2D66               	goto	u2325
  5520  0564  3001               	movlw	1
  5521  0565  0258               	subwf	dtoa@i^(0+128),w
  5522  0566                     u2325:	
  5523  0566  1803               	btfsc	3,0
  5524  0567  2CCE               	goto	l2260
  5525  0568                     l2268:	
  5526                           
  5527                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  5528  0568  0021               	movlb	1	; select bank1
  5529  0569  084E               	movf	dtoa@s^(0+128),w
  5530  056A  044F               	iorwf	(dtoa@s+1)^(0+128),w
  5531  056B  1D03               	btfss	3,2
  5532  056C  2D70               	goto	l2272
  5533  056D  0020               	movlb	0	; select bank0
  5534  056E  1D4D               	btfss	_flags,2
  5535  056F  2D88               	goto	l2282
  5536  0570                     l2272:	
  5537                           
  5538                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  5539  0570  30FF               	movlw	255
  5540  0571  0021               	movlb	1	; select bank1
  5541  0572  07D8               	addwf	dtoa@i^(0+128),f
  5542  0573  30FF               	movlw	255
  5543  0574  3DD9               	addwfc	(dtoa@i+1)^(0+128),f
  5544                           
  5545                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  5546  0575  084E               	movf	dtoa@s^(0+128),w
  5547  0576  044F               	iorwf	(dtoa@s+1)^(0+128),w
  5548  0577  1D03               	btfss	3,2
  5549  0578  2D7B               	goto	l2278
  5550  0579  302B               	movlw	43
  5551  057A  2D7C               	goto	L1
  5552  057B                     l2278:	
  5553  057B  302D               	movlw	45
  5554  057C                     L1:	
  5555  057C  00C7               	movwf	_dtoa$687^(0+128)
  5556  057D  3000               	movlw	0
  5557  057E  00C8               	movwf	(_dtoa$687^(0+128)+1)
  5558  057F  0847               	movf	_dtoa$687^(0+128),w
  5559  0580  00C4               	movwf	??_dtoa^(0+128)
  5560  0581  0858               	movf	dtoa@i^(0+128),w
  5561  0582  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5562  0583  0086               	movwf	6
  5563  0584  3001               	movlw	1	; select bank3/4
  5564  0585  0087               	movwf	7
  5565  0586  0844               	movf	??_dtoa^(0+128),w
  5566  0587  0081               	movwf	1
  5567  0588                     l2282:	
  5568                           
  5569                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  5570  0588  0021               	movlb	1	; select bank1
  5571  0589  0858               	movf	dtoa@i^(0+128),w
  5572  058A  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5573  058B  00C4               	movwf	??_dtoa^(0+128)
  5574  058C  0844               	movf	??_dtoa^(0+128),w
  5575  058D  00B3               	movwf	pad@buf^(0+128)
  5576  058E  084D               	movf	(dtoa@w+1)^(0+128),w
  5577  058F  00B5               	movwf	(pad@p+1)^(0+128)
  5578  0590  084C               	movf	dtoa@w^(0+128),w
  5579  0591  00B4               	movwf	pad@p^(0+128)
  5580  0592  084B               	movf	dtoa@fp^(0+128),w
  5581  0593  3187  27A0         	fcall	_pad
  5582  0595  0021               	movlb	1	; select bank1
  5583  0596  0834               	movf	(?_pad+1)^(0+128),w
  5584  0597  00BD               	movwf	(?_dtoa+1)^(0+128)
  5585  0598  0833               	movf	?_pad^(0+128),w
  5586  0599  00BC               	movwf	?_dtoa^(0+128)
  5587  059A  0008               	return
  5588  059B                     __end_of_dtoa:	
  5589                           
  5590                           	psect	text10
  5591  07A0                     __ptext10:	
  5592 ;; *************** function _pad *****************
  5593 ;; Defined at:
  5594 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5595 ;; Parameters:    Size  Location     Type
  5596 ;;  fp              1    wreg     PTR struct _IO_FILE
  5597 ;;		 -> NULL(0), 
  5598 ;;  buf             1   19[BANK1 ] PTR unsigned char 
  5599 ;;		 -> dbuf(32), 
  5600 ;;  p               2   20[BANK1 ] int 
  5601 ;; Auto vars:     Size  Location     Type
  5602 ;;  fp              1   27[BANK1 ] PTR struct _IO_FILE
  5603 ;;		 -> NULL(0), 
  5604 ;;  w               2   25[BANK1 ] int 
  5605 ;;  i               2   23[BANK1 ] int 
  5606 ;; Return value:  Size  Location     Type
  5607 ;;                  2   19[BANK1 ] int 
  5608 ;; Registers used:
  5609 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5610 ;; Tracked objects:
  5611 ;;		On entry : 0/0
  5612 ;;		On exit  : 0/0
  5613 ;;		Unchanged: 0/0
  5614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5615 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5616 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  5617 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5618 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  5619 ;;Total ram usage:        9 bytes
  5620 ;; Hardware stack levels used:    1
  5621 ;; Hardware stack levels required when called:   10
  5622 ;; This function calls:
  5623 ;;		_fputc
  5624 ;;		_fputs
  5625 ;;		_strlen
  5626 ;; This function is called by:
  5627 ;;		_dtoa
  5628 ;; This function uses a non-reentrant model
  5629 ;;
  5630                           
  5631                           
  5632                           ;psect for function _pad
  5633  07A0                     _pad:	
  5634                           
  5635                           ;incstack = 0
  5636                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5637                           ;pad@fp stored from wreg
  5638  07A0  0021               	movlb	1	; select bank1
  5639  07A1  00BB               	movwf	pad@fp^(0+128)
  5640                           
  5641                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  5642  07A2  0020               	movlb	0	; select bank0
  5643  07A3  1C4D               	btfss	_flags,0
  5644  07A4  2FB1               	goto	l2124
  5645                           
  5646                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  5647  07A5  0021               	movlb	1	; select bank1
  5648  07A6  0833               	movf	pad@buf^(0+128),w
  5649  07A7  00AA               	movwf	fputs@s^(0+128)
  5650  07A8  3001               	movlw	1
  5651  07A9  00AB               	movwf	(fputs@s+1)^(0+128)
  5652  07AA  083B               	movf	pad@fp^(0+128),w
  5653  07AB  00B6               	movwf	??_pad^(0+128)
  5654  07AC  0836               	movf	??_pad^(0+128),w
  5655  07AD  00AC               	movwf	fputs@fp^(0+128)
  5656  07AE  318B  23D0  3187   	fcall	_fputs
  5657  07B1                     l2124:	
  5658                           
  5659                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  5660  07B1  0021               	movlb	1	; select bank1
  5661  07B2  1BB5               	btfsc	(pad@p+1)^(0+128),7
  5662  07B3  2FB9               	goto	l2128
  5663  07B4  0835               	movf	(pad@p+1)^(0+128),w
  5664  07B5  00BA               	movwf	(pad@w+1)^(0+128)
  5665  07B6  0834               	movf	pad@p^(0+128),w
  5666  07B7  00B9               	movwf	pad@w^(0+128)
  5667  07B8  2FBB               	goto	l443
  5668  07B9                     l2128:	
  5669  07B9  01B9               	clrf	pad@w^(0+128)
  5670  07BA  01BA               	clrf	(pad@w+1)^(0+128)
  5671  07BB                     l443:	
  5672                           
  5673                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  5674  07BB  01B7               	clrf	pad@i^(0+128)
  5675  07BC  01B8               	clrf	(pad@i+1)^(0+128)
  5676  07BD                     l2134:	
  5677                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  5678                           
  5679                           
  5680                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  5681  07BD  0838               	movf	(pad@i+1)^(0+128),w
  5682  07BE  3A80               	xorlw	128
  5683  07BF  00B6               	movwf	??_pad^(0+128)
  5684  07C0  083A               	movf	(pad@w+1)^(0+128),w
  5685  07C1  3A80               	xorlw	128
  5686  07C2  0236               	subwf	??_pad^(0+128),w
  5687  07C3  1D03               	skipz
  5688  07C4  2FC7               	goto	u1975
  5689  07C5  0839               	movf	pad@w^(0+128),w
  5690  07C6  0237               	subwf	pad@i^(0+128),w
  5691  07C7                     u1975:	
  5692  07C7  1803               	btfsc	3,0
  5693  07C8  2FDB               	goto	l446
  5694                           
  5695                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  5696  07C9  3020               	movlw	32
  5697  07CA  0021               	movlb	1	; select bank1
  5698  07CB  00A2               	movwf	fputc@c^(0+128)
  5699  07CC  3000               	movlw	0
  5700  07CD  00A3               	movwf	(fputc@c^(0+128)+1)
  5701  07CE  083B               	movf	pad@fp^(0+128),w
  5702  07CF  00B6               	movwf	??_pad^(0+128)
  5703  07D0  0836               	movf	??_pad^(0+128),w
  5704  07D1  00A4               	movwf	fputc@fp^(0+128)
  5705  07D2  318C  249D  3187   	fcall	_fputc
  5706                           
  5707                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  5708  07D5  3001               	movlw	1
  5709  07D6  0021               	movlb	1	; select bank1
  5710  07D7  07B7               	addwf	pad@i^(0+128),f
  5711  07D8  3000               	movlw	0
  5712  07D9  3DB8               	addwfc	(pad@i+1)^(0+128),f
  5713  07DA  2FBD               	goto	l2134
  5714  07DB                     l446:	
  5715                           
  5716                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  5717  07DB  0020               	movlb	0	; select bank0
  5718  07DC  184D               	btfsc	_flags,0
  5719  07DD  2FEA               	goto	l2138
  5720                           
  5721                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  5722  07DE  0021               	movlb	1	; select bank1
  5723  07DF  0833               	movf	pad@buf^(0+128),w
  5724  07E0  00AA               	movwf	fputs@s^(0+128)
  5725  07E1  3001               	movlw	1
  5726  07E2  00AB               	movwf	(fputs@s+1)^(0+128)
  5727  07E3  083B               	movf	pad@fp^(0+128),w
  5728  07E4  00B6               	movwf	??_pad^(0+128)
  5729  07E5  0836               	movf	??_pad^(0+128),w
  5730  07E6  00AC               	movwf	fputs@fp^(0+128)
  5731  07E7  318B  23D0  3187   	fcall	_fputs
  5732  07EA                     l2138:	
  5733                           
  5734                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  5735  07EA  0021               	movlb	1	; select bank1
  5736  07EB  0833               	movf	pad@buf^(0+128),w
  5737  07EC  318B  2304         	fcall	_strlen
  5738  07EE  0021               	movlb	1	; select bank1
  5739  07EF  0839               	movf	pad@w^(0+128),w
  5740  07F0  0720               	addwf	?_strlen^(0+128),w
  5741  07F1  00B3               	movwf	?_pad^(0+128)
  5742  07F2  083A               	movf	(pad@w+1)^(0+128),w
  5743  07F3  3D21               	addwfc	(?_strlen+1)^(0+128),w
  5744  07F4  00B4               	movwf	(?_pad+1)^(0+128)
  5745  07F5  0008               	return
  5746  07F6                     __end_of_pad:	
  5747                           
  5748                           	psect	text11
  5749  0B04                     __ptext11:	
  5750 ;; *************** function _strlen *****************
  5751 ;; Defined at:
  5752 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  5753 ;; Parameters:    Size  Location     Type
  5754 ;;  s               1    wreg     PTR const unsigned char 
  5755 ;;		 -> dbuf(32), 
  5756 ;; Auto vars:     Size  Location     Type
  5757 ;;  s               1    4[BANK1 ] PTR const unsigned char 
  5758 ;;		 -> dbuf(32), 
  5759 ;;  a               1    3[BANK1 ] PTR const unsigned char 
  5760 ;;		 -> dbuf(32), 
  5761 ;; Return value:  Size  Location     Type
  5762 ;;                  2    0[BANK1 ] unsigned int 
  5763 ;; Registers used:
  5764 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5765 ;; Tracked objects:
  5766 ;;		On entry : 0/0
  5767 ;;		On exit  : 0/0
  5768 ;;		Unchanged: 0/0
  5769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5770 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5771 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5772 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5773 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  5774 ;;Total ram usage:        5 bytes
  5775 ;; Hardware stack levels used:    1
  5776 ;; Hardware stack levels required when called:    6
  5777 ;; This function calls:
  5778 ;;		Nothing
  5779 ;; This function is called by:
  5780 ;;		_pad
  5781 ;; This function uses a non-reentrant model
  5782 ;;
  5783                           
  5784                           
  5785                           ;psect for function _strlen
  5786  0B04                     _strlen:	
  5787                           
  5788                           ;incstack = 0
  5789                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  5790                           ;strlen@s stored from wreg
  5791  0B04  0021               	movlb	1	; select bank1
  5792  0B05  00A4               	movwf	strlen@s^(0+128)
  5793  0B06  0824               	movf	strlen@s^(0+128),w
  5794  0B07  00A2               	movwf	??_strlen^(0+128)
  5795  0B08  0822               	movf	??_strlen^(0+128),w
  5796  0B09  00A3               	movwf	strlen@a^(0+128)
  5797  0B0A                     l2114:	
  5798  0B0A  0824               	movf	strlen@s^(0+128),w
  5799  0B0B  0086               	movwf	6
  5800  0B0C  3001               	movlw	1	; select bank2/3
  5801  0B0D  0087               	movwf	7
  5802  0B0E  0801               	movf	1,w
  5803  0B0F  1903               	btfsc	3,2
  5804  0B10  2B16               	goto	l2116
  5805  0B11  3001               	movlw	1
  5806  0B12  00A2               	movwf	??_strlen^(0+128)
  5807  0B13  0822               	movf	??_strlen^(0+128),w
  5808  0B14  07A4               	addwf	strlen@s^(0+128),f
  5809  0B15  2B0A               	goto	l2114
  5810  0B16                     l2116:	
  5811  0B16  0823               	movf	strlen@a^(0+128),w
  5812  0B17  0224               	subwf	strlen@s^(0+128),w
  5813  0B18  00A0               	movwf	?_strlen^(0+128)
  5814  0B19  01A1               	clrf	(?_strlen+1)^(0+128)
  5815  0B1A  1BA0               	btfsc	?_strlen^(0+128),7
  5816  0B1B  03A1               	decf	(?_strlen+1)^(0+128),f
  5817  0B1C  0008               	return
  5818  0B1D                     __end_of_strlen:	
  5819                           
  5820                           	psect	text12
  5821  0BD0                     __ptext12:	
  5822 ;; *************** function _fputs *****************
  5823 ;; Defined at:
  5824 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  5825 ;; Parameters:    Size  Location     Type
  5826 ;;  s               2   10[BANK1 ] PTR const unsigned char 
  5827 ;;		 -> dbuf(32), STR_3(3), hrDisp(13), distanceDisp(11), 
  5828 ;;		 -> speedDisp(8), 
  5829 ;;  fp              1   12[BANK1 ] PTR struct _IO_FILE
  5830 ;;		 -> NULL(0), 
  5831 ;; Auto vars:     Size  Location     Type
  5832 ;;  i               2   17[BANK1 ] int 
  5833 ;;  c               1   16[BANK1 ] unsigned char 
  5834 ;; Return value:  Size  Location     Type
  5835 ;;                  2   10[BANK1 ] int 
  5836 ;; Registers used:
  5837 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5838 ;; Tracked objects:
  5839 ;;		On entry : 0/0
  5840 ;;		On exit  : 0/0
  5841 ;;		Unchanged: 0/0
  5842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5843 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5844 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5845 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5846 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  5847 ;;Total ram usage:        9 bytes
  5848 ;; Hardware stack levels used:    1
  5849 ;; Hardware stack levels required when called:    9
  5850 ;; This function calls:
  5851 ;;		_fputc
  5852 ;; This function is called by:
  5853 ;;		_pad
  5854 ;;		_puts
  5855 ;; This function uses a non-reentrant model
  5856 ;;
  5857                           
  5858                           
  5859                           ;psect for function _fputs
  5860  0BD0                     _fputs:	
  5861                           
  5862                           ;incstack = 0
  5863                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5864  0BD0  0021               	movlb	1	; select bank1
  5865  0BD1  01B1               	clrf	fputs@i^(0+128)
  5866  0BD2  01B2               	clrf	(fputs@i+1)^(0+128)
  5867  0BD3                     l2104:	
  5868  0BD3  082A               	movf	fputs@s^(0+128),w
  5869  0BD4  0731               	addwf	fputs@i^(0+128),w
  5870  0BD5  0084               	movwf	4
  5871  0BD6  082B               	movf	(fputs@s+1)^(0+128),w
  5872  0BD7  3D32               	addwfc	(fputs@i+1)^(0+128),w
  5873  0BD8  0085               	movwf	5
  5874  0BD9  0800               	movf	0,w	;code access
  5875  0BDA  00AD               	movwf	??_fputs^(0+128)
  5876  0BDB  082D               	movf	??_fputs^(0+128),w
  5877  0BDC  00B0               	movwf	fputs@c^(0+128)
  5878  0BDD  0830               	movf	fputs@c^(0+128),w
  5879  0BDE  1903               	btfsc	3,2
  5880  0BDF  2BF4               	goto	l2106
  5881  0BE0  0830               	movf	fputs@c^(0+128),w
  5882  0BE1  00AD               	movwf	??_fputs^(0+128)
  5883  0BE2  01AE               	clrf	(??_fputs^(0+128)+1)
  5884  0BE3  082D               	movf	??_fputs^(0+128),w
  5885  0BE4  00A2               	movwf	fputc@c^(0+128)
  5886  0BE5  082E               	movf	(??_fputs+1)^(0+128),w
  5887  0BE6  00A3               	movwf	(fputc@c+1)^(0+128)
  5888  0BE7  082C               	movf	fputs@fp^(0+128),w
  5889  0BE8  00AF               	movwf	(??_fputs+2)^(0+128)
  5890  0BE9  082F               	movf	(??_fputs+2)^(0+128),w
  5891  0BEA  00A4               	movwf	fputc@fp^(0+128)
  5892  0BEB  318C  249D  318B   	fcall	_fputc
  5893  0BEE  3001               	movlw	1
  5894  0BEF  0021               	movlb	1	; select bank1
  5895  0BF0  07B1               	addwf	fputs@i^(0+128),f
  5896  0BF1  3000               	movlw	0
  5897  0BF2  3DB2               	addwfc	(fputs@i+1)^(0+128),f
  5898  0BF3  2BD3               	goto	l2104
  5899  0BF4                     l2106:	
  5900  0BF4  0832               	movf	(fputs@i+1)^(0+128),w
  5901  0BF5  00AB               	movwf	(?_fputs+1)^(0+128)
  5902  0BF6  0831               	movf	fputs@i^(0+128),w
  5903  0BF7  00AA               	movwf	?_fputs^(0+128)
  5904  0BF8  0008               	return
  5905  0BF9                     __end_of_fputs:	
  5906                           
  5907                           	psect	text13
  5908  0C9D                     __ptext13:	
  5909 ;; *************** function _fputc *****************
  5910 ;; Defined at:
  5911 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  5912 ;; Parameters:    Size  Location     Type
  5913 ;;  c               2    2[BANK1 ] int 
  5914 ;;  fp              1    4[BANK1 ] PTR struct _IO_FILE
  5915 ;;		 -> NULL(0), 
  5916 ;; Auto vars:     Size  Location     Type
  5917 ;;		None
  5918 ;; Return value:  Size  Location     Type
  5919 ;;                  2    2[BANK1 ] int 
  5920 ;; Registers used:
  5921 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5922 ;; Tracked objects:
  5923 ;;		On entry : 0/0
  5924 ;;		On exit  : 0/0
  5925 ;;		Unchanged: 0/0
  5926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5927 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5929 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  5930 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  5931 ;;Total ram usage:        8 bytes
  5932 ;; Hardware stack levels used:    1
  5933 ;; Hardware stack levels required when called:    8
  5934 ;; This function calls:
  5935 ;;		_putch
  5936 ;; This function is called by:
  5937 ;;		_pad
  5938 ;;		_vfpfcnvrt
  5939 ;;		_fputs
  5940 ;;		_puts
  5941 ;; This function uses a non-reentrant model
  5942 ;;
  5943                           
  5944                           
  5945                           ;psect for function _fputc
  5946  0C9D                     _fputc:	
  5947                           
  5948                           ;incstack = 0
  5949                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5950  0C9D  0021               	movlb	1	; select bank1
  5951  0C9E  0824               	movf	fputc@fp^(0+128),w
  5952  0C9F  1D03               	btfss	3,2
  5953  0CA0  0824               	movf	fputc@fp^(0+128),w
  5954  0CA1  1D03               	btfss	3,2
  5955  0CA2  2CA8               	goto	l2088
  5956  0CA3  0822               	movf	fputc@c^(0+128),w
  5957  0CA4  318A  2226  318C   	fcall	_putch
  5958  0CA7  2CD4               	goto	l2094
  5959  0CA8                     l2088:	
  5960  0CA8  0824               	movf	fputc@fp^(0+128),w
  5961  0CA9  3E03               	addlw	3
  5962  0CAA  0086               	movwf	6
  5963  0CAB  0187               	clrf	7
  5964  0CAC  0016               	moviw fsr1++
  5965  0CAD  0401               	iorwf	1,w
  5966  0CAE  1903               	btfsc	3,2
  5967  0CAF  2CCB               	goto	l2092
  5968  0CB0  0824               	movf	fputc@fp^(0+128),w
  5969  0CB1  3E03               	addlw	3
  5970  0CB2  0086               	movwf	6
  5971  0CB3  0187               	clrf	7
  5972  0CB4  3F40               	moviw [0]fsr1
  5973  0CB5  00A5               	movwf	??_fputc^(0+128)
  5974  0CB6  3F41               	moviw [1]fsr1
  5975  0CB7  00A6               	movwf	(??_fputc^(0+128)+1)
  5976  0CB8  0A24               	incf	fputc@fp^(0+128),w
  5977  0CB9  0086               	movwf	6
  5978  0CBA  0187               	clrf	7
  5979  0CBB  3F40               	moviw [0]fsr1
  5980  0CBC  00A7               	movwf	(??_fputc+2)^(0+128)
  5981  0CBD  3F41               	moviw [1]fsr1
  5982  0CBE  00A8               	movwf	((??_fputc+2)^(0+128)+1)
  5983  0CBF  0828               	movf	(??_fputc+3)^(0+128),w
  5984  0CC0  3A80               	xorlw	128
  5985  0CC1  00A9               	movwf	(??_fputc+4)^(0+128)
  5986  0CC2  0826               	movf	(??_fputc+1)^(0+128),w
  5987  0CC3  3A80               	xorlw	128
  5988  0CC4  0229               	subwf	(??_fputc+4)^(0+128),w
  5989  0CC5  1D03               	skipz
  5990  0CC6  2CC9               	goto	u1925
  5991  0CC7  0825               	movf	??_fputc^(0+128),w
  5992  0CC8  0227               	subwf	(??_fputc+2)^(0+128),w
  5993  0CC9                     u1925:	
  5994  0CC9  1803               	skipnc
  5995  0CCA  2CD4               	goto	l2094
  5996  0CCB                     l2092:	
  5997  0CCB  0021               	movlb	1	; select bank1
  5998  0CCC  0A24               	incf	fputc@fp^(0+128),w
  5999  0CCD  0086               	movwf	6
  6000  0CCE  0187               	clrf	7
  6001  0CCF  3001               	movlw	1
  6002  0CD0  0781               	addwf	1,f
  6003  0CD1  3141               	addfsr 1,1
  6004  0CD2  1803               	skipnc
  6005  0CD3  0A81               	incf	1,f
  6006  0CD4                     l2094:	
  6007  0CD4  0021               	movlb	1	; select bank1
  6008  0CD5  0822               	movf	fputc@c^(0+128),w
  6009  0CD6  00A5               	movwf	??_fputc^(0+128)
  6010  0CD7  01A6               	clrf	(??_fputc^(0+128)+1)
  6011  0CD8  0825               	movf	??_fputc^(0+128),w
  6012  0CD9  00A2               	movwf	?_fputc^(0+128)
  6013  0CDA  0826               	movf	(??_fputc+1)^(0+128),w
  6014  0CDB  00A3               	movwf	(?_fputc+1)^(0+128)
  6015  0CDC  0008               	return
  6016  0CDD                     __end_of_fputc:	
  6017                           
  6018                           	psect	text14
  6019  0A26                     __ptext14:	
  6020 ;; *************** function _putch *****************
  6021 ;; Defined at:
  6022 ;;		line 151 in file "mcc_generated_files/eusart.c"
  6023 ;; Parameters:    Size  Location     Type
  6024 ;;  txData          1    wreg     unsigned char 
  6025 ;; Auto vars:     Size  Location     Type
  6026 ;;  txData          1    1[BANK1 ] unsigned char 
  6027 ;; Return value:  Size  Location     Type
  6028 ;;                  1    wreg      void 
  6029 ;; Registers used:
  6030 ;;		wreg, status,2, status,0, pclath, cstack
  6031 ;; Tracked objects:
  6032 ;;		On entry : 0/0
  6033 ;;		On exit  : 0/0
  6034 ;;		Unchanged: 0/0
  6035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6037 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6039 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6040 ;;Total ram usage:        1 bytes
  6041 ;; Hardware stack levels used:    1
  6042 ;; Hardware stack levels required when called:    7
  6043 ;; This function calls:
  6044 ;;		_EUSART_Write
  6045 ;; This function is called by:
  6046 ;;		_fputc
  6047 ;; This function uses a non-reentrant model
  6048 ;;
  6049                           
  6050                           
  6051                           ;psect for function _putch
  6052  0A26                     _putch:	
  6053                           
  6054                           ;incstack = 0
  6055                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  6056                           ;putch@txData stored from wreg
  6057  0A26  0021               	movlb	1	; select bank1
  6058  0A27  00A1               	movwf	putch@txData^(0+128)
  6059                           
  6060                           ;mcc_generated_files/eusart.c: 151: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 152: {;mcc_generated_files/eusart.c: 153:     EUSART_Write(txData);
  6061  0A28  0821               	movf	putch@txData^(0+128),w
  6062  0A29  3187  27F6         	fcall	_EUSART_Write
  6063  0A2B  0008               	return
  6064  0A2C                     __end_of_putch:	
  6065                           
  6066                           	psect	text15
  6067  07F6                     __ptext15:	
  6068 ;; *************** function _EUSART_Write *****************
  6069 ;; Defined at:
  6070 ;;		line 137 in file "mcc_generated_files/eusart.c"
  6071 ;; Parameters:    Size  Location     Type
  6072 ;;  txData          1    wreg     unsigned char 
  6073 ;; Auto vars:     Size  Location     Type
  6074 ;;  txData          1    0[BANK1 ] unsigned char 
  6075 ;; Return value:  Size  Location     Type
  6076 ;;                  1    wreg      void 
  6077 ;; Registers used:
  6078 ;;		wreg
  6079 ;; Tracked objects:
  6080 ;;		On entry : 0/0
  6081 ;;		On exit  : 0/0
  6082 ;;		Unchanged: 0/0
  6083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6085 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6087 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6088 ;;Total ram usage:        1 bytes
  6089 ;; Hardware stack levels used:    1
  6090 ;; Hardware stack levels required when called:    6
  6091 ;; This function calls:
  6092 ;;		Nothing
  6093 ;; This function is called by:
  6094 ;;		_putch
  6095 ;;		_setCursor
  6096 ;;		_backlightBrightness
  6097 ;; This function uses a non-reentrant model
  6098 ;;
  6099                           
  6100                           
  6101                           ;psect for function _EUSART_Write
  6102  07F6                     _EUSART_Write:	
  6103                           
  6104                           ;incstack = 0
  6105                           ; Regs used in _EUSART_Write: [wreg]
  6106                           ;EUSART_Write@txData stored from wreg
  6107  07F6  0021               	movlb	1	; select bank1
  6108  07F7  00A0               	movwf	EUSART_Write@txData^(0+128)
  6109  07F8                     l69:	
  6110                           ;mcc_generated_files/eusart.c: 140:     {;mcc_generated_files/eusart.c: 141:     }
  6111                           
  6112                           
  6113                           ;mcc_generated_files/eusart.c: 139:     while(0 == PIR1bits.TXIF)
  6114  07F8  0020               	movlb	0	; select bank0
  6115  07F9  1E10               	btfss	16,4	;volatile
  6116  07FA  2FF8               	goto	l69
  6117                           
  6118                           ;mcc_generated_files/eusart.c: 143:     TX1REG = txData;
  6119  07FB  0021               	movlb	1	; select bank1
  6120  07FC  0820               	movf	EUSART_Write@txData^(0+128),w
  6121  07FD  0023               	movlb	3	; select bank3
  6122  07FE  009A               	movwf	26	;volatile
  6123  07FF  0008               	return
  6124  0800                     __end_of_EUSART_Write:	
  6125                           
  6126                           	psect	text16
  6127  0AEB                     __ptext16:	
  6128 ;; *************** function _abs *****************
  6129 ;; Defined at:
  6130 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  6131 ;; Parameters:    Size  Location     Type
  6132 ;;  a               2   19[BANK1 ] int 
  6133 ;; Auto vars:     Size  Location     Type
  6134 ;;		None
  6135 ;; Return value:  Size  Location     Type
  6136 ;;                  2   19[BANK1 ] int 
  6137 ;; Registers used:
  6138 ;;		wreg, status,2, status,0
  6139 ;; Tracked objects:
  6140 ;;		On entry : 0/0
  6141 ;;		On exit  : 0/0
  6142 ;;		Unchanged: 0/0
  6143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6144 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6146 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6147 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  6148 ;;Total ram usage:        4 bytes
  6149 ;; Hardware stack levels used:    1
  6150 ;; Hardware stack levels required when called:    6
  6151 ;; This function calls:
  6152 ;;		Nothing
  6153 ;; This function is called by:
  6154 ;;		_dtoa
  6155 ;; This function uses a non-reentrant model
  6156 ;;
  6157                           
  6158                           
  6159                           ;psect for function _abs
  6160  0AEB                     _abs:	
  6161                           
  6162                           ;incstack = 0
  6163                           ; Regs used in _abs: [wreg+status,2+status,0]
  6164  0AEB  0021               	movlb	1	; select bank1
  6165  0AEC  0834               	movf	(abs@a+1)^(0+128),w
  6166  0AED  3A80               	xorlw	128
  6167  0AEE  00B5               	movwf	??_abs^(0+128)
  6168  0AEF  3080               	movlw	128
  6169  0AF0  0235               	subwf	??_abs^(0+128),w
  6170  0AF1  1D03               	skipz
  6171  0AF2  2AF5               	goto	u1995
  6172  0AF3  3001               	movlw	1
  6173  0AF4  0233               	subwf	abs@a^(0+128),w
  6174  0AF5                     u1995:	
  6175  0AF5  1803               	skipnc
  6176  0AF6  0008               	return
  6177  0AF7  0021               	movlb	1	; select bank1
  6178  0AF8  0933               	comf	abs@a^(0+128),w
  6179  0AF9  00B5               	movwf	??_abs^(0+128)
  6180  0AFA  0934               	comf	(abs@a+1)^(0+128),w
  6181  0AFB  00B6               	movwf	(??_abs^(0+128)+1)
  6182  0AFC  0AB5               	incf	??_abs^(0+128),f
  6183  0AFD  1903               	skipnz
  6184  0AFE  0AB6               	incf	(??_abs^(0+128)+1),f
  6185  0AFF  0835               	movf	??_abs^(0+128),w
  6186  0B00  00B3               	movwf	?_abs^(0+128)
  6187  0B01  0836               	movf	(??_abs+1)^(0+128),w
  6188  0B02  00B4               	movwf	(?_abs+1)^(0+128)
  6189  0B03  0008               	return
  6190  0B04                     __end_of_abs:	
  6191                           
  6192                           	psect	text17
  6193  0F21                     __ptext17:	
  6194 ;; *************** function ___aomod *****************
  6195 ;; Defined at:
  6196 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  6197 ;; Parameters:    Size  Location     Type
  6198 ;;  divisor         8    0[BANK1 ] long long 
  6199 ;;  dividend        8    8[BANK1 ] long long 
  6200 ;; Auto vars:     Size  Location     Type
  6201 ;;  sign            1   18[BANK1 ] unsigned char 
  6202 ;;  counter         1   17[BANK1 ] unsigned char 
  6203 ;; Return value:  Size  Location     Type
  6204 ;;                  8    0[BANK1 ] long long 
  6205 ;; Registers used:
  6206 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6207 ;; Tracked objects:
  6208 ;;		On entry : 0/0
  6209 ;;		On exit  : 0/0
  6210 ;;		Unchanged: 0/0
  6211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6212 ;;      Params:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  6213 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6214 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6215 ;;      Totals:         0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0
  6216 ;;Total ram usage:       19 bytes
  6217 ;; Hardware stack levels used:    1
  6218 ;; Hardware stack levels required when called:    6
  6219 ;; This function calls:
  6220 ;;		Nothing
  6221 ;; This function is called by:
  6222 ;;		_dtoa
  6223 ;; This function uses a non-reentrant model
  6224 ;;
  6225                           
  6226                           
  6227                           ;psect for function ___aomod
  6228  0F21                     ___aomod:	
  6229                           
  6230                           ;incstack = 0
  6231                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  6232  0F21  0021               	movlb	1	; select bank1
  6233  0F22  01B2               	clrf	___aomod@sign^(0+128)
  6234  0F23  30A8               	movlw	low ___aomod@dividend
  6235  0F24  0086               	movwf	6
  6236  0F25  3000               	movlw	high ___aomod@dividend
  6237  0F26  0087               	movwf	7
  6238  0F27  3F47               	moviw [7]fsr1
  6239  0F28  00B0               	movwf	??___aomod^(0+128)
  6240  0F29  1FB0               	btfss	??___aomod^(0+128),7
  6241  0F2A  2F4D               	goto	l2190
  6242  0F2B  0021               	movlb	1	; select bank1
  6243  0F2C  09A8               	comf	___aomod@dividend^(0+128),f
  6244  0F2D  09A9               	comf	(___aomod@dividend+1)^(0+128),f
  6245  0F2E  09AA               	comf	(___aomod@dividend+2)^(0+128),f
  6246  0F2F  09AB               	comf	(___aomod@dividend+3)^(0+128),f
  6247  0F30  09AC               	comf	(___aomod@dividend+4)^(0+128),f
  6248  0F31  09AD               	comf	(___aomod@dividend+5)^(0+128),f
  6249  0F32  09AE               	comf	(___aomod@dividend+6)^(0+128),f
  6250  0F33  09AF               	comf	(___aomod@dividend+7)^(0+128),f
  6251  0F34  0AA8               	incf	___aomod@dividend^(0+128),f
  6252  0F35  1D03               	skipz
  6253  0F36  2F4A               	goto	u212lld
  6254  0F37  0AA9               	incf	(___aomod@dividend+1)^(0+128),f
  6255  0F38  1D03               	skipz
  6256  0F39  2F4A               	goto	u212lld
  6257  0F3A  0AAA               	incf	(___aomod@dividend+2)^(0+128),f
  6258  0F3B  1D03               	skipz
  6259  0F3C  2F4A               	goto	u212lld
  6260  0F3D  0AAB               	incf	(___aomod@dividend+3)^(0+128),f
  6261  0F3E  1D03               	skipz
  6262  0F3F  2F4A               	goto	u212lld
  6263  0F40  0AAC               	incf	(___aomod@dividend+4)^(0+128),f
  6264  0F41  1D03               	skipz
  6265  0F42  2F4A               	goto	u212lld
  6266  0F43  0AAD               	incf	(___aomod@dividend+5)^(0+128),f
  6267  0F44  1D03               	skipz
  6268  0F45  2F4A               	goto	u212lld
  6269  0F46  0AAE               	incf	(___aomod@dividend+6)^(0+128),f
  6270  0F47  1D03               	skipz
  6271  0F48  2F4A               	goto	u212lld
  6272  0F49  0AAF               	incf	(___aomod@dividend+7)^(0+128),f
  6273  0F4A                     u212lld:	
  6274  0F4A  0021               	movlb	1	; select bank1
  6275  0F4B  01B2               	clrf	___aomod@sign^(0+128)
  6276  0F4C  0AB2               	incf	___aomod@sign^(0+128),f
  6277  0F4D                     l2190:	
  6278  0F4D  30A0               	movlw	low ___aomod@divisor
  6279  0F4E  0086               	movwf	6
  6280  0F4F  3000               	movlw	high ___aomod@divisor
  6281  0F50  0087               	movwf	7
  6282  0F51  3F47               	moviw [7]fsr1
  6283  0F52  0021               	movlb	1	; select bank1
  6284  0F53  00B0               	movwf	??___aomod^(0+128)
  6285  0F54  1FB0               	btfss	??___aomod^(0+128),7
  6286  0F55  2F75               	goto	l2194
  6287  0F56  0021               	movlb	1	; select bank1
  6288  0F57  09A0               	comf	___aomod@divisor^(0+128),f
  6289  0F58  09A1               	comf	(___aomod@divisor+1)^(0+128),f
  6290  0F59  09A2               	comf	(___aomod@divisor+2)^(0+128),f
  6291  0F5A  09A3               	comf	(___aomod@divisor+3)^(0+128),f
  6292  0F5B  09A4               	comf	(___aomod@divisor+4)^(0+128),f
  6293  0F5C  09A5               	comf	(___aomod@divisor+5)^(0+128),f
  6294  0F5D  09A6               	comf	(___aomod@divisor+6)^(0+128),f
  6295  0F5E  09A7               	comf	(___aomod@divisor+7)^(0+128),f
  6296  0F5F  0AA0               	incf	___aomod@divisor^(0+128),f
  6297  0F60  1D03               	skipz
  6298  0F61  2F75               	goto	l2194
  6299  0F62  0AA1               	incf	(___aomod@divisor+1)^(0+128),f
  6300  0F63  1D03               	skipz
  6301  0F64  2F75               	goto	l2194
  6302  0F65  0AA2               	incf	(___aomod@divisor+2)^(0+128),f
  6303  0F66  1D03               	skipz
  6304  0F67  2F75               	goto	l2194
  6305  0F68  0AA3               	incf	(___aomod@divisor+3)^(0+128),f
  6306  0F69  1D03               	skipz
  6307  0F6A  2F75               	goto	l2194
  6308  0F6B  0AA4               	incf	(___aomod@divisor+4)^(0+128),f
  6309  0F6C  1D03               	skipz
  6310  0F6D  2F75               	goto	l2194
  6311  0F6E  0AA5               	incf	(___aomod@divisor+5)^(0+128),f
  6312  0F6F  1D03               	skipz
  6313  0F70  2F75               	goto	l2194
  6314  0F71  0AA6               	incf	(___aomod@divisor+6)^(0+128),f
  6315  0F72  1D03               	skipz
  6316  0F73  2F75               	goto	l2194
  6317  0F74  0AA7               	incf	(___aomod@divisor+7)^(0+128),f
  6318  0F75                     l2194:	
  6319  0F75  0021               	movlb	1	; select bank1
  6320  0F76  0820               	movf	___aomod@divisor^(0+128),w
  6321  0F77  0421               	iorwf	(___aomod@divisor+1)^(0+128),w
  6322  0F78  0422               	iorwf	(___aomod@divisor+2)^(0+128),w
  6323  0F79  0423               	iorwf	(___aomod@divisor+3)^(0+128),w
  6324  0F7A  0424               	iorwf	(___aomod@divisor+4)^(0+128),w
  6325  0F7B  0425               	iorwf	(___aomod@divisor+5)^(0+128),w
  6326  0F7C  0426               	iorwf	(___aomod@divisor+6)^(0+128),w
  6327  0F7D  0427               	iorwf	(___aomod@divisor+7)^(0+128),w
  6328  0F7E  1903               	skipnz
  6329  0F7F  2FCD               	goto	l2210
  6330  0F80  01B1               	clrf	___aomod@counter^(0+128)
  6331  0F81  0AB1               	incf	___aomod@counter^(0+128),f
  6332  0F82                     l2202:	
  6333  0F82  1BA7               	btfsc	(___aomod@divisor+7)^(0+128),7
  6334  0F83  2F91               	goto	l2204
  6335  0F84  35A0               	lslf	___aomod@divisor^(0+128),f
  6336  0F85  0DA1               	rlf	(___aomod@divisor+1)^(0+128),f
  6337  0F86  0DA2               	rlf	(___aomod@divisor+2)^(0+128),f
  6338  0F87  0DA3               	rlf	(___aomod@divisor+3)^(0+128),f
  6339  0F88  0DA4               	rlf	(___aomod@divisor+4)^(0+128),f
  6340  0F89  0DA5               	rlf	(___aomod@divisor+5)^(0+128),f
  6341  0F8A  0DA6               	rlf	(___aomod@divisor+6)^(0+128),f
  6342  0F8B  0DA7               	rlf	(___aomod@divisor+7)^(0+128),f
  6343  0F8C  3001               	movlw	1
  6344  0F8D  00B0               	movwf	??___aomod^(0+128)
  6345  0F8E  0830               	movf	??___aomod^(0+128),w
  6346  0F8F  07B1               	addwf	___aomod@counter^(0+128),f
  6347  0F90  2F82               	goto	l2202
  6348  0F91                     l2204:	
  6349  0F91  0827               	movf	(___aomod@divisor+7)^(0+128),w
  6350  0F92  022F               	subwf	(___aomod@dividend+7)^(0+128),w
  6351  0F93  1D03               	skipz
  6352  0F94  2FAF               	goto	u2175
  6353  0F95  0826               	movf	(___aomod@divisor+6)^(0+128),w
  6354  0F96  022E               	subwf	(___aomod@dividend+6)^(0+128),w
  6355  0F97  1D03               	skipz
  6356  0F98  2FAF               	goto	u2175
  6357  0F99  0825               	movf	(___aomod@divisor+5)^(0+128),w
  6358  0F9A  022D               	subwf	(___aomod@dividend+5)^(0+128),w
  6359  0F9B  1D03               	skipz
  6360  0F9C  2FAF               	goto	u2175
  6361  0F9D  0824               	movf	(___aomod@divisor+4)^(0+128),w
  6362  0F9E  022C               	subwf	(___aomod@dividend+4)^(0+128),w
  6363  0F9F  1D03               	skipz
  6364  0FA0  2FAF               	goto	u2175
  6365  0FA1  0823               	movf	(___aomod@divisor+3)^(0+128),w
  6366  0FA2  022B               	subwf	(___aomod@dividend+3)^(0+128),w
  6367  0FA3  1D03               	skipz
  6368  0FA4  2FAF               	goto	u2175
  6369  0FA5  0822               	movf	(___aomod@divisor+2)^(0+128),w
  6370  0FA6  022A               	subwf	(___aomod@dividend+2)^(0+128),w
  6371  0FA7  1D03               	skipz
  6372  0FA8  2FAF               	goto	u2175
  6373  0FA9  0821               	movf	(___aomod@divisor+1)^(0+128),w
  6374  0FAA  0229               	subwf	(___aomod@dividend+1)^(0+128),w
  6375  0FAB  1D03               	skipz
  6376  0FAC  2FAF               	goto	u2175
  6377  0FAD  0820               	movf	___aomod@divisor^(0+128),w
  6378  0FAE  0228               	subwf	___aomod@dividend^(0+128),w
  6379  0FAF                     u2175:	
  6380  0FAF  1C03               	skipc
  6381  0FB0  2FC1               	goto	l2208
  6382  0FB1  0820               	movf	___aomod@divisor^(0+128),w
  6383  0FB2  02A8               	subwf	___aomod@dividend^(0+128),f
  6384  0FB3  0821               	movf	(___aomod@divisor+1)^(0+128),w
  6385  0FB4  3BA9               	subwfb	(___aomod@dividend+1)^(0+128),f
  6386  0FB5  0822               	movf	(___aomod@divisor+2)^(0+128),w
  6387  0FB6  3BAA               	subwfb	(___aomod@dividend+2)^(0+128),f
  6388  0FB7  0823               	movf	(___aomod@divisor+3)^(0+128),w
  6389  0FB8  3BAB               	subwfb	(___aomod@dividend+3)^(0+128),f
  6390  0FB9  0824               	movf	(___aomod@divisor+4)^(0+128),w
  6391  0FBA  3BAC               	subwfb	(___aomod@dividend+4)^(0+128),f
  6392  0FBB  0825               	movf	(___aomod@divisor+5)^(0+128),w
  6393  0FBC  3BAD               	subwfb	(___aomod@dividend+5)^(0+128),f
  6394  0FBD  0826               	movf	(___aomod@divisor+6)^(0+128),w
  6395  0FBE  3BAE               	subwfb	(___aomod@dividend+6)^(0+128),f
  6396  0FBF  0827               	movf	(___aomod@divisor+7)^(0+128),w
  6397  0FC0  3BAF               	subwfb	(___aomod@dividend+7)^(0+128),f
  6398  0FC1                     l2208:	
  6399  0FC1  36A7               	lsrf	(___aomod@divisor+7)^(0+128),f
  6400  0FC2  0CA6               	rrf	(___aomod@divisor+6)^(0+128),f
  6401  0FC3  0CA5               	rrf	(___aomod@divisor+5)^(0+128),f
  6402  0FC4  0CA4               	rrf	(___aomod@divisor+4)^(0+128),f
  6403  0FC5  0CA3               	rrf	(___aomod@divisor+3)^(0+128),f
  6404  0FC6  0CA2               	rrf	(___aomod@divisor+2)^(0+128),f
  6405  0FC7  0CA1               	rrf	(___aomod@divisor+1)^(0+128),f
  6406  0FC8  0CA0               	rrf	___aomod@divisor^(0+128),f
  6407  0FC9  3001               	movlw	1
  6408  0FCA  02B1               	subwf	___aomod@counter^(0+128),f
  6409  0FCB  1D03               	btfss	3,2
  6410  0FCC  2F91               	goto	l2204
  6411  0FCD                     l2210:	
  6412  0FCD  0832               	movf	___aomod@sign^(0+128),w
  6413  0FCE  1903               	btfsc	3,2
  6414  0FCF  2FEE               	goto	l606
  6415  0FD0  09A8               	comf	___aomod@dividend^(0+128),f
  6416  0FD1  09A9               	comf	(___aomod@dividend+1)^(0+128),f
  6417  0FD2  09AA               	comf	(___aomod@dividend+2)^(0+128),f
  6418  0FD3  09AB               	comf	(___aomod@dividend+3)^(0+128),f
  6419  0FD4  09AC               	comf	(___aomod@dividend+4)^(0+128),f
  6420  0FD5  09AD               	comf	(___aomod@dividend+5)^(0+128),f
  6421  0FD6  09AE               	comf	(___aomod@dividend+6)^(0+128),f
  6422  0FD7  09AF               	comf	(___aomod@dividend+7)^(0+128),f
  6423  0FD8  0AA8               	incf	___aomod@dividend^(0+128),f
  6424  0FD9  1D03               	skipz
  6425  0FDA  2FEE               	goto	l606
  6426  0FDB  0AA9               	incf	(___aomod@dividend+1)^(0+128),f
  6427  0FDC  1D03               	skipz
  6428  0FDD  2FEE               	goto	l606
  6429  0FDE  0AAA               	incf	(___aomod@dividend+2)^(0+128),f
  6430  0FDF  1D03               	skipz
  6431  0FE0  2FEE               	goto	l606
  6432  0FE1  0AAB               	incf	(___aomod@dividend+3)^(0+128),f
  6433  0FE2  1D03               	skipz
  6434  0FE3  2FEE               	goto	l606
  6435  0FE4  0AAC               	incf	(___aomod@dividend+4)^(0+128),f
  6436  0FE5  1D03               	skipz
  6437  0FE6  2FEE               	goto	l606
  6438  0FE7  0AAD               	incf	(___aomod@dividend+5)^(0+128),f
  6439  0FE8  1D03               	skipz
  6440  0FE9  2FEE               	goto	l606
  6441  0FEA  0AAE               	incf	(___aomod@dividend+6)^(0+128),f
  6442  0FEB  1D03               	skipz
  6443  0FEC  2FEE               	goto	l606
  6444  0FED  0AAF               	incf	(___aomod@dividend+7)^(0+128),f
  6445  0FEE                     l606:	
  6446  0FEE  0021               	movlb	1	; select bank1
  6447  0FEF  0828               	movf	___aomod@dividend^(0+128),w
  6448  0FF0  00A0               	movwf	?___aomod^(0+128)
  6449  0FF1  0829               	movf	(___aomod@dividend+1)^(0+128),w
  6450  0FF2  00A1               	movwf	(?___aomod+1)^(0+128)
  6451  0FF3  082A               	movf	(___aomod@dividend+2)^(0+128),w
  6452  0FF4  00A2               	movwf	(?___aomod+2)^(0+128)
  6453  0FF5  082B               	movf	(___aomod@dividend+3)^(0+128),w
  6454  0FF6  00A3               	movwf	(?___aomod+3)^(0+128)
  6455  0FF7  082C               	movf	(___aomod@dividend+4)^(0+128),w
  6456  0FF8  00A4               	movwf	(?___aomod+4)^(0+128)
  6457  0FF9  082D               	movf	(___aomod@dividend+5)^(0+128),w
  6458  0FFA  00A5               	movwf	(?___aomod+5)^(0+128)
  6459  0FFB  082E               	movf	(___aomod@dividend+6)^(0+128),w
  6460  0FFC  00A6               	movwf	(?___aomod+6)^(0+128)
  6461  0FFD  082F               	movf	(___aomod@dividend+7)^(0+128),w
  6462  0FFE  00A7               	movwf	(?___aomod+7)^(0+128)
  6463  0FFF  0008               	return
  6464  1000                     __end_of___aomod:	
  6465                           
  6466                           	psect	text18
  6467  06A9                     __ptext18:	
  6468 ;; *************** function ___aodiv *****************
  6469 ;; Defined at:
  6470 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  6471 ;; Parameters:    Size  Location     Type
  6472 ;;  divisor         8    0[BANK1 ] long long 
  6473 ;;  dividend        8    8[BANK1 ] long long 
  6474 ;; Auto vars:     Size  Location     Type
  6475 ;;  quotient        8   19[BANK1 ] long long 
  6476 ;;  sign            1   18[BANK1 ] unsigned char 
  6477 ;;  counter         1   17[BANK1 ] unsigned char 
  6478 ;; Return value:  Size  Location     Type
  6479 ;;                  8    0[BANK1 ] long long 
  6480 ;; Registers used:
  6481 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6482 ;; Tracked objects:
  6483 ;;		On entry : 0/0
  6484 ;;		On exit  : 0/0
  6485 ;;		Unchanged: 0/0
  6486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6487 ;;      Params:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  6488 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  6489 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6490 ;;      Totals:         0       0      27       0       0       0       0       0       0       0       0       0       
      +0       0
  6491 ;;Total ram usage:       27 bytes
  6492 ;; Hardware stack levels used:    1
  6493 ;; Hardware stack levels required when called:    6
  6494 ;; This function calls:
  6495 ;;		Nothing
  6496 ;; This function is called by:
  6497 ;;		_dtoa
  6498 ;; This function uses a non-reentrant model
  6499 ;;
  6500                           
  6501                           
  6502                           ;psect for function ___aodiv
  6503  06A9                     ___aodiv:	
  6504                           
  6505                           ;incstack = 0
  6506                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  6507  06A9  0021               	movlb	1	; select bank1
  6508  06AA  01B2               	clrf	___aodiv@sign^(0+128)
  6509  06AB  30A0               	movlw	low ___aodiv@divisor
  6510  06AC  0086               	movwf	6
  6511  06AD  3000               	movlw	high ___aodiv@divisor
  6512  06AE  0087               	movwf	7
  6513  06AF  3F47               	moviw [7]fsr1
  6514  06B0  00B0               	movwf	??___aodiv^(0+128)
  6515  06B1  1FB0               	btfss	??___aodiv^(0+128),7
  6516  06B2  2ED5               	goto	l2152
  6517  06B3  0021               	movlb	1	; select bank1
  6518  06B4  09A0               	comf	___aodiv@divisor^(0+128),f
  6519  06B5  09A1               	comf	(___aodiv@divisor+1)^(0+128),f
  6520  06B6  09A2               	comf	(___aodiv@divisor+2)^(0+128),f
  6521  06B7  09A3               	comf	(___aodiv@divisor+3)^(0+128),f
  6522  06B8  09A4               	comf	(___aodiv@divisor+4)^(0+128),f
  6523  06B9  09A5               	comf	(___aodiv@divisor+5)^(0+128),f
  6524  06BA  09A6               	comf	(___aodiv@divisor+6)^(0+128),f
  6525  06BB  09A7               	comf	(___aodiv@divisor+7)^(0+128),f
  6526  06BC  0AA0               	incf	___aodiv@divisor^(0+128),f
  6527  06BD  1D03               	skipz
  6528  06BE  2ED2               	goto	u201lld
  6529  06BF  0AA1               	incf	(___aodiv@divisor+1)^(0+128),f
  6530  06C0  1D03               	skipz
  6531  06C1  2ED2               	goto	u201lld
  6532  06C2  0AA2               	incf	(___aodiv@divisor+2)^(0+128),f
  6533  06C3  1D03               	skipz
  6534  06C4  2ED2               	goto	u201lld
  6535  06C5  0AA3               	incf	(___aodiv@divisor+3)^(0+128),f
  6536  06C6  1D03               	skipz
  6537  06C7  2ED2               	goto	u201lld
  6538  06C8  0AA4               	incf	(___aodiv@divisor+4)^(0+128),f
  6539  06C9  1D03               	skipz
  6540  06CA  2ED2               	goto	u201lld
  6541  06CB  0AA5               	incf	(___aodiv@divisor+5)^(0+128),f
  6542  06CC  1D03               	skipz
  6543  06CD  2ED2               	goto	u201lld
  6544  06CE  0AA6               	incf	(___aodiv@divisor+6)^(0+128),f
  6545  06CF  1D03               	skipz
  6546  06D0  2ED2               	goto	u201lld
  6547  06D1  0AA7               	incf	(___aodiv@divisor+7)^(0+128),f
  6548  06D2                     u201lld:	
  6549  06D2  0021               	movlb	1	; select bank1
  6550  06D3  01B2               	clrf	___aodiv@sign^(0+128)
  6551  06D4  0AB2               	incf	___aodiv@sign^(0+128),f
  6552  06D5                     l2152:	
  6553  06D5  30A8               	movlw	low ___aodiv@dividend
  6554  06D6  0086               	movwf	6
  6555  06D7  3000               	movlw	high ___aodiv@dividend
  6556  06D8  0087               	movwf	7
  6557  06D9  3F47               	moviw [7]fsr1
  6558  06DA  0021               	movlb	1	; select bank1
  6559  06DB  00B0               	movwf	??___aodiv^(0+128)
  6560  06DC  1FB0               	btfss	??___aodiv^(0+128),7
  6561  06DD  2F02               	goto	l2158
  6562  06DE  0021               	movlb	1	; select bank1
  6563  06DF  09A8               	comf	___aodiv@dividend^(0+128),f
  6564  06E0  09A9               	comf	(___aodiv@dividend+1)^(0+128),f
  6565  06E1  09AA               	comf	(___aodiv@dividend+2)^(0+128),f
  6566  06E2  09AB               	comf	(___aodiv@dividend+3)^(0+128),f
  6567  06E3  09AC               	comf	(___aodiv@dividend+4)^(0+128),f
  6568  06E4  09AD               	comf	(___aodiv@dividend+5)^(0+128),f
  6569  06E5  09AE               	comf	(___aodiv@dividend+6)^(0+128),f
  6570  06E6  09AF               	comf	(___aodiv@dividend+7)^(0+128),f
  6571  06E7  0AA8               	incf	___aodiv@dividend^(0+128),f
  6572  06E8  1D03               	skipz
  6573  06E9  2EFD               	goto	l2156
  6574  06EA  0AA9               	incf	(___aodiv@dividend+1)^(0+128),f
  6575  06EB  1D03               	skipz
  6576  06EC  2EFD               	goto	l2156
  6577  06ED  0AAA               	incf	(___aodiv@dividend+2)^(0+128),f
  6578  06EE  1D03               	skipz
  6579  06EF  2EFD               	goto	l2156
  6580  06F0  0AAB               	incf	(___aodiv@dividend+3)^(0+128),f
  6581  06F1  1D03               	skipz
  6582  06F2  2EFD               	goto	l2156
  6583  06F3  0AAC               	incf	(___aodiv@dividend+4)^(0+128),f
  6584  06F4  1D03               	skipz
  6585  06F5  2EFD               	goto	l2156
  6586  06F6  0AAD               	incf	(___aodiv@dividend+5)^(0+128),f
  6587  06F7  1D03               	skipz
  6588  06F8  2EFD               	goto	l2156
  6589  06F9  0AAE               	incf	(___aodiv@dividend+6)^(0+128),f
  6590  06FA  1D03               	skipz
  6591  06FB  2EFD               	goto	l2156
  6592  06FC  0AAF               	incf	(___aodiv@dividend+7)^(0+128),f
  6593  06FD                     l2156:	
  6594  06FD  3001               	movlw	1
  6595  06FE  0021               	movlb	1	; select bank1
  6596  06FF  00B0               	movwf	??___aodiv^(0+128)
  6597  0700  0830               	movf	??___aodiv^(0+128),w
  6598  0701  06B2               	xorwf	___aodiv@sign^(0+128),f
  6599  0702                     l2158:	
  6600  0702  30B3               	movlw	low ___aodiv@quotient
  6601  0703  0086               	movwf	6
  6602  0704  3000               	movlw	high ___aodiv@quotient
  6603  0705  0087               	movwf	7
  6604  0706  3008               	movlw	8
  6605  0707  0021               	movlb	1	; select bank1
  6606  0708  00B0               	movwf	??___aodiv^(0+128)
  6607  0709  3000               	movlw	0
  6608  070A                     u2040:	
  6609  070A  001E               	movwi fsr1++
  6610  070B  0BB0               	decfsz	??___aodiv^(0+128),f
  6611  070C  2F0A               	goto	u2040
  6612  070D  0820               	movf	___aodiv@divisor^(0+128),w
  6613  070E  0421               	iorwf	(___aodiv@divisor+1)^(0+128),w
  6614  070F  0422               	iorwf	(___aodiv@divisor+2)^(0+128),w
  6615  0710  0423               	iorwf	(___aodiv@divisor+3)^(0+128),w
  6616  0711  0424               	iorwf	(___aodiv@divisor+4)^(0+128),w
  6617  0712  0425               	iorwf	(___aodiv@divisor+5)^(0+128),w
  6618  0713  0426               	iorwf	(___aodiv@divisor+6)^(0+128),w
  6619  0714  0427               	iorwf	(___aodiv@divisor+7)^(0+128),w
  6620  0715  1903               	skipnz
  6621  0716  2F6D               	goto	l2180
  6622  0717  01B1               	clrf	___aodiv@counter^(0+128)
  6623  0718  0AB1               	incf	___aodiv@counter^(0+128),f
  6624  0719                     l2168:	
  6625  0719  1BA7               	btfsc	(___aodiv@divisor+7)^(0+128),7
  6626  071A  2F28               	goto	l2170
  6627  071B  35A0               	lslf	___aodiv@divisor^(0+128),f
  6628  071C  0DA1               	rlf	(___aodiv@divisor+1)^(0+128),f
  6629  071D  0DA2               	rlf	(___aodiv@divisor+2)^(0+128),f
  6630  071E  0DA3               	rlf	(___aodiv@divisor+3)^(0+128),f
  6631  071F  0DA4               	rlf	(___aodiv@divisor+4)^(0+128),f
  6632  0720  0DA5               	rlf	(___aodiv@divisor+5)^(0+128),f
  6633  0721  0DA6               	rlf	(___aodiv@divisor+6)^(0+128),f
  6634  0722  0DA7               	rlf	(___aodiv@divisor+7)^(0+128),f
  6635  0723  3001               	movlw	1
  6636  0724  00B0               	movwf	??___aodiv^(0+128)
  6637  0725  0830               	movf	??___aodiv^(0+128),w
  6638  0726  07B1               	addwf	___aodiv@counter^(0+128),f
  6639  0727  2F19               	goto	l2168
  6640  0728                     l2170:	
  6641  0728  35B3               	lslf	___aodiv@quotient^(0+128),f
  6642  0729  0DB4               	rlf	(___aodiv@quotient+1)^(0+128),f
  6643  072A  0DB5               	rlf	(___aodiv@quotient+2)^(0+128),f
  6644  072B  0DB6               	rlf	(___aodiv@quotient+3)^(0+128),f
  6645  072C  0DB7               	rlf	(___aodiv@quotient+4)^(0+128),f
  6646  072D  0DB8               	rlf	(___aodiv@quotient+5)^(0+128),f
  6647  072E  0DB9               	rlf	(___aodiv@quotient+6)^(0+128),f
  6648  072F  0DBA               	rlf	(___aodiv@quotient+7)^(0+128),f
  6649  0730  0827               	movf	(___aodiv@divisor+7)^(0+128),w
  6650  0731  022F               	subwf	(___aodiv@dividend+7)^(0+128),w
  6651  0732  1D03               	skipz
  6652  0733  2F4E               	goto	u2075
  6653  0734  0826               	movf	(___aodiv@divisor+6)^(0+128),w
  6654  0735  022E               	subwf	(___aodiv@dividend+6)^(0+128),w
  6655  0736  1D03               	skipz
  6656  0737  2F4E               	goto	u2075
  6657  0738  0825               	movf	(___aodiv@divisor+5)^(0+128),w
  6658  0739  022D               	subwf	(___aodiv@dividend+5)^(0+128),w
  6659  073A  1D03               	skipz
  6660  073B  2F4E               	goto	u2075
  6661  073C  0824               	movf	(___aodiv@divisor+4)^(0+128),w
  6662  073D  022C               	subwf	(___aodiv@dividend+4)^(0+128),w
  6663  073E  1D03               	skipz
  6664  073F  2F4E               	goto	u2075
  6665  0740  0823               	movf	(___aodiv@divisor+3)^(0+128),w
  6666  0741  022B               	subwf	(___aodiv@dividend+3)^(0+128),w
  6667  0742  1D03               	skipz
  6668  0743  2F4E               	goto	u2075
  6669  0744  0822               	movf	(___aodiv@divisor+2)^(0+128),w
  6670  0745  022A               	subwf	(___aodiv@dividend+2)^(0+128),w
  6671  0746  1D03               	skipz
  6672  0747  2F4E               	goto	u2075
  6673  0748  0821               	movf	(___aodiv@divisor+1)^(0+128),w
  6674  0749  0229               	subwf	(___aodiv@dividend+1)^(0+128),w
  6675  074A  1D03               	skipz
  6676  074B  2F4E               	goto	u2075
  6677  074C  0820               	movf	___aodiv@divisor^(0+128),w
  6678  074D  0228               	subwf	___aodiv@dividend^(0+128),w
  6679  074E                     u2075:	
  6680  074E  1C03               	skipc
  6681  074F  2F61               	goto	l2178
  6682  0750  0820               	movf	___aodiv@divisor^(0+128),w
  6683  0751  02A8               	subwf	___aodiv@dividend^(0+128),f
  6684  0752  0821               	movf	(___aodiv@divisor+1)^(0+128),w
  6685  0753  3BA9               	subwfb	(___aodiv@dividend+1)^(0+128),f
  6686  0754  0822               	movf	(___aodiv@divisor+2)^(0+128),w
  6687  0755  3BAA               	subwfb	(___aodiv@dividend+2)^(0+128),f
  6688  0756  0823               	movf	(___aodiv@divisor+3)^(0+128),w
  6689  0757  3BAB               	subwfb	(___aodiv@dividend+3)^(0+128),f
  6690  0758  0824               	movf	(___aodiv@divisor+4)^(0+128),w
  6691  0759  3BAC               	subwfb	(___aodiv@dividend+4)^(0+128),f
  6692  075A  0825               	movf	(___aodiv@divisor+5)^(0+128),w
  6693  075B  3BAD               	subwfb	(___aodiv@dividend+5)^(0+128),f
  6694  075C  0826               	movf	(___aodiv@divisor+6)^(0+128),w
  6695  075D  3BAE               	subwfb	(___aodiv@dividend+6)^(0+128),f
  6696  075E  0827               	movf	(___aodiv@divisor+7)^(0+128),w
  6697  075F  3BAF               	subwfb	(___aodiv@dividend+7)^(0+128),f
  6698  0760  1433               	bsf	___aodiv@quotient^(0+128),0
  6699  0761                     l2178:	
  6700  0761  36A7               	lsrf	(___aodiv@divisor+7)^(0+128),f
  6701  0762  0CA6               	rrf	(___aodiv@divisor+6)^(0+128),f
  6702  0763  0CA5               	rrf	(___aodiv@divisor+5)^(0+128),f
  6703  0764  0CA4               	rrf	(___aodiv@divisor+4)^(0+128),f
  6704  0765  0CA3               	rrf	(___aodiv@divisor+3)^(0+128),f
  6705  0766  0CA2               	rrf	(___aodiv@divisor+2)^(0+128),f
  6706  0767  0CA1               	rrf	(___aodiv@divisor+1)^(0+128),f
  6707  0768  0CA0               	rrf	___aodiv@divisor^(0+128),f
  6708  0769  3001               	movlw	1
  6709  076A  02B1               	subwf	___aodiv@counter^(0+128),f
  6710  076B  1D03               	btfss	3,2
  6711  076C  2F28               	goto	l2170
  6712  076D                     l2180:	
  6713  076D  0832               	movf	___aodiv@sign^(0+128),w
  6714  076E  1903               	btfsc	3,2
  6715  076F  2F8E               	goto	l593
  6716  0770  09B3               	comf	___aodiv@quotient^(0+128),f
  6717  0771  09B4               	comf	(___aodiv@quotient+1)^(0+128),f
  6718  0772  09B5               	comf	(___aodiv@quotient+2)^(0+128),f
  6719  0773  09B6               	comf	(___aodiv@quotient+3)^(0+128),f
  6720  0774  09B7               	comf	(___aodiv@quotient+4)^(0+128),f
  6721  0775  09B8               	comf	(___aodiv@quotient+5)^(0+128),f
  6722  0776  09B9               	comf	(___aodiv@quotient+6)^(0+128),f
  6723  0777  09BA               	comf	(___aodiv@quotient+7)^(0+128),f
  6724  0778  0AB3               	incf	___aodiv@quotient^(0+128),f
  6725  0779  1D03               	skipz
  6726  077A  2F8E               	goto	l593
  6727  077B  0AB4               	incf	(___aodiv@quotient+1)^(0+128),f
  6728  077C  1D03               	skipz
  6729  077D  2F8E               	goto	l593
  6730  077E  0AB5               	incf	(___aodiv@quotient+2)^(0+128),f
  6731  077F  1D03               	skipz
  6732  0780  2F8E               	goto	l593
  6733  0781  0AB6               	incf	(___aodiv@quotient+3)^(0+128),f
  6734  0782  1D03               	skipz
  6735  0783  2F8E               	goto	l593
  6736  0784  0AB7               	incf	(___aodiv@quotient+4)^(0+128),f
  6737  0785  1D03               	skipz
  6738  0786  2F8E               	goto	l593
  6739  0787  0AB8               	incf	(___aodiv@quotient+5)^(0+128),f
  6740  0788  1D03               	skipz
  6741  0789  2F8E               	goto	l593
  6742  078A  0AB9               	incf	(___aodiv@quotient+6)^(0+128),f
  6743  078B  1D03               	skipz
  6744  078C  2F8E               	goto	l593
  6745  078D  0ABA               	incf	(___aodiv@quotient+7)^(0+128),f
  6746  078E                     l593:	
  6747  078E  0021               	movlb	1	; select bank1
  6748  078F  0833               	movf	___aodiv@quotient^(0+128),w
  6749  0790  00A0               	movwf	?___aodiv^(0+128)
  6750  0791  0834               	movf	(___aodiv@quotient+1)^(0+128),w
  6751  0792  00A1               	movwf	(?___aodiv+1)^(0+128)
  6752  0793  0835               	movf	(___aodiv@quotient+2)^(0+128),w
  6753  0794  00A2               	movwf	(?___aodiv+2)^(0+128)
  6754  0795  0836               	movf	(___aodiv@quotient+3)^(0+128),w
  6755  0796  00A3               	movwf	(?___aodiv+3)^(0+128)
  6756  0797  0837               	movf	(___aodiv@quotient+4)^(0+128),w
  6757  0798  00A4               	movwf	(?___aodiv+4)^(0+128)
  6758  0799  0838               	movf	(___aodiv@quotient+5)^(0+128),w
  6759  079A  00A5               	movwf	(?___aodiv+5)^(0+128)
  6760  079B  0839               	movf	(___aodiv@quotient+6)^(0+128),w
  6761  079C  00A6               	movwf	(?___aodiv+6)^(0+128)
  6762  079D  083A               	movf	(___aodiv@quotient+7)^(0+128),w
  6763  079E  00A7               	movwf	(?___aodiv+7)^(0+128)
  6764  079F  0008               	return
  6765  07A0                     __end_of___aodiv:	
  6766                           
  6767                           	psect	text19
  6768  0A74                     __ptext19:	
  6769 ;; *************** function _SYSTEM_Initialize *****************
  6770 ;; Defined at:
  6771 ;;		line 50 in file "mcc_generated_files/mcc.c"
  6772 ;; Parameters:    Size  Location     Type
  6773 ;;		None
  6774 ;; Auto vars:     Size  Location     Type
  6775 ;;		None
  6776 ;; Return value:  Size  Location     Type
  6777 ;;                  1    wreg      void 
  6778 ;; Registers used:
  6779 ;;		wreg, status,2, status,0, pclath, cstack
  6780 ;; Tracked objects:
  6781 ;;		On entry : 0/0
  6782 ;;		On exit  : 0/0
  6783 ;;		Unchanged: 0/0
  6784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6788 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6789 ;;Total ram usage:        0 bytes
  6790 ;; Hardware stack levels used:    1
  6791 ;; Hardware stack levels required when called:    8
  6792 ;; This function calls:
  6793 ;;		_EUSART_Initialize
  6794 ;;		_OSCILLATOR_Initialize
  6795 ;;		_PIN_MANAGER_Initialize
  6796 ;;		_TMR0_Initialize
  6797 ;; This function is called by:
  6798 ;;		_main
  6799 ;; This function uses a non-reentrant model
  6800 ;;
  6801                           
  6802                           
  6803                           ;psect for function _SYSTEM_Initialize
  6804  0A74                     _SYSTEM_Initialize:	
  6805                           
  6806                           ;mcc_generated_files/mcc.c: 52:     PIN_MANAGER_Initialize();
  6807                           
  6808                           ;incstack = 0
  6809                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6810  0A74  318B  23F9  318A   	fcall	_PIN_MANAGER_Initialize
  6811                           
  6812                           ;mcc_generated_files/mcc.c: 53:     OSCILLATOR_Initialize();
  6813  0A77  318A  2238  318A   	fcall	_OSCILLATOR_Initialize
  6814                           
  6815                           ;mcc_generated_files/mcc.c: 54:     TMR0_Initialize();
  6816  0A7A  318A  22D3  318A   	fcall	_TMR0_Initialize
  6817                           
  6818                           ;mcc_generated_files/mcc.c: 55:     EUSART_Initialize();
  6819  0A7D  318B  23AC         	fcall	_EUSART_Initialize
  6820  0A7F  0008               	return
  6821  0A80                     __end_of_SYSTEM_Initialize:	
  6822                           
  6823                           	psect	text20
  6824  0AD3                     __ptext20:	
  6825 ;; *************** function _TMR0_Initialize *****************
  6826 ;; Defined at:
  6827 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  6828 ;; Parameters:    Size  Location     Type
  6829 ;;		None
  6830 ;; Auto vars:     Size  Location     Type
  6831 ;;		None
  6832 ;; Return value:  Size  Location     Type
  6833 ;;                  1    wreg      void 
  6834 ;; Registers used:
  6835 ;;		wreg, status,2, status,0, pclath, cstack
  6836 ;; Tracked objects:
  6837 ;;		On entry : 0/0
  6838 ;;		On exit  : 0/0
  6839 ;;		Unchanged: 0/0
  6840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6843 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6844 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6845 ;;Total ram usage:        1 bytes
  6846 ;; Hardware stack levels used:    1
  6847 ;; Hardware stack levels required when called:    7
  6848 ;; This function calls:
  6849 ;;		_TMR0_SetInterruptHandler
  6850 ;; This function is called by:
  6851 ;;		_SYSTEM_Initialize
  6852 ;; This function uses a non-reentrant model
  6853 ;;
  6854                           
  6855                           
  6856                           ;psect for function _TMR0_Initialize
  6857  0AD3                     _TMR0_Initialize:	
  6858                           
  6859                           ;mcc_generated_files/tmr0.c: 69:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xDF 
      +                          & 0x3F));
  6860                           
  6861                           ;incstack = 0
  6862                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6863  0AD3  0021               	movlb	1	; select bank1
  6864  0AD4  0815               	movf	21,w	;volatile
  6865  0AD5  39C0               	andlw	192
  6866  0AD6  381F               	iorlw	31
  6867  0AD7  0095               	movwf	21	;volatile
  6868                           
  6869                           ;mcc_generated_files/tmr0.c: 72:     TMR0 = 0x83;
  6870  0AD8  3083               	movlw	131
  6871  0AD9  0020               	movlb	0	; select bank0
  6872  0ADA  0095               	movwf	21	;volatile
  6873                           
  6874                           ;mcc_generated_files/tmr0.c: 75:     timer0ReloadVal= 131;
  6875  0ADB  3083               	movlw	131
  6876  0ADC  0021               	movlb	1	; select bank1
  6877  0ADD  00A2               	movwf	??_TMR0_Initialize^(0+128)
  6878  0ADE  0822               	movf	??_TMR0_Initialize^(0+128),w
  6879  0ADF  0020               	movlb	0	; select bank0
  6880  0AE0  00E0               	movwf	_timer0ReloadVal	;volatile
  6881                           
  6882                           ;mcc_generated_files/tmr0.c: 78:     INTCONbits.TMR0IF = 0;
  6883  0AE1  110B               	bcf	11,2	;volatile
  6884                           
  6885                           ;mcc_generated_files/tmr0.c: 81:     INTCONbits.TMR0IE = 1;
  6886  0AE2  168B               	bsf	11,5	;volatile
  6887                           
  6888                           ;mcc_generated_files/tmr0.c: 84:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  6889  0AE3  3003               	movlw	low _TMR0_DefaultInterruptHandler
  6890  0AE4  0021               	movlb	1	; select bank1
  6891  0AE5  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler^(0+128)
  6892  0AE6  3000               	movlw	high _TMR0_DefaultInterruptHandler
  6893  0AE7  00A1               	movwf	(TMR0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  6894  0AE8  318A  226B         	fcall	_TMR0_SetInterruptHandler
  6895  0AEA  0008               	return
  6896  0AEB                     __end_of_TMR0_Initialize:	
  6897                           
  6898                           	psect	text21
  6899  0A6B                     __ptext21:	
  6900 ;; *************** function _TMR0_SetInterruptHandler *****************
  6901 ;; Defined at:
  6902 ;;		line 125 in file "mcc_generated_files/tmr0.c"
  6903 ;; Parameters:    Size  Location     Type
  6904 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  6905 ;;		 -> timerISR(1), TMR0_DefaultInterruptHandler(1), 
  6906 ;; Auto vars:     Size  Location     Type
  6907 ;;		None
  6908 ;; Return value:  Size  Location     Type
  6909 ;;                  1    wreg      void 
  6910 ;; Registers used:
  6911 ;;		wreg
  6912 ;; Tracked objects:
  6913 ;;		On entry : 0/0
  6914 ;;		On exit  : 0/0
  6915 ;;		Unchanged: 0/0
  6916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6917 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6920 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6921 ;;Total ram usage:        2 bytes
  6922 ;; Hardware stack levels used:    1
  6923 ;; Hardware stack levels required when called:    6
  6924 ;; This function calls:
  6925 ;;		Nothing
  6926 ;; This function is called by:
  6927 ;;		_TMR0_Initialize
  6928 ;;		_main
  6929 ;; This function uses a non-reentrant model
  6930 ;;
  6931                           
  6932                           
  6933                           ;psect for function _TMR0_SetInterruptHandler
  6934  0A6B                     _TMR0_SetInterruptHandler:	
  6935                           
  6936                           ;mcc_generated_files/tmr0.c: 126:     TMR0_InterruptHandler = InterruptHandler;
  6937                           
  6938                           ;incstack = 0
  6939                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  6940  0A6B  0021               	movlb	1	; select bank1
  6941  0A6C  0821               	movf	(TMR0_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  6942  0A6D  0020               	movlb	0	; select bank0
  6943  0A6E  00D7               	movwf	_TMR0_InterruptHandler+1
  6944  0A6F  0021               	movlb	1	; select bank1
  6945  0A70  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler^(0+128),w
  6946  0A71  0020               	movlb	0	; select bank0
  6947  0A72  00D6               	movwf	_TMR0_InterruptHandler
  6948  0A73  0008               	return
  6949  0A74                     __end_of_TMR0_SetInterruptHandler:	
  6950                           
  6951                           	psect	text22
  6952  0BF9                     __ptext22:	
  6953 ;; *************** function _PIN_MANAGER_Initialize *****************
  6954 ;; Defined at:
  6955 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  6956 ;; Parameters:    Size  Location     Type
  6957 ;;		None
  6958 ;; Auto vars:     Size  Location     Type
  6959 ;;		None
  6960 ;; Return value:  Size  Location     Type
  6961 ;;                  1    wreg      void 
  6962 ;; Registers used:
  6963 ;;		wreg, status,2, status,0, pclath, cstack
  6964 ;; Tracked objects:
  6965 ;;		On entry : 0/0
  6966 ;;		On exit  : 0/0
  6967 ;;		Unchanged: 0/0
  6968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6972 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6973 ;;Total ram usage:        0 bytes
  6974 ;; Hardware stack levels used:    1
  6975 ;; Hardware stack levels required when called:    7
  6976 ;; This function calls:
  6977 ;;		_IOCCF5_SetInterruptHandler
  6978 ;; This function is called by:
  6979 ;;		_SYSTEM_Initialize
  6980 ;; This function uses a non-reentrant model
  6981 ;;
  6982                           
  6983                           
  6984                           ;psect for function _PIN_MANAGER_Initialize
  6985  0BF9                     _PIN_MANAGER_Initialize:	
  6986                           
  6987                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  6988                           
  6989                           ;incstack = 0
  6990                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6991  0BF9  0022               	movlb	2	; select bank2
  6992  0BFA  018C               	clrf	12	;volatile
  6993                           
  6994                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  6995  0BFB  018D               	clrf	13	;volatile
  6996                           
  6997                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  6998  0BFC  018E               	clrf	14	;volatile
  6999                           
  7000                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0x37;
  7001  0BFD  3037               	movlw	55
  7002  0BFE  0021               	movlb	1	; select bank1
  7003  0BFF  008C               	movwf	12	;volatile
  7004                           
  7005                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0x70;
  7006  0C00  3070               	movlw	112
  7007  0C01  008D               	movwf	13	;volatile
  7008                           
  7009                           ;mcc_generated_files/pin_manager.c: 71:     TRISC = 0xFF;
  7010  0C02  30FF               	movlw	255
  7011  0C03  008E               	movwf	14	;volatile
  7012                           
  7013                           ;mcc_generated_files/pin_manager.c: 76:     ANSELC = 0xCF;
  7014  0C04  30CF               	movlw	207
  7015  0C05  0023               	movlb	3	; select bank3
  7016  0C06  008E               	movwf	14	;volatile
  7017                           
  7018                           ;mcc_generated_files/pin_manager.c: 77:     ANSELB = 0x70;
  7019  0C07  3070               	movlw	112
  7020  0C08  008D               	movwf	13	;volatile
  7021                           
  7022                           ;mcc_generated_files/pin_manager.c: 78:     ANSELA = 0x17;
  7023  0C09  3017               	movlw	23
  7024  0C0A  008C               	movwf	12	;volatile
  7025                           
  7026                           ;mcc_generated_files/pin_manager.c: 83:     WPUB = 0x00;
  7027  0C0B  0024               	movlb	4	; select bank4
  7028  0C0C  018D               	clrf	13	;volatile
  7029                           
  7030                           ;mcc_generated_files/pin_manager.c: 84:     WPUA = 0x00;
  7031  0C0D  018C               	clrf	12	;volatile
  7032                           
  7033                           ;mcc_generated_files/pin_manager.c: 85:     WPUC = 0x00;
  7034  0C0E  018E               	clrf	14	;volatile
  7035                           
  7036                           ;mcc_generated_files/pin_manager.c: 86:     OPTION_REGbits.nWPUEN = 1;
  7037  0C0F  0021               	movlb	1	; select bank1
  7038  0C10  1795               	bsf	21,7	;volatile
  7039                           
  7040                           ;mcc_generated_files/pin_manager.c: 91:     ODCONA = 0x00;
  7041  0C11  0025               	movlb	5	; select bank5
  7042  0C12  018C               	clrf	12	;volatile
  7043                           
  7044                           ;mcc_generated_files/pin_manager.c: 92:     ODCONB = 0x00;
  7045  0C13  018D               	clrf	13	;volatile
  7046                           
  7047                           ;mcc_generated_files/pin_manager.c: 93:     ODCONC = 0x00;
  7048  0C14  018E               	clrf	14	;volatile
  7049                           
  7050                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONA = 0x37;
  7051  0C15  3037               	movlw	55
  7052  0C16  0026               	movlb	6	; select bank6
  7053  0C17  008C               	movwf	12	;volatile
  7054                           
  7055                           ;mcc_generated_files/pin_manager.c: 99:     SLRCONB = 0xF0;
  7056  0C18  30F0               	movlw	240
  7057  0C19  008D               	movwf	13	;volatile
  7058                           
  7059                           ;mcc_generated_files/pin_manager.c: 100:     SLRCONC = 0xFF;
  7060  0C1A  30FF               	movlw	255
  7061  0C1B  008E               	movwf	14	;volatile
  7062                           
  7063                           ;mcc_generated_files/pin_manager.c: 107:     IOCCFbits.IOCCF5 = 0;
  7064  0C1C  0027               	movlb	7	; select bank7
  7065  0C1D  1299               	bcf	25,5	;volatile
  7066                           
  7067                           ;mcc_generated_files/pin_manager.c: 109:     IOCCNbits.IOCCN5 = 0;
  7068  0C1E  1298               	bcf	24,5	;volatile
  7069                           
  7070                           ;mcc_generated_files/pin_manager.c: 111:     IOCCPbits.IOCCP5 = 0;
  7071  0C1F  1297               	bcf	23,5	;volatile
  7072                           
  7073                           ;mcc_generated_files/pin_manager.c: 116:     IOCCF5_SetInterruptHandler(IOCCF5_DefaultIn
      +                          terruptHandler);
  7074  0C20  3002               	movlw	low _IOCCF5_DefaultInterruptHandler
  7075  0C21  0021               	movlb	1	; select bank1
  7076  0C22  00A0               	movwf	IOCCF5_SetInterruptHandler@InterruptHandler^(0+128)
  7077  0C23  3000               	movlw	high _IOCCF5_DefaultInterruptHandler
  7078  0C24  00A1               	movwf	(IOCCF5_SetInterruptHandler@InterruptHandler^(0+128)+1)
  7079  0C25  318A  2262         	fcall	_IOCCF5_SetInterruptHandler
  7080                           
  7081                           ;mcc_generated_files/pin_manager.c: 119:     INTCONbits.IOCIE = 1;
  7082  0C27  158B               	bsf	11,3	;volatile
  7083                           
  7084                           ;mcc_generated_files/pin_manager.c: 122:     RB7PPS = 0x12;
  7085  0C28  3012               	movlw	18
  7086  0C29  003D               	movlb	29	; select bank29
  7087  0C2A  009F               	movwf	31	;volatile
  7088  0C2B  0008               	return
  7089  0C2C                     __end_of_PIN_MANAGER_Initialize:	
  7090                           
  7091                           	psect	text23
  7092  0A62                     __ptext23:	
  7093 ;; *************** function _IOCCF5_SetInterruptHandler *****************
  7094 ;; Defined at:
  7095 ;;		line 152 in file "mcc_generated_files/pin_manager.c"
  7096 ;; Parameters:    Size  Location     Type
  7097 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  7098 ;;		 -> speedCalc(1), IOCCF5_DefaultInterruptHandler(1), 
  7099 ;; Auto vars:     Size  Location     Type
  7100 ;;		None
  7101 ;; Return value:  Size  Location     Type
  7102 ;;                  1    wreg      void 
  7103 ;; Registers used:
  7104 ;;		wreg
  7105 ;; Tracked objects:
  7106 ;;		On entry : 0/0
  7107 ;;		On exit  : 0/0
  7108 ;;		Unchanged: 0/0
  7109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7110 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7113 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7114 ;;Total ram usage:        2 bytes
  7115 ;; Hardware stack levels used:    1
  7116 ;; Hardware stack levels required when called:    6
  7117 ;; This function calls:
  7118 ;;		Nothing
  7119 ;; This function is called by:
  7120 ;;		_PIN_MANAGER_Initialize
  7121 ;;		_main
  7122 ;; This function uses a non-reentrant model
  7123 ;;
  7124                           
  7125                           
  7126                           ;psect for function _IOCCF5_SetInterruptHandler
  7127  0A62                     _IOCCF5_SetInterruptHandler:	
  7128                           
  7129                           ;mcc_generated_files/pin_manager.c: 153:     IOCCF5_InterruptHandler = InterruptHandler;
  7130                           
  7131                           ;incstack = 0
  7132                           ; Regs used in _IOCCF5_SetInterruptHandler: [wreg]
  7133  0A62  0021               	movlb	1	; select bank1
  7134  0A63  0821               	movf	(IOCCF5_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  7135  0A64  0020               	movlb	0	; select bank0
  7136  0A65  00D9               	movwf	_IOCCF5_InterruptHandler+1
  7137  0A66  0021               	movlb	1	; select bank1
  7138  0A67  0820               	movf	IOCCF5_SetInterruptHandler@InterruptHandler^(0+128),w
  7139  0A68  0020               	movlb	0	; select bank0
  7140  0A69  00D8               	movwf	_IOCCF5_InterruptHandler
  7141  0A6A  0008               	return
  7142  0A6B                     __end_of_IOCCF5_SetInterruptHandler:	
  7143                           
  7144                           	psect	text24
  7145  0A38                     __ptext24:	
  7146 ;; *************** function _OSCILLATOR_Initialize *****************
  7147 ;; Defined at:
  7148 ;;		line 58 in file "mcc_generated_files/mcc.c"
  7149 ;; Parameters:    Size  Location     Type
  7150 ;;		None
  7151 ;; Auto vars:     Size  Location     Type
  7152 ;;		None
  7153 ;; Return value:  Size  Location     Type
  7154 ;;                  1    wreg      void 
  7155 ;; Registers used:
  7156 ;;		wreg, status,2
  7157 ;; Tracked objects:
  7158 ;;		On entry : 0/0
  7159 ;;		On exit  : 0/0
  7160 ;;		Unchanged: 0/0
  7161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7165 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7166 ;;Total ram usage:        0 bytes
  7167 ;; Hardware stack levels used:    1
  7168 ;; Hardware stack levels required when called:    6
  7169 ;; This function calls:
  7170 ;;		Nothing
  7171 ;; This function is called by:
  7172 ;;		_SYSTEM_Initialize
  7173 ;; This function uses a non-reentrant model
  7174 ;;
  7175                           
  7176                           
  7177                           ;psect for function _OSCILLATOR_Initialize
  7178  0A38                     _OSCILLATOR_Initialize:	
  7179                           
  7180                           ;mcc_generated_files/mcc.c: 61:     OSCCON = 0x52;
  7181                           
  7182                           ;incstack = 0
  7183                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  7184  0A38  3052               	movlw	82
  7185  0A39  0021               	movlb	1	; select bank1
  7186  0A3A  0099               	movwf	25	;volatile
  7187                           
  7188                           ;mcc_generated_files/mcc.c: 63:     OSCTUNE = 0x00;
  7189  0A3B  0198               	clrf	24	;volatile
  7190                           
  7191                           ;mcc_generated_files/mcc.c: 65:     BORCON = 0x00;
  7192  0A3C  0022               	movlb	2	; select bank2
  7193  0A3D  0196               	clrf	22	;volatile
  7194  0A3E  0008               	return
  7195  0A3F                     __end_of_OSCILLATOR_Initialize:	
  7196                           
  7197                           	psect	text25
  7198  0BAC                     __ptext25:	
  7199 ;; *************** function _EUSART_Initialize *****************
  7200 ;; Defined at:
  7201 ;;		line 65 in file "mcc_generated_files/eusart.c"
  7202 ;; Parameters:    Size  Location     Type
  7203 ;;		None
  7204 ;; Auto vars:     Size  Location     Type
  7205 ;;		None
  7206 ;; Return value:  Size  Location     Type
  7207 ;;                  1    wreg      void 
  7208 ;; Registers used:
  7209 ;;		wreg, status,2, status,0, pclath, cstack
  7210 ;; Tracked objects:
  7211 ;;		On entry : 0/0
  7212 ;;		On exit  : 0/0
  7213 ;;		Unchanged: 0/0
  7214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7219 ;;Total ram usage:        0 bytes
  7220 ;; Hardware stack levels used:    1
  7221 ;; Hardware stack levels required when called:    7
  7222 ;; This function calls:
  7223 ;;		_EUSART_SetErrorHandler
  7224 ;;		_EUSART_SetFramingErrorHandler
  7225 ;;		_EUSART_SetOverrunErrorHandler
  7226 ;; This function is called by:
  7227 ;;		_SYSTEM_Initialize
  7228 ;; This function uses a non-reentrant model
  7229 ;;
  7230                           
  7231                           
  7232                           ;psect for function _EUSART_Initialize
  7233  0BAC                     _EUSART_Initialize:	
  7234                           
  7235                           ;mcc_generated_files/eusart.c: 70:     BAUD1CON = 0x08;
  7236                           
  7237                           ;incstack = 0
  7238                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7239  0BAC  3008               	movlw	8
  7240  0BAD  0023               	movlb	3	; select bank3
  7241  0BAE  009F               	movwf	31	;volatile
  7242                           
  7243                           ;mcc_generated_files/eusart.c: 73:     RC1STA = 0x80;
  7244  0BAF  3080               	movlw	128
  7245  0BB0  009D               	movwf	29	;volatile
  7246                           
  7247                           ;mcc_generated_files/eusart.c: 76:     TX1STA = 0x24;
  7248  0BB1  3024               	movlw	36
  7249  0BB2  009E               	movwf	30	;volatile
  7250                           
  7251                           ;mcc_generated_files/eusart.c: 79:     SPBRGL = 0x0C;
  7252  0BB3  300C               	movlw	12
  7253  0BB4  009B               	movwf	27	;volatile
  7254                           
  7255                           ;mcc_generated_files/eusart.c: 82:     SPBRGH = 0x00;
  7256  0BB5  019C               	clrf	28	;volatile
  7257                           
  7258                           ;mcc_generated_files/eusart.c: 85:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  7259  0BB6  3000               	movlw	0
  7260  0BB7  0021               	movlb	1	; select bank1
  7261  0BB8  00A0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128)
  7262  0BB9  3000               	movlw	0
  7263  0BBA  00A1               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler^(0+128)+1)
  7264  0BBB  318A  2250  318B   	fcall	_EUSART_SetFramingErrorHandler
  7265                           
  7266                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  7267  0BBE  3000               	movlw	0
  7268  0BBF  0021               	movlb	1	; select bank1
  7269  0BC0  00A0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)
  7270  0BC1  3000               	movlw	0
  7271  0BC2  00A1               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)+1)
  7272  0BC3  318A  2259  318B   	fcall	_EUSART_SetOverrunErrorHandler
  7273                           
  7274                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  7275  0BC6  3000               	movlw	0
  7276  0BC7  0021               	movlb	1	; select bank1
  7277  0BC8  00A0               	movwf	EUSART_SetErrorHandler@interruptHandler^(0+128)
  7278  0BC9  3000               	movlw	0
  7279  0BCA  00A1               	movwf	(EUSART_SetErrorHandler@interruptHandler^(0+128)+1)
  7280  0BCB  318A  2247         	fcall	_EUSART_SetErrorHandler
  7281                           
  7282                           ;mcc_generated_files/eusart.c: 89:     eusartRxLastError.status = 0;
  7283  0BCD  0020               	movlb	0	; select bank0
  7284  0BCE  01D3               	clrf	_eusartRxLastError	;volatile
  7285  0BCF  0008               	return
  7286  0BD0                     __end_of_EUSART_Initialize:	
  7287                           
  7288                           	psect	text26
  7289  0A59                     __ptext26:	
  7290 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  7291 ;; Defined at:
  7292 ;;		line 175 in file "mcc_generated_files/eusart.c"
  7293 ;; Parameters:    Size  Location     Type
  7294 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  7295 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  7296 ;; Auto vars:     Size  Location     Type
  7297 ;;		None
  7298 ;; Return value:  Size  Location     Type
  7299 ;;                  1    wreg      void 
  7300 ;; Registers used:
  7301 ;;		wreg
  7302 ;; Tracked objects:
  7303 ;;		On entry : 0/0
  7304 ;;		On exit  : 0/0
  7305 ;;		Unchanged: 0/0
  7306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7307 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7310 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7311 ;;Total ram usage:        2 bytes
  7312 ;; Hardware stack levels used:    1
  7313 ;; Hardware stack levels required when called:    6
  7314 ;; This function calls:
  7315 ;;		Nothing
  7316 ;; This function is called by:
  7317 ;;		_EUSART_Initialize
  7318 ;; This function uses a non-reentrant model
  7319 ;;
  7320                           
  7321                           
  7322                           ;psect for function _EUSART_SetOverrunErrorHandler
  7323  0A59                     _EUSART_SetOverrunErrorHandler:	
  7324                           
  7325                           ;mcc_generated_files/eusart.c: 176:     EUSART_OverrunErrorHandler = interruptHandler;
  7326                           
  7327                           ;incstack = 0
  7328                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  7329  0A59  0021               	movlb	1	; select bank1
  7330  0A5A  0821               	movf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^(0+128),w
  7331  0A5B  0020               	movlb	0	; select bank0
  7332  0A5C  00DD               	movwf	_EUSART_OverrunErrorHandler+1
  7333  0A5D  0021               	movlb	1	; select bank1
  7334  0A5E  0820               	movf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128),w
  7335  0A5F  0020               	movlb	0	; select bank0
  7336  0A60  00DC               	movwf	_EUSART_OverrunErrorHandler
  7337  0A61  0008               	return
  7338  0A62                     __end_of_EUSART_SetOverrunErrorHandler:	
  7339                           
  7340                           	psect	text27
  7341  0A50                     __ptext27:	
  7342 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  7343 ;; Defined at:
  7344 ;;		line 171 in file "mcc_generated_files/eusart.c"
  7345 ;; Parameters:    Size  Location     Type
  7346 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  7347 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  7348 ;; Auto vars:     Size  Location     Type
  7349 ;;		None
  7350 ;; Return value:  Size  Location     Type
  7351 ;;                  1    wreg      void 
  7352 ;; Registers used:
  7353 ;;		wreg
  7354 ;; Tracked objects:
  7355 ;;		On entry : 0/0
  7356 ;;		On exit  : 0/0
  7357 ;;		Unchanged: 0/0
  7358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7359 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7362 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7363 ;;Total ram usage:        2 bytes
  7364 ;; Hardware stack levels used:    1
  7365 ;; Hardware stack levels required when called:    6
  7366 ;; This function calls:
  7367 ;;		Nothing
  7368 ;; This function is called by:
  7369 ;;		_EUSART_Initialize
  7370 ;; This function uses a non-reentrant model
  7371 ;;
  7372                           
  7373                           
  7374                           ;psect for function _EUSART_SetFramingErrorHandler
  7375  0A50                     _EUSART_SetFramingErrorHandler:	
  7376                           
  7377                           ;mcc_generated_files/eusart.c: 172:     EUSART_FramingErrorHandler = interruptHandler;
  7378                           
  7379                           ;incstack = 0
  7380                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  7381  0A50  0021               	movlb	1	; select bank1
  7382  0A51  0821               	movf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^(0+128),w
  7383  0A52  0020               	movlb	0	; select bank0
  7384  0A53  00DF               	movwf	_EUSART_FramingErrorHandler+1
  7385  0A54  0021               	movlb	1	; select bank1
  7386  0A55  0820               	movf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128),w
  7387  0A56  0020               	movlb	0	; select bank0
  7388  0A57  00DE               	movwf	_EUSART_FramingErrorHandler
  7389  0A58  0008               	return
  7390  0A59                     __end_of_EUSART_SetFramingErrorHandler:	
  7391                           
  7392                           	psect	text28
  7393  0A47                     __ptext28:	
  7394 ;; *************** function _EUSART_SetErrorHandler *****************
  7395 ;; Defined at:
  7396 ;;		line 179 in file "mcc_generated_files/eusart.c"
  7397 ;; Parameters:    Size  Location     Type
  7398 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  7399 ;;		 -> EUSART_DefaultErrorHandler(1), 
  7400 ;; Auto vars:     Size  Location     Type
  7401 ;;		None
  7402 ;; Return value:  Size  Location     Type
  7403 ;;                  1    wreg      void 
  7404 ;; Registers used:
  7405 ;;		wreg
  7406 ;; Tracked objects:
  7407 ;;		On entry : 0/0
  7408 ;;		On exit  : 0/0
  7409 ;;		Unchanged: 0/0
  7410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7411 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7414 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7415 ;;Total ram usage:        2 bytes
  7416 ;; Hardware stack levels used:    1
  7417 ;; Hardware stack levels required when called:    6
  7418 ;; This function calls:
  7419 ;;		Nothing
  7420 ;; This function is called by:
  7421 ;;		_EUSART_Initialize
  7422 ;; This function uses a non-reentrant model
  7423 ;;
  7424                           
  7425                           
  7426                           ;psect for function _EUSART_SetErrorHandler
  7427  0A47                     _EUSART_SetErrorHandler:	
  7428                           
  7429                           ;mcc_generated_files/eusart.c: 180:     EUSART_ErrorHandler = interruptHandler;
  7430                           
  7431                           ;incstack = 0
  7432                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  7433  0A47  0021               	movlb	1	; select bank1
  7434  0A48  0821               	movf	(EUSART_SetErrorHandler@interruptHandler+1)^(0+128),w
  7435  0A49  0020               	movlb	0	; select bank0
  7436  0A4A  00DB               	movwf	_EUSART_ErrorHandler+1
  7437  0A4B  0021               	movlb	1	; select bank1
  7438  0A4C  0820               	movf	EUSART_SetErrorHandler@interruptHandler^(0+128),w
  7439  0A4D  0020               	movlb	0	; select bank0
  7440  0A4E  00DA               	movwf	_EUSART_ErrorHandler
  7441  0A4F  0008               	return
  7442  0A50                     __end_of_EUSART_SetErrorHandler:	
  7443                           
  7444                           	psect	intentry
  7445  0004                     __pintentry:	
  7446 ;; *************** function _INTERRUPT_InterruptManager *****************
  7447 ;; Defined at:
  7448 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  7449 ;; Parameters:    Size  Location     Type
  7450 ;;		None
  7451 ;; Auto vars:     Size  Location     Type
  7452 ;;		None
  7453 ;; Return value:  Size  Location     Type
  7454 ;;                  1    wreg      void 
  7455 ;; Registers used:
  7456 ;;		wreg, status,2, status,0, pclath, cstack
  7457 ;; Tracked objects:
  7458 ;;		On entry : 0/0
  7459 ;;		On exit  : 0/0
  7460 ;;		Unchanged: 0/0
  7461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7466 ;;Total ram usage:        0 bytes
  7467 ;; Hardware stack levels used:    1
  7468 ;; Hardware stack levels required when called:    5
  7469 ;; This function calls:
  7470 ;;		_PIN_MANAGER_IOC
  7471 ;;		_TMR0_ISR
  7472 ;; This function is called by:
  7473 ;;		Interrupt level 1
  7474 ;; This function uses a non-reentrant model
  7475 ;;
  7476                           
  7477  0004                     _INTERRUPT_InterruptManager:	
  7478                           
  7479                           ;incstack = 0
  7480  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  7481                           
  7482                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  7483  0005  3180               	pagesel	$
  7484                           
  7485                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  7486  0006  1A8B               	btfsc	11,5	;volatile
  7487  0007  1D0B               	btfss	11,2	;volatile
  7488  0008  280D               	goto	i1l236
  7489                           
  7490                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
  7491  0009  318A  228D  3180   	fcall	_TMR0_ISR
  7492                           
  7493                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  7494  000C  2812               	goto	i1l239
  7495  000D                     i1l236:	
  7496                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.IOCIE == 1 && INTCO
      +                          Nbits.IOCIF == 1)
  7497                           
  7498  000D  198B               	btfsc	11,3	;volatile
  7499  000E  1C0B               	btfss	11,0	;volatile
  7500  000F  2812               	goto	i1l239
  7501                           
  7502                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         PIN_MANAGER_IOC();
  7503  0010  318A  2220         	fcall	_PIN_MANAGER_IOC
  7504  0012                     i1l239:	
  7505  0012  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  7506  0013  0009               	retfie
  7507  0014                     __end_of_INTERRUPT_InterruptManager:	
  7508                           
  7509                           	psect	text30
  7510  0A8D                     __ptext30:	
  7511 ;; *************** function _TMR0_ISR *****************
  7512 ;; Defined at:
  7513 ;;		line 108 in file "mcc_generated_files/tmr0.c"
  7514 ;; Parameters:    Size  Location     Type
  7515 ;;		None
  7516 ;; Auto vars:     Size  Location     Type
  7517 ;;		None
  7518 ;; Return value:  Size  Location     Type
  7519 ;;                  1    wreg      void 
  7520 ;; Registers used:
  7521 ;;		wreg, status,2, status,0, pclath, cstack
  7522 ;; Tracked objects:
  7523 ;;		On entry : 0/0
  7524 ;;		On exit  : 0/0
  7525 ;;		Unchanged: 0/0
  7526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7531 ;;Total ram usage:        0 bytes
  7532 ;; Hardware stack levels used:    1
  7533 ;; Hardware stack levels required when called:    2
  7534 ;; This function calls:
  7535 ;;		Absolute function
  7536 ;;		_TMR0_DefaultInterruptHandler
  7537 ;;		_timerISR
  7538 ;; This function is called by:
  7539 ;;		_INTERRUPT_InterruptManager
  7540 ;; This function uses a non-reentrant model
  7541 ;;
  7542                           
  7543                           
  7544                           ;psect for function _TMR0_ISR
  7545  0A8D                     _TMR0_ISR:	
  7546                           
  7547                           ;mcc_generated_files/tmr0.c: 112:     INTCONbits.TMR0IF = 0;
  7548                           
  7549                           ;incstack = 0
  7550                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  7551  0A8D  110B               	bcf	11,2	;volatile
  7552                           
  7553                           ;mcc_generated_files/tmr0.c: 114:     TMR0 = timer0ReloadVal;
  7554  0A8E  0020               	movlb	0	; select bank0
  7555  0A8F  0860               	movf	_timer0ReloadVal,w	;volatile
  7556  0A90  0095               	movwf	21	;volatile
  7557                           
  7558                           ;mcc_generated_files/tmr0.c: 116:     if(TMR0_InterruptHandler)
  7559  0A91  0856               	movf	_TMR0_InterruptHandler,w
  7560  0A92  0457               	iorwf	_TMR0_InterruptHandler+1,w
  7561  0A93  1903               	btfsc	3,2
  7562  0A94  0008               	return
  7563                           
  7564                           ;mcc_generated_files/tmr0.c: 117:     {;mcc_generated_files/tmr0.c: 118:         TMR0_In
      +                          terruptHandler();
  7565  0A95  0857               	movf	_TMR0_InterruptHandler+1,w
  7566  0A96  008A               	movwf	10
  7567  0A97  0856               	movf	_TMR0_InterruptHandler,w
  7568  0A98  000A               	callw
  7569  0A99  318A               	pagesel	$
  7570  0A9A  0008               	return
  7571  0A9B                     __end_of_TMR0_ISR:	
  7572                           
  7573                           	psect	text31
  7574  0003                     __ptext31:	
  7575 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  7576 ;; Defined at:
  7577 ;;		line 129 in file "mcc_generated_files/tmr0.c"
  7578 ;; Parameters:    Size  Location     Type
  7579 ;;		None
  7580 ;; Auto vars:     Size  Location     Type
  7581 ;;		None
  7582 ;; Return value:  Size  Location     Type
  7583 ;;                  1    wreg      void 
  7584 ;; Registers used:
  7585 ;;		None
  7586 ;; Tracked objects:
  7587 ;;		On entry : 0/0
  7588 ;;		On exit  : 0/0
  7589 ;;		Unchanged: 0/0
  7590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7595 ;;Total ram usage:        0 bytes
  7596 ;; Hardware stack levels used:    1
  7597 ;; This function calls:
  7598 ;;		Nothing
  7599 ;; This function is called by:
  7600 ;;		_TMR0_Initialize
  7601 ;;		_TMR0_ISR
  7602 ;; This function uses a non-reentrant model
  7603 ;;
  7604                           
  7605                           
  7606                           ;psect for function _TMR0_DefaultInterruptHandler
  7607  0003                     _TMR0_DefaultInterruptHandler:	
  7608                           
  7609                           ;incstack = 0
  7610                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  7611  0003  0008               	return
  7612  0004                     __end_of_TMR0_DefaultInterruptHandler:	
  7613                           
  7614                           	psect	text32
  7615  0B1D                     __ptext32:	
  7616 ;; *************** function _timerISR *****************
  7617 ;; Defined at:
  7618 ;;		line 70 in file "main.c"
  7619 ;; Parameters:    Size  Location     Type
  7620 ;;		None
  7621 ;; Auto vars:     Size  Location     Type
  7622 ;;		None
  7623 ;; Return value:  Size  Location     Type
  7624 ;;                  1    wreg      void 
  7625 ;; Registers used:
  7626 ;;		wreg, status,2, status,0, pclath, cstack
  7627 ;; Tracked objects:
  7628 ;;		On entry : 0/0
  7629 ;;		On exit  : 0/0
  7630 ;;		Unchanged: 0/0
  7631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7636 ;;Total ram usage:        0 bytes
  7637 ;; Hardware stack levels used:    1
  7638 ;; Hardware stack levels required when called:    1
  7639 ;; This function calls:
  7640 ;;		___awmod
  7641 ;; This function is called by:
  7642 ;;		_main
  7643 ;;		_TMR0_ISR
  7644 ;; This function uses a non-reentrant model
  7645 ;;
  7646                           
  7647                           
  7648                           ;psect for function _timerISR
  7649  0B1D                     _timerISR:	
  7650                           
  7651                           ;main.c: 71:     counter++ ;
  7652                           
  7653                           ;incstack = 0
  7654                           ; Regs used in _timerISR: [wreg+status,2+status,0+pclath+cstack]
  7655  0B1D  3001               	movlw	1
  7656  0B1E  0020               	movlb	0	; select bank0
  7657  0B1F  07CF               	addwf	_counter,f
  7658  0B20  3000               	movlw	0
  7659  0B21  3DD0               	addwfc	_counter+1,f
  7660                           
  7661                           ;main.c: 72:     if ( counter % 1000 == 0 ){
  7662  0B22  30E8               	movlw	232
  7663  0B23  00F0               	movwf	___awmod@divisor
  7664  0B24  3003               	movlw	3
  7665  0B25  00F1               	movwf	___awmod@divisor+1
  7666  0B26  0850               	movf	_counter+1,w
  7667  0B27  00F3               	movwf	___awmod@dividend+1
  7668  0B28  084F               	movf	_counter,w
  7669  0B29  00F2               	movwf	___awmod@dividend
  7670  0B2A  318C  24DD  318B   	fcall	___awmod
  7671  0B2D  0870               	movf	?___awmod,w
  7672  0B2E  0471               	iorwf	?___awmod+1,w
  7673  0B2F  1D03               	btfss	3,2
  7674  0B30  0008               	return
  7675                           
  7676                           ;main.c: 73:         second++ ;
  7677  0B31  3001               	movlw	1
  7678  0B32  0020               	movlb	0	; select bank0
  7679  0B33  07D1               	addwf	_second,f
  7680  0B34  3000               	movlw	0
  7681  0B35  3DD2               	addwfc	_second+1,f
  7682  0B36  0008               	return
  7683  0B37                     __end_of_timerISR:	
  7684                           
  7685                           	psect	text33
  7686  0CDD                     __ptext33:	
  7687 ;; *************** function ___awmod *****************
  7688 ;; Defined at:
  7689 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
  7690 ;; Parameters:    Size  Location     Type
  7691 ;;  divisor         2    0[COMMON] int 
  7692 ;;  dividend        2    2[COMMON] int 
  7693 ;; Auto vars:     Size  Location     Type
  7694 ;;  sign            1    6[COMMON] unsigned char 
  7695 ;;  counter         1    5[COMMON] unsigned char 
  7696 ;; Return value:  Size  Location     Type
  7697 ;;                  2    0[COMMON] int 
  7698 ;; Registers used:
  7699 ;;		wreg, status,2, status,0
  7700 ;; Tracked objects:
  7701 ;;		On entry : 0/0
  7702 ;;		On exit  : 0/0
  7703 ;;		Unchanged: 0/0
  7704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7705 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7706 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7707 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7708 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7709 ;;Total ram usage:        7 bytes
  7710 ;; Hardware stack levels used:    1
  7711 ;; This function calls:
  7712 ;;		Nothing
  7713 ;; This function is called by:
  7714 ;;		_timerISR
  7715 ;; This function uses a non-reentrant model
  7716 ;;
  7717                           
  7718                           
  7719                           ;psect for function ___awmod
  7720  0CDD                     ___awmod:	
  7721                           
  7722                           ;incstack = 0
  7723                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  7724  0CDD  01F6               	clrf	___awmod@sign
  7725  0CDE  1FF3               	btfss	___awmod@dividend+1,7
  7726  0CDF  2CE7               	goto	i1l2794
  7727  0CE0  09F2               	comf	___awmod@dividend,f
  7728  0CE1  09F3               	comf	___awmod@dividend+1,f
  7729  0CE2  0AF2               	incf	___awmod@dividend,f
  7730  0CE3  1903               	skipnz
  7731  0CE4  0AF3               	incf	___awmod@dividend+1,f
  7732  0CE5  01F6               	clrf	___awmod@sign
  7733  0CE6  0AF6               	incf	___awmod@sign,f
  7734  0CE7                     i1l2794:	
  7735  0CE7  1FF1               	btfss	___awmod@divisor+1,7
  7736  0CE8  2CEE               	goto	i1l2798
  7737  0CE9  09F0               	comf	___awmod@divisor,f
  7738  0CEA  09F1               	comf	___awmod@divisor+1,f
  7739  0CEB  0AF0               	incf	___awmod@divisor,f
  7740  0CEC  1903               	skipnz
  7741  0CED  0AF1               	incf	___awmod@divisor+1,f
  7742  0CEE                     i1l2798:	
  7743  0CEE  0870               	movf	___awmod@divisor,w
  7744  0CEF  0471               	iorwf	___awmod@divisor+1,w
  7745  0CF0  1903               	btfsc	3,2
  7746  0CF1  2D15               	goto	i1l2816
  7747  0CF2  01F5               	clrf	___awmod@counter
  7748  0CF3  0AF5               	incf	___awmod@counter,f
  7749  0CF4                     i1l2806:	
  7750  0CF4  1BF1               	btfsc	___awmod@divisor+1,7
  7751  0CF5  2D00               	goto	i1l2808
  7752  0CF6  3001               	movlw	1
  7753  0CF7                     u345_25:	
  7754  0CF7  35F0               	lslf	___awmod@divisor,f
  7755  0CF8  0DF1               	rlf	___awmod@divisor+1,f
  7756  0CF9  0B89               	decfsz	9,f
  7757  0CFA  2CF7               	goto	u345_25
  7758  0CFB  3001               	movlw	1
  7759  0CFC  00F4               	movwf	??___awmod
  7760  0CFD  0874               	movf	??___awmod,w
  7761  0CFE  07F5               	addwf	___awmod@counter,f
  7762  0CFF  2CF4               	goto	i1l2806
  7763  0D00                     i1l2808:	
  7764  0D00  0871               	movf	___awmod@divisor+1,w
  7765  0D01  0273               	subwf	___awmod@dividend+1,w
  7766  0D02  1D03               	skipz
  7767  0D03  2D06               	goto	u347_25
  7768  0D04  0870               	movf	___awmod@divisor,w
  7769  0D05  0272               	subwf	___awmod@dividend,w
  7770  0D06                     u347_25:	
  7771  0D06  1C03               	skipc
  7772  0D07  2D0C               	goto	i1l2812
  7773  0D08  0870               	movf	___awmod@divisor,w
  7774  0D09  02F2               	subwf	___awmod@dividend,f
  7775  0D0A  0871               	movf	___awmod@divisor+1,w
  7776  0D0B  3BF3               	subwfb	___awmod@dividend+1,f
  7777  0D0C                     i1l2812:	
  7778  0D0C  3001               	movlw	1
  7779  0D0D                     u348_25:	
  7780  0D0D  36F1               	lsrf	___awmod@divisor+1,f
  7781  0D0E  0CF0               	rrf	___awmod@divisor,f
  7782  0D0F  0B89               	decfsz	9,f
  7783  0D10  2D0D               	goto	u348_25
  7784  0D11  3001               	movlw	1
  7785  0D12  02F5               	subwf	___awmod@counter,f
  7786  0D13  1D03               	btfss	3,2
  7787  0D14  2D00               	goto	i1l2808
  7788  0D15                     i1l2816:	
  7789  0D15  0876               	movf	___awmod@sign,w
  7790  0D16  1903               	btfsc	3,2
  7791  0D17  2D1D               	goto	i1l2820
  7792  0D18  09F2               	comf	___awmod@dividend,f
  7793  0D19  09F3               	comf	___awmod@dividend+1,f
  7794  0D1A  0AF2               	incf	___awmod@dividend,f
  7795  0D1B  1903               	skipnz
  7796  0D1C  0AF3               	incf	___awmod@dividend+1,f
  7797  0D1D                     i1l2820:	
  7798  0D1D  0873               	movf	___awmod@dividend+1,w
  7799  0D1E  00F1               	movwf	?___awmod+1
  7800  0D1F  0872               	movf	___awmod@dividend,w
  7801  0D20  00F0               	movwf	?___awmod
  7802  0D21  0008               	return
  7803  0D22                     __end_of___awmod:	
  7804                           
  7805                           	psect	text34
  7806  0A20                     __ptext34:	
  7807 ;; *************** function _PIN_MANAGER_IOC *****************
  7808 ;; Defined at:
  7809 ;;		line 125 in file "mcc_generated_files/pin_manager.c"
  7810 ;; Parameters:    Size  Location     Type
  7811 ;;		None
  7812 ;; Auto vars:     Size  Location     Type
  7813 ;;		None
  7814 ;; Return value:  Size  Location     Type
  7815 ;;                  1    wreg      void 
  7816 ;; Registers used:
  7817 ;;		wreg, status,2, status,0, pclath, cstack
  7818 ;; Tracked objects:
  7819 ;;		On entry : 0/0
  7820 ;;		On exit  : 0/0
  7821 ;;		Unchanged: 0/0
  7822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7827 ;;Total ram usage:        0 bytes
  7828 ;; Hardware stack levels used:    1
  7829 ;; Hardware stack levels required when called:    4
  7830 ;; This function calls:
  7831 ;;		_IOCCF5_ISR
  7832 ;; This function is called by:
  7833 ;;		_INTERRUPT_InterruptManager
  7834 ;; This function uses a non-reentrant model
  7835 ;;
  7836                           
  7837                           
  7838                           ;psect for function _PIN_MANAGER_IOC
  7839  0A20                     _PIN_MANAGER_IOC:	
  7840                           
  7841                           ;mcc_generated_files/pin_manager.c: 128:     if(IOCCFbits.IOCCF5 == 1)
  7842                           
  7843                           ;incstack = 0
  7844                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
  7845  0A20  0027               	movlb	7	; select bank7
  7846  0A21  1E99               	btfss	25,5	;volatile
  7847  0A22  0008               	return
  7848                           
  7849                           ;mcc_generated_files/pin_manager.c: 129:     {;mcc_generated_files/pin_manager.c: 130:  
      +                                 IOCCF5_ISR();
  7850  0A23  318A  2280         	fcall	_IOCCF5_ISR
  7851  0A25  0008               	return
  7852  0A26                     __end_of_PIN_MANAGER_IOC:	
  7853                           
  7854                           	psect	text35
  7855  0A80                     __ptext35:	
  7856 ;; *************** function _IOCCF5_ISR *****************
  7857 ;; Defined at:
  7858 ;;		line 137 in file "mcc_generated_files/pin_manager.c"
  7859 ;; Parameters:    Size  Location     Type
  7860 ;;		None
  7861 ;; Auto vars:     Size  Location     Type
  7862 ;;		None
  7863 ;; Return value:  Size  Location     Type
  7864 ;;                  1    wreg      void 
  7865 ;; Registers used:
  7866 ;;		wreg, status,2, status,0, pclath, cstack
  7867 ;; Tracked objects:
  7868 ;;		On entry : 0/0
  7869 ;;		On exit  : 0/0
  7870 ;;		Unchanged: 0/0
  7871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7876 ;;Total ram usage:        0 bytes
  7877 ;; Hardware stack levels used:    1
  7878 ;; Hardware stack levels required when called:    3
  7879 ;; This function calls:
  7880 ;;		Absolute function
  7881 ;;		_IOCCF5_DefaultInterruptHandler
  7882 ;;		_speedCalc
  7883 ;; This function is called by:
  7884 ;;		_PIN_MANAGER_IOC
  7885 ;; This function uses a non-reentrant model
  7886 ;;
  7887                           
  7888                           
  7889                           ;psect for function _IOCCF5_ISR
  7890  0A80                     _IOCCF5_ISR:	
  7891                           
  7892                           ;mcc_generated_files/pin_manager.c: 142:     if(IOCCF5_InterruptHandler)
  7893                           
  7894                           ;incstack = 0
  7895                           ; Regs used in _IOCCF5_ISR: [wreg+status,2+status,0+pclath+cstack]
  7896  0A80  0020               	movlb	0	; select bank0
  7897  0A81  0858               	movf	_IOCCF5_InterruptHandler,w
  7898  0A82  0459               	iorwf	_IOCCF5_InterruptHandler+1,w
  7899  0A83  1903               	btfsc	3,2
  7900  0A84  2A8A               	goto	i1l2904
  7901                           
  7902                           ;mcc_generated_files/pin_manager.c: 143:     {;mcc_generated_files/pin_manager.c: 144:  
      +                                 IOCCF5_InterruptHandler();
  7903  0A85  0859               	movf	_IOCCF5_InterruptHandler+1,w
  7904  0A86  008A               	movwf	10
  7905  0A87  0858               	movf	_IOCCF5_InterruptHandler,w
  7906  0A88  000A               	callw
  7907  0A89  318A               	pagesel	$
  7908  0A8A                     i1l2904:	
  7909                           
  7910                           ;mcc_generated_files/pin_manager.c: 146:     IOCCFbits.IOCCF5 = 0;
  7911  0A8A  0027               	movlb	7	; select bank7
  7912  0A8B  1299               	bcf	25,5	;volatile
  7913  0A8C  0008               	return
  7914  0A8D                     __end_of_IOCCF5_ISR:	
  7915                           
  7916                           	psect	text36
  7917  0002                     __ptext36:	
  7918 ;; *************** function _IOCCF5_DefaultInterruptHandler *****************
  7919 ;; Defined at:
  7920 ;;		line 159 in file "mcc_generated_files/pin_manager.c"
  7921 ;; Parameters:    Size  Location     Type
  7922 ;;		None
  7923 ;; Auto vars:     Size  Location     Type
  7924 ;;		None
  7925 ;; Return value:  Size  Location     Type
  7926 ;;                  1    wreg      void 
  7927 ;; Registers used:
  7928 ;;		None
  7929 ;; Tracked objects:
  7930 ;;		On entry : 0/0
  7931 ;;		On exit  : 0/0
  7932 ;;		Unchanged: 0/0
  7933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7938 ;;Total ram usage:        0 bytes
  7939 ;; Hardware stack levels used:    1
  7940 ;; This function calls:
  7941 ;;		Nothing
  7942 ;; This function is called by:
  7943 ;;		_PIN_MANAGER_Initialize
  7944 ;;		_IOCCF5_ISR
  7945 ;; This function uses a non-reentrant model
  7946 ;;
  7947                           
  7948                           
  7949                           ;psect for function _IOCCF5_DefaultInterruptHandler
  7950  0002                     _IOCCF5_DefaultInterruptHandler:	
  7951                           
  7952                           ;incstack = 0
  7953                           ; Regs used in _IOCCF5_DefaultInterruptHandler: []
  7954  0002  0008               	return
  7955  0003                     __end_of_IOCCF5_DefaultInterruptHandler:	
  7956                           
  7957                           	psect	text37
  7958  0E86                     __ptext37:	
  7959 ;; *************** function _speedCalc *****************
  7960 ;; Defined at:
  7961 ;;		line 77 in file "main.c"
  7962 ;; Parameters:    Size  Location     Type
  7963 ;;		None
  7964 ;; Auto vars:     Size  Location     Type
  7965 ;;		None
  7966 ;; Return value:  Size  Location     Type
  7967 ;;                  1    wreg      void 
  7968 ;; Registers used:
  7969 ;;		wreg, status,2, status,0, pclath, cstack
  7970 ;; Tracked objects:
  7971 ;;		On entry : 0/0
  7972 ;;		On exit  : 0/0
  7973 ;;		Unchanged: 0/0
  7974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7976 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7978 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7979 ;;Total ram usage:        4 bytes
  7980 ;; Hardware stack levels used:    1
  7981 ;; Hardware stack levels required when called:    2
  7982 ;; This function calls:
  7983 ;;		___fladd
  7984 ;;		___flmul
  7985 ;;		___fltol
  7986 ;;		___wmul
  7987 ;;		___xxtofl
  7988 ;; This function is called by:
  7989 ;;		_main
  7990 ;;		_IOCCF5_ISR
  7991 ;; This function uses a non-reentrant model
  7992 ;;
  7993                           
  7994                           
  7995                           ;psect for function _speedCalc
  7996  0E86                     _speedCalc:	
  7997                           
  7998                           ;main.c: 79:     rpm = second * 60 ;
  7999                           
  8000                           ;incstack = 0
  8001                           ; Regs used in _speedCalc: [wreg+status,2+status,0+pclath+cstack]
  8002  0E86  0020               	movlb	0	; select bank0
  8003  0E87  0852               	movf	_second+1,w
  8004  0E88  00F1               	movwf	___wmul@multiplier+1
  8005  0E89  0851               	movf	_second,w
  8006  0E8A  00F0               	movwf	___wmul@multiplier
  8007  0E8B  303C               	movlw	60
  8008  0E8C  00F2               	movwf	___wmul@multiplicand
  8009  0E8D  3000               	movlw	0
  8010  0E8E  00F3               	movwf	___wmul@multiplicand+1
  8011  0E8F  318B  2337  318E   	fcall	___wmul
  8012  0E92  0871               	movf	?___wmul+1,w
  8013  0E93  0020               	movlb	0	; select bank0
  8014  0E94  00D5               	movwf	_rpm+1
  8015  0E95  0870               	movf	?___wmul,w
  8016  0E96  00D4               	movwf	_rpm
  8017                           
  8018                           ;main.c: 82:     speed = 2.096 * rpm * 0.06 ;
  8019  0E97  0854               	movf	_rpm,w
  8020  0E98  00F0               	movwf	___xxtofl@val
  8021  0E99  0855               	movf	_rpm+1,w
  8022  0E9A  00F1               	movwf	___xxtofl@val+1
  8023  0E9B  0D89               	rlf	9,f
  8024  0E9C  3B89               	subwfb	9,f
  8025  0E9D  0989               	comf	9,f
  8026  0E9E  00F2               	movwf	___xxtofl@val+2
  8027  0E9F  00F3               	movwf	___xxtofl@val+3
  8028  0EA0  3001               	movlw	1
  8029  0EA1  318D  25F1  318E   	fcall	___xxtofl
  8030  0EA4  0873               	movf	?___xxtofl+3,w
  8031  0EA5  0020               	movlb	0	; select bank0
  8032  0EA6  00A7               	movwf	___flmul@a+3
  8033  0EA7  0872               	movf	?___xxtofl+2,w
  8034  0EA8  00A6               	movwf	___flmul@a+2
  8035  0EA9  0871               	movf	?___xxtofl+1,w
  8036  0EAA  00A5               	movwf	___flmul@a+1
  8037  0EAB  0870               	movf	?___xxtofl,w
  8038  0EAC  00A4               	movwf	___flmul@a
  8039  0EAD  3040               	movlw	64
  8040  0EAE  00A3               	movwf	___flmul@b+3
  8041  0EAF  3006               	movlw	6
  8042  0EB0  00A2               	movwf	___flmul@b+2
  8043  0EB1  3024               	movlw	36
  8044  0EB2  00A1               	movwf	___flmul@b+1
  8045  0EB3  30DD               	movlw	221
  8046  0EB4  00A0               	movwf	___flmul@b
  8047  0EB5  3180  203C  318E   	fcall	___flmul
  8048  0EB8  0020               	movlb	0	; select bank0
  8049  0EB9  0823               	movf	?___flmul+3,w
  8050  0EBA  00C8               	movwf	_speedCalc$1214+3
  8051  0EBB  0822               	movf	?___flmul+2,w
  8052  0EBC  00C7               	movwf	_speedCalc$1214+2
  8053  0EBD  0821               	movf	?___flmul+1,w
  8054  0EBE  00C6               	movwf	_speedCalc$1214+1
  8055  0EBF  0820               	movf	?___flmul,w
  8056  0EC0  00C5               	movwf	_speedCalc$1214
  8057                           
  8058                           ;main.c: 82:     speed = 2.096 * rpm * 0.06 ;
  8059  0EC1  0848               	movf	_speedCalc$1214+3,w
  8060  0EC2  00A7               	movwf	___flmul@a+3
  8061  0EC3  0847               	movf	_speedCalc$1214+2,w
  8062  0EC4  00A6               	movwf	___flmul@a+2
  8063  0EC5  0846               	movf	_speedCalc$1214+1,w
  8064  0EC6  00A5               	movwf	___flmul@a+1
  8065  0EC7  0845               	movf	_speedCalc$1214,w
  8066  0EC8  00A4               	movwf	___flmul@a
  8067  0EC9  303D               	movlw	61
  8068  0ECA  00A3               	movwf	___flmul@b+3
  8069  0ECB  3075               	movlw	117
  8070  0ECC  00A2               	movwf	___flmul@b+2
  8071  0ECD  30C2               	movlw	194
  8072  0ECE  00A1               	movwf	___flmul@b+1
  8073  0ECF  308F               	movlw	143
  8074  0ED0  00A0               	movwf	___flmul@b
  8075  0ED1  3180  203C  318E   	fcall	___flmul
  8076  0ED4  0020               	movlb	0	; select bank0
  8077  0ED5  0823               	movf	?___flmul+3,w
  8078  0ED6  00BD               	movwf	___fltol@f1+3
  8079  0ED7  0822               	movf	?___flmul+2,w
  8080  0ED8  00BC               	movwf	___fltol@f1+2
  8081  0ED9  0821               	movf	?___flmul+1,w
  8082  0EDA  00BB               	movwf	___fltol@f1+1
  8083  0EDB  0820               	movf	?___flmul,w
  8084  0EDC  00BA               	movwf	___fltol@f1
  8085  0EDD  318D  2522  318E   	fcall	___fltol
  8086  0EE0  0020               	movlb	0	; select bank0
  8087  0EE1  083B               	movf	?___fltol+1,w
  8088  0EE2  0022               	movlb	2	; select bank2
  8089  0EE3  00D0               	movwf	(_speed+1)^(0+256)
  8090  0EE4  0020               	movlb	0	; select bank0
  8091  0EE5  083A               	movf	?___fltol,w
  8092  0EE6  0022               	movlb	2	; select bank2
  8093  0EE7  00CF               	movwf	_speed^(0+256)
  8094                           
  8095                           ;main.c: 83:     second = 0 ;
  8096  0EE8  0020               	movlb	0	; select bank0
  8097  0EE9  01D1               	clrf	_second
  8098  0EEA  01D2               	clrf	_second+1
  8099                           
  8100                           ;main.c: 84:     distance = distance + 2.096 ;
  8101  0EEB  0022               	movlb	2	; select bank2
  8102  0EEC  0851               	movf	_distance^(0+256),w
  8103  0EED  00F0               	movwf	___xxtofl@val
  8104  0EEE  0852               	movf	(_distance+1)^(0+256),w
  8105  0EEF  00F1               	movwf	___xxtofl@val+1
  8106  0EF0  0D89               	rlf	9,f
  8107  0EF1  3B89               	subwfb	9,f
  8108  0EF2  0989               	comf	9,f
  8109  0EF3  00F2               	movwf	___xxtofl@val+2
  8110  0EF4  00F3               	movwf	___xxtofl@val+3
  8111  0EF5  3001               	movlw	1
  8112  0EF6  318D  25F1  318E   	fcall	___xxtofl
  8113  0EF9  0873               	movf	?___xxtofl+3,w
  8114  0EFA  0020               	movlb	0	; select bank0
  8115  0EFB  00A7               	movwf	___fladd@a+3
  8116  0EFC  0872               	movf	?___xxtofl+2,w
  8117  0EFD  00A6               	movwf	___fladd@a+2
  8118  0EFE  0871               	movf	?___xxtofl+1,w
  8119  0EFF  00A5               	movwf	___fladd@a+1
  8120  0F00  0870               	movf	?___xxtofl,w
  8121  0F01  00A4               	movwf	___fladd@a
  8122  0F02  3040               	movlw	64
  8123  0F03  00A3               	movwf	___fladd@b+3
  8124  0F04  3006               	movlw	6
  8125  0F05  00A2               	movwf	___fladd@b+2
  8126  0F06  3024               	movlw	36
  8127  0F07  00A1               	movwf	___fladd@b+1
  8128  0F08  30DD               	movlw	221
  8129  0F09  00A0               	movwf	___fladd@b
  8130  0F0A  3182  2268  318E   	fcall	___fladd
  8131  0F0D  0020               	movlb	0	; select bank0
  8132  0F0E  0823               	movf	?___fladd+3,w
  8133  0F0F  00BD               	movwf	___fltol@f1+3
  8134  0F10  0822               	movf	?___fladd+2,w
  8135  0F11  00BC               	movwf	___fltol@f1+2
  8136  0F12  0821               	movf	?___fladd+1,w
  8137  0F13  00BB               	movwf	___fltol@f1+1
  8138  0F14  0820               	movf	?___fladd,w
  8139  0F15  00BA               	movwf	___fltol@f1
  8140  0F16  318D  2522         	fcall	___fltol
  8141  0F18  0020               	movlb	0	; select bank0
  8142  0F19  083B               	movf	?___fltol+1,w
  8143  0F1A  0022               	movlb	2	; select bank2
  8144  0F1B  00D2               	movwf	(_distance+1)^(0+256)
  8145  0F1C  0020               	movlb	0	; select bank0
  8146  0F1D  083A               	movf	?___fltol,w
  8147  0F1E  0022               	movlb	2	; select bank2
  8148  0F1F  00D1               	movwf	_distance^(0+256)
  8149  0F20  0008               	return
  8150  0F21                     __end_of_speedCalc:	
  8151                           
  8152                           	psect	text38
  8153  0DF1                     __ptext38:	
  8154 ;; *************** function ___xxtofl *****************
  8155 ;; Defined at:
  8156 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
  8157 ;; Parameters:    Size  Location     Type
  8158 ;;  sign            1    wreg     unsigned char 
  8159 ;;  val             4    0[COMMON] long 
  8160 ;; Auto vars:     Size  Location     Type
  8161 ;;  sign            1    8[COMMON] unsigned char 
  8162 ;;  arg             4   10[COMMON] unsigned long 
  8163 ;;  exp             1    9[COMMON] unsigned char 
  8164 ;; Return value:  Size  Location     Type
  8165 ;;                  4    0[COMMON] unsigned char 
  8166 ;; Registers used:
  8167 ;;		wreg, status,2, status,0
  8168 ;; Tracked objects:
  8169 ;;		On entry : 0/0
  8170 ;;		On exit  : 0/0
  8171 ;;		Unchanged: 0/0
  8172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8173 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8174 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8175 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8176 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8177 ;;Total ram usage:       14 bytes
  8178 ;; Hardware stack levels used:    1
  8179 ;; This function calls:
  8180 ;;		Nothing
  8181 ;; This function is called by:
  8182 ;;		_speedCalc
  8183 ;; This function uses a non-reentrant model
  8184 ;;
  8185                           
  8186                           
  8187                           ;psect for function ___xxtofl
  8188  0DF1                     ___xxtofl:	
  8189                           
  8190                           ;incstack = 0
  8191                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  8192                           ;___xxtofl@sign stored from wreg
  8193  0DF1  00F8               	movwf	___xxtofl@sign
  8194  0DF2  0878               	movf	___xxtofl@sign,w
  8195  0DF3  1D03               	btfss	3,2
  8196  0DF4  1FF3               	btfss	___xxtofl@val+3,7
  8197  0DF5  2E06               	goto	i1l2676
  8198  0DF6  0970               	comf	___xxtofl@val,w
  8199  0DF7  00FA               	movwf	___xxtofl@arg
  8200  0DF8  0971               	comf	___xxtofl@val+1,w
  8201  0DF9  00FB               	movwf	___xxtofl@arg+1
  8202  0DFA  0972               	comf	___xxtofl@val+2,w
  8203  0DFB  00FC               	movwf	___xxtofl@arg+2
  8204  0DFC  0973               	comf	___xxtofl@val+3,w
  8205  0DFD  00FD               	movwf	___xxtofl@arg+3
  8206  0DFE  0AFA               	incf	___xxtofl@arg,f
  8207  0DFF  1903               	skipnz
  8208  0E00  0AFB               	incf	___xxtofl@arg+1,f
  8209  0E01  1903               	skipnz
  8210  0E02  0AFC               	incf	___xxtofl@arg+2,f
  8211  0E03  1903               	skipnz
  8212  0E04  0AFD               	incf	___xxtofl@arg+3,f
  8213  0E05  2E0E               	goto	i1l928
  8214  0E06                     i1l2676:	
  8215  0E06  0873               	movf	___xxtofl@val+3,w
  8216  0E07  00FD               	movwf	___xxtofl@arg+3
  8217  0E08  0872               	movf	___xxtofl@val+2,w
  8218  0E09  00FC               	movwf	___xxtofl@arg+2
  8219  0E0A  0871               	movf	___xxtofl@val+1,w
  8220  0E0B  00FB               	movwf	___xxtofl@arg+1
  8221  0E0C  0870               	movf	___xxtofl@val,w
  8222  0E0D  00FA               	movwf	___xxtofl@arg
  8223  0E0E                     i1l928:	
  8224  0E0E  0873               	movf	___xxtofl@val+3,w
  8225  0E0F  0472               	iorwf	___xxtofl@val+2,w
  8226  0E10  0471               	iorwf	___xxtofl@val+1,w
  8227  0E11  0470               	iorwf	___xxtofl@val,w
  8228  0E12  1D03               	skipz
  8229  0E13  2E1D               	goto	i1l2682
  8230  0E14  3000               	movlw	0
  8231  0E15  00F3               	movwf	?___xxtofl+3
  8232  0E16  3000               	movlw	0
  8233  0E17  00F2               	movwf	?___xxtofl+2
  8234  0E18  3000               	movlw	0
  8235  0E19  00F1               	movwf	?___xxtofl+1
  8236  0E1A  3000               	movlw	0
  8237  0E1B  00F0               	movwf	?___xxtofl
  8238  0E1C  0008               	return
  8239  0E1D                     i1l2682:	
  8240  0E1D  3096               	movlw	150
  8241  0E1E  00F4               	movwf	??___xxtofl
  8242  0E1F  0874               	movf	??___xxtofl,w
  8243  0E20  00F9               	movwf	___xxtofl@exp
  8244  0E21                     i1l2686:	
  8245  0E21  30FE               	movlw	254
  8246  0E22  057D               	andwf	___xxtofl@arg+3,w
  8247  0E23  1903               	btfsc	3,2
  8248  0E24  2E44               	goto	i1l934
  8249  0E25  3001               	movlw	1
  8250  0E26  00F4               	movwf	??___xxtofl
  8251  0E27  0874               	movf	??___xxtofl,w
  8252  0E28  07F9               	addwf	___xxtofl@exp,f
  8253  0E29  3001               	movlw	1
  8254  0E2A                     u326_25:	
  8255  0E2A  36FD               	lsrf	___xxtofl@arg+3,f
  8256  0E2B  0CFC               	rrf	___xxtofl@arg+2,f
  8257  0E2C  0CFB               	rrf	___xxtofl@arg+1,f
  8258  0E2D  0CFA               	rrf	___xxtofl@arg,f
  8259  0E2E  0B89               	decfsz	9,f
  8260  0E2F  2E2A               	goto	u326_25
  8261  0E30  2E21               	goto	i1l2686
  8262  0E31                     i1l2688:	
  8263  0E31  3001               	movlw	1
  8264  0E32  00F4               	movwf	??___xxtofl
  8265  0E33  0874               	movf	??___xxtofl,w
  8266  0E34  07F9               	addwf	___xxtofl@exp,f
  8267  0E35  3001               	movlw	1
  8268  0E36  07FA               	addwf	___xxtofl@arg,f
  8269  0E37  3000               	movlw	0
  8270  0E38  3DFB               	addwfc	___xxtofl@arg+1,f
  8271  0E39  3000               	movlw	0
  8272  0E3A  3DFC               	addwfc	___xxtofl@arg+2,f
  8273  0E3B  3000               	movlw	0
  8274  0E3C  3DFD               	addwfc	___xxtofl@arg+3,f
  8275  0E3D  3001               	movlw	1
  8276  0E3E                     u328_25:	
  8277  0E3E  36FD               	lsrf	___xxtofl@arg+3,f
  8278  0E3F  0CFC               	rrf	___xxtofl@arg+2,f
  8279  0E40  0CFB               	rrf	___xxtofl@arg+1,f
  8280  0E41  0CFA               	rrf	___xxtofl@arg,f
  8281  0E42  0B89               	decfsz	9,f
  8282  0E43  2E3E               	goto	u328_25
  8283  0E44                     i1l934:	
  8284  0E44  30FF               	movlw	255
  8285  0E45  057D               	andwf	___xxtofl@arg+3,w
  8286  0E46  1903               	btfsc	3,2
  8287  0E47  2E56               	goto	i1l2696
  8288  0E48  2E31               	goto	i1l2688
  8289  0E49                     i1l2698:	
  8290  0E49  3002               	movlw	2
  8291  0E4A  0279               	subwf	___xxtofl@exp,w
  8292  0E4B  1C03               	btfss	3,0
  8293  0E4C  2E58               	goto	i1l941
  8294  0E4D  3001               	movlw	1
  8295  0E4E  02F9               	subwf	___xxtofl@exp,f
  8296  0E4F  3001               	movlw	1
  8297  0E50                     u330_25:	
  8298  0E50  35FA               	lslf	___xxtofl@arg,f
  8299  0E51  0DFB               	rlf	___xxtofl@arg+1,f
  8300  0E52  0DFC               	rlf	___xxtofl@arg+2,f
  8301  0E53  0DFD               	rlf	___xxtofl@arg+3,f
  8302  0E54  0B89               	decfsz	9,f
  8303  0E55  2E50               	goto	u330_25
  8304  0E56                     i1l2696:	
  8305  0E56  1FFC               	btfss	___xxtofl@arg+2,7
  8306  0E57  2E49               	goto	i1l2698
  8307  0E58                     i1l941:	
  8308  0E58  1879               	btfsc	___xxtofl@exp,0
  8309  0E59  2E62               	goto	i1l942
  8310  0E5A  30FF               	movlw	255
  8311  0E5B  05FA               	andwf	___xxtofl@arg,f
  8312  0E5C  30FF               	movlw	255
  8313  0E5D  05FB               	andwf	___xxtofl@arg+1,f
  8314  0E5E  307F               	movlw	127
  8315  0E5F  05FC               	andwf	___xxtofl@arg+2,f
  8316  0E60  30FF               	movlw	255
  8317  0E61  05FD               	andwf	___xxtofl@arg+3,f
  8318  0E62                     i1l942:	
  8319  0E62  1003               	clrc
  8320  0E63  0CF9               	rrf	___xxtofl@exp,f
  8321  0E64  0879               	movf	___xxtofl@exp,w
  8322  0E65  00F4               	movwf	??___xxtofl
  8323  0E66  01F5               	clrf	??___xxtofl+1
  8324  0E67  01F6               	clrf	??___xxtofl+2
  8325  0E68  01F7               	clrf	??___xxtofl+3
  8326  0E69  3018               	movlw	24
  8327  0E6A                     u334_25:	
  8328  0E6A  35F4               	lslf	??___xxtofl,f
  8329  0E6B  0DF5               	rlf	??___xxtofl+1,f
  8330  0E6C  0DF6               	rlf	??___xxtofl+2,f
  8331  0E6D  0DF7               	rlf	??___xxtofl+3,f
  8332  0E6E  0B89               	decfsz	9,f
  8333  0E6F  2E6A               	goto	u334_25
  8334  0E70  0874               	movf	??___xxtofl,w
  8335  0E71  04FA               	iorwf	___xxtofl@arg,f
  8336  0E72  0875               	movf	??___xxtofl+1,w
  8337  0E73  04FB               	iorwf	___xxtofl@arg+1,f
  8338  0E74  0876               	movf	??___xxtofl+2,w
  8339  0E75  04FC               	iorwf	___xxtofl@arg+2,f
  8340  0E76  0877               	movf	??___xxtofl+3,w
  8341  0E77  04FD               	iorwf	___xxtofl@arg+3,f
  8342  0E78  0878               	movf	___xxtofl@sign,w
  8343  0E79  1D03               	btfss	3,2
  8344  0E7A  1FF3               	btfss	___xxtofl@val+3,7
  8345  0E7B  2E7D               	goto	i1l2710
  8346  0E7C  17FD               	bsf	___xxtofl@arg+3,7
  8347  0E7D                     i1l2710:	
  8348  0E7D  087D               	movf	___xxtofl@arg+3,w
  8349  0E7E  00F3               	movwf	?___xxtofl+3
  8350  0E7F  087C               	movf	___xxtofl@arg+2,w
  8351  0E80  00F2               	movwf	?___xxtofl+2
  8352  0E81  087B               	movf	___xxtofl@arg+1,w
  8353  0E82  00F1               	movwf	?___xxtofl+1
  8354  0E83  087A               	movf	___xxtofl@arg,w
  8355  0E84  00F0               	movwf	?___xxtofl
  8356  0E85  0008               	return
  8357  0E86                     __end_of___xxtofl:	
  8358                           
  8359                           	psect	text39
  8360  0B37                     __ptext39:	
  8361 ;; *************** function ___wmul *****************
  8362 ;; Defined at:
  8363 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  8364 ;; Parameters:    Size  Location     Type
  8365 ;;  multiplier      2    0[COMMON] unsigned int 
  8366 ;;  multiplicand    2    2[COMMON] unsigned int 
  8367 ;; Auto vars:     Size  Location     Type
  8368 ;;  product         2    4[COMMON] unsigned int 
  8369 ;; Return value:  Size  Location     Type
  8370 ;;                  2    0[COMMON] unsigned int 
  8371 ;; Registers used:
  8372 ;;		wreg, status,2, status,0
  8373 ;; Tracked objects:
  8374 ;;		On entry : 0/0
  8375 ;;		On exit  : 0/0
  8376 ;;		Unchanged: 0/0
  8377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8378 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8379 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8381 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8382 ;;Total ram usage:        6 bytes
  8383 ;; Hardware stack levels used:    1
  8384 ;; This function calls:
  8385 ;;		Nothing
  8386 ;; This function is called by:
  8387 ;;		_speedCalc
  8388 ;; This function uses a non-reentrant model
  8389 ;;
  8390                           
  8391                           
  8392                           ;psect for function ___wmul
  8393  0B37                     ___wmul:	
  8394                           
  8395                           ;incstack = 0
  8396                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8397  0B37  01F4               	clrf	___wmul@product
  8398  0B38  01F5               	clrf	___wmul@product+1
  8399  0B39                     i1l2288:	
  8400  0B39  1C70               	btfss	___wmul@multiplier,0
  8401  0B3A  2B3F               	goto	i1l493
  8402  0B3B  0872               	movf	___wmul@multiplicand,w
  8403  0B3C  07F4               	addwf	___wmul@product,f
  8404  0B3D  0873               	movf	___wmul@multiplicand+1,w
  8405  0B3E  3DF5               	addwfc	___wmul@product+1,f
  8406  0B3F                     i1l493:	
  8407  0B3F  3001               	movlw	1
  8408  0B40                     u241_25:	
  8409  0B40  35F2               	lslf	___wmul@multiplicand,f
  8410  0B41  0DF3               	rlf	___wmul@multiplicand+1,f
  8411  0B42  0B89               	decfsz	9,f
  8412  0B43  2B40               	goto	u241_25
  8413  0B44  3001               	movlw	1
  8414  0B45                     u242_25:	
  8415  0B45  36F1               	lsrf	___wmul@multiplier+1,f
  8416  0B46  0CF0               	rrf	___wmul@multiplier,f
  8417  0B47  0B89               	decfsz	9,f
  8418  0B48  2B45               	goto	u242_25
  8419  0B49  0870               	movf	___wmul@multiplier,w
  8420  0B4A  0471               	iorwf	___wmul@multiplier+1,w
  8421  0B4B  1D03               	btfss	3,2
  8422  0B4C  2B39               	goto	i1l2288
  8423  0B4D  0875               	movf	___wmul@product+1,w
  8424  0B4E  00F1               	movwf	?___wmul+1
  8425  0B4F  0874               	movf	___wmul@product,w
  8426  0B50  00F0               	movwf	?___wmul
  8427  0B51  0008               	return
  8428  0B52                     __end_of___wmul:	
  8429                           
  8430                           	psect	text40
  8431  0D22                     __ptext40:	
  8432 ;; *************** function ___fltol *****************
  8433 ;; Defined at:
  8434 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
  8435 ;; Parameters:    Size  Location     Type
  8436 ;;  f1              4   26[BANK0 ] unsigned int 
  8437 ;; Auto vars:     Size  Location     Type
  8438 ;;  exp1            1   36[BANK0 ] unsigned char 
  8439 ;;  sign1           1   35[BANK0 ] unsigned char 
  8440 ;; Return value:  Size  Location     Type
  8441 ;;                  4   26[BANK0 ] long 
  8442 ;; Registers used:
  8443 ;;		wreg, status,2, status,0
  8444 ;; Tracked objects:
  8445 ;;		On entry : 0/0
  8446 ;;		On exit  : 0/0
  8447 ;;		Unchanged: 0/0
  8448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8449 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8450 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8451 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8452 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8453 ;;Total ram usage:       11 bytes
  8454 ;; Hardware stack levels used:    1
  8455 ;; This function calls:
  8456 ;;		Nothing
  8457 ;; This function is called by:
  8458 ;;		_speedCalc
  8459 ;; This function uses a non-reentrant model
  8460 ;;
  8461                           
  8462                           
  8463                           ;psect for function ___fltol
  8464  0D22                     ___fltol:	
  8465                           
  8466                           ;incstack = 0
  8467                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  8468  0D22  1003               	clrc
  8469  0D23  0020               	movlb	0	; select bank0
  8470  0D24  0D3C               	rlf	___fltol@f1+2,w
  8471  0D25  0D3D               	rlf	___fltol@f1+3,w
  8472  0D26  00BE               	movwf	??___fltol
  8473  0D27  083E               	movf	??___fltol,w
  8474  0D28  00C4               	movwf	___fltol@exp1
  8475  0D29  0844               	movf	___fltol@exp1,w
  8476  0D2A  1D03               	btfss	3,2
  8477  0D2B  2D35               	goto	i1l2306
  8478  0D2C                     i1l2302:	
  8479  0D2C  3000               	movlw	0
  8480  0D2D  00BD               	movwf	?___fltol+3
  8481  0D2E  3000               	movlw	0
  8482  0D2F  00BC               	movwf	?___fltol+2
  8483  0D30  3000               	movlw	0
  8484  0D31  00BB               	movwf	?___fltol+1
  8485  0D32  3000               	movlw	0
  8486  0D33  00BA               	movwf	?___fltol
  8487  0D34  0008               	return
  8488  0D35                     i1l2306:	
  8489  0D35  083A               	movf	___fltol@f1,w
  8490  0D36  00BE               	movwf	??___fltol
  8491  0D37  083B               	movf	___fltol@f1+1,w
  8492  0D38  00BF               	movwf	??___fltol+1
  8493  0D39  083C               	movf	___fltol@f1+2,w
  8494  0D3A  00C0               	movwf	??___fltol+2
  8495  0D3B  083D               	movf	___fltol@f1+3,w
  8496  0D3C  00C1               	movwf	??___fltol+3
  8497  0D3D  301F               	movlw	31
  8498  0D3E                     u245_25:	
  8499  0D3E  36C1               	lsrf	??___fltol+3,f
  8500  0D3F  0CC0               	rrf	??___fltol+2,f
  8501  0D40  0CBF               	rrf	??___fltol+1,f
  8502  0D41  0CBE               	rrf	??___fltol,f
  8503  0D42  0B89               	decfsz	9,f
  8504  0D43  2D3E               	goto	u245_25
  8505  0D44  083E               	movf	??___fltol,w
  8506  0D45  00C2               	movwf	??___fltol+4
  8507  0D46  0842               	movf	??___fltol+4,w
  8508  0D47  00C3               	movwf	___fltol@sign1
  8509  0D48  17BC               	bsf	___fltol@f1+2,7
  8510  0D49  30FF               	movlw	255
  8511  0D4A  05BA               	andwf	___fltol@f1,f
  8512  0D4B  30FF               	movlw	255
  8513  0D4C  05BB               	andwf	___fltol@f1+1,f
  8514  0D4D  30FF               	movlw	255
  8515  0D4E  05BC               	andwf	___fltol@f1+2,f
  8516  0D4F  3000               	movlw	0
  8517  0D50  05BD               	andwf	___fltol@f1+3,f
  8518  0D51  3096               	movlw	150
  8519  0D52  02C4               	subwf	___fltol@exp1,f
  8520  0D53  1FC4               	btfss	___fltol@exp1,7
  8521  0D54  2D68               	goto	i1l2324
  8522  0D55  0844               	movf	___fltol@exp1,w
  8523  0D56  3A80               	xorlw	128
  8524  0D57  3E97               	addlw	151
  8525  0D58  1C03               	btfss	3,0
  8526  0D59  2D2C               	goto	i1l2302
  8527  0D5A                     i1l2322:	
  8528  0D5A  3001               	movlw	1
  8529  0D5B                     u248_25:	
  8530  0D5B  36BD               	lsrf	___fltol@f1+3,f
  8531  0D5C  0CBC               	rrf	___fltol@f1+2,f
  8532  0D5D  0CBB               	rrf	___fltol@f1+1,f
  8533  0D5E  0CBA               	rrf	___fltol@f1,f
  8534  0D5F  0B89               	decfsz	9,f
  8535  0D60  2D5B               	goto	u248_25
  8536  0D61  3001               	movlw	1
  8537  0D62  00BE               	movwf	??___fltol
  8538  0D63  083E               	movf	??___fltol,w
  8539  0D64  07C4               	addwf	___fltol@exp1,f
  8540  0D65  1903               	btfsc	3,2
  8541  0D66  2D79               	goto	i1l2332
  8542  0D67  2D5A               	goto	i1l2322
  8543  0D68                     i1l2324:	
  8544  0D68  3020               	movlw	32
  8545  0D69  0244               	subwf	___fltol@exp1,w
  8546  0D6A  1803               	btfsc	3,0
  8547  0D6B  2D2C               	goto	i1l2302
  8548  0D6C                     i1l694:	
  8549  0D6C  0844               	movf	___fltol@exp1,w
  8550  0D6D  1903               	btfsc	3,2
  8551  0D6E  2D79               	goto	i1l2332
  8552  0D6F  3001               	movlw	1
  8553  0D70                     u251_25:	
  8554  0D70  35BA               	lslf	___fltol@f1,f
  8555  0D71  0DBB               	rlf	___fltol@f1+1,f
  8556  0D72  0DBC               	rlf	___fltol@f1+2,f
  8557  0D73  0DBD               	rlf	___fltol@f1+3,f
  8558  0D74  0B89               	decfsz	9,f
  8559  0D75  2D70               	goto	u251_25
  8560  0D76  3001               	movlw	1
  8561  0D77  02C4               	subwf	___fltol@exp1,f
  8562  0D78  2D6C               	goto	i1l694
  8563  0D79                     i1l2332:	
  8564  0D79  0843               	movf	___fltol@sign1,w
  8565  0D7A  1903               	btfsc	3,2
  8566  0D7B  0008               	return
  8567  0D7C  09BA               	comf	___fltol@f1,f
  8568  0D7D  09BB               	comf	___fltol@f1+1,f
  8569  0D7E  09BC               	comf	___fltol@f1+2,f
  8570  0D7F  09BD               	comf	___fltol@f1+3,f
  8571  0D80  0ABA               	incf	___fltol@f1,f
  8572  0D81  1903               	skipnz
  8573  0D82  0ABB               	incf	___fltol@f1+1,f
  8574  0D83  1903               	skipnz
  8575  0D84  0ABC               	incf	___fltol@f1+2,f
  8576  0D85  1903               	skipnz
  8577  0D86  0ABD               	incf	___fltol@f1+3,f
  8578  0D87  0008               	return
  8579  0D88                     __end_of___fltol:	
  8580                           
  8581                           	psect	text41
  8582  003C                     __ptext41:	
  8583 ;; *************** function ___flmul *****************
  8584 ;; Defined at:
  8585 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
  8586 ;; Parameters:    Size  Location     Type
  8587 ;;  b               4    0[BANK0 ] long 
  8588 ;;  a               4    4[BANK0 ] long 
  8589 ;; Auto vars:     Size  Location     Type
  8590 ;;  prod            4   20[BANK0 ] struct .
  8591 ;;  grs             4   14[BANK0 ] unsigned long 
  8592 ;;  temp            2   24[BANK0 ] struct .
  8593 ;;  bexp            1   19[BANK0 ] unsigned char 
  8594 ;;  aexp            1   18[BANK0 ] unsigned char 
  8595 ;;  sign            1   13[BANK0 ] unsigned char 
  8596 ;; Return value:  Size  Location     Type
  8597 ;;                  4    0[BANK0 ] unsigned char 
  8598 ;; Registers used:
  8599 ;;		wreg, status,2, status,0, pclath, cstack
  8600 ;; Tracked objects:
  8601 ;;		On entry : 0/0
  8602 ;;		On exit  : 0/0
  8603 ;;		Unchanged: 0/0
  8604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8605 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8606 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8607 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8608 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8609 ;;Total ram usage:       26 bytes
  8610 ;; Hardware stack levels used:    1
  8611 ;; Hardware stack levels required when called:    1
  8612 ;; This function calls:
  8613 ;;		__Umul8_16
  8614 ;; This function is called by:
  8615 ;;		_speedCalc
  8616 ;; This function uses a non-reentrant model
  8617 ;;
  8618                           
  8619                           
  8620                           ;psect for function ___flmul
  8621  003C                     ___flmul:	
  8622                           
  8623                           ;incstack = 0
  8624                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  8625  003C  0020               	movlb	0	; select bank0
  8626  003D  0823               	movf	___flmul@b+3,w
  8627  003E  3980               	andlw	128
  8628  003F  00A8               	movwf	??___flmul
  8629  0040  0828               	movf	??___flmul,w
  8630  0041  00AD               	movwf	___flmul@sign
  8631  0042  3523               	lslf	___flmul@b+3,w
  8632  0043  00A8               	movwf	??___flmul
  8633  0044  0828               	movf	??___flmul,w
  8634  0045  00B3               	movwf	___flmul@bexp
  8635  0046  1BA2               	btfsc	___flmul@b+2,7
  8636  0047  1433               	bsf	___flmul@bexp,0
  8637  0048  0833               	movf	___flmul@bexp,w
  8638  0049  1903               	btfsc	3,2
  8639  004A  2858               	goto	i1l2546
  8640  004B  0A33               	incf	___flmul@bexp,w
  8641  004C  1D03               	btfss	3,2
  8642  004D  2856               	goto	i1l2544
  8643  004E  3000               	movlw	0
  8644  004F  00A3               	movwf	___flmul@b+3
  8645  0050  3000               	movlw	0
  8646  0051  00A2               	movwf	___flmul@b+2
  8647  0052  3000               	movlw	0
  8648  0053  00A1               	movwf	___flmul@b+1
  8649  0054  3000               	movlw	0
  8650  0055  00A0               	movwf	___flmul@b
  8651  0056                     i1l2544:	
  8652  0056  17A2               	bsf	___flmul@b+2,7
  8653  0057  2860               	goto	i1l2548
  8654  0058                     i1l2546:	
  8655  0058  3000               	movlw	0
  8656  0059  00A3               	movwf	___flmul@b+3
  8657  005A  3000               	movlw	0
  8658  005B  00A2               	movwf	___flmul@b+2
  8659  005C  3000               	movlw	0
  8660  005D  00A1               	movwf	___flmul@b+1
  8661  005E  3000               	movlw	0
  8662  005F  00A0               	movwf	___flmul@b
  8663  0060                     i1l2548:	
  8664  0060  0827               	movf	___flmul@a+3,w
  8665  0061  3980               	andlw	128
  8666  0062  00A8               	movwf	??___flmul
  8667  0063  0828               	movf	??___flmul,w
  8668  0064  06AD               	xorwf	___flmul@sign,f
  8669  0065  3527               	lslf	___flmul@a+3,w
  8670  0066  00A8               	movwf	??___flmul
  8671  0067  0828               	movf	??___flmul,w
  8672  0068  00B2               	movwf	___flmul@aexp
  8673  0069  1BA6               	btfsc	___flmul@a+2,7
  8674  006A  1432               	bsf	___flmul@aexp,0
  8675  006B  0832               	movf	___flmul@aexp,w
  8676  006C  1903               	btfsc	3,2
  8677  006D  287B               	goto	i1l2564
  8678  006E  0A32               	incf	___flmul@aexp,w
  8679  006F  1D03               	btfss	3,2
  8680  0070  2879               	goto	i1l2562
  8681  0071  3000               	movlw	0
  8682  0072  00A7               	movwf	___flmul@a+3
  8683  0073  3000               	movlw	0
  8684  0074  00A6               	movwf	___flmul@a+2
  8685  0075  3000               	movlw	0
  8686  0076  00A5               	movwf	___flmul@a+1
  8687  0077  3000               	movlw	0
  8688  0078  00A4               	movwf	___flmul@a
  8689  0079                     i1l2562:	
  8690  0079  17A6               	bsf	___flmul@a+2,7
  8691  007A  2883               	goto	i1l2566
  8692  007B                     i1l2564:	
  8693  007B  3000               	movlw	0
  8694  007C  00A7               	movwf	___flmul@a+3
  8695  007D  3000               	movlw	0
  8696  007E  00A6               	movwf	___flmul@a+2
  8697  007F  3000               	movlw	0
  8698  0080  00A5               	movwf	___flmul@a+1
  8699  0081  3000               	movlw	0
  8700  0082  00A4               	movwf	___flmul@a
  8701  0083                     i1l2566:	
  8702  0083  0832               	movf	___flmul@aexp,w
  8703  0084  1D03               	btfss	3,2
  8704  0085  0833               	movf	___flmul@bexp,w
  8705  0086  1D03               	btfss	3,2
  8706  0087  2891               	goto	i1l2574
  8707  0088  3000               	movlw	0
  8708  0089  00A3               	movwf	?___flmul+3
  8709  008A  3000               	movlw	0
  8710  008B  00A2               	movwf	?___flmul+2
  8711  008C  3000               	movlw	0
  8712  008D  00A1               	movwf	?___flmul+1
  8713  008E  3000               	movlw	0
  8714  008F  00A0               	movwf	?___flmul
  8715  0090  0008               	return
  8716  0091                     i1l2574:	
  8717  0091  0820               	movf	___flmul@b,w
  8718  0092  00A8               	movwf	??___flmul
  8719  0093  0828               	movf	??___flmul,w
  8720  0094  00F0               	movwf	__Umul8_16@multiplicand
  8721  0095  0826               	movf	___flmul@a+2,w
  8722  0096  318B  236D  3180   	fcall	__Umul8_16
  8723  0099  0871               	movf	?__Umul8_16+1,w
  8724  009A  0020               	movlb	0	; select bank0
  8725  009B  00B9               	movwf	___flmul@temp+1
  8726  009C  0870               	movf	?__Umul8_16,w
  8727  009D  00B8               	movwf	___flmul@temp
  8728  009E  0838               	movf	___flmul@temp,w
  8729  009F  00A8               	movwf	??___flmul
  8730  00A0  01A9               	clrf	??___flmul+1
  8731  00A1  01AA               	clrf	??___flmul+2
  8732  00A2  01AB               	clrf	??___flmul+3
  8733  00A3  082B               	movf	??___flmul+3,w
  8734  00A4  00B1               	movwf	___flmul@grs+3
  8735  00A5  082A               	movf	??___flmul+2,w
  8736  00A6  00B0               	movwf	___flmul@grs+2
  8737  00A7  0829               	movf	??___flmul+1,w
  8738  00A8  00AF               	movwf	___flmul@grs+1
  8739  00A9  0828               	movf	??___flmul,w
  8740  00AA  00AE               	movwf	___flmul@grs
  8741  00AB  0839               	movf	___flmul@temp+1,w
  8742  00AC  00A8               	movwf	??___flmul
  8743  00AD  01A9               	clrf	??___flmul+1
  8744  00AE  01AA               	clrf	??___flmul+2
  8745  00AF  01AB               	clrf	??___flmul+3
  8746  00B0  082B               	movf	??___flmul+3,w
  8747  00B1  00B7               	movwf	___flmul@prod+3
  8748  00B2  082A               	movf	??___flmul+2,w
  8749  00B3  00B6               	movwf	___flmul@prod+2
  8750  00B4  0829               	movf	??___flmul+1,w
  8751  00B5  00B5               	movwf	___flmul@prod+1
  8752  00B6  0828               	movf	??___flmul,w
  8753  00B7  00B4               	movwf	___flmul@prod
  8754  00B8  0821               	movf	___flmul@b+1,w
  8755  00B9  00A8               	movwf	??___flmul
  8756  00BA  0828               	movf	??___flmul,w
  8757  00BB  00F0               	movwf	__Umul8_16@multiplicand
  8758  00BC  0825               	movf	___flmul@a+1,w
  8759  00BD  318B  236D  3180   	fcall	__Umul8_16
  8760  00C0  0871               	movf	?__Umul8_16+1,w
  8761  00C1  0020               	movlb	0	; select bank0
  8762  00C2  00B9               	movwf	___flmul@temp+1
  8763  00C3  0870               	movf	?__Umul8_16,w
  8764  00C4  00B8               	movwf	___flmul@temp
  8765  00C5  0838               	movf	___flmul@temp,w
  8766  00C6  00A8               	movwf	??___flmul
  8767  00C7  01A9               	clrf	??___flmul+1
  8768  00C8  01AA               	clrf	??___flmul+2
  8769  00C9  01AB               	clrf	??___flmul+3
  8770  00CA  0828               	movf	??___flmul,w
  8771  00CB  07AE               	addwf	___flmul@grs,f
  8772  00CC  0829               	movf	??___flmul+1,w
  8773  00CD  3DAF               	addwfc	___flmul@grs+1,f
  8774  00CE  082A               	movf	??___flmul+2,w
  8775  00CF  3DB0               	addwfc	___flmul@grs+2,f
  8776  00D0  082B               	movf	??___flmul+3,w
  8777  00D1  3DB1               	addwfc	___flmul@grs+3,f
  8778  00D2  0839               	movf	___flmul@temp+1,w
  8779  00D3  00A8               	movwf	??___flmul
  8780  00D4  01A9               	clrf	??___flmul+1
  8781  00D5  01AA               	clrf	??___flmul+2
  8782  00D6  01AB               	clrf	??___flmul+3
  8783  00D7  0828               	movf	??___flmul,w
  8784  00D8  07B4               	addwf	___flmul@prod,f
  8785  00D9  0829               	movf	??___flmul+1,w
  8786  00DA  3DB5               	addwfc	___flmul@prod+1,f
  8787  00DB  082A               	movf	??___flmul+2,w
  8788  00DC  3DB6               	addwfc	___flmul@prod+2,f
  8789  00DD  082B               	movf	??___flmul+3,w
  8790  00DE  3DB7               	addwfc	___flmul@prod+3,f
  8791  00DF  0822               	movf	___flmul@b+2,w
  8792  00E0  00A8               	movwf	??___flmul
  8793  00E1  0828               	movf	??___flmul,w
  8794  00E2  00F0               	movwf	__Umul8_16@multiplicand
  8795  00E3  0824               	movf	___flmul@a,w
  8796  00E4  318B  236D  3180   	fcall	__Umul8_16
  8797  00E7  0871               	movf	?__Umul8_16+1,w
  8798  00E8  0020               	movlb	0	; select bank0
  8799  00E9  00B9               	movwf	___flmul@temp+1
  8800  00EA  0870               	movf	?__Umul8_16,w
  8801  00EB  00B8               	movwf	___flmul@temp
  8802  00EC  0838               	movf	___flmul@temp,w
  8803  00ED  00A8               	movwf	??___flmul
  8804  00EE  01A9               	clrf	??___flmul+1
  8805  00EF  01AA               	clrf	??___flmul+2
  8806  00F0  01AB               	clrf	??___flmul+3
  8807  00F1  0828               	movf	??___flmul,w
  8808  00F2  07AE               	addwf	___flmul@grs,f
  8809  00F3  0829               	movf	??___flmul+1,w
  8810  00F4  3DAF               	addwfc	___flmul@grs+1,f
  8811  00F5  082A               	movf	??___flmul+2,w
  8812  00F6  3DB0               	addwfc	___flmul@grs+2,f
  8813  00F7  082B               	movf	??___flmul+3,w
  8814  00F8  3DB1               	addwfc	___flmul@grs+3,f
  8815  00F9  0839               	movf	___flmul@temp+1,w
  8816  00FA  00A8               	movwf	??___flmul
  8817  00FB  01A9               	clrf	??___flmul+1
  8818  00FC  01AA               	clrf	??___flmul+2
  8819  00FD  01AB               	clrf	??___flmul+3
  8820  00FE  0828               	movf	??___flmul,w
  8821  00FF  07B4               	addwf	___flmul@prod,f
  8822  0100  0829               	movf	??___flmul+1,w
  8823  0101  3DB5               	addwfc	___flmul@prod+1,f
  8824  0102  082A               	movf	??___flmul+2,w
  8825  0103  3DB6               	addwfc	___flmul@prod+2,f
  8826  0104  082B               	movf	??___flmul+3,w
  8827  0105  3DB7               	addwfc	___flmul@prod+3,f
  8828  0106  3008               	movlw	8
  8829  0107                     u305_25:	
  8830  0107  35AE               	lslf	___flmul@grs,f
  8831  0108  0DAF               	rlf	___flmul@grs+1,f
  8832  0109  0DB0               	rlf	___flmul@grs+2,f
  8833  010A  0DB1               	rlf	___flmul@grs+3,f
  8834  010B  0B89               	decfsz	9,f
  8835  010C  2907               	goto	u305_25
  8836  010D  0821               	movf	___flmul@b+1,w
  8837  010E  00A8               	movwf	??___flmul
  8838  010F  0828               	movf	??___flmul,w
  8839  0110  00F0               	movwf	__Umul8_16@multiplicand
  8840  0111  0824               	movf	___flmul@a,w
  8841  0112  318B  236D  3180   	fcall	__Umul8_16
  8842  0115  0871               	movf	?__Umul8_16+1,w
  8843  0116  0020               	movlb	0	; select bank0
  8844  0117  00B9               	movwf	___flmul@temp+1
  8845  0118  0870               	movf	?__Umul8_16,w
  8846  0119  00B8               	movwf	___flmul@temp
  8847  011A  0838               	movf	___flmul@temp,w
  8848  011B  07AE               	addwf	___flmul@grs,f
  8849  011C  0839               	movf	___flmul@temp+1,w
  8850  011D  3DAF               	addwfc	___flmul@grs+1,f
  8851  011E  3000               	movlw	0
  8852  011F  3DB0               	addwfc	___flmul@grs+2,f
  8853  0120  3DB1               	addwfc	___flmul@grs+3,f
  8854  0121  0820               	movf	___flmul@b,w
  8855  0122  00A8               	movwf	??___flmul
  8856  0123  0828               	movf	??___flmul,w
  8857  0124  00F0               	movwf	__Umul8_16@multiplicand
  8858  0125  0825               	movf	___flmul@a+1,w
  8859  0126  318B  236D  3180   	fcall	__Umul8_16
  8860  0129  0871               	movf	?__Umul8_16+1,w
  8861  012A  0020               	movlb	0	; select bank0
  8862  012B  00B9               	movwf	___flmul@temp+1
  8863  012C  0870               	movf	?__Umul8_16,w
  8864  012D  00B8               	movwf	___flmul@temp
  8865  012E  0838               	movf	___flmul@temp,w
  8866  012F  07AE               	addwf	___flmul@grs,f
  8867  0130  0839               	movf	___flmul@temp+1,w
  8868  0131  3DAF               	addwfc	___flmul@grs+1,f
  8869  0132  3000               	movlw	0
  8870  0133  3DB0               	addwfc	___flmul@grs+2,f
  8871  0134  3DB1               	addwfc	___flmul@grs+3,f
  8872  0135  3008               	movlw	8
  8873  0136                     u306_25:	
  8874  0136  35AE               	lslf	___flmul@grs,f
  8875  0137  0DAF               	rlf	___flmul@grs+1,f
  8876  0138  0DB0               	rlf	___flmul@grs+2,f
  8877  0139  0DB1               	rlf	___flmul@grs+3,f
  8878  013A  0B89               	decfsz	9,f
  8879  013B  2936               	goto	u306_25
  8880  013C  0820               	movf	___flmul@b,w
  8881  013D  00A8               	movwf	??___flmul
  8882  013E  0828               	movf	??___flmul,w
  8883  013F  00F0               	movwf	__Umul8_16@multiplicand
  8884  0140  0824               	movf	___flmul@a,w
  8885  0141  318B  236D  3180   	fcall	__Umul8_16
  8886  0144  0871               	movf	?__Umul8_16+1,w
  8887  0145  0020               	movlb	0	; select bank0
  8888  0146  00B9               	movwf	___flmul@temp+1
  8889  0147  0870               	movf	?__Umul8_16,w
  8890  0148  00B8               	movwf	___flmul@temp
  8891  0149  0838               	movf	___flmul@temp,w
  8892  014A  07AE               	addwf	___flmul@grs,f
  8893  014B  0839               	movf	___flmul@temp+1,w
  8894  014C  3DAF               	addwfc	___flmul@grs+1,f
  8895  014D  3000               	movlw	0
  8896  014E  3DB0               	addwfc	___flmul@grs+2,f
  8897  014F  3DB1               	addwfc	___flmul@grs+3,f
  8898  0150  0821               	movf	___flmul@b+1,w
  8899  0151  00A8               	movwf	??___flmul
  8900  0152  0828               	movf	??___flmul,w
  8901  0153  00F0               	movwf	__Umul8_16@multiplicand
  8902  0154  0826               	movf	___flmul@a+2,w
  8903  0155  318B  236D  3180   	fcall	__Umul8_16
  8904  0158  0871               	movf	?__Umul8_16+1,w
  8905  0159  0020               	movlb	0	; select bank0
  8906  015A  00B9               	movwf	___flmul@temp+1
  8907  015B  0870               	movf	?__Umul8_16,w
  8908  015C  00B8               	movwf	___flmul@temp
  8909  015D  0838               	movf	___flmul@temp,w
  8910  015E  07B4               	addwf	___flmul@prod,f
  8911  015F  0839               	movf	___flmul@temp+1,w
  8912  0160  3DB5               	addwfc	___flmul@prod+1,f
  8913  0161  3000               	movlw	0
  8914  0162  3DB6               	addwfc	___flmul@prod+2,f
  8915  0163  3DB7               	addwfc	___flmul@prod+3,f
  8916  0164  0822               	movf	___flmul@b+2,w
  8917  0165  00A8               	movwf	??___flmul
  8918  0166  0828               	movf	??___flmul,w
  8919  0167  00F0               	movwf	__Umul8_16@multiplicand
  8920  0168  0825               	movf	___flmul@a+1,w
  8921  0169  318B  236D  3180   	fcall	__Umul8_16
  8922  016C  0871               	movf	?__Umul8_16+1,w
  8923  016D  0020               	movlb	0	; select bank0
  8924  016E  00B9               	movwf	___flmul@temp+1
  8925  016F  0870               	movf	?__Umul8_16,w
  8926  0170  00B8               	movwf	___flmul@temp
  8927  0171  0838               	movf	___flmul@temp,w
  8928  0172  07B4               	addwf	___flmul@prod,f
  8929  0173  0839               	movf	___flmul@temp+1,w
  8930  0174  3DB5               	addwfc	___flmul@prod+1,f
  8931  0175  3000               	movlw	0
  8932  0176  3DB6               	addwfc	___flmul@prod+2,f
  8933  0177  3DB7               	addwfc	___flmul@prod+3,f
  8934  0178  0822               	movf	___flmul@b+2,w
  8935  0179  00A8               	movwf	??___flmul
  8936  017A  0828               	movf	??___flmul,w
  8937  017B  00F0               	movwf	__Umul8_16@multiplicand
  8938  017C  0826               	movf	___flmul@a+2,w
  8939  017D  318B  236D  3180   	fcall	__Umul8_16
  8940  0180  0871               	movf	?__Umul8_16+1,w
  8941  0181  0020               	movlb	0	; select bank0
  8942  0182  00B9               	movwf	___flmul@temp+1
  8943  0183  0870               	movf	?__Umul8_16,w
  8944  0184  00B8               	movwf	___flmul@temp
  8945  0185  0838               	movf	___flmul@temp,w
  8946  0186  00A8               	movwf	??___flmul
  8947  0187  0839               	movf	___flmul@temp+1,w
  8948  0188  00A9               	movwf	??___flmul+1
  8949  0189  01AA               	clrf	??___flmul+2
  8950  018A  01AB               	clrf	??___flmul+3
  8951  018B  3008               	movlw	8
  8952  018C                     u307_25:	
  8953  018C  35A8               	lslf	??___flmul,f
  8954  018D  0DA9               	rlf	??___flmul+1,f
  8955  018E  0DAA               	rlf	??___flmul+2,f
  8956  018F  0DAB               	rlf	??___flmul+3,f
  8957  0190  0B89               	decfsz	9,f
  8958  0191  298C               	goto	u307_25
  8959  0192  0828               	movf	??___flmul,w
  8960  0193  07B4               	addwf	___flmul@prod,f
  8961  0194  0829               	movf	??___flmul+1,w
  8962  0195  3DB5               	addwfc	___flmul@prod+1,f
  8963  0196  082A               	movf	??___flmul+2,w
  8964  0197  3DB6               	addwfc	___flmul@prod+2,f
  8965  0198  082B               	movf	??___flmul+3,w
  8966  0199  3DB7               	addwfc	___flmul@prod+3,f
  8967  019A  082E               	movf	___flmul@grs,w
  8968  019B  00A8               	movwf	??___flmul
  8969  019C  082F               	movf	___flmul@grs+1,w
  8970  019D  00A9               	movwf	??___flmul+1
  8971  019E  0830               	movf	___flmul@grs+2,w
  8972  019F  00AA               	movwf	??___flmul+2
  8973  01A0  0831               	movf	___flmul@grs+3,w
  8974  01A1  00AB               	movwf	??___flmul+3
  8975  01A2  3018               	movlw	24
  8976  01A3                     u308_25:	
  8977  01A3  36AB               	lsrf	??___flmul+3,f
  8978  01A4  0CAA               	rrf	??___flmul+2,f
  8979  01A5  0CA9               	rrf	??___flmul+1,f
  8980  01A6  0CA8               	rrf	??___flmul,f
  8981  01A7  0B89               	decfsz	9,f
  8982  01A8  29A3               	goto	u308_25
  8983  01A9  0828               	movf	??___flmul,w
  8984  01AA  07B4               	addwf	___flmul@prod,f
  8985  01AB  0829               	movf	??___flmul+1,w
  8986  01AC  3DB5               	addwfc	___flmul@prod+1,f
  8987  01AD  082A               	movf	??___flmul+2,w
  8988  01AE  3DB6               	addwfc	___flmul@prod+2,f
  8989  01AF  082B               	movf	??___flmul+3,w
  8990  01B0  3DB7               	addwfc	___flmul@prod+3,f
  8991  01B1  3008               	movlw	8
  8992  01B2                     u309_25:	
  8993  01B2  35AE               	lslf	___flmul@grs,f
  8994  01B3  0DAF               	rlf	___flmul@grs+1,f
  8995  01B4  0DB0               	rlf	___flmul@grs+2,f
  8996  01B5  0DB1               	rlf	___flmul@grs+3,f
  8997  01B6  0B89               	decfsz	9,f
  8998  01B7  29B2               	goto	u309_25
  8999  01B8  0833               	movf	___flmul@bexp,w
  9000  01B9  0732               	addwf	___flmul@aexp,w
  9001  01BA  00A8               	movwf	??___flmul
  9002  01BB  01A9               	clrf	??___flmul+1
  9003  01BC  0DA9               	rlf	??___flmul+1,f
  9004  01BD  0828               	movf	??___flmul,w
  9005  01BE  3E82               	addlw	130
  9006  01BF  00B8               	movwf	___flmul@temp
  9007  01C0  30FF               	movlw	255
  9008  01C1  3D29               	addwfc	??___flmul+1,w
  9009  01C2  00B9               	movwf	___flmul@temp+1
  9010  01C3                     i1l2626:	
  9011  01C3  1BB6               	btfsc	___flmul@prod+2,7
  9012  01C4  29DA               	goto	i1l2628
  9013  01C5  3001               	movlw	1
  9014  01C6                     u310_25:	
  9015  01C6  35B4               	lslf	___flmul@prod,f
  9016  01C7  0DB5               	rlf	___flmul@prod+1,f
  9017  01C8  0DB6               	rlf	___flmul@prod+2,f
  9018  01C9  0DB7               	rlf	___flmul@prod+3,f
  9019  01CA  0B89               	decfsz	9,f
  9020  01CB  29C6               	goto	u310_25
  9021  01CC  1BB1               	btfsc	___flmul@grs+3,7
  9022  01CD  1434               	bsf	___flmul@prod,0
  9023  01CE  3001               	movlw	1
  9024  01CF                     u312_25:	
  9025  01CF  35AE               	lslf	___flmul@grs,f
  9026  01D0  0DAF               	rlf	___flmul@grs+1,f
  9027  01D1  0DB0               	rlf	___flmul@grs+2,f
  9028  01D2  0DB1               	rlf	___flmul@grs+3,f
  9029  01D3  0B89               	decfsz	9,f
  9030  01D4  29CF               	goto	u312_25
  9031  01D5  30FF               	movlw	255
  9032  01D6  07B8               	addwf	___flmul@temp,f
  9033  01D7  30FF               	movlw	255
  9034  01D8  3DB9               	addwfc	___flmul@temp+1,f
  9035  01D9  29C3               	goto	i1l2626
  9036  01DA                     i1l2628:	
  9037  01DA  01B2               	clrf	___flmul@aexp
  9038  01DB  1FB1               	btfss	___flmul@grs+3,7
  9039  01DC  29F3               	goto	i1l2638
  9040  01DD  30FF               	movlw	255
  9041  01DE  052E               	andwf	___flmul@grs,w
  9042  01DF  00A8               	movwf	??___flmul
  9043  01E0  30FF               	movlw	255
  9044  01E1  052F               	andwf	___flmul@grs+1,w
  9045  01E2  00A9               	movwf	??___flmul+1
  9046  01E3  30FF               	movlw	255
  9047  01E4  0530               	andwf	___flmul@grs+2,w
  9048  01E5  00AA               	movwf	??___flmul+2
  9049  01E6  307F               	movlw	127
  9050  01E7  0531               	andwf	___flmul@grs+3,w
  9051  01E8  00AB               	movwf	??___flmul+3
  9052  01E9  082B               	movf	??___flmul+3,w
  9053  01EA  042A               	iorwf	??___flmul+2,w
  9054  01EB  0429               	iorwf	??___flmul+1,w
  9055  01EC  0428               	iorwf	??___flmul,w
  9056  01ED  1903               	skipnz
  9057  01EE  1834               	btfsc	___flmul@prod,0
  9058  01EF  29F1               	goto	i1l2634
  9059  01F0  29F3               	goto	i1l2638
  9060  01F1                     i1l2634:	
  9061  01F1  01B2               	clrf	___flmul@aexp
  9062  01F2  0AB2               	incf	___flmul@aexp,f
  9063  01F3                     i1l2638:	
  9064  01F3  0832               	movf	___flmul@aexp,w
  9065  01F4  1903               	btfsc	3,2
  9066  01F5  2A1C               	goto	i1l2648
  9067  01F6  3001               	movlw	1
  9068  01F7  07B4               	addwf	___flmul@prod,f
  9069  01F8  3000               	movlw	0
  9070  01F9  3DB5               	addwfc	___flmul@prod+1,f
  9071  01FA  3000               	movlw	0
  9072  01FB  3DB6               	addwfc	___flmul@prod+2,f
  9073  01FC  3000               	movlw	0
  9074  01FD  3DB7               	addwfc	___flmul@prod+3,f
  9075  01FE  1C37               	btfss	___flmul@prod+3,0
  9076  01FF  2A1C               	goto	i1l2648
  9077  0200  0834               	movf	___flmul@prod,w
  9078  0201  00A8               	movwf	??___flmul
  9079  0202  0835               	movf	___flmul@prod+1,w
  9080  0203  00A9               	movwf	??___flmul+1
  9081  0204  0836               	movf	___flmul@prod+2,w
  9082  0205  00AA               	movwf	??___flmul+2
  9083  0206  0837               	movf	___flmul@prod+3,w
  9084  0207  00AB               	movwf	??___flmul+3
  9085  0208  3001               	movlw	1
  9086  0209  00AC               	movwf	??___flmul+4
  9087  020A                     u319_25:	
  9088  020A  37AB               	asrf	??___flmul+3,f
  9089  020B  0CAA               	rrf	??___flmul+2,f
  9090  020C  0CA9               	rrf	??___flmul+1,f
  9091  020D  0CA8               	rrf	??___flmul,f
  9092  020E  0BAC               	decfsz	??___flmul+4,f
  9093  020F  2A0A               	goto	u319_25
  9094  0210  082B               	movf	??___flmul+3,w
  9095  0211  00B7               	movwf	___flmul@prod+3
  9096  0212  082A               	movf	??___flmul+2,w
  9097  0213  00B6               	movwf	___flmul@prod+2
  9098  0214  0829               	movf	??___flmul+1,w
  9099  0215  00B5               	movwf	___flmul@prod+1
  9100  0216  0828               	movf	??___flmul,w
  9101  0217  00B4               	movwf	___flmul@prod
  9102  0218  3001               	movlw	1
  9103  0219  07B8               	addwf	___flmul@temp,f
  9104  021A  3000               	movlw	0
  9105  021B  3DB9               	addwfc	___flmul@temp+1,f
  9106  021C                     i1l2648:	
  9107  021C  0839               	movf	___flmul@temp+1,w
  9108  021D  3A80               	xorlw	128
  9109  021E  00A8               	movwf	??___flmul
  9110  021F  3080               	movlw	128
  9111  0220  0228               	subwf	??___flmul,w
  9112  0221  1D03               	skipz
  9113  0222  2A25               	goto	u320_25
  9114  0223  30FF               	movlw	255
  9115  0224  0238               	subwf	___flmul@temp,w
  9116  0225                     u320_25:	
  9117  0225  1C03               	skipc
  9118  0226  2A31               	goto	i1l2652
  9119  0227  307F               	movlw	127
  9120  0228  0020               	movlb	0	; select bank0
  9121  0229  00B7               	movwf	___flmul@prod+3
  9122  022A  3080               	movlw	128
  9123  022B  00B6               	movwf	___flmul@prod+2
  9124  022C  3000               	movlw	0
  9125  022D  00B5               	movwf	___flmul@prod+1
  9126  022E  3000               	movlw	0
  9127  022F  00B4               	movwf	___flmul@prod
  9128  0230  2A5B               	goto	i1l902
  9129  0231                     i1l2652:	
  9130  0231  0020               	movlb	0	; select bank0
  9131  0232  0839               	movf	___flmul@temp+1,w
  9132  0233  3A80               	xorlw	128
  9133  0234  00A8               	movwf	??___flmul
  9134  0235  3080               	movlw	128
  9135  0236  0228               	subwf	??___flmul,w
  9136  0237  1D03               	skipz
  9137  0238  2A3B               	goto	u321_25
  9138  0239  3001               	movlw	1
  9139  023A  0238               	subwf	___flmul@temp,w
  9140  023B                     u321_25:	
  9141  023B  1803               	skipnc
  9142  023C  2A48               	goto	i1l2658
  9143  023D  3000               	movlw	0
  9144  023E  0020               	movlb	0	; select bank0
  9145  023F  00B7               	movwf	___flmul@prod+3
  9146  0240  3000               	movlw	0
  9147  0241  00B6               	movwf	___flmul@prod+2
  9148  0242  3000               	movlw	0
  9149  0243  00B5               	movwf	___flmul@prod+1
  9150  0244  3000               	movlw	0
  9151  0245  00B4               	movwf	___flmul@prod
  9152  0246  01AD               	clrf	___flmul@sign
  9153  0247  2A5B               	goto	i1l902
  9154  0248                     i1l2658:	
  9155  0248  0020               	movlb	0	; select bank0
  9156  0249  0838               	movf	___flmul@temp,w
  9157  024A  00A8               	movwf	??___flmul
  9158  024B  0828               	movf	??___flmul,w
  9159  024C  00B3               	movwf	___flmul@bexp
  9160  024D  30FF               	movlw	255
  9161  024E  05B4               	andwf	___flmul@prod,f
  9162  024F  30FF               	movlw	255
  9163  0250  05B5               	andwf	___flmul@prod+1,f
  9164  0251  307F               	movlw	127
  9165  0252  05B6               	andwf	___flmul@prod+2,f
  9166  0253  3000               	movlw	0
  9167  0254  05B7               	andwf	___flmul@prod+3,f
  9168  0255  1833               	btfsc	___flmul@bexp,0
  9169  0256  17B6               	bsf	___flmul@prod+2,7
  9170  0257  3633               	lsrf	___flmul@bexp,w
  9171  0258  00A8               	movwf	??___flmul
  9172  0259  0828               	movf	??___flmul,w
  9173  025A  00B7               	movwf	___flmul@prod+3
  9174  025B                     i1l902:	
  9175  025B  082D               	movf	___flmul@sign,w
  9176  025C  00A8               	movwf	??___flmul
  9177  025D  0828               	movf	??___flmul,w
  9178  025E  04B7               	iorwf	___flmul@prod+3,f
  9179  025F  0837               	movf	___flmul@prod+3,w
  9180  0260  00A3               	movwf	?___flmul+3
  9181  0261  0836               	movf	___flmul@prod+2,w
  9182  0262  00A2               	movwf	?___flmul+2
  9183  0263  0835               	movf	___flmul@prod+1,w
  9184  0264  00A1               	movwf	?___flmul+1
  9185  0265  0834               	movf	___flmul@prod,w
  9186  0266  00A0               	movwf	?___flmul
  9187  0267  0008               	return
  9188  0268                     __end_of___flmul:	
  9189                           
  9190                           	psect	text42
  9191  0B6D                     __ptext42:	
  9192 ;; *************** function __Umul8_16 *****************
  9193 ;; Defined at:
  9194 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul8_16.c"
  9195 ;; Parameters:    Size  Location     Type
  9196 ;;  multiplier      1    wreg     unsigned char 
  9197 ;;  multiplicand    1    0[COMMON] unsigned char 
  9198 ;; Auto vars:     Size  Location     Type
  9199 ;;  multiplier      1    8[COMMON] unsigned char 
  9200 ;;  word_mpld       2    6[COMMON] unsigned int 
  9201 ;;  product         2    4[COMMON] unsigned int 
  9202 ;; Return value:  Size  Location     Type
  9203 ;;                  2    0[COMMON] unsigned int 
  9204 ;; Registers used:
  9205 ;;		wreg, status,2, status,0
  9206 ;; Tracked objects:
  9207 ;;		On entry : 0/0
  9208 ;;		On exit  : 0/0
  9209 ;;		Unchanged: 0/0
  9210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9211 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9212 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9213 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9214 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9215 ;;Total ram usage:        9 bytes
  9216 ;; Hardware stack levels used:    1
  9217 ;; This function calls:
  9218 ;;		Nothing
  9219 ;; This function is called by:
  9220 ;;		___flmul
  9221 ;; This function uses a non-reentrant model
  9222 ;;
  9223                           
  9224                           
  9225                           ;psect for function __Umul8_16
  9226  0B6D                     __Umul8_16:	
  9227                           
  9228                           ;incstack = 0
  9229                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  9230                           ;__Umul8_16@multiplier stored from wreg
  9231  0B6D  00F8               	movwf	__Umul8_16@multiplier
  9232  0B6E  01F4               	clrf	__Umul8_16@product
  9233  0B6F  01F5               	clrf	__Umul8_16@product+1
  9234  0B70  0870               	movf	__Umul8_16@multiplicand,w
  9235  0B71  00F2               	movwf	??__Umul8_16
  9236  0B72  01F3               	clrf	??__Umul8_16+1
  9237  0B73  0872               	movf	??__Umul8_16,w
  9238  0B74  00F6               	movwf	__Umul8_16@word_mpld
  9239  0B75  0873               	movf	??__Umul8_16+1,w
  9240  0B76  00F7               	movwf	__Umul8_16@word_mpld+1
  9241  0B77                     i1l2218:	
  9242  0B77  1C78               	btfss	__Umul8_16@multiplier,0
  9243  0B78  2B7D               	goto	i1l996
  9244  0B79  0876               	movf	__Umul8_16@word_mpld,w
  9245  0B7A  07F4               	addwf	__Umul8_16@product,f
  9246  0B7B  0877               	movf	__Umul8_16@word_mpld+1,w
  9247  0B7C  3DF5               	addwfc	__Umul8_16@product+1,f
  9248  0B7D                     i1l996:	
  9249  0B7D  3001               	movlw	1
  9250  0B7E                     u222_25:	
  9251  0B7E  35F6               	lslf	__Umul8_16@word_mpld,f
  9252  0B7F  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  9253  0B80  0B89               	decfsz	9,f
  9254  0B81  2B7E               	goto	u222_25
  9255  0B82  1003               	clrc
  9256  0B83  0CF8               	rrf	__Umul8_16@multiplier,f
  9257  0B84  0878               	movf	__Umul8_16@multiplier,w
  9258  0B85  1D03               	btfss	3,2
  9259  0B86  2B77               	goto	i1l2218
  9260  0B87  0875               	movf	__Umul8_16@product+1,w
  9261  0B88  00F1               	movwf	?__Umul8_16+1
  9262  0B89  0874               	movf	__Umul8_16@product,w
  9263  0B8A  00F0               	movwf	?__Umul8_16
  9264  0B8B  0008               	return
  9265  0B8C                     __end_of__Umul8_16:	
  9266                           
  9267                           	psect	text43
  9268  0268                     __ptext43:	
  9269 ;; *************** function ___fladd *****************
  9270 ;; Defined at:
  9271 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  9272 ;; Parameters:    Size  Location     Type
  9273 ;;  b               4    0[BANK0 ] unsigned int 
  9274 ;;  a               4    4[BANK0 ] unsigned int 
  9275 ;; Auto vars:     Size  Location     Type
  9276 ;;  grs             1   19[BANK0 ] unsigned char 
  9277 ;;  bexp            1   18[BANK0 ] unsigned char 
  9278 ;;  aexp            1   17[BANK0 ] unsigned char 
  9279 ;;  signs           1   16[BANK0 ] unsigned char 
  9280 ;; Return value:  Size  Location     Type
  9281 ;;                  4    0[BANK0 ] unsigned char 
  9282 ;; Registers used:
  9283 ;;		wreg, status,2, status,0
  9284 ;; Tracked objects:
  9285 ;;		On entry : 0/0
  9286 ;;		On exit  : 0/0
  9287 ;;		Unchanged: 0/0
  9288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9289 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9290 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9291 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9292 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9293 ;;Total ram usage:       20 bytes
  9294 ;; Hardware stack levels used:    1
  9295 ;; This function calls:
  9296 ;;		Nothing
  9297 ;; This function is called by:
  9298 ;;		_speedCalc
  9299 ;; This function uses a non-reentrant model
  9300 ;;
  9301                           
  9302                           
  9303                           ;psect for function ___fladd
  9304  0268                     ___fladd:	
  9305                           
  9306                           ;incstack = 0
  9307                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  9308  0268  0020               	movlb	0	; select bank0
  9309  0269  0823               	movf	___fladd@b+3,w
  9310  026A  3980               	andlw	128
  9311  026B  00A8               	movwf	??___fladd
  9312  026C  0828               	movf	??___fladd,w
  9313  026D  00B0               	movwf	___fladd@signs
  9314  026E  3523               	lslf	___fladd@b+3,w
  9315  026F  00A8               	movwf	??___fladd
  9316  0270  0828               	movf	??___fladd,w
  9317  0271  00B2               	movwf	___fladd@bexp
  9318  0272  1BA2               	btfsc	___fladd@b+2,7
  9319  0273  1432               	bsf	___fladd@bexp,0
  9320  0274  0832               	movf	___fladd@bexp,w
  9321  0275  1903               	btfsc	3,2
  9322  0276  2A85               	goto	i1l2354
  9323  0277  0A32               	incf	___fladd@bexp,w
  9324  0278  1D03               	btfss	3,2
  9325  0279  2A82               	goto	i1l2350
  9326  027A  3000               	movlw	0
  9327  027B  00A3               	movwf	___fladd@b+3
  9328  027C  3000               	movlw	0
  9329  027D  00A2               	movwf	___fladd@b+2
  9330  027E  3000               	movlw	0
  9331  027F  00A1               	movwf	___fladd@b+1
  9332  0280  3000               	movlw	0
  9333  0281  00A0               	movwf	___fladd@b
  9334  0282                     i1l2350:	
  9335  0282  17A2               	bsf	___fladd@b+2,7
  9336  0283  01A3               	clrf	___fladd@b+3
  9337  0284  2A8D               	goto	i1l2356
  9338  0285                     i1l2354:	
  9339  0285  3000               	movlw	0
  9340  0286  00A3               	movwf	___fladd@b+3
  9341  0287  3000               	movlw	0
  9342  0288  00A2               	movwf	___fladd@b+2
  9343  0289  3000               	movlw	0
  9344  028A  00A1               	movwf	___fladd@b+1
  9345  028B  3000               	movlw	0
  9346  028C  00A0               	movwf	___fladd@b
  9347  028D                     i1l2356:	
  9348  028D  0827               	movf	___fladd@a+3,w
  9349  028E  3980               	andlw	128
  9350  028F  00A8               	movwf	??___fladd
  9351  0290  0828               	movf	??___fladd,w
  9352  0291  00B1               	movwf	___fladd@aexp
  9353  0292  0831               	movf	___fladd@aexp,w
  9354  0293  0630               	xorwf	___fladd@signs,w
  9355  0294  1D03               	btfss	3,2
  9356  0295  1730               	bsf	___fladd@signs,6
  9357  0296  3527               	lslf	___fladd@a+3,w
  9358  0297  00A8               	movwf	??___fladd
  9359  0298  0828               	movf	??___fladd,w
  9360  0299  00B1               	movwf	___fladd@aexp
  9361  029A  1BA6               	btfsc	___fladd@a+2,7
  9362  029B  1431               	bsf	___fladd@aexp,0
  9363  029C  0831               	movf	___fladd@aexp,w
  9364  029D  1903               	btfsc	3,2
  9365  029E  2AAD               	goto	i1l2378
  9366  029F  0A31               	incf	___fladd@aexp,w
  9367  02A0  1D03               	btfss	3,2
  9368  02A1  2AAA               	goto	i1l2374
  9369  02A2  3000               	movlw	0
  9370  02A3  00A7               	movwf	___fladd@a+3
  9371  02A4  3000               	movlw	0
  9372  02A5  00A6               	movwf	___fladd@a+2
  9373  02A6  3000               	movlw	0
  9374  02A7  00A5               	movwf	___fladd@a+1
  9375  02A8  3000               	movlw	0
  9376  02A9  00A4               	movwf	___fladd@a
  9377  02AA                     i1l2374:	
  9378  02AA  17A6               	bsf	___fladd@a+2,7
  9379  02AB  01A7               	clrf	___fladd@a+3
  9380  02AC  2AB5               	goto	i1l794
  9381  02AD                     i1l2378:	
  9382  02AD  3000               	movlw	0
  9383  02AE  00A7               	movwf	___fladd@a+3
  9384  02AF  3000               	movlw	0
  9385  02B0  00A6               	movwf	___fladd@a+2
  9386  02B1  3000               	movlw	0
  9387  02B2  00A5               	movwf	___fladd@a+1
  9388  02B3  3000               	movlw	0
  9389  02B4  00A4               	movwf	___fladd@a
  9390  02B5                     i1l794:	
  9391  02B5  0832               	movf	___fladd@bexp,w
  9392  02B6  0231               	subwf	___fladd@aexp,w
  9393  02B7  1803               	skipnc
  9394  02B8  2AFB               	goto	i1l2414
  9395  02B9  1F30               	btfss	___fladd@signs,6
  9396  02BA  2ABF               	goto	i1l2384
  9397  02BB  3080               	movlw	128
  9398  02BC  00A8               	movwf	??___fladd
  9399  02BD  0828               	movf	??___fladd,w
  9400  02BE  06B0               	xorwf	___fladd@signs,f
  9401  02BF                     i1l2384:	
  9402  02BF  0832               	movf	___fladd@bexp,w
  9403  02C0  00A8               	movwf	??___fladd
  9404  02C1  0828               	movf	??___fladd,w
  9405  02C2  00B3               	movwf	___fladd@grs
  9406  02C3  0831               	movf	___fladd@aexp,w
  9407  02C4  00A8               	movwf	??___fladd
  9408  02C5  0828               	movf	??___fladd,w
  9409  02C6  00B2               	movwf	___fladd@bexp
  9410  02C7  0833               	movf	___fladd@grs,w
  9411  02C8  00A8               	movwf	??___fladd
  9412  02C9  0828               	movf	??___fladd,w
  9413  02CA  00B1               	movwf	___fladd@aexp
  9414  02CB  0820               	movf	___fladd@b,w
  9415  02CC  00A8               	movwf	??___fladd
  9416  02CD  0828               	movf	??___fladd,w
  9417  02CE  00B3               	movwf	___fladd@grs
  9418  02CF  0824               	movf	___fladd@a,w
  9419  02D0  00A8               	movwf	??___fladd
  9420  02D1  0828               	movf	??___fladd,w
  9421  02D2  00A0               	movwf	___fladd@b
  9422  02D3  0833               	movf	___fladd@grs,w
  9423  02D4  00A8               	movwf	??___fladd
  9424  02D5  0828               	movf	??___fladd,w
  9425  02D6  00A4               	movwf	___fladd@a
  9426  02D7  0821               	movf	___fladd@b+1,w
  9427  02D8  00A8               	movwf	??___fladd
  9428  02D9  0828               	movf	??___fladd,w
  9429  02DA  00B3               	movwf	___fladd@grs
  9430  02DB  0825               	movf	___fladd@a+1,w
  9431  02DC  00A8               	movwf	??___fladd
  9432  02DD  0828               	movf	??___fladd,w
  9433  02DE  00A1               	movwf	___fladd@b+1
  9434  02DF  0833               	movf	___fladd@grs,w
  9435  02E0  00A8               	movwf	??___fladd
  9436  02E1  0828               	movf	??___fladd,w
  9437  02E2  00A5               	movwf	___fladd@a+1
  9438  02E3  0822               	movf	___fladd@b+2,w
  9439  02E4  00A8               	movwf	??___fladd
  9440  02E5  0828               	movf	??___fladd,w
  9441  02E6  00B3               	movwf	___fladd@grs
  9442  02E7  0826               	movf	___fladd@a+2,w
  9443  02E8  00A8               	movwf	??___fladd
  9444  02E9  0828               	movf	??___fladd,w
  9445  02EA  00A2               	movwf	___fladd@b+2
  9446  02EB  0833               	movf	___fladd@grs,w
  9447  02EC  00A8               	movwf	??___fladd
  9448  02ED  0828               	movf	??___fladd,w
  9449  02EE  00A6               	movwf	___fladd@a+2
  9450  02EF  0823               	movf	___fladd@b+3,w
  9451  02F0  00A8               	movwf	??___fladd
  9452  02F1  0828               	movf	??___fladd,w
  9453  02F2  00B3               	movwf	___fladd@grs
  9454  02F3  0827               	movf	___fladd@a+3,w
  9455  02F4  00A8               	movwf	??___fladd
  9456  02F5  0828               	movf	??___fladd,w
  9457  02F6  00A3               	movwf	___fladd@b+3
  9458  02F7  0833               	movf	___fladd@grs,w
  9459  02F8  00A8               	movwf	??___fladd
  9460  02F9  0828               	movf	??___fladd,w
  9461  02FA  00A7               	movwf	___fladd@a+3
  9462  02FB                     i1l2414:	
  9463  02FB  01B3               	clrf	___fladd@grs
  9464  02FC  0831               	movf	___fladd@aexp,w
  9465  02FD  00A8               	movwf	??___fladd
  9466  02FE  01A9               	clrf	??___fladd+1
  9467  02FF  0829               	movf	??___fladd+1,w
  9468  0300  00AB               	movwf	??___fladd+3
  9469  0301  0832               	movf	___fladd@bexp,w
  9470  0302  0228               	subwf	??___fladd,w
  9471  0303  00AA               	movwf	??___fladd+2
  9472  0304  1C03               	skipc
  9473  0305  03AB               	decf	??___fladd+3,f
  9474  0306  082B               	movf	??___fladd+3,w
  9475  0307  3A80               	xorlw	128
  9476  0308  00AC               	movwf	??___fladd+4
  9477  0309  3080               	movlw	128
  9478  030A  022C               	subwf	??___fladd+4,w
  9479  030B  1D03               	skipz
  9480  030C  2B0F               	goto	u263_25
  9481  030D  301A               	movlw	26
  9482  030E  022A               	subwf	??___fladd+2,w
  9483  030F                     u263_25:	
  9484  030F  1C03               	skipc
  9485  0310  2B43               	goto	i1l2432
  9486  0311  0020               	movlb	0	; select bank0
  9487  0312  0823               	movf	___fladd@b+3,w
  9488  0313  0422               	iorwf	___fladd@b+2,w
  9489  0314  0421               	iorwf	___fladd@b+1,w
  9490  0315  0420               	iorwf	___fladd@b,w
  9491  0316  1903               	btfsc	3,2
  9492  0317  2B1A               	goto	u264_20
  9493  0318  3001               	movlw	1
  9494  0319  2B1B               	goto	u265_20
  9495  031A                     u264_20:	
  9496  031A  3000               	movlw	0
  9497  031B                     u265_20:	
  9498  031B  00A8               	movwf	??___fladd
  9499  031C  0828               	movf	??___fladd,w
  9500  031D  00B3               	movwf	___fladd@grs
  9501  031E  3000               	movlw	0
  9502  031F  00A3               	movwf	___fladd@b+3
  9503  0320  3000               	movlw	0
  9504  0321  00A2               	movwf	___fladd@b+2
  9505  0322  3000               	movlw	0
  9506  0323  00A1               	movwf	___fladd@b+1
  9507  0324  3000               	movlw	0
  9508  0325  00A0               	movwf	___fladd@b
  9509  0326  0831               	movf	___fladd@aexp,w
  9510  0327  00A8               	movwf	??___fladd
  9511  0328  0828               	movf	??___fladd,w
  9512  0329  00B2               	movwf	___fladd@bexp
  9513  032A  2B48               	goto	i1l798
  9514  032B                     i1l800:	
  9515  032B  1C33               	btfss	___fladd@grs,0
  9516  032C  2B33               	goto	i1l2422
  9517  032D  3633               	lsrf	___fladd@grs,w
  9518  032E  3801               	iorlw	1
  9519  032F  00A8               	movwf	??___fladd
  9520  0330  0828               	movf	??___fladd,w
  9521  0331  00B3               	movwf	___fladd@grs
  9522  0332  2B35               	goto	i1l2424
  9523  0333                     i1l2422:	
  9524  0333  1003               	clrc
  9525  0334  0CB3               	rrf	___fladd@grs,f
  9526  0335                     i1l2424:	
  9527  0335  1820               	btfsc	___fladd@b,0
  9528  0336  17B3               	bsf	___fladd@grs,7
  9529  0337  3001               	movlw	1
  9530  0338  00A8               	movwf	??___fladd
  9531  0339                     u268_25:	
  9532  0339  37A3               	asrf	___fladd@b+3,f
  9533  033A  0CA2               	rrf	___fladd@b+2,f
  9534  033B  0CA1               	rrf	___fladd@b+1,f
  9535  033C  0CA0               	rrf	___fladd@b,f
  9536  033D  0BA8               	decfsz	??___fladd& (0+127),f
  9537  033E  2B39               	goto	u268_25
  9538  033F  3001               	movlw	1
  9539  0340  00A8               	movwf	??___fladd
  9540  0341  0828               	movf	??___fladd,w
  9541  0342  07B2               	addwf	___fladd@bexp,f
  9542  0343                     i1l2432:	
  9543  0343  0020               	movlb	0	; select bank0
  9544  0344  0831               	movf	___fladd@aexp,w
  9545  0345  0232               	subwf	___fladd@bexp,w
  9546  0346  1C03               	skipc
  9547  0347  2B2B               	goto	i1l800
  9548  0348                     i1l798:	
  9549  0348  1B30               	btfsc	___fladd@signs,6
  9550  0349  2B79               	goto	i1l2458
  9551  034A  0832               	movf	___fladd@bexp,w
  9552  034B  1D03               	btfss	3,2
  9553  034C  2B56               	goto	i1l2440
  9554  034D  3000               	movlw	0
  9555  034E  00A3               	movwf	?___fladd+3
  9556  034F  3000               	movlw	0
  9557  0350  00A2               	movwf	?___fladd+2
  9558  0351  3000               	movlw	0
  9559  0352  00A1               	movwf	?___fladd+1
  9560  0353  3000               	movlw	0
  9561  0354  00A0               	movwf	?___fladd
  9562  0355  0008               	return
  9563  0356                     i1l2440:	
  9564  0356  0824               	movf	___fladd@a,w
  9565  0357  07A0               	addwf	___fladd@b,f
  9566  0358  0825               	movf	___fladd@a+1,w
  9567  0359  3DA1               	addwfc	___fladd@b+1,f
  9568  035A  0826               	movf	___fladd@a+2,w
  9569  035B  3DA2               	addwfc	___fladd@b+2,f
  9570  035C  0827               	movf	___fladd@a+3,w
  9571  035D  3DA3               	addwfc	___fladd@b+3,f
  9572  035E  1C23               	btfss	___fladd@b+3,0
  9573  035F  2BF3               	goto	i1l2492
  9574  0360  1C33               	btfss	___fladd@grs,0
  9575  0361  2B68               	goto	i1l2448
  9576  0362  3633               	lsrf	___fladd@grs,w
  9577  0363  3801               	iorlw	1
  9578  0364  00A8               	movwf	??___fladd
  9579  0365  0828               	movf	??___fladd,w
  9580  0366  00B3               	movwf	___fladd@grs
  9581  0367  2B6A               	goto	i1l2450
  9582  0368                     i1l2448:	
  9583  0368  1003               	clrc
  9584  0369  0CB3               	rrf	___fladd@grs,f
  9585  036A                     i1l2450:	
  9586  036A  1820               	btfsc	___fladd@b,0
  9587  036B  17B3               	bsf	___fladd@grs,7
  9588  036C  3001               	movlw	1
  9589  036D  00A8               	movwf	??___fladd
  9590  036E                     u275_25:	
  9591  036E  37A3               	asrf	___fladd@b+3,f
  9592  036F  0CA2               	rrf	___fladd@b+2,f
  9593  0370  0CA1               	rrf	___fladd@b+1,f
  9594  0371  0CA0               	rrf	___fladd@b,f
  9595  0372  0BA8               	decfsz	??___fladd& (0+127),f
  9596  0373  2B6E               	goto	u275_25
  9597  0374  3001               	movlw	1
  9598  0375  00A8               	movwf	??___fladd
  9599  0376  0828               	movf	??___fladd,w
  9600  0377  07B2               	addwf	___fladd@bexp,f
  9601  0378  2BF3               	goto	i1l2492
  9602  0379                     i1l2458:	
  9603  0379  0823               	movf	___fladd@b+3,w
  9604  037A  3A80               	xorlw	128
  9605  037B  00A8               	movwf	??___fladd
  9606  037C  0827               	movf	___fladd@a+3,w
  9607  037D  3A80               	xorlw	128
  9608  037E  0228               	subwf	??___fladd,w
  9609  037F  1D03               	skipz
  9610  0380  2B8B               	goto	u276_23
  9611  0381  0826               	movf	___fladd@a+2,w
  9612  0382  0222               	subwf	___fladd@b+2,w
  9613  0383  1D03               	skipz
  9614  0384  2B8B               	goto	u276_23
  9615  0385  0825               	movf	___fladd@a+1,w
  9616  0386  0221               	subwf	___fladd@b+1,w
  9617  0387  1D03               	skipz
  9618  0388  2B8B               	goto	u276_23
  9619  0389  0824               	movf	___fladd@a,w
  9620  038A  0220               	subwf	___fladd@b,w
  9621  038B                     u276_23:	
  9622  038B  1803               	skipnc
  9623  038C  2BC3               	goto	i1l2468
  9624  038D  30FF               	movlw	255
  9625  038E  00A8               	movwf	??___fladd
  9626  038F  30FF               	movlw	255
  9627  0390  00A9               	movwf	??___fladd+1
  9628  0391  30FF               	movlw	255
  9629  0392  00AA               	movwf	??___fladd+2
  9630  0393  30FF               	movlw	255
  9631  0394  00AB               	movwf	??___fladd+3
  9632  0395  0820               	movf	___fladd@b,w
  9633  0396  0224               	subwf	___fladd@a,w
  9634  0397  00AC               	movwf	??___fladd+4
  9635  0398  0821               	movf	___fladd@b+1,w
  9636  0399  3B25               	subwfb	___fladd@a+1,w
  9637  039A  00AD               	movwf	??___fladd+5
  9638  039B  0822               	movf	___fladd@b+2,w
  9639  039C  3B26               	subwfb	___fladd@a+2,w
  9640  039D  00AE               	movwf	??___fladd+6
  9641  039E  0823               	movf	___fladd@b+3,w
  9642  039F  3B27               	subwfb	___fladd@a+3,w
  9643  03A0  00AF               	movwf	??___fladd+7
  9644  03A1  082C               	movf	??___fladd+4,w
  9645  03A2  07A8               	addwf	??___fladd,f
  9646  03A3  082D               	movf	??___fladd+5,w
  9647  03A4  3DA9               	addwfc	??___fladd+1,f
  9648  03A5  082E               	movf	??___fladd+6,w
  9649  03A6  3DAA               	addwfc	??___fladd+2,f
  9650  03A7  082F               	movf	??___fladd+7,w
  9651  03A8  3DAB               	addwfc	??___fladd+3,f
  9652  03A9  082B               	movf	??___fladd+3,w
  9653  03AA  00A3               	movwf	___fladd@b+3
  9654  03AB  082A               	movf	??___fladd+2,w
  9655  03AC  00A2               	movwf	___fladd@b+2
  9656  03AD  0829               	movf	??___fladd+1,w
  9657  03AE  00A1               	movwf	___fladd@b+1
  9658  03AF  0828               	movf	??___fladd,w
  9659  03B0  00A0               	movwf	___fladd@b
  9660  03B1  3080               	movlw	128
  9661  03B2  00A8               	movwf	??___fladd
  9662  03B3  0828               	movf	??___fladd,w
  9663  03B4  06B0               	xorwf	___fladd@signs,f
  9664  03B5  09B3               	comf	___fladd@grs,f
  9665  03B6  0AB3               	incf	___fladd@grs,f
  9666  03B7  0833               	movf	___fladd@grs,w
  9667  03B8  1D03               	btfss	3,2
  9668  03B9  2BCB               	goto	i1l815
  9669  03BA  3001               	movlw	1
  9670  03BB  07A0               	addwf	___fladd@b,f
  9671  03BC  3000               	movlw	0
  9672  03BD  3DA1               	addwfc	___fladd@b+1,f
  9673  03BE  3000               	movlw	0
  9674  03BF  3DA2               	addwfc	___fladd@b+2,f
  9675  03C0  3000               	movlw	0
  9676  03C1  3DA3               	addwfc	___fladd@b+3,f
  9677  03C2  2BCB               	goto	i1l815
  9678  03C3                     i1l2468:	
  9679  03C3  0824               	movf	___fladd@a,w
  9680  03C4  02A0               	subwf	___fladd@b,f
  9681  03C5  0825               	movf	___fladd@a+1,w
  9682  03C6  3BA1               	subwfb	___fladd@b+1,f
  9683  03C7  0826               	movf	___fladd@a+2,w
  9684  03C8  3BA2               	subwfb	___fladd@b+2,f
  9685  03C9  0827               	movf	___fladd@a+3,w
  9686  03CA  3BA3               	subwfb	___fladd@b+3,f
  9687  03CB                     i1l815:	
  9688  03CB  0823               	movf	___fladd@b+3,w
  9689  03CC  0422               	iorwf	___fladd@b+2,w
  9690  03CD  0421               	iorwf	___fladd@b+1,w
  9691  03CE  0420               	iorwf	___fladd@b,w
  9692  03CF  1D03               	skipz
  9693  03D0  2BF1               	goto	i1l2490
  9694  03D1  0833               	movf	___fladd@grs,w
  9695  03D2  1D03               	btfss	3,2
  9696  03D3  2BF1               	goto	i1l2490
  9697  03D4  3000               	movlw	0
  9698  03D5  00A3               	movwf	?___fladd+3
  9699  03D6  3000               	movlw	0
  9700  03D7  00A2               	movwf	?___fladd+2
  9701  03D8  3000               	movlw	0
  9702  03D9  00A1               	movwf	?___fladd+1
  9703  03DA  3000               	movlw	0
  9704  03DB  00A0               	movwf	?___fladd
  9705  03DC  0008               	return
  9706  03DD                     i1l2476:	
  9707  03DD  3001               	movlw	1
  9708  03DE                     u280_25:	
  9709  03DE  35A0               	lslf	___fladd@b,f
  9710  03DF  0DA1               	rlf	___fladd@b+1,f
  9711  03E0  0DA2               	rlf	___fladd@b+2,f
  9712  03E1  0DA3               	rlf	___fladd@b+3,f
  9713  03E2  0B89               	decfsz	9,f
  9714  03E3  2BDE               	goto	u280_25
  9715  03E4  1BB3               	btfsc	___fladd@grs,7
  9716  03E5  1420               	bsf	___fladd@b,0
  9717  03E6  1C33               	btfss	___fladd@grs,0
  9718  03E7  2BEA               	goto	i1l2484
  9719  03E8  1403               	setc
  9720  03E9  2BEB               	goto	L2
  9721  03EA                     i1l2484:	
  9722  03EA  1003               	clrc
  9723  03EB                     L2:	
  9724  03EB  0DB3               	rlf	___fladd@grs,f
  9725  03EC  0832               	movf	___fladd@bexp,w
  9726  03ED  1903               	btfsc	3,2
  9727  03EE  2BF1               	goto	i1l2490
  9728  03EF  3001               	movlw	1
  9729  03F0  02B2               	subwf	___fladd@bexp,f
  9730  03F1                     i1l2490:	
  9731  03F1  1FA2               	btfss	___fladd@b+2,7
  9732  03F2  2BDD               	goto	i1l2476
  9733  03F3                     i1l2492:	
  9734  03F3  01B1               	clrf	___fladd@aexp
  9735  03F4  1FB3               	btfss	___fladd@grs,7
  9736  03F5  2BFE               	goto	i1l2502
  9737  03F6  0833               	movf	___fladd@grs,w
  9738  03F7  397F               	andlw	127
  9739  03F8  1903               	btfsc	3,2
  9740  03F9  1820               	btfsc	___fladd@b,0
  9741  03FA  2BFC               	goto	i1l2498
  9742  03FB  2BFE               	goto	i1l2502
  9743  03FC                     i1l2498:	
  9744  03FC  01B1               	clrf	___fladd@aexp
  9745  03FD  0AB1               	incf	___fladd@aexp,f
  9746  03FE                     i1l2502:	
  9747  03FE  0831               	movf	___fladd@aexp,w
  9748  03FF  1903               	btfsc	3,2
  9749  0400  2C2A               	goto	i1l828
  9750  0401  3001               	movlw	1
  9751  0402  07A0               	addwf	___fladd@b,f
  9752  0403  3000               	movlw	0
  9753  0404  3DA1               	addwfc	___fladd@b+1,f
  9754  0405  3000               	movlw	0
  9755  0406  3DA2               	addwfc	___fladd@b+2,f
  9756  0407  3000               	movlw	0
  9757  0408  3DA3               	addwfc	___fladd@b+3,f
  9758  0409  1C23               	btfss	___fladd@b+3,0
  9759  040A  2C2A               	goto	i1l828
  9760  040B  0820               	movf	___fladd@b,w
  9761  040C  00A8               	movwf	??___fladd
  9762  040D  0821               	movf	___fladd@b+1,w
  9763  040E  00A9               	movwf	??___fladd+1
  9764  040F  0822               	movf	___fladd@b+2,w
  9765  0410  00AA               	movwf	??___fladd+2
  9766  0411  0823               	movf	___fladd@b+3,w
  9767  0412  00AB               	movwf	??___fladd+3
  9768  0413  3001               	movlw	1
  9769  0414  00AC               	movwf	??___fladd+4
  9770  0415                     u290_25:	
  9771  0415  37AB               	asrf	??___fladd+3,f
  9772  0416  0CAA               	rrf	??___fladd+2,f
  9773  0417  0CA9               	rrf	??___fladd+1,f
  9774  0418  0CA8               	rrf	??___fladd,f
  9775  0419  0BAC               	decfsz	??___fladd+4,f
  9776  041A  2C15               	goto	u290_25
  9777  041B  082B               	movf	??___fladd+3,w
  9778  041C  00A3               	movwf	___fladd@b+3
  9779  041D  082A               	movf	??___fladd+2,w
  9780  041E  00A2               	movwf	___fladd@b+2
  9781  041F  0829               	movf	??___fladd+1,w
  9782  0420  00A1               	movwf	___fladd@b+1
  9783  0421  0828               	movf	??___fladd,w
  9784  0422  00A0               	movwf	___fladd@b
  9785  0423  0A32               	incf	___fladd@bexp,w
  9786  0424  1903               	btfsc	3,2
  9787  0425  2C2A               	goto	i1l828
  9788  0426  3001               	movlw	1
  9789  0427  00A8               	movwf	??___fladd
  9790  0428  0828               	movf	??___fladd,w
  9791  0429  07B2               	addwf	___fladd@bexp,f
  9792  042A                     i1l828:	
  9793  042A  0A32               	incf	___fladd@bexp,w
  9794  042B  1D03               	btfss	3,2
  9795  042C  0832               	movf	___fladd@bexp,w
  9796  042D  1D03               	btfss	3,2
  9797  042E  2C3A               	goto	i1l2520
  9798  042F  3000               	movlw	0
  9799  0430  00A3               	movwf	___fladd@b+3
  9800  0431  3000               	movlw	0
  9801  0432  00A2               	movwf	___fladd@b+2
  9802  0433  3000               	movlw	0
  9803  0434  00A1               	movwf	___fladd@b+1
  9804  0435  3000               	movlw	0
  9805  0436  00A0               	movwf	___fladd@b
  9806  0437  0832               	movf	___fladd@bexp,w
  9807  0438  1903               	btfsc	3,2
  9808  0439  01B0               	clrf	___fladd@signs
  9809  043A                     i1l2520:	
  9810  043A  1C32               	btfss	___fladd@bexp,0
  9811  043B  2C3E               	goto	i1l2524
  9812  043C  17A2               	bsf	___fladd@b+2,7
  9813  043D  2C42               	goto	i1l836
  9814  043E                     i1l2524:	
  9815  043E  307F               	movlw	127
  9816  043F  00A8               	movwf	??___fladd
  9817  0440  0828               	movf	??___fladd,w
  9818  0441  05A2               	andwf	___fladd@b+2,f
  9819  0442                     i1l836:	
  9820  0442  3632               	lsrf	___fladd@bexp,w
  9821  0443  00A8               	movwf	??___fladd
  9822  0444  0828               	movf	??___fladd,w
  9823  0445  00A3               	movwf	___fladd@b+3
  9824  0446  1FB0               	btfss	___fladd@signs,7
  9825  0447  0008               	return
  9826  0448  17A3               	bsf	___fladd@b+3,7
  9827  0449  0008               	return
  9828  044A                     __end_of___fladd:	
  9829  007E                     btemp	set	126	;btemp
  9830  007E                     int$flags	set	126
  9831  007E                     wtemp0	set	126


Data Sizes:
    Strings     6
    Constant    0
    Data        32
    BSS         51
    Persistent  43
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     41      65
    BANK1            80     80      80
    BANK2            80     13      51
    BANK3            80      0      32
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    puts@s	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_3(CODE[3]), hrDisp(BANK2[13]), distanceDisp(BANK2[11]), speedDisp(BANK2[8]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_2(CODE[3]), STR_1(CODE[3]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK2[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK3[32]), STR_3(CODE[3]), hrDisp(BANK2[13]), distanceDisp(BANK2[11]), 
		 -> speedDisp(BANK2[8]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S987_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK2[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_2(CODE[3]), STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_2(CODE[3]), STR_1(CODE[3]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 2
		 -> ?_printf(BANK2[2]), rpm(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK2[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK2[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    writeString@string	PTR unsigned char  size(1) Largest target is 13
		 -> hrDisp(BANK2[13]), distanceDisp(BANK2[11]), speedDisp(BANK2[8]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timerISR(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timerISR(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    IOCCF5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> speedCalc(), IOCCF5_DefaultInterruptHandler(), 

    IOCCF5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> speedCalc(), Absolute function(), IOCCF5_DefaultInterruptHandler(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _timerISR->___awmod
    _speedCalc->___xxtofl
    ___fltol->___xxtofl
    ___flmul->___xxtofl
    ___fladd->___xxtofl

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _IOCCF5_ISR->_speedCalc
    _speedCalc->___fltol
    ___fltol->___flmul

Critical Paths under _main in BANK1

    _main->_printf
    _writeString->_puts
    _setCursor->_EUSART_Write
    _setCursor->_EUSART_is_tx_ready
    _resetCursor->_puts
    _puts->_fputs
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _abs->___aomod
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCCF5_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_printf
    _printf->_vfprintf

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   14344
                                             12 BANK2      1     1      0
         _IOCCF5_SetInterruptHandler
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                             _printf
                        _resetCursor
                          _setCursor
                        _writeString
 ---------------------------------------------------------------------------------
 (1) _writeString                                          1     1      0    2879
                                             24 BANK1      1     1      0
                 _EUSART_is_tx_ready
                               _puts
 ---------------------------------------------------------------------------------
 (1) _setCursor                                            4     3      1     612
                                              1 BANK1      4     3      1
                       _EUSART_Write
                 _EUSART_is_tx_ready
 ---------------------------------------------------------------------------------
 (2) _EUSART_is_tx_ready                                   1     1      0      24
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _resetCursor                                          0     0      0    2734
                               _puts
 ---------------------------------------------------------------------------------
 (2) _puts                                                 5     3      2    2734
                                             19 BANK1      5     3      2
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4    7129
                                             79 BANK1      1     1      0
                                              5 BANK2      7     3      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    6772
                                             76 BANK1      3     0      3
                                              0 BANK2      5     5      0
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    6325
                                             58 BANK1     18    16      2
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    4723
                                             28 BANK1     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    3100
                                             19 BANK1      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     123
                                              0 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 (3) _fputs                                                9     6      3    1549
                                             10 BANK1      9     6      3
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     980
                                              2 BANK1      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      44
                                              1 BANK1      1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             19 BANK1      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     448
                                              0 BANK1     19     3     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     452
                                              0 BANK1     27    11     16
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     642
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0     174
                                              2 BANK1      1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     174
         _IOCCF5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCCF5_SetInterruptHandler                           2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          0     0      0    6401
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR0_ISR                                            0     0      0     448
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                           _timerISR *
 ---------------------------------------------------------------------------------
 (12) _timerISR                                            0     0      0     448
                            ___awmod
 ---------------------------------------------------------------------------------
 (13) ___awmod                                             7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (12) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _PIN_MANAGER_IOC                                     0     0      0    5953
                         _IOCCF5_ISR
 ---------------------------------------------------------------------------------
 (12) _IOCCF5_ISR                                          0     0      0    5953
                   Absolute function *
     _IOCCF5_DefaultInterruptHandler *
                          _speedCalc *
 ---------------------------------------------------------------------------------
 (13) _speedCalc                                           4     4      0    5953
                                             37 BANK0      4     4      0
                            ___fladd
                            ___flmul
                            ___fltol
                             ___wmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (14) ___xxtofl                                           14    10      4     474
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (14) ___wmul                                              6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (14) ___fltol                                            11     7      4     381
                                             26 BANK0     11     7      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (14) ___flmul                                            26    18      8    2569
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (15) __Umul8_16                                           9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (14) ___fladd                                            20    12      8    2262
                                              0 BANK0     20    12      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (13) _IOCCF5_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _IOCCF5_SetInterruptHandler
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCCF5_SetInterruptHandler
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _TMR0_SetInterruptHandler
   _printf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART_Write
             _fputs
               _fputc
                 _putch
                   _EUSART_Write
             _strlen
         _fputc
           _putch
             _EUSART_Write
   _resetCursor
     _puts
       _fputc
         _putch
           _EUSART_Write
       _fputs
         _fputc
           _putch
             _EUSART_Write
   _setCursor
     _EUSART_Write
     _EUSART_is_tx_ready
   _writeString
     _EUSART_is_tx_ready
     _puts
       _fputc
         _putch
           _EUSART_Write
       _fputs
         _fputc
           _putch
             _EUSART_Write

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
     _IOCCF5_ISR
       Absolute function(Fake) *
       _IOCCF5_DefaultInterruptHandler *
       _speedCalc *
         ___fladd
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___wmul
         ___xxtofl
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _timerISR *
       ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     29      41       5       81.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     50      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      D      33       9       63.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      20      11       40.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      F2      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      F2      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Mar 12 12:40:49 2019

                                  __CFG_CP$OFF 0000                                             l69 07F8  
                          ___wmul@multiplicand 0072                                _timer0ReloadVal 0060  
                          __Umul8_16@word_mpld 0076                                            l352 0C9C  
                                          l443 07BB                                            l451 0490  
                                          l460 055C                                            l452 0497  
                                          l606 0FEE                                            l446 07DB  
                                          l456 04B2                                            l457 04C6  
                                          l593 078E                                            _abs 0AEB  
                                          _pad 07A0                                            _rpm 0054  
               ?_EUSART_SetFramingErrorHandler 00A0                                   ___awmod@sign 0076  
                                 __CFG_BORV$LO 0000                                            wreg 0009  
                                 __CFG_IESO$ON 0000                                   ___flmul@aexp 0032  
                                 ___flmul@bexp 0033                                   ___flmul@sign 002D  
                                 ___flmul@temp 0038                                   ___flmul@prod 0034  
                                 __CFG_LVP$OFF 0000                                   __CFG_ZCD$OFF 0000  
                                 ___fltol@exp1 0044                                           ?_abs 00B3  
                                         l2104 0BD3                                           l2202 0F82  
                                         l2210 0FCD                                           l2106 0BF4  
                                         l2114 0B0A                                           l2204 0F91  
                                         l2116 0B16                                           l2124 07B1  
                                         l3004 0AC0                                           l2134 07BD  
                                         l2152 06D5                                           l2208 0FC1  
                                         l2128 07B9                                           l2240 04AA  
                                         l2170 0728                                           l2138 07EA  
                                         l2250 04F3                                           l2180 076D  
                                         l2156 06FD                                           l2092 0CCB  
                                         l2260 04CE                                           l2158 0702  
                                         l2190 0F4D                                           l2094 0CD4  
                                         l2246 04C1                                           l3142 0C38  
                                         l3222 0C8E                                           l2168 0719  
                                         l2088 0CA8                                           l2272 0570  
                                         l3144 0C58                                           l2178 0761  
                                         l2194 0F75                                           l2282 0588  
                                         l2268 0568                                           l2278 057B  
                                         l3176 0DC4                                           l2750 061D  
                                         l2742 05E0                                           l2762 0651  
                                         l2772 067A                                           l2844 0AA6  
                                         l2758 064D                                           ?_pad 00B3  
                                         l2768 0674                                           l2778 0684  
                                         l2990 0C80                                           l2984 0C71  
                                         l2986 0C76                                           l2994 0C85  
                                         l2978 0C62                                           l2988 0C7B  
                                         STR_1 1003                                           STR_2 1003  
                                         STR_3 1000                                           u2040 070A  
                                         _LATA 010C                                           _LATB 010D  
                                         _LATC 010E                                           u2240 0466  
                                         u2250 0467                                           u2075 074E  
                                         u2325 0566                                           u2175 0FAF  
                                         u2345 04E2                                           u2355 04EE  
                                         u2295 04A2                                           u1925 0CC9  
                                         u1975 07C7                                           u1995 0AF5  
                                         u3777 0ACF                                           u3787 0C6D  
                                         _TMR0 0015                                           _WPUA 020C  
                                         _WPUB 020D                                           _WPUC 020E  
                                 __CFG_WRT$OFF 0000                                  __CFG_FCMEN$ON 0000  
                                         abs@a 00B3                                           _dbuf 01A0  
                                         _main 0D88                                           _dtoa 044A  
                                         _prec 004B                                           _nout 014D  
                                         pad@i 00B7                                           pad@p 00B4  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         pad@w 00B9                                           btemp 007E  
                                         _puts 0B52               ??_IOCCF5_DefaultInterruptHandler 0070  
              ?_IOCCF5_DefaultInterruptHandler 0070                                  __CFG_BOREN$ON 0000  
                                         start 0014                                  __CFG_MCLRE$ON 0000  
                                        ??_abs 00B5                                          ??_pad 00B6  
                      __end_of_TMR0_Initialize 0AEB                 ??_TMR0_DefaultInterruptHandler 0070  
                                ?_EUSART_Write 0070                 __size_of_OSCILLATOR_Initialize 0007  
                __end_of_OSCILLATOR_Initialize 0A3F                            __size_of_IOCCF5_ISR 000D  
                                ___fltol@sign1 0043                                __end_of___aodiv 07A0  
                              __end_of___fladd 044A                                          ?_main 0070  
                                        ?_dtoa 00BC                                __end_of___aomod 1000  
                                __CFG_WDTE$OFF 0000                                __end_of___awmod 0D22  
                              __end_of___flmul 0268                                __end_of___fltol 0D88  
                                        ?_puts 00B3                                          i1l236 000D  
                                        i1l239 0012                                          i1l800 032B  
                                        i1l493 0B3F                                          i1l902 025B  
                                        i1l815 03CB                                          i1l836 0442  
                                        i1l828 042A                                          i1l941 0E58  
                                        i1l694 0D6C                                          i1l942 0E62  
                                        i1l934 0E44                                          i1l928 0E0E  
                                        i1l794 02B5                                          i1l798 0348  
                                        i1l996 0B7D                                   vfpfcnvrt@fmt 00DA  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TRISC 008E                                    _writeString 0ABE  
            __size_of_TMR0_SetInterruptHandler 0009                      ?_TMR0_SetInterruptHandler 00A0  
                             __end_of_TMR0_ISR 0A9B                        __end_of_PIN_MANAGER_IOC 0A26  
                                        _flags 004D                                          _fputc 0C9D  
                                        _fputs 0BD0                                          _speed 014F  
                                        pad@fp 00BB                                          _width 0049  
                                        _putch 0A26                                          dtoa@d 00BC  
                                        dtoa@i 00D8                                          dtoa@n 00D0  
                                        dtoa@p 00C9                                          dtoa@s 00CE  
                                        dtoa@w 00CC                                          pclath 000A  
                                        puts@s 00B3                                          status 0003  
                                        wtemp0 007E                                __initialization 0016  
                                 __end_of_main 0DF1                                   __end_of_dtoa 059B  
                                 __end_of_puts 0B6D                                 ??_EUSART_Write 00A0  
                               __CFG_LPBOR$OFF 0000                    ?_INTERRUPT_InterruptManager 0070  
                                       ??_main 014C                                         ??_dtoa 00C4  
                                       ??_puts 00B5                                 __CFG_PLLEN$OFF 0000  
            _EUSART_DefaultFramingErrorHandler 0000                     _EUSART_OverrunErrorHandler 005C  
                                       ?_fputc 00A2                                         ?_fputs 00AA  
                                       _ANSELA 018C                                         ?_putch 0070  
                                       _ANSELB 018D                                         _ANSELC 018E  
                                       _BORCON 0116                                         _RC1REG 0199  
                                       _RC1STA 019D                                         _RB7PPS 0E9F  
                                       i1l2302 0D2C                                         _ODCONA 028C  
                                       i1l2218 0B77                                         i1l2322 0D5A  
                                       i1l2306 0D35                                         _ODCONB 028D  
                                       _ODCONC 028E                                         i1l2332 0D79  
                                       i1l2324 0D68                                         i1l2502 03FE  
                                       i1l2422 0333                                         i1l2414 02FB  
                                       i1l2350 0282                                         i1l2520 043A  
                                       i1l2440 0356                                         i1l2424 0335  
                                       i1l2432 0343                                         i1l2450 036A  
                                       i1l2354 0285                                         i1l2524 043E  
                                       i1l2356 028D                                         i1l2374 02AA  
                                       i1l2710 0E7D                                         i1l2448 0368  
                                       i1l2384 02BF                                         i1l2544 0056  
                                       i1l2288 0B39                                         i1l2490 03F1  
                                       i1l2458 0379                                         i1l2378 02AD  
                                       i1l2634 01F1                                         i1l2626 01C3  
                                       i1l2562 0079                                         i1l2546 0058  
                                       i1l2484 03EA                                         i1l2476 03DD  
                                       i1l2468 03C3                                         i1l2492 03F3  
                                       i1l2652 0231                                         i1l2628 01DA  
                                       i1l2564 007B                                         i1l2548 0060  
                                       i1l2820 0D1D                                         i1l2812 0D0C  
                                       i1l2638 01F3                                         i1l2574 0091  
                                       i1l2566 0083                                         i1l2806 0CF4  
                                       i1l2648 021C                                         i1l2904 0A8A  
                                       i1l2808 0D00                                         i1l2816 0D15  
                                       i1l2498 03FC                                         i1l2658 0248  
                                       i1l2682 0E1D                                         i1l2676 0E06  
                                       i1l2686 0E21                                         i1l2696 0E56  
                                       i1l2688 0E31                                         i1l2698 0E49  
                                       i1l2794 0CE7                                         i1l2798 0CEE  
                                       u222_25 0B7E                                         u310_25 01C6  
                                       u320_25 0225                                         u312_25 01CF  
                                       u321_25 023B                                         u305_25 0107  
                                       u241_25 0B40                                         u306_25 0136  
                                       u242_25 0B45                                         u330_25 0E50  
                                       u307_25 018C                                         u251_25 0D70  
                                       u308_25 01A3                     __end_of_EUSART_is_tx_ready 0AA9  
                                       u309_25 01B2                                         u245_25 0D3E  
                                       u334_25 0E6A                                         u326_25 0E2A  
                                       u263_25 030F                                         u319_25 020A  
                                       u264_20 031A                                         u280_25 03DE  
                                       u248_25 0D5B                                         u328_25 0E3E  
                                       u265_20 031B                                         u345_25 0CF7  
                                       u290_25 0415                                         u275_25 036E  
                                       u347_25 0D06                                         u276_23 038B  
                                       u268_25 0339                                         u348_25 0D0D  
                                       _OSCCON 0099                                         u201lld 06D2  
                                       u212lld 0F4A                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _TX1REG 019A  
                                       _TX1STA 019E                                   ?_resetCursor 0070  
                             __end_of___xxtofl 0E86                                 __CFG_PWRTE$OFF 0000  
                                 vfprintf@cfmt 0143                                      ??___aodiv 00B0  
                                    ??___fladd 0028                                      ??___aomod 00B0  
                                       ___wmul 0B37                                 __CFG_STVREN$ON 0000  
                                    ??___awmod 0074                                      ??___flmul 0028  
                                    ??___fltol 003E                                         _hrDisp 0120  
                             ?_TMR0_Initialize 0070                                         _second 0051  
                              ___awmod@divisor 0070                                ___awmod@counter 0075  
                                       _printf 0AA9                                         pad@buf 00B3  
                                       dtoa@fp 00CB                                         _strlen 0B04  
                                       fputc@c 00A2                                         fputs@c 00B0  
                                       fputs@i 00B1                                         fputs@s 00AA  
                           __size_of__Umul8_16 001F                               __end_of_timerISR 0B37  
                             __end_of_vfprintf 0C60       TMR0_SetInterruptHandler@InterruptHandler 00A0  
   IOCCF5_SetInterruptHandler@InterruptHandler 00A0                               ?_PIN_MANAGER_IOC 0070  
                                 ??_IOCCF5_ISR 007E                                   ___xxtofl@arg 007A  
                                 ___xxtofl@exp 0079                              _SYSTEM_Initialize 0A74  
                                 ___xxtofl@val 0070                        __end_of__initialization 0038  
                           ?_SYSTEM_Initialize 0070                                     ___fltol@f1 003A  
                               __pcstackCOMMON 0070                                   __pidataBANK2 0B8C  
                          ??_SYSTEM_Initialize 00A3                                      ?_TMR0_ISR 0070  
                                __end_of_fputc 0CDD                                  __end_of_fputs 0BF9  
                                __end_of_putch 0A2C                             __end_of_IOCCF5_ISR 0A8D  
                               _OPTION_REGbits 0095                ??_EUSART_SetOverrunErrorHandler 00A2  
                                      ??_fputc 00A5                      __end_of_SYSTEM_Initialize 0A80  
                                      ??_fputs 00AD                                        ??_putch 00A1  
                                   __pbssBANK0 0049                                     __pbssBANK2 014D  
                                   __pbssBANK3 01A0                           __end_of_EUSART_Write 0800  
                            __end_of__Umul8_16 0B8C                                     __pmaintext 0D88  
             __end_of_TMR0_SetInterruptHandler 0A74                                        ?___wmul 0070  
                                   ??_TMR0_ISR 0077                                __CFG_PPS1WAY$ON 0000  
                           __size_of_setCursor 003D                                     __pintentry 0004  
       __end_of_IOCCF5_DefaultInterruptHandler 0003        __size_of_IOCCF5_DefaultInterruptHandler 0001  
               _IOCCF5_DefaultInterruptHandler 0002                                        ?_printf 0145  
                                      ?_strlen 00A0                             __size_of_speedCalc 009B  
                              __CFG_WDTCCS$SWC 0000                                      ?___xxtofl 0070  
                                 ?_writeString 0070                             __size_of_vfpfcnvrt 010E  
                                      _OSCTUNE 0098                                        _SLRCONA 030C  
                                      _SLRCONB 030D                                        _SLRCONC 030E  
                     ??_EUSART_SetErrorHandler 00A2                           __size_of_resetCursor 0008  
                                    ?_timerISR 0070                                        ___aodiv 06A9  
                                      ___fladd 0268                                        ___aomod 0F21  
                                      ___awmod 0CDD                                        ___flmul 003C  
                                      ___fltol 0D22                                __size_of___wmul 001B  
                                    ?_vfprintf 00EC                                        __ptext1 0ABE  
                                      __ptext2 0C60                                        __ptext3 0A9B  
                                      __ptext4 0A3F                                        __ptext5 0B52  
                                      __ptext6 0AA9                                        __ptext7 0C2C  
                                      __ptext8 059B                                        __ptext9 044A  
                              __size_of_printf 0015                                __size_of_strlen 0019  
                                      _counter 004F                          _OSCILLATOR_Initialize 0A38  
                                 __size_of_abs 0019                                   __size_of_pad 0056  
                                   ??___xxtofl 0074                               ___awmod@dividend 0072  
                     ??_PIN_MANAGER_Initialize 00A2                                      _IOCCFbits 0399  
                                    _IOCCNbits 0398                                      _IOCCPbits 0397  
                   __size_of_SYSTEM_Initialize 000C                                        clrloop0 0A2D  
                         end_of_initialization 0038                              __end_of_setCursor 0C9D  
        __end_of_EUSART_SetOverrunErrorHandler 0A62         __size_of_EUSART_SetOverrunErrorHandler 0009  
                _EUSART_SetOverrunErrorHandler 0A59                                        fputc@fp 00A4  
                                      init_ram 0A32                                        fputs@fp 00AC  
                                      initloop 0A33                              __end_of_speedCalc 0F21  
                            _EUSART_Initialize 0BAC                             ?_EUSART_Initialize 0070  
                            __end_of_vfpfcnvrt 06A9                                     ??_timerISR 0077  
                           _EUSART_is_tx_ready 0A9B                                     ??_vfprintf 0140  
                                      strlen@a 00A3                                        strlen@s 00A4  
                          ??_EUSART_Initialize 00A2                                   _distanceDisp 012D  
                     _TMR0_SetInterruptHandler 0A6B                            ?_EUSART_is_tx_ready 0070  
                                  ___fladd@grs 0033                               __CFG_FOSC$INTOSC 0000  
                                ___xxtofl@sign 0078                          __size_of_EUSART_Write 000A  
                 ??_IOCCF5_SetInterruptHandler 00A2                __size_of_EUSART_SetErrorHandler 0009  
                                  ___flmul@grs 002E                      __end_of_EUSART_Initialize 0BD0  
                         ??_EUSART_is_tx_ready 00A0                                 _speedCalc$1214 0045  
                   _EUSART_DefaultErrorHandler 0000                                    vfpfcnvrt@ap 00DB  
                                  vfpfcnvrt@fp 00EB                                    vfpfcnvrt@ll 00E1  
                               __end_of___wmul 0B52                                    vfpfcnvrt@vp 00E9  
                                 _EUSART_Write 07F6                              __size_of_TMR0_ISR 000E  
                       ?_OSCILLATOR_Initialize 0070                              writeString@string 00B8  
          __size_of_IOCCF5_SetInterruptHandler 0009                                 __end_of_printf 0ABE  
                               __end_of_strlen 0B1D                            start_initialization 0016  
                     __size_of_TMR0_Initialize 0018                __size_of_PIN_MANAGER_Initialize 0033  
                                  __end_of_abs 0B04                                    __end_of_pad 07F6  
                         __size_of_writeString 0015                         _EUSART_is_tx_ready$167 00A0  
                                  putch@txData 00A1                       __size_of_PIN_MANAGER_IOC 0006  
               ?_EUSART_SetOverrunErrorHandler 00A0                                    vfprintf@fmt 00EC  
                   _EUSART_FramingErrorHandler 005E                                       ??___wmul 0074  
                       _EUSART_SetErrorHandler 0A47                                      __Umul8_16 0B6D  
                                  __pdataBANK2 0120                                       ??_printf 00EF  
                                     ??_strlen 00A2                                      ___fladd@a 0024  
                                    ___fladd@b 0020                                      ___flmul@a 0024  
                                    ___flmul@b 0020                                      ___latbits 0002  
                                __pcstackBANK0 0020                                  __pcstackBANK1 00A0  
                                __pcstackBANK2 0140                               ___aodiv@dividend 00A8  
                            __size_of___xxtofl 0095                     __size_of_EUSART_Initialize 0024  
                        _TMR0_InterruptHandler 0056                                      __pnvBANK0 0056  
                      _IOCCF5_InterruptHandler 0058                         _PIN_MANAGER_Initialize 0BF9  
                                     ?___aodiv 00A0                                       ?___fladd 0020  
                                     ?___aomod 00A0                               ___aodiv@quotient 00B3  
                                     ?___awmod 0070                                       ?___flmul 0020  
                                     ?___fltol 003A                                     ?__Umul8_16 0070  
                                   setCursor@a 00A4                                     setCursor@b 00A1  
                            __size_of_timerISR 001A                   ??_INTERRUPT_InterruptManager 007E  
                            __size_of_vfprintf 0034                                       _BAUD1CON 019F  
           __end_of_IOCCF5_SetInterruptHandler 0A6B                     _IOCCF5_SetInterruptHandler 0A62  
                               __size_of_fputc 0040                                 __size_of_fputs 0029  
                               __size_of_putch 0006                              ??_TMR0_Initialize 00A2  
                                ??_resetCursor 00B8                                 ___wmul@product 0074  
       EUSART_SetErrorHandler@interruptHandler 00A0                                      _setCursor 0C60  
                                    clear_ram0 0A2C                              _eusartRxLastError 0053  
          __size_of_INTERRUPT_InterruptManager 0010                     ??_TMR0_SetInterruptHandler 00A2  
                                     _PIR1bits 0010                ??_EUSART_SetFramingErrorHandler 00A2  
                                    _puts$1033 00B7                                      _speedCalc 0E86  
                                    _speedDisp 0138                           __CFG_WDTCPS$WDTCPS1F 0000  
                                     _TMR0_ISR 0A8D              _EUSART_DefaultOverrunErrorHandler 0000  
                            ??_PIN_MANAGER_IOC 007E                                      _vfpfcnvrt 059B  
                            ___wmul@multiplier 0070                                     ?_setCursor 00A1  
                                   vfprintf@ap 00EE                                     vfprintf@fp 0142  
                          __end_of_resetCursor 0A47                                     ?_speedCalc 0070  
                      ??_OSCILLATOR_Initialize 00A0                                    ??__Umul8_16 0072  
                          _EUSART_ErrorHandler 005A                               __size_of___aodiv 00F7  
                             __size_of___fladd 01E2                               __size_of___aomod 00DF  
                             __size_of___awmod 0045                               __size_of___flmul 022C  
                             __size_of___fltol 0066                                     ?_vfpfcnvrt 00DA  
                              ___aodiv@divisor 00A0                                ___aodiv@counter 00B1  
                                     ___xxtofl 0DF1                                       _dtoa$687 00C7  
                                     __ptext10 07A0                                       __ptext11 0B04  
                                     __ptext20 0AD3                                       __ptext12 0BD0  
                                     __ptext21 0A6B                                       __ptext13 0C9D  
                                     __ptext30 0A8D                                       __ptext22 0BF9  
                                     __ptext14 0A26                                       __ptext31 0003  
                                     __ptext23 0A62                                       __ptext15 07F6  
                                     __ptext40 0D22                                       __ptext32 0B1D  
                                     __ptext24 0A38                                       __ptext16 0AEB  
                                     __ptext41 003C                                       __ptext33 0CDD  
                                     __ptext25 0BAC                                       __ptext17 0F21  
                                     __ptext42 0B6D                                       __ptext34 0A20  
                                     __ptext26 0A59                                       __ptext18 06A9  
                                     __ptext43 0268                                       __ptext35 0A80  
                                     __ptext27 0A50                                       __ptext19 0A74  
                                     __ptext36 0002                                       __ptext28 0A47  
                                     __ptext37 0E86                                       __ptext38 0DF1  
                                     __ptext39 0B37                                       _distance 0151  
                                   _IOCCF5_ISR 0A80                                  __size_of_main 0069  
                                __size_of_dtoa 0151                                  __size_of_puts 001B  
                  __size_of_EUSART_is_tx_ready 000E           __end_of_TMR0_DefaultInterruptHandler 0004  
        __size_of_TMR0_DefaultInterruptHandler 0001                   _TMR0_DefaultInterruptHandler 0003  
                         __CFG_WDTCWS$WDTCWSSW 0000                        ?_EUSART_SetErrorHandler 00A0  
                                   _RC1STAbits 019D  EUSART_SetOverrunErrorHandler@interruptHandler 00A0  
                                     _timerISR 0B1D                                       int$flags 007E  
                                     _vfprintf 0C2C             __end_of_INTERRUPT_InterruptManager 0014  
                   _INTERRUPT_InterruptManager 0004                                      printf@fmt 0145  
        __end_of_EUSART_SetFramingErrorHandler 0A59         __size_of_EUSART_SetFramingErrorHandler 0009  
                _EUSART_SetFramingErrorHandler 0A50                               ___aomod@dividend 00A8  
                                ??_writeString 00B8                                     _INTCONbits 000B  
                                     intlevel1 0000                        ?_PIN_MANAGER_Initialize 0070  
                                  _resetCursor 0A3F                 __end_of_EUSART_SetErrorHandler 0A50  
                                  ??_setCursor 00A2                              __CFG_CLKOUTEN$OFF 0000  
                ?_TMR0_DefaultInterruptHandler 0070                                    ??_speedCalc 007E  
                                     printf@ap 014B  EUSART_SetFramingErrorHandler@interruptHandler 00A0  
                              ___aomod@divisor 00A0                                    ??_vfpfcnvrt 00DC  
                              ___aomod@counter 00B1                                  __pstringtext1 1000  
                                __pstringtext2 1003                                  __pstringtext3 0000  
                       __Umul8_16@multiplicand 0070                                     _OPTION_REG 0095  
                              _TMR0_Initialize 0AD3                    ?_IOCCF5_SetInterruptHandler 00A0  
                                   _TX1STAbits 019E                                  ___fladd@signs 0030  
                           EUSART_Write@txData 00A0                            __end_of_writeString 0AD3  
                                 ___aodiv@sign 00B2                                    ?_IOCCF5_ISR 0070  
               __end_of_PIN_MANAGER_Initialize 0C2C                                   ___fladd@aexp 0031  
                                 ___fladd@bexp 0032                                _PIN_MANAGER_IOC 0A20  
                         __Umul8_16@multiplier 0078                                   ___aomod@sign 00B2  
                            __Umul8_16@product 0074  
