

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Mar 25 12:32:04 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1619
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	stringtext3,global,class=STRCODE,delta=2
     9                           	psect	stringtext4,global,class=STRCODE,delta=2
    10                           	psect	stringtext5,global,class=STRCODE,delta=2
    11                           	psect	cinit,global,class=CODE,merge=1,delta=2
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	inittext,global,class=CODE,delta=2
    17                           	psect	clrtext,global,class=CODE,delta=2
    18                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    19                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    20                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    22                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    23                           	psect	text1,local,class=CODE,merge=1,delta=2
    24                           	psect	text2,local,class=CODE,merge=1,delta=2
    25                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text4,local,class=CODE,merge=1,delta=2
    27                           	psect	text5,local,class=CODE,merge=1,delta=2
    28                           	psect	text6,local,class=CODE,merge=1,delta=2
    29                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text8,local,class=CODE,merge=1,delta=2
    31                           	psect	text9,local,class=CODE,merge=1,delta=2
    32                           	psect	text10,local,class=CODE,merge=1,delta=2
    33                           	psect	text11,local,class=CODE,merge=1,delta=2
    34                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text15,local,class=CODE,merge=1,delta=2
    38                           	psect	text16,local,class=CODE,merge=1,delta=2
    39                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text21,local,class=CODE,merge=1,delta=2
    44                           	psect	text22,local,class=CODE,merge=1,delta=2
    45                           	psect	text23,local,class=CODE,merge=1,delta=2
    46                           	psect	text24,local,class=CODE,merge=1,delta=2
    47                           	psect	text25,local,class=CODE,merge=1,delta=2
    48                           	psect	text26,local,class=CODE,merge=1,delta=2
    49                           	psect	text27,local,class=CODE,merge=1,delta=2
    50                           	psect	text28,local,class=CODE,merge=1,delta=2
    51                           	psect	text29,local,class=CODE,merge=1,delta=2
    52                           	psect	text30,local,class=CODE,merge=1,delta=2
    53                           	psect	intentry,global,class=CODE,delta=2
    54                           	psect	text32,local,class=CODE,merge=1,delta=2
    55                           	psect	text33,local,class=CODE,merge=1,delta=2
    56                           	psect	text34,local,class=CODE,merge=1,delta=2
    57                           	psect	text35,local,class=CODE,merge=1,delta=2
    58                           	psect	text36,local,class=CODE,merge=1,delta=2
    59                           	psect	text37,local,class=CODE,merge=1,delta=2
    60                           	psect	text38,local,class=CODE,merge=1,delta=2
    61                           	psect	text39,local,class=CODE,merge=1,delta=2,group=1
    62                           	psect	text40,local,class=CODE,merge=1,delta=2,group=1
    63                           	psect	text41,local,class=CODE,merge=1,delta=2,group=1
    64                           	psect	text42,local,class=CODE,merge=1,delta=2,group=1
    65                           	psect	text43,local,class=CODE,merge=1,delta=2,group=1
    66                           	psect	text44,local,class=CODE,merge=1,delta=2,group=1
    67                           	dabs	1,0x7E,2
    68  0000                     
    69                           ; Version 2.05
    70                           ; Generated 20/12/2018 GMT
    71                           ; 
    72                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    73                           ; All rights reserved.
    74                           ; 
    75                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    76                           ; 
    77                           ; Redistribution and use in source and binary forms, with or without modification, are
    78                           ; permitted provided that the following conditions are met:
    79                           ; 
    80                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    81                           ;        conditions and the following disclaimer.
    82                           ; 
    83                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    84                           ;        of conditions and the following disclaimer in the documentation and/or other
    85                           ;        materials provided with the distribution.
    86                           ; 
    87                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    88                           ;        software without specific prior written permission.
    89                           ; 
    90                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    91                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    92                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    93                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    94                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    95                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    96                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    97                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    98                           ; 
    99                           ; 
   100                           ; Code-generator required, PIC16F1619 Definitions
   101                           ; 
   102                           ; SFR Addresses
   103  0000                     	;# 
   104  0001                     	;# 
   105  0002                     	;# 
   106  0003                     	;# 
   107  0004                     	;# 
   108  0005                     	;# 
   109  0006                     	;# 
   110  0007                     	;# 
   111  0008                     	;# 
   112  0009                     	;# 
   113  000A                     	;# 
   114  000B                     	;# 
   115  000C                     	;# 
   116  000D                     	;# 
   117  000E                     	;# 
   118  0010                     	;# 
   119  0011                     	;# 
   120  0012                     	;# 
   121  0013                     	;# 
   122  0014                     	;# 
   123  0015                     	;# 
   124  0016                     	;# 
   125  0016                     	;# 
   126  0017                     	;# 
   127  0018                     	;# 
   128  0019                     	;# 
   129  001A                     	;# 
   130  001A                     	;# 
   131  001B                     	;# 
   132  001B                     	;# 
   133  001C                     	;# 
   134  001D                     	;# 
   135  001E                     	;# 
   136  001F                     	;# 
   137  008C                     	;# 
   138  008D                     	;# 
   139  008E                     	;# 
   140  0090                     	;# 
   141  0091                     	;# 
   142  0092                     	;# 
   143  0093                     	;# 
   144  0094                     	;# 
   145  0095                     	;# 
   146  0096                     	;# 
   147  0098                     	;# 
   148  0099                     	;# 
   149  009A                     	;# 
   150  009B                     	;# 
   151  009B                     	;# 
   152  009C                     	;# 
   153  009D                     	;# 
   154  009E                     	;# 
   155  009F                     	;# 
   156  010C                     	;# 
   157  010D                     	;# 
   158  010E                     	;# 
   159  0111                     	;# 
   160  0112                     	;# 
   161  0113                     	;# 
   162  0114                     	;# 
   163  0115                     	;# 
   164  0116                     	;# 
   165  0117                     	;# 
   166  0118                     	;# 
   167  0119                     	;# 
   168  011C                     	;# 
   169  018C                     	;# 
   170  018D                     	;# 
   171  018E                     	;# 
   172  0191                     	;# 
   173  0191                     	;# 
   174  0192                     	;# 
   175  0193                     	;# 
   176  0193                     	;# 
   177  0194                     	;# 
   178  0195                     	;# 
   179  0196                     	;# 
   180  0197                     	;# 
   181  0199                     	;# 
   182  0199                     	;# 
   183  0199                     	;# 
   184  019A                     	;# 
   185  019A                     	;# 
   186  019A                     	;# 
   187  019B                     	;# 
   188  019B                     	;# 
   189  019B                     	;# 
   190  019B                     	;# 
   191  019B                     	;# 
   192  019C                     	;# 
   193  019C                     	;# 
   194  019C                     	;# 
   195  019D                     	;# 
   196  019D                     	;# 
   197  019D                     	;# 
   198  019E                     	;# 
   199  019E                     	;# 
   200  019E                     	;# 
   201  019F                     	;# 
   202  019F                     	;# 
   203  019F                     	;# 
   204  019F                     	;# 
   205  019F                     	;# 
   206  020C                     	;# 
   207  020D                     	;# 
   208  020E                     	;# 
   209  0211                     	;# 
   210  0211                     	;# 
   211  0212                     	;# 
   212  0212                     	;# 
   213  0213                     	;# 
   214  0213                     	;# 
   215  0214                     	;# 
   216  0214                     	;# 
   217  0215                     	;# 
   218  0215                     	;# 
   219  0215                     	;# 
   220  0215                     	;# 
   221  0216                     	;# 
   222  0216                     	;# 
   223  0217                     	;# 
   224  0217                     	;# 
   225  028C                     	;# 
   226  028D                     	;# 
   227  028E                     	;# 
   228  0291                     	;# 
   229  0291                     	;# 
   230  0292                     	;# 
   231  0293                     	;# 
   232  0294                     	;# 
   233  0298                     	;# 
   234  0298                     	;# 
   235  0299                     	;# 
   236  029A                     	;# 
   237  029B                     	;# 
   238  029E                     	;# 
   239  030C                     	;# 
   240  030D                     	;# 
   241  030E                     	;# 
   242  038C                     	;# 
   243  038D                     	;# 
   244  038E                     	;# 
   245  0391                     	;# 
   246  0392                     	;# 
   247  0393                     	;# 
   248  0394                     	;# 
   249  0395                     	;# 
   250  0396                     	;# 
   251  0397                     	;# 
   252  0398                     	;# 
   253  0399                     	;# 
   254  040E                     	;# 
   255  0413                     	;# 
   256  0413                     	;# 
   257  0414                     	;# 
   258  0414                     	;# 
   259  0415                     	;# 
   260  0416                     	;# 
   261  0417                     	;# 
   262  0418                     	;# 
   263  041A                     	;# 
   264  041A                     	;# 
   265  041B                     	;# 
   266  041B                     	;# 
   267  041C                     	;# 
   268  041D                     	;# 
   269  041E                     	;# 
   270  041F                     	;# 
   271  0493                     	;# 
   272  0494                     	;# 
   273  0495                     	;# 
   274  0496                     	;# 
   275  049A                     	;# 
   276  049B                     	;# 
   277  049C                     	;# 
   278  049D                     	;# 
   279  058C                     	;# 
   280  058C                     	;# 
   281  058D                     	;# 
   282  058E                     	;# 
   283  058E                     	;# 
   284  058F                     	;# 
   285  0590                     	;# 
   286  0590                     	;# 
   287  0591                     	;# 
   288  0592                     	;# 
   289  0592                     	;# 
   290  0593                     	;# 
   291  0594                     	;# 
   292  0594                     	;# 
   293  0595                     	;# 
   294  0596                     	;# 
   295  0596                     	;# 
   296  0597                     	;# 
   297  0598                     	;# 
   298  0599                     	;# 
   299  059A                     	;# 
   300  059B                     	;# 
   301  059B                     	;# 
   302  059C                     	;# 
   303  059D                     	;# 
   304  060C                     	;# 
   305  060C                     	;# 
   306  060D                     	;# 
   307  060E                     	;# 
   308  060F                     	;# 
   309  060F                     	;# 
   310  0610                     	;# 
   311  0611                     	;# 
   312  0612                     	;# 
   313  0613                     	;# 
   314  0614                     	;# 
   315  0617                     	;# 
   316  0617                     	;# 
   317  0618                     	;# 
   318  0619                     	;# 
   319  061A                     	;# 
   320  061A                     	;# 
   321  061B                     	;# 
   322  061C                     	;# 
   323  0691                     	;# 
   324  0692                     	;# 
   325  0693                     	;# 
   326  0694                     	;# 
   327  0695                     	;# 
   328  0696                     	;# 
   329  0697                     	;# 
   330  0699                     	;# 
   331  069A                     	;# 
   332  0711                     	;# 
   333  0712                     	;# 
   334  0713                     	;# 
   335  0714                     	;# 
   336  0715                     	;# 
   337  0718                     	;# 
   338  0718                     	;# 
   339  0719                     	;# 
   340  071A                     	;# 
   341  071A                     	;# 
   342  071B                     	;# 
   343  071C                     	;# 
   344  071D                     	;# 
   345  0791                     	;# 
   346  0791                     	;# 
   347  0792                     	;# 
   348  0793                     	;# 
   349  0793                     	;# 
   350  0794                     	;# 
   351  0795                     	;# 
   352  0795                     	;# 
   353  0796                     	;# 
   354  0797                     	;# 
   355  0797                     	;# 
   356  0798                     	;# 
   357  0799                     	;# 
   358  079A                     	;# 
   359  080C                     	;# 
   360  080C                     	;# 
   361  080D                     	;# 
   362  080E                     	;# 
   363  080E                     	;# 
   364  080F                     	;# 
   365  0810                     	;# 
   366  0810                     	;# 
   367  0811                     	;# 
   368  0812                     	;# 
   369  0812                     	;# 
   370  0813                     	;# 
   371  0814                     	;# 
   372  0815                     	;# 
   373  0816                     	;# 
   374  0817                     	;# 
   375  0818                     	;# 
   376  0819                     	;# 
   377  081A                     	;# 
   378  081A                     	;# 
   379  081B                     	;# 
   380  081C                     	;# 
   381  081C                     	;# 
   382  081D                     	;# 
   383  088C                     	;# 
   384  088D                     	;# 
   385  088E                     	;# 
   386  088F                     	;# 
   387  088F                     	;# 
   388  0890                     	;# 
   389  0891                     	;# 
   390  0892                     	;# 
   391  0893                     	;# 
   392  0893                     	;# 
   393  0894                     	;# 
   394  0895                     	;# 
   395  0896                     	;# 
   396  0897                     	;# 
   397  0897                     	;# 
   398  0898                     	;# 
   399  0899                     	;# 
   400  0D8C                     	;# 
   401  0D8C                     	;# 
   402  0D8D                     	;# 
   403  0D8E                     	;# 
   404  0D8F                     	;# 
   405  0D8F                     	;# 
   406  0D90                     	;# 
   407  0D91                     	;# 
   408  0D92                     	;# 
   409  0D92                     	;# 
   410  0D93                     	;# 
   411  0D94                     	;# 
   412  0D95                     	;# 
   413  0D95                     	;# 
   414  0D96                     	;# 
   415  0D97                     	;# 
   416  0D98                     	;# 
   417  0D99                     	;# 
   418  0D9A                     	;# 
   419  0D9B                     	;# 
   420  0D9C                     	;# 
   421  0D9D                     	;# 
   422  0D9E                     	;# 
   423  0D9E                     	;# 
   424  0D9F                     	;# 
   425  0DA0                     	;# 
   426  0DA1                     	;# 
   427  0DA1                     	;# 
   428  0DA2                     	;# 
   429  0DA3                     	;# 
   430  0DA4                     	;# 
   431  0DA4                     	;# 
   432  0DA5                     	;# 
   433  0DA6                     	;# 
   434  0DA7                     	;# 
   435  0DA7                     	;# 
   436  0DA8                     	;# 
   437  0DA9                     	;# 
   438  0DAA                     	;# 
   439  0DAB                     	;# 
   440  0DAC                     	;# 
   441  0DAD                     	;# 
   442  0DAE                     	;# 
   443  0DAF                     	;# 
   444  0E0F                     	;# 
   445  0E10                     	;# 
   446  0E11                     	;# 
   447  0E12                     	;# 
   448  0E13                     	;# 
   449  0E14                     	;# 
   450  0E15                     	;# 
   451  0E16                     	;# 
   452  0E17                     	;# 
   453  0E18                     	;# 
   454  0E19                     	;# 
   455  0E1A                     	;# 
   456  0E1B                     	;# 
   457  0E1C                     	;# 
   458  0E1D                     	;# 
   459  0E1E                     	;# 
   460  0E1F                     	;# 
   461  0E20                     	;# 
   462  0E21                     	;# 
   463  0E22                     	;# 
   464  0E23                     	;# 
   465  0E24                     	;# 
   466  0E25                     	;# 
   467  0E26                     	;# 
   468  0E27                     	;# 
   469  0E28                     	;# 
   470  0E29                     	;# 
   471  0E2A                     	;# 
   472  0E2B                     	;# 
   473  0E2C                     	;# 
   474  0E2D                     	;# 
   475  0E2E                     	;# 
   476  0E90                     	;# 
   477  0E91                     	;# 
   478  0E92                     	;# 
   479  0E94                     	;# 
   480  0E95                     	;# 
   481  0E9C                     	;# 
   482  0E9D                     	;# 
   483  0E9E                     	;# 
   484  0E9F                     	;# 
   485  0EA0                     	;# 
   486  0EA1                     	;# 
   487  0EA2                     	;# 
   488  0EA3                     	;# 
   489  0EA4                     	;# 
   490  0EA5                     	;# 
   491  0EA6                     	;# 
   492  0EA7                     	;# 
   493  0F0F                     	;# 
   494  0F10                     	;# 
   495  0F11                     	;# 
   496  0F12                     	;# 
   497  0F13                     	;# 
   498  0F14                     	;# 
   499  0F15                     	;# 
   500  0F16                     	;# 
   501  0F17                     	;# 
   502  0F18                     	;# 
   503  0F19                     	;# 
   504  0F1A                     	;# 
   505  0F1B                     	;# 
   506  0F1C                     	;# 
   507  0F1D                     	;# 
   508  0F1E                     	;# 
   509  0F1F                     	;# 
   510  0F20                     	;# 
   511  0F21                     	;# 
   512  0F22                     	;# 
   513  0F23                     	;# 
   514  0F24                     	;# 
   515  0F25                     	;# 
   516  0F26                     	;# 
   517  0F27                     	;# 
   518  0F28                     	;# 
   519  0F29                     	;# 
   520  0F2A                     	;# 
   521  0F2B                     	;# 
   522  0F2C                     	;# 
   523  0F2D                     	;# 
   524  0F2E                     	;# 
   525  0F2F                     	;# 
   526  0F30                     	;# 
   527  0F31                     	;# 
   528  0F32                     	;# 
   529  0F33                     	;# 
   530  0F34                     	;# 
   531  0F35                     	;# 
   532  0F36                     	;# 
   533  0F37                     	;# 
   534  0FE4                     	;# 
   535  0FE5                     	;# 
   536  0FE6                     	;# 
   537  0FE7                     	;# 
   538  0FE8                     	;# 
   539  0FE9                     	;# 
   540  0FEA                     	;# 
   541  0FEB                     	;# 
   542  0FED                     	;# 
   543  0FEE                     	;# 
   544  0FEF                     	;# 
   545  0000                     	;# 
   546  0001                     	;# 
   547  0002                     	;# 
   548  0003                     	;# 
   549  0004                     	;# 
   550  0005                     	;# 
   551  0006                     	;# 
   552  0007                     	;# 
   553  0008                     	;# 
   554  0009                     	;# 
   555  000A                     	;# 
   556  000B                     	;# 
   557  000C                     	;# 
   558  000D                     	;# 
   559  000E                     	;# 
   560  0010                     	;# 
   561  0011                     	;# 
   562  0012                     	;# 
   563  0013                     	;# 
   564  0014                     	;# 
   565  0015                     	;# 
   566  0016                     	;# 
   567  0016                     	;# 
   568  0017                     	;# 
   569  0018                     	;# 
   570  0019                     	;# 
   571  001A                     	;# 
   572  001A                     	;# 
   573  001B                     	;# 
   574  001B                     	;# 
   575  001C                     	;# 
   576  001D                     	;# 
   577  001E                     	;# 
   578  001F                     	;# 
   579  008C                     	;# 
   580  008D                     	;# 
   581  008E                     	;# 
   582  0090                     	;# 
   583  0091                     	;# 
   584  0092                     	;# 
   585  0093                     	;# 
   586  0094                     	;# 
   587  0095                     	;# 
   588  0096                     	;# 
   589  0098                     	;# 
   590  0099                     	;# 
   591  009A                     	;# 
   592  009B                     	;# 
   593  009B                     	;# 
   594  009C                     	;# 
   595  009D                     	;# 
   596  009E                     	;# 
   597  009F                     	;# 
   598  010C                     	;# 
   599  010D                     	;# 
   600  010E                     	;# 
   601  0111                     	;# 
   602  0112                     	;# 
   603  0113                     	;# 
   604  0114                     	;# 
   605  0115                     	;# 
   606  0116                     	;# 
   607  0117                     	;# 
   608  0118                     	;# 
   609  0119                     	;# 
   610  011C                     	;# 
   611  018C                     	;# 
   612  018D                     	;# 
   613  018E                     	;# 
   614  0191                     	;# 
   615  0191                     	;# 
   616  0192                     	;# 
   617  0193                     	;# 
   618  0193                     	;# 
   619  0194                     	;# 
   620  0195                     	;# 
   621  0196                     	;# 
   622  0197                     	;# 
   623  0199                     	;# 
   624  0199                     	;# 
   625  0199                     	;# 
   626  019A                     	;# 
   627  019A                     	;# 
   628  019A                     	;# 
   629  019B                     	;# 
   630  019B                     	;# 
   631  019B                     	;# 
   632  019B                     	;# 
   633  019B                     	;# 
   634  019C                     	;# 
   635  019C                     	;# 
   636  019C                     	;# 
   637  019D                     	;# 
   638  019D                     	;# 
   639  019D                     	;# 
   640  019E                     	;# 
   641  019E                     	;# 
   642  019E                     	;# 
   643  019F                     	;# 
   644  019F                     	;# 
   645  019F                     	;# 
   646  019F                     	;# 
   647  019F                     	;# 
   648  020C                     	;# 
   649  020D                     	;# 
   650  020E                     	;# 
   651  0211                     	;# 
   652  0211                     	;# 
   653  0212                     	;# 
   654  0212                     	;# 
   655  0213                     	;# 
   656  0213                     	;# 
   657  0214                     	;# 
   658  0214                     	;# 
   659  0215                     	;# 
   660  0215                     	;# 
   661  0215                     	;# 
   662  0215                     	;# 
   663  0216                     	;# 
   664  0216                     	;# 
   665  0217                     	;# 
   666  0217                     	;# 
   667  028C                     	;# 
   668  028D                     	;# 
   669  028E                     	;# 
   670  0291                     	;# 
   671  0291                     	;# 
   672  0292                     	;# 
   673  0293                     	;# 
   674  0294                     	;# 
   675  0298                     	;# 
   676  0298                     	;# 
   677  0299                     	;# 
   678  029A                     	;# 
   679  029B                     	;# 
   680  029E                     	;# 
   681  030C                     	;# 
   682  030D                     	;# 
   683  030E                     	;# 
   684  038C                     	;# 
   685  038D                     	;# 
   686  038E                     	;# 
   687  0391                     	;# 
   688  0392                     	;# 
   689  0393                     	;# 
   690  0394                     	;# 
   691  0395                     	;# 
   692  0396                     	;# 
   693  0397                     	;# 
   694  0398                     	;# 
   695  0399                     	;# 
   696  040E                     	;# 
   697  0413                     	;# 
   698  0413                     	;# 
   699  0414                     	;# 
   700  0414                     	;# 
   701  0415                     	;# 
   702  0416                     	;# 
   703  0417                     	;# 
   704  0418                     	;# 
   705  041A                     	;# 
   706  041A                     	;# 
   707  041B                     	;# 
   708  041B                     	;# 
   709  041C                     	;# 
   710  041D                     	;# 
   711  041E                     	;# 
   712  041F                     	;# 
   713  0493                     	;# 
   714  0494                     	;# 
   715  0495                     	;# 
   716  0496                     	;# 
   717  049A                     	;# 
   718  049B                     	;# 
   719  049C                     	;# 
   720  049D                     	;# 
   721  058C                     	;# 
   722  058C                     	;# 
   723  058D                     	;# 
   724  058E                     	;# 
   725  058E                     	;# 
   726  058F                     	;# 
   727  0590                     	;# 
   728  0590                     	;# 
   729  0591                     	;# 
   730  0592                     	;# 
   731  0592                     	;# 
   732  0593                     	;# 
   733  0594                     	;# 
   734  0594                     	;# 
   735  0595                     	;# 
   736  0596                     	;# 
   737  0596                     	;# 
   738  0597                     	;# 
   739  0598                     	;# 
   740  0599                     	;# 
   741  059A                     	;# 
   742  059B                     	;# 
   743  059B                     	;# 
   744  059C                     	;# 
   745  059D                     	;# 
   746  060C                     	;# 
   747  060C                     	;# 
   748  060D                     	;# 
   749  060E                     	;# 
   750  060F                     	;# 
   751  060F                     	;# 
   752  0610                     	;# 
   753  0611                     	;# 
   754  0612                     	;# 
   755  0613                     	;# 
   756  0614                     	;# 
   757  0617                     	;# 
   758  0617                     	;# 
   759  0618                     	;# 
   760  0619                     	;# 
   761  061A                     	;# 
   762  061A                     	;# 
   763  061B                     	;# 
   764  061C                     	;# 
   765  0691                     	;# 
   766  0692                     	;# 
   767  0693                     	;# 
   768  0694                     	;# 
   769  0695                     	;# 
   770  0696                     	;# 
   771  0697                     	;# 
   772  0699                     	;# 
   773  069A                     	;# 
   774  0711                     	;# 
   775  0712                     	;# 
   776  0713                     	;# 
   777  0714                     	;# 
   778  0715                     	;# 
   779  0718                     	;# 
   780  0718                     	;# 
   781  0719                     	;# 
   782  071A                     	;# 
   783  071A                     	;# 
   784  071B                     	;# 
   785  071C                     	;# 
   786  071D                     	;# 
   787  0791                     	;# 
   788  0791                     	;# 
   789  0792                     	;# 
   790  0793                     	;# 
   791  0793                     	;# 
   792  0794                     	;# 
   793  0795                     	;# 
   794  0795                     	;# 
   795  0796                     	;# 
   796  0797                     	;# 
   797  0797                     	;# 
   798  0798                     	;# 
   799  0799                     	;# 
   800  079A                     	;# 
   801  080C                     	;# 
   802  080C                     	;# 
   803  080D                     	;# 
   804  080E                     	;# 
   805  080E                     	;# 
   806  080F                     	;# 
   807  0810                     	;# 
   808  0810                     	;# 
   809  0811                     	;# 
   810  0812                     	;# 
   811  0812                     	;# 
   812  0813                     	;# 
   813  0814                     	;# 
   814  0815                     	;# 
   815  0816                     	;# 
   816  0817                     	;# 
   817  0818                     	;# 
   818  0819                     	;# 
   819  081A                     	;# 
   820  081A                     	;# 
   821  081B                     	;# 
   822  081C                     	;# 
   823  081C                     	;# 
   824  081D                     	;# 
   825  088C                     	;# 
   826  088D                     	;# 
   827  088E                     	;# 
   828  088F                     	;# 
   829  088F                     	;# 
   830  0890                     	;# 
   831  0891                     	;# 
   832  0892                     	;# 
   833  0893                     	;# 
   834  0893                     	;# 
   835  0894                     	;# 
   836  0895                     	;# 
   837  0896                     	;# 
   838  0897                     	;# 
   839  0897                     	;# 
   840  0898                     	;# 
   841  0899                     	;# 
   842  0D8C                     	;# 
   843  0D8C                     	;# 
   844  0D8D                     	;# 
   845  0D8E                     	;# 
   846  0D8F                     	;# 
   847  0D8F                     	;# 
   848  0D90                     	;# 
   849  0D91                     	;# 
   850  0D92                     	;# 
   851  0D92                     	;# 
   852  0D93                     	;# 
   853  0D94                     	;# 
   854  0D95                     	;# 
   855  0D95                     	;# 
   856  0D96                     	;# 
   857  0D97                     	;# 
   858  0D98                     	;# 
   859  0D99                     	;# 
   860  0D9A                     	;# 
   861  0D9B                     	;# 
   862  0D9C                     	;# 
   863  0D9D                     	;# 
   864  0D9E                     	;# 
   865  0D9E                     	;# 
   866  0D9F                     	;# 
   867  0DA0                     	;# 
   868  0DA1                     	;# 
   869  0DA1                     	;# 
   870  0DA2                     	;# 
   871  0DA3                     	;# 
   872  0DA4                     	;# 
   873  0DA4                     	;# 
   874  0DA5                     	;# 
   875  0DA6                     	;# 
   876  0DA7                     	;# 
   877  0DA7                     	;# 
   878  0DA8                     	;# 
   879  0DA9                     	;# 
   880  0DAA                     	;# 
   881  0DAB                     	;# 
   882  0DAC                     	;# 
   883  0DAD                     	;# 
   884  0DAE                     	;# 
   885  0DAF                     	;# 
   886  0E0F                     	;# 
   887  0E10                     	;# 
   888  0E11                     	;# 
   889  0E12                     	;# 
   890  0E13                     	;# 
   891  0E14                     	;# 
   892  0E15                     	;# 
   893  0E16                     	;# 
   894  0E17                     	;# 
   895  0E18                     	;# 
   896  0E19                     	;# 
   897  0E1A                     	;# 
   898  0E1B                     	;# 
   899  0E1C                     	;# 
   900  0E1D                     	;# 
   901  0E1E                     	;# 
   902  0E1F                     	;# 
   903  0E20                     	;# 
   904  0E21                     	;# 
   905  0E22                     	;# 
   906  0E23                     	;# 
   907  0E24                     	;# 
   908  0E25                     	;# 
   909  0E26                     	;# 
   910  0E27                     	;# 
   911  0E28                     	;# 
   912  0E29                     	;# 
   913  0E2A                     	;# 
   914  0E2B                     	;# 
   915  0E2C                     	;# 
   916  0E2D                     	;# 
   917  0E2E                     	;# 
   918  0E90                     	;# 
   919  0E91                     	;# 
   920  0E92                     	;# 
   921  0E94                     	;# 
   922  0E95                     	;# 
   923  0E9C                     	;# 
   924  0E9D                     	;# 
   925  0E9E                     	;# 
   926  0E9F                     	;# 
   927  0EA0                     	;# 
   928  0EA1                     	;# 
   929  0EA2                     	;# 
   930  0EA3                     	;# 
   931  0EA4                     	;# 
   932  0EA5                     	;# 
   933  0EA6                     	;# 
   934  0EA7                     	;# 
   935  0F0F                     	;# 
   936  0F10                     	;# 
   937  0F11                     	;# 
   938  0F12                     	;# 
   939  0F13                     	;# 
   940  0F14                     	;# 
   941  0F15                     	;# 
   942  0F16                     	;# 
   943  0F17                     	;# 
   944  0F18                     	;# 
   945  0F19                     	;# 
   946  0F1A                     	;# 
   947  0F1B                     	;# 
   948  0F1C                     	;# 
   949  0F1D                     	;# 
   950  0F1E                     	;# 
   951  0F1F                     	;# 
   952  0F20                     	;# 
   953  0F21                     	;# 
   954  0F22                     	;# 
   955  0F23                     	;# 
   956  0F24                     	;# 
   957  0F25                     	;# 
   958  0F26                     	;# 
   959  0F27                     	;# 
   960  0F28                     	;# 
   961  0F29                     	;# 
   962  0F2A                     	;# 
   963  0F2B                     	;# 
   964  0F2C                     	;# 
   965  0F2D                     	;# 
   966  0F2E                     	;# 
   967  0F2F                     	;# 
   968  0F30                     	;# 
   969  0F31                     	;# 
   970  0F32                     	;# 
   971  0F33                     	;# 
   972  0F34                     	;# 
   973  0F35                     	;# 
   974  0F36                     	;# 
   975  0F37                     	;# 
   976  0FE4                     	;# 
   977  0FE5                     	;# 
   978  0FE6                     	;# 
   979  0FE7                     	;# 
   980  0FE8                     	;# 
   981  0FE9                     	;# 
   982  0FEA                     	;# 
   983  0FEB                     	;# 
   984  0FED                     	;# 
   985  0FEE                     	;# 
   986  0FEF                     	;# 
   987  0000                     	;# 
   988  0001                     	;# 
   989  0002                     	;# 
   990  0003                     	;# 
   991  0004                     	;# 
   992  0005                     	;# 
   993  0006                     	;# 
   994  0007                     	;# 
   995  0008                     	;# 
   996  0009                     	;# 
   997  000A                     	;# 
   998  000B                     	;# 
   999  000C                     	;# 
  1000  000D                     	;# 
  1001  000E                     	;# 
  1002  0010                     	;# 
  1003  0011                     	;# 
  1004  0012                     	;# 
  1005  0013                     	;# 
  1006  0014                     	;# 
  1007  0015                     	;# 
  1008  0016                     	;# 
  1009  0016                     	;# 
  1010  0017                     	;# 
  1011  0018                     	;# 
  1012  0019                     	;# 
  1013  001A                     	;# 
  1014  001A                     	;# 
  1015  001B                     	;# 
  1016  001B                     	;# 
  1017  001C                     	;# 
  1018  001D                     	;# 
  1019  001E                     	;# 
  1020  001F                     	;# 
  1021  008C                     	;# 
  1022  008D                     	;# 
  1023  008E                     	;# 
  1024  0090                     	;# 
  1025  0091                     	;# 
  1026  0092                     	;# 
  1027  0093                     	;# 
  1028  0094                     	;# 
  1029  0095                     	;# 
  1030  0096                     	;# 
  1031  0098                     	;# 
  1032  0099                     	;# 
  1033  009A                     	;# 
  1034  009B                     	;# 
  1035  009B                     	;# 
  1036  009C                     	;# 
  1037  009D                     	;# 
  1038  009E                     	;# 
  1039  009F                     	;# 
  1040  010C                     	;# 
  1041  010D                     	;# 
  1042  010E                     	;# 
  1043  0111                     	;# 
  1044  0112                     	;# 
  1045  0113                     	;# 
  1046  0114                     	;# 
  1047  0115                     	;# 
  1048  0116                     	;# 
  1049  0117                     	;# 
  1050  0118                     	;# 
  1051  0119                     	;# 
  1052  011C                     	;# 
  1053  018C                     	;# 
  1054  018D                     	;# 
  1055  018E                     	;# 
  1056  0191                     	;# 
  1057  0191                     	;# 
  1058  0192                     	;# 
  1059  0193                     	;# 
  1060  0193                     	;# 
  1061  0194                     	;# 
  1062  0195                     	;# 
  1063  0196                     	;# 
  1064  0197                     	;# 
  1065  0199                     	;# 
  1066  0199                     	;# 
  1067  0199                     	;# 
  1068  019A                     	;# 
  1069  019A                     	;# 
  1070  019A                     	;# 
  1071  019B                     	;# 
  1072  019B                     	;# 
  1073  019B                     	;# 
  1074  019B                     	;# 
  1075  019B                     	;# 
  1076  019C                     	;# 
  1077  019C                     	;# 
  1078  019C                     	;# 
  1079  019D                     	;# 
  1080  019D                     	;# 
  1081  019D                     	;# 
  1082  019E                     	;# 
  1083  019E                     	;# 
  1084  019E                     	;# 
  1085  019F                     	;# 
  1086  019F                     	;# 
  1087  019F                     	;# 
  1088  019F                     	;# 
  1089  019F                     	;# 
  1090  020C                     	;# 
  1091  020D                     	;# 
  1092  020E                     	;# 
  1093  0211                     	;# 
  1094  0211                     	;# 
  1095  0212                     	;# 
  1096  0212                     	;# 
  1097  0213                     	;# 
  1098  0213                     	;# 
  1099  0214                     	;# 
  1100  0214                     	;# 
  1101  0215                     	;# 
  1102  0215                     	;# 
  1103  0215                     	;# 
  1104  0215                     	;# 
  1105  0216                     	;# 
  1106  0216                     	;# 
  1107  0217                     	;# 
  1108  0217                     	;# 
  1109  028C                     	;# 
  1110  028D                     	;# 
  1111  028E                     	;# 
  1112  0291                     	;# 
  1113  0291                     	;# 
  1114  0292                     	;# 
  1115  0293                     	;# 
  1116  0294                     	;# 
  1117  0298                     	;# 
  1118  0298                     	;# 
  1119  0299                     	;# 
  1120  029A                     	;# 
  1121  029B                     	;# 
  1122  029E                     	;# 
  1123  030C                     	;# 
  1124  030D                     	;# 
  1125  030E                     	;# 
  1126  038C                     	;# 
  1127  038D                     	;# 
  1128  038E                     	;# 
  1129  0391                     	;# 
  1130  0392                     	;# 
  1131  0393                     	;# 
  1132  0394                     	;# 
  1133  0395                     	;# 
  1134  0396                     	;# 
  1135  0397                     	;# 
  1136  0398                     	;# 
  1137  0399                     	;# 
  1138  040E                     	;# 
  1139  0413                     	;# 
  1140  0413                     	;# 
  1141  0414                     	;# 
  1142  0414                     	;# 
  1143  0415                     	;# 
  1144  0416                     	;# 
  1145  0417                     	;# 
  1146  0418                     	;# 
  1147  041A                     	;# 
  1148  041A                     	;# 
  1149  041B                     	;# 
  1150  041B                     	;# 
  1151  041C                     	;# 
  1152  041D                     	;# 
  1153  041E                     	;# 
  1154  041F                     	;# 
  1155  0493                     	;# 
  1156  0494                     	;# 
  1157  0495                     	;# 
  1158  0496                     	;# 
  1159  049A                     	;# 
  1160  049B                     	;# 
  1161  049C                     	;# 
  1162  049D                     	;# 
  1163  058C                     	;# 
  1164  058C                     	;# 
  1165  058D                     	;# 
  1166  058E                     	;# 
  1167  058E                     	;# 
  1168  058F                     	;# 
  1169  0590                     	;# 
  1170  0590                     	;# 
  1171  0591                     	;# 
  1172  0592                     	;# 
  1173  0592                     	;# 
  1174  0593                     	;# 
  1175  0594                     	;# 
  1176  0594                     	;# 
  1177  0595                     	;# 
  1178  0596                     	;# 
  1179  0596                     	;# 
  1180  0597                     	;# 
  1181  0598                     	;# 
  1182  0599                     	;# 
  1183  059A                     	;# 
  1184  059B                     	;# 
  1185  059B                     	;# 
  1186  059C                     	;# 
  1187  059D                     	;# 
  1188  060C                     	;# 
  1189  060C                     	;# 
  1190  060D                     	;# 
  1191  060E                     	;# 
  1192  060F                     	;# 
  1193  060F                     	;# 
  1194  0610                     	;# 
  1195  0611                     	;# 
  1196  0612                     	;# 
  1197  0613                     	;# 
  1198  0614                     	;# 
  1199  0617                     	;# 
  1200  0617                     	;# 
  1201  0618                     	;# 
  1202  0619                     	;# 
  1203  061A                     	;# 
  1204  061A                     	;# 
  1205  061B                     	;# 
  1206  061C                     	;# 
  1207  0691                     	;# 
  1208  0692                     	;# 
  1209  0693                     	;# 
  1210  0694                     	;# 
  1211  0695                     	;# 
  1212  0696                     	;# 
  1213  0697                     	;# 
  1214  0699                     	;# 
  1215  069A                     	;# 
  1216  0711                     	;# 
  1217  0712                     	;# 
  1218  0713                     	;# 
  1219  0714                     	;# 
  1220  0715                     	;# 
  1221  0718                     	;# 
  1222  0718                     	;# 
  1223  0719                     	;# 
  1224  071A                     	;# 
  1225  071A                     	;# 
  1226  071B                     	;# 
  1227  071C                     	;# 
  1228  071D                     	;# 
  1229  0791                     	;# 
  1230  0791                     	;# 
  1231  0792                     	;# 
  1232  0793                     	;# 
  1233  0793                     	;# 
  1234  0794                     	;# 
  1235  0795                     	;# 
  1236  0795                     	;# 
  1237  0796                     	;# 
  1238  0797                     	;# 
  1239  0797                     	;# 
  1240  0798                     	;# 
  1241  0799                     	;# 
  1242  079A                     	;# 
  1243  080C                     	;# 
  1244  080C                     	;# 
  1245  080D                     	;# 
  1246  080E                     	;# 
  1247  080E                     	;# 
  1248  080F                     	;# 
  1249  0810                     	;# 
  1250  0810                     	;# 
  1251  0811                     	;# 
  1252  0812                     	;# 
  1253  0812                     	;# 
  1254  0813                     	;# 
  1255  0814                     	;# 
  1256  0815                     	;# 
  1257  0816                     	;# 
  1258  0817                     	;# 
  1259  0818                     	;# 
  1260  0819                     	;# 
  1261  081A                     	;# 
  1262  081A                     	;# 
  1263  081B                     	;# 
  1264  081C                     	;# 
  1265  081C                     	;# 
  1266  081D                     	;# 
  1267  088C                     	;# 
  1268  088D                     	;# 
  1269  088E                     	;# 
  1270  088F                     	;# 
  1271  088F                     	;# 
  1272  0890                     	;# 
  1273  0891                     	;# 
  1274  0892                     	;# 
  1275  0893                     	;# 
  1276  0893                     	;# 
  1277  0894                     	;# 
  1278  0895                     	;# 
  1279  0896                     	;# 
  1280  0897                     	;# 
  1281  0897                     	;# 
  1282  0898                     	;# 
  1283  0899                     	;# 
  1284  0D8C                     	;# 
  1285  0D8C                     	;# 
  1286  0D8D                     	;# 
  1287  0D8E                     	;# 
  1288  0D8F                     	;# 
  1289  0D8F                     	;# 
  1290  0D90                     	;# 
  1291  0D91                     	;# 
  1292  0D92                     	;# 
  1293  0D92                     	;# 
  1294  0D93                     	;# 
  1295  0D94                     	;# 
  1296  0D95                     	;# 
  1297  0D95                     	;# 
  1298  0D96                     	;# 
  1299  0D97                     	;# 
  1300  0D98                     	;# 
  1301  0D99                     	;# 
  1302  0D9A                     	;# 
  1303  0D9B                     	;# 
  1304  0D9C                     	;# 
  1305  0D9D                     	;# 
  1306  0D9E                     	;# 
  1307  0D9E                     	;# 
  1308  0D9F                     	;# 
  1309  0DA0                     	;# 
  1310  0DA1                     	;# 
  1311  0DA1                     	;# 
  1312  0DA2                     	;# 
  1313  0DA3                     	;# 
  1314  0DA4                     	;# 
  1315  0DA4                     	;# 
  1316  0DA5                     	;# 
  1317  0DA6                     	;# 
  1318  0DA7                     	;# 
  1319  0DA7                     	;# 
  1320  0DA8                     	;# 
  1321  0DA9                     	;# 
  1322  0DAA                     	;# 
  1323  0DAB                     	;# 
  1324  0DAC                     	;# 
  1325  0DAD                     	;# 
  1326  0DAE                     	;# 
  1327  0DAF                     	;# 
  1328  0E0F                     	;# 
  1329  0E10                     	;# 
  1330  0E11                     	;# 
  1331  0E12                     	;# 
  1332  0E13                     	;# 
  1333  0E14                     	;# 
  1334  0E15                     	;# 
  1335  0E16                     	;# 
  1336  0E17                     	;# 
  1337  0E18                     	;# 
  1338  0E19                     	;# 
  1339  0E1A                     	;# 
  1340  0E1B                     	;# 
  1341  0E1C                     	;# 
  1342  0E1D                     	;# 
  1343  0E1E                     	;# 
  1344  0E1F                     	;# 
  1345  0E20                     	;# 
  1346  0E21                     	;# 
  1347  0E22                     	;# 
  1348  0E23                     	;# 
  1349  0E24                     	;# 
  1350  0E25                     	;# 
  1351  0E26                     	;# 
  1352  0E27                     	;# 
  1353  0E28                     	;# 
  1354  0E29                     	;# 
  1355  0E2A                     	;# 
  1356  0E2B                     	;# 
  1357  0E2C                     	;# 
  1358  0E2D                     	;# 
  1359  0E2E                     	;# 
  1360  0E90                     	;# 
  1361  0E91                     	;# 
  1362  0E92                     	;# 
  1363  0E94                     	;# 
  1364  0E95                     	;# 
  1365  0E9C                     	;# 
  1366  0E9D                     	;# 
  1367  0E9E                     	;# 
  1368  0E9F                     	;# 
  1369  0EA0                     	;# 
  1370  0EA1                     	;# 
  1371  0EA2                     	;# 
  1372  0EA3                     	;# 
  1373  0EA4                     	;# 
  1374  0EA5                     	;# 
  1375  0EA6                     	;# 
  1376  0EA7                     	;# 
  1377  0F0F                     	;# 
  1378  0F10                     	;# 
  1379  0F11                     	;# 
  1380  0F12                     	;# 
  1381  0F13                     	;# 
  1382  0F14                     	;# 
  1383  0F15                     	;# 
  1384  0F16                     	;# 
  1385  0F17                     	;# 
  1386  0F18                     	;# 
  1387  0F19                     	;# 
  1388  0F1A                     	;# 
  1389  0F1B                     	;# 
  1390  0F1C                     	;# 
  1391  0F1D                     	;# 
  1392  0F1E                     	;# 
  1393  0F1F                     	;# 
  1394  0F20                     	;# 
  1395  0F21                     	;# 
  1396  0F22                     	;# 
  1397  0F23                     	;# 
  1398  0F24                     	;# 
  1399  0F25                     	;# 
  1400  0F26                     	;# 
  1401  0F27                     	;# 
  1402  0F28                     	;# 
  1403  0F29                     	;# 
  1404  0F2A                     	;# 
  1405  0F2B                     	;# 
  1406  0F2C                     	;# 
  1407  0F2D                     	;# 
  1408  0F2E                     	;# 
  1409  0F2F                     	;# 
  1410  0F30                     	;# 
  1411  0F31                     	;# 
  1412  0F32                     	;# 
  1413  0F33                     	;# 
  1414  0F34                     	;# 
  1415  0F35                     	;# 
  1416  0F36                     	;# 
  1417  0F37                     	;# 
  1418  0FE4                     	;# 
  1419  0FE5                     	;# 
  1420  0FE6                     	;# 
  1421  0FE7                     	;# 
  1422  0FE8                     	;# 
  1423  0FE9                     	;# 
  1424  0FEA                     	;# 
  1425  0FEB                     	;# 
  1426  0FED                     	;# 
  1427  0FEE                     	;# 
  1428  0FEF                     	;# 
  1429  0000                     	;# 
  1430  0001                     	;# 
  1431  0002                     	;# 
  1432  0003                     	;# 
  1433  0004                     	;# 
  1434  0005                     	;# 
  1435  0006                     	;# 
  1436  0007                     	;# 
  1437  0008                     	;# 
  1438  0009                     	;# 
  1439  000A                     	;# 
  1440  000B                     	;# 
  1441  000C                     	;# 
  1442  000D                     	;# 
  1443  000E                     	;# 
  1444  0010                     	;# 
  1445  0011                     	;# 
  1446  0012                     	;# 
  1447  0013                     	;# 
  1448  0014                     	;# 
  1449  0015                     	;# 
  1450  0016                     	;# 
  1451  0016                     	;# 
  1452  0017                     	;# 
  1453  0018                     	;# 
  1454  0019                     	;# 
  1455  001A                     	;# 
  1456  001A                     	;# 
  1457  001B                     	;# 
  1458  001B                     	;# 
  1459  001C                     	;# 
  1460  001D                     	;# 
  1461  001E                     	;# 
  1462  001F                     	;# 
  1463  008C                     	;# 
  1464  008D                     	;# 
  1465  008E                     	;# 
  1466  0090                     	;# 
  1467  0091                     	;# 
  1468  0092                     	;# 
  1469  0093                     	;# 
  1470  0094                     	;# 
  1471  0095                     	;# 
  1472  0096                     	;# 
  1473  0098                     	;# 
  1474  0099                     	;# 
  1475  009A                     	;# 
  1476  009B                     	;# 
  1477  009B                     	;# 
  1478  009C                     	;# 
  1479  009D                     	;# 
  1480  009E                     	;# 
  1481  009F                     	;# 
  1482  010C                     	;# 
  1483  010D                     	;# 
  1484  010E                     	;# 
  1485  0111                     	;# 
  1486  0112                     	;# 
  1487  0113                     	;# 
  1488  0114                     	;# 
  1489  0115                     	;# 
  1490  0116                     	;# 
  1491  0117                     	;# 
  1492  0118                     	;# 
  1493  0119                     	;# 
  1494  011C                     	;# 
  1495  018C                     	;# 
  1496  018D                     	;# 
  1497  018E                     	;# 
  1498  0191                     	;# 
  1499  0191                     	;# 
  1500  0192                     	;# 
  1501  0193                     	;# 
  1502  0193                     	;# 
  1503  0194                     	;# 
  1504  0195                     	;# 
  1505  0196                     	;# 
  1506  0197                     	;# 
  1507  0199                     	;# 
  1508  0199                     	;# 
  1509  0199                     	;# 
  1510  019A                     	;# 
  1511  019A                     	;# 
  1512  019A                     	;# 
  1513  019B                     	;# 
  1514  019B                     	;# 
  1515  019B                     	;# 
  1516  019B                     	;# 
  1517  019B                     	;# 
  1518  019C                     	;# 
  1519  019C                     	;# 
  1520  019C                     	;# 
  1521  019D                     	;# 
  1522  019D                     	;# 
  1523  019D                     	;# 
  1524  019E                     	;# 
  1525  019E                     	;# 
  1526  019E                     	;# 
  1527  019F                     	;# 
  1528  019F                     	;# 
  1529  019F                     	;# 
  1530  019F                     	;# 
  1531  019F                     	;# 
  1532  020C                     	;# 
  1533  020D                     	;# 
  1534  020E                     	;# 
  1535  0211                     	;# 
  1536  0211                     	;# 
  1537  0212                     	;# 
  1538  0212                     	;# 
  1539  0213                     	;# 
  1540  0213                     	;# 
  1541  0214                     	;# 
  1542  0214                     	;# 
  1543  0215                     	;# 
  1544  0215                     	;# 
  1545  0215                     	;# 
  1546  0215                     	;# 
  1547  0216                     	;# 
  1548  0216                     	;# 
  1549  0217                     	;# 
  1550  0217                     	;# 
  1551  028C                     	;# 
  1552  028D                     	;# 
  1553  028E                     	;# 
  1554  0291                     	;# 
  1555  0291                     	;# 
  1556  0292                     	;# 
  1557  0293                     	;# 
  1558  0294                     	;# 
  1559  0298                     	;# 
  1560  0298                     	;# 
  1561  0299                     	;# 
  1562  029A                     	;# 
  1563  029B                     	;# 
  1564  029E                     	;# 
  1565  030C                     	;# 
  1566  030D                     	;# 
  1567  030E                     	;# 
  1568  038C                     	;# 
  1569  038D                     	;# 
  1570  038E                     	;# 
  1571  0391                     	;# 
  1572  0392                     	;# 
  1573  0393                     	;# 
  1574  0394                     	;# 
  1575  0395                     	;# 
  1576  0396                     	;# 
  1577  0397                     	;# 
  1578  0398                     	;# 
  1579  0399                     	;# 
  1580  040E                     	;# 
  1581  0413                     	;# 
  1582  0413                     	;# 
  1583  0414                     	;# 
  1584  0414                     	;# 
  1585  0415                     	;# 
  1586  0416                     	;# 
  1587  0417                     	;# 
  1588  0418                     	;# 
  1589  041A                     	;# 
  1590  041A                     	;# 
  1591  041B                     	;# 
  1592  041B                     	;# 
  1593  041C                     	;# 
  1594  041D                     	;# 
  1595  041E                     	;# 
  1596  041F                     	;# 
  1597  0493                     	;# 
  1598  0494                     	;# 
  1599  0495                     	;# 
  1600  0496                     	;# 
  1601  049A                     	;# 
  1602  049B                     	;# 
  1603  049C                     	;# 
  1604  049D                     	;# 
  1605  058C                     	;# 
  1606  058C                     	;# 
  1607  058D                     	;# 
  1608  058E                     	;# 
  1609  058E                     	;# 
  1610  058F                     	;# 
  1611  0590                     	;# 
  1612  0590                     	;# 
  1613  0591                     	;# 
  1614  0592                     	;# 
  1615  0592                     	;# 
  1616  0593                     	;# 
  1617  0594                     	;# 
  1618  0594                     	;# 
  1619  0595                     	;# 
  1620  0596                     	;# 
  1621  0596                     	;# 
  1622  0597                     	;# 
  1623  0598                     	;# 
  1624  0599                     	;# 
  1625  059A                     	;# 
  1626  059B                     	;# 
  1627  059B                     	;# 
  1628  059C                     	;# 
  1629  059D                     	;# 
  1630  060C                     	;# 
  1631  060C                     	;# 
  1632  060D                     	;# 
  1633  060E                     	;# 
  1634  060F                     	;# 
  1635  060F                     	;# 
  1636  0610                     	;# 
  1637  0611                     	;# 
  1638  0612                     	;# 
  1639  0613                     	;# 
  1640  0614                     	;# 
  1641  0617                     	;# 
  1642  0617                     	;# 
  1643  0618                     	;# 
  1644  0619                     	;# 
  1645  061A                     	;# 
  1646  061A                     	;# 
  1647  061B                     	;# 
  1648  061C                     	;# 
  1649  0691                     	;# 
  1650  0692                     	;# 
  1651  0693                     	;# 
  1652  0694                     	;# 
  1653  0695                     	;# 
  1654  0696                     	;# 
  1655  0697                     	;# 
  1656  0699                     	;# 
  1657  069A                     	;# 
  1658  0711                     	;# 
  1659  0712                     	;# 
  1660  0713                     	;# 
  1661  0714                     	;# 
  1662  0715                     	;# 
  1663  0718                     	;# 
  1664  0718                     	;# 
  1665  0719                     	;# 
  1666  071A                     	;# 
  1667  071A                     	;# 
  1668  071B                     	;# 
  1669  071C                     	;# 
  1670  071D                     	;# 
  1671  0791                     	;# 
  1672  0791                     	;# 
  1673  0792                     	;# 
  1674  0793                     	;# 
  1675  0793                     	;# 
  1676  0794                     	;# 
  1677  0795                     	;# 
  1678  0795                     	;# 
  1679  0796                     	;# 
  1680  0797                     	;# 
  1681  0797                     	;# 
  1682  0798                     	;# 
  1683  0799                     	;# 
  1684  079A                     	;# 
  1685  080C                     	;# 
  1686  080C                     	;# 
  1687  080D                     	;# 
  1688  080E                     	;# 
  1689  080E                     	;# 
  1690  080F                     	;# 
  1691  0810                     	;# 
  1692  0810                     	;# 
  1693  0811                     	;# 
  1694  0812                     	;# 
  1695  0812                     	;# 
  1696  0813                     	;# 
  1697  0814                     	;# 
  1698  0815                     	;# 
  1699  0816                     	;# 
  1700  0817                     	;# 
  1701  0818                     	;# 
  1702  0819                     	;# 
  1703  081A                     	;# 
  1704  081A                     	;# 
  1705  081B                     	;# 
  1706  081C                     	;# 
  1707  081C                     	;# 
  1708  081D                     	;# 
  1709  088C                     	;# 
  1710  088D                     	;# 
  1711  088E                     	;# 
  1712  088F                     	;# 
  1713  088F                     	;# 
  1714  0890                     	;# 
  1715  0891                     	;# 
  1716  0892                     	;# 
  1717  0893                     	;# 
  1718  0893                     	;# 
  1719  0894                     	;# 
  1720  0895                     	;# 
  1721  0896                     	;# 
  1722  0897                     	;# 
  1723  0897                     	;# 
  1724  0898                     	;# 
  1725  0899                     	;# 
  1726  0D8C                     	;# 
  1727  0D8C                     	;# 
  1728  0D8D                     	;# 
  1729  0D8E                     	;# 
  1730  0D8F                     	;# 
  1731  0D8F                     	;# 
  1732  0D90                     	;# 
  1733  0D91                     	;# 
  1734  0D92                     	;# 
  1735  0D92                     	;# 
  1736  0D93                     	;# 
  1737  0D94                     	;# 
  1738  0D95                     	;# 
  1739  0D95                     	;# 
  1740  0D96                     	;# 
  1741  0D97                     	;# 
  1742  0D98                     	;# 
  1743  0D99                     	;# 
  1744  0D9A                     	;# 
  1745  0D9B                     	;# 
  1746  0D9C                     	;# 
  1747  0D9D                     	;# 
  1748  0D9E                     	;# 
  1749  0D9E                     	;# 
  1750  0D9F                     	;# 
  1751  0DA0                     	;# 
  1752  0DA1                     	;# 
  1753  0DA1                     	;# 
  1754  0DA2                     	;# 
  1755  0DA3                     	;# 
  1756  0DA4                     	;# 
  1757  0DA4                     	;# 
  1758  0DA5                     	;# 
  1759  0DA6                     	;# 
  1760  0DA7                     	;# 
  1761  0DA7                     	;# 
  1762  0DA8                     	;# 
  1763  0DA9                     	;# 
  1764  0DAA                     	;# 
  1765  0DAB                     	;# 
  1766  0DAC                     	;# 
  1767  0DAD                     	;# 
  1768  0DAE                     	;# 
  1769  0DAF                     	;# 
  1770  0E0F                     	;# 
  1771  0E10                     	;# 
  1772  0E11                     	;# 
  1773  0E12                     	;# 
  1774  0E13                     	;# 
  1775  0E14                     	;# 
  1776  0E15                     	;# 
  1777  0E16                     	;# 
  1778  0E17                     	;# 
  1779  0E18                     	;# 
  1780  0E19                     	;# 
  1781  0E1A                     	;# 
  1782  0E1B                     	;# 
  1783  0E1C                     	;# 
  1784  0E1D                     	;# 
  1785  0E1E                     	;# 
  1786  0E1F                     	;# 
  1787  0E20                     	;# 
  1788  0E21                     	;# 
  1789  0E22                     	;# 
  1790  0E23                     	;# 
  1791  0E24                     	;# 
  1792  0E25                     	;# 
  1793  0E26                     	;# 
  1794  0E27                     	;# 
  1795  0E28                     	;# 
  1796  0E29                     	;# 
  1797  0E2A                     	;# 
  1798  0E2B                     	;# 
  1799  0E2C                     	;# 
  1800  0E2D                     	;# 
  1801  0E2E                     	;# 
  1802  0E90                     	;# 
  1803  0E91                     	;# 
  1804  0E92                     	;# 
  1805  0E94                     	;# 
  1806  0E95                     	;# 
  1807  0E9C                     	;# 
  1808  0E9D                     	;# 
  1809  0E9E                     	;# 
  1810  0E9F                     	;# 
  1811  0EA0                     	;# 
  1812  0EA1                     	;# 
  1813  0EA2                     	;# 
  1814  0EA3                     	;# 
  1815  0EA4                     	;# 
  1816  0EA5                     	;# 
  1817  0EA6                     	;# 
  1818  0EA7                     	;# 
  1819  0F0F                     	;# 
  1820  0F10                     	;# 
  1821  0F11                     	;# 
  1822  0F12                     	;# 
  1823  0F13                     	;# 
  1824  0F14                     	;# 
  1825  0F15                     	;# 
  1826  0F16                     	;# 
  1827  0F17                     	;# 
  1828  0F18                     	;# 
  1829  0F19                     	;# 
  1830  0F1A                     	;# 
  1831  0F1B                     	;# 
  1832  0F1C                     	;# 
  1833  0F1D                     	;# 
  1834  0F1E                     	;# 
  1835  0F1F                     	;# 
  1836  0F20                     	;# 
  1837  0F21                     	;# 
  1838  0F22                     	;# 
  1839  0F23                     	;# 
  1840  0F24                     	;# 
  1841  0F25                     	;# 
  1842  0F26                     	;# 
  1843  0F27                     	;# 
  1844  0F28                     	;# 
  1845  0F29                     	;# 
  1846  0F2A                     	;# 
  1847  0F2B                     	;# 
  1848  0F2C                     	;# 
  1849  0F2D                     	;# 
  1850  0F2E                     	;# 
  1851  0F2F                     	;# 
  1852  0F30                     	;# 
  1853  0F31                     	;# 
  1854  0F32                     	;# 
  1855  0F33                     	;# 
  1856  0F34                     	;# 
  1857  0F35                     	;# 
  1858  0F36                     	;# 
  1859  0F37                     	;# 
  1860  0FE4                     	;# 
  1861  0FE5                     	;# 
  1862  0FE6                     	;# 
  1863  0FE7                     	;# 
  1864  0FE8                     	;# 
  1865  0FE9                     	;# 
  1866  0FEA                     	;# 
  1867  0FEB                     	;# 
  1868  0FED                     	;# 
  1869  0FEE                     	;# 
  1870  0FEF                     	;# 
  1871  0000                     	;# 
  1872  0001                     	;# 
  1873  0002                     	;# 
  1874  0003                     	;# 
  1875  0004                     	;# 
  1876  0005                     	;# 
  1877  0006                     	;# 
  1878  0007                     	;# 
  1879  0008                     	;# 
  1880  0009                     	;# 
  1881  000A                     	;# 
  1882  000B                     	;# 
  1883  000C                     	;# 
  1884  000D                     	;# 
  1885  000E                     	;# 
  1886  0010                     	;# 
  1887  0011                     	;# 
  1888  0012                     	;# 
  1889  0013                     	;# 
  1890  0014                     	;# 
  1891  0015                     	;# 
  1892  0016                     	;# 
  1893  0016                     	;# 
  1894  0017                     	;# 
  1895  0018                     	;# 
  1896  0019                     	;# 
  1897  001A                     	;# 
  1898  001A                     	;# 
  1899  001B                     	;# 
  1900  001B                     	;# 
  1901  001C                     	;# 
  1902  001D                     	;# 
  1903  001E                     	;# 
  1904  001F                     	;# 
  1905  008C                     	;# 
  1906  008D                     	;# 
  1907  008E                     	;# 
  1908  0090                     	;# 
  1909  0091                     	;# 
  1910  0092                     	;# 
  1911  0093                     	;# 
  1912  0094                     	;# 
  1913  0095                     	;# 
  1914  0096                     	;# 
  1915  0098                     	;# 
  1916  0099                     	;# 
  1917  009A                     	;# 
  1918  009B                     	;# 
  1919  009B                     	;# 
  1920  009C                     	;# 
  1921  009D                     	;# 
  1922  009E                     	;# 
  1923  009F                     	;# 
  1924  010C                     	;# 
  1925  010D                     	;# 
  1926  010E                     	;# 
  1927  0111                     	;# 
  1928  0112                     	;# 
  1929  0113                     	;# 
  1930  0114                     	;# 
  1931  0115                     	;# 
  1932  0116                     	;# 
  1933  0117                     	;# 
  1934  0118                     	;# 
  1935  0119                     	;# 
  1936  011C                     	;# 
  1937  018C                     	;# 
  1938  018D                     	;# 
  1939  018E                     	;# 
  1940  0191                     	;# 
  1941  0191                     	;# 
  1942  0192                     	;# 
  1943  0193                     	;# 
  1944  0193                     	;# 
  1945  0194                     	;# 
  1946  0195                     	;# 
  1947  0196                     	;# 
  1948  0197                     	;# 
  1949  0199                     	;# 
  1950  0199                     	;# 
  1951  0199                     	;# 
  1952  019A                     	;# 
  1953  019A                     	;# 
  1954  019A                     	;# 
  1955  019B                     	;# 
  1956  019B                     	;# 
  1957  019B                     	;# 
  1958  019B                     	;# 
  1959  019B                     	;# 
  1960  019C                     	;# 
  1961  019C                     	;# 
  1962  019C                     	;# 
  1963  019D                     	;# 
  1964  019D                     	;# 
  1965  019D                     	;# 
  1966  019E                     	;# 
  1967  019E                     	;# 
  1968  019E                     	;# 
  1969  019F                     	;# 
  1970  019F                     	;# 
  1971  019F                     	;# 
  1972  019F                     	;# 
  1973  019F                     	;# 
  1974  020C                     	;# 
  1975  020D                     	;# 
  1976  020E                     	;# 
  1977  0211                     	;# 
  1978  0211                     	;# 
  1979  0212                     	;# 
  1980  0212                     	;# 
  1981  0213                     	;# 
  1982  0213                     	;# 
  1983  0214                     	;# 
  1984  0214                     	;# 
  1985  0215                     	;# 
  1986  0215                     	;# 
  1987  0215                     	;# 
  1988  0215                     	;# 
  1989  0216                     	;# 
  1990  0216                     	;# 
  1991  0217                     	;# 
  1992  0217                     	;# 
  1993  028C                     	;# 
  1994  028D                     	;# 
  1995  028E                     	;# 
  1996  0291                     	;# 
  1997  0291                     	;# 
  1998  0292                     	;# 
  1999  0293                     	;# 
  2000  0294                     	;# 
  2001  0298                     	;# 
  2002  0298                     	;# 
  2003  0299                     	;# 
  2004  029A                     	;# 
  2005  029B                     	;# 
  2006  029E                     	;# 
  2007  030C                     	;# 
  2008  030D                     	;# 
  2009  030E                     	;# 
  2010  038C                     	;# 
  2011  038D                     	;# 
  2012  038E                     	;# 
  2013  0391                     	;# 
  2014  0392                     	;# 
  2015  0393                     	;# 
  2016  0394                     	;# 
  2017  0395                     	;# 
  2018  0396                     	;# 
  2019  0397                     	;# 
  2020  0398                     	;# 
  2021  0399                     	;# 
  2022  040E                     	;# 
  2023  0413                     	;# 
  2024  0413                     	;# 
  2025  0414                     	;# 
  2026  0414                     	;# 
  2027  0415                     	;# 
  2028  0416                     	;# 
  2029  0417                     	;# 
  2030  0418                     	;# 
  2031  041A                     	;# 
  2032  041A                     	;# 
  2033  041B                     	;# 
  2034  041B                     	;# 
  2035  041C                     	;# 
  2036  041D                     	;# 
  2037  041E                     	;# 
  2038  041F                     	;# 
  2039  0493                     	;# 
  2040  0494                     	;# 
  2041  0495                     	;# 
  2042  0496                     	;# 
  2043  049A                     	;# 
  2044  049B                     	;# 
  2045  049C                     	;# 
  2046  049D                     	;# 
  2047  058C                     	;# 
  2048  058C                     	;# 
  2049  058D                     	;# 
  2050  058E                     	;# 
  2051  058E                     	;# 
  2052  058F                     	;# 
  2053  0590                     	;# 
  2054  0590                     	;# 
  2055  0591                     	;# 
  2056  0592                     	;# 
  2057  0592                     	;# 
  2058  0593                     	;# 
  2059  0594                     	;# 
  2060  0594                     	;# 
  2061  0595                     	;# 
  2062  0596                     	;# 
  2063  0596                     	;# 
  2064  0597                     	;# 
  2065  0598                     	;# 
  2066  0599                     	;# 
  2067  059A                     	;# 
  2068  059B                     	;# 
  2069  059B                     	;# 
  2070  059C                     	;# 
  2071  059D                     	;# 
  2072  060C                     	;# 
  2073  060C                     	;# 
  2074  060D                     	;# 
  2075  060E                     	;# 
  2076  060F                     	;# 
  2077  060F                     	;# 
  2078  0610                     	;# 
  2079  0611                     	;# 
  2080  0612                     	;# 
  2081  0613                     	;# 
  2082  0614                     	;# 
  2083  0617                     	;# 
  2084  0617                     	;# 
  2085  0618                     	;# 
  2086  0619                     	;# 
  2087  061A                     	;# 
  2088  061A                     	;# 
  2089  061B                     	;# 
  2090  061C                     	;# 
  2091  0691                     	;# 
  2092  0692                     	;# 
  2093  0693                     	;# 
  2094  0694                     	;# 
  2095  0695                     	;# 
  2096  0696                     	;# 
  2097  0697                     	;# 
  2098  0699                     	;# 
  2099  069A                     	;# 
  2100  0711                     	;# 
  2101  0712                     	;# 
  2102  0713                     	;# 
  2103  0714                     	;# 
  2104  0715                     	;# 
  2105  0718                     	;# 
  2106  0718                     	;# 
  2107  0719                     	;# 
  2108  071A                     	;# 
  2109  071A                     	;# 
  2110  071B                     	;# 
  2111  071C                     	;# 
  2112  071D                     	;# 
  2113  0791                     	;# 
  2114  0791                     	;# 
  2115  0792                     	;# 
  2116  0793                     	;# 
  2117  0793                     	;# 
  2118  0794                     	;# 
  2119  0795                     	;# 
  2120  0795                     	;# 
  2121  0796                     	;# 
  2122  0797                     	;# 
  2123  0797                     	;# 
  2124  0798                     	;# 
  2125  0799                     	;# 
  2126  079A                     	;# 
  2127  080C                     	;# 
  2128  080C                     	;# 
  2129  080D                     	;# 
  2130  080E                     	;# 
  2131  080E                     	;# 
  2132  080F                     	;# 
  2133  0810                     	;# 
  2134  0810                     	;# 
  2135  0811                     	;# 
  2136  0812                     	;# 
  2137  0812                     	;# 
  2138  0813                     	;# 
  2139  0814                     	;# 
  2140  0815                     	;# 
  2141  0816                     	;# 
  2142  0817                     	;# 
  2143  0818                     	;# 
  2144  0819                     	;# 
  2145  081A                     	;# 
  2146  081A                     	;# 
  2147  081B                     	;# 
  2148  081C                     	;# 
  2149  081C                     	;# 
  2150  081D                     	;# 
  2151  088C                     	;# 
  2152  088D                     	;# 
  2153  088E                     	;# 
  2154  088F                     	;# 
  2155  088F                     	;# 
  2156  0890                     	;# 
  2157  0891                     	;# 
  2158  0892                     	;# 
  2159  0893                     	;# 
  2160  0893                     	;# 
  2161  0894                     	;# 
  2162  0895                     	;# 
  2163  0896                     	;# 
  2164  0897                     	;# 
  2165  0897                     	;# 
  2166  0898                     	;# 
  2167  0899                     	;# 
  2168  0D8C                     	;# 
  2169  0D8C                     	;# 
  2170  0D8D                     	;# 
  2171  0D8E                     	;# 
  2172  0D8F                     	;# 
  2173  0D8F                     	;# 
  2174  0D90                     	;# 
  2175  0D91                     	;# 
  2176  0D92                     	;# 
  2177  0D92                     	;# 
  2178  0D93                     	;# 
  2179  0D94                     	;# 
  2180  0D95                     	;# 
  2181  0D95                     	;# 
  2182  0D96                     	;# 
  2183  0D97                     	;# 
  2184  0D98                     	;# 
  2185  0D99                     	;# 
  2186  0D9A                     	;# 
  2187  0D9B                     	;# 
  2188  0D9C                     	;# 
  2189  0D9D                     	;# 
  2190  0D9E                     	;# 
  2191  0D9E                     	;# 
  2192  0D9F                     	;# 
  2193  0DA0                     	;# 
  2194  0DA1                     	;# 
  2195  0DA1                     	;# 
  2196  0DA2                     	;# 
  2197  0DA3                     	;# 
  2198  0DA4                     	;# 
  2199  0DA4                     	;# 
  2200  0DA5                     	;# 
  2201  0DA6                     	;# 
  2202  0DA7                     	;# 
  2203  0DA7                     	;# 
  2204  0DA8                     	;# 
  2205  0DA9                     	;# 
  2206  0DAA                     	;# 
  2207  0DAB                     	;# 
  2208  0DAC                     	;# 
  2209  0DAD                     	;# 
  2210  0DAE                     	;# 
  2211  0DAF                     	;# 
  2212  0E0F                     	;# 
  2213  0E10                     	;# 
  2214  0E11                     	;# 
  2215  0E12                     	;# 
  2216  0E13                     	;# 
  2217  0E14                     	;# 
  2218  0E15                     	;# 
  2219  0E16                     	;# 
  2220  0E17                     	;# 
  2221  0E18                     	;# 
  2222  0E19                     	;# 
  2223  0E1A                     	;# 
  2224  0E1B                     	;# 
  2225  0E1C                     	;# 
  2226  0E1D                     	;# 
  2227  0E1E                     	;# 
  2228  0E1F                     	;# 
  2229  0E20                     	;# 
  2230  0E21                     	;# 
  2231  0E22                     	;# 
  2232  0E23                     	;# 
  2233  0E24                     	;# 
  2234  0E25                     	;# 
  2235  0E26                     	;# 
  2236  0E27                     	;# 
  2237  0E28                     	;# 
  2238  0E29                     	;# 
  2239  0E2A                     	;# 
  2240  0E2B                     	;# 
  2241  0E2C                     	;# 
  2242  0E2D                     	;# 
  2243  0E2E                     	;# 
  2244  0E90                     	;# 
  2245  0E91                     	;# 
  2246  0E92                     	;# 
  2247  0E94                     	;# 
  2248  0E95                     	;# 
  2249  0E9C                     	;# 
  2250  0E9D                     	;# 
  2251  0E9E                     	;# 
  2252  0E9F                     	;# 
  2253  0EA0                     	;# 
  2254  0EA1                     	;# 
  2255  0EA2                     	;# 
  2256  0EA3                     	;# 
  2257  0EA4                     	;# 
  2258  0EA5                     	;# 
  2259  0EA6                     	;# 
  2260  0EA7                     	;# 
  2261  0F0F                     	;# 
  2262  0F10                     	;# 
  2263  0F11                     	;# 
  2264  0F12                     	;# 
  2265  0F13                     	;# 
  2266  0F14                     	;# 
  2267  0F15                     	;# 
  2268  0F16                     	;# 
  2269  0F17                     	;# 
  2270  0F18                     	;# 
  2271  0F19                     	;# 
  2272  0F1A                     	;# 
  2273  0F1B                     	;# 
  2274  0F1C                     	;# 
  2275  0F1D                     	;# 
  2276  0F1E                     	;# 
  2277  0F1F                     	;# 
  2278  0F20                     	;# 
  2279  0F21                     	;# 
  2280  0F22                     	;# 
  2281  0F23                     	;# 
  2282  0F24                     	;# 
  2283  0F25                     	;# 
  2284  0F26                     	;# 
  2285  0F27                     	;# 
  2286  0F28                     	;# 
  2287  0F29                     	;# 
  2288  0F2A                     	;# 
  2289  0F2B                     	;# 
  2290  0F2C                     	;# 
  2291  0F2D                     	;# 
  2292  0F2E                     	;# 
  2293  0F2F                     	;# 
  2294  0F30                     	;# 
  2295  0F31                     	;# 
  2296  0F32                     	;# 
  2297  0F33                     	;# 
  2298  0F34                     	;# 
  2299  0F35                     	;# 
  2300  0F36                     	;# 
  2301  0F37                     	;# 
  2302  0FE4                     	;# 
  2303  0FE5                     	;# 
  2304  0FE6                     	;# 
  2305  0FE7                     	;# 
  2306  0FE8                     	;# 
  2307  0FE9                     	;# 
  2308  0FEA                     	;# 
  2309  0FEB                     	;# 
  2310  0FED                     	;# 
  2311  0FEE                     	;# 
  2312  0FEF                     	;# 
  2313  0000                     	;# 
  2314  0001                     	;# 
  2315  0002                     	;# 
  2316  0003                     	;# 
  2317  0004                     	;# 
  2318  0005                     	;# 
  2319  0006                     	;# 
  2320  0007                     	;# 
  2321  0008                     	;# 
  2322  0009                     	;# 
  2323  000A                     	;# 
  2324  000B                     	;# 
  2325  000C                     	;# 
  2326  000D                     	;# 
  2327  000E                     	;# 
  2328  0010                     	;# 
  2329  0011                     	;# 
  2330  0012                     	;# 
  2331  0013                     	;# 
  2332  0014                     	;# 
  2333  0015                     	;# 
  2334  0016                     	;# 
  2335  0016                     	;# 
  2336  0017                     	;# 
  2337  0018                     	;# 
  2338  0019                     	;# 
  2339  001A                     	;# 
  2340  001A                     	;# 
  2341  001B                     	;# 
  2342  001B                     	;# 
  2343  001C                     	;# 
  2344  001D                     	;# 
  2345  001E                     	;# 
  2346  001F                     	;# 
  2347  008C                     	;# 
  2348  008D                     	;# 
  2349  008E                     	;# 
  2350  0090                     	;# 
  2351  0091                     	;# 
  2352  0092                     	;# 
  2353  0093                     	;# 
  2354  0094                     	;# 
  2355  0095                     	;# 
  2356  0096                     	;# 
  2357  0098                     	;# 
  2358  0099                     	;# 
  2359  009A                     	;# 
  2360  009B                     	;# 
  2361  009B                     	;# 
  2362  009C                     	;# 
  2363  009D                     	;# 
  2364  009E                     	;# 
  2365  009F                     	;# 
  2366  010C                     	;# 
  2367  010D                     	;# 
  2368  010E                     	;# 
  2369  0111                     	;# 
  2370  0112                     	;# 
  2371  0113                     	;# 
  2372  0114                     	;# 
  2373  0115                     	;# 
  2374  0116                     	;# 
  2375  0117                     	;# 
  2376  0118                     	;# 
  2377  0119                     	;# 
  2378  011C                     	;# 
  2379  018C                     	;# 
  2380  018D                     	;# 
  2381  018E                     	;# 
  2382  0191                     	;# 
  2383  0191                     	;# 
  2384  0192                     	;# 
  2385  0193                     	;# 
  2386  0193                     	;# 
  2387  0194                     	;# 
  2388  0195                     	;# 
  2389  0196                     	;# 
  2390  0197                     	;# 
  2391  0199                     	;# 
  2392  0199                     	;# 
  2393  0199                     	;# 
  2394  019A                     	;# 
  2395  019A                     	;# 
  2396  019A                     	;# 
  2397  019B                     	;# 
  2398  019B                     	;# 
  2399  019B                     	;# 
  2400  019B                     	;# 
  2401  019B                     	;# 
  2402  019C                     	;# 
  2403  019C                     	;# 
  2404  019C                     	;# 
  2405  019D                     	;# 
  2406  019D                     	;# 
  2407  019D                     	;# 
  2408  019E                     	;# 
  2409  019E                     	;# 
  2410  019E                     	;# 
  2411  019F                     	;# 
  2412  019F                     	;# 
  2413  019F                     	;# 
  2414  019F                     	;# 
  2415  019F                     	;# 
  2416  020C                     	;# 
  2417  020D                     	;# 
  2418  020E                     	;# 
  2419  0211                     	;# 
  2420  0211                     	;# 
  2421  0212                     	;# 
  2422  0212                     	;# 
  2423  0213                     	;# 
  2424  0213                     	;# 
  2425  0214                     	;# 
  2426  0214                     	;# 
  2427  0215                     	;# 
  2428  0215                     	;# 
  2429  0215                     	;# 
  2430  0215                     	;# 
  2431  0216                     	;# 
  2432  0216                     	;# 
  2433  0217                     	;# 
  2434  0217                     	;# 
  2435  028C                     	;# 
  2436  028D                     	;# 
  2437  028E                     	;# 
  2438  0291                     	;# 
  2439  0291                     	;# 
  2440  0292                     	;# 
  2441  0293                     	;# 
  2442  0294                     	;# 
  2443  0298                     	;# 
  2444  0298                     	;# 
  2445  0299                     	;# 
  2446  029A                     	;# 
  2447  029B                     	;# 
  2448  029E                     	;# 
  2449  030C                     	;# 
  2450  030D                     	;# 
  2451  030E                     	;# 
  2452  038C                     	;# 
  2453  038D                     	;# 
  2454  038E                     	;# 
  2455  0391                     	;# 
  2456  0392                     	;# 
  2457  0393                     	;# 
  2458  0394                     	;# 
  2459  0395                     	;# 
  2460  0396                     	;# 
  2461  0397                     	;# 
  2462  0398                     	;# 
  2463  0399                     	;# 
  2464  040E                     	;# 
  2465  0413                     	;# 
  2466  0413                     	;# 
  2467  0414                     	;# 
  2468  0414                     	;# 
  2469  0415                     	;# 
  2470  0416                     	;# 
  2471  0417                     	;# 
  2472  0418                     	;# 
  2473  041A                     	;# 
  2474  041A                     	;# 
  2475  041B                     	;# 
  2476  041B                     	;# 
  2477  041C                     	;# 
  2478  041D                     	;# 
  2479  041E                     	;# 
  2480  041F                     	;# 
  2481  0493                     	;# 
  2482  0494                     	;# 
  2483  0495                     	;# 
  2484  0496                     	;# 
  2485  049A                     	;# 
  2486  049B                     	;# 
  2487  049C                     	;# 
  2488  049D                     	;# 
  2489  058C                     	;# 
  2490  058C                     	;# 
  2491  058D                     	;# 
  2492  058E                     	;# 
  2493  058E                     	;# 
  2494  058F                     	;# 
  2495  0590                     	;# 
  2496  0590                     	;# 
  2497  0591                     	;# 
  2498  0592                     	;# 
  2499  0592                     	;# 
  2500  0593                     	;# 
  2501  0594                     	;# 
  2502  0594                     	;# 
  2503  0595                     	;# 
  2504  0596                     	;# 
  2505  0596                     	;# 
  2506  0597                     	;# 
  2507  0598                     	;# 
  2508  0599                     	;# 
  2509  059A                     	;# 
  2510  059B                     	;# 
  2511  059B                     	;# 
  2512  059C                     	;# 
  2513  059D                     	;# 
  2514  060C                     	;# 
  2515  060C                     	;# 
  2516  060D                     	;# 
  2517  060E                     	;# 
  2518  060F                     	;# 
  2519  060F                     	;# 
  2520  0610                     	;# 
  2521  0611                     	;# 
  2522  0612                     	;# 
  2523  0613                     	;# 
  2524  0614                     	;# 
  2525  0617                     	;# 
  2526  0617                     	;# 
  2527  0618                     	;# 
  2528  0619                     	;# 
  2529  061A                     	;# 
  2530  061A                     	;# 
  2531  061B                     	;# 
  2532  061C                     	;# 
  2533  0691                     	;# 
  2534  0692                     	;# 
  2535  0693                     	;# 
  2536  0694                     	;# 
  2537  0695                     	;# 
  2538  0696                     	;# 
  2539  0697                     	;# 
  2540  0699                     	;# 
  2541  069A                     	;# 
  2542  0711                     	;# 
  2543  0712                     	;# 
  2544  0713                     	;# 
  2545  0714                     	;# 
  2546  0715                     	;# 
  2547  0718                     	;# 
  2548  0718                     	;# 
  2549  0719                     	;# 
  2550  071A                     	;# 
  2551  071A                     	;# 
  2552  071B                     	;# 
  2553  071C                     	;# 
  2554  071D                     	;# 
  2555  0791                     	;# 
  2556  0791                     	;# 
  2557  0792                     	;# 
  2558  0793                     	;# 
  2559  0793                     	;# 
  2560  0794                     	;# 
  2561  0795                     	;# 
  2562  0795                     	;# 
  2563  0796                     	;# 
  2564  0797                     	;# 
  2565  0797                     	;# 
  2566  0798                     	;# 
  2567  0799                     	;# 
  2568  079A                     	;# 
  2569  080C                     	;# 
  2570  080C                     	;# 
  2571  080D                     	;# 
  2572  080E                     	;# 
  2573  080E                     	;# 
  2574  080F                     	;# 
  2575  0810                     	;# 
  2576  0810                     	;# 
  2577  0811                     	;# 
  2578  0812                     	;# 
  2579  0812                     	;# 
  2580  0813                     	;# 
  2581  0814                     	;# 
  2582  0815                     	;# 
  2583  0816                     	;# 
  2584  0817                     	;# 
  2585  0818                     	;# 
  2586  0819                     	;# 
  2587  081A                     	;# 
  2588  081A                     	;# 
  2589  081B                     	;# 
  2590  081C                     	;# 
  2591  081C                     	;# 
  2592  081D                     	;# 
  2593  088C                     	;# 
  2594  088D                     	;# 
  2595  088E                     	;# 
  2596  088F                     	;# 
  2597  088F                     	;# 
  2598  0890                     	;# 
  2599  0891                     	;# 
  2600  0892                     	;# 
  2601  0893                     	;# 
  2602  0893                     	;# 
  2603  0894                     	;# 
  2604  0895                     	;# 
  2605  0896                     	;# 
  2606  0897                     	;# 
  2607  0897                     	;# 
  2608  0898                     	;# 
  2609  0899                     	;# 
  2610  0D8C                     	;# 
  2611  0D8C                     	;# 
  2612  0D8D                     	;# 
  2613  0D8E                     	;# 
  2614  0D8F                     	;# 
  2615  0D8F                     	;# 
  2616  0D90                     	;# 
  2617  0D91                     	;# 
  2618  0D92                     	;# 
  2619  0D92                     	;# 
  2620  0D93                     	;# 
  2621  0D94                     	;# 
  2622  0D95                     	;# 
  2623  0D95                     	;# 
  2624  0D96                     	;# 
  2625  0D97                     	;# 
  2626  0D98                     	;# 
  2627  0D99                     	;# 
  2628  0D9A                     	;# 
  2629  0D9B                     	;# 
  2630  0D9C                     	;# 
  2631  0D9D                     	;# 
  2632  0D9E                     	;# 
  2633  0D9E                     	;# 
  2634  0D9F                     	;# 
  2635  0DA0                     	;# 
  2636  0DA1                     	;# 
  2637  0DA1                     	;# 
  2638  0DA2                     	;# 
  2639  0DA3                     	;# 
  2640  0DA4                     	;# 
  2641  0DA4                     	;# 
  2642  0DA5                     	;# 
  2643  0DA6                     	;# 
  2644  0DA7                     	;# 
  2645  0DA7                     	;# 
  2646  0DA8                     	;# 
  2647  0DA9                     	;# 
  2648  0DAA                     	;# 
  2649  0DAB                     	;# 
  2650  0DAC                     	;# 
  2651  0DAD                     	;# 
  2652  0DAE                     	;# 
  2653  0DAF                     	;# 
  2654  0E0F                     	;# 
  2655  0E10                     	;# 
  2656  0E11                     	;# 
  2657  0E12                     	;# 
  2658  0E13                     	;# 
  2659  0E14                     	;# 
  2660  0E15                     	;# 
  2661  0E16                     	;# 
  2662  0E17                     	;# 
  2663  0E18                     	;# 
  2664  0E19                     	;# 
  2665  0E1A                     	;# 
  2666  0E1B                     	;# 
  2667  0E1C                     	;# 
  2668  0E1D                     	;# 
  2669  0E1E                     	;# 
  2670  0E1F                     	;# 
  2671  0E20                     	;# 
  2672  0E21                     	;# 
  2673  0E22                     	;# 
  2674  0E23                     	;# 
  2675  0E24                     	;# 
  2676  0E25                     	;# 
  2677  0E26                     	;# 
  2678  0E27                     	;# 
  2679  0E28                     	;# 
  2680  0E29                     	;# 
  2681  0E2A                     	;# 
  2682  0E2B                     	;# 
  2683  0E2C                     	;# 
  2684  0E2D                     	;# 
  2685  0E2E                     	;# 
  2686  0E90                     	;# 
  2687  0E91                     	;# 
  2688  0E92                     	;# 
  2689  0E94                     	;# 
  2690  0E95                     	;# 
  2691  0E9C                     	;# 
  2692  0E9D                     	;# 
  2693  0E9E                     	;# 
  2694  0E9F                     	;# 
  2695  0EA0                     	;# 
  2696  0EA1                     	;# 
  2697  0EA2                     	;# 
  2698  0EA3                     	;# 
  2699  0EA4                     	;# 
  2700  0EA5                     	;# 
  2701  0EA6                     	;# 
  2702  0EA7                     	;# 
  2703  0F0F                     	;# 
  2704  0F10                     	;# 
  2705  0F11                     	;# 
  2706  0F12                     	;# 
  2707  0F13                     	;# 
  2708  0F14                     	;# 
  2709  0F15                     	;# 
  2710  0F16                     	;# 
  2711  0F17                     	;# 
  2712  0F18                     	;# 
  2713  0F19                     	;# 
  2714  0F1A                     	;# 
  2715  0F1B                     	;# 
  2716  0F1C                     	;# 
  2717  0F1D                     	;# 
  2718  0F1E                     	;# 
  2719  0F1F                     	;# 
  2720  0F20                     	;# 
  2721  0F21                     	;# 
  2722  0F22                     	;# 
  2723  0F23                     	;# 
  2724  0F24                     	;# 
  2725  0F25                     	;# 
  2726  0F26                     	;# 
  2727  0F27                     	;# 
  2728  0F28                     	;# 
  2729  0F29                     	;# 
  2730  0F2A                     	;# 
  2731  0F2B                     	;# 
  2732  0F2C                     	;# 
  2733  0F2D                     	;# 
  2734  0F2E                     	;# 
  2735  0F2F                     	;# 
  2736  0F30                     	;# 
  2737  0F31                     	;# 
  2738  0F32                     	;# 
  2739  0F33                     	;# 
  2740  0F34                     	;# 
  2741  0F35                     	;# 
  2742  0F36                     	;# 
  2743  0F37                     	;# 
  2744  0FE4                     	;# 
  2745  0FE5                     	;# 
  2746  0FE6                     	;# 
  2747  0FE7                     	;# 
  2748  0FE8                     	;# 
  2749  0FE9                     	;# 
  2750  0FEA                     	;# 
  2751  0FEB                     	;# 
  2752  0FED                     	;# 
  2753  0FEE                     	;# 
  2754  0FEF                     	;# 
  2755  0000                     	;# 
  2756  0001                     	;# 
  2757  0002                     	;# 
  2758  0003                     	;# 
  2759  0004                     	;# 
  2760  0005                     	;# 
  2761  0006                     	;# 
  2762  0007                     	;# 
  2763  0008                     	;# 
  2764  0009                     	;# 
  2765  000A                     	;# 
  2766  000B                     	;# 
  2767  000C                     	;# 
  2768  000D                     	;# 
  2769  000E                     	;# 
  2770  0010                     	;# 
  2771  0011                     	;# 
  2772  0012                     	;# 
  2773  0013                     	;# 
  2774  0014                     	;# 
  2775  0015                     	;# 
  2776  0016                     	;# 
  2777  0016                     	;# 
  2778  0017                     	;# 
  2779  0018                     	;# 
  2780  0019                     	;# 
  2781  001A                     	;# 
  2782  001A                     	;# 
  2783  001B                     	;# 
  2784  001B                     	;# 
  2785  001C                     	;# 
  2786  001D                     	;# 
  2787  001E                     	;# 
  2788  001F                     	;# 
  2789  008C                     	;# 
  2790  008D                     	;# 
  2791  008E                     	;# 
  2792  0090                     	;# 
  2793  0091                     	;# 
  2794  0092                     	;# 
  2795  0093                     	;# 
  2796  0094                     	;# 
  2797  0095                     	;# 
  2798  0096                     	;# 
  2799  0098                     	;# 
  2800  0099                     	;# 
  2801  009A                     	;# 
  2802  009B                     	;# 
  2803  009B                     	;# 
  2804  009C                     	;# 
  2805  009D                     	;# 
  2806  009E                     	;# 
  2807  009F                     	;# 
  2808  010C                     	;# 
  2809  010D                     	;# 
  2810  010E                     	;# 
  2811  0111                     	;# 
  2812  0112                     	;# 
  2813  0113                     	;# 
  2814  0114                     	;# 
  2815  0115                     	;# 
  2816  0116                     	;# 
  2817  0117                     	;# 
  2818  0118                     	;# 
  2819  0119                     	;# 
  2820  011C                     	;# 
  2821  018C                     	;# 
  2822  018D                     	;# 
  2823  018E                     	;# 
  2824  0191                     	;# 
  2825  0191                     	;# 
  2826  0192                     	;# 
  2827  0193                     	;# 
  2828  0193                     	;# 
  2829  0194                     	;# 
  2830  0195                     	;# 
  2831  0196                     	;# 
  2832  0197                     	;# 
  2833  0199                     	;# 
  2834  0199                     	;# 
  2835  0199                     	;# 
  2836  019A                     	;# 
  2837  019A                     	;# 
  2838  019A                     	;# 
  2839  019B                     	;# 
  2840  019B                     	;# 
  2841  019B                     	;# 
  2842  019B                     	;# 
  2843  019B                     	;# 
  2844  019C                     	;# 
  2845  019C                     	;# 
  2846  019C                     	;# 
  2847  019D                     	;# 
  2848  019D                     	;# 
  2849  019D                     	;# 
  2850  019E                     	;# 
  2851  019E                     	;# 
  2852  019E                     	;# 
  2853  019F                     	;# 
  2854  019F                     	;# 
  2855  019F                     	;# 
  2856  019F                     	;# 
  2857  019F                     	;# 
  2858  020C                     	;# 
  2859  020D                     	;# 
  2860  020E                     	;# 
  2861  0211                     	;# 
  2862  0211                     	;# 
  2863  0212                     	;# 
  2864  0212                     	;# 
  2865  0213                     	;# 
  2866  0213                     	;# 
  2867  0214                     	;# 
  2868  0214                     	;# 
  2869  0215                     	;# 
  2870  0215                     	;# 
  2871  0215                     	;# 
  2872  0215                     	;# 
  2873  0216                     	;# 
  2874  0216                     	;# 
  2875  0217                     	;# 
  2876  0217                     	;# 
  2877  028C                     	;# 
  2878  028D                     	;# 
  2879  028E                     	;# 
  2880  0291                     	;# 
  2881  0291                     	;# 
  2882  0292                     	;# 
  2883  0293                     	;# 
  2884  0294                     	;# 
  2885  0298                     	;# 
  2886  0298                     	;# 
  2887  0299                     	;# 
  2888  029A                     	;# 
  2889  029B                     	;# 
  2890  029E                     	;# 
  2891  030C                     	;# 
  2892  030D                     	;# 
  2893  030E                     	;# 
  2894  038C                     	;# 
  2895  038D                     	;# 
  2896  038E                     	;# 
  2897  0391                     	;# 
  2898  0392                     	;# 
  2899  0393                     	;# 
  2900  0394                     	;# 
  2901  0395                     	;# 
  2902  0396                     	;# 
  2903  0397                     	;# 
  2904  0398                     	;# 
  2905  0399                     	;# 
  2906  040E                     	;# 
  2907  0413                     	;# 
  2908  0413                     	;# 
  2909  0414                     	;# 
  2910  0414                     	;# 
  2911  0415                     	;# 
  2912  0416                     	;# 
  2913  0417                     	;# 
  2914  0418                     	;# 
  2915  041A                     	;# 
  2916  041A                     	;# 
  2917  041B                     	;# 
  2918  041B                     	;# 
  2919  041C                     	;# 
  2920  041D                     	;# 
  2921  041E                     	;# 
  2922  041F                     	;# 
  2923  0493                     	;# 
  2924  0494                     	;# 
  2925  0495                     	;# 
  2926  0496                     	;# 
  2927  049A                     	;# 
  2928  049B                     	;# 
  2929  049C                     	;# 
  2930  049D                     	;# 
  2931  058C                     	;# 
  2932  058C                     	;# 
  2933  058D                     	;# 
  2934  058E                     	;# 
  2935  058E                     	;# 
  2936  058F                     	;# 
  2937  0590                     	;# 
  2938  0590                     	;# 
  2939  0591                     	;# 
  2940  0592                     	;# 
  2941  0592                     	;# 
  2942  0593                     	;# 
  2943  0594                     	;# 
  2944  0594                     	;# 
  2945  0595                     	;# 
  2946  0596                     	;# 
  2947  0596                     	;# 
  2948  0597                     	;# 
  2949  0598                     	;# 
  2950  0599                     	;# 
  2951  059A                     	;# 
  2952  059B                     	;# 
  2953  059B                     	;# 
  2954  059C                     	;# 
  2955  059D                     	;# 
  2956  060C                     	;# 
  2957  060C                     	;# 
  2958  060D                     	;# 
  2959  060E                     	;# 
  2960  060F                     	;# 
  2961  060F                     	;# 
  2962  0610                     	;# 
  2963  0611                     	;# 
  2964  0612                     	;# 
  2965  0613                     	;# 
  2966  0614                     	;# 
  2967  0617                     	;# 
  2968  0617                     	;# 
  2969  0618                     	;# 
  2970  0619                     	;# 
  2971  061A                     	;# 
  2972  061A                     	;# 
  2973  061B                     	;# 
  2974  061C                     	;# 
  2975  0691                     	;# 
  2976  0692                     	;# 
  2977  0693                     	;# 
  2978  0694                     	;# 
  2979  0695                     	;# 
  2980  0696                     	;# 
  2981  0697                     	;# 
  2982  0699                     	;# 
  2983  069A                     	;# 
  2984  0711                     	;# 
  2985  0712                     	;# 
  2986  0713                     	;# 
  2987  0714                     	;# 
  2988  0715                     	;# 
  2989  0718                     	;# 
  2990  0718                     	;# 
  2991  0719                     	;# 
  2992  071A                     	;# 
  2993  071A                     	;# 
  2994  071B                     	;# 
  2995  071C                     	;# 
  2996  071D                     	;# 
  2997  0791                     	;# 
  2998  0791                     	;# 
  2999  0792                     	;# 
  3000  0793                     	;# 
  3001  0793                     	;# 
  3002  0794                     	;# 
  3003  0795                     	;# 
  3004  0795                     	;# 
  3005  0796                     	;# 
  3006  0797                     	;# 
  3007  0797                     	;# 
  3008  0798                     	;# 
  3009  0799                     	;# 
  3010  079A                     	;# 
  3011  080C                     	;# 
  3012  080C                     	;# 
  3013  080D                     	;# 
  3014  080E                     	;# 
  3015  080E                     	;# 
  3016  080F                     	;# 
  3017  0810                     	;# 
  3018  0810                     	;# 
  3019  0811                     	;# 
  3020  0812                     	;# 
  3021  0812                     	;# 
  3022  0813                     	;# 
  3023  0814                     	;# 
  3024  0815                     	;# 
  3025  0816                     	;# 
  3026  0817                     	;# 
  3027  0818                     	;# 
  3028  0819                     	;# 
  3029  081A                     	;# 
  3030  081A                     	;# 
  3031  081B                     	;# 
  3032  081C                     	;# 
  3033  081C                     	;# 
  3034  081D                     	;# 
  3035  088C                     	;# 
  3036  088D                     	;# 
  3037  088E                     	;# 
  3038  088F                     	;# 
  3039  088F                     	;# 
  3040  0890                     	;# 
  3041  0891                     	;# 
  3042  0892                     	;# 
  3043  0893                     	;# 
  3044  0893                     	;# 
  3045  0894                     	;# 
  3046  0895                     	;# 
  3047  0896                     	;# 
  3048  0897                     	;# 
  3049  0897                     	;# 
  3050  0898                     	;# 
  3051  0899                     	;# 
  3052  0D8C                     	;# 
  3053  0D8C                     	;# 
  3054  0D8D                     	;# 
  3055  0D8E                     	;# 
  3056  0D8F                     	;# 
  3057  0D8F                     	;# 
  3058  0D90                     	;# 
  3059  0D91                     	;# 
  3060  0D92                     	;# 
  3061  0D92                     	;# 
  3062  0D93                     	;# 
  3063  0D94                     	;# 
  3064  0D95                     	;# 
  3065  0D95                     	;# 
  3066  0D96                     	;# 
  3067  0D97                     	;# 
  3068  0D98                     	;# 
  3069  0D99                     	;# 
  3070  0D9A                     	;# 
  3071  0D9B                     	;# 
  3072  0D9C                     	;# 
  3073  0D9D                     	;# 
  3074  0D9E                     	;# 
  3075  0D9E                     	;# 
  3076  0D9F                     	;# 
  3077  0DA0                     	;# 
  3078  0DA1                     	;# 
  3079  0DA1                     	;# 
  3080  0DA2                     	;# 
  3081  0DA3                     	;# 
  3082  0DA4                     	;# 
  3083  0DA4                     	;# 
  3084  0DA5                     	;# 
  3085  0DA6                     	;# 
  3086  0DA7                     	;# 
  3087  0DA7                     	;# 
  3088  0DA8                     	;# 
  3089  0DA9                     	;# 
  3090  0DAA                     	;# 
  3091  0DAB                     	;# 
  3092  0DAC                     	;# 
  3093  0DAD                     	;# 
  3094  0DAE                     	;# 
  3095  0DAF                     	;# 
  3096  0E0F                     	;# 
  3097  0E10                     	;# 
  3098  0E11                     	;# 
  3099  0E12                     	;# 
  3100  0E13                     	;# 
  3101  0E14                     	;# 
  3102  0E15                     	;# 
  3103  0E16                     	;# 
  3104  0E17                     	;# 
  3105  0E18                     	;# 
  3106  0E19                     	;# 
  3107  0E1A                     	;# 
  3108  0E1B                     	;# 
  3109  0E1C                     	;# 
  3110  0E1D                     	;# 
  3111  0E1E                     	;# 
  3112  0E1F                     	;# 
  3113  0E20                     	;# 
  3114  0E21                     	;# 
  3115  0E22                     	;# 
  3116  0E23                     	;# 
  3117  0E24                     	;# 
  3118  0E25                     	;# 
  3119  0E26                     	;# 
  3120  0E27                     	;# 
  3121  0E28                     	;# 
  3122  0E29                     	;# 
  3123  0E2A                     	;# 
  3124  0E2B                     	;# 
  3125  0E2C                     	;# 
  3126  0E2D                     	;# 
  3127  0E2E                     	;# 
  3128  0E90                     	;# 
  3129  0E91                     	;# 
  3130  0E92                     	;# 
  3131  0E94                     	;# 
  3132  0E95                     	;# 
  3133  0E9C                     	;# 
  3134  0E9D                     	;# 
  3135  0E9E                     	;# 
  3136  0E9F                     	;# 
  3137  0EA0                     	;# 
  3138  0EA1                     	;# 
  3139  0EA2                     	;# 
  3140  0EA3                     	;# 
  3141  0EA4                     	;# 
  3142  0EA5                     	;# 
  3143  0EA6                     	;# 
  3144  0EA7                     	;# 
  3145  0F0F                     	;# 
  3146  0F10                     	;# 
  3147  0F11                     	;# 
  3148  0F12                     	;# 
  3149  0F13                     	;# 
  3150  0F14                     	;# 
  3151  0F15                     	;# 
  3152  0F16                     	;# 
  3153  0F17                     	;# 
  3154  0F18                     	;# 
  3155  0F19                     	;# 
  3156  0F1A                     	;# 
  3157  0F1B                     	;# 
  3158  0F1C                     	;# 
  3159  0F1D                     	;# 
  3160  0F1E                     	;# 
  3161  0F1F                     	;# 
  3162  0F20                     	;# 
  3163  0F21                     	;# 
  3164  0F22                     	;# 
  3165  0F23                     	;# 
  3166  0F24                     	;# 
  3167  0F25                     	;# 
  3168  0F26                     	;# 
  3169  0F27                     	;# 
  3170  0F28                     	;# 
  3171  0F29                     	;# 
  3172  0F2A                     	;# 
  3173  0F2B                     	;# 
  3174  0F2C                     	;# 
  3175  0F2D                     	;# 
  3176  0F2E                     	;# 
  3177  0F2F                     	;# 
  3178  0F30                     	;# 
  3179  0F31                     	;# 
  3180  0F32                     	;# 
  3181  0F33                     	;# 
  3182  0F34                     	;# 
  3183  0F35                     	;# 
  3184  0F36                     	;# 
  3185  0F37                     	;# 
  3186  0FE4                     	;# 
  3187  0FE5                     	;# 
  3188  0FE6                     	;# 
  3189  0FE7                     	;# 
  3190  0FE8                     	;# 
  3191  0FE9                     	;# 
  3192  0FEA                     	;# 
  3193  0FEB                     	;# 
  3194  0FED                     	;# 
  3195  0FEE                     	;# 
  3196  0FEF                     	;# 
  3197                           
  3198 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  3199  0000                     
  3200 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  3201  0000                     
  3202 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  3203  0000                     
  3204                           	psect	idataBANK2
  3205  0A49                     __pidataBANK2:	
  3206                           
  3207                           ;initializer for _hrDisp
  3208  0A49  3448               	retlw	72
  3209  0A4A  3465               	retlw	101
  3210  0A4B  3461               	retlw	97
  3211  0A4C  3472               	retlw	114
  3212  0A4D  3474               	retlw	116
  3213  0A4E  3420               	retlw	32
  3214  0A4F  3452               	retlw	82
  3215  0A50  3461               	retlw	97
  3216  0A51  3474               	retlw	116
  3217  0A52  3465               	retlw	101
  3218  0A53  343A               	retlw	58
  3219  0A54  3420               	retlw	32
  3220  0A55  3400               	retlw	0
  3221                           
  3222                           ;initializer for _distanceDisp
  3223  0A56  3444               	retlw	68
  3224  0A57  3469               	retlw	105
  3225  0A58  3473               	retlw	115
  3226  0A59  3474               	retlw	116
  3227  0A5A  3461               	retlw	97
  3228  0A5B  346E               	retlw	110
  3229  0A5C  3463               	retlw	99
  3230  0A5D  3465               	retlw	101
  3231  0A5E  343A               	retlw	58
  3232  0A5F  3420               	retlw	32
  3233  0A60  3400               	retlw	0
  3234                           
  3235                           ;initializer for _speedDisp
  3236  0A61  3453               	retlw	83
  3237  0A62  3470               	retlw	112
  3238  0A63  3465               	retlw	101
  3239  0A64  3465               	retlw	101
  3240  0A65  3464               	retlw	100
  3241  0A66  343A               	retlw	58
  3242  0A67  3420               	retlw	32
  3243  0A68  3400               	retlw	0
  3244                           
  3245                           	psect	nvBANK0
  3246  0051                     __pnvBANK0:	
  3247  0051                     _TMR0_InterruptHandler:	
  3248  0051                     	ds	2
  3249  0053                     _IOCCF7_InterruptHandler:	
  3250  0053                     	ds	2
  3251  0055                     _EUSART_ErrorHandler:	
  3252  0055                     	ds	2
  3253  0057                     _EUSART_OverrunErrorHandler:	
  3254  0057                     	ds	2
  3255  0059                     _EUSART_FramingErrorHandler:	
  3256  0059                     	ds	2
  3257  005B                     _timer0ReloadVal:	
  3258  005B                     	ds	1
  3259  0015                     _TMR0	set	21
  3260  000B                     _INTCONbits	set	11
  3261  0010                     _PIR1bits	set	16
  3262  0095                     _OPTION_REG	set	149
  3263  0095                     _OPTION_REGbits	set	149
  3264  008E                     _TRISC	set	142
  3265  008D                     _TRISB	set	141
  3266  008C                     _TRISA	set	140
  3267  0098                     _OSCTUNE	set	152
  3268  0099                     _OSCCON	set	153
  3269  010E                     _LATC	set	270
  3270  010D                     _LATB	set	269
  3271  010C                     _LATA	set	268
  3272  0116                     _BORCON	set	278
  3273  018C                     _ANSELA	set	396
  3274  018D                     _ANSELB	set	397
  3275  018E                     _ANSELC	set	398
  3276  019A                     _TX1REG	set	410
  3277  0199                     _RC1REG	set	409
  3278  019D                     _RC1STAbits	set	413
  3279  019E                     _TX1STAbits	set	414
  3280  019C                     _SPBRGH	set	412
  3281  019B                     _SPBRGL	set	411
  3282  019E                     _TX1STA	set	414
  3283  019D                     _RC1STA	set	413
  3284  019F                     _BAUD1CON	set	415
  3285  020E                     _WPUC	set	526
  3286  020C                     _WPUA	set	524
  3287  020D                     _WPUB	set	525
  3288  028E                     _ODCONC	set	654
  3289  028D                     _ODCONB	set	653
  3290  028C                     _ODCONA	set	652
  3291  030E                     _SLRCONC	set	782
  3292  030D                     _SLRCONB	set	781
  3293  030C                     _SLRCONA	set	780
  3294  0397                     _IOCCPbits	set	919
  3295  0398                     _IOCCNbits	set	920
  3296  0399                     _IOCCFbits	set	921
  3297  0E9F                     _RB7PPS	set	3743
  3298                           
  3299                           	psect	stringtext1
  3300  1000                     __pstringtext1:	
  3301  1000                     STR_1:	
  3302  1000  3425               	retlw	37	;'%'
  3303  1001  3464               	retlw	100	;'d'
  3304  1002  3420               	retlw	32	;' '
  3305  1003  346B               	retlw	107	;'k'
  3306  1004  346D               	retlw	109	;'m'
  3307  1005  3468               	retlw	104	;'h'
  3308  1006  3400               	retlw	0
  3309                           
  3310                           	psect	stringtext2
  3311  1007                     __pstringtext2:	
  3312  1007                     STR_2:	
  3313  1007  3425               	retlw	37	;'%'
  3314  1008  3464               	retlw	100	;'d'
  3315  1009  3420               	retlw	32	;' '
  3316  100A  346D               	retlw	109	;'m'
  3317  100B  3400               	retlw	0
  3318                           
  3319                           	psect	stringtext3
  3320  100C                     __pstringtext3:	
  3321  100C                     STR_6:	
  3322  100C  347C               	retlw	124	;'|'
  3323  100D  342D               	retlw	45	;'-'
  3324  100E  3400               	retlw	0
  3325                           
  3326                           	psect	stringtext4
  3327  100F                     __pstringtext4:	
  3328  100F                     STR_3:	
  3329  100F  3420               	retlw	32	;' '
  3330  1010  3400               	retlw	0
  3331                           
  3332                           	psect	stringtext5
  3333  0000                     __pstringtext5:	
  3334  100F                     
  3335                           ; #config settings
  3336  0000                     
  3337                           	psect	cinit
  3338  0016                     start_initialization:	
  3339  0016                     __initialization:	
  3340                           
  3341                           ; Initialize objects allocated to BANK2
  3342  0016  3049               	movlw	low __pidataBANK2
  3343  0017  0084               	movwf	4
  3344  0018  308A               	movlw	(high __pidataBANK2)| (0+128)
  3345  0019  0085               	movwf	5
  3346  001A  3020               	movlw	low __pdataBANK2
  3347  001B  0086               	movwf	6
  3348  001C  3001               	movlw	high __pdataBANK2
  3349  001D  0087               	movwf	7
  3350  001E  3020               	movlw	32
  3351  001F  3189  2110  3180   	fcall	init_ram
  3352                           
  3353                           ; Clear objects allocated to BANK0
  3354  0022  3040               	movlw	low __pbssBANK0
  3355  0023  0084               	movwf	4
  3356  0024  3000               	movlw	high __pbssBANK0
  3357  0025  0085               	movwf	5
  3358  0026  3011               	movlw	17
  3359  0027  3189  210A  3180   	fcall	clear_ram0
  3360                           
  3361                           ; Clear objects allocated to BANK2
  3362  002A  305A               	movlw	low __pbssBANK2
  3363  002B  0084               	movwf	4
  3364  002C  3001               	movlw	high __pbssBANK2
  3365  002D  0085               	movwf	5
  3366  002E  3008               	movlw	8
  3367  002F  3189  210A  3180   	fcall	clear_ram0
  3368                           
  3369                           ; Clear objects allocated to BANK3
  3370  0032  30A0               	movlw	low __pbssBANK3
  3371  0033  0084               	movwf	4
  3372  0034  3001               	movlw	high __pbssBANK3
  3373  0035  0085               	movwf	5
  3374  0036  3020               	movlw	32
  3375  0037  3189  210A         	fcall	clear_ram0
  3376  0039                     end_of_initialization:	
  3377                           ;End of C runtime variable initialization code
  3378                           
  3379  0039                     __end_of__initialization:	
  3380  0039  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3381  003A  0020               	movlb	0
  3382  003B  318E  2E74         	ljmp	_main	;jump to C main() function
  3383                           
  3384                           	psect	bssBANK0
  3385  0040                     __pbssBANK0:	
  3386  0040                     _counter:	
  3387  0040                     	ds	4
  3388  0044                     _nout:	
  3389  0044                     	ds	2
  3390  0046                     _width:	
  3391  0046                     	ds	2
  3392  0048                     _prec:	
  3393  0048                     	ds	2
  3394  004A                     _flags:	
  3395  004A                     	ds	2
  3396  004C                     _eusartRxLastError:	
  3397  004C                     	ds	1
  3398  004D                     _rpm:	
  3399  004D                     	ds	4
  3400                           
  3401                           	psect	bssBANK2
  3402  015A                     __pbssBANK2:	
  3403  015A                     _distance:	
  3404  015A                     	ds	4
  3405  015E                     _speed:	
  3406  015E                     	ds	4
  3407                           
  3408                           	psect	dataBANK2
  3409  0120                     __pdataBANK2:	
  3410  0120                     _hrDisp:	
  3411  0120                     	ds	13
  3412  012D                     _distanceDisp:	
  3413  012D                     	ds	11
  3414  0138                     _speedDisp:	
  3415  0138                     	ds	8
  3416                           
  3417                           	psect	bssBANK3
  3418  01A0                     __pbssBANK3:	
  3419  01A0                     _dbuf:	
  3420  01A0                     	ds	32
  3421                           
  3422                           	psect	inittext
  3423  0910                     init_ram:	
  3424  0910  00FE               	movwf	126
  3425  0911                     initloop:	
  3426  0911  0012               	moviw fsr0++
  3427  0912  001E               	movwi fsr1++
  3428  0913  0BFE               	decfsz	126,f
  3429  0914  2911               	goto	initloop
  3430  0915  3400               	retlw	0
  3431                           
  3432                           	psect	clrtext
  3433  090A                     clear_ram0:	
  3434                           ;	Called with FSR0 containing the base address, and
  3435                           ;	WREG with the size to clear
  3436                           
  3437  090A  0064               	clrwdt	;clear the watchdog before getting into this loop
  3438  090B                     clrloop0:	
  3439  090B  0180               	clrf	0	;clear RAM location pointed to by FSR
  3440  090C  3101               	addfsr 0,1
  3441  090D  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3442  090E  290B               	goto	clrloop0	;have we reached the end yet?
  3443  090F  3400               	retlw	0	;all done for this memory range, return
  3444                           
  3445                           	psect	cstackBANK2
  3446  0140                     __pcstackBANK2:	
  3447  0140                     ??_vfprintf:	
  3448                           
  3449                           ; 1 bytes @ 0x0
  3450  0140                     	ds	2
  3451  0142                     vfprintf@fp:	
  3452                           
  3453                           ; 1 bytes @ 0x2
  3454  0142                     	ds	1
  3455  0143                     vfprintf@cfmt:	
  3456                           
  3457                           ; 2 bytes @ 0x3
  3458  0143                     	ds	2
  3459  0145                     ?_printf:	
  3460  0145                     printf@fmt:	
  3461                           ; 2 bytes @ 0x5
  3462                           
  3463                           
  3464                           ; 2 bytes @ 0x5
  3465  0145                     	ds	6
  3466  014B                     printf@ap:	
  3467                           
  3468                           ; 1 bytes @ 0xB
  3469  014B                     	ds	1
  3470  014C                     ?_clearLine:	
  3471  014C                     clearLine@lineNo:	
  3472                           ; 1 bytes @ 0xC
  3473                           
  3474                           
  3475                           ; 2 bytes @ 0xC
  3476  014C                     	ds	2
  3477  014E                     ??_clearLine:	
  3478                           
  3479                           ; 1 bytes @ 0xE
  3480  014E                     	ds	1
  3481  014F                     clearLine@i:	
  3482                           
  3483                           ; 2 bytes @ 0xF
  3484  014F                     	ds	2
  3485  0151                     clearLine@i_604:	
  3486                           
  3487                           ; 2 bytes @ 0x11
  3488  0151                     	ds	2
  3489  0153                     clearLine@i_606:	
  3490                           
  3491                           ; 2 bytes @ 0x13
  3492  0153                     	ds	2
  3493  0155                     ??_main:	
  3494                           
  3495                           ; 1 bytes @ 0x15
  3496  0155                     	ds	1
  3497  0156                     main@speedInt:	
  3498                           
  3499                           ; 2 bytes @ 0x16
  3500  0156                     	ds	2
  3501  0158                     main@distInt:	
  3502                           
  3503                           ; 2 bytes @ 0x18
  3504  0158                     	ds	2
  3505                           
  3506                           	psect	cstackBANK1
  3507  00A0                     __pcstackBANK1:	
  3508  00A0                     ?_EUSART_SetFramingErrorHandler:	
  3509  00A0                     ?_EUSART_SetOverrunErrorHandler:	
  3510                           ; 1 bytes @ 0x0
  3511                           
  3512  00A0                     ?_EUSART_SetErrorHandler:	
  3513                           ; 1 bytes @ 0x0
  3514                           
  3515  00A0                     ??_OSCILLATOR_Initialize:	
  3516                           ; 1 bytes @ 0x0
  3517                           
  3518  00A0                     ?_IOCCF7_SetInterruptHandler:	
  3519                           ; 1 bytes @ 0x0
  3520                           
  3521  00A0                     ?_TMR0_SetInterruptHandler:	
  3522                           ; 1 bytes @ 0x0
  3523                           
  3524  00A0                     ??_EUSART_is_tx_ready:	
  3525                           ; 1 bytes @ 0x0
  3526                           
  3527  00A0                     ??_EUSART_Write:	
  3528                           ; 1 bytes @ 0x0
  3529                           
  3530  00A0                     ?_strlen:	
  3531                           ; 1 bytes @ 0x0
  3532                           
  3533  00A0                     ?___fltol:	
  3534                           ; 2 bytes @ 0x0
  3535                           
  3536  00A0                     ?___aodiv:	
  3537                           ; 4 bytes @ 0x0
  3538                           
  3539  00A0                     ?___aomod:	
  3540                           ; 8 bytes @ 0x0
  3541                           
  3542  00A0                     _EUSART_is_tx_ready$167:	
  3543                           ; 8 bytes @ 0x0
  3544                           
  3545  00A0                     EUSART_Write@txData:	
  3546                           ; 1 bytes @ 0x0
  3547                           
  3548  00A0                     EUSART_SetFramingErrorHandler@interruptHandler:	
  3549                           ; 1 bytes @ 0x0
  3550                           
  3551  00A0                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  3552                           ; 2 bytes @ 0x0
  3553                           
  3554  00A0                     EUSART_SetErrorHandler@interruptHandler:	
  3555                           ; 2 bytes @ 0x0
  3556                           
  3557  00A0                     IOCCF7_SetInterruptHandler@InterruptHandler:	
  3558                           ; 2 bytes @ 0x0
  3559                           
  3560  00A0                     TMR0_SetInterruptHandler@InterruptHandler:	
  3561                           ; 2 bytes @ 0x0
  3562                           
  3563  00A0                     ___fltol@f1:	
  3564                           ; 2 bytes @ 0x0
  3565                           
  3566  00A0                     ___aodiv@divisor:	
  3567                           ; 4 bytes @ 0x0
  3568                           
  3569  00A0                     ___aomod@divisor:	
  3570                           ; 8 bytes @ 0x0
  3571                           
  3572                           
  3573                           ; 8 bytes @ 0x0
  3574  00A0                     	ds	1
  3575  00A1                     ?_setCursor:	
  3576  00A1                     ??_putch:	
  3577                           ; 1 bytes @ 0x1
  3578                           
  3579  00A1                     putch@txData:	
  3580                           ; 1 bytes @ 0x1
  3581                           
  3582  00A1                     setCursor@b:	
  3583                           ; 1 bytes @ 0x1
  3584                           
  3585                           
  3586                           ; 1 bytes @ 0x1
  3587  00A1                     	ds	1
  3588  00A2                     ??_EUSART_SetFramingErrorHandler:	
  3589  00A2                     ??_EUSART_SetOverrunErrorHandler:	
  3590                           ; 1 bytes @ 0x2
  3591                           
  3592  00A2                     ??_EUSART_SetErrorHandler:	
  3593                           ; 1 bytes @ 0x2
  3594                           
  3595  00A2                     ??_PIN_MANAGER_Initialize:	
  3596                           ; 1 bytes @ 0x2
  3597                           
  3598  00A2                     ??_TMR0_Initialize:	
  3599                           ; 1 bytes @ 0x2
  3600                           
  3601  00A2                     ??_IOCCF7_SetInterruptHandler:	
  3602                           ; 1 bytes @ 0x2
  3603                           
  3604  00A2                     ??_TMR0_SetInterruptHandler:	
  3605                           ; 1 bytes @ 0x2
  3606                           
  3607  00A2                     ??_setCursor:	
  3608                           ; 1 bytes @ 0x2
  3609                           
  3610  00A2                     ??_strlen:	
  3611                           ; 1 bytes @ 0x2
  3612                           
  3613  00A2                     ??_EUSART_Initialize:	
  3614                           ; 1 bytes @ 0x2
  3615                           
  3616  00A2                     ?_fputc:	
  3617                           ; 1 bytes @ 0x2
  3618                           
  3619  00A2                     fputc@c:	
  3620                           ; 2 bytes @ 0x2
  3621                           
  3622                           
  3623                           ; 2 bytes @ 0x2
  3624  00A2                     	ds	1
  3625  00A3                     ??_SYSTEM_Initialize:	
  3626  00A3                     strlen@a:	
  3627                           ; 1 bytes @ 0x3
  3628                           
  3629                           
  3630                           ; 1 bytes @ 0x3
  3631  00A3                     	ds	1
  3632  00A4                     ??___fltol:	
  3633  00A4                     setCursor@a:	
  3634                           ; 1 bytes @ 0x4
  3635                           
  3636  00A4                     fputc@fp:	
  3637                           ; 1 bytes @ 0x4
  3638                           
  3639  00A4                     strlen@s:	
  3640                           ; 1 bytes @ 0x4
  3641                           
  3642                           
  3643                           ; 1 bytes @ 0x4
  3644  00A4                     	ds	1
  3645  00A5                     ??_fputc:	
  3646                           
  3647                           ; 1 bytes @ 0x5
  3648  00A5                     	ds	3
  3649  00A8                     ___aodiv@dividend:	
  3650  00A8                     ___aomod@dividend:	
  3651                           ; 8 bytes @ 0x8
  3652                           
  3653                           
  3654                           ; 8 bytes @ 0x8
  3655  00A8                     	ds	1
  3656  00A9                     ___fltol@sign1:	
  3657                           
  3658                           ; 1 bytes @ 0x9
  3659  00A9                     	ds	1
  3660  00AA                     ?_fputs:	
  3661  00AA                     ___fltol@exp1:	
  3662                           ; 2 bytes @ 0xA
  3663                           
  3664  00AA                     fputs@s:	
  3665                           ; 1 bytes @ 0xA
  3666                           
  3667                           
  3668                           ; 2 bytes @ 0xA
  3669  00AA                     	ds	2
  3670  00AC                     fputs@fp:	
  3671                           
  3672                           ; 1 bytes @ 0xC
  3673  00AC                     	ds	1
  3674  00AD                     ??_fputs:	
  3675                           
  3676                           ; 1 bytes @ 0xD
  3677  00AD                     	ds	3
  3678  00B0                     ??___aodiv:	
  3679  00B0                     ??___aomod:	
  3680                           ; 1 bytes @ 0x10
  3681                           
  3682  00B0                     fputs@c:	
  3683                           ; 1 bytes @ 0x10
  3684                           
  3685                           
  3686                           ; 1 bytes @ 0x10
  3687  00B0                     	ds	1
  3688  00B1                     ___aodiv@counter:	
  3689  00B1                     ___aomod@counter:	
  3690                           ; 1 bytes @ 0x11
  3691                           
  3692  00B1                     fputs@i:	
  3693                           ; 1 bytes @ 0x11
  3694                           
  3695                           
  3696                           ; 2 bytes @ 0x11
  3697  00B1                     	ds	1
  3698  00B2                     ___aodiv@sign:	
  3699  00B2                     ___aomod@sign:	
  3700                           ; 1 bytes @ 0x12
  3701                           
  3702                           
  3703                           ; 1 bytes @ 0x12
  3704  00B2                     	ds	1
  3705  00B3                     ?_puts:	
  3706  00B3                     ?_abs:	
  3707                           ; 2 bytes @ 0x13
  3708                           
  3709  00B3                     ?_pad:	
  3710                           ; 2 bytes @ 0x13
  3711                           
  3712  00B3                     pad@buf:	
  3713                           ; 2 bytes @ 0x13
  3714                           
  3715  00B3                     abs@a:	
  3716                           ; 1 bytes @ 0x13
  3717                           
  3718  00B3                     puts@s:	
  3719                           ; 2 bytes @ 0x13
  3720                           
  3721  00B3                     ___aodiv@quotient:	
  3722                           ; 2 bytes @ 0x13
  3723                           
  3724                           
  3725                           ; 8 bytes @ 0x13
  3726  00B3                     	ds	1
  3727  00B4                     pad@p:	
  3728                           
  3729                           ; 2 bytes @ 0x14
  3730  00B4                     	ds	1
  3731  00B5                     ??_puts:	
  3732  00B5                     ??_abs:	
  3733                           ; 1 bytes @ 0x15
  3734                           
  3735                           
  3736                           ; 1 bytes @ 0x15
  3737  00B5                     	ds	1
  3738  00B6                     ??_pad:	
  3739                           
  3740                           ; 1 bytes @ 0x16
  3741  00B6                     	ds	1
  3742  00B7                     _puts$1049:	
  3743  00B7                     pad@i:	
  3744                           ; 1 bytes @ 0x17
  3745                           
  3746                           
  3747                           ; 2 bytes @ 0x17
  3748  00B7                     	ds	1
  3749  00B8                     ??_resetCursor:	
  3750  00B8                     ??_writeString:	
  3751                           ; 1 bytes @ 0x18
  3752                           
  3753  00B8                     writeString@string:	
  3754                           ; 1 bytes @ 0x18
  3755                           
  3756                           
  3757                           ; 1 bytes @ 0x18
  3758  00B8                     	ds	1
  3759  00B9                     pad@w:	
  3760                           
  3761                           ; 2 bytes @ 0x19
  3762  00B9                     	ds	2
  3763  00BB                     pad@fp:	
  3764                           
  3765                           ; 1 bytes @ 0x1B
  3766  00BB                     	ds	1
  3767  00BC                     ?_dtoa:	
  3768  00BC                     dtoa@d:	
  3769                           ; 2 bytes @ 0x1C
  3770                           
  3771                           
  3772                           ; 8 bytes @ 0x1C
  3773  00BC                     	ds	8
  3774  00C4                     ??_dtoa:	
  3775                           
  3776                           ; 1 bytes @ 0x24
  3777  00C4                     	ds	3
  3778  00C7                     _dtoa$703:	
  3779                           
  3780                           ; 2 bytes @ 0x27
  3781  00C7                     	ds	2
  3782  00C9                     dtoa@fp:	
  3783                           
  3784                           ; 1 bytes @ 0x29
  3785  00C9                     	ds	1
  3786  00CA                     dtoa@p:	
  3787                           
  3788                           ; 2 bytes @ 0x2A
  3789  00CA                     	ds	2
  3790  00CC                     dtoa@w:	
  3791                           
  3792                           ; 2 bytes @ 0x2C
  3793  00CC                     	ds	2
  3794  00CE                     dtoa@s:	
  3795                           
  3796                           ; 2 bytes @ 0x2E
  3797  00CE                     	ds	2
  3798  00D0                     dtoa@n:	
  3799                           
  3800                           ; 8 bytes @ 0x30
  3801  00D0                     	ds	8
  3802  00D8                     dtoa@i:	
  3803                           
  3804                           ; 2 bytes @ 0x38
  3805  00D8                     	ds	2
  3806  00DA                     ?_vfpfcnvrt:	
  3807  00DA                     vfpfcnvrt@fmt:	
  3808                           ; 2 bytes @ 0x3A
  3809                           
  3810                           
  3811                           ; 1 bytes @ 0x3A
  3812  00DA                     	ds	1
  3813  00DB                     vfpfcnvrt@ap:	
  3814                           
  3815                           ; 1 bytes @ 0x3B
  3816  00DB                     	ds	1
  3817  00DC                     ??_vfpfcnvrt:	
  3818                           
  3819                           ; 1 bytes @ 0x3C
  3820  00DC                     	ds	5
  3821  00E1                     vfpfcnvrt@ll:	
  3822                           
  3823                           ; 8 bytes @ 0x41
  3824  00E1                     	ds	8
  3825  00E9                     vfpfcnvrt@vp:	
  3826                           
  3827                           ; 2 bytes @ 0x49
  3828  00E9                     	ds	2
  3829  00EB                     vfpfcnvrt@fp:	
  3830                           
  3831                           ; 1 bytes @ 0x4B
  3832  00EB                     	ds	1
  3833  00EC                     ?_vfprintf:	
  3834  00EC                     vfprintf@fmt:	
  3835                           ; 2 bytes @ 0x4C
  3836                           
  3837                           
  3838                           ; 2 bytes @ 0x4C
  3839  00EC                     	ds	2
  3840  00EE                     vfprintf@ap:	
  3841                           
  3842                           ; 1 bytes @ 0x4E
  3843  00EE                     	ds	1
  3844  00EF                     ??_printf:	
  3845                           
  3846                           ; 1 bytes @ 0x4F
  3847  00EF                     	ds	1
  3848                           
  3849                           	psect	cstackCOMMON
  3850  0070                     __pcstackCOMMON:	
  3851  0070                     ?_PIN_MANAGER_Initialize:	
  3852  0070                     ?_OSCILLATOR_Initialize:	
  3853                           ; 1 bytes @ 0x0
  3854                           
  3855  0070                     ?_TMR0_Initialize:	
  3856                           ; 1 bytes @ 0x0
  3857                           
  3858  0070                     ?_IOCCF7_DefaultInterruptHandler:	
  3859                           ; 1 bytes @ 0x0
  3860                           
  3861  0070                     ??_IOCCF7_DefaultInterruptHandler:	
  3862                           ; 1 bytes @ 0x0
  3863                           
  3864  0070                     ?_IOCCF7_ISR:	
  3865                           ; 1 bytes @ 0x0
  3866                           
  3867  0070                     ?_TMR0_DefaultInterruptHandler:	
  3868                           ; 1 bytes @ 0x0
  3869                           
  3870  0070                     ??_TMR0_DefaultInterruptHandler:	
  3871                           ; 1 bytes @ 0x0
  3872                           
  3873  0070                     ?_timerISR:	
  3874                           ; 1 bytes @ 0x0
  3875                           
  3876  0070                     ??_timerISR:	
  3877                           ; 1 bytes @ 0x0
  3878                           
  3879  0070                     ?_speedCalc:	
  3880                           ; 1 bytes @ 0x0
  3881                           
  3882  0070                     ?_resetCursor:	
  3883                           ; 1 bytes @ 0x0
  3884                           
  3885  0070                     ?_writeString:	
  3886                           ; 1 bytes @ 0x0
  3887                           
  3888  0070                     ?_EUSART_Initialize:	
  3889                           ; 1 bytes @ 0x0
  3890                           
  3891  0070                     ?_EUSART_is_tx_ready:	
  3892                           ; 1 bytes @ 0x0
  3893                           
  3894  0070                     ?_EUSART_Write:	
  3895                           ; 1 bytes @ 0x0
  3896                           
  3897  0070                     ?_putch:	
  3898                           ; 1 bytes @ 0x0
  3899                           
  3900  0070                     ?_SYSTEM_Initialize:	
  3901                           ; 1 bytes @ 0x0
  3902                           
  3903  0070                     ?_PIN_MANAGER_IOC:	
  3904                           ; 1 bytes @ 0x0
  3905                           
  3906  0070                     ?_TMR0_ISR:	
  3907                           ; 1 bytes @ 0x0
  3908                           
  3909  0070                     ??_TMR0_ISR:	
  3910                           ; 1 bytes @ 0x0
  3911                           
  3912  0070                     ?_INTERRUPT_InterruptManager:	
  3913                           ; 1 bytes @ 0x0
  3914                           
  3915  0070                     ?_main:	
  3916                           ; 1 bytes @ 0x0
  3917                           
  3918  0070                     ?__Umul8_16:	
  3919                           ; 1 bytes @ 0x0
  3920                           
  3921  0070                     ?___aldiv:	
  3922                           ; 2 bytes @ 0x0
  3923                           
  3924  0070                     ?___fladd:	
  3925                           ; 4 bytes @ 0x0
  3926                           
  3927  0070                     __Umul8_16@multiplicand:	
  3928                           ; 4 bytes @ 0x0
  3929                           
  3930  0070                     ___aldiv@divisor:	
  3931                           ; 1 bytes @ 0x0
  3932                           
  3933  0070                     ___fladd@b:	
  3934                           ; 4 bytes @ 0x0
  3935                           
  3936                           
  3937                           ; 4 bytes @ 0x0
  3938  0070                     	ds	2
  3939  0072                     ??__Umul8_16:	
  3940                           
  3941                           ; 1 bytes @ 0x2
  3942  0072                     	ds	2
  3943  0074                     __Umul8_16@product:	
  3944  0074                     ___aldiv@dividend:	
  3945                           ; 2 bytes @ 0x4
  3946                           
  3947  0074                     ___fladd@a:	
  3948                           ; 4 bytes @ 0x4
  3949                           
  3950                           
  3951                           ; 4 bytes @ 0x4
  3952  0074                     	ds	2
  3953  0076                     __Umul8_16@word_mpld:	
  3954                           
  3955                           ; 2 bytes @ 0x6
  3956  0076                     	ds	2
  3957  0078                     ??___aldiv:	
  3958  0078                     ___fladd@signs:	
  3959                           ; 1 bytes @ 0x8
  3960                           
  3961  0078                     __Umul8_16@multiplier:	
  3962                           ; 1 bytes @ 0x8
  3963                           
  3964                           
  3965                           ; 1 bytes @ 0x8
  3966  0078                     	ds	1
  3967  0079                     ??___lmul:	
  3968  0079                     ??___flmul:	
  3969                           ; 1 bytes @ 0x9
  3970                           
  3971  0079                     ___fladd@aexp:	
  3972                           ; 1 bytes @ 0x9
  3973                           
  3974  0079                     ___lmul@product:	
  3975                           ; 1 bytes @ 0x9
  3976                           
  3977                           
  3978                           ; 4 bytes @ 0x9
  3979  0079                     	ds	1
  3980  007A                     ___fladd@bexp:	
  3981                           
  3982                           ; 1 bytes @ 0xA
  3983  007A                     	ds	1
  3984  007B                     ___fladd@grs:	
  3985                           
  3986                           ; 1 bytes @ 0xB
  3987  007B                     	ds	3
  3988  007E                     ??_IOCCF7_ISR:	
  3989  007E                     ??_speedCalc:	
  3990                           ; 1 bytes @ 0xE
  3991                           
  3992  007E                     ??_PIN_MANAGER_IOC:	
  3993                           ; 1 bytes @ 0xE
  3994                           
  3995  007E                     ??_INTERRUPT_InterruptManager:	
  3996                           ; 1 bytes @ 0xE
  3997                           
  3998                           
  3999                           	psect	cstackBANK0
  4000  0020                     __pcstackBANK0:	
  4001                           ; 1 bytes @ 0xE
  4002                           
  4003  0020                     ??___fladd:	
  4004  0020                     ?___flmul:	
  4005                           ; 1 bytes @ 0x0
  4006                           
  4007  0020                     ___aldiv@counter:	
  4008                           ; 4 bytes @ 0x0
  4009                           
  4010  0020                     ___flmul@b:	
  4011                           ; 1 bytes @ 0x0
  4012                           
  4013                           
  4014                           ; 4 bytes @ 0x0
  4015  0020                     	ds	1
  4016  0021                     ___aldiv@sign:	
  4017                           
  4018                           ; 1 bytes @ 0x1
  4019  0021                     	ds	1
  4020  0022                     ___aldiv@quotient:	
  4021                           
  4022                           ; 4 bytes @ 0x2
  4023  0022                     	ds	2
  4024  0024                     ___flmul@a:	
  4025                           
  4026                           ; 4 bytes @ 0x4
  4027  0024                     	ds	2
  4028  0026                     ?___lmul:	
  4029  0026                     ___lmul@multiplier:	
  4030                           ; 4 bytes @ 0x6
  4031                           
  4032                           
  4033                           ; 4 bytes @ 0x6
  4034  0026                     	ds	2
  4035  0028                     ___flmul@sign:	
  4036                           
  4037                           ; 1 bytes @ 0x8
  4038  0028                     	ds	1
  4039  0029                     ___flmul@grs:	
  4040                           
  4041                           ; 4 bytes @ 0x9
  4042  0029                     	ds	1
  4043  002A                     ___lmul@multiplicand:	
  4044                           
  4045                           ; 4 bytes @ 0xA
  4046  002A                     	ds	3
  4047  002D                     ___flmul@aexp:	
  4048                           
  4049                           ; 1 bytes @ 0xD
  4050  002D                     	ds	1
  4051  002E                     ?___xxtofl:	
  4052  002E                     ___flmul@bexp:	
  4053                           ; 4 bytes @ 0xE
  4054                           
  4055  002E                     ___xxtofl@val:	
  4056                           ; 1 bytes @ 0xE
  4057                           
  4058                           
  4059                           ; 4 bytes @ 0xE
  4060  002E                     	ds	1
  4061  002F                     ___flmul@prod:	
  4062                           
  4063                           ; 4 bytes @ 0xF
  4064  002F                     	ds	3
  4065  0032                     ??___xxtofl:	
  4066                           
  4067                           ; 1 bytes @ 0x12
  4068  0032                     	ds	1
  4069  0033                     ___flmul@temp:	
  4070                           
  4071                           ; 2 bytes @ 0x13
  4072  0033                     	ds	3
  4073  0036                     ___xxtofl@sign:	
  4074                           
  4075                           ; 1 bytes @ 0x16
  4076  0036                     	ds	1
  4077  0037                     ___xxtofl@exp:	
  4078                           
  4079                           ; 1 bytes @ 0x17
  4080  0037                     	ds	1
  4081  0038                     ___xxtofl@arg:	
  4082                           
  4083                           ; 4 bytes @ 0x18
  4084  0038                     	ds	4
  4085  003C                     _speedCalc$1230:	
  4086                           
  4087                           ; 4 bytes @ 0x1C
  4088  003C                     	ds	4
  4089                           
  4090                           	psect	maintext
  4091  0E74                     __pmaintext:	
  4092 ;;
  4093 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  4094 ;;
  4095 ;; *************** function _main *****************
  4096 ;; Defined at:
  4097 ;;		line 35 in file "main.c"
  4098 ;; Parameters:    Size  Location     Type
  4099 ;;		None
  4100 ;; Auto vars:     Size  Location     Type
  4101 ;;  distInt         2   24[BANK2 ] int 
  4102 ;;  speedInt        2   22[BANK2 ] int 
  4103 ;; Return value:  Size  Location     Type
  4104 ;;                  1    wreg      void 
  4105 ;; Registers used:
  4106 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4107 ;; Tracked objects:
  4108 ;;		On entry : B1F/0
  4109 ;;		On exit  : 0/0
  4110 ;;		Unchanged: 0/0
  4111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4113 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  4114 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  4115 ;;      Totals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0
  4116 ;;Total ram usage:        5 bytes
  4117 ;; Hardware stack levels required when called:   16
  4118 ;; This function calls:
  4119 ;;		_IOCCF7_SetInterruptHandler
  4120 ;;		_SYSTEM_Initialize
  4121 ;;		_TMR0_SetInterruptHandler
  4122 ;;		___fltol
  4123 ;;		_clearLine
  4124 ;;		_printf
  4125 ;;		_resetCursor
  4126 ;;		_setCursor
  4127 ;;		_writeString
  4128 ;; This function is called by:
  4129 ;;		Startup code after reset
  4130 ;; This function uses a non-reentrant model
  4131 ;;
  4132                           
  4133                           
  4134                           ;psect for function _main
  4135  0E74                     _main:	
  4136                           
  4137                           ;main.c: 38:     SYSTEM_Initialize();
  4138                           
  4139                           ;incstack = 0
  4140                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4141  0E74  3189  2166  318E   	fcall	_SYSTEM_Initialize
  4142                           
  4143                           ;main.c: 41:     TMR0_SetInterruptHandler( timerISR ) ;
  4144  0E77  3052               	movlw	low _timerISR
  4145  0E78  0021               	movlb	1	; select bank1
  4146  0E79  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler^(0+128)
  4147  0E7A  3009               	movlw	high _timerISR
  4148  0E7B  00A1               	movwf	(TMR0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  4149  0E7C  3189  2149  318E   	fcall	_TMR0_SetInterruptHandler
  4150                           
  4151                           ;main.c: 42:     IOCCF7_SetInterruptHandler( speedCalc ) ;
  4152  0E7F  30D1               	movlw	low _speedCalc
  4153  0E80  0021               	movlb	1	; select bank1
  4154  0E81  00A0               	movwf	IOCCF7_SetInterruptHandler@InterruptHandler^(0+128)
  4155  0E82  300D               	movlw	high _speedCalc
  4156  0E83  00A1               	movwf	(IOCCF7_SetInterruptHandler@InterruptHandler^(0+128)+1)
  4157  0E84  3189  2140  318E   	fcall	_IOCCF7_SetInterruptHandler
  4158                           
  4159                           ;main.c: 45:     resetCursor() ;
  4160  0E87  3189  211D  318E   	fcall	_resetCursor
  4161                           
  4162                           ;main.c: 48:     setCursor(1,0) ;
  4163  0E8A  0021               	movlb	1	; select bank1
  4164  0E8B  01A1               	clrf	setCursor@b^(0+128)
  4165  0E8C  3001               	movlw	1
  4166  0E8D  318B  2351  318E   	fcall	_setCursor
  4167                           
  4168                           ;main.c: 49:     writeString(speedDisp);
  4169  0E90  3038               	movlw	(low (_speedDisp| (0+256)))& (0+255)
  4170  0E91  3189  21B0  318E   	fcall	_writeString
  4171                           
  4172                           ;main.c: 50:     setCursor(2,0) ;
  4173  0E94  0021               	movlb	1	; select bank1
  4174  0E95  01A1               	clrf	setCursor@b^(0+128)
  4175  0E96  3002               	movlw	2
  4176  0E97  318B  2351  318E   	fcall	_setCursor
  4177                           
  4178                           ;main.c: 51:     writeString(distanceDisp);
  4179  0E9A  302D               	movlw	(low (_distanceDisp| (0+256)))& (0+255)
  4180  0E9B  3189  21B0  318E   	fcall	_writeString
  4181                           
  4182                           ;main.c: 52:     setCursor(3,0) ;
  4183  0E9E  0021               	movlb	1	; select bank1
  4184  0E9F  01A1               	clrf	setCursor@b^(0+128)
  4185  0EA0  3003               	movlw	3
  4186  0EA1  318B  2351  318E   	fcall	_setCursor
  4187                           
  4188                           ;main.c: 53:     writeString(hrDisp);
  4189  0EA4  3020               	movlw	(low (_hrDisp| (0+256)))& (0+255)
  4190  0EA5  3189  21B0  318E   	fcall	_writeString
  4191                           
  4192                           ;main.c: 54:     setCursor(4,0) ;
  4193  0EA8  0021               	movlb	1	; select bank1
  4194  0EA9  01A1               	clrf	setCursor@b^(0+128)
  4195  0EAA  3004               	movlw	4
  4196  0EAB  318B  2351  318E   	fcall	_setCursor
  4197                           
  4198                           ;main.c: 57:     (INTCONbits.GIE = 1);
  4199  0EAE  178B               	bsf	11,7	;volatile
  4200                           
  4201                           ;main.c: 58:     (INTCONbits.PEIE = 1);
  4202  0EAF  170B               	bsf	11,6	;volatile
  4203  0EB0                     l4050:	
  4204                           
  4205                           ;main.c: 61:         clearLine(1);
  4206  0EB0  3001               	movlw	1
  4207  0EB1  0022               	movlb	2	; select bank2
  4208  0EB2  00CC               	movwf	clearLine@lineNo^(0+256)
  4209  0EB3  3000               	movlw	0
  4210  0EB4  00CD               	movwf	(clearLine@lineNo^(0+256)+1)
  4211  0EB5  318C  24B6  318E   	fcall	_clearLine
  4212                           
  4213                           ;main.c: 62:         setCursor(1,10) ;
  4214  0EB8  300A               	movlw	10
  4215  0EB9  0022               	movlb	2	; select bank2
  4216  0EBA  00D5               	movwf	??_main^(0+256)
  4217  0EBB  0855               	movf	??_main^(0+256),w
  4218  0EBC  0021               	movlb	1	; select bank1
  4219  0EBD  00A1               	movwf	setCursor@b^(0+128)
  4220  0EBE  3001               	movlw	1
  4221  0EBF  318B  2351  318E   	fcall	_setCursor
  4222                           
  4223                           ;main.c: 63:         int speedInt = speed ;
  4224  0EC2  0022               	movlb	2	; select bank2
  4225  0EC3  0861               	movf	(_speed+3)^(0+256),w	;volatile
  4226  0EC4  0021               	movlb	1	; select bank1
  4227  0EC5  00A3               	movwf	(___fltol@f1+3)^(0+128)
  4228  0EC6  0022               	movlb	2	; select bank2
  4229  0EC7  0860               	movf	(_speed+2)^(0+256),w	;volatile
  4230  0EC8  0021               	movlb	1	; select bank1
  4231  0EC9  00A2               	movwf	(___fltol@f1+2)^(0+128)
  4232  0ECA  0022               	movlb	2	; select bank2
  4233  0ECB  085F               	movf	(_speed+1)^(0+256),w	;volatile
  4234  0ECC  0021               	movlb	1	; select bank1
  4235  0ECD  00A1               	movwf	(___fltol@f1+1)^(0+128)
  4236  0ECE  0022               	movlb	2	; select bank2
  4237  0ECF  085E               	movf	_speed^(0+256),w	;volatile
  4238  0ED0  0021               	movlb	1	; select bank1
  4239  0ED1  00A0               	movwf	___fltol@f1^(0+128)
  4240  0ED2  318B  23CE  318E   	fcall	___fltol
  4241  0ED5  0021               	movlb	1	; select bank1
  4242  0ED6  0821               	movf	(?___fltol+1)^(0+128),w
  4243  0ED7  0022               	movlb	2	; select bank2
  4244  0ED8  00D7               	movwf	(main@speedInt+1)^(0+256)
  4245  0ED9  0021               	movlb	1	; select bank1
  4246  0EDA  0820               	movf	?___fltol^(0+128),w
  4247  0EDB  0022               	movlb	2	; select bank2
  4248  0EDC  00D6               	movwf	main@speedInt^(0+256)
  4249                           
  4250                           ;main.c: 64:         printf( "%d kmh", speedInt) ;
  4251  0EDD  3000               	movlw	low (STR_1| (0+32768))
  4252  0EDE  00C5               	movwf	printf@fmt^(0+256)
  4253  0EDF  3090               	movlw	high (STR_1| (0+32768))
  4254  0EE0  00C6               	movwf	(printf@fmt^(0+256)+1)
  4255  0EE1  0857               	movf	(main@speedInt+1)^(0+256),w
  4256  0EE2  00C8               	movwf	((?_printf+1)^(0+256)+2)
  4257  0EE3  0856               	movf	main@speedInt^(0+256),w
  4258  0EE4  00C7               	movwf	(?_printf^(0+256)+2)
  4259  0EE5  3189  219B  318E   	fcall	_printf
  4260                           
  4261                           ;main.c: 66:         clearLine(2);
  4262  0EE8  3002               	movlw	2
  4263  0EE9  0022               	movlb	2	; select bank2
  4264  0EEA  00CC               	movwf	clearLine@lineNo^(0+256)
  4265  0EEB  3000               	movlw	0
  4266  0EEC  00CD               	movwf	(clearLine@lineNo^(0+256)+1)
  4267  0EED  318C  24B6  318E   	fcall	_clearLine
  4268                           
  4269                           ;main.c: 67:         setCursor(2,11) ;
  4270  0EF0  300B               	movlw	11
  4271  0EF1  0022               	movlb	2	; select bank2
  4272  0EF2  00D5               	movwf	??_main^(0+256)
  4273  0EF3  0855               	movf	??_main^(0+256),w
  4274  0EF4  0021               	movlb	1	; select bank1
  4275  0EF5  00A1               	movwf	setCursor@b^(0+128)
  4276  0EF6  3002               	movlw	2
  4277  0EF7  318B  2351  318E   	fcall	_setCursor
  4278                           
  4279                           ;main.c: 68:         int distInt = distance ;
  4280  0EFA  0022               	movlb	2	; select bank2
  4281  0EFB  085D               	movf	(_distance+3)^(0+256),w	;volatile
  4282  0EFC  0021               	movlb	1	; select bank1
  4283  0EFD  00A3               	movwf	(___fltol@f1+3)^(0+128)
  4284  0EFE  0022               	movlb	2	; select bank2
  4285  0EFF  085C               	movf	(_distance+2)^(0+256),w	;volatile
  4286  0F00  0021               	movlb	1	; select bank1
  4287  0F01  00A2               	movwf	(___fltol@f1+2)^(0+128)
  4288  0F02  0022               	movlb	2	; select bank2
  4289  0F03  085B               	movf	(_distance+1)^(0+256),w	;volatile
  4290  0F04  0021               	movlb	1	; select bank1
  4291  0F05  00A1               	movwf	(___fltol@f1+1)^(0+128)
  4292  0F06  0022               	movlb	2	; select bank2
  4293  0F07  085A               	movf	_distance^(0+256),w	;volatile
  4294  0F08  0021               	movlb	1	; select bank1
  4295  0F09  00A0               	movwf	___fltol@f1^(0+128)
  4296  0F0A  318B  23CE  318E   	fcall	___fltol
  4297  0F0D  0021               	movlb	1	; select bank1
  4298  0F0E  0821               	movf	(?___fltol+1)^(0+128),w
  4299  0F0F  0022               	movlb	2	; select bank2
  4300  0F10  00D9               	movwf	(main@distInt+1)^(0+256)
  4301  0F11  0021               	movlb	1	; select bank1
  4302  0F12  0820               	movf	?___fltol^(0+128),w
  4303  0F13  0022               	movlb	2	; select bank2
  4304  0F14  00D8               	movwf	main@distInt^(0+256)
  4305                           
  4306                           ;main.c: 69:         printf("%d m", distInt ) ;
  4307  0F15  3007               	movlw	low (STR_2| (0+32768))
  4308  0F16  00C5               	movwf	printf@fmt^(0+256)
  4309  0F17  3090               	movlw	high (STR_2| (0+32768))
  4310  0F18  00C6               	movwf	(printf@fmt^(0+256)+1)
  4311  0F19  0859               	movf	(main@distInt+1)^(0+256),w
  4312  0F1A  00C8               	movwf	((?_printf+1)^(0+256)+2)
  4313  0F1B  0858               	movf	main@distInt^(0+256),w
  4314  0F1C  00C7               	movwf	(?_printf^(0+256)+2)
  4315  0F1D  3189  219B  318E   	fcall	_printf
  4316  0F20  2EB0               	goto	l4050
  4317  0F21                     __end_of_main:	
  4318                           
  4319                           	psect	text1
  4320  09B0                     __ptext1:	
  4321 ;; *************** function _writeString *****************
  4322 ;; Defined at:
  4323 ;;		line 94 in file "displayOptions.c"
  4324 ;; Parameters:    Size  Location     Type
  4325 ;;  string          1    wreg     PTR unsigned char 
  4326 ;;		 -> hrDisp(13), distanceDisp(11), speedDisp(8), 
  4327 ;; Auto vars:     Size  Location     Type
  4328 ;;  string          1   24[BANK1 ] PTR unsigned char 
  4329 ;;		 -> hrDisp(13), distanceDisp(11), speedDisp(8), 
  4330 ;; Return value:  Size  Location     Type
  4331 ;;                  1    wreg      void 
  4332 ;; Registers used:
  4333 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4334 ;; Tracked objects:
  4335 ;;		On entry : 0/0
  4336 ;;		On exit  : 0/0
  4337 ;;		Unchanged: 0/0
  4338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4340 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4342 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4343 ;;Total ram usage:        1 bytes
  4344 ;; Hardware stack levels used:    1
  4345 ;; Hardware stack levels required when called:   11
  4346 ;; This function calls:
  4347 ;;		_EUSART_is_tx_ready
  4348 ;;		_puts
  4349 ;; This function is called by:
  4350 ;;		_main
  4351 ;; This function uses a non-reentrant model
  4352 ;;
  4353                           
  4354                           
  4355                           ;psect for function _writeString
  4356  09B0                     _writeString:	
  4357                           
  4358                           ;incstack = 0
  4359                           ; Regs used in _writeString: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4360                           ;writeString@string stored from wreg
  4361  09B0  0021               	movlb	1	; select bank1
  4362  09B1  00B8               	movwf	writeString@string^(0+128)
  4363  09B2                     l3724:	
  4364                           ;displayOptions.c: 95:     while( !EUSART_is_tx_ready() ) ;
  4365                           
  4366  09B2  3189  218D  3189   	fcall	_EUSART_is_tx_ready
  4367  09B5  3A00               	xorlw	0
  4368  09B6  1903               	skipnz
  4369  09B7  29B2               	goto	l3724
  4370                           
  4371                           ;displayOptions.c: 96:     puts( string );
  4372  09B8  0021               	movlb	1	; select bank1
  4373  09B9  0838               	movf	writeString@string^(0+128),w
  4374  09BA  00B3               	movwf	puts@s^(0+128)
  4375  09BB  3001               	movlw	1
  4376  09BC  00B4               	movwf	(puts@s+1)^(0+128)
  4377  09BD  318A  220F  3189   	fcall	_puts
  4378                           
  4379                           ;displayOptions.c: 97:     _delay((unsigned long)((200)*(16000000/4000000.0)));
  4380  09C0  30A0               	movlw	160
  4381  09C1                     u4657:	
  4382  09C1  3200               	nop2
  4383  09C2  0B89               	decfsz	9,f
  4384  09C3  29C1               	goto	u4657
  4385  09C4  0008               	return
  4386  09C5                     __end_of_writeString:	
  4387                           
  4388                           	psect	text2
  4389  091D                     __ptext2:	
  4390 ;; *************** function _resetCursor *****************
  4391 ;; Defined at:
  4392 ;;		line 90 in file "displayOptions.c"
  4393 ;; Parameters:    Size  Location     Type
  4394 ;;		None
  4395 ;; Auto vars:     Size  Location     Type
  4396 ;;		None
  4397 ;; Return value:  Size  Location     Type
  4398 ;;                  1    wreg      void 
  4399 ;; Registers used:
  4400 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4401 ;; Tracked objects:
  4402 ;;		On entry : 0/0
  4403 ;;		On exit  : 0/0
  4404 ;;		Unchanged: 0/0
  4405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4410 ;;Total ram usage:        0 bytes
  4411 ;; Hardware stack levels used:    1
  4412 ;; Hardware stack levels required when called:   11
  4413 ;; This function calls:
  4414 ;;		_puts
  4415 ;; This function is called by:
  4416 ;;		_main
  4417 ;; This function uses a non-reentrant model
  4418 ;;
  4419                           
  4420                           
  4421                           ;psect for function _resetCursor
  4422  091D                     _resetCursor:	
  4423                           
  4424                           ;displayOptions.c: 91:     puts("|-");
  4425                           
  4426                           ;incstack = 0
  4427                           ; Regs used in _resetCursor: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4428  091D  300C               	movlw	low (STR_6| (0+32768))
  4429  091E  0021               	movlb	1	; select bank1
  4430  091F  00B3               	movwf	puts@s^(0+128)
  4431  0920  3090               	movlw	high (STR_6| (0+32768))
  4432  0921  00B4               	movwf	(puts@s^(0+128)+1)
  4433  0922  318A  220F         	fcall	_puts
  4434  0924  0008               	return
  4435  0925                     __end_of_resetCursor:	
  4436                           
  4437                           	psect	text3
  4438  0A0F                     __ptext3:	
  4439 ;; *************** function _puts *****************
  4440 ;; Defined at:
  4441 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\puts.c"
  4442 ;; Parameters:    Size  Location     Type
  4443 ;;  s               2   19[BANK1 ] PTR const unsigned char 
  4444 ;;		 -> STR_6(3), hrDisp(13), distanceDisp(11), speedDisp(8), 
  4445 ;; Auto vars:     Size  Location     Type
  4446 ;;  r               2    0        int 
  4447 ;; Return value:  Size  Location     Type
  4448 ;;                  2   19[BANK1 ] int 
  4449 ;; Registers used:
  4450 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4451 ;; Tracked objects:
  4452 ;;		On entry : 0/0
  4453 ;;		On exit  : 0/0
  4454 ;;		Unchanged: 0/0
  4455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4456 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4457 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4459 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  4460 ;;Total ram usage:        5 bytes
  4461 ;; Hardware stack levels used:    1
  4462 ;; Hardware stack levels required when called:   10
  4463 ;; This function calls:
  4464 ;;		_fputc
  4465 ;;		_fputs
  4466 ;; This function is called by:
  4467 ;;		_resetCursor
  4468 ;;		_writeString
  4469 ;; This function uses a non-reentrant model
  4470 ;;
  4471                           
  4472                           
  4473                           ;psect for function _puts
  4474  0A0F                     _puts:	
  4475                           
  4476                           ;incstack = 0
  4477                           ; Regs used in _puts: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4478  0A0F  0021               	movlb	1	; select bank1
  4479  0A10  01B7               	clrf	_puts$1049^(0+128)
  4480  0A11  0AB7               	incf	_puts$1049^(0+128),f
  4481  0A12  0834               	movf	(puts@s+1)^(0+128),w
  4482  0A13  00AB               	movwf	(fputs@s+1)^(0+128)
  4483  0A14  0833               	movf	puts@s^(0+128),w
  4484  0A15  00AA               	movwf	fputs@s^(0+128)
  4485  0A16  01AC               	clrf	fputs@fp^(0+128)
  4486  0A17  318A  228E  318A   	fcall	_fputs
  4487  0A1A  0021               	movlb	1	; select bank1
  4488  0A1B  1BAB               	btfsc	(?_fputs+1)^(0+128),7
  4489  0A1C  0008               	return
  4490  0A1D  300A               	movlw	10
  4491  0A1E  00A2               	movwf	fputc@c^(0+128)
  4492  0A1F  3000               	movlw	0
  4493  0A20  00A3               	movwf	(fputc@c^(0+128)+1)
  4494  0A21  01A4               	clrf	fputc@fp^(0+128)
  4495  0A22  318B  238E  318A   	fcall	_fputc
  4496  0A25  0021               	movlb	1	; select bank1
  4497  0A26  1BA3               	btfsc	(?_fputc+1)^(0+128),7
  4498  0A27  0008               	return
  4499  0A28  01B7               	clrf	_puts$1049^(0+128)
  4500  0A29  0008               	return
  4501  0A2A                     __end_of_puts:	
  4502                           
  4503                           	psect	text4
  4504  0CB6                     __ptext4:	
  4505 ;; *************** function _clearLine *****************
  4506 ;; Defined at:
  4507 ;;		line 12 in file "displayOptions.c"
  4508 ;; Parameters:    Size  Location     Type
  4509 ;;  lineNo          2   12[BANK2 ] int 
  4510 ;; Auto vars:     Size  Location     Type
  4511 ;;  i               2   19[BANK2 ] int 
  4512 ;;  i               2   17[BANK2 ] int 
  4513 ;;  i               2   15[BANK2 ] int 
  4514 ;; Return value:  Size  Location     Type
  4515 ;;                  1    wreg      void 
  4516 ;; Registers used:
  4517 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4518 ;; Tracked objects:
  4519 ;;		On entry : 0/0
  4520 ;;		On exit  : 0/0
  4521 ;;		Unchanged: 0/0
  4522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4523 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  4524 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0
  4525 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  4526 ;;      Totals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0
  4527 ;;Total ram usage:        9 bytes
  4528 ;; Hardware stack levels used:    1
  4529 ;; Hardware stack levels required when called:   15
  4530 ;; This function calls:
  4531 ;;		_printf
  4532 ;;		_setCursor
  4533 ;; This function is called by:
  4534 ;;		_main
  4535 ;; This function uses a non-reentrant model
  4536 ;;
  4537                           
  4538                           
  4539                           ;psect for function _clearLine
  4540  0CB6                     _clearLine:	
  4541                           
  4542                           ;displayOptions.c: 13:     switch( lineNo ){
  4543                           
  4544                           ;incstack = 0
  4545                           ; Regs used in _clearLine: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4546  0CB6  2D26               	goto	l4020
  4547  0CB7                     l3978:	
  4548                           
  4549                           ;displayOptions.c: 15:         {;displayOptions.c: 16:             setCursor( 1, 8 ) ;
  4550  0CB7  3008               	movlw	8
  4551  0CB8  00CE               	movwf	??_clearLine^(0+256)
  4552  0CB9  084E               	movf	??_clearLine^(0+256),w
  4553  0CBA  0021               	movlb	1	; select bank1
  4554  0CBB  00A1               	movwf	setCursor@b^(0+128)
  4555  0CBC  3001               	movlw	1
  4556  0CBD  318B  2351  318C   	fcall	_setCursor
  4557                           
  4558                           ;displayOptions.c: 17:             for( int i = 0 ; i < 12 ; i++ ){
  4559  0CC0  0022               	movlb	2	; select bank2
  4560  0CC1  01CF               	clrf	clearLine@i^(0+256)
  4561  0CC2  01D0               	clrf	(clearLine@i+1)^(0+256)
  4562  0CC3                     l3986:	
  4563                           
  4564                           ;displayOptions.c: 18:                 printf(" ") ;
  4565  0CC3  300F               	movlw	low (STR_3| (0+32768))
  4566  0CC4  0022               	movlb	2	; select bank2
  4567  0CC5  00C5               	movwf	printf@fmt^(0+256)
  4568  0CC6  3090               	movlw	high (STR_3| (0+32768))
  4569  0CC7  00C6               	movwf	(printf@fmt^(0+256)+1)
  4570  0CC8  3189  219B  318C   	fcall	_printf
  4571                           
  4572                           ;displayOptions.c: 19:             }
  4573  0CCB  3001               	movlw	1
  4574  0CCC  0022               	movlb	2	; select bank2
  4575  0CCD  07CF               	addwf	clearLine@i^(0+256),f
  4576  0CCE  3000               	movlw	0
  4577  0CCF  3DD0               	addwfc	(clearLine@i+1)^(0+256),f
  4578  0CD0  0850               	movf	(clearLine@i+1)^(0+256),w
  4579  0CD1  3A80               	xorlw	128
  4580  0CD2  00CE               	movwf	??_clearLine^(0+256)
  4581  0CD3  3080               	movlw	128
  4582  0CD4  024E               	subwf	??_clearLine^(0+256),w
  4583  0CD5  1D03               	skipz
  4584  0CD6  2CD9               	goto	u4615
  4585  0CD7  300C               	movlw	12
  4586  0CD8  024F               	subwf	clearLine@i^(0+256),w
  4587  0CD9                     u4615:	
  4588  0CD9  1C03               	skipc
  4589  0CDA  2CC3               	goto	l3986
  4590  0CDB                     l3992:	
  4591                           
  4592                           ;displayOptions.c: 22:         {;displayOptions.c: 23:             setCursor( 2, 11 ) ;
  4593  0CDB  300B               	movlw	11
  4594  0CDC  0022               	movlb	2	; select bank2
  4595  0CDD  00CE               	movwf	??_clearLine^(0+256)
  4596  0CDE  084E               	movf	??_clearLine^(0+256),w
  4597  0CDF  0021               	movlb	1	; select bank1
  4598  0CE0  00A1               	movwf	setCursor@b^(0+128)
  4599  0CE1  3002               	movlw	2
  4600  0CE2  318B  2351  318C   	fcall	_setCursor
  4601                           
  4602                           ;displayOptions.c: 24:             for( int i = 0 ; i < 9; i++ ){
  4603  0CE5  0022               	movlb	2	; select bank2
  4604  0CE6  01D1               	clrf	clearLine@i_604^(0+256)
  4605  0CE7  01D2               	clrf	(clearLine@i_604+1)^(0+256)
  4606  0CE8                     l4000:	
  4607                           
  4608                           ;displayOptions.c: 25:                 printf(" ") ;
  4609  0CE8  300F               	movlw	low (STR_3| (0+32768))
  4610  0CE9  0022               	movlb	2	; select bank2
  4611  0CEA  00C5               	movwf	printf@fmt^(0+256)
  4612  0CEB  3090               	movlw	high (STR_3| (0+32768))
  4613  0CEC  00C6               	movwf	(printf@fmt^(0+256)+1)
  4614  0CED  3189  219B  318C   	fcall	_printf
  4615                           
  4616                           ;displayOptions.c: 26:             }
  4617  0CF0  3001               	movlw	1
  4618  0CF1  0022               	movlb	2	; select bank2
  4619  0CF2  07D1               	addwf	clearLine@i_604^(0+256),f
  4620  0CF3  3000               	movlw	0
  4621  0CF4  3DD2               	addwfc	(clearLine@i_604+1)^(0+256),f
  4622  0CF5  0852               	movf	(clearLine@i_604+1)^(0+256),w
  4623  0CF6  3A80               	xorlw	128
  4624  0CF7  00CE               	movwf	??_clearLine^(0+256)
  4625  0CF8  3080               	movlw	128
  4626  0CF9  024E               	subwf	??_clearLine^(0+256),w
  4627  0CFA  1D03               	skipz
  4628  0CFB  2CFE               	goto	u4625
  4629  0CFC  3009               	movlw	9
  4630  0CFD  0251               	subwf	clearLine@i_604^(0+256),w
  4631  0CFE                     u4625:	
  4632  0CFE  1C03               	skipc
  4633  0CFF  2CE8               	goto	l4000
  4634  0D00                     l4006:	
  4635                           
  4636                           ;displayOptions.c: 29:         {;displayOptions.c: 30:             setCursor( 3, 13 ) ;
  4637  0D00  300D               	movlw	13
  4638  0D01  0022               	movlb	2	; select bank2
  4639  0D02  00CE               	movwf	??_clearLine^(0+256)
  4640  0D03  084E               	movf	??_clearLine^(0+256),w
  4641  0D04  0021               	movlb	1	; select bank1
  4642  0D05  00A1               	movwf	setCursor@b^(0+128)
  4643  0D06  3003               	movlw	3
  4644  0D07  318B  2351  318C   	fcall	_setCursor
  4645                           
  4646                           ;displayOptions.c: 31:             for( int i = 0 ; i < 7 ; i++ ){
  4647  0D0A  0022               	movlb	2	; select bank2
  4648  0D0B  01D3               	clrf	clearLine@i_606^(0+256)
  4649  0D0C  01D4               	clrf	(clearLine@i_606+1)^(0+256)
  4650  0D0D                     l4014:	
  4651                           
  4652                           ;displayOptions.c: 32:                 printf(" ") ;
  4653  0D0D  300F               	movlw	low (STR_3| (0+32768))
  4654  0D0E  0022               	movlb	2	; select bank2
  4655  0D0F  00C5               	movwf	printf@fmt^(0+256)
  4656  0D10  3090               	movlw	high (STR_3| (0+32768))
  4657  0D11  00C6               	movwf	(printf@fmt^(0+256)+1)
  4658  0D12  3189  219B  318C   	fcall	_printf
  4659                           
  4660                           ;displayOptions.c: 33:             }
  4661  0D15  3001               	movlw	1
  4662  0D16  0022               	movlb	2	; select bank2
  4663  0D17  07D3               	addwf	clearLine@i_606^(0+256),f
  4664  0D18  3000               	movlw	0
  4665  0D19  3DD4               	addwfc	(clearLine@i_606+1)^(0+256),f
  4666  0D1A  0854               	movf	(clearLine@i_606+1)^(0+256),w
  4667  0D1B  3A80               	xorlw	128
  4668  0D1C  00CE               	movwf	??_clearLine^(0+256)
  4669  0D1D  3080               	movlw	128
  4670  0D1E  024E               	subwf	??_clearLine^(0+256),w
  4671  0D1F  1D03               	skipz
  4672  0D20  2D23               	goto	u4635
  4673  0D21  3007               	movlw	7
  4674  0D22  0253               	subwf	clearLine@i_606^(0+256),w
  4675  0D23                     u4635:	
  4676  0D23  1803               	btfsc	3,0
  4677  0D24  0008               	return
  4678  0D25  2D0D               	goto	l4014
  4679  0D26                     l4020:	
  4680                           
  4681                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4682                           ; Switch size 1, requested type "simple"
  4683                           ; Number of cases is 1, Range of values is 0 to 0
  4684                           ; switch strategies available:
  4685                           ; Name         Instructions Cycles
  4686                           ; simple_byte            4     3 (average)
  4687                           ; direct_byte            8     6 (fixed)
  4688                           ; jumptable            260     6 (fixed)
  4689                           ;	Chosen strategy is simple_byte
  4690  0D26  0022               	movlb	2	; select bank2
  4691  0D27  084D               	movf	(clearLine@lineNo+1)^(0+256),w
  4692  0D28  3A00               	xorlw	0	; case 0
  4693  0D29  1903               	skipnz
  4694  0D2A  2D2C               	goto	l4134
  4695  0D2B  2D3A               	goto	l318
  4696  0D2C                     l4134:	
  4697                           
  4698                           ; Switch size 1, requested type "simple"
  4699                           ; Number of cases is 4, Range of values is 1 to 4
  4700                           ; switch strategies available:
  4701                           ; Name         Instructions Cycles
  4702                           ; simple_byte           13     7 (average)
  4703                           ; direct_byte           17     9 (fixed)
  4704                           ; jumptable            263     9 (fixed)
  4705                           ;	Chosen strategy is simple_byte
  4706  0D2C  084C               	movf	clearLine@lineNo^(0+256),w
  4707  0D2D  3A01               	xorlw	1	; case 1
  4708  0D2E  1903               	skipnz
  4709  0D2F  2CB7               	goto	l3978
  4710  0D30  3A03               	xorlw	3	; case 2
  4711  0D31  1903               	skipnz
  4712  0D32  2CDB               	goto	l3992
  4713  0D33  3A01               	xorlw	1	; case 3
  4714  0D34  1903               	skipnz
  4715  0D35  2D00               	goto	l4006
  4716  0D36  3A07               	xorlw	7	; case 4
  4717  0D37  1903               	skipnz
  4718  0D38  2D3A               	goto	l318
  4719  0D39  2D3A               	goto	l318
  4720  0D3A                     l318:	
  4721  0D3A  0008               	return
  4722  0D3B                     __end_of_clearLine:	
  4723                           
  4724                           	psect	text5
  4725  0B51                     __ptext5:	
  4726 ;; *************** function _setCursor *****************
  4727 ;; Defined at:
  4728 ;;		line 106 in file "displayOptions.c"
  4729 ;; Parameters:    Size  Location     Type
  4730 ;;  a               1    wreg     unsigned char 
  4731 ;;  b               1    1[BANK1 ] unsigned char 
  4732 ;; Auto vars:     Size  Location     Type
  4733 ;;  a               1    4[BANK1 ] unsigned char 
  4734 ;; Return value:  Size  Location     Type
  4735 ;;                  1    wreg      void 
  4736 ;; Registers used:
  4737 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4738 ;; Tracked objects:
  4739 ;;		On entry : 0/0
  4740 ;;		On exit  : 0/0
  4741 ;;		Unchanged: 0/0
  4742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4743 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4744 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4745 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4746 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4747 ;;Total ram usage:        4 bytes
  4748 ;; Hardware stack levels used:    1
  4749 ;; Hardware stack levels required when called:    7
  4750 ;; This function calls:
  4751 ;;		_EUSART_Write
  4752 ;;		_EUSART_is_tx_ready
  4753 ;; This function is called by:
  4754 ;;		_main
  4755 ;;		_clearLine
  4756 ;; This function uses a non-reentrant model
  4757 ;;
  4758                           
  4759                           
  4760                           ;psect for function _setCursor
  4761  0B51                     _setCursor:	
  4762                           
  4763                           ;incstack = 0
  4764                           ; Regs used in _setCursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4765                           ;setCursor@a stored from wreg
  4766  0B51  0021               	movlb	1	; select bank1
  4767  0B52  00A4               	movwf	setCursor@a^(0+128)
  4768  0B53                     l3676:	
  4769                           ;displayOptions.c: 107:     while( !EUSART_is_tx_ready() ) ;
  4770                           
  4771  0B53  3189  218D  318B   	fcall	_EUSART_is_tx_ready
  4772  0B56  3A00               	xorlw	0
  4773  0B57  1903               	skipnz
  4774  0B58  2B53               	goto	l3676
  4775                           
  4776                           ;displayOptions.c: 108:     EUSART_Write( 254 );
  4777  0B59  30FE               	movlw	254
  4778  0B5A  3189  215C  318B   	fcall	_EUSART_Write
  4779                           
  4780                           ;displayOptions.c: 109:     _delay((unsigned long)((200)*(16000000/4000000.0)));
  4781  0B5D  30A0               	movlw	160
  4782  0B5E                     u4667:	
  4783  0B5E  3200               	nop2
  4784  0B5F  0B89               	decfsz	9,f
  4785  0B60  2B5E               	goto	u4667
  4786                           
  4787                           ;displayOptions.c: 110:     switch ( a ){
  4788  0B61  2B76               	goto	l3692
  4789  0B62                     l3682:	
  4790                           
  4791                           ;displayOptions.c: 112:         {;displayOptions.c: 113:             EUSART_Write(128 + 
      +                          0 + b) ;
  4792  0B62  0821               	movf	setCursor@b^(0+128),w
  4793  0B63  3E80               	addlw	128
  4794  0B64  3189  215C         	fcall	_EUSART_Write
  4795                           
  4796                           ;displayOptions.c: 114:             break ;
  4797  0B66  0008               	return
  4798  0B67                     l3684:	
  4799                           
  4800                           ;displayOptions.c: 117:         {;displayOptions.c: 118:            EUSART_Write(128 + 6
      +                          4 + b) ;
  4801  0B67  0821               	movf	setCursor@b^(0+128),w
  4802  0B68  3EC0               	addlw	192
  4803  0B69  3189  215C         	fcall	_EUSART_Write
  4804                           
  4805                           ;displayOptions.c: 119:            break ;
  4806  0B6B  0008               	return
  4807  0B6C                     l3686:	
  4808                           
  4809                           ;displayOptions.c: 122:         {;displayOptions.c: 123:             EUSART_Write(128 + 
      +                          20 + b) ;
  4810  0B6C  0821               	movf	setCursor@b^(0+128),w
  4811  0B6D  3E94               	addlw	148
  4812  0B6E  3189  215C         	fcall	_EUSART_Write
  4813                           
  4814                           ;displayOptions.c: 124:             break ;
  4815  0B70  0008               	return
  4816  0B71                     l3688:	
  4817                           
  4818                           ;displayOptions.c: 127:         {;displayOptions.c: 128:             EUSART_Write(128 + 
      +                          84 + b) ;
  4819  0B71  0821               	movf	setCursor@b^(0+128),w
  4820  0B72  3ED4               	addlw	212
  4821  0B73  3189  215C         	fcall	_EUSART_Write
  4822                           
  4823                           ;displayOptions.c: 129:             break ;
  4824  0B75  0008               	return
  4825  0B76                     l3692:	
  4826  0B76  0021               	movlb	1	; select bank1
  4827  0B77  0824               	movf	setCursor@a^(0+128),w
  4828  0B78  00A2               	movwf	??_setCursor^(0+128)
  4829  0B79  01A3               	clrf	(??_setCursor^(0+128)+1)
  4830                           
  4831                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4832                           ; Switch size 1, requested type "simple"
  4833                           ; Number of cases is 1, Range of values is 0 to 0
  4834                           ; switch strategies available:
  4835                           ; Name         Instructions Cycles
  4836                           ; simple_byte            4     3 (average)
  4837                           ; direct_byte            8     6 (fixed)
  4838                           ; jumptable            260     6 (fixed)
  4839                           ;	Chosen strategy is simple_byte
  4840  0B7A  0823               	movf	(??_setCursor+1)^(0+128),w
  4841  0B7B  3A00               	xorlw	0	; case 0
  4842  0B7C  1903               	skipnz
  4843  0B7D  2B7F               	goto	l4136
  4844  0B7E  2B8D               	goto	l370
  4845  0B7F                     l4136:	
  4846                           
  4847                           ; Switch size 1, requested type "simple"
  4848                           ; Number of cases is 4, Range of values is 1 to 4
  4849                           ; switch strategies available:
  4850                           ; Name         Instructions Cycles
  4851                           ; simple_byte           13     7 (average)
  4852                           ; direct_byte           17     9 (fixed)
  4853                           ; jumptable            263     9 (fixed)
  4854                           ;	Chosen strategy is simple_byte
  4855  0B7F  0822               	movf	??_setCursor^(0+128),w
  4856  0B80  3A01               	xorlw	1	; case 1
  4857  0B81  1903               	skipnz
  4858  0B82  2B62               	goto	l3682
  4859  0B83  3A03               	xorlw	3	; case 2
  4860  0B84  1903               	skipnz
  4861  0B85  2B67               	goto	l3684
  4862  0B86  3A01               	xorlw	1	; case 3
  4863  0B87  1903               	skipnz
  4864  0B88  2B6C               	goto	l3686
  4865  0B89  3A07               	xorlw	7	; case 4
  4866  0B8A  1903               	skipnz
  4867  0B8B  2B71               	goto	l3688
  4868  0B8C  2B8D               	goto	l370
  4869  0B8D                     l370:	
  4870  0B8D  0008               	return
  4871  0B8E                     __end_of_setCursor:	
  4872                           
  4873                           	psect	text6
  4874  098D                     __ptext6:	
  4875 ;; *************** function _EUSART_is_tx_ready *****************
  4876 ;; Defined at:
  4877 ;;		line 93 in file "mcc_generated_files/eusart.c"
  4878 ;; Parameters:    Size  Location     Type
  4879 ;;		None
  4880 ;; Auto vars:     Size  Location     Type
  4881 ;;		None
  4882 ;; Return value:  Size  Location     Type
  4883 ;;                  1    wreg      _Bool 
  4884 ;; Registers used:
  4885 ;;		wreg, status,2
  4886 ;; Tracked objects:
  4887 ;;		On entry : 0/0
  4888 ;;		On exit  : 0/0
  4889 ;;		Unchanged: 0/0
  4890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4892 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4894 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4895 ;;Total ram usage:        1 bytes
  4896 ;; Hardware stack levels used:    1
  4897 ;; Hardware stack levels required when called:    6
  4898 ;; This function calls:
  4899 ;;		Nothing
  4900 ;; This function is called by:
  4901 ;;		_writeString
  4902 ;;		_setCursor
  4903 ;;		_backlightBrightness
  4904 ;;		_writePrintf
  4905 ;; This function uses a non-reentrant model
  4906 ;;
  4907                           
  4908                           
  4909                           ;psect for function _EUSART_is_tx_ready
  4910  098D                     _EUSART_is_tx_ready:	
  4911                           
  4912                           ;mcc_generated_files/eusart.c: 95:     return (_Bool)(PIR1bits.TXIF && TX1STAbits.TXEN);
  4913                           
  4914                           ;incstack = 0
  4915                           ; Regs used in _EUSART_is_tx_ready: [wreg+status,2]
  4916  098D  0021               	movlb	1	; select bank1
  4917  098E  01A0               	clrf	_EUSART_is_tx_ready$167^(0+128)
  4918  098F  0020               	movlb	0	; select bank0
  4919  0990  1E10               	btfss	16,4	;volatile
  4920  0991  2998               	goto	l3592
  4921  0992  0023               	movlb	3	; select bank3
  4922  0993  1E9E               	btfss	30,5	;volatile
  4923  0994  2998               	goto	l3592
  4924  0995  0021               	movlb	1	; select bank1
  4925  0996  01A0               	clrf	_EUSART_is_tx_ready$167^(0+128)
  4926  0997  0AA0               	incf	_EUSART_is_tx_ready$167^(0+128),f
  4927  0998                     l3592:	
  4928  0998  0021               	movlb	1	; select bank1
  4929  0999  0820               	movf	_EUSART_is_tx_ready$167^(0+128),w
  4930  099A  0008               	return
  4931  099B                     __end_of_EUSART_is_tx_ready:	
  4932                           
  4933                           	psect	text7
  4934  099B                     __ptext7:	
  4935 ;; *************** function _printf *****************
  4936 ;; Defined at:
  4937 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  4938 ;; Parameters:    Size  Location     Type
  4939 ;;  fmt             2    5[BANK2 ] PTR const unsigned char 
  4940 ;;		 -> STR_5(2), STR_4(2), STR_3(2), STR_2(5), 
  4941 ;;		 -> STR_1(7), 
  4942 ;; Auto vars:     Size  Location     Type
  4943 ;;  ret             2    0        int 
  4944 ;;  ap              1   11[BANK2 ] PTR void [1]
  4945 ;;		 -> ?_printf(2), 
  4946 ;; Return value:  Size  Location     Type
  4947 ;;                  2    5[BANK2 ] int 
  4948 ;; Registers used:
  4949 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4950 ;; Tracked objects:
  4951 ;;		On entry : 0/0
  4952 ;;		On exit  : 0/0
  4953 ;;		Unchanged: 0/0
  4954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4955 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  4956 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  4957 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4958 ;;      Totals:         0       0       1       7       0       0       0       0       0       0       0       0       
      +0       0
  4959 ;;Total ram usage:        8 bytes
  4960 ;; Hardware stack levels used:    1
  4961 ;; Hardware stack levels required when called:   14
  4962 ;; This function calls:
  4963 ;;		_vfprintf
  4964 ;; This function is called by:
  4965 ;;		_main
  4966 ;;		_clearLine
  4967 ;;		_writePrintf
  4968 ;; This function uses a non-reentrant model
  4969 ;;
  4970                           
  4971                           
  4972                           ;psect for function _printf
  4973  099B                     _printf:	
  4974                           
  4975                           ;incstack = 0
  4976                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4977  099B  3047               	movlw	(low ((?_printf| (0+256)+2)))& (0+255)
  4978  099C  0021               	movlb	1	; select bank1
  4979  099D  00EF               	movwf	??_printf^(0+128)
  4980  099E  086F               	movf	??_printf^(0+128),w
  4981  099F  0022               	movlb	2	; select bank2
  4982  09A0  00CB               	movwf	printf@ap^(0+256)
  4983  09A1  0846               	movf	(printf@fmt+1)^(0+256),w
  4984  09A2  0021               	movlb	1	; select bank1
  4985  09A3  00ED               	movwf	(vfprintf@fmt+1)^(0+128)
  4986  09A4  0022               	movlb	2	; select bank2
  4987  09A5  0845               	movf	printf@fmt^(0+256),w
  4988  09A6  0021               	movlb	1	; select bank1
  4989  09A7  00EC               	movwf	vfprintf@fmt^(0+128)
  4990  09A8  304B               	movlw	(low (printf@ap| (0+256)))& (0+255)
  4991  09A9  00EF               	movwf	??_printf^(0+128)
  4992  09AA  086F               	movf	??_printf^(0+128),w
  4993  09AB  00EE               	movwf	vfprintf@ap^(0+128)
  4994  09AC  3000               	movlw	0
  4995  09AD  318B  231A         	fcall	_vfprintf
  4996  09AF  0008               	return
  4997  09B0                     __end_of_printf:	
  4998                           
  4999                           	psect	text8
  5000  0B1A                     __ptext8:	
  5001 ;; *************** function _vfprintf *****************
  5002 ;; Defined at:
  5003 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5004 ;; Parameters:    Size  Location     Type
  5005 ;;  fp              1    wreg     PTR struct _IO_FILE
  5006 ;;		 -> NULL(0), 
  5007 ;;  fmt             2   76[BANK1 ] PTR const unsigned char 
  5008 ;;		 -> STR_5(2), STR_4(2), STR_3(2), STR_2(5), 
  5009 ;;		 -> STR_1(7), 
  5010 ;;  ap              1   78[BANK1 ] PTR PTR void 
  5011 ;;		 -> printf@ap(1), 
  5012 ;; Auto vars:     Size  Location     Type
  5013 ;;  fp              1    2[BANK2 ] PTR struct _IO_FILE
  5014 ;;		 -> NULL(0), 
  5015 ;;  cfmt            2    3[BANK2 ] PTR unsigned char 
  5016 ;;		 -> STR_5(2), STR_4(2), STR_3(2), STR_2(5), 
  5017 ;;		 -> STR_1(7), 
  5018 ;; Return value:  Size  Location     Type
  5019 ;;                  2   76[BANK1 ] int 
  5020 ;; Registers used:
  5021 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5022 ;; Tracked objects:
  5023 ;;		On entry : 0/0
  5024 ;;		On exit  : 0/0
  5025 ;;		Unchanged: 0/0
  5026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5027 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5028 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  5029 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  5030 ;;      Totals:         0       0       3       5       0       0       0       0       0       0       0       0       
      +0       0
  5031 ;;Total ram usage:        8 bytes
  5032 ;; Hardware stack levels used:    1
  5033 ;; Hardware stack levels required when called:   13
  5034 ;; This function calls:
  5035 ;;		_vfpfcnvrt
  5036 ;; This function is called by:
  5037 ;;		_printf
  5038 ;; This function uses a non-reentrant model
  5039 ;;
  5040                           
  5041                           
  5042                           ;psect for function _vfprintf
  5043  0B1A                     _vfprintf:	
  5044                           
  5045                           ;incstack = 0
  5046                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5047                           ;vfprintf@fp stored from wreg
  5048  0B1A  0022               	movlb	2	; select bank2
  5049  0B1B  00C2               	movwf	vfprintf@fp^(0+256)
  5050                           
  5051                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  5052  0B1C  0021               	movlb	1	; select bank1
  5053  0B1D  086D               	movf	(vfprintf@fmt+1)^(0+128),w
  5054  0B1E  0022               	movlb	2	; select bank2
  5055  0B1F  00C4               	movwf	(vfprintf@cfmt+1)^(0+256)
  5056  0B20  0021               	movlb	1	; select bank1
  5057  0B21  086C               	movf	vfprintf@fmt^(0+128),w
  5058  0B22  0022               	movlb	2	; select bank2
  5059  0B23  00C3               	movwf	vfprintf@cfmt^(0+256)
  5060                           
  5061                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  5062  0B24  0020               	movlb	0	; select bank0
  5063  0B25  01C4               	clrf	_nout
  5064  0B26  01C5               	clrf	_nout+1
  5065  0B27                     l3964:	
  5066                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  5067                           
  5068                           
  5069                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  5070  0B27  0022               	movlb	2	; select bank2
  5071  0B28  0843               	movf	vfprintf@cfmt^(0+256),w
  5072  0B29  0084               	movwf	4
  5073  0B2A  0844               	movf	(vfprintf@cfmt+1)^(0+256),w
  5074  0B2B  0085               	movwf	5
  5075  0B2C  0012               	moviw fsr0++
  5076  0B2D  1903               	btfsc	3,2
  5077  0B2E  2B48               	goto	l3966
  5078                           
  5079                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  5080  0B2F  3043               	movlw	(low (vfprintf@cfmt| (0+256)))& (0+255)
  5081  0B30  00C0               	movwf	??_vfprintf^(0+256)
  5082  0B31  0840               	movf	??_vfprintf^(0+256),w
  5083  0B32  0021               	movlb	1	; select bank1
  5084  0B33  00DA               	movwf	vfpfcnvrt@fmt^(0+128)
  5085  0B34  086E               	movf	vfprintf@ap^(0+128),w
  5086  0B35  0022               	movlb	2	; select bank2
  5087  0B36  00C1               	movwf	(??_vfprintf+1)^(0+256)
  5088  0B37  0841               	movf	(??_vfprintf+1)^(0+256),w
  5089  0B38  0021               	movlb	1	; select bank1
  5090  0B39  00DB               	movwf	vfpfcnvrt@ap^(0+128)
  5091  0B3A  0022               	movlb	2	; select bank2
  5092  0B3B  0842               	movf	vfprintf@fp^(0+256),w
  5093  0B3C  3185  25A3  318B   	fcall	_vfpfcnvrt
  5094  0B3F  0021               	movlb	1	; select bank1
  5095  0B40  085A               	movf	?_vfpfcnvrt^(0+128),w
  5096  0B41  0020               	movlb	0	; select bank0
  5097  0B42  07C4               	addwf	_nout,f
  5098  0B43  0021               	movlb	1	; select bank1
  5099  0B44  085B               	movf	(?_vfpfcnvrt+1)^(0+128),w
  5100  0B45  0020               	movlb	0	; select bank0
  5101  0B46  3DC5               	addwfc	_nout+1,f
  5102  0B47  2B27               	goto	l3964
  5103  0B48                     l3966:	
  5104                           
  5105                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  5106  0B48  0020               	movlb	0	; select bank0
  5107  0B49  0845               	movf	_nout+1,w
  5108  0B4A  0021               	movlb	1	; select bank1
  5109  0B4B  00ED               	movwf	(?_vfprintf+1)^(0+128)
  5110  0B4C  0020               	movlb	0	; select bank0
  5111  0B4D  0844               	movf	_nout,w
  5112  0B4E  0021               	movlb	1	; select bank1
  5113  0B4F  00EC               	movwf	?_vfprintf^(0+128)
  5114  0B50  0008               	return
  5115  0B51                     __end_of_vfprintf:	
  5116                           
  5117                           	psect	text9
  5118  05A3                     __ptext9:	
  5119 ;; *************** function _vfpfcnvrt *****************
  5120 ;; Defined at:
  5121 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5122 ;; Parameters:    Size  Location     Type
  5123 ;;  fp              1    wreg     PTR struct _IO_FILE
  5124 ;;		 -> NULL(0), 
  5125 ;;  fmt             1   58[BANK1 ] PTR PTR unsigned char 
  5126 ;;		 -> vfprintf@cfmt(2), 
  5127 ;;  ap              1   59[BANK1 ] PTR PTR void 
  5128 ;;		 -> printf@ap(1), 
  5129 ;; Auto vars:     Size  Location     Type
  5130 ;;  fp              1   75[BANK1 ] PTR struct _IO_FILE
  5131 ;;		 -> NULL(0), 
  5132 ;;  ll              8   65[BANK1 ] long long 
  5133 ;;  llu             8    0        unsigned long long 
  5134 ;;  f               4    0        unsigned long long 
  5135 ;;  ct              3    0        unsigned char [3]
  5136 ;;  vp              2   73[BANK1 ] PTR void 
  5137 ;;		 -> ?_printf(2), rpm(4), 
  5138 ;;  i               2    0        int 
  5139 ;;  done            2    0        int 
  5140 ;;  cp              2    0        PTR unsigned char 
  5141 ;;  c               1    0        unsigned char 
  5142 ;; Return value:  Size  Location     Type
  5143 ;;                  2   58[BANK1 ] int 
  5144 ;; Registers used:
  5145 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5146 ;; Tracked objects:
  5147 ;;		On entry : 0/0
  5148 ;;		On exit  : 0/0
  5149 ;;		Unchanged: 0/0
  5150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5151 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5152 ;;      Locals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0
  5153 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  5154 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0
  5155 ;;Total ram usage:       18 bytes
  5156 ;; Hardware stack levels used:    1
  5157 ;; Hardware stack levels required when called:   12
  5158 ;; This function calls:
  5159 ;;		_dtoa
  5160 ;;		_fputc
  5161 ;; This function is called by:
  5162 ;;		_vfprintf
  5163 ;; This function uses a non-reentrant model
  5164 ;;
  5165                           
  5166                           
  5167                           ;psect for function _vfpfcnvrt
  5168  05A3                     _vfpfcnvrt:	
  5169                           
  5170                           ;incstack = 0
  5171                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5172                           ;vfpfcnvrt@fp stored from wreg
  5173  05A3  0021               	movlb	1	; select bank1
  5174  05A4  00EB               	movwf	vfpfcnvrt@fp^(0+128)
  5175                           
  5176                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  5177  05A5  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5178  05A6  0086               	movwf	6
  5179  05A7  3001               	movlw	1	; select bank2/3
  5180  05A8  0087               	movwf	7
  5181  05A9  3F40               	moviw [0]fsr1
  5182  05AA  00DC               	movwf	??_vfpfcnvrt^(0+128)
  5183  05AB  3F41               	moviw [1]fsr1
  5184  05AC  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5185  05AD  085C               	movf	??_vfpfcnvrt^(0+128),w
  5186  05AE  0084               	movwf	4
  5187  05AF  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5188  05B0  0085               	movwf	5
  5189  05B1  0012               	moviw fsr0++
  5190  05B2  3A25               	xorlw	37
  5191  05B3  1D03               	btfss	3,2
  5192  05B4  2E8C               	goto	l3570
  5193                           
  5194                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  5195  05B5  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5196  05B6  0086               	movwf	6
  5197  05B7  3001               	movlw	1	; select bank2/3
  5198  05B8  0087               	movwf	7
  5199  05B9  3001               	movlw	1
  5200  05BA  0781               	addwf	1,f
  5201  05BB  3141               	addfsr 1,1
  5202  05BC  1803               	skipnc
  5203  05BD  0A81               	incf	1,f
  5204                           
  5205                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  5206  05BE  0020               	movlb	0	; select bank0
  5207  05BF  01C6               	clrf	_width
  5208  05C0  01C7               	clrf	_width+1
  5209  05C1  01CA               	clrf	_flags
  5210  05C2  01CB               	clrf	_flags+1
  5211                           
  5212                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  5213  05C3  30FF               	movlw	255
  5214  05C4  00C8               	movwf	_prec
  5215  05C5  30FF               	movlw	255
  5216  05C6  00C9               	movwf	_prec+1
  5217                           
  5218                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  5219  05C7  0021               	movlb	1	; select bank1
  5220  05C8  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5221  05C9  0086               	movwf	6
  5222  05CA  3001               	movlw	1	; select bank2/3
  5223  05CB  0087               	movwf	7
  5224  05CC  3F40               	moviw [0]fsr1
  5225  05CD  00DC               	movwf	??_vfpfcnvrt^(0+128)
  5226  05CE  3F41               	moviw [1]fsr1
  5227  05CF  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5228  05D0  085C               	movf	??_vfpfcnvrt^(0+128),w
  5229  05D1  0084               	movwf	4
  5230  05D2  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5231  05D3  0085               	movwf	5
  5232  05D4  0012               	moviw fsr0++
  5233  05D5  3A64               	xorlw	100
  5234  05D6  1903               	btfsc	3,2
  5235  05D7  2DE8               	goto	l3534
  5236  05D8  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5237  05D9  0086               	movwf	6
  5238  05DA  3001               	movlw	1	; select bank2/3
  5239  05DB  0087               	movwf	7
  5240  05DC  3F40               	moviw [0]fsr1
  5241  05DD  00DC               	movwf	??_vfpfcnvrt^(0+128)
  5242  05DE  3F41               	moviw [1]fsr1
  5243  05DF  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5244  05E0  085C               	movf	??_vfpfcnvrt^(0+128),w
  5245  05E1  0084               	movwf	4
  5246  05E2  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5247  05E3  0085               	movwf	5
  5248  05E4  0012               	moviw fsr0++
  5249  05E5  3A69               	xorlw	105
  5250  05E6  1D03               	btfss	3,2
  5251  05E7  2E25               	goto	l3542
  5252  05E8                     l3534:	
  5253                           
  5254                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  5255  05E8  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5256  05E9  0086               	movwf	6
  5257  05EA  3001               	movlw	1	; select bank2/3
  5258  05EB  0087               	movwf	7
  5259  05EC  3001               	movlw	1
  5260  05ED  0781               	addwf	1,f
  5261  05EE  3141               	addfsr 1,1
  5262  05EF  1803               	skipnc
  5263  05F0  0A81               	incf	1,f
  5264                           
  5265                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  5266  05F1  085B               	movf	vfpfcnvrt@ap^(0+128),w
  5267  05F2  0086               	movwf	6
  5268  05F3  3001               	movlw	1	; select bank2/3
  5269  05F4  0087               	movwf	7
  5270  05F5  0801               	movf	1,w
  5271  05F6  0084               	movwf	4
  5272  05F7  3001               	movlw	1	; select bank2/3
  5273  05F8  0085               	movwf	5
  5274  05F9  3002               	movlw	2
  5275  05FA  0781               	addwf	1,f
  5276  05FB  3F00               	moviw [0]fsr0
  5277  05FC  00DC               	movwf	??_vfpfcnvrt^(0+128)
  5278  05FD  3F01               	moviw [1]fsr0
  5279  05FE  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5280  05FF  085C               	movf	??_vfpfcnvrt^(0+128),w
  5281  0600  00E1               	movwf	vfpfcnvrt@ll^(0+128)
  5282  0601  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5283  0602  00E2               	movwf	(vfpfcnvrt@ll+1)^(0+128)
  5284  0603  0D89               	rlf	9,f
  5285  0604  3B89               	subwfb	9,f
  5286  0605  0989               	comf	9,f
  5287  0606  00E3               	movwf	(vfpfcnvrt@ll+2)^(0+128)
  5288  0607  00E4               	movwf	(vfpfcnvrt@ll+3)^(0+128)
  5289  0608  00E5               	movwf	(vfpfcnvrt@ll+4)^(0+128)
  5290  0609  00E6               	movwf	(vfpfcnvrt@ll+5)^(0+128)
  5291  060A  00E7               	movwf	(vfpfcnvrt@ll+6)^(0+128)
  5292  060B  00E8               	movwf	(vfpfcnvrt@ll+7)^(0+128)
  5293                           
  5294                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  5295  060C  0861               	movf	vfpfcnvrt@ll^(0+128),w
  5296  060D  00BC               	movwf	dtoa@d^(0+128)
  5297  060E  0862               	movf	(vfpfcnvrt@ll+1)^(0+128),w
  5298  060F  00BD               	movwf	(dtoa@d+1)^(0+128)
  5299  0610  0863               	movf	(vfpfcnvrt@ll+2)^(0+128),w
  5300  0611  00BE               	movwf	(dtoa@d+2)^(0+128)
  5301  0612  0864               	movf	(vfpfcnvrt@ll+3)^(0+128),w
  5302  0613  00BF               	movwf	(dtoa@d+3)^(0+128)
  5303  0614  0865               	movf	(vfpfcnvrt@ll+4)^(0+128),w
  5304  0615  00C0               	movwf	(dtoa@d+4)^(0+128)
  5305  0616  0866               	movf	(vfpfcnvrt@ll+5)^(0+128),w
  5306  0617  00C1               	movwf	(dtoa@d+5)^(0+128)
  5307  0618  0867               	movf	(vfpfcnvrt@ll+6)^(0+128),w
  5308  0619  00C2               	movwf	(dtoa@d+6)^(0+128)
  5309  061A  0868               	movf	(vfpfcnvrt@ll+7)^(0+128),w
  5310  061B  00C3               	movwf	(dtoa@d+7)^(0+128)
  5311  061C  086B               	movf	vfpfcnvrt@fp^(0+128),w
  5312  061D  3184  2452         	fcall	_dtoa
  5313  061F  0021               	movlb	1	; select bank1
  5314  0620  083D               	movf	(?_dtoa+1)^(0+128),w
  5315  0621  00DB               	movwf	(?_vfpfcnvrt+1)^(0+128)
  5316  0622  083C               	movf	?_dtoa^(0+128),w
  5317  0623  00DA               	movwf	?_vfpfcnvrt^(0+128)
  5318  0624  0008               	return
  5319  0625                     l3542:	
  5320                           
  5321                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1077:      
      +                             if (*fmt[0] == 'n') {
  5322  0625  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5323  0626  0086               	movwf	6
  5324  0627  3001               	movlw	1	; select bank2/3
  5325  0628  0087               	movwf	7
  5326  0629  3F40               	moviw [0]fsr1
  5327  062A  00DC               	movwf	??_vfpfcnvrt^(0+128)
  5328  062B  3F41               	moviw [1]fsr1
  5329  062C  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5330  062D  085C               	movf	??_vfpfcnvrt^(0+128),w
  5331  062E  0084               	movwf	4
  5332  062F  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5333  0630  0085               	movwf	5
  5334  0631  0012               	moviw fsr0++
  5335  0632  3A6E               	xorlw	110
  5336  0633  1D03               	btfss	3,2
  5337  0634  2E59               	goto	l3554
  5338                           
  5339                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1078:      
      +                                 ++*fmt;
  5340  0635  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5341  0636  0086               	movwf	6
  5342  0637  3001               	movlw	1	; select bank2/3
  5343  0638  0087               	movwf	7
  5344  0639  3001               	movlw	1
  5345  063A  0781               	addwf	1,f
  5346  063B  3141               	addfsr 1,1
  5347  063C  1803               	skipnc
  5348  063D  0A81               	incf	1,f
  5349                           
  5350                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1079:      
      +                                 vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
  5351  063E  085B               	movf	vfpfcnvrt@ap^(0+128),w
  5352  063F  0086               	movwf	6
  5353  0640  3001               	movlw	1	; select bank2/3
  5354  0641  0087               	movwf	7
  5355  0642  0801               	movf	1,w
  5356  0643  0084               	movwf	4
  5357  0644  3001               	movlw	1	; select bank2/3
  5358  0645  0085               	movwf	5
  5359  0646  3002               	movlw	2
  5360  0647  0781               	addwf	1,f
  5361  0648  3F00               	moviw [0]fsr0
  5362  0649  00E9               	movwf	vfpfcnvrt@vp^(0+128)
  5363  064A  3F01               	moviw [1]fsr0
  5364  064B  00EA               	movwf	(vfpfcnvrt@vp+1)^(0+128)
  5365                           
  5366                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1080:      
      +                                 *(int *)vp = nout;
  5367  064C  0869               	movf	vfpfcnvrt@vp^(0+128),w
  5368  064D  0086               	movwf	6
  5369  064E  086A               	movf	(vfpfcnvrt@vp+1)^(0+128),w
  5370  064F  0087               	movwf	7
  5371  0650  0020               	movlb	0	; select bank0
  5372  0651  0844               	movf	_nout,w
  5373  0652  3FC0               	movwi [0]fsr1
  5374  0653  0845               	movf	_nout+1,w
  5375  0654  3FC1               	movwi [1]fsr1
  5376  0655                     l3550:	
  5377                           
  5378                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1081:      
      +                                 return 0;
  5379  0655  0021               	movlb	1	; select bank1
  5380  0656  01DA               	clrf	?_vfpfcnvrt^(0+128)
  5381  0657  01DB               	clrf	(?_vfpfcnvrt+1)^(0+128)
  5382  0658  0008               	return
  5383  0659                     l3554:	
  5384                           
  5385                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  5386  0659  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5387  065A  0086               	movwf	6
  5388  065B  3001               	movlw	1	; select bank2/3
  5389  065C  0087               	movwf	7
  5390  065D  3F40               	moviw [0]fsr1
  5391  065E  00DC               	movwf	??_vfpfcnvrt^(0+128)
  5392  065F  3F41               	moviw [1]fsr1
  5393  0660  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5394  0661  085C               	movf	??_vfpfcnvrt^(0+128),w
  5395  0662  0084               	movwf	4
  5396  0663  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5397  0664  0085               	movwf	5
  5398  0665  0012               	moviw fsr0++
  5399  0666  3A25               	xorlw	37
  5400  0667  1D03               	btfss	3,2
  5401  0668  2E82               	goto	l3564
  5402                           
  5403                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  5404  0669  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5405  066A  0086               	movwf	6
  5406  066B  3001               	movlw	1	; select bank2/3
  5407  066C  0087               	movwf	7
  5408  066D  3001               	movlw	1
  5409  066E  0781               	addwf	1,f
  5410  066F  3141               	addfsr 1,1
  5411  0670  1803               	skipnc
  5412  0671  0A81               	incf	1,f
  5413                           
  5414                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  5415  0672  3025               	movlw	37
  5416  0673  00A2               	movwf	fputc@c^(0+128)
  5417  0674  3000               	movlw	0
  5418  0675  00A3               	movwf	(fputc@c^(0+128)+1)
  5419  0676  086B               	movf	vfpfcnvrt@fp^(0+128),w
  5420  0677  00DC               	movwf	??_vfpfcnvrt^(0+128)
  5421  0678  085C               	movf	??_vfpfcnvrt^(0+128),w
  5422  0679  00A4               	movwf	fputc@fp^(0+128)
  5423  067A  318B  238E         	fcall	_fputc
  5424  067C                     l3560:	
  5425                           
  5426                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  5427  067C  3001               	movlw	1
  5428  067D  0021               	movlb	1	; select bank1
  5429  067E  00DA               	movwf	?_vfpfcnvrt^(0+128)
  5430  067F  3000               	movlw	0
  5431  0680  00DB               	movwf	(?_vfpfcnvrt^(0+128)+1)
  5432  0681  0008               	return
  5433  0682                     l3564:	
  5434                           
  5435                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  5436  0682  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5437  0683  0086               	movwf	6
  5438  0684  3001               	movlw	1	; select bank2/3
  5439  0685  0087               	movwf	7
  5440  0686  3001               	movlw	1
  5441  0687  0781               	addwf	1,f
  5442  0688  3141               	addfsr 1,1
  5443  0689  1803               	skipnc
  5444  068A  0A81               	incf	1,f
  5445  068B  2E55               	goto	l3550
  5446  068C                     l3570:	
  5447                           
  5448                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  5449  068C  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5450  068D  0086               	movwf	6
  5451  068E  3001               	movlw	1	; select bank2/3
  5452  068F  0087               	movwf	7
  5453  0690  3F40               	moviw [0]fsr1
  5454  0691  00DC               	movwf	??_vfpfcnvrt^(0+128)
  5455  0692  3F41               	moviw [1]fsr1
  5456  0693  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5457  0694  085C               	movf	??_vfpfcnvrt^(0+128),w
  5458  0695  0084               	movwf	4
  5459  0696  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5460  0697  0085               	movwf	5
  5461  0698  0800               	movf	0,w	;code access
  5462  0699  00DE               	movwf	(??_vfpfcnvrt+2)^(0+128)
  5463  069A  01DF               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  5464  069B  085E               	movf	(??_vfpfcnvrt+2)^(0+128),w
  5465  069C  00A2               	movwf	fputc@c^(0+128)
  5466  069D  085F               	movf	(??_vfpfcnvrt+3)^(0+128),w
  5467  069E  00A3               	movwf	(fputc@c+1)^(0+128)
  5468  069F  086B               	movf	vfpfcnvrt@fp^(0+128),w
  5469  06A0  00E0               	movwf	(??_vfpfcnvrt+4)^(0+128)
  5470  06A1  0860               	movf	(??_vfpfcnvrt+4)^(0+128),w
  5471  06A2  00A4               	movwf	fputc@fp^(0+128)
  5472  06A3  318B  238E  3185   	fcall	_fputc
  5473                           
  5474                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  5475  06A6  0021               	movlb	1	; select bank1
  5476  06A7  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5477  06A8  0086               	movwf	6
  5478  06A9  3001               	movlw	1	; select bank2/3
  5479  06AA  0087               	movwf	7
  5480  06AB  3001               	movlw	1
  5481  06AC  0781               	addwf	1,f
  5482  06AD  3141               	addfsr 1,1
  5483  06AE  1803               	skipnc
  5484  06AF  0A81               	incf	1,f
  5485  06B0  2E7C               	goto	l3560
  5486  06B1                     __end_of_vfpfcnvrt:	
  5487                           
  5488                           	psect	text10
  5489  0452                     __ptext10:	
  5490 ;; *************** function _dtoa *****************
  5491 ;; Defined at:
  5492 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5493 ;; Parameters:    Size  Location     Type
  5494 ;;  fp              1    wreg     PTR struct _IO_FILE
  5495 ;;		 -> NULL(0), 
  5496 ;;  d               8   28[BANK1 ] long long 
  5497 ;; Auto vars:     Size  Location     Type
  5498 ;;  fp              1   41[BANK1 ] PTR struct _IO_FILE
  5499 ;;		 -> NULL(0), 
  5500 ;;  n               8   48[BANK1 ] long long 
  5501 ;;  i               2   56[BANK1 ] int 
  5502 ;;  s               2   46[BANK1 ] int 
  5503 ;;  w               2   44[BANK1 ] int 
  5504 ;;  p               2   42[BANK1 ] int 
  5505 ;; Return value:  Size  Location     Type
  5506 ;;                  2   28[BANK1 ] int 
  5507 ;; Registers used:
  5508 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5509 ;; Tracked objects:
  5510 ;;		On entry : 0/0
  5511 ;;		On exit  : 0/0
  5512 ;;		Unchanged: 0/0
  5513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5514 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  5515 ;;      Locals:         0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0
  5516 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5517 ;;      Totals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0
  5518 ;;Total ram usage:       30 bytes
  5519 ;; Hardware stack levels used:    1
  5520 ;; Hardware stack levels required when called:   11
  5521 ;; This function calls:
  5522 ;;		___aodiv
  5523 ;;		___aomod
  5524 ;;		_abs
  5525 ;;		_pad
  5526 ;; This function is called by:
  5527 ;;		_vfpfcnvrt
  5528 ;; This function uses a non-reentrant model
  5529 ;;
  5530                           
  5531                           
  5532                           ;psect for function _dtoa
  5533  0452                     _dtoa:	
  5534                           
  5535                           ;incstack = 0
  5536                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5537                           ;dtoa@fp stored from wreg
  5538  0452  0021               	movlb	1	; select bank1
  5539  0453  00C9               	movwf	dtoa@fp^(0+128)
  5540                           
  5541                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  5542  0454  083C               	movf	dtoa@d^(0+128),w
  5543  0455  00D0               	movwf	dtoa@n^(0+128)
  5544  0456  083D               	movf	(dtoa@d+1)^(0+128),w
  5545  0457  00D1               	movwf	(dtoa@n+1)^(0+128)
  5546  0458  083E               	movf	(dtoa@d+2)^(0+128),w
  5547  0459  00D2               	movwf	(dtoa@n+2)^(0+128)
  5548  045A  083F               	movf	(dtoa@d+3)^(0+128),w
  5549  045B  00D3               	movwf	(dtoa@n+3)^(0+128)
  5550  045C  0840               	movf	(dtoa@d+4)^(0+128),w
  5551  045D  00D4               	movwf	(dtoa@n+4)^(0+128)
  5552  045E  0841               	movf	(dtoa@d+5)^(0+128),w
  5553  045F  00D5               	movwf	(dtoa@n+5)^(0+128)
  5554  0460  0842               	movf	(dtoa@d+6)^(0+128),w
  5555  0461  00D6               	movwf	(dtoa@n+6)^(0+128)
  5556  0462  0843               	movf	(dtoa@d+7)^(0+128),w
  5557  0463  00D7               	movwf	(dtoa@n+7)^(0+128)
  5558                           
  5559                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  5560  0464  30D0               	movlw	low dtoa@n
  5561  0465  0086               	movwf	6
  5562  0466  3000               	movlw	high dtoa@n
  5563  0467  0087               	movwf	7
  5564  0468  3F47               	moviw [7]fsr1
  5565  0469  00C4               	movwf	??_dtoa^(0+128)
  5566  046A  1FC4               	btfss	??_dtoa^(0+128),7
  5567  046B  2C6E               	goto	u4140
  5568  046C  3001               	movlw	1
  5569  046D  2C6F               	goto	u4150
  5570  046E                     u4140:	
  5571  046E  3000               	movlw	0
  5572  046F                     u4150:	
  5573  046F  0021               	movlb	1	; select bank1
  5574  0470  00C5               	movwf	(??_dtoa+1)^(0+128)
  5575  0471  01C6               	clrf	((??_dtoa+1)^(0+128)+1)
  5576  0472  0845               	movf	(??_dtoa+1)^(0+128),w
  5577  0473  00CE               	movwf	dtoa@s^(0+128)
  5578  0474  0846               	movf	(??_dtoa+2)^(0+128),w
  5579  0475  00CF               	movwf	(dtoa@s+1)^(0+128)
  5580                           
  5581                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  5582  0476  084E               	movf	dtoa@s^(0+128),w
  5583  0477  044F               	iorwf	(dtoa@s+1)^(0+128),w
  5584  0478  1903               	btfsc	3,2
  5585  0479  2C98               	goto	l469
  5586                           
  5587                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  5588  047A  09D0               	comf	dtoa@n^(0+128),f
  5589  047B  09D1               	comf	(dtoa@n+1)^(0+128),f
  5590  047C  09D2               	comf	(dtoa@n+2)^(0+128),f
  5591  047D  09D3               	comf	(dtoa@n+3)^(0+128),f
  5592  047E  09D4               	comf	(dtoa@n+4)^(0+128),f
  5593  047F  09D5               	comf	(dtoa@n+5)^(0+128),f
  5594  0480  09D6               	comf	(dtoa@n+6)^(0+128),f
  5595  0481  09D7               	comf	(dtoa@n+7)^(0+128),f
  5596  0482  0AD0               	incf	dtoa@n^(0+128),f
  5597  0483  1D03               	skipz
  5598  0484  2C98               	goto	l469
  5599  0485  0AD1               	incf	(dtoa@n+1)^(0+128),f
  5600  0486  1D03               	skipz
  5601  0487  2C98               	goto	l469
  5602  0488  0AD2               	incf	(dtoa@n+2)^(0+128),f
  5603  0489  1D03               	skipz
  5604  048A  2C98               	goto	l469
  5605  048B  0AD3               	incf	(dtoa@n+3)^(0+128),f
  5606  048C  1D03               	skipz
  5607  048D  2C98               	goto	l469
  5608  048E  0AD4               	incf	(dtoa@n+4)^(0+128),f
  5609  048F  1D03               	skipz
  5610  0490  2C98               	goto	l469
  5611  0491  0AD5               	incf	(dtoa@n+5)^(0+128),f
  5612  0492  1D03               	skipz
  5613  0493  2C98               	goto	l469
  5614  0494  0AD6               	incf	(dtoa@n+6)^(0+128),f
  5615  0495  1D03               	skipz
  5616  0496  2C98               	goto	l469
  5617  0497  0AD7               	incf	(dtoa@n+7)^(0+128),f
  5618  0498                     l469:	
  5619                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 284:     }
  5620                           
  5621                           
  5622                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  5623  0498  0020               	movlb	0	; select bank0
  5624  0499  1BC9               	btfsc	_prec+1,7
  5625  049A  2C9F               	goto	l470
  5626                           
  5627                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  5628  049B  30FD               	movlw	253
  5629  049C  05CA               	andwf	_flags,f
  5630  049D  30FF               	movlw	255
  5631  049E  05CB               	andwf	_flags+1,f
  5632  049F                     l470:	
  5633                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 289:     }
  5634                           
  5635                           
  5636                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  5637  049F  0849               	movf	_prec+1,w
  5638  04A0  3A80               	xorlw	128
  5639  04A1  0021               	movlb	1	; select bank1
  5640  04A2  00C4               	movwf	??_dtoa^(0+128)
  5641  04A3  3080               	movlw	128
  5642  04A4  0244               	subwf	??_dtoa^(0+128),w
  5643  04A5  1D03               	skipz
  5644  04A6  2CAA               	goto	u4195
  5645  04A7  3001               	movlw	1
  5646  04A8  0020               	movlb	0	; select bank0
  5647  04A9  0248               	subwf	_prec,w
  5648  04AA                     u4195:	
  5649  04AA  1803               	skipnc
  5650  04AB  2CB2               	goto	l3476
  5651  04AC  3001               	movlw	1
  5652  04AD  0021               	movlb	1	; select bank1
  5653  04AE  00CA               	movwf	dtoa@p^(0+128)
  5654  04AF  3000               	movlw	0
  5655  04B0  00CB               	movwf	(dtoa@p^(0+128)+1)
  5656  04B1  2CBA               	goto	l474
  5657  04B2                     l3476:	
  5658  04B2  0020               	movlb	0	; select bank0
  5659  04B3  0849               	movf	_prec+1,w
  5660  04B4  0021               	movlb	1	; select bank1
  5661  04B5  00CB               	movwf	(dtoa@p+1)^(0+128)
  5662  04B6  0020               	movlb	0	; select bank0
  5663  04B7  0848               	movf	_prec,w
  5664  04B8  0021               	movlb	1	; select bank1
  5665  04B9  00CA               	movwf	dtoa@p^(0+128)
  5666  04BA                     l474:	
  5667                           
  5668                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  5669  04BA  0020               	movlb	0	; select bank0
  5670  04BB  0847               	movf	_width+1,w
  5671  04BC  0021               	movlb	1	; select bank1
  5672  04BD  00CD               	movwf	(dtoa@w+1)^(0+128)
  5673  04BE  0020               	movlb	0	; select bank0
  5674  04BF  0846               	movf	_width,w
  5675  04C0  0021               	movlb	1	; select bank1
  5676  04C1  00CC               	movwf	dtoa@w^(0+128)
  5677                           
  5678                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  5679  04C2  084E               	movf	dtoa@s^(0+128),w
  5680  04C3  044F               	iorwf	(dtoa@s+1)^(0+128),w
  5681  04C4  1D03               	btfss	3,2
  5682  04C5  2CC9               	goto	l3482
  5683  04C6  0020               	movlb	0	; select bank0
  5684  04C7  1D4A               	btfss	_flags,2
  5685  04C8  2CCE               	goto	l475
  5686  04C9                     l3482:	
  5687                           
  5688                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  5689  04C9  30FF               	movlw	255
  5690  04CA  0021               	movlb	1	; select bank1
  5691  04CB  07CC               	addwf	dtoa@w^(0+128),f
  5692  04CC  30FF               	movlw	255
  5693  04CD  3DCD               	addwfc	(dtoa@w+1)^(0+128),f
  5694  04CE                     l475:	
  5695                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 294:     }
  5696                           
  5697                           
  5698                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  5699  04CE  301F               	movlw	31
  5700  04CF  0021               	movlb	1	; select bank1
  5701  04D0  00D8               	movwf	dtoa@i^(0+128)
  5702  04D1  3000               	movlw	0
  5703  04D2  00D9               	movwf	(dtoa@i^(0+128)+1)
  5704                           
  5705                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  5706  04D3  0023               	movlb	3	; select bank3
  5707  04D4  01BF               	clrf	(_dbuf^(0+384)+31)
  5708                           
  5709                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5710  04D5  2D64               	goto	l478
  5711  04D6                     l3496:	
  5712  04D6  0021               	movlb	1	; select bank1
  5713  04D7  0850               	movf	dtoa@n^(0+128),w
  5714  04D8  0451               	iorwf	(dtoa@n+1)^(0+128),w
  5715  04D9  0452               	iorwf	(dtoa@n+2)^(0+128),w
  5716  04DA  0453               	iorwf	(dtoa@n+3)^(0+128),w
  5717  04DB  0454               	iorwf	(dtoa@n+4)^(0+128),w
  5718  04DC  0455               	iorwf	(dtoa@n+5)^(0+128),w
  5719  04DD  0456               	iorwf	(dtoa@n+6)^(0+128),w
  5720  04DE  0457               	iorwf	(dtoa@n+7)^(0+128),w
  5721  04DF  1D03               	skipz
  5722  04E0  2CFB               	goto	l3486
  5723  04E1  084B               	movf	(dtoa@p+1)^(0+128),w
  5724  04E2  3A80               	xorlw	128
  5725  04E3  00C4               	movwf	??_dtoa^(0+128)
  5726  04E4  3080               	movlw	128
  5727  04E5  0244               	subwf	??_dtoa^(0+128),w
  5728  04E6  1D03               	skipz
  5729  04E7  2CEA               	goto	u4245
  5730  04E8  3001               	movlw	1
  5731  04E9  024A               	subwf	dtoa@p^(0+128),w
  5732  04EA                     u4245:	
  5733  04EA  1803               	skipnc
  5734  04EB  2CFB               	goto	l3486
  5735  04EC  0021               	movlb	1	; select bank1
  5736  04ED  084D               	movf	(dtoa@w+1)^(0+128),w
  5737  04EE  3A80               	xorlw	128
  5738  04EF  00C4               	movwf	??_dtoa^(0+128)
  5739  04F0  3080               	movlw	128
  5740  04F1  0244               	subwf	??_dtoa^(0+128),w
  5741  04F2  1D03               	skipz
  5742  04F3  2CF6               	goto	u4255
  5743  04F4  3001               	movlw	1
  5744  04F5  024C               	subwf	dtoa@w^(0+128),w
  5745  04F6                     u4255:	
  5746  04F6  1C03               	skipc
  5747  04F7  2D70               	goto	l3504
  5748  04F8  0020               	movlb	0	; select bank0
  5749  04F9  1CCA               	btfss	_flags,1
  5750  04FA  2D70               	goto	l3504
  5751  04FB                     l3486:	
  5752                           
  5753                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  5754  04FB  30FF               	movlw	255
  5755  04FC  0021               	movlb	1	; select bank1
  5756  04FD  07D8               	addwf	dtoa@i^(0+128),f
  5757  04FE  30FF               	movlw	255
  5758  04FF  3DD9               	addwfc	(dtoa@i+1)^(0+128),f
  5759                           
  5760                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  5761  0500  300A               	movlw	10
  5762  0501  00A0               	movwf	___aomod@divisor^(0+128)
  5763  0502  01A1               	clrf	(___aomod@divisor+1)^(0+128)
  5764  0503  01A2               	clrf	(___aomod@divisor+2)^(0+128)
  5765  0504  01A3               	clrf	(___aomod@divisor+3)^(0+128)
  5766  0505  01A4               	clrf	(___aomod@divisor+4)^(0+128)
  5767  0506  01A5               	clrf	(___aomod@divisor+5)^(0+128)
  5768  0507  01A6               	clrf	(___aomod@divisor+6)^(0+128)
  5769  0508  01A7               	clrf	(___aomod@divisor+7)^(0+128)
  5770  0509  0850               	movf	dtoa@n^(0+128),w
  5771  050A  00A8               	movwf	___aomod@dividend^(0+128)
  5772  050B  0851               	movf	(dtoa@n+1)^(0+128),w
  5773  050C  00A9               	movwf	(___aomod@dividend+1)^(0+128)
  5774  050D  0852               	movf	(dtoa@n+2)^(0+128),w
  5775  050E  00AA               	movwf	(___aomod@dividend+2)^(0+128)
  5776  050F  0853               	movf	(dtoa@n+3)^(0+128),w
  5777  0510  00AB               	movwf	(___aomod@dividend+3)^(0+128)
  5778  0511  0854               	movf	(dtoa@n+4)^(0+128),w
  5779  0512  00AC               	movwf	(___aomod@dividend+4)^(0+128)
  5780  0513  0855               	movf	(dtoa@n+5)^(0+128),w
  5781  0514  00AD               	movwf	(___aomod@dividend+5)^(0+128)
  5782  0515  0856               	movf	(dtoa@n+6)^(0+128),w
  5783  0516  00AE               	movwf	(___aomod@dividend+6)^(0+128)
  5784  0517  0857               	movf	(dtoa@n+7)^(0+128),w
  5785  0518  00AF               	movwf	(___aomod@dividend+7)^(0+128)
  5786  0519  318F  2721  3184   	fcall	___aomod
  5787  051C  0021               	movlb	1	; select bank1
  5788  051D  0821               	movf	(?___aomod+1)^(0+128),w
  5789  051E  00B4               	movwf	(abs@a+1)^(0+128)
  5790  051F  0820               	movf	?___aomod^(0+128),w
  5791  0520  00B3               	movwf	abs@a^(0+128)
  5792  0521  3189  21DD  3184   	fcall	_abs
  5793  0524  0021               	movlb	1	; select bank1
  5794  0525  0833               	movf	?_abs^(0+128),w
  5795  0526  3E30               	addlw	48
  5796  0527  00C4               	movwf	??_dtoa^(0+128)
  5797  0528  0858               	movf	dtoa@i^(0+128),w
  5798  0529  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5799  052A  0086               	movwf	6
  5800  052B  3001               	movlw	1	; select bank3/4
  5801  052C  0087               	movwf	7
  5802  052D  0844               	movf	??_dtoa^(0+128),w
  5803  052E  0081               	movwf	1
  5804                           
  5805                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  5806  052F  30FF               	movlw	255
  5807  0530  07CA               	addwf	dtoa@p^(0+128),f
  5808  0531  30FF               	movlw	255
  5809  0532  3DCB               	addwfc	(dtoa@p+1)^(0+128),f
  5810                           
  5811                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  5812  0533  30FF               	movlw	255
  5813  0534  07CC               	addwf	dtoa@w^(0+128),f
  5814  0535  30FF               	movlw	255
  5815  0536  3DCD               	addwfc	(dtoa@w+1)^(0+128),f
  5816                           
  5817                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  5818  0537  300A               	movlw	10
  5819  0538  00A0               	movwf	___aodiv@divisor^(0+128)
  5820  0539  01A1               	clrf	(___aodiv@divisor+1)^(0+128)
  5821  053A  01A2               	clrf	(___aodiv@divisor+2)^(0+128)
  5822  053B  01A3               	clrf	(___aodiv@divisor+3)^(0+128)
  5823  053C  01A4               	clrf	(___aodiv@divisor+4)^(0+128)
  5824  053D  01A5               	clrf	(___aodiv@divisor+5)^(0+128)
  5825  053E  01A6               	clrf	(___aodiv@divisor+6)^(0+128)
  5826  053F  01A7               	clrf	(___aodiv@divisor+7)^(0+128)
  5827  0540  0850               	movf	dtoa@n^(0+128),w
  5828  0541  00A8               	movwf	___aodiv@dividend^(0+128)
  5829  0542  0851               	movf	(dtoa@n+1)^(0+128),w
  5830  0543  00A9               	movwf	(___aodiv@dividend+1)^(0+128)
  5831  0544  0852               	movf	(dtoa@n+2)^(0+128),w
  5832  0545  00AA               	movwf	(___aodiv@dividend+2)^(0+128)
  5833  0546  0853               	movf	(dtoa@n+3)^(0+128),w
  5834  0547  00AB               	movwf	(___aodiv@dividend+3)^(0+128)
  5835  0548  0854               	movf	(dtoa@n+4)^(0+128),w
  5836  0549  00AC               	movwf	(___aodiv@dividend+4)^(0+128)
  5837  054A  0855               	movf	(dtoa@n+5)^(0+128),w
  5838  054B  00AD               	movwf	(___aodiv@dividend+5)^(0+128)
  5839  054C  0856               	movf	(dtoa@n+6)^(0+128),w
  5840  054D  00AE               	movwf	(___aodiv@dividend+6)^(0+128)
  5841  054E  0857               	movf	(dtoa@n+7)^(0+128),w
  5842  054F  00AF               	movwf	(___aodiv@dividend+7)^(0+128)
  5843  0550  3186  26B1  3184   	fcall	___aodiv
  5844  0553  0021               	movlb	1	; select bank1
  5845  0554  0820               	movf	?___aodiv^(0+128),w
  5846  0555  00D0               	movwf	dtoa@n^(0+128)
  5847  0556  0821               	movf	(?___aodiv+1)^(0+128),w
  5848  0557  00D1               	movwf	(dtoa@n+1)^(0+128)
  5849  0558  0822               	movf	(?___aodiv+2)^(0+128),w
  5850  0559  00D2               	movwf	(dtoa@n+2)^(0+128)
  5851  055A  0823               	movf	(?___aodiv+3)^(0+128),w
  5852  055B  00D3               	movwf	(dtoa@n+3)^(0+128)
  5853  055C  0824               	movf	(?___aodiv+4)^(0+128),w
  5854  055D  00D4               	movwf	(dtoa@n+4)^(0+128)
  5855  055E  0825               	movf	(?___aodiv+5)^(0+128),w
  5856  055F  00D5               	movwf	(dtoa@n+5)^(0+128)
  5857  0560  0826               	movf	(?___aodiv+6)^(0+128),w
  5858  0561  00D6               	movwf	(dtoa@n+6)^(0+128)
  5859  0562  0827               	movf	(?___aodiv+7)^(0+128),w
  5860  0563  00D7               	movwf	(dtoa@n+7)^(0+128)
  5861  0564                     l478:	
  5862                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 305:     }
  5863                           
  5864                           
  5865                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5866  0564  0021               	movlb	1	; select bank1
  5867  0565  0859               	movf	(dtoa@i+1)^(0+128),w
  5868  0566  3A80               	xorlw	128
  5869  0567  00C4               	movwf	??_dtoa^(0+128)
  5870  0568  3080               	movlw	128
  5871  0569  0244               	subwf	??_dtoa^(0+128),w
  5872  056A  1D03               	skipz
  5873  056B  2D6E               	goto	u4225
  5874  056C  3001               	movlw	1
  5875  056D  0258               	subwf	dtoa@i^(0+128),w
  5876  056E                     u4225:	
  5877  056E  1803               	btfsc	3,0
  5878  056F  2CD6               	goto	l3496
  5879  0570                     l3504:	
  5880                           
  5881                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  5882  0570  0021               	movlb	1	; select bank1
  5883  0571  084E               	movf	dtoa@s^(0+128),w
  5884  0572  044F               	iorwf	(dtoa@s+1)^(0+128),w
  5885  0573  1D03               	btfss	3,2
  5886  0574  2D78               	goto	l3508
  5887  0575  0020               	movlb	0	; select bank0
  5888  0576  1D4A               	btfss	_flags,2
  5889  0577  2D90               	goto	l3518
  5890  0578                     l3508:	
  5891                           
  5892                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  5893  0578  30FF               	movlw	255
  5894  0579  0021               	movlb	1	; select bank1
  5895  057A  07D8               	addwf	dtoa@i^(0+128),f
  5896  057B  30FF               	movlw	255
  5897  057C  3DD9               	addwfc	(dtoa@i+1)^(0+128),f
  5898                           
  5899                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  5900  057D  084E               	movf	dtoa@s^(0+128),w
  5901  057E  044F               	iorwf	(dtoa@s+1)^(0+128),w
  5902  057F  1D03               	btfss	3,2
  5903  0580  2D83               	goto	l3514
  5904  0581  302B               	movlw	43
  5905  0582  2D84               	goto	L1
  5906  0583                     l3514:	
  5907  0583  302D               	movlw	45
  5908  0584                     L1:	
  5909  0584  00C7               	movwf	_dtoa$703^(0+128)
  5910  0585  3000               	movlw	0
  5911  0586  00C8               	movwf	(_dtoa$703^(0+128)+1)
  5912  0587  0847               	movf	_dtoa$703^(0+128),w
  5913  0588  00C4               	movwf	??_dtoa^(0+128)
  5914  0589  0858               	movf	dtoa@i^(0+128),w
  5915  058A  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5916  058B  0086               	movwf	6
  5917  058C  3001               	movlw	1	; select bank3/4
  5918  058D  0087               	movwf	7
  5919  058E  0844               	movf	??_dtoa^(0+128),w
  5920  058F  0081               	movwf	1
  5921  0590                     l3518:	
  5922                           
  5923                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  5924  0590  0021               	movlb	1	; select bank1
  5925  0591  0858               	movf	dtoa@i^(0+128),w
  5926  0592  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5927  0593  00C4               	movwf	??_dtoa^(0+128)
  5928  0594  0844               	movf	??_dtoa^(0+128),w
  5929  0595  00B3               	movwf	pad@buf^(0+128)
  5930  0596  084D               	movf	(dtoa@w+1)^(0+128),w
  5931  0597  00B5               	movwf	(pad@p+1)^(0+128)
  5932  0598  084C               	movf	dtoa@w^(0+128),w
  5933  0599  00B4               	movwf	pad@p^(0+128)
  5934  059A  0849               	movf	dtoa@fp^(0+128),w
  5935  059B  3187  27A8         	fcall	_pad
  5936  059D  0021               	movlb	1	; select bank1
  5937  059E  0834               	movf	(?_pad+1)^(0+128),w
  5938  059F  00BD               	movwf	(?_dtoa+1)^(0+128)
  5939  05A0  0833               	movf	?_pad^(0+128),w
  5940  05A1  00BC               	movwf	?_dtoa^(0+128)
  5941  05A2  0008               	return
  5942  05A3                     __end_of_dtoa:	
  5943                           
  5944                           	psect	text11
  5945  07A8                     __ptext11:	
  5946 ;; *************** function _pad *****************
  5947 ;; Defined at:
  5948 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5949 ;; Parameters:    Size  Location     Type
  5950 ;;  fp              1    wreg     PTR struct _IO_FILE
  5951 ;;		 -> NULL(0), 
  5952 ;;  buf             1   19[BANK1 ] PTR unsigned char 
  5953 ;;		 -> dbuf(32), 
  5954 ;;  p               2   20[BANK1 ] int 
  5955 ;; Auto vars:     Size  Location     Type
  5956 ;;  fp              1   27[BANK1 ] PTR struct _IO_FILE
  5957 ;;		 -> NULL(0), 
  5958 ;;  w               2   25[BANK1 ] int 
  5959 ;;  i               2   23[BANK1 ] int 
  5960 ;; Return value:  Size  Location     Type
  5961 ;;                  2   19[BANK1 ] int 
  5962 ;; Registers used:
  5963 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5964 ;; Tracked objects:
  5965 ;;		On entry : 0/0
  5966 ;;		On exit  : 0/0
  5967 ;;		Unchanged: 0/0
  5968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5969 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5970 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  5971 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5972 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  5973 ;;Total ram usage:        9 bytes
  5974 ;; Hardware stack levels used:    1
  5975 ;; Hardware stack levels required when called:   10
  5976 ;; This function calls:
  5977 ;;		_fputc
  5978 ;;		_fputs
  5979 ;;		_strlen
  5980 ;; This function is called by:
  5981 ;;		_dtoa
  5982 ;; This function uses a non-reentrant model
  5983 ;;
  5984                           
  5985                           
  5986                           ;psect for function _pad
  5987  07A8                     _pad:	
  5988                           
  5989                           ;incstack = 0
  5990                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5991                           ;pad@fp stored from wreg
  5992  07A8  0021               	movlb	1	; select bank1
  5993  07A9  00BB               	movwf	pad@fp^(0+128)
  5994                           
  5995                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  5996  07AA  0020               	movlb	0	; select bank0
  5997  07AB  1C4A               	btfss	_flags,0
  5998  07AC  2FB9               	goto	l3374
  5999                           
  6000                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  6001  07AD  0021               	movlb	1	; select bank1
  6002  07AE  0833               	movf	pad@buf^(0+128),w
  6003  07AF  00AA               	movwf	fputs@s^(0+128)
  6004  07B0  3001               	movlw	1
  6005  07B1  00AB               	movwf	(fputs@s+1)^(0+128)
  6006  07B2  083B               	movf	pad@fp^(0+128),w
  6007  07B3  00B6               	movwf	??_pad^(0+128)
  6008  07B4  0836               	movf	??_pad^(0+128),w
  6009  07B5  00AC               	movwf	fputs@fp^(0+128)
  6010  07B6  318A  228E  3187   	fcall	_fputs
  6011  07B9                     l3374:	
  6012                           
  6013                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  6014  07B9  0021               	movlb	1	; select bank1
  6015  07BA  1BB5               	btfsc	(pad@p+1)^(0+128),7
  6016  07BB  2FC1               	goto	l3378
  6017  07BC  0835               	movf	(pad@p+1)^(0+128),w
  6018  07BD  00BA               	movwf	(pad@w+1)^(0+128)
  6019  07BE  0834               	movf	pad@p^(0+128),w
  6020  07BF  00B9               	movwf	pad@w^(0+128)
  6021  07C0  2FC3               	goto	l461
  6022  07C1                     l3378:	
  6023  07C1  01B9               	clrf	pad@w^(0+128)
  6024  07C2  01BA               	clrf	(pad@w+1)^(0+128)
  6025  07C3                     l461:	
  6026                           
  6027                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  6028  07C3  01B7               	clrf	pad@i^(0+128)
  6029  07C4  01B8               	clrf	(pad@i+1)^(0+128)
  6030  07C5                     l3384:	
  6031                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  6032                           
  6033                           
  6034                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  6035  07C5  0838               	movf	(pad@i+1)^(0+128),w
  6036  07C6  3A80               	xorlw	128
  6037  07C7  00B6               	movwf	??_pad^(0+128)
  6038  07C8  083A               	movf	(pad@w+1)^(0+128),w
  6039  07C9  3A80               	xorlw	128
  6040  07CA  0236               	subwf	??_pad^(0+128),w
  6041  07CB  1D03               	skipz
  6042  07CC  2FCF               	goto	u3905
  6043  07CD  0839               	movf	pad@w^(0+128),w
  6044  07CE  0237               	subwf	pad@i^(0+128),w
  6045  07CF                     u3905:	
  6046  07CF  1803               	btfsc	3,0
  6047  07D0  2FE3               	goto	l464
  6048                           
  6049                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  6050  07D1  3020               	movlw	32
  6051  07D2  0021               	movlb	1	; select bank1
  6052  07D3  00A2               	movwf	fputc@c^(0+128)
  6053  07D4  3000               	movlw	0
  6054  07D5  00A3               	movwf	(fputc@c^(0+128)+1)
  6055  07D6  083B               	movf	pad@fp^(0+128),w
  6056  07D7  00B6               	movwf	??_pad^(0+128)
  6057  07D8  0836               	movf	??_pad^(0+128),w
  6058  07D9  00A4               	movwf	fputc@fp^(0+128)
  6059  07DA  318B  238E  3187   	fcall	_fputc
  6060                           
  6061                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  6062  07DD  3001               	movlw	1
  6063  07DE  0021               	movlb	1	; select bank1
  6064  07DF  07B7               	addwf	pad@i^(0+128),f
  6065  07E0  3000               	movlw	0
  6066  07E1  3DB8               	addwfc	(pad@i+1)^(0+128),f
  6067  07E2  2FC5               	goto	l3384
  6068  07E3                     l464:	
  6069                           
  6070                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  6071  07E3  0020               	movlb	0	; select bank0
  6072  07E4  184A               	btfsc	_flags,0
  6073  07E5  2FF2               	goto	l3388
  6074                           
  6075                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  6076  07E6  0021               	movlb	1	; select bank1
  6077  07E7  0833               	movf	pad@buf^(0+128),w
  6078  07E8  00AA               	movwf	fputs@s^(0+128)
  6079  07E9  3001               	movlw	1
  6080  07EA  00AB               	movwf	(fputs@s+1)^(0+128)
  6081  07EB  083B               	movf	pad@fp^(0+128),w
  6082  07EC  00B6               	movwf	??_pad^(0+128)
  6083  07ED  0836               	movf	??_pad^(0+128),w
  6084  07EE  00AC               	movwf	fputs@fp^(0+128)
  6085  07EF  318A  228E  3187   	fcall	_fputs
  6086  07F2                     l3388:	
  6087                           
  6088                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  6089  07F2  0021               	movlb	1	; select bank1
  6090  07F3  0833               	movf	pad@buf^(0+128),w
  6091  07F4  3189  21F6         	fcall	_strlen
  6092  07F6  0021               	movlb	1	; select bank1
  6093  07F7  0839               	movf	pad@w^(0+128),w
  6094  07F8  0720               	addwf	?_strlen^(0+128),w
  6095  07F9  00B3               	movwf	?_pad^(0+128)
  6096  07FA  083A               	movf	(pad@w+1)^(0+128),w
  6097  07FB  3D21               	addwfc	(?_strlen+1)^(0+128),w
  6098  07FC  00B4               	movwf	(?_pad+1)^(0+128)
  6099  07FD  0008               	return
  6100  07FE                     __end_of_pad:	
  6101                           
  6102                           	psect	text12
  6103  09F6                     __ptext12:	
  6104 ;; *************** function _strlen *****************
  6105 ;; Defined at:
  6106 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  6107 ;; Parameters:    Size  Location     Type
  6108 ;;  s               1    wreg     PTR const unsigned char 
  6109 ;;		 -> dbuf(32), 
  6110 ;; Auto vars:     Size  Location     Type
  6111 ;;  s               1    4[BANK1 ] PTR const unsigned char 
  6112 ;;		 -> dbuf(32), 
  6113 ;;  a               1    3[BANK1 ] PTR const unsigned char 
  6114 ;;		 -> dbuf(32), 
  6115 ;; Return value:  Size  Location     Type
  6116 ;;                  2    0[BANK1 ] unsigned int 
  6117 ;; Registers used:
  6118 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6119 ;; Tracked objects:
  6120 ;;		On entry : 0/0
  6121 ;;		On exit  : 0/0
  6122 ;;		Unchanged: 0/0
  6123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6124 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6125 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6126 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6127 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  6128 ;;Total ram usage:        5 bytes
  6129 ;; Hardware stack levels used:    1
  6130 ;; Hardware stack levels required when called:    6
  6131 ;; This function calls:
  6132 ;;		Nothing
  6133 ;; This function is called by:
  6134 ;;		_pad
  6135 ;; This function uses a non-reentrant model
  6136 ;;
  6137                           
  6138                           
  6139                           ;psect for function _strlen
  6140  09F6                     _strlen:	
  6141                           
  6142                           ;incstack = 0
  6143                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  6144                           ;strlen@s stored from wreg
  6145  09F6  0021               	movlb	1	; select bank1
  6146  09F7  00A4               	movwf	strlen@s^(0+128)
  6147  09F8  0824               	movf	strlen@s^(0+128),w
  6148  09F9  00A2               	movwf	??_strlen^(0+128)
  6149  09FA  0822               	movf	??_strlen^(0+128),w
  6150  09FB  00A3               	movwf	strlen@a^(0+128)
  6151  09FC                     l3364:	
  6152  09FC  0824               	movf	strlen@s^(0+128),w
  6153  09FD  0086               	movwf	6
  6154  09FE  3001               	movlw	1	; select bank2/3
  6155  09FF  0087               	movwf	7
  6156  0A00  0801               	movf	1,w
  6157  0A01  1903               	btfsc	3,2
  6158  0A02  2A08               	goto	l3366
  6159  0A03  3001               	movlw	1
  6160  0A04  00A2               	movwf	??_strlen^(0+128)
  6161  0A05  0822               	movf	??_strlen^(0+128),w
  6162  0A06  07A4               	addwf	strlen@s^(0+128),f
  6163  0A07  29FC               	goto	l3364
  6164  0A08                     l3366:	
  6165  0A08  0823               	movf	strlen@a^(0+128),w
  6166  0A09  0224               	subwf	strlen@s^(0+128),w
  6167  0A0A  00A0               	movwf	?_strlen^(0+128)
  6168  0A0B  01A1               	clrf	(?_strlen+1)^(0+128)
  6169  0A0C  1BA0               	btfsc	?_strlen^(0+128),7
  6170  0A0D  03A1               	decf	(?_strlen+1)^(0+128),f
  6171  0A0E  0008               	return
  6172  0A0F                     __end_of_strlen:	
  6173                           
  6174                           	psect	text13
  6175  0A8E                     __ptext13:	
  6176 ;; *************** function _fputs *****************
  6177 ;; Defined at:
  6178 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  6179 ;; Parameters:    Size  Location     Type
  6180 ;;  s               2   10[BANK1 ] PTR const unsigned char 
  6181 ;;		 -> dbuf(32), STR_6(3), hrDisp(13), distanceDisp(11), 
  6182 ;;		 -> speedDisp(8), 
  6183 ;;  fp              1   12[BANK1 ] PTR struct _IO_FILE
  6184 ;;		 -> NULL(0), 
  6185 ;; Auto vars:     Size  Location     Type
  6186 ;;  i               2   17[BANK1 ] int 
  6187 ;;  c               1   16[BANK1 ] unsigned char 
  6188 ;; Return value:  Size  Location     Type
  6189 ;;                  2   10[BANK1 ] int 
  6190 ;; Registers used:
  6191 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6192 ;; Tracked objects:
  6193 ;;		On entry : 0/0
  6194 ;;		On exit  : 0/0
  6195 ;;		Unchanged: 0/0
  6196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6197 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6198 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6199 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6200 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  6201 ;;Total ram usage:        9 bytes
  6202 ;; Hardware stack levels used:    1
  6203 ;; Hardware stack levels required when called:    9
  6204 ;; This function calls:
  6205 ;;		_fputc
  6206 ;; This function is called by:
  6207 ;;		_pad
  6208 ;;		_puts
  6209 ;; This function uses a non-reentrant model
  6210 ;;
  6211                           
  6212                           
  6213                           ;psect for function _fputs
  6214  0A8E                     _fputs:	
  6215                           
  6216                           ;incstack = 0
  6217                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6218  0A8E  0021               	movlb	1	; select bank1
  6219  0A8F  01B1               	clrf	fputs@i^(0+128)
  6220  0A90  01B2               	clrf	(fputs@i+1)^(0+128)
  6221  0A91                     l3354:	
  6222  0A91  082A               	movf	fputs@s^(0+128),w
  6223  0A92  0731               	addwf	fputs@i^(0+128),w
  6224  0A93  0084               	movwf	4
  6225  0A94  082B               	movf	(fputs@s+1)^(0+128),w
  6226  0A95  3D32               	addwfc	(fputs@i+1)^(0+128),w
  6227  0A96  0085               	movwf	5
  6228  0A97  0800               	movf	0,w	;code access
  6229  0A98  00AD               	movwf	??_fputs^(0+128)
  6230  0A99  082D               	movf	??_fputs^(0+128),w
  6231  0A9A  00B0               	movwf	fputs@c^(0+128)
  6232  0A9B  0830               	movf	fputs@c^(0+128),w
  6233  0A9C  1903               	btfsc	3,2
  6234  0A9D  2AB2               	goto	l3356
  6235  0A9E  0830               	movf	fputs@c^(0+128),w
  6236  0A9F  00AD               	movwf	??_fputs^(0+128)
  6237  0AA0  01AE               	clrf	(??_fputs^(0+128)+1)
  6238  0AA1  082D               	movf	??_fputs^(0+128),w
  6239  0AA2  00A2               	movwf	fputc@c^(0+128)
  6240  0AA3  082E               	movf	(??_fputs+1)^(0+128),w
  6241  0AA4  00A3               	movwf	(fputc@c+1)^(0+128)
  6242  0AA5  082C               	movf	fputs@fp^(0+128),w
  6243  0AA6  00AF               	movwf	(??_fputs+2)^(0+128)
  6244  0AA7  082F               	movf	(??_fputs+2)^(0+128),w
  6245  0AA8  00A4               	movwf	fputc@fp^(0+128)
  6246  0AA9  318B  238E  318A   	fcall	_fputc
  6247  0AAC  3001               	movlw	1
  6248  0AAD  0021               	movlb	1	; select bank1
  6249  0AAE  07B1               	addwf	fputs@i^(0+128),f
  6250  0AAF  3000               	movlw	0
  6251  0AB0  3DB2               	addwfc	(fputs@i+1)^(0+128),f
  6252  0AB1  2A91               	goto	l3354
  6253  0AB2                     l3356:	
  6254  0AB2  0832               	movf	(fputs@i+1)^(0+128),w
  6255  0AB3  00AB               	movwf	(?_fputs+1)^(0+128)
  6256  0AB4  0831               	movf	fputs@i^(0+128),w
  6257  0AB5  00AA               	movwf	?_fputs^(0+128)
  6258  0AB6  0008               	return
  6259  0AB7                     __end_of_fputs:	
  6260                           
  6261                           	psect	text14
  6262  0B8E                     __ptext14:	
  6263 ;; *************** function _fputc *****************
  6264 ;; Defined at:
  6265 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  6266 ;; Parameters:    Size  Location     Type
  6267 ;;  c               2    2[BANK1 ] int 
  6268 ;;  fp              1    4[BANK1 ] PTR struct _IO_FILE
  6269 ;;		 -> NULL(0), 
  6270 ;; Auto vars:     Size  Location     Type
  6271 ;;		None
  6272 ;; Return value:  Size  Location     Type
  6273 ;;                  2    2[BANK1 ] int 
  6274 ;; Registers used:
  6275 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6276 ;; Tracked objects:
  6277 ;;		On entry : 0/0
  6278 ;;		On exit  : 0/0
  6279 ;;		Unchanged: 0/0
  6280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6281 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6283 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  6284 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  6285 ;;Total ram usage:        8 bytes
  6286 ;; Hardware stack levels used:    1
  6287 ;; Hardware stack levels required when called:    8
  6288 ;; This function calls:
  6289 ;;		_putch
  6290 ;; This function is called by:
  6291 ;;		_pad
  6292 ;;		_vfpfcnvrt
  6293 ;;		_fputs
  6294 ;;		_puts
  6295 ;; This function uses a non-reentrant model
  6296 ;;
  6297                           
  6298                           
  6299                           ;psect for function _fputc
  6300  0B8E                     _fputc:	
  6301                           
  6302                           ;incstack = 0
  6303                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6304  0B8E  0021               	movlb	1	; select bank1
  6305  0B8F  0824               	movf	fputc@fp^(0+128),w
  6306  0B90  1D03               	btfss	3,2
  6307  0B91  0824               	movf	fputc@fp^(0+128),w
  6308  0B92  1D03               	btfss	3,2
  6309  0B93  2B99               	goto	l3338
  6310  0B94  0822               	movf	fputc@c^(0+128),w
  6311  0B95  3189  2104  318B   	fcall	_putch
  6312  0B98  2BC5               	goto	l3344
  6313  0B99                     l3338:	
  6314  0B99  0824               	movf	fputc@fp^(0+128),w
  6315  0B9A  3E03               	addlw	3
  6316  0B9B  0086               	movwf	6
  6317  0B9C  0187               	clrf	7
  6318  0B9D  0016               	moviw fsr1++
  6319  0B9E  0401               	iorwf	1,w
  6320  0B9F  1903               	btfsc	3,2
  6321  0BA0  2BBC               	goto	l3342
  6322  0BA1  0824               	movf	fputc@fp^(0+128),w
  6323  0BA2  3E03               	addlw	3
  6324  0BA3  0086               	movwf	6
  6325  0BA4  0187               	clrf	7
  6326  0BA5  3F40               	moviw [0]fsr1
  6327  0BA6  00A5               	movwf	??_fputc^(0+128)
  6328  0BA7  3F41               	moviw [1]fsr1
  6329  0BA8  00A6               	movwf	(??_fputc^(0+128)+1)
  6330  0BA9  0A24               	incf	fputc@fp^(0+128),w
  6331  0BAA  0086               	movwf	6
  6332  0BAB  0187               	clrf	7
  6333  0BAC  3F40               	moviw [0]fsr1
  6334  0BAD  00A7               	movwf	(??_fputc+2)^(0+128)
  6335  0BAE  3F41               	moviw [1]fsr1
  6336  0BAF  00A8               	movwf	((??_fputc+2)^(0+128)+1)
  6337  0BB0  0828               	movf	(??_fputc+3)^(0+128),w
  6338  0BB1  3A80               	xorlw	128
  6339  0BB2  00A9               	movwf	(??_fputc+4)^(0+128)
  6340  0BB3  0826               	movf	(??_fputc+1)^(0+128),w
  6341  0BB4  3A80               	xorlw	128
  6342  0BB5  0229               	subwf	(??_fputc+4)^(0+128),w
  6343  0BB6  1D03               	skipz
  6344  0BB7  2BBA               	goto	u3855
  6345  0BB8  0825               	movf	??_fputc^(0+128),w
  6346  0BB9  0227               	subwf	(??_fputc+2)^(0+128),w
  6347  0BBA                     u3855:	
  6348  0BBA  1803               	skipnc
  6349  0BBB  2BC5               	goto	l3344
  6350  0BBC                     l3342:	
  6351  0BBC  0021               	movlb	1	; select bank1
  6352  0BBD  0A24               	incf	fputc@fp^(0+128),w
  6353  0BBE  0086               	movwf	6
  6354  0BBF  0187               	clrf	7
  6355  0BC0  3001               	movlw	1
  6356  0BC1  0781               	addwf	1,f
  6357  0BC2  3141               	addfsr 1,1
  6358  0BC3  1803               	skipnc
  6359  0BC4  0A81               	incf	1,f
  6360  0BC5                     l3344:	
  6361  0BC5  0021               	movlb	1	; select bank1
  6362  0BC6  0822               	movf	fputc@c^(0+128),w
  6363  0BC7  00A5               	movwf	??_fputc^(0+128)
  6364  0BC8  01A6               	clrf	(??_fputc^(0+128)+1)
  6365  0BC9  0825               	movf	??_fputc^(0+128),w
  6366  0BCA  00A2               	movwf	?_fputc^(0+128)
  6367  0BCB  0826               	movf	(??_fputc+1)^(0+128),w
  6368  0BCC  00A3               	movwf	(?_fputc+1)^(0+128)
  6369  0BCD  0008               	return
  6370  0BCE                     __end_of_fputc:	
  6371                           
  6372                           	psect	text15
  6373  0904                     __ptext15:	
  6374 ;; *************** function _putch *****************
  6375 ;; Defined at:
  6376 ;;		line 151 in file "mcc_generated_files/eusart.c"
  6377 ;; Parameters:    Size  Location     Type
  6378 ;;  txData          1    wreg     unsigned char 
  6379 ;; Auto vars:     Size  Location     Type
  6380 ;;  txData          1    1[BANK1 ] unsigned char 
  6381 ;; Return value:  Size  Location     Type
  6382 ;;                  1    wreg      void 
  6383 ;; Registers used:
  6384 ;;		wreg, status,2, status,0, pclath, cstack
  6385 ;; Tracked objects:
  6386 ;;		On entry : 0/0
  6387 ;;		On exit  : 0/0
  6388 ;;		Unchanged: 0/0
  6389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6391 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6393 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6394 ;;Total ram usage:        1 bytes
  6395 ;; Hardware stack levels used:    1
  6396 ;; Hardware stack levels required when called:    7
  6397 ;; This function calls:
  6398 ;;		_EUSART_Write
  6399 ;; This function is called by:
  6400 ;;		_fputc
  6401 ;; This function uses a non-reentrant model
  6402 ;;
  6403                           
  6404                           
  6405                           ;psect for function _putch
  6406  0904                     _putch:	
  6407                           
  6408                           ;incstack = 0
  6409                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  6410                           ;putch@txData stored from wreg
  6411  0904  0021               	movlb	1	; select bank1
  6412  0905  00A1               	movwf	putch@txData^(0+128)
  6413                           
  6414                           ;mcc_generated_files/eusart.c: 151: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 152: {;mcc_generated_files/eusart.c: 153:     EUSART_Write(txData);
  6415  0906  0821               	movf	putch@txData^(0+128),w
  6416  0907  3189  215C         	fcall	_EUSART_Write
  6417  0909  0008               	return
  6418  090A                     __end_of_putch:	
  6419                           
  6420                           	psect	text16
  6421  095C                     __ptext16:	
  6422 ;; *************** function _EUSART_Write *****************
  6423 ;; Defined at:
  6424 ;;		line 137 in file "mcc_generated_files/eusart.c"
  6425 ;; Parameters:    Size  Location     Type
  6426 ;;  txData          1    wreg     unsigned char 
  6427 ;; Auto vars:     Size  Location     Type
  6428 ;;  txData          1    0[BANK1 ] unsigned char 
  6429 ;; Return value:  Size  Location     Type
  6430 ;;                  1    wreg      void 
  6431 ;; Registers used:
  6432 ;;		wreg
  6433 ;; Tracked objects:
  6434 ;;		On entry : 0/0
  6435 ;;		On exit  : 0/0
  6436 ;;		Unchanged: 0/0
  6437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6439 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6441 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6442 ;;Total ram usage:        1 bytes
  6443 ;; Hardware stack levels used:    1
  6444 ;; Hardware stack levels required when called:    6
  6445 ;; This function calls:
  6446 ;;		Nothing
  6447 ;; This function is called by:
  6448 ;;		_putch
  6449 ;;		_setCursor
  6450 ;;		_backlightBrightness
  6451 ;; This function uses a non-reentrant model
  6452 ;;
  6453                           
  6454                           
  6455                           ;psect for function _EUSART_Write
  6456  095C                     _EUSART_Write:	
  6457                           
  6458                           ;incstack = 0
  6459                           ; Regs used in _EUSART_Write: [wreg]
  6460                           ;EUSART_Write@txData stored from wreg
  6461  095C  0021               	movlb	1	; select bank1
  6462  095D  00A0               	movwf	EUSART_Write@txData^(0+128)
  6463  095E                     l69:	
  6464                           ;mcc_generated_files/eusart.c: 140:     {;mcc_generated_files/eusart.c: 141:     }
  6465                           
  6466                           
  6467                           ;mcc_generated_files/eusart.c: 139:     while(0 == PIR1bits.TXIF)
  6468  095E  0020               	movlb	0	; select bank0
  6469  095F  1E10               	btfss	16,4	;volatile
  6470  0960  295E               	goto	l69
  6471                           
  6472                           ;mcc_generated_files/eusart.c: 143:     TX1REG = txData;
  6473  0961  0021               	movlb	1	; select bank1
  6474  0962  0820               	movf	EUSART_Write@txData^(0+128),w
  6475  0963  0023               	movlb	3	; select bank3
  6476  0964  009A               	movwf	26	;volatile
  6477  0965  0008               	return
  6478  0966                     __end_of_EUSART_Write:	
  6479                           
  6480                           	psect	text17
  6481  09DD                     __ptext17:	
  6482 ;; *************** function _abs *****************
  6483 ;; Defined at:
  6484 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  6485 ;; Parameters:    Size  Location     Type
  6486 ;;  a               2   19[BANK1 ] int 
  6487 ;; Auto vars:     Size  Location     Type
  6488 ;;		None
  6489 ;; Return value:  Size  Location     Type
  6490 ;;                  2   19[BANK1 ] int 
  6491 ;; Registers used:
  6492 ;;		wreg, status,2, status,0
  6493 ;; Tracked objects:
  6494 ;;		On entry : 0/0
  6495 ;;		On exit  : 0/0
  6496 ;;		Unchanged: 0/0
  6497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6498 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6500 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6501 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  6502 ;;Total ram usage:        4 bytes
  6503 ;; Hardware stack levels used:    1
  6504 ;; Hardware stack levels required when called:    6
  6505 ;; This function calls:
  6506 ;;		Nothing
  6507 ;; This function is called by:
  6508 ;;		_dtoa
  6509 ;; This function uses a non-reentrant model
  6510 ;;
  6511                           
  6512                           
  6513                           ;psect for function _abs
  6514  09DD                     _abs:	
  6515                           
  6516                           ;incstack = 0
  6517                           ; Regs used in _abs: [wreg+status,2+status,0]
  6518  09DD  0021               	movlb	1	; select bank1
  6519  09DE  0834               	movf	(abs@a+1)^(0+128),w
  6520  09DF  3A80               	xorlw	128
  6521  09E0  00B5               	movwf	??_abs^(0+128)
  6522  09E1  3080               	movlw	128
  6523  09E2  0235               	subwf	??_abs^(0+128),w
  6524  09E3  1D03               	skipz
  6525  09E4  29E7               	goto	u3925
  6526  09E5  3001               	movlw	1
  6527  09E6  0233               	subwf	abs@a^(0+128),w
  6528  09E7                     u3925:	
  6529  09E7  1803               	skipnc
  6530  09E8  0008               	return
  6531  09E9  0021               	movlb	1	; select bank1
  6532  09EA  0933               	comf	abs@a^(0+128),w
  6533  09EB  00B5               	movwf	??_abs^(0+128)
  6534  09EC  0934               	comf	(abs@a+1)^(0+128),w
  6535  09ED  00B6               	movwf	(??_abs^(0+128)+1)
  6536  09EE  0AB5               	incf	??_abs^(0+128),f
  6537  09EF  1903               	skipnz
  6538  09F0  0AB6               	incf	(??_abs^(0+128)+1),f
  6539  09F1  0835               	movf	??_abs^(0+128),w
  6540  09F2  00B3               	movwf	?_abs^(0+128)
  6541  09F3  0836               	movf	(??_abs+1)^(0+128),w
  6542  09F4  00B4               	movwf	(?_abs+1)^(0+128)
  6543  09F5  0008               	return
  6544  09F6                     __end_of_abs:	
  6545                           
  6546                           	psect	text18
  6547  0F21                     __ptext18:	
  6548 ;; *************** function ___aomod *****************
  6549 ;; Defined at:
  6550 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  6551 ;; Parameters:    Size  Location     Type
  6552 ;;  divisor         8    0[BANK1 ] long long 
  6553 ;;  dividend        8    8[BANK1 ] long long 
  6554 ;; Auto vars:     Size  Location     Type
  6555 ;;  sign            1   18[BANK1 ] unsigned char 
  6556 ;;  counter         1   17[BANK1 ] unsigned char 
  6557 ;; Return value:  Size  Location     Type
  6558 ;;                  8    0[BANK1 ] long long 
  6559 ;; Registers used:
  6560 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6561 ;; Tracked objects:
  6562 ;;		On entry : 0/0
  6563 ;;		On exit  : 0/0
  6564 ;;		Unchanged: 0/0
  6565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6566 ;;      Params:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  6567 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6568 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6569 ;;      Totals:         0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0
  6570 ;;Total ram usage:       19 bytes
  6571 ;; Hardware stack levels used:    1
  6572 ;; Hardware stack levels required when called:    6
  6573 ;; This function calls:
  6574 ;;		Nothing
  6575 ;; This function is called by:
  6576 ;;		_dtoa
  6577 ;; This function uses a non-reentrant model
  6578 ;;
  6579                           
  6580                           
  6581                           ;psect for function ___aomod
  6582  0F21                     ___aomod:	
  6583                           
  6584                           ;incstack = 0
  6585                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  6586  0F21  0021               	movlb	1	; select bank1
  6587  0F22  01B2               	clrf	___aomod@sign^(0+128)
  6588  0F23  30A8               	movlw	low ___aomod@dividend
  6589  0F24  0086               	movwf	6
  6590  0F25  3000               	movlw	high ___aomod@dividend
  6591  0F26  0087               	movwf	7
  6592  0F27  3F47               	moviw [7]fsr1
  6593  0F28  00B0               	movwf	??___aomod^(0+128)
  6594  0F29  1FB0               	btfss	??___aomod^(0+128),7
  6595  0F2A  2F4D               	goto	l3440
  6596  0F2B  0021               	movlb	1	; select bank1
  6597  0F2C  09A8               	comf	___aomod@dividend^(0+128),f
  6598  0F2D  09A9               	comf	(___aomod@dividend+1)^(0+128),f
  6599  0F2E  09AA               	comf	(___aomod@dividend+2)^(0+128),f
  6600  0F2F  09AB               	comf	(___aomod@dividend+3)^(0+128),f
  6601  0F30  09AC               	comf	(___aomod@dividend+4)^(0+128),f
  6602  0F31  09AD               	comf	(___aomod@dividend+5)^(0+128),f
  6603  0F32  09AE               	comf	(___aomod@dividend+6)^(0+128),f
  6604  0F33  09AF               	comf	(___aomod@dividend+7)^(0+128),f
  6605  0F34  0AA8               	incf	___aomod@dividend^(0+128),f
  6606  0F35  1D03               	skipz
  6607  0F36  2F4A               	goto	u405lld
  6608  0F37  0AA9               	incf	(___aomod@dividend+1)^(0+128),f
  6609  0F38  1D03               	skipz
  6610  0F39  2F4A               	goto	u405lld
  6611  0F3A  0AAA               	incf	(___aomod@dividend+2)^(0+128),f
  6612  0F3B  1D03               	skipz
  6613  0F3C  2F4A               	goto	u405lld
  6614  0F3D  0AAB               	incf	(___aomod@dividend+3)^(0+128),f
  6615  0F3E  1D03               	skipz
  6616  0F3F  2F4A               	goto	u405lld
  6617  0F40  0AAC               	incf	(___aomod@dividend+4)^(0+128),f
  6618  0F41  1D03               	skipz
  6619  0F42  2F4A               	goto	u405lld
  6620  0F43  0AAD               	incf	(___aomod@dividend+5)^(0+128),f
  6621  0F44  1D03               	skipz
  6622  0F45  2F4A               	goto	u405lld
  6623  0F46  0AAE               	incf	(___aomod@dividend+6)^(0+128),f
  6624  0F47  1D03               	skipz
  6625  0F48  2F4A               	goto	u405lld
  6626  0F49  0AAF               	incf	(___aomod@dividend+7)^(0+128),f
  6627  0F4A                     u405lld:	
  6628  0F4A  0021               	movlb	1	; select bank1
  6629  0F4B  01B2               	clrf	___aomod@sign^(0+128)
  6630  0F4C  0AB2               	incf	___aomod@sign^(0+128),f
  6631  0F4D                     l3440:	
  6632  0F4D  30A0               	movlw	low ___aomod@divisor
  6633  0F4E  0086               	movwf	6
  6634  0F4F  3000               	movlw	high ___aomod@divisor
  6635  0F50  0087               	movwf	7
  6636  0F51  3F47               	moviw [7]fsr1
  6637  0F52  0021               	movlb	1	; select bank1
  6638  0F53  00B0               	movwf	??___aomod^(0+128)
  6639  0F54  1FB0               	btfss	??___aomod^(0+128),7
  6640  0F55  2F75               	goto	l3444
  6641  0F56  0021               	movlb	1	; select bank1
  6642  0F57  09A0               	comf	___aomod@divisor^(0+128),f
  6643  0F58  09A1               	comf	(___aomod@divisor+1)^(0+128),f
  6644  0F59  09A2               	comf	(___aomod@divisor+2)^(0+128),f
  6645  0F5A  09A3               	comf	(___aomod@divisor+3)^(0+128),f
  6646  0F5B  09A4               	comf	(___aomod@divisor+4)^(0+128),f
  6647  0F5C  09A5               	comf	(___aomod@divisor+5)^(0+128),f
  6648  0F5D  09A6               	comf	(___aomod@divisor+6)^(0+128),f
  6649  0F5E  09A7               	comf	(___aomod@divisor+7)^(0+128),f
  6650  0F5F  0AA0               	incf	___aomod@divisor^(0+128),f
  6651  0F60  1D03               	skipz
  6652  0F61  2F75               	goto	l3444
  6653  0F62  0AA1               	incf	(___aomod@divisor+1)^(0+128),f
  6654  0F63  1D03               	skipz
  6655  0F64  2F75               	goto	l3444
  6656  0F65  0AA2               	incf	(___aomod@divisor+2)^(0+128),f
  6657  0F66  1D03               	skipz
  6658  0F67  2F75               	goto	l3444
  6659  0F68  0AA3               	incf	(___aomod@divisor+3)^(0+128),f
  6660  0F69  1D03               	skipz
  6661  0F6A  2F75               	goto	l3444
  6662  0F6B  0AA4               	incf	(___aomod@divisor+4)^(0+128),f
  6663  0F6C  1D03               	skipz
  6664  0F6D  2F75               	goto	l3444
  6665  0F6E  0AA5               	incf	(___aomod@divisor+5)^(0+128),f
  6666  0F6F  1D03               	skipz
  6667  0F70  2F75               	goto	l3444
  6668  0F71  0AA6               	incf	(___aomod@divisor+6)^(0+128),f
  6669  0F72  1D03               	skipz
  6670  0F73  2F75               	goto	l3444
  6671  0F74  0AA7               	incf	(___aomod@divisor+7)^(0+128),f
  6672  0F75                     l3444:	
  6673  0F75  0021               	movlb	1	; select bank1
  6674  0F76  0820               	movf	___aomod@divisor^(0+128),w
  6675  0F77  0421               	iorwf	(___aomod@divisor+1)^(0+128),w
  6676  0F78  0422               	iorwf	(___aomod@divisor+2)^(0+128),w
  6677  0F79  0423               	iorwf	(___aomod@divisor+3)^(0+128),w
  6678  0F7A  0424               	iorwf	(___aomod@divisor+4)^(0+128),w
  6679  0F7B  0425               	iorwf	(___aomod@divisor+5)^(0+128),w
  6680  0F7C  0426               	iorwf	(___aomod@divisor+6)^(0+128),w
  6681  0F7D  0427               	iorwf	(___aomod@divisor+7)^(0+128),w
  6682  0F7E  1903               	skipnz
  6683  0F7F  2FCD               	goto	l3460
  6684  0F80  01B1               	clrf	___aomod@counter^(0+128)
  6685  0F81  0AB1               	incf	___aomod@counter^(0+128),f
  6686  0F82                     l3452:	
  6687  0F82  1BA7               	btfsc	(___aomod@divisor+7)^(0+128),7
  6688  0F83  2F91               	goto	l3454
  6689  0F84  35A0               	lslf	___aomod@divisor^(0+128),f
  6690  0F85  0DA1               	rlf	(___aomod@divisor+1)^(0+128),f
  6691  0F86  0DA2               	rlf	(___aomod@divisor+2)^(0+128),f
  6692  0F87  0DA3               	rlf	(___aomod@divisor+3)^(0+128),f
  6693  0F88  0DA4               	rlf	(___aomod@divisor+4)^(0+128),f
  6694  0F89  0DA5               	rlf	(___aomod@divisor+5)^(0+128),f
  6695  0F8A  0DA6               	rlf	(___aomod@divisor+6)^(0+128),f
  6696  0F8B  0DA7               	rlf	(___aomod@divisor+7)^(0+128),f
  6697  0F8C  3001               	movlw	1
  6698  0F8D  00B0               	movwf	??___aomod^(0+128)
  6699  0F8E  0830               	movf	??___aomod^(0+128),w
  6700  0F8F  07B1               	addwf	___aomod@counter^(0+128),f
  6701  0F90  2F82               	goto	l3452
  6702  0F91                     l3454:	
  6703  0F91  0827               	movf	(___aomod@divisor+7)^(0+128),w
  6704  0F92  022F               	subwf	(___aomod@dividend+7)^(0+128),w
  6705  0F93  1D03               	skipz
  6706  0F94  2FAF               	goto	u4105
  6707  0F95  0826               	movf	(___aomod@divisor+6)^(0+128),w
  6708  0F96  022E               	subwf	(___aomod@dividend+6)^(0+128),w
  6709  0F97  1D03               	skipz
  6710  0F98  2FAF               	goto	u4105
  6711  0F99  0825               	movf	(___aomod@divisor+5)^(0+128),w
  6712  0F9A  022D               	subwf	(___aomod@dividend+5)^(0+128),w
  6713  0F9B  1D03               	skipz
  6714  0F9C  2FAF               	goto	u4105
  6715  0F9D  0824               	movf	(___aomod@divisor+4)^(0+128),w
  6716  0F9E  022C               	subwf	(___aomod@dividend+4)^(0+128),w
  6717  0F9F  1D03               	skipz
  6718  0FA0  2FAF               	goto	u4105
  6719  0FA1  0823               	movf	(___aomod@divisor+3)^(0+128),w
  6720  0FA2  022B               	subwf	(___aomod@dividend+3)^(0+128),w
  6721  0FA3  1D03               	skipz
  6722  0FA4  2FAF               	goto	u4105
  6723  0FA5  0822               	movf	(___aomod@divisor+2)^(0+128),w
  6724  0FA6  022A               	subwf	(___aomod@dividend+2)^(0+128),w
  6725  0FA7  1D03               	skipz
  6726  0FA8  2FAF               	goto	u4105
  6727  0FA9  0821               	movf	(___aomod@divisor+1)^(0+128),w
  6728  0FAA  0229               	subwf	(___aomod@dividend+1)^(0+128),w
  6729  0FAB  1D03               	skipz
  6730  0FAC  2FAF               	goto	u4105
  6731  0FAD  0820               	movf	___aomod@divisor^(0+128),w
  6732  0FAE  0228               	subwf	___aomod@dividend^(0+128),w
  6733  0FAF                     u4105:	
  6734  0FAF  1C03               	skipc
  6735  0FB0  2FC1               	goto	l3458
  6736  0FB1  0820               	movf	___aomod@divisor^(0+128),w
  6737  0FB2  02A8               	subwf	___aomod@dividend^(0+128),f
  6738  0FB3  0821               	movf	(___aomod@divisor+1)^(0+128),w
  6739  0FB4  3BA9               	subwfb	(___aomod@dividend+1)^(0+128),f
  6740  0FB5  0822               	movf	(___aomod@divisor+2)^(0+128),w
  6741  0FB6  3BAA               	subwfb	(___aomod@dividend+2)^(0+128),f
  6742  0FB7  0823               	movf	(___aomod@divisor+3)^(0+128),w
  6743  0FB8  3BAB               	subwfb	(___aomod@dividend+3)^(0+128),f
  6744  0FB9  0824               	movf	(___aomod@divisor+4)^(0+128),w
  6745  0FBA  3BAC               	subwfb	(___aomod@dividend+4)^(0+128),f
  6746  0FBB  0825               	movf	(___aomod@divisor+5)^(0+128),w
  6747  0FBC  3BAD               	subwfb	(___aomod@dividend+5)^(0+128),f
  6748  0FBD  0826               	movf	(___aomod@divisor+6)^(0+128),w
  6749  0FBE  3BAE               	subwfb	(___aomod@dividend+6)^(0+128),f
  6750  0FBF  0827               	movf	(___aomod@divisor+7)^(0+128),w
  6751  0FC0  3BAF               	subwfb	(___aomod@dividend+7)^(0+128),f
  6752  0FC1                     l3458:	
  6753  0FC1  36A7               	lsrf	(___aomod@divisor+7)^(0+128),f
  6754  0FC2  0CA6               	rrf	(___aomod@divisor+6)^(0+128),f
  6755  0FC3  0CA5               	rrf	(___aomod@divisor+5)^(0+128),f
  6756  0FC4  0CA4               	rrf	(___aomod@divisor+4)^(0+128),f
  6757  0FC5  0CA3               	rrf	(___aomod@divisor+3)^(0+128),f
  6758  0FC6  0CA2               	rrf	(___aomod@divisor+2)^(0+128),f
  6759  0FC7  0CA1               	rrf	(___aomod@divisor+1)^(0+128),f
  6760  0FC8  0CA0               	rrf	___aomod@divisor^(0+128),f
  6761  0FC9  3001               	movlw	1
  6762  0FCA  02B1               	subwf	___aomod@counter^(0+128),f
  6763  0FCB  1D03               	btfss	3,2
  6764  0FCC  2F91               	goto	l3454
  6765  0FCD                     l3460:	
  6766  0FCD  0832               	movf	___aomod@sign^(0+128),w
  6767  0FCE  1903               	btfsc	3,2
  6768  0FCF  2FEE               	goto	l624
  6769  0FD0  09A8               	comf	___aomod@dividend^(0+128),f
  6770  0FD1  09A9               	comf	(___aomod@dividend+1)^(0+128),f
  6771  0FD2  09AA               	comf	(___aomod@dividend+2)^(0+128),f
  6772  0FD3  09AB               	comf	(___aomod@dividend+3)^(0+128),f
  6773  0FD4  09AC               	comf	(___aomod@dividend+4)^(0+128),f
  6774  0FD5  09AD               	comf	(___aomod@dividend+5)^(0+128),f
  6775  0FD6  09AE               	comf	(___aomod@dividend+6)^(0+128),f
  6776  0FD7  09AF               	comf	(___aomod@dividend+7)^(0+128),f
  6777  0FD8  0AA8               	incf	___aomod@dividend^(0+128),f
  6778  0FD9  1D03               	skipz
  6779  0FDA  2FEE               	goto	l624
  6780  0FDB  0AA9               	incf	(___aomod@dividend+1)^(0+128),f
  6781  0FDC  1D03               	skipz
  6782  0FDD  2FEE               	goto	l624
  6783  0FDE  0AAA               	incf	(___aomod@dividend+2)^(0+128),f
  6784  0FDF  1D03               	skipz
  6785  0FE0  2FEE               	goto	l624
  6786  0FE1  0AAB               	incf	(___aomod@dividend+3)^(0+128),f
  6787  0FE2  1D03               	skipz
  6788  0FE3  2FEE               	goto	l624
  6789  0FE4  0AAC               	incf	(___aomod@dividend+4)^(0+128),f
  6790  0FE5  1D03               	skipz
  6791  0FE6  2FEE               	goto	l624
  6792  0FE7  0AAD               	incf	(___aomod@dividend+5)^(0+128),f
  6793  0FE8  1D03               	skipz
  6794  0FE9  2FEE               	goto	l624
  6795  0FEA  0AAE               	incf	(___aomod@dividend+6)^(0+128),f
  6796  0FEB  1D03               	skipz
  6797  0FEC  2FEE               	goto	l624
  6798  0FED  0AAF               	incf	(___aomod@dividend+7)^(0+128),f
  6799  0FEE                     l624:	
  6800  0FEE  0021               	movlb	1	; select bank1
  6801  0FEF  0828               	movf	___aomod@dividend^(0+128),w
  6802  0FF0  00A0               	movwf	?___aomod^(0+128)
  6803  0FF1  0829               	movf	(___aomod@dividend+1)^(0+128),w
  6804  0FF2  00A1               	movwf	(?___aomod+1)^(0+128)
  6805  0FF3  082A               	movf	(___aomod@dividend+2)^(0+128),w
  6806  0FF4  00A2               	movwf	(?___aomod+2)^(0+128)
  6807  0FF5  082B               	movf	(___aomod@dividend+3)^(0+128),w
  6808  0FF6  00A3               	movwf	(?___aomod+3)^(0+128)
  6809  0FF7  082C               	movf	(___aomod@dividend+4)^(0+128),w
  6810  0FF8  00A4               	movwf	(?___aomod+4)^(0+128)
  6811  0FF9  082D               	movf	(___aomod@dividend+5)^(0+128),w
  6812  0FFA  00A5               	movwf	(?___aomod+5)^(0+128)
  6813  0FFB  082E               	movf	(___aomod@dividend+6)^(0+128),w
  6814  0FFC  00A6               	movwf	(?___aomod+6)^(0+128)
  6815  0FFD  082F               	movf	(___aomod@dividend+7)^(0+128),w
  6816  0FFE  00A7               	movwf	(?___aomod+7)^(0+128)
  6817  0FFF  0008               	return
  6818  1000                     __end_of___aomod:	
  6819                           
  6820                           	psect	text19
  6821  06B1                     __ptext19:	
  6822 ;; *************** function ___aodiv *****************
  6823 ;; Defined at:
  6824 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  6825 ;; Parameters:    Size  Location     Type
  6826 ;;  divisor         8    0[BANK1 ] long long 
  6827 ;;  dividend        8    8[BANK1 ] long long 
  6828 ;; Auto vars:     Size  Location     Type
  6829 ;;  quotient        8   19[BANK1 ] long long 
  6830 ;;  sign            1   18[BANK1 ] unsigned char 
  6831 ;;  counter         1   17[BANK1 ] unsigned char 
  6832 ;; Return value:  Size  Location     Type
  6833 ;;                  8    0[BANK1 ] long long 
  6834 ;; Registers used:
  6835 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6836 ;; Tracked objects:
  6837 ;;		On entry : 0/0
  6838 ;;		On exit  : 0/0
  6839 ;;		Unchanged: 0/0
  6840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6841 ;;      Params:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  6842 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  6843 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6844 ;;      Totals:         0       0      27       0       0       0       0       0       0       0       0       0       
      +0       0
  6845 ;;Total ram usage:       27 bytes
  6846 ;; Hardware stack levels used:    1
  6847 ;; Hardware stack levels required when called:    6
  6848 ;; This function calls:
  6849 ;;		Nothing
  6850 ;; This function is called by:
  6851 ;;		_dtoa
  6852 ;; This function uses a non-reentrant model
  6853 ;;
  6854                           
  6855                           
  6856                           ;psect for function ___aodiv
  6857  06B1                     ___aodiv:	
  6858                           
  6859                           ;incstack = 0
  6860                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  6861  06B1  0021               	movlb	1	; select bank1
  6862  06B2  01B2               	clrf	___aodiv@sign^(0+128)
  6863  06B3  30A0               	movlw	low ___aodiv@divisor
  6864  06B4  0086               	movwf	6
  6865  06B5  3000               	movlw	high ___aodiv@divisor
  6866  06B6  0087               	movwf	7
  6867  06B7  3F47               	moviw [7]fsr1
  6868  06B8  00B0               	movwf	??___aodiv^(0+128)
  6869  06B9  1FB0               	btfss	??___aodiv^(0+128),7
  6870  06BA  2EDD               	goto	l3402
  6871  06BB  0021               	movlb	1	; select bank1
  6872  06BC  09A0               	comf	___aodiv@divisor^(0+128),f
  6873  06BD  09A1               	comf	(___aodiv@divisor+1)^(0+128),f
  6874  06BE  09A2               	comf	(___aodiv@divisor+2)^(0+128),f
  6875  06BF  09A3               	comf	(___aodiv@divisor+3)^(0+128),f
  6876  06C0  09A4               	comf	(___aodiv@divisor+4)^(0+128),f
  6877  06C1  09A5               	comf	(___aodiv@divisor+5)^(0+128),f
  6878  06C2  09A6               	comf	(___aodiv@divisor+6)^(0+128),f
  6879  06C3  09A7               	comf	(___aodiv@divisor+7)^(0+128),f
  6880  06C4  0AA0               	incf	___aodiv@divisor^(0+128),f
  6881  06C5  1D03               	skipz
  6882  06C6  2EDA               	goto	u394lld
  6883  06C7  0AA1               	incf	(___aodiv@divisor+1)^(0+128),f
  6884  06C8  1D03               	skipz
  6885  06C9  2EDA               	goto	u394lld
  6886  06CA  0AA2               	incf	(___aodiv@divisor+2)^(0+128),f
  6887  06CB  1D03               	skipz
  6888  06CC  2EDA               	goto	u394lld
  6889  06CD  0AA3               	incf	(___aodiv@divisor+3)^(0+128),f
  6890  06CE  1D03               	skipz
  6891  06CF  2EDA               	goto	u394lld
  6892  06D0  0AA4               	incf	(___aodiv@divisor+4)^(0+128),f
  6893  06D1  1D03               	skipz
  6894  06D2  2EDA               	goto	u394lld
  6895  06D3  0AA5               	incf	(___aodiv@divisor+5)^(0+128),f
  6896  06D4  1D03               	skipz
  6897  06D5  2EDA               	goto	u394lld
  6898  06D6  0AA6               	incf	(___aodiv@divisor+6)^(0+128),f
  6899  06D7  1D03               	skipz
  6900  06D8  2EDA               	goto	u394lld
  6901  06D9  0AA7               	incf	(___aodiv@divisor+7)^(0+128),f
  6902  06DA                     u394lld:	
  6903  06DA  0021               	movlb	1	; select bank1
  6904  06DB  01B2               	clrf	___aodiv@sign^(0+128)
  6905  06DC  0AB2               	incf	___aodiv@sign^(0+128),f
  6906  06DD                     l3402:	
  6907  06DD  30A8               	movlw	low ___aodiv@dividend
  6908  06DE  0086               	movwf	6
  6909  06DF  3000               	movlw	high ___aodiv@dividend
  6910  06E0  0087               	movwf	7
  6911  06E1  3F47               	moviw [7]fsr1
  6912  06E2  0021               	movlb	1	; select bank1
  6913  06E3  00B0               	movwf	??___aodiv^(0+128)
  6914  06E4  1FB0               	btfss	??___aodiv^(0+128),7
  6915  06E5  2F0A               	goto	l3408
  6916  06E6  0021               	movlb	1	; select bank1
  6917  06E7  09A8               	comf	___aodiv@dividend^(0+128),f
  6918  06E8  09A9               	comf	(___aodiv@dividend+1)^(0+128),f
  6919  06E9  09AA               	comf	(___aodiv@dividend+2)^(0+128),f
  6920  06EA  09AB               	comf	(___aodiv@dividend+3)^(0+128),f
  6921  06EB  09AC               	comf	(___aodiv@dividend+4)^(0+128),f
  6922  06EC  09AD               	comf	(___aodiv@dividend+5)^(0+128),f
  6923  06ED  09AE               	comf	(___aodiv@dividend+6)^(0+128),f
  6924  06EE  09AF               	comf	(___aodiv@dividend+7)^(0+128),f
  6925  06EF  0AA8               	incf	___aodiv@dividend^(0+128),f
  6926  06F0  1D03               	skipz
  6927  06F1  2F05               	goto	l3406
  6928  06F2  0AA9               	incf	(___aodiv@dividend+1)^(0+128),f
  6929  06F3  1D03               	skipz
  6930  06F4  2F05               	goto	l3406
  6931  06F5  0AAA               	incf	(___aodiv@dividend+2)^(0+128),f
  6932  06F6  1D03               	skipz
  6933  06F7  2F05               	goto	l3406
  6934  06F8  0AAB               	incf	(___aodiv@dividend+3)^(0+128),f
  6935  06F9  1D03               	skipz
  6936  06FA  2F05               	goto	l3406
  6937  06FB  0AAC               	incf	(___aodiv@dividend+4)^(0+128),f
  6938  06FC  1D03               	skipz
  6939  06FD  2F05               	goto	l3406
  6940  06FE  0AAD               	incf	(___aodiv@dividend+5)^(0+128),f
  6941  06FF  1D03               	skipz
  6942  0700  2F05               	goto	l3406
  6943  0701  0AAE               	incf	(___aodiv@dividend+6)^(0+128),f
  6944  0702  1D03               	skipz
  6945  0703  2F05               	goto	l3406
  6946  0704  0AAF               	incf	(___aodiv@dividend+7)^(0+128),f
  6947  0705                     l3406:	
  6948  0705  3001               	movlw	1
  6949  0706  0021               	movlb	1	; select bank1
  6950  0707  00B0               	movwf	??___aodiv^(0+128)
  6951  0708  0830               	movf	??___aodiv^(0+128),w
  6952  0709  06B2               	xorwf	___aodiv@sign^(0+128),f
  6953  070A                     l3408:	
  6954  070A  30B3               	movlw	low ___aodiv@quotient
  6955  070B  0086               	movwf	6
  6956  070C  3000               	movlw	high ___aodiv@quotient
  6957  070D  0087               	movwf	7
  6958  070E  3008               	movlw	8
  6959  070F  0021               	movlb	1	; select bank1
  6960  0710  00B0               	movwf	??___aodiv^(0+128)
  6961  0711  3000               	movlw	0
  6962  0712                     u3970:	
  6963  0712  001E               	movwi fsr1++
  6964  0713  0BB0               	decfsz	??___aodiv^(0+128),f
  6965  0714  2F12               	goto	u3970
  6966  0715  0820               	movf	___aodiv@divisor^(0+128),w
  6967  0716  0421               	iorwf	(___aodiv@divisor+1)^(0+128),w
  6968  0717  0422               	iorwf	(___aodiv@divisor+2)^(0+128),w
  6969  0718  0423               	iorwf	(___aodiv@divisor+3)^(0+128),w
  6970  0719  0424               	iorwf	(___aodiv@divisor+4)^(0+128),w
  6971  071A  0425               	iorwf	(___aodiv@divisor+5)^(0+128),w
  6972  071B  0426               	iorwf	(___aodiv@divisor+6)^(0+128),w
  6973  071C  0427               	iorwf	(___aodiv@divisor+7)^(0+128),w
  6974  071D  1903               	skipnz
  6975  071E  2F75               	goto	l3430
  6976  071F  01B1               	clrf	___aodiv@counter^(0+128)
  6977  0720  0AB1               	incf	___aodiv@counter^(0+128),f
  6978  0721                     l3418:	
  6979  0721  1BA7               	btfsc	(___aodiv@divisor+7)^(0+128),7
  6980  0722  2F30               	goto	l3420
  6981  0723  35A0               	lslf	___aodiv@divisor^(0+128),f
  6982  0724  0DA1               	rlf	(___aodiv@divisor+1)^(0+128),f
  6983  0725  0DA2               	rlf	(___aodiv@divisor+2)^(0+128),f
  6984  0726  0DA3               	rlf	(___aodiv@divisor+3)^(0+128),f
  6985  0727  0DA4               	rlf	(___aodiv@divisor+4)^(0+128),f
  6986  0728  0DA5               	rlf	(___aodiv@divisor+5)^(0+128),f
  6987  0729  0DA6               	rlf	(___aodiv@divisor+6)^(0+128),f
  6988  072A  0DA7               	rlf	(___aodiv@divisor+7)^(0+128),f
  6989  072B  3001               	movlw	1
  6990  072C  00B0               	movwf	??___aodiv^(0+128)
  6991  072D  0830               	movf	??___aodiv^(0+128),w
  6992  072E  07B1               	addwf	___aodiv@counter^(0+128),f
  6993  072F  2F21               	goto	l3418
  6994  0730                     l3420:	
  6995  0730  35B3               	lslf	___aodiv@quotient^(0+128),f
  6996  0731  0DB4               	rlf	(___aodiv@quotient+1)^(0+128),f
  6997  0732  0DB5               	rlf	(___aodiv@quotient+2)^(0+128),f
  6998  0733  0DB6               	rlf	(___aodiv@quotient+3)^(0+128),f
  6999  0734  0DB7               	rlf	(___aodiv@quotient+4)^(0+128),f
  7000  0735  0DB8               	rlf	(___aodiv@quotient+5)^(0+128),f
  7001  0736  0DB9               	rlf	(___aodiv@quotient+6)^(0+128),f
  7002  0737  0DBA               	rlf	(___aodiv@quotient+7)^(0+128),f
  7003  0738  0827               	movf	(___aodiv@divisor+7)^(0+128),w
  7004  0739  022F               	subwf	(___aodiv@dividend+7)^(0+128),w
  7005  073A  1D03               	skipz
  7006  073B  2F56               	goto	u4005
  7007  073C  0826               	movf	(___aodiv@divisor+6)^(0+128),w
  7008  073D  022E               	subwf	(___aodiv@dividend+6)^(0+128),w
  7009  073E  1D03               	skipz
  7010  073F  2F56               	goto	u4005
  7011  0740  0825               	movf	(___aodiv@divisor+5)^(0+128),w
  7012  0741  022D               	subwf	(___aodiv@dividend+5)^(0+128),w
  7013  0742  1D03               	skipz
  7014  0743  2F56               	goto	u4005
  7015  0744  0824               	movf	(___aodiv@divisor+4)^(0+128),w
  7016  0745  022C               	subwf	(___aodiv@dividend+4)^(0+128),w
  7017  0746  1D03               	skipz
  7018  0747  2F56               	goto	u4005
  7019  0748  0823               	movf	(___aodiv@divisor+3)^(0+128),w
  7020  0749  022B               	subwf	(___aodiv@dividend+3)^(0+128),w
  7021  074A  1D03               	skipz
  7022  074B  2F56               	goto	u4005
  7023  074C  0822               	movf	(___aodiv@divisor+2)^(0+128),w
  7024  074D  022A               	subwf	(___aodiv@dividend+2)^(0+128),w
  7025  074E  1D03               	skipz
  7026  074F  2F56               	goto	u4005
  7027  0750  0821               	movf	(___aodiv@divisor+1)^(0+128),w
  7028  0751  0229               	subwf	(___aodiv@dividend+1)^(0+128),w
  7029  0752  1D03               	skipz
  7030  0753  2F56               	goto	u4005
  7031  0754  0820               	movf	___aodiv@divisor^(0+128),w
  7032  0755  0228               	subwf	___aodiv@dividend^(0+128),w
  7033  0756                     u4005:	
  7034  0756  1C03               	skipc
  7035  0757  2F69               	goto	l3428
  7036  0758  0820               	movf	___aodiv@divisor^(0+128),w
  7037  0759  02A8               	subwf	___aodiv@dividend^(0+128),f
  7038  075A  0821               	movf	(___aodiv@divisor+1)^(0+128),w
  7039  075B  3BA9               	subwfb	(___aodiv@dividend+1)^(0+128),f
  7040  075C  0822               	movf	(___aodiv@divisor+2)^(0+128),w
  7041  075D  3BAA               	subwfb	(___aodiv@dividend+2)^(0+128),f
  7042  075E  0823               	movf	(___aodiv@divisor+3)^(0+128),w
  7043  075F  3BAB               	subwfb	(___aodiv@dividend+3)^(0+128),f
  7044  0760  0824               	movf	(___aodiv@divisor+4)^(0+128),w
  7045  0761  3BAC               	subwfb	(___aodiv@dividend+4)^(0+128),f
  7046  0762  0825               	movf	(___aodiv@divisor+5)^(0+128),w
  7047  0763  3BAD               	subwfb	(___aodiv@dividend+5)^(0+128),f
  7048  0764  0826               	movf	(___aodiv@divisor+6)^(0+128),w
  7049  0765  3BAE               	subwfb	(___aodiv@dividend+6)^(0+128),f
  7050  0766  0827               	movf	(___aodiv@divisor+7)^(0+128),w
  7051  0767  3BAF               	subwfb	(___aodiv@dividend+7)^(0+128),f
  7052  0768  1433               	bsf	___aodiv@quotient^(0+128),0
  7053  0769                     l3428:	
  7054  0769  36A7               	lsrf	(___aodiv@divisor+7)^(0+128),f
  7055  076A  0CA6               	rrf	(___aodiv@divisor+6)^(0+128),f
  7056  076B  0CA5               	rrf	(___aodiv@divisor+5)^(0+128),f
  7057  076C  0CA4               	rrf	(___aodiv@divisor+4)^(0+128),f
  7058  076D  0CA3               	rrf	(___aodiv@divisor+3)^(0+128),f
  7059  076E  0CA2               	rrf	(___aodiv@divisor+2)^(0+128),f
  7060  076F  0CA1               	rrf	(___aodiv@divisor+1)^(0+128),f
  7061  0770  0CA0               	rrf	___aodiv@divisor^(0+128),f
  7062  0771  3001               	movlw	1
  7063  0772  02B1               	subwf	___aodiv@counter^(0+128),f
  7064  0773  1D03               	btfss	3,2
  7065  0774  2F30               	goto	l3420
  7066  0775                     l3430:	
  7067  0775  0832               	movf	___aodiv@sign^(0+128),w
  7068  0776  1903               	btfsc	3,2
  7069  0777  2F96               	goto	l611
  7070  0778  09B3               	comf	___aodiv@quotient^(0+128),f
  7071  0779  09B4               	comf	(___aodiv@quotient+1)^(0+128),f
  7072  077A  09B5               	comf	(___aodiv@quotient+2)^(0+128),f
  7073  077B  09B6               	comf	(___aodiv@quotient+3)^(0+128),f
  7074  077C  09B7               	comf	(___aodiv@quotient+4)^(0+128),f
  7075  077D  09B8               	comf	(___aodiv@quotient+5)^(0+128),f
  7076  077E  09B9               	comf	(___aodiv@quotient+6)^(0+128),f
  7077  077F  09BA               	comf	(___aodiv@quotient+7)^(0+128),f
  7078  0780  0AB3               	incf	___aodiv@quotient^(0+128),f
  7079  0781  1D03               	skipz
  7080  0782  2F96               	goto	l611
  7081  0783  0AB4               	incf	(___aodiv@quotient+1)^(0+128),f
  7082  0784  1D03               	skipz
  7083  0785  2F96               	goto	l611
  7084  0786  0AB5               	incf	(___aodiv@quotient+2)^(0+128),f
  7085  0787  1D03               	skipz
  7086  0788  2F96               	goto	l611
  7087  0789  0AB6               	incf	(___aodiv@quotient+3)^(0+128),f
  7088  078A  1D03               	skipz
  7089  078B  2F96               	goto	l611
  7090  078C  0AB7               	incf	(___aodiv@quotient+4)^(0+128),f
  7091  078D  1D03               	skipz
  7092  078E  2F96               	goto	l611
  7093  078F  0AB8               	incf	(___aodiv@quotient+5)^(0+128),f
  7094  0790  1D03               	skipz
  7095  0791  2F96               	goto	l611
  7096  0792  0AB9               	incf	(___aodiv@quotient+6)^(0+128),f
  7097  0793  1D03               	skipz
  7098  0794  2F96               	goto	l611
  7099  0795  0ABA               	incf	(___aodiv@quotient+7)^(0+128),f
  7100  0796                     l611:	
  7101  0796  0021               	movlb	1	; select bank1
  7102  0797  0833               	movf	___aodiv@quotient^(0+128),w
  7103  0798  00A0               	movwf	?___aodiv^(0+128)
  7104  0799  0834               	movf	(___aodiv@quotient+1)^(0+128),w
  7105  079A  00A1               	movwf	(?___aodiv+1)^(0+128)
  7106  079B  0835               	movf	(___aodiv@quotient+2)^(0+128),w
  7107  079C  00A2               	movwf	(?___aodiv+2)^(0+128)
  7108  079D  0836               	movf	(___aodiv@quotient+3)^(0+128),w
  7109  079E  00A3               	movwf	(?___aodiv+3)^(0+128)
  7110  079F  0837               	movf	(___aodiv@quotient+4)^(0+128),w
  7111  07A0  00A4               	movwf	(?___aodiv+4)^(0+128)
  7112  07A1  0838               	movf	(___aodiv@quotient+5)^(0+128),w
  7113  07A2  00A5               	movwf	(?___aodiv+5)^(0+128)
  7114  07A3  0839               	movf	(___aodiv@quotient+6)^(0+128),w
  7115  07A4  00A6               	movwf	(?___aodiv+6)^(0+128)
  7116  07A5  083A               	movf	(___aodiv@quotient+7)^(0+128),w
  7117  07A6  00A7               	movwf	(?___aodiv+7)^(0+128)
  7118  07A7  0008               	return
  7119  07A8                     __end_of___aodiv:	
  7120                           
  7121                           	psect	text20
  7122  0BCE                     __ptext20:	
  7123 ;; *************** function ___fltol *****************
  7124 ;; Defined at:
  7125 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
  7126 ;; Parameters:    Size  Location     Type
  7127 ;;  f1              4    0[BANK1 ] long long 
  7128 ;; Auto vars:     Size  Location     Type
  7129 ;;  exp1            1   10[BANK1 ] unsigned char 
  7130 ;;  sign1           1    9[BANK1 ] unsigned char 
  7131 ;; Return value:  Size  Location     Type
  7132 ;;                  4    0[BANK1 ] long 
  7133 ;; Registers used:
  7134 ;;		wreg, status,2, status,0
  7135 ;; Tracked objects:
  7136 ;;		On entry : 0/0
  7137 ;;		On exit  : 0/0
  7138 ;;		Unchanged: 0/0
  7139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7140 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  7141 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7142 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  7143 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0
  7144 ;;Total ram usage:       11 bytes
  7145 ;; Hardware stack levels used:    1
  7146 ;; Hardware stack levels required when called:    6
  7147 ;; This function calls:
  7148 ;;		Nothing
  7149 ;; This function is called by:
  7150 ;;		_main
  7151 ;; This function uses a non-reentrant model
  7152 ;;
  7153                           
  7154                           
  7155                           ;psect for function ___fltol
  7156  0BCE                     ___fltol:	
  7157                           
  7158                           ;incstack = 0
  7159                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7160  0BCE  1003               	clrc
  7161  0BCF  0021               	movlb	1	; select bank1
  7162  0BD0  0D22               	rlf	(___fltol@f1+2)^(0+128),w
  7163  0BD1  0D23               	rlf	(___fltol@f1+3)^(0+128),w
  7164  0BD2  00A4               	movwf	??___fltol^(0+128)
  7165  0BD3  0824               	movf	??___fltol^(0+128),w
  7166  0BD4  00AA               	movwf	___fltol@exp1^(0+128)
  7167  0BD5  082A               	movf	___fltol@exp1^(0+128),w
  7168  0BD6  1D03               	btfss	3,2
  7169  0BD7  2BE1               	goto	l3818
  7170  0BD8                     l3814:	
  7171  0BD8  3000               	movlw	0
  7172  0BD9  00A3               	movwf	(?___fltol+3)^(0+128)
  7173  0BDA  3000               	movlw	0
  7174  0BDB  00A2               	movwf	(?___fltol+2)^(0+128)
  7175  0BDC  3000               	movlw	0
  7176  0BDD  00A1               	movwf	(?___fltol+1)^(0+128)
  7177  0BDE  3000               	movlw	0
  7178  0BDF  00A0               	movwf	?___fltol^(0+128)
  7179  0BE0  0008               	return
  7180  0BE1                     l3818:	
  7181  0BE1  0820               	movf	___fltol@f1^(0+128),w
  7182  0BE2  00A4               	movwf	??___fltol^(0+128)
  7183  0BE3  0821               	movf	(___fltol@f1+1)^(0+128),w
  7184  0BE4  00A5               	movwf	(??___fltol^(0+128)+1)
  7185  0BE5  0822               	movf	(___fltol@f1+2)^(0+128),w
  7186  0BE6  00A6               	movwf	(??___fltol^(0+128)+2)
  7187  0BE7  0823               	movf	(___fltol@f1+3)^(0+128),w
  7188  0BE8  00A7               	movwf	(??___fltol^(0+128)+3)
  7189  0BE9  301F               	movlw	31
  7190  0BEA                     u4505:	
  7191  0BEA  36A7               	lsrf	(??___fltol^(0+128)+3),f
  7192  0BEB  0CA6               	rrf	(??___fltol^(0+128)+2),f
  7193  0BEC  0CA5               	rrf	(??___fltol^(0+128)+1),f
  7194  0BED  0CA4               	rrf	??___fltol^(0+128),f
  7195  0BEE  0B89               	decfsz	9,f
  7196  0BEF  2BEA               	goto	u4505
  7197  0BF0  0824               	movf	??___fltol^(0+128),w
  7198  0BF1  00A8               	movwf	(??___fltol+4)^(0+128)
  7199  0BF2  0828               	movf	(??___fltol+4)^(0+128),w
  7200  0BF3  00A9               	movwf	___fltol@sign1^(0+128)
  7201  0BF4  17A2               	bsf	(___fltol@f1^(0+128)+2),7
  7202  0BF5  30FF               	movlw	255
  7203  0BF6  05A0               	andwf	___fltol@f1^(0+128),f
  7204  0BF7  30FF               	movlw	255
  7205  0BF8  05A1               	andwf	(___fltol@f1+1)^(0+128),f
  7206  0BF9  30FF               	movlw	255
  7207  0BFA  05A2               	andwf	(___fltol@f1+2)^(0+128),f
  7208  0BFB  3000               	movlw	0
  7209  0BFC  05A3               	andwf	(___fltol@f1+3)^(0+128),f
  7210  0BFD  3096               	movlw	150
  7211  0BFE  02AA               	subwf	___fltol@exp1^(0+128),f
  7212  0BFF  1FAA               	btfss	___fltol@exp1^(0+128),7
  7213  0C00  2C14               	goto	l3836
  7214  0C01  082A               	movf	___fltol@exp1^(0+128),w
  7215  0C02  3A80               	xorlw	128
  7216  0C03  3E97               	addlw	151
  7217  0C04  1C03               	btfss	3,0
  7218  0C05  2BD8               	goto	l3814
  7219  0C06                     l3834:	
  7220  0C06  3001               	movlw	1
  7221  0C07                     u4535:	
  7222  0C07  36A3               	lsrf	(___fltol@f1+3)^(0+128),f
  7223  0C08  0CA2               	rrf	(___fltol@f1+2)^(0+128),f
  7224  0C09  0CA1               	rrf	(___fltol@f1+1)^(0+128),f
  7225  0C0A  0CA0               	rrf	___fltol@f1^(0+128),f
  7226  0C0B  0B89               	decfsz	9,f
  7227  0C0C  2C07               	goto	u4535
  7228  0C0D  3001               	movlw	1
  7229  0C0E  00A4               	movwf	??___fltol^(0+128)
  7230  0C0F  0824               	movf	??___fltol^(0+128),w
  7231  0C10  07AA               	addwf	___fltol@exp1^(0+128),f
  7232  0C11  1903               	btfsc	3,2
  7233  0C12  2C25               	goto	l3844
  7234  0C13  2C06               	goto	l3834
  7235  0C14                     l3836:	
  7236  0C14  3020               	movlw	32
  7237  0C15  022A               	subwf	___fltol@exp1^(0+128),w
  7238  0C16  1803               	btfsc	3,0
  7239  0C17  2BD8               	goto	l3814
  7240  0C18                     l712:	
  7241  0C18  082A               	movf	___fltol@exp1^(0+128),w
  7242  0C19  1903               	btfsc	3,2
  7243  0C1A  2C25               	goto	l3844
  7244  0C1B  3001               	movlw	1
  7245  0C1C                     u4565:	
  7246  0C1C  35A0               	lslf	___fltol@f1^(0+128),f
  7247  0C1D  0DA1               	rlf	(___fltol@f1+1)^(0+128),f
  7248  0C1E  0DA2               	rlf	(___fltol@f1+2)^(0+128),f
  7249  0C1F  0DA3               	rlf	(___fltol@f1+3)^(0+128),f
  7250  0C20  0B89               	decfsz	9,f
  7251  0C21  2C1C               	goto	u4565
  7252  0C22  3001               	movlw	1
  7253  0C23  02AA               	subwf	___fltol@exp1^(0+128),f
  7254  0C24  2C18               	goto	l712
  7255  0C25                     l3844:	
  7256  0C25  0829               	movf	___fltol@sign1^(0+128),w
  7257  0C26  1903               	btfsc	3,2
  7258  0C27  0008               	return
  7259  0C28  09A0               	comf	___fltol@f1^(0+128),f
  7260  0C29  09A1               	comf	(___fltol@f1+1)^(0+128),f
  7261  0C2A  09A2               	comf	(___fltol@f1+2)^(0+128),f
  7262  0C2B  09A3               	comf	(___fltol@f1+3)^(0+128),f
  7263  0C2C  0AA0               	incf	___fltol@f1^(0+128),f
  7264  0C2D  1903               	skipnz
  7265  0C2E  0AA1               	incf	(___fltol@f1+1)^(0+128),f
  7266  0C2F  1903               	skipnz
  7267  0C30  0AA2               	incf	(___fltol@f1+2)^(0+128),f
  7268  0C31  1903               	skipnz
  7269  0C32  0AA3               	incf	(___fltol@f1+3)^(0+128),f
  7270  0C33  0008               	return
  7271  0C34                     __end_of___fltol:	
  7272                           
  7273                           	psect	text21
  7274  0966                     __ptext21:	
  7275 ;; *************** function _SYSTEM_Initialize *****************
  7276 ;; Defined at:
  7277 ;;		line 4 in file "mcc_generated_files/mcc.c"
  7278 ;; Parameters:    Size  Location     Type
  7279 ;;		None
  7280 ;; Auto vars:     Size  Location     Type
  7281 ;;		None
  7282 ;; Return value:  Size  Location     Type
  7283 ;;                  1    wreg      void 
  7284 ;; Registers used:
  7285 ;;		wreg, status,2, status,0, pclath, cstack
  7286 ;; Tracked objects:
  7287 ;;		On entry : 0/0
  7288 ;;		On exit  : 0/0
  7289 ;;		Unchanged: 0/0
  7290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7294 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7295 ;;Total ram usage:        0 bytes
  7296 ;; Hardware stack levels used:    1
  7297 ;; Hardware stack levels required when called:    8
  7298 ;; This function calls:
  7299 ;;		_EUSART_Initialize
  7300 ;;		_OSCILLATOR_Initialize
  7301 ;;		_PIN_MANAGER_Initialize
  7302 ;;		_TMR0_Initialize
  7303 ;; This function is called by:
  7304 ;;		_main
  7305 ;; This function uses a non-reentrant model
  7306 ;;
  7307                           
  7308                           
  7309                           ;psect for function _SYSTEM_Initialize
  7310  0966                     _SYSTEM_Initialize:	
  7311                           
  7312                           ;mcc_generated_files/mcc.c: 6:     PIN_MANAGER_Initialize();
  7313                           
  7314                           ;incstack = 0
  7315                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7316  0966  318A  22E7  3189   	fcall	_PIN_MANAGER_Initialize
  7317                           
  7318                           ;mcc_generated_files/mcc.c: 7:     OSCILLATOR_Initialize();
  7319  0969  3189  2116  3189   	fcall	_OSCILLATOR_Initialize
  7320                           
  7321                           ;mcc_generated_files/mcc.c: 8:     TMR0_Initialize();
  7322  096C  3189  21C5  3189   	fcall	_TMR0_Initialize
  7323                           
  7324                           ;mcc_generated_files/mcc.c: 9:     EUSART_Initialize();
  7325  096F  318A  2269         	fcall	_EUSART_Initialize
  7326  0971  0008               	return
  7327  0972                     __end_of_SYSTEM_Initialize:	
  7328                           
  7329                           	psect	text22
  7330  09C5                     __ptext22:	
  7331 ;; *************** function _TMR0_Initialize *****************
  7332 ;; Defined at:
  7333 ;;		line 18 in file "mcc_generated_files/tmr0.c"
  7334 ;; Parameters:    Size  Location     Type
  7335 ;;		None
  7336 ;; Auto vars:     Size  Location     Type
  7337 ;;		None
  7338 ;; Return value:  Size  Location     Type
  7339 ;;                  1    wreg      void 
  7340 ;; Registers used:
  7341 ;;		wreg, status,2, status,0, pclath, cstack
  7342 ;; Tracked objects:
  7343 ;;		On entry : 0/0
  7344 ;;		On exit  : 0/0
  7345 ;;		Unchanged: 0/0
  7346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7349 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7350 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7351 ;;Total ram usage:        1 bytes
  7352 ;; Hardware stack levels used:    1
  7353 ;; Hardware stack levels required when called:    7
  7354 ;; This function calls:
  7355 ;;		_TMR0_SetInterruptHandler
  7356 ;; This function is called by:
  7357 ;;		_SYSTEM_Initialize
  7358 ;; This function uses a non-reentrant model
  7359 ;;
  7360                           
  7361                           
  7362                           ;psect for function _TMR0_Initialize
  7363  09C5                     _TMR0_Initialize:	
  7364                           
  7365                           ;mcc_generated_files/tmr0.c: 23:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD4 
      +                          & 0x3F));
  7366                           
  7367                           ;incstack = 0
  7368                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7369  09C5  0021               	movlb	1	; select bank1
  7370  09C6  0815               	movf	21,w	;volatile
  7371  09C7  39C0               	andlw	192
  7372  09C8  3814               	iorlw	20
  7373  09C9  0095               	movwf	21	;volatile
  7374                           
  7375                           ;mcc_generated_files/tmr0.c: 26:     TMR0 = 0x83;
  7376  09CA  3083               	movlw	131
  7377  09CB  0020               	movlb	0	; select bank0
  7378  09CC  0095               	movwf	21	;volatile
  7379                           
  7380                           ;mcc_generated_files/tmr0.c: 29:     timer0ReloadVal= 131;
  7381  09CD  3083               	movlw	131
  7382  09CE  0021               	movlb	1	; select bank1
  7383  09CF  00A2               	movwf	??_TMR0_Initialize^(0+128)
  7384  09D0  0822               	movf	??_TMR0_Initialize^(0+128),w
  7385  09D1  0020               	movlb	0	; select bank0
  7386  09D2  00DB               	movwf	_timer0ReloadVal	;volatile
  7387                           
  7388                           ;mcc_generated_files/tmr0.c: 32:     INTCONbits.TMR0IF = 0;
  7389  09D3  110B               	bcf	11,2	;volatile
  7390                           
  7391                           ;mcc_generated_files/tmr0.c: 35:     INTCONbits.TMR0IE = 1;
  7392  09D4  168B               	bsf	11,5	;volatile
  7393                           
  7394                           ;mcc_generated_files/tmr0.c: 38:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  7395  09D5  30FE               	movlw	low _TMR0_DefaultInterruptHandler
  7396  09D6  0021               	movlb	1	; select bank1
  7397  09D7  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler^(0+128)
  7398  09D8  3007               	movlw	high _TMR0_DefaultInterruptHandler
  7399  09D9  00A1               	movwf	(TMR0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  7400  09DA  3189  2149         	fcall	_TMR0_SetInterruptHandler
  7401  09DC  0008               	return
  7402  09DD                     __end_of_TMR0_Initialize:	
  7403                           
  7404                           	psect	text23
  7405  0949                     __ptext23:	
  7406 ;; *************** function _TMR0_SetInterruptHandler *****************
  7407 ;; Defined at:
  7408 ;;		line 79 in file "mcc_generated_files/tmr0.c"
  7409 ;; Parameters:    Size  Location     Type
  7410 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  7411 ;;		 -> timerISR(1), TMR0_DefaultInterruptHandler(1), 
  7412 ;; Auto vars:     Size  Location     Type
  7413 ;;		None
  7414 ;; Return value:  Size  Location     Type
  7415 ;;                  1    wreg      void 
  7416 ;; Registers used:
  7417 ;;		wreg
  7418 ;; Tracked objects:
  7419 ;;		On entry : 0/0
  7420 ;;		On exit  : 0/0
  7421 ;;		Unchanged: 0/0
  7422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7423 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7426 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7427 ;;Total ram usage:        2 bytes
  7428 ;; Hardware stack levels used:    1
  7429 ;; Hardware stack levels required when called:    6
  7430 ;; This function calls:
  7431 ;;		Nothing
  7432 ;; This function is called by:
  7433 ;;		_TMR0_Initialize
  7434 ;;		_main
  7435 ;; This function uses a non-reentrant model
  7436 ;;
  7437                           
  7438                           
  7439                           ;psect for function _TMR0_SetInterruptHandler
  7440  0949                     _TMR0_SetInterruptHandler:	
  7441                           
  7442                           ;mcc_generated_files/tmr0.c: 80:     TMR0_InterruptHandler = InterruptHandler;
  7443                           
  7444                           ;incstack = 0
  7445                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  7446  0949  0021               	movlb	1	; select bank1
  7447  094A  0821               	movf	(TMR0_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  7448  094B  0020               	movlb	0	; select bank0
  7449  094C  00D2               	movwf	_TMR0_InterruptHandler+1
  7450  094D  0021               	movlb	1	; select bank1
  7451  094E  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler^(0+128),w
  7452  094F  0020               	movlb	0	; select bank0
  7453  0950  00D1               	movwf	_TMR0_InterruptHandler
  7454  0951  0008               	return
  7455  0952                     __end_of_TMR0_SetInterruptHandler:	
  7456                           
  7457                           	psect	text24
  7458  0AE7                     __ptext24:	
  7459 ;; *************** function _PIN_MANAGER_Initialize *****************
  7460 ;; Defined at:
  7461 ;;		line 6 in file "mcc_generated_files/pin_manager.c"
  7462 ;; Parameters:    Size  Location     Type
  7463 ;;		None
  7464 ;; Auto vars:     Size  Location     Type
  7465 ;;		None
  7466 ;; Return value:  Size  Location     Type
  7467 ;;                  1    wreg      void 
  7468 ;; Registers used:
  7469 ;;		wreg, status,2, status,0, pclath, cstack
  7470 ;; Tracked objects:
  7471 ;;		On entry : 0/0
  7472 ;;		On exit  : 0/0
  7473 ;;		Unchanged: 0/0
  7474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7479 ;;Total ram usage:        0 bytes
  7480 ;; Hardware stack levels used:    1
  7481 ;; Hardware stack levels required when called:    7
  7482 ;; This function calls:
  7483 ;;		_IOCCF7_SetInterruptHandler
  7484 ;; This function is called by:
  7485 ;;		_SYSTEM_Initialize
  7486 ;; This function uses a non-reentrant model
  7487 ;;
  7488                           
  7489                           
  7490                           ;psect for function _PIN_MANAGER_Initialize
  7491  0AE7                     _PIN_MANAGER_Initialize:	
  7492                           
  7493                           ;mcc_generated_files/pin_manager.c: 11:     LATA = 0x00;
  7494                           
  7495                           ;incstack = 0
  7496                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7497  0AE7  0022               	movlb	2	; select bank2
  7498  0AE8  018C               	clrf	12	;volatile
  7499                           
  7500                           ;mcc_generated_files/pin_manager.c: 12:     LATB = 0x00;
  7501  0AE9  018D               	clrf	13	;volatile
  7502                           
  7503                           ;mcc_generated_files/pin_manager.c: 13:     LATC = 0x00;
  7504  0AEA  018E               	clrf	14	;volatile
  7505                           
  7506                           ;mcc_generated_files/pin_manager.c: 18:     TRISA = 0x37;
  7507  0AEB  3037               	movlw	55
  7508  0AEC  0021               	movlb	1	; select bank1
  7509  0AED  008C               	movwf	12	;volatile
  7510                           
  7511                           ;mcc_generated_files/pin_manager.c: 19:     TRISB = 0x70;
  7512  0AEE  3070               	movlw	112
  7513  0AEF  008D               	movwf	13	;volatile
  7514                           
  7515                           ;mcc_generated_files/pin_manager.c: 20:     TRISC = 0xFF;
  7516  0AF0  30FF               	movlw	255
  7517  0AF1  008E               	movwf	14	;volatile
  7518                           
  7519                           ;mcc_generated_files/pin_manager.c: 25:     ANSELC = 0x4F;
  7520  0AF2  304F               	movlw	79
  7521  0AF3  0023               	movlb	3	; select bank3
  7522  0AF4  008E               	movwf	14	;volatile
  7523                           
  7524                           ;mcc_generated_files/pin_manager.c: 26:     ANSELB = 0x70;
  7525  0AF5  3070               	movlw	112
  7526  0AF6  008D               	movwf	13	;volatile
  7527                           
  7528                           ;mcc_generated_files/pin_manager.c: 27:     ANSELA = 0x17;
  7529  0AF7  3017               	movlw	23
  7530  0AF8  008C               	movwf	12	;volatile
  7531                           
  7532                           ;mcc_generated_files/pin_manager.c: 32:     WPUB = 0x00;
  7533  0AF9  0024               	movlb	4	; select bank4
  7534  0AFA  018D               	clrf	13	;volatile
  7535                           
  7536                           ;mcc_generated_files/pin_manager.c: 33:     WPUA = 0x00;
  7537  0AFB  018C               	clrf	12	;volatile
  7538                           
  7539                           ;mcc_generated_files/pin_manager.c: 34:     WPUC = 0x00;
  7540  0AFC  018E               	clrf	14	;volatile
  7541                           
  7542                           ;mcc_generated_files/pin_manager.c: 35:     OPTION_REGbits.nWPUEN = 1;
  7543  0AFD  0021               	movlb	1	; select bank1
  7544  0AFE  1795               	bsf	21,7	;volatile
  7545                           
  7546                           ;mcc_generated_files/pin_manager.c: 40:     ODCONA = 0x00;
  7547  0AFF  0025               	movlb	5	; select bank5
  7548  0B00  018C               	clrf	12	;volatile
  7549                           
  7550                           ;mcc_generated_files/pin_manager.c: 41:     ODCONB = 0x00;
  7551  0B01  018D               	clrf	13	;volatile
  7552                           
  7553                           ;mcc_generated_files/pin_manager.c: 42:     ODCONC = 0x00;
  7554  0B02  018E               	clrf	14	;volatile
  7555                           
  7556                           ;mcc_generated_files/pin_manager.c: 47:     SLRCONA = 0x37;
  7557  0B03  3037               	movlw	55
  7558  0B04  0026               	movlb	6	; select bank6
  7559  0B05  008C               	movwf	12	;volatile
  7560                           
  7561                           ;mcc_generated_files/pin_manager.c: 48:     SLRCONB = 0xF0;
  7562  0B06  30F0               	movlw	240
  7563  0B07  008D               	movwf	13	;volatile
  7564                           
  7565                           ;mcc_generated_files/pin_manager.c: 49:     SLRCONC = 0xFF;
  7566  0B08  30FF               	movlw	255
  7567  0B09  008E               	movwf	14	;volatile
  7568                           
  7569                           ;mcc_generated_files/pin_manager.c: 56:     IOCCFbits.IOCCF7 = 0;
  7570  0B0A  0027               	movlb	7	; select bank7
  7571  0B0B  1399               	bcf	25,7	;volatile
  7572                           
  7573                           ;mcc_generated_files/pin_manager.c: 58:     IOCCNbits.IOCCN7 = 0;
  7574  0B0C  1398               	bcf	24,7	;volatile
  7575                           
  7576                           ;mcc_generated_files/pin_manager.c: 60:     IOCCPbits.IOCCP7 = 1;
  7577  0B0D  1797               	bsf	23,7	;volatile
  7578                           
  7579                           ;mcc_generated_files/pin_manager.c: 65:     IOCCF7_SetInterruptHandler(IOCCF7_DefaultInt
      +                          erruptHandler);
  7580  0B0E  30FF               	movlw	low _IOCCF7_DefaultInterruptHandler
  7581  0B0F  0021               	movlb	1	; select bank1
  7582  0B10  00A0               	movwf	IOCCF7_SetInterruptHandler@InterruptHandler^(0+128)
  7583  0B11  3007               	movlw	high _IOCCF7_DefaultInterruptHandler
  7584  0B12  00A1               	movwf	(IOCCF7_SetInterruptHandler@InterruptHandler^(0+128)+1)
  7585  0B13  3189  2140         	fcall	_IOCCF7_SetInterruptHandler
  7586                           
  7587                           ;mcc_generated_files/pin_manager.c: 68:     INTCONbits.IOCIE = 1;
  7588  0B15  158B               	bsf	11,3	;volatile
  7589                           
  7590                           ;mcc_generated_files/pin_manager.c: 71:     RB7PPS = 0x12;
  7591  0B16  3012               	movlw	18
  7592  0B17  003D               	movlb	29	; select bank29
  7593  0B18  009F               	movwf	31	;volatile
  7594  0B19  0008               	return
  7595  0B1A                     __end_of_PIN_MANAGER_Initialize:	
  7596                           
  7597                           	psect	text25
  7598  0940                     __ptext25:	
  7599 ;; *************** function _IOCCF7_SetInterruptHandler *****************
  7600 ;; Defined at:
  7601 ;;		line 101 in file "mcc_generated_files/pin_manager.c"
  7602 ;; Parameters:    Size  Location     Type
  7603 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  7604 ;;		 -> speedCalc(1), IOCCF7_DefaultInterruptHandler(1), 
  7605 ;; Auto vars:     Size  Location     Type
  7606 ;;		None
  7607 ;; Return value:  Size  Location     Type
  7608 ;;                  1    wreg      void 
  7609 ;; Registers used:
  7610 ;;		wreg
  7611 ;; Tracked objects:
  7612 ;;		On entry : 0/0
  7613 ;;		On exit  : 0/0
  7614 ;;		Unchanged: 0/0
  7615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7616 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7619 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7620 ;;Total ram usage:        2 bytes
  7621 ;; Hardware stack levels used:    1
  7622 ;; Hardware stack levels required when called:    6
  7623 ;; This function calls:
  7624 ;;		Nothing
  7625 ;; This function is called by:
  7626 ;;		_PIN_MANAGER_Initialize
  7627 ;;		_main
  7628 ;; This function uses a non-reentrant model
  7629 ;;
  7630                           
  7631                           
  7632                           ;psect for function _IOCCF7_SetInterruptHandler
  7633  0940                     _IOCCF7_SetInterruptHandler:	
  7634                           
  7635                           ;mcc_generated_files/pin_manager.c: 102:     IOCCF7_InterruptHandler = InterruptHandler;
  7636                           
  7637                           ;incstack = 0
  7638                           ; Regs used in _IOCCF7_SetInterruptHandler: [wreg]
  7639  0940  0021               	movlb	1	; select bank1
  7640  0941  0821               	movf	(IOCCF7_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  7641  0942  0020               	movlb	0	; select bank0
  7642  0943  00D4               	movwf	_IOCCF7_InterruptHandler+1
  7643  0944  0021               	movlb	1	; select bank1
  7644  0945  0820               	movf	IOCCF7_SetInterruptHandler@InterruptHandler^(0+128),w
  7645  0946  0020               	movlb	0	; select bank0
  7646  0947  00D3               	movwf	_IOCCF7_InterruptHandler
  7647  0948  0008               	return
  7648  0949                     __end_of_IOCCF7_SetInterruptHandler:	
  7649                           
  7650                           	psect	text26
  7651  0916                     __ptext26:	
  7652 ;; *************** function _OSCILLATOR_Initialize *****************
  7653 ;; Defined at:
  7654 ;;		line 12 in file "mcc_generated_files/mcc.c"
  7655 ;; Parameters:    Size  Location     Type
  7656 ;;		None
  7657 ;; Auto vars:     Size  Location     Type
  7658 ;;		None
  7659 ;; Return value:  Size  Location     Type
  7660 ;;                  1    wreg      void 
  7661 ;; Registers used:
  7662 ;;		wreg, status,2
  7663 ;; Tracked objects:
  7664 ;;		On entry : 0/0
  7665 ;;		On exit  : 0/0
  7666 ;;		Unchanged: 0/0
  7667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7671 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7672 ;;Total ram usage:        0 bytes
  7673 ;; Hardware stack levels used:    1
  7674 ;; Hardware stack levels required when called:    6
  7675 ;; This function calls:
  7676 ;;		Nothing
  7677 ;; This function is called by:
  7678 ;;		_SYSTEM_Initialize
  7679 ;; This function uses a non-reentrant model
  7680 ;;
  7681                           
  7682                           
  7683                           ;psect for function _OSCILLATOR_Initialize
  7684  0916                     _OSCILLATOR_Initialize:	
  7685                           
  7686                           ;mcc_generated_files/mcc.c: 15:     OSCCON = 0x7A;
  7687                           
  7688                           ;incstack = 0
  7689                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  7690  0916  307A               	movlw	122
  7691  0917  0021               	movlb	1	; select bank1
  7692  0918  0099               	movwf	25	;volatile
  7693                           
  7694                           ;mcc_generated_files/mcc.c: 17:     OSCTUNE = 0x00;
  7695  0919  0198               	clrf	24	;volatile
  7696                           
  7697                           ;mcc_generated_files/mcc.c: 19:     BORCON = 0x00;
  7698  091A  0022               	movlb	2	; select bank2
  7699  091B  0196               	clrf	22	;volatile
  7700  091C  0008               	return
  7701  091D                     __end_of_OSCILLATOR_Initialize:	
  7702                           
  7703                           	psect	text27
  7704  0A69                     __ptext27:	
  7705 ;; *************** function _EUSART_Initialize *****************
  7706 ;; Defined at:
  7707 ;;		line 65 in file "mcc_generated_files/eusart.c"
  7708 ;; Parameters:    Size  Location     Type
  7709 ;;		None
  7710 ;; Auto vars:     Size  Location     Type
  7711 ;;		None
  7712 ;; Return value:  Size  Location     Type
  7713 ;;                  1    wreg      void 
  7714 ;; Registers used:
  7715 ;;		wreg, status,2, status,0, pclath, cstack
  7716 ;; Tracked objects:
  7717 ;;		On entry : 0/0
  7718 ;;		On exit  : 0/0
  7719 ;;		Unchanged: 0/0
  7720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7725 ;;Total ram usage:        0 bytes
  7726 ;; Hardware stack levels used:    1
  7727 ;; Hardware stack levels required when called:    7
  7728 ;; This function calls:
  7729 ;;		_EUSART_SetErrorHandler
  7730 ;;		_EUSART_SetFramingErrorHandler
  7731 ;;		_EUSART_SetOverrunErrorHandler
  7732 ;; This function is called by:
  7733 ;;		_SYSTEM_Initialize
  7734 ;; This function uses a non-reentrant model
  7735 ;;
  7736                           
  7737                           
  7738                           ;psect for function _EUSART_Initialize
  7739  0A69                     _EUSART_Initialize:	
  7740                           
  7741                           ;mcc_generated_files/eusart.c: 70:     BAUD1CON = 0x08;
  7742                           
  7743                           ;incstack = 0
  7744                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7745  0A69  3008               	movlw	8
  7746  0A6A  0023               	movlb	3	; select bank3
  7747  0A6B  009F               	movwf	31	;volatile
  7748                           
  7749                           ;mcc_generated_files/eusart.c: 73:     RC1STA = 0x80;
  7750  0A6C  3080               	movlw	128
  7751  0A6D  009D               	movwf	29	;volatile
  7752                           
  7753                           ;mcc_generated_files/eusart.c: 76:     TX1STA = 0x24;
  7754  0A6E  3024               	movlw	36
  7755  0A6F  009E               	movwf	30	;volatile
  7756                           
  7757                           ;mcc_generated_files/eusart.c: 79:     SPBRGL = 0xA0;
  7758  0A70  30A0               	movlw	160
  7759  0A71  009B               	movwf	27	;volatile
  7760                           
  7761                           ;mcc_generated_files/eusart.c: 82:     SPBRGH = 0x01;
  7762  0A72  3001               	movlw	1
  7763  0A73  009C               	movwf	28	;volatile
  7764                           
  7765                           ;mcc_generated_files/eusart.c: 85:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  7766  0A74  3000               	movlw	0
  7767  0A75  0021               	movlb	1	; select bank1
  7768  0A76  00A0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128)
  7769  0A77  3000               	movlw	0
  7770  0A78  00A1               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler^(0+128)+1)
  7771  0A79  3189  212E  318A   	fcall	_EUSART_SetFramingErrorHandler
  7772                           
  7773                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  7774  0A7C  3000               	movlw	0
  7775  0A7D  0021               	movlb	1	; select bank1
  7776  0A7E  00A0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)
  7777  0A7F  3000               	movlw	0
  7778  0A80  00A1               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)+1)
  7779  0A81  3189  2137  318A   	fcall	_EUSART_SetOverrunErrorHandler
  7780                           
  7781                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  7782  0A84  3000               	movlw	0
  7783  0A85  0021               	movlb	1	; select bank1
  7784  0A86  00A0               	movwf	EUSART_SetErrorHandler@interruptHandler^(0+128)
  7785  0A87  3000               	movlw	0
  7786  0A88  00A1               	movwf	(EUSART_SetErrorHandler@interruptHandler^(0+128)+1)
  7787  0A89  3189  2125         	fcall	_EUSART_SetErrorHandler
  7788                           
  7789                           ;mcc_generated_files/eusart.c: 89:     eusartRxLastError.status = 0;
  7790  0A8B  0020               	movlb	0	; select bank0
  7791  0A8C  01CC               	clrf	_eusartRxLastError	;volatile
  7792  0A8D  0008               	return
  7793  0A8E                     __end_of_EUSART_Initialize:	
  7794                           
  7795                           	psect	text28
  7796  0937                     __ptext28:	
  7797 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  7798 ;; Defined at:
  7799 ;;		line 175 in file "mcc_generated_files/eusart.c"
  7800 ;; Parameters:    Size  Location     Type
  7801 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  7802 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  7803 ;; Auto vars:     Size  Location     Type
  7804 ;;		None
  7805 ;; Return value:  Size  Location     Type
  7806 ;;                  1    wreg      void 
  7807 ;; Registers used:
  7808 ;;		wreg
  7809 ;; Tracked objects:
  7810 ;;		On entry : 0/0
  7811 ;;		On exit  : 0/0
  7812 ;;		Unchanged: 0/0
  7813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7814 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7817 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7818 ;;Total ram usage:        2 bytes
  7819 ;; Hardware stack levels used:    1
  7820 ;; Hardware stack levels required when called:    6
  7821 ;; This function calls:
  7822 ;;		Nothing
  7823 ;; This function is called by:
  7824 ;;		_EUSART_Initialize
  7825 ;; This function uses a non-reentrant model
  7826 ;;
  7827                           
  7828                           
  7829                           ;psect for function _EUSART_SetOverrunErrorHandler
  7830  0937                     _EUSART_SetOverrunErrorHandler:	
  7831                           
  7832                           ;mcc_generated_files/eusart.c: 176:     EUSART_OverrunErrorHandler = interruptHandler;
  7833                           
  7834                           ;incstack = 0
  7835                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  7836  0937  0021               	movlb	1	; select bank1
  7837  0938  0821               	movf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^(0+128),w
  7838  0939  0020               	movlb	0	; select bank0
  7839  093A  00D8               	movwf	_EUSART_OverrunErrorHandler+1
  7840  093B  0021               	movlb	1	; select bank1
  7841  093C  0820               	movf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128),w
  7842  093D  0020               	movlb	0	; select bank0
  7843  093E  00D7               	movwf	_EUSART_OverrunErrorHandler
  7844  093F  0008               	return
  7845  0940                     __end_of_EUSART_SetOverrunErrorHandler:	
  7846                           
  7847                           	psect	text29
  7848  092E                     __ptext29:	
  7849 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  7850 ;; Defined at:
  7851 ;;		line 171 in file "mcc_generated_files/eusart.c"
  7852 ;; Parameters:    Size  Location     Type
  7853 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  7854 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  7855 ;; Auto vars:     Size  Location     Type
  7856 ;;		None
  7857 ;; Return value:  Size  Location     Type
  7858 ;;                  1    wreg      void 
  7859 ;; Registers used:
  7860 ;;		wreg
  7861 ;; Tracked objects:
  7862 ;;		On entry : 0/0
  7863 ;;		On exit  : 0/0
  7864 ;;		Unchanged: 0/0
  7865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7866 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7869 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7870 ;;Total ram usage:        2 bytes
  7871 ;; Hardware stack levels used:    1
  7872 ;; Hardware stack levels required when called:    6
  7873 ;; This function calls:
  7874 ;;		Nothing
  7875 ;; This function is called by:
  7876 ;;		_EUSART_Initialize
  7877 ;; This function uses a non-reentrant model
  7878 ;;
  7879                           
  7880                           
  7881                           ;psect for function _EUSART_SetFramingErrorHandler
  7882  092E                     _EUSART_SetFramingErrorHandler:	
  7883                           
  7884                           ;mcc_generated_files/eusart.c: 172:     EUSART_FramingErrorHandler = interruptHandler;
  7885                           
  7886                           ;incstack = 0
  7887                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  7888  092E  0021               	movlb	1	; select bank1
  7889  092F  0821               	movf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^(0+128),w
  7890  0930  0020               	movlb	0	; select bank0
  7891  0931  00DA               	movwf	_EUSART_FramingErrorHandler+1
  7892  0932  0021               	movlb	1	; select bank1
  7893  0933  0820               	movf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128),w
  7894  0934  0020               	movlb	0	; select bank0
  7895  0935  00D9               	movwf	_EUSART_FramingErrorHandler
  7896  0936  0008               	return
  7897  0937                     __end_of_EUSART_SetFramingErrorHandler:	
  7898                           
  7899                           	psect	text30
  7900  0925                     __ptext30:	
  7901 ;; *************** function _EUSART_SetErrorHandler *****************
  7902 ;; Defined at:
  7903 ;;		line 179 in file "mcc_generated_files/eusart.c"
  7904 ;; Parameters:    Size  Location     Type
  7905 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  7906 ;;		 -> EUSART_DefaultErrorHandler(1), 
  7907 ;; Auto vars:     Size  Location     Type
  7908 ;;		None
  7909 ;; Return value:  Size  Location     Type
  7910 ;;                  1    wreg      void 
  7911 ;; Registers used:
  7912 ;;		wreg
  7913 ;; Tracked objects:
  7914 ;;		On entry : 0/0
  7915 ;;		On exit  : 0/0
  7916 ;;		Unchanged: 0/0
  7917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7918 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7921 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7922 ;;Total ram usage:        2 bytes
  7923 ;; Hardware stack levels used:    1
  7924 ;; Hardware stack levels required when called:    6
  7925 ;; This function calls:
  7926 ;;		Nothing
  7927 ;; This function is called by:
  7928 ;;		_EUSART_Initialize
  7929 ;; This function uses a non-reentrant model
  7930 ;;
  7931                           
  7932                           
  7933                           ;psect for function _EUSART_SetErrorHandler
  7934  0925                     _EUSART_SetErrorHandler:	
  7935                           
  7936                           ;mcc_generated_files/eusart.c: 180:     EUSART_ErrorHandler = interruptHandler;
  7937                           
  7938                           ;incstack = 0
  7939                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  7940  0925  0021               	movlb	1	; select bank1
  7941  0926  0821               	movf	(EUSART_SetErrorHandler@interruptHandler+1)^(0+128),w
  7942  0927  0020               	movlb	0	; select bank0
  7943  0928  00D6               	movwf	_EUSART_ErrorHandler+1
  7944  0929  0021               	movlb	1	; select bank1
  7945  092A  0820               	movf	EUSART_SetErrorHandler@interruptHandler^(0+128),w
  7946  092B  0020               	movlb	0	; select bank0
  7947  092C  00D5               	movwf	_EUSART_ErrorHandler
  7948  092D  0008               	return
  7949  092E                     __end_of_EUSART_SetErrorHandler:	
  7950                           
  7951                           	psect	intentry
  7952  0004                     __pintentry:	
  7953 ;; *************** function _INTERRUPT_InterruptManager *****************
  7954 ;; Defined at:
  7955 ;;		line 4 in file "mcc_generated_files/interrupt_manager.c"
  7956 ;; Parameters:    Size  Location     Type
  7957 ;;		None
  7958 ;; Auto vars:     Size  Location     Type
  7959 ;;		None
  7960 ;; Return value:  Size  Location     Type
  7961 ;;                  1    wreg      void 
  7962 ;; Registers used:
  7963 ;;		wreg, status,2, status,0, pclath, cstack
  7964 ;; Tracked objects:
  7965 ;;		On entry : 0/0
  7966 ;;		On exit  : 0/0
  7967 ;;		Unchanged: 0/0
  7968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7972 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7973 ;;Total ram usage:        0 bytes
  7974 ;; Hardware stack levels used:    1
  7975 ;; Hardware stack levels required when called:    5
  7976 ;; This function calls:
  7977 ;;		_PIN_MANAGER_IOC
  7978 ;;		_TMR0_ISR
  7979 ;; This function is called by:
  7980 ;;		Interrupt level 1
  7981 ;; This function uses a non-reentrant model
  7982 ;;
  7983                           
  7984  0004                     _INTERRUPT_InterruptManager:	
  7985                           
  7986                           ;incstack = 0
  7987  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  7988                           
  7989                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  7990  0005  3180               	pagesel	$
  7991                           
  7992                           ;mcc_generated_files/interrupt_manager.c: 7:     if(INTCONbits.TMR0IE == 1 && INTCONbits
      +                          .TMR0IF == 1)
  7993  0006  1A8B               	btfsc	11,5	;volatile
  7994  0007  1D0B               	btfss	11,2	;volatile
  7995  0008  280D               	goto	i1l236
  7996                           
  7997                           ;mcc_generated_files/interrupt_manager.c: 8:     {;mcc_generated_files/interrupt_manager
      +                          .c: 9:         TMR0_ISR();
  7998  0009  3189  217F  3180   	fcall	_TMR0_ISR
  7999                           
  8000                           ;mcc_generated_files/interrupt_manager.c: 10:     }
  8001  000C  2812               	goto	i1l240
  8002  000D                     i1l236:	
  8003                           ;mcc_generated_files/interrupt_manager.c: 11:     else if(INTCONbits.IOCIE == 1 && INTCO
      +                          Nbits.IOCIF == 1)
  8004                           
  8005  000D  198B               	btfsc	11,3	;volatile
  8006  000E  1C0B               	btfss	11,0	;volatile
  8007  000F  2812               	goto	i1l240
  8008                           
  8009                           ;mcc_generated_files/interrupt_manager.c: 12:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 13:         PIN_MANAGER_IOC();
  8010  0010  3188  20FE         	fcall	_PIN_MANAGER_IOC
  8011  0012                     i1l240:	
  8012                           ;mcc_generated_files/interrupt_manager.c: 14:     }
  8013                           
  8014  0012  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  8015  0013  0009               	retfie
  8016  0014                     __end_of_INTERRUPT_InterruptManager:	
  8017                           
  8018                           	psect	text32
  8019  097F                     __ptext32:	
  8020 ;; *************** function _TMR0_ISR *****************
  8021 ;; Defined at:
  8022 ;;		line 62 in file "mcc_generated_files/tmr0.c"
  8023 ;; Parameters:    Size  Location     Type
  8024 ;;		None
  8025 ;; Auto vars:     Size  Location     Type
  8026 ;;		None
  8027 ;; Return value:  Size  Location     Type
  8028 ;;                  1    wreg      void 
  8029 ;; Registers used:
  8030 ;;		wreg, status,2, status,0, pclath, cstack
  8031 ;; Tracked objects:
  8032 ;;		On entry : 0/0
  8033 ;;		On exit  : 0/0
  8034 ;;		Unchanged: 0/0
  8035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8040 ;;Total ram usage:        0 bytes
  8041 ;; Hardware stack levels used:    1
  8042 ;; Hardware stack levels required when called:    1
  8043 ;; This function calls:
  8044 ;;		Absolute function
  8045 ;;		_TMR0_DefaultInterruptHandler
  8046 ;;		_timerISR
  8047 ;; This function is called by:
  8048 ;;		_INTERRUPT_InterruptManager
  8049 ;; This function uses a non-reentrant model
  8050 ;;
  8051                           
  8052                           
  8053                           ;psect for function _TMR0_ISR
  8054  097F                     _TMR0_ISR:	
  8055                           
  8056                           ;mcc_generated_files/tmr0.c: 66:     INTCONbits.TMR0IF = 0;
  8057                           
  8058                           ;incstack = 0
  8059                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  8060  097F  110B               	bcf	11,2	;volatile
  8061                           
  8062                           ;mcc_generated_files/tmr0.c: 68:     TMR0 = timer0ReloadVal;
  8063  0980  0020               	movlb	0	; select bank0
  8064  0981  085B               	movf	_timer0ReloadVal,w	;volatile
  8065  0982  0095               	movwf	21	;volatile
  8066                           
  8067                           ;mcc_generated_files/tmr0.c: 70:     if(TMR0_InterruptHandler)
  8068  0983  0851               	movf	_TMR0_InterruptHandler,w
  8069  0984  0452               	iorwf	_TMR0_InterruptHandler+1,w
  8070  0985  1903               	btfsc	3,2
  8071  0986  0008               	return
  8072                           
  8073                           ;mcc_generated_files/tmr0.c: 71:     {;mcc_generated_files/tmr0.c: 72:         TMR0_Inte
      +                          rruptHandler();
  8074  0987  0852               	movf	_TMR0_InterruptHandler+1,w
  8075  0988  008A               	movwf	10
  8076  0989  0851               	movf	_TMR0_InterruptHandler,w
  8077  098A  000A               	callw
  8078  098B  3189               	pagesel	$
  8079  098C  0008               	return
  8080  098D                     __end_of_TMR0_ISR:	
  8081                           
  8082                           	psect	text33
  8083  07FE                     __ptext33:	
  8084 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  8085 ;; Defined at:
  8086 ;;		line 83 in file "mcc_generated_files/tmr0.c"
  8087 ;; Parameters:    Size  Location     Type
  8088 ;;		None
  8089 ;; Auto vars:     Size  Location     Type
  8090 ;;		None
  8091 ;; Return value:  Size  Location     Type
  8092 ;;                  1    wreg      void 
  8093 ;; Registers used:
  8094 ;;		None
  8095 ;; Tracked objects:
  8096 ;;		On entry : 0/0
  8097 ;;		On exit  : 0/0
  8098 ;;		Unchanged: 0/0
  8099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8104 ;;Total ram usage:        0 bytes
  8105 ;; Hardware stack levels used:    1
  8106 ;; This function calls:
  8107 ;;		Nothing
  8108 ;; This function is called by:
  8109 ;;		_TMR0_Initialize
  8110 ;;		_TMR0_ISR
  8111 ;; This function uses a non-reentrant model
  8112 ;;
  8113                           
  8114                           
  8115                           ;psect for function _TMR0_DefaultInterruptHandler
  8116  07FE                     _TMR0_DefaultInterruptHandler:	
  8117                           
  8118                           ;incstack = 0
  8119                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  8120  07FE  0008               	return
  8121  07FF                     __end_of_TMR0_DefaultInterruptHandler:	
  8122                           
  8123                           	psect	text34
  8124  0952                     __ptext34:	
  8125 ;; *************** function _timerISR *****************
  8126 ;; Defined at:
  8127 ;;		line 76 in file "main.c"
  8128 ;; Parameters:    Size  Location     Type
  8129 ;;		None
  8130 ;; Auto vars:     Size  Location     Type
  8131 ;;		None
  8132 ;; Return value:  Size  Location     Type
  8133 ;;                  1    wreg      void 
  8134 ;; Registers used:
  8135 ;;		wreg
  8136 ;; Tracked objects:
  8137 ;;		On entry : 0/0
  8138 ;;		On exit  : 0/0
  8139 ;;		Unchanged: 0/0
  8140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8144 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8145 ;;Total ram usage:        0 bytes
  8146 ;; Hardware stack levels used:    1
  8147 ;; This function calls:
  8148 ;;		Nothing
  8149 ;; This function is called by:
  8150 ;;		_main
  8151 ;;		_TMR0_ISR
  8152 ;; This function uses a non-reentrant model
  8153 ;;
  8154                           
  8155                           
  8156                           ;psect for function _timerISR
  8157  0952                     _timerISR:	
  8158                           
  8159                           ;main.c: 77:     counter++ ;
  8160                           
  8161                           ;incstack = 0
  8162                           ; Regs used in _timerISR: [wreg]
  8163  0952  3001               	movlw	1
  8164  0953  0020               	movlb	0	; select bank0
  8165  0954  07C0               	addwf	_counter,f	;volatile
  8166  0955  3000               	movlw	0
  8167  0956  3DC1               	addwfc	_counter+1,f	;volatile
  8168  0957  3000               	movlw	0
  8169  0958  3DC2               	addwfc	_counter+2,f	;volatile
  8170  0959  3000               	movlw	0
  8171  095A  3DC3               	addwfc	_counter+3,f	;volatile
  8172  095B  0008               	return
  8173  095C                     __end_of_timerISR:	
  8174                           
  8175                           	psect	text35
  8176  08FE                     __ptext35:	
  8177 ;; *************** function _PIN_MANAGER_IOC *****************
  8178 ;; Defined at:
  8179 ;;		line 74 in file "mcc_generated_files/pin_manager.c"
  8180 ;; Parameters:    Size  Location     Type
  8181 ;;		None
  8182 ;; Auto vars:     Size  Location     Type
  8183 ;;		None
  8184 ;; Return value:  Size  Location     Type
  8185 ;;                  1    wreg      void 
  8186 ;; Registers used:
  8187 ;;		wreg, status,2, status,0, pclath, cstack
  8188 ;; Tracked objects:
  8189 ;;		On entry : 0/0
  8190 ;;		On exit  : 0/0
  8191 ;;		Unchanged: 0/0
  8192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8196 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8197 ;;Total ram usage:        0 bytes
  8198 ;; Hardware stack levels used:    1
  8199 ;; Hardware stack levels required when called:    4
  8200 ;; This function calls:
  8201 ;;		_IOCCF7_ISR
  8202 ;; This function is called by:
  8203 ;;		_INTERRUPT_InterruptManager
  8204 ;; This function uses a non-reentrant model
  8205 ;;
  8206                           
  8207                           
  8208                           ;psect for function _PIN_MANAGER_IOC
  8209  08FE                     _PIN_MANAGER_IOC:	
  8210                           
  8211                           ;mcc_generated_files/pin_manager.c: 77:     if(IOCCFbits.IOCCF7 == 1)
  8212                           
  8213                           ;incstack = 0
  8214                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
  8215  08FE  0027               	movlb	7	; select bank7
  8216  08FF  1F99               	btfss	25,7	;volatile
  8217  0900  0008               	return
  8218                           
  8219                           ;mcc_generated_files/pin_manager.c: 78:     {;mcc_generated_files/pin_manager.c: 79:    
      +                               IOCCF7_ISR();
  8220  0901  3189  2172         	fcall	_IOCCF7_ISR
  8221  0903  0008               	return
  8222  0904                     __end_of_PIN_MANAGER_IOC:	
  8223                           
  8224                           	psect	text36
  8225  0972                     __ptext36:	
  8226 ;; *************** function _IOCCF7_ISR *****************
  8227 ;; Defined at:
  8228 ;;		line 86 in file "mcc_generated_files/pin_manager.c"
  8229 ;; Parameters:    Size  Location     Type
  8230 ;;		None
  8231 ;; Auto vars:     Size  Location     Type
  8232 ;;		None
  8233 ;; Return value:  Size  Location     Type
  8234 ;;                  1    wreg      void 
  8235 ;; Registers used:
  8236 ;;		wreg, status,2, status,0, pclath, cstack
  8237 ;; Tracked objects:
  8238 ;;		On entry : 0/0
  8239 ;;		On exit  : 0/0
  8240 ;;		Unchanged: 0/0
  8241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8246 ;;Total ram usage:        0 bytes
  8247 ;; Hardware stack levels used:    1
  8248 ;; Hardware stack levels required when called:    3
  8249 ;; This function calls:
  8250 ;;		Absolute function
  8251 ;;		_IOCCF7_DefaultInterruptHandler
  8252 ;;		_speedCalc
  8253 ;; This function is called by:
  8254 ;;		_PIN_MANAGER_IOC
  8255 ;; This function uses a non-reentrant model
  8256 ;;
  8257                           
  8258                           
  8259                           ;psect for function _IOCCF7_ISR
  8260  0972                     _IOCCF7_ISR:	
  8261                           
  8262                           ;mcc_generated_files/pin_manager.c: 91:     if(IOCCF7_InterruptHandler)
  8263                           
  8264                           ;incstack = 0
  8265                           ; Regs used in _IOCCF7_ISR: [wreg+status,2+status,0+pclath+cstack]
  8266  0972  0020               	movlb	0	; select bank0
  8267  0973  0853               	movf	_IOCCF7_InterruptHandler,w
  8268  0974  0454               	iorwf	_IOCCF7_InterruptHandler+1,w
  8269  0975  1903               	btfsc	3,2
  8270  0976  297C               	goto	i1l2984
  8271                           
  8272                           ;mcc_generated_files/pin_manager.c: 92:     {;mcc_generated_files/pin_manager.c: 93:    
      +                               IOCCF7_InterruptHandler();
  8273  0977  0854               	movf	_IOCCF7_InterruptHandler+1,w
  8274  0978  008A               	movwf	10
  8275  0979  0853               	movf	_IOCCF7_InterruptHandler,w
  8276  097A  000A               	callw
  8277  097B  3189               	pagesel	$
  8278  097C                     i1l2984:	
  8279                           
  8280                           ;mcc_generated_files/pin_manager.c: 95:     IOCCFbits.IOCCF7 = 0;
  8281  097C  0027               	movlb	7	; select bank7
  8282  097D  1399               	bcf	25,7	;volatile
  8283  097E  0008               	return
  8284  097F                     __end_of_IOCCF7_ISR:	
  8285                           
  8286                           	psect	text37
  8287  07FF                     __ptext37:	
  8288 ;; *************** function _IOCCF7_DefaultInterruptHandler *****************
  8289 ;; Defined at:
  8290 ;;		line 108 in file "mcc_generated_files/pin_manager.c"
  8291 ;; Parameters:    Size  Location     Type
  8292 ;;		None
  8293 ;; Auto vars:     Size  Location     Type
  8294 ;;		None
  8295 ;; Return value:  Size  Location     Type
  8296 ;;                  1    wreg      void 
  8297 ;; Registers used:
  8298 ;;		None
  8299 ;; Tracked objects:
  8300 ;;		On entry : 0/0
  8301 ;;		On exit  : 0/0
  8302 ;;		Unchanged: 0/0
  8303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8307 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8308 ;;Total ram usage:        0 bytes
  8309 ;; Hardware stack levels used:    1
  8310 ;; This function calls:
  8311 ;;		Nothing
  8312 ;; This function is called by:
  8313 ;;		_PIN_MANAGER_Initialize
  8314 ;;		_IOCCF7_ISR
  8315 ;; This function uses a non-reentrant model
  8316 ;;
  8317                           
  8318                           
  8319                           ;psect for function _IOCCF7_DefaultInterruptHandler
  8320  07FF                     _IOCCF7_DefaultInterruptHandler:	
  8321                           
  8322                           ;incstack = 0
  8323                           ; Regs used in _IOCCF7_DefaultInterruptHandler: []
  8324  07FF  0008               	return
  8325  0800                     __end_of_IOCCF7_DefaultInterruptHandler:	
  8326                           
  8327                           	psect	text38
  8328  0DD1                     __ptext38:	
  8329 ;; *************** function _speedCalc *****************
  8330 ;; Defined at:
  8331 ;;		line 80 in file "main.c"
  8332 ;; Parameters:    Size  Location     Type
  8333 ;;		None
  8334 ;; Auto vars:     Size  Location     Type
  8335 ;;		None
  8336 ;; Return value:  Size  Location     Type
  8337 ;;                  1    wreg      void 
  8338 ;; Registers used:
  8339 ;;		wreg, status,2, status,0, pclath, cstack
  8340 ;; Tracked objects:
  8341 ;;		On entry : 0/0
  8342 ;;		On exit  : 0/0
  8343 ;;		Unchanged: 0/0
  8344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8346 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8348 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8349 ;;Total ram usage:        4 bytes
  8350 ;; Hardware stack levels used:    1
  8351 ;; Hardware stack levels required when called:    2
  8352 ;; This function calls:
  8353 ;;		___aldiv
  8354 ;;		___fladd
  8355 ;;		___flmul
  8356 ;;		___lmul
  8357 ;;		___xxtofl
  8358 ;; This function is called by:
  8359 ;;		_main
  8360 ;;		_IOCCF7_ISR
  8361 ;; This function uses a non-reentrant model
  8362 ;;
  8363                           
  8364                           
  8365                           ;psect for function _speedCalc
  8366  0DD1                     _speedCalc:	
  8367                           
  8368                           ;main.c: 82:     rpm = ( counter / 1000 ) * 60 ;
  8369                           
  8370                           ;incstack = 0
  8371                           ; Regs used in _speedCalc: [wreg+status,2+status,0+pclath+cstack]
  8372  0DD1  3000               	movlw	0
  8373  0DD2  0020               	movlb	0	; select bank0
  8374  0DD3  00AD               	movwf	___lmul@multiplicand+3
  8375  0DD4  3000               	movlw	0
  8376  0DD5  00AC               	movwf	___lmul@multiplicand+2
  8377  0DD6  3000               	movlw	0
  8378  0DD7  00AB               	movwf	___lmul@multiplicand+1
  8379  0DD8  303C               	movlw	60
  8380  0DD9  00AA               	movwf	___lmul@multiplicand
  8381  0DDA  0843               	movf	_counter+3,w	;volatile
  8382  0DDB  00F7               	movwf	___aldiv@dividend+3
  8383  0DDC  0842               	movf	_counter+2,w	;volatile
  8384  0DDD  00F6               	movwf	___aldiv@dividend+2
  8385  0DDE  0841               	movf	_counter+1,w	;volatile
  8386  0DDF  00F5               	movwf	___aldiv@dividend+1
  8387  0DE0  0840               	movf	_counter,w	;volatile
  8388  0DE1  00F4               	movwf	___aldiv@dividend
  8389  0DE2  3000               	movlw	0
  8390  0DE3  00F3               	movwf	___aldiv@divisor+3
  8391  0DE4  3000               	movlw	0
  8392  0DE5  00F2               	movwf	___aldiv@divisor+2
  8393  0DE6  3003               	movlw	3
  8394  0DE7  00F1               	movwf	___aldiv@divisor+1
  8395  0DE8  30E8               	movlw	232
  8396  0DE9  00F0               	movwf	___aldiv@divisor
  8397  0DEA  318C  2434  318D   	fcall	___aldiv
  8398  0DED  0873               	movf	?___aldiv+3,w
  8399  0DEE  0020               	movlb	0	; select bank0
  8400  0DEF  00A9               	movwf	___lmul@multiplier+3
  8401  0DF0  0872               	movf	?___aldiv+2,w
  8402  0DF1  00A8               	movwf	___lmul@multiplier+2
  8403  0DF2  0871               	movf	?___aldiv+1,w
  8404  0DF3  00A7               	movwf	___lmul@multiplier+1
  8405  0DF4  0870               	movf	?___aldiv,w
  8406  0DF5  00A6               	movwf	___lmul@multiplier
  8407  0DF6  318A  22B7  318D   	fcall	___lmul
  8408  0DF9  0020               	movlb	0	; select bank0
  8409  0DFA  0829               	movf	?___lmul+3,w
  8410  0DFB  00B1               	movwf	___xxtofl@val+3
  8411  0DFC  0828               	movf	?___lmul+2,w
  8412  0DFD  00B0               	movwf	___xxtofl@val+2
  8413  0DFE  0827               	movf	?___lmul+1,w
  8414  0DFF  00AF               	movwf	___xxtofl@val+1
  8415  0E00  0826               	movf	?___lmul,w
  8416  0E01  00AE               	movwf	___xxtofl@val
  8417  0E02  3001               	movlw	1
  8418  0E03  318D  253B  318D   	fcall	___xxtofl
  8419  0E06  0020               	movlb	0	; select bank0
  8420  0E07  0831               	movf	?___xxtofl+3,w
  8421  0E08  00D0               	movwf	_rpm+3	;volatile
  8422  0E09  0830               	movf	?___xxtofl+2,w
  8423  0E0A  00CF               	movwf	_rpm+2	;volatile
  8424  0E0B  082F               	movf	?___xxtofl+1,w
  8425  0E0C  00CE               	movwf	_rpm+1	;volatile
  8426  0E0D  082E               	movf	?___xxtofl,w
  8427  0E0E  00CD               	movwf	_rpm	;volatile
  8428                           
  8429                           ;main.c: 86:     speed = 2 * rpm * (0.06) ;
  8430  0E0F  3040               	movlw	64
  8431  0E10  00A3               	movwf	___flmul@b+3
  8432  0E11  3000               	movlw	0
  8433  0E12  00A2               	movwf	___flmul@b+2
  8434  0E13  3000               	movlw	0
  8435  0E14  00A1               	movwf	___flmul@b+1
  8436  0E15  3000               	movlw	0
  8437  0E16  00A0               	movwf	___flmul@b
  8438  0E17  0850               	movf	_rpm+3,w	;volatile
  8439  0E18  00A7               	movwf	___flmul@a+3
  8440  0E19  084F               	movf	_rpm+2,w	;volatile
  8441  0E1A  00A6               	movwf	___flmul@a+2
  8442  0E1B  084E               	movf	_rpm+1,w	;volatile
  8443  0E1C  00A5               	movwf	___flmul@a+1
  8444  0E1D  084D               	movf	_rpm,w	;volatile
  8445  0E1E  00A4               	movwf	___flmul@a
  8446  0E1F  3180  203D  318D   	fcall	___flmul
  8447  0E22  0020               	movlb	0	; select bank0
  8448  0E23  0823               	movf	?___flmul+3,w
  8449  0E24  00BF               	movwf	_speedCalc$1230+3
  8450  0E25  0822               	movf	?___flmul+2,w
  8451  0E26  00BE               	movwf	_speedCalc$1230+2
  8452  0E27  0821               	movf	?___flmul+1,w
  8453  0E28  00BD               	movwf	_speedCalc$1230+1
  8454  0E29  0820               	movf	?___flmul,w
  8455  0E2A  00BC               	movwf	_speedCalc$1230
  8456                           
  8457                           ;main.c: 86:     speed = 2 * rpm * (0.06) ;
  8458  0E2B  303D               	movlw	61
  8459  0E2C  00A3               	movwf	___flmul@b+3
  8460  0E2D  3075               	movlw	117
  8461  0E2E  00A2               	movwf	___flmul@b+2
  8462  0E2F  30C2               	movlw	194
  8463  0E30  00A1               	movwf	___flmul@b+1
  8464  0E31  308F               	movlw	143
  8465  0E32  00A0               	movwf	___flmul@b
  8466  0E33  083F               	movf	_speedCalc$1230+3,w
  8467  0E34  00A7               	movwf	___flmul@a+3
  8468  0E35  083E               	movf	_speedCalc$1230+2,w
  8469  0E36  00A6               	movwf	___flmul@a+2
  8470  0E37  083D               	movf	_speedCalc$1230+1,w
  8471  0E38  00A5               	movwf	___flmul@a+1
  8472  0E39  083C               	movf	_speedCalc$1230,w
  8473  0E3A  00A4               	movwf	___flmul@a
  8474  0E3B  3180  203D  318D   	fcall	___flmul
  8475  0E3E  0020               	movlb	0	; select bank0
  8476  0E3F  0823               	movf	?___flmul+3,w
  8477  0E40  0022               	movlb	2	; select bank2
  8478  0E41  00E1               	movwf	(_speed+3)^(0+256)	;volatile
  8479  0E42  0020               	movlb	0	; select bank0
  8480  0E43  0822               	movf	?___flmul+2,w
  8481  0E44  0022               	movlb	2	; select bank2
  8482  0E45  00E0               	movwf	(_speed+2)^(0+256)	;volatile
  8483  0E46  0020               	movlb	0	; select bank0
  8484  0E47  0821               	movf	?___flmul+1,w
  8485  0E48  0022               	movlb	2	; select bank2
  8486  0E49  00DF               	movwf	(_speed+1)^(0+256)	;volatile
  8487  0E4A  0020               	movlb	0	; select bank0
  8488  0E4B  0820               	movf	?___flmul,w
  8489  0E4C  0022               	movlb	2	; select bank2
  8490  0E4D  00DE               	movwf	_speed^(0+256)	;volatile
  8491                           
  8492                           ;main.c: 89:     counter = 0 ;
  8493  0E4E  3000               	movlw	0
  8494  0E4F  0020               	movlb	0	; select bank0
  8495  0E50  00C3               	movwf	_counter+3	;volatile
  8496  0E51  3000               	movlw	0
  8497  0E52  00C2               	movwf	_counter+2	;volatile
  8498  0E53  3000               	movlw	0
  8499  0E54  00C1               	movwf	_counter+1	;volatile
  8500  0E55  3000               	movlw	0
  8501  0E56  00C0               	movwf	_counter	;volatile
  8502                           
  8503                           ;main.c: 90:     distance = distance + 2 ;
  8504  0E57  3040               	movlw	64
  8505  0E58  00F3               	movwf	___fladd@b+3
  8506  0E59  3000               	movlw	0
  8507  0E5A  00F2               	movwf	___fladd@b+2
  8508  0E5B  3000               	movlw	0
  8509  0E5C  00F1               	movwf	___fladd@b+1
  8510  0E5D  3000               	movlw	0
  8511  0E5E  00F0               	movwf	___fladd@b
  8512  0E5F  0022               	movlb	2	; select bank2
  8513  0E60  085D               	movf	(_distance+3)^(0+256),w	;volatile
  8514  0E61  00F7               	movwf	___fladd@a+3
  8515  0E62  085C               	movf	(_distance+2)^(0+256),w	;volatile
  8516  0E63  00F6               	movwf	___fladd@a+2
  8517  0E64  085B               	movf	(_distance+1)^(0+256),w	;volatile
  8518  0E65  00F5               	movwf	___fladd@a+1
  8519  0E66  085A               	movf	_distance^(0+256),w	;volatile
  8520  0E67  00F4               	movwf	___fladd@a
  8521  0E68  3182  2269         	fcall	___fladd
  8522  0E6A  0873               	movf	?___fladd+3,w
  8523  0E6B  0022               	movlb	2	; select bank2
  8524  0E6C  00DD               	movwf	(_distance+3)^(0+256)	;volatile
  8525  0E6D  0872               	movf	?___fladd+2,w
  8526  0E6E  00DC               	movwf	(_distance+2)^(0+256)	;volatile
  8527  0E6F  0871               	movf	?___fladd+1,w
  8528  0E70  00DB               	movwf	(_distance+1)^(0+256)	;volatile
  8529  0E71  0870               	movf	?___fladd,w
  8530  0E72  00DA               	movwf	_distance^(0+256)	;volatile
  8531  0E73  0008               	return
  8532  0E74                     __end_of_speedCalc:	
  8533                           
  8534                           	psect	text39
  8535  0D3B                     __ptext39:	
  8536 ;; *************** function ___xxtofl *****************
  8537 ;; Defined at:
  8538 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
  8539 ;; Parameters:    Size  Location     Type
  8540 ;;  sign            1    wreg     unsigned char 
  8541 ;;  val             4   14[BANK0 ] long 
  8542 ;; Auto vars:     Size  Location     Type
  8543 ;;  sign            1   22[BANK0 ] unsigned char 
  8544 ;;  arg             4   24[BANK0 ] unsigned long 
  8545 ;;  exp             1   23[BANK0 ] unsigned char 
  8546 ;; Return value:  Size  Location     Type
  8547 ;;                  4   14[BANK0 ] unsigned char 
  8548 ;; Registers used:
  8549 ;;		wreg, status,2, status,0
  8550 ;; Tracked objects:
  8551 ;;		On entry : 0/0
  8552 ;;		On exit  : 0/0
  8553 ;;		Unchanged: 0/0
  8554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8555 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8556 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8557 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8558 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8559 ;;Total ram usage:       14 bytes
  8560 ;; Hardware stack levels used:    1
  8561 ;; This function calls:
  8562 ;;		Nothing
  8563 ;; This function is called by:
  8564 ;;		_speedCalc
  8565 ;; This function uses a non-reentrant model
  8566 ;;
  8567                           
  8568                           
  8569                           ;psect for function ___xxtofl
  8570  0D3B                     ___xxtofl:	
  8571                           
  8572                           ;incstack = 0
  8573                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  8574                           ;___xxtofl@sign stored from wreg
  8575  0D3B  0020               	movlb	0	; select bank0
  8576  0D3C  00B6               	movwf	___xxtofl@sign
  8577  0D3D  0836               	movf	___xxtofl@sign,w
  8578  0D3E  1D03               	btfss	3,2
  8579  0D3F  1FB1               	btfss	___xxtofl@val+3,7
  8580  0D40  2D51               	goto	i1l2840
  8581  0D41  092E               	comf	___xxtofl@val,w
  8582  0D42  00B8               	movwf	___xxtofl@arg
  8583  0D43  092F               	comf	___xxtofl@val+1,w
  8584  0D44  00B9               	movwf	___xxtofl@arg+1
  8585  0D45  0930               	comf	___xxtofl@val+2,w
  8586  0D46  00BA               	movwf	___xxtofl@arg+2
  8587  0D47  0931               	comf	___xxtofl@val+3,w
  8588  0D48  00BB               	movwf	___xxtofl@arg+3
  8589  0D49  0AB8               	incf	___xxtofl@arg,f
  8590  0D4A  1903               	skipnz
  8591  0D4B  0AB9               	incf	___xxtofl@arg+1,f
  8592  0D4C  1903               	skipnz
  8593  0D4D  0ABA               	incf	___xxtofl@arg+2,f
  8594  0D4E  1903               	skipnz
  8595  0D4F  0ABB               	incf	___xxtofl@arg+3,f
  8596  0D50  2D59               	goto	i1l946
  8597  0D51                     i1l2840:	
  8598  0D51  0831               	movf	___xxtofl@val+3,w
  8599  0D52  00BB               	movwf	___xxtofl@arg+3
  8600  0D53  0830               	movf	___xxtofl@val+2,w
  8601  0D54  00BA               	movwf	___xxtofl@arg+2
  8602  0D55  082F               	movf	___xxtofl@val+1,w
  8603  0D56  00B9               	movwf	___xxtofl@arg+1
  8604  0D57  082E               	movf	___xxtofl@val,w
  8605  0D58  00B8               	movwf	___xxtofl@arg
  8606  0D59                     i1l946:	
  8607  0D59  0831               	movf	___xxtofl@val+3,w
  8608  0D5A  0430               	iorwf	___xxtofl@val+2,w
  8609  0D5B  042F               	iorwf	___xxtofl@val+1,w
  8610  0D5C  042E               	iorwf	___xxtofl@val,w
  8611  0D5D  1D03               	skipz
  8612  0D5E  2D68               	goto	i1l2846
  8613  0D5F  3000               	movlw	0
  8614  0D60  00B1               	movwf	?___xxtofl+3
  8615  0D61  3000               	movlw	0
  8616  0D62  00B0               	movwf	?___xxtofl+2
  8617  0D63  3000               	movlw	0
  8618  0D64  00AF               	movwf	?___xxtofl+1
  8619  0D65  3000               	movlw	0
  8620  0D66  00AE               	movwf	?___xxtofl
  8621  0D67  0008               	return
  8622  0D68                     i1l2846:	
  8623  0D68  3096               	movlw	150
  8624  0D69  00B2               	movwf	??___xxtofl
  8625  0D6A  0832               	movf	??___xxtofl,w
  8626  0D6B  00B7               	movwf	___xxtofl@exp
  8627  0D6C                     i1l2850:	
  8628  0D6C  30FE               	movlw	254
  8629  0D6D  053B               	andwf	___xxtofl@arg+3,w
  8630  0D6E  1903               	btfsc	3,2
  8631  0D6F  2D8F               	goto	i1l952
  8632  0D70  3001               	movlw	1
  8633  0D71  00B2               	movwf	??___xxtofl
  8634  0D72  0832               	movf	??___xxtofl,w
  8635  0D73  07B7               	addwf	___xxtofl@exp,f
  8636  0D74  3001               	movlw	1
  8637  0D75                     u334_25:	
  8638  0D75  36BB               	lsrf	___xxtofl@arg+3,f
  8639  0D76  0CBA               	rrf	___xxtofl@arg+2,f
  8640  0D77  0CB9               	rrf	___xxtofl@arg+1,f
  8641  0D78  0CB8               	rrf	___xxtofl@arg,f
  8642  0D79  0B89               	decfsz	9,f
  8643  0D7A  2D75               	goto	u334_25
  8644  0D7B  2D6C               	goto	i1l2850
  8645  0D7C                     i1l2852:	
  8646  0D7C  3001               	movlw	1
  8647  0D7D  00B2               	movwf	??___xxtofl
  8648  0D7E  0832               	movf	??___xxtofl,w
  8649  0D7F  07B7               	addwf	___xxtofl@exp,f
  8650  0D80  3001               	movlw	1
  8651  0D81  07B8               	addwf	___xxtofl@arg,f
  8652  0D82  3000               	movlw	0
  8653  0D83  3DB9               	addwfc	___xxtofl@arg+1,f
  8654  0D84  3000               	movlw	0
  8655  0D85  3DBA               	addwfc	___xxtofl@arg+2,f
  8656  0D86  3000               	movlw	0
  8657  0D87  3DBB               	addwfc	___xxtofl@arg+3,f
  8658  0D88  3001               	movlw	1
  8659  0D89                     u336_25:	
  8660  0D89  36BB               	lsrf	___xxtofl@arg+3,f
  8661  0D8A  0CBA               	rrf	___xxtofl@arg+2,f
  8662  0D8B  0CB9               	rrf	___xxtofl@arg+1,f
  8663  0D8C  0CB8               	rrf	___xxtofl@arg,f
  8664  0D8D  0B89               	decfsz	9,f
  8665  0D8E  2D89               	goto	u336_25
  8666  0D8F                     i1l952:	
  8667  0D8F  30FF               	movlw	255
  8668  0D90  053B               	andwf	___xxtofl@arg+3,w
  8669  0D91  1903               	btfsc	3,2
  8670  0D92  2DA1               	goto	i1l2860
  8671  0D93  2D7C               	goto	i1l2852
  8672  0D94                     i1l2862:	
  8673  0D94  3002               	movlw	2
  8674  0D95  0237               	subwf	___xxtofl@exp,w
  8675  0D96  1C03               	btfss	3,0
  8676  0D97  2DA3               	goto	i1l959
  8677  0D98  3001               	movlw	1
  8678  0D99  02B7               	subwf	___xxtofl@exp,f
  8679  0D9A  3001               	movlw	1
  8680  0D9B                     u338_25:	
  8681  0D9B  35B8               	lslf	___xxtofl@arg,f
  8682  0D9C  0DB9               	rlf	___xxtofl@arg+1,f
  8683  0D9D  0DBA               	rlf	___xxtofl@arg+2,f
  8684  0D9E  0DBB               	rlf	___xxtofl@arg+3,f
  8685  0D9F  0B89               	decfsz	9,f
  8686  0DA0  2D9B               	goto	u338_25
  8687  0DA1                     i1l2860:	
  8688  0DA1  1FBA               	btfss	___xxtofl@arg+2,7
  8689  0DA2  2D94               	goto	i1l2862
  8690  0DA3                     i1l959:	
  8691  0DA3  1837               	btfsc	___xxtofl@exp,0
  8692  0DA4  2DAD               	goto	i1l960
  8693  0DA5  30FF               	movlw	255
  8694  0DA6  05B8               	andwf	___xxtofl@arg,f
  8695  0DA7  30FF               	movlw	255
  8696  0DA8  05B9               	andwf	___xxtofl@arg+1,f
  8697  0DA9  307F               	movlw	127
  8698  0DAA  05BA               	andwf	___xxtofl@arg+2,f
  8699  0DAB  30FF               	movlw	255
  8700  0DAC  05BB               	andwf	___xxtofl@arg+3,f
  8701  0DAD                     i1l960:	
  8702  0DAD  1003               	clrc
  8703  0DAE  0CB7               	rrf	___xxtofl@exp,f
  8704  0DAF  0837               	movf	___xxtofl@exp,w
  8705  0DB0  00B2               	movwf	??___xxtofl
  8706  0DB1  01B3               	clrf	??___xxtofl+1
  8707  0DB2  01B4               	clrf	??___xxtofl+2
  8708  0DB3  01B5               	clrf	??___xxtofl+3
  8709  0DB4  3018               	movlw	24
  8710  0DB5                     u342_25:	
  8711  0DB5  35B2               	lslf	??___xxtofl,f
  8712  0DB6  0DB3               	rlf	??___xxtofl+1,f
  8713  0DB7  0DB4               	rlf	??___xxtofl+2,f
  8714  0DB8  0DB5               	rlf	??___xxtofl+3,f
  8715  0DB9  0B89               	decfsz	9,f
  8716  0DBA  2DB5               	goto	u342_25
  8717  0DBB  0832               	movf	??___xxtofl,w
  8718  0DBC  04B8               	iorwf	___xxtofl@arg,f
  8719  0DBD  0833               	movf	??___xxtofl+1,w
  8720  0DBE  04B9               	iorwf	___xxtofl@arg+1,f
  8721  0DBF  0834               	movf	??___xxtofl+2,w
  8722  0DC0  04BA               	iorwf	___xxtofl@arg+2,f
  8723  0DC1  0835               	movf	??___xxtofl+3,w
  8724  0DC2  04BB               	iorwf	___xxtofl@arg+3,f
  8725  0DC3  0836               	movf	___xxtofl@sign,w
  8726  0DC4  1D03               	btfss	3,2
  8727  0DC5  1FB1               	btfss	___xxtofl@val+3,7
  8728  0DC6  2DC8               	goto	i1l2874
  8729  0DC7  17BB               	bsf	___xxtofl@arg+3,7
  8730  0DC8                     i1l2874:	
  8731  0DC8  083B               	movf	___xxtofl@arg+3,w
  8732  0DC9  00B1               	movwf	?___xxtofl+3
  8733  0DCA  083A               	movf	___xxtofl@arg+2,w
  8734  0DCB  00B0               	movwf	?___xxtofl+2
  8735  0DCC  0839               	movf	___xxtofl@arg+1,w
  8736  0DCD  00AF               	movwf	?___xxtofl+1
  8737  0DCE  0838               	movf	___xxtofl@arg,w
  8738  0DCF  00AE               	movwf	?___xxtofl
  8739  0DD0  0008               	return
  8740  0DD1                     __end_of___xxtofl:	
  8741                           
  8742                           	psect	text40
  8743  0AB7                     __ptext40:	
  8744 ;; *************** function ___lmul *****************
  8745 ;; Defined at:
  8746 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul32.c"
  8747 ;; Parameters:    Size  Location     Type
  8748 ;;  multiplier      4    6[BANK0 ] unsigned long 
  8749 ;;  multiplicand    4   10[BANK0 ] unsigned long 
  8750 ;; Auto vars:     Size  Location     Type
  8751 ;;  product         4    9[COMMON] unsigned long 
  8752 ;; Return value:  Size  Location     Type
  8753 ;;                  4    6[BANK0 ] unsigned long 
  8754 ;; Registers used:
  8755 ;;		wreg, status,2, status,0
  8756 ;; Tracked objects:
  8757 ;;		On entry : 0/0
  8758 ;;		On exit  : 0/0
  8759 ;;		Unchanged: 0/0
  8760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8761 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8762 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8764 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8765 ;;Total ram usage:       12 bytes
  8766 ;; Hardware stack levels used:    1
  8767 ;; This function calls:
  8768 ;;		Nothing
  8769 ;; This function is called by:
  8770 ;;		_speedCalc
  8771 ;; This function uses a non-reentrant model
  8772 ;;
  8773                           
  8774                           
  8775                           ;psect for function ___lmul
  8776  0AB7                     ___lmul:	
  8777                           
  8778                           ;incstack = 0
  8779                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  8780  0AB7  3000               	movlw	0
  8781  0AB8  00FC               	movwf	___lmul@product+3
  8782  0AB9  3000               	movlw	0
  8783  0ABA  00FB               	movwf	___lmul@product+2
  8784  0ABB  3000               	movlw	0
  8785  0ABC  00FA               	movwf	___lmul@product+1
  8786  0ABD  3000               	movlw	0
  8787  0ABE  00F9               	movwf	___lmul@product
  8788  0ABF                     i1l2448:	
  8789  0ABF  0020               	movlb	0	; select bank0
  8790  0AC0  1C26               	btfss	___lmul@multiplier,0
  8791  0AC1  2ACA               	goto	i1l2452
  8792  0AC2  082A               	movf	___lmul@multiplicand,w
  8793  0AC3  07F9               	addwf	___lmul@product,f
  8794  0AC4  082B               	movf	___lmul@multiplicand+1,w
  8795  0AC5  3DFA               	addwfc	___lmul@product+1,f
  8796  0AC6  082C               	movf	___lmul@multiplicand+2,w
  8797  0AC7  3DFB               	addwfc	___lmul@product+2,f
  8798  0AC8  082D               	movf	___lmul@multiplicand+3,w
  8799  0AC9  3DFC               	addwfc	___lmul@product+3,f
  8800  0ACA                     i1l2452:	
  8801  0ACA  3001               	movlw	1
  8802  0ACB                     u249_25:	
  8803  0ACB  35AA               	lslf	___lmul@multiplicand,f
  8804  0ACC  0DAB               	rlf	___lmul@multiplicand+1,f
  8805  0ACD  0DAC               	rlf	___lmul@multiplicand+2,f
  8806  0ACE  0DAD               	rlf	___lmul@multiplicand+3,f
  8807  0ACF  0B89               	decfsz	9,f
  8808  0AD0  2ACB               	goto	u249_25
  8809  0AD1  3001               	movlw	1
  8810  0AD2                     u250_25:	
  8811  0AD2  36A9               	lsrf	___lmul@multiplier+3,f
  8812  0AD3  0CA8               	rrf	___lmul@multiplier+2,f
  8813  0AD4  0CA7               	rrf	___lmul@multiplier+1,f
  8814  0AD5  0CA6               	rrf	___lmul@multiplier,f
  8815  0AD6  0B89               	decfsz	9,f
  8816  0AD7  2AD2               	goto	u250_25
  8817  0AD8  0829               	movf	___lmul@multiplier+3,w
  8818  0AD9  0428               	iorwf	___lmul@multiplier+2,w
  8819  0ADA  0427               	iorwf	___lmul@multiplier+1,w
  8820  0ADB  0426               	iorwf	___lmul@multiplier,w
  8821  0ADC  1D03               	skipz
  8822  0ADD  2ABF               	goto	i1l2448
  8823  0ADE  087C               	movf	___lmul@product+3,w
  8824  0ADF  00A9               	movwf	?___lmul+3
  8825  0AE0  087B               	movf	___lmul@product+2,w
  8826  0AE1  00A8               	movwf	?___lmul+2
  8827  0AE2  087A               	movf	___lmul@product+1,w
  8828  0AE3  00A7               	movwf	?___lmul+1
  8829  0AE4  0879               	movf	___lmul@product,w
  8830  0AE5  00A6               	movwf	?___lmul
  8831  0AE6  0008               	return
  8832  0AE7                     __end_of___lmul:	
  8833                           
  8834                           	psect	text41
  8835  003D                     __ptext41:	
  8836 ;; *************** function ___flmul *****************
  8837 ;; Defined at:
  8838 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
  8839 ;; Parameters:    Size  Location     Type
  8840 ;;  b               4    0[BANK0 ] unsigned long 
  8841 ;;  a               4    4[BANK0 ] unsigned long 
  8842 ;; Auto vars:     Size  Location     Type
  8843 ;;  prod            4   15[BANK0 ] struct .
  8844 ;;  grs             4    9[BANK0 ] unsigned long 
  8845 ;;  temp            2   19[BANK0 ] struct .
  8846 ;;  bexp            1   14[BANK0 ] unsigned char 
  8847 ;;  aexp            1   13[BANK0 ] unsigned char 
  8848 ;;  sign            1    8[BANK0 ] unsigned char 
  8849 ;; Return value:  Size  Location     Type
  8850 ;;                  4    0[BANK0 ] unsigned char 
  8851 ;; Registers used:
  8852 ;;		wreg, status,2, status,0, pclath, cstack
  8853 ;; Tracked objects:
  8854 ;;		On entry : 0/0
  8855 ;;		On exit  : 0/0
  8856 ;;		Unchanged: 0/0
  8857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8858 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8859 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8860 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8861 ;;      Totals:         5      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8862 ;;Total ram usage:       26 bytes
  8863 ;; Hardware stack levels used:    1
  8864 ;; Hardware stack levels required when called:    1
  8865 ;; This function calls:
  8866 ;;		__Umul8_16
  8867 ;; This function is called by:
  8868 ;;		_speedCalc
  8869 ;; This function uses a non-reentrant model
  8870 ;;
  8871                           
  8872                           
  8873                           ;psect for function ___flmul
  8874  003D                     ___flmul:	
  8875                           
  8876                           ;incstack = 0
  8877                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  8878  003D  0020               	movlb	0	; select bank0
  8879  003E  0823               	movf	___flmul@b+3,w
  8880  003F  3980               	andlw	128
  8881  0040  00F9               	movwf	??___flmul
  8882  0041  0879               	movf	??___flmul,w
  8883  0042  00A8               	movwf	___flmul@sign
  8884  0043  3523               	lslf	___flmul@b+3,w
  8885  0044  00F9               	movwf	??___flmul
  8886  0045  0879               	movf	??___flmul,w
  8887  0046  00AE               	movwf	___flmul@bexp
  8888  0047  1BA2               	btfsc	___flmul@b+2,7
  8889  0048  142E               	bsf	___flmul@bexp,0
  8890  0049  082E               	movf	___flmul@bexp,w
  8891  004A  1903               	btfsc	3,2
  8892  004B  2859               	goto	i1l2710
  8893  004C  0A2E               	incf	___flmul@bexp,w
  8894  004D  1D03               	btfss	3,2
  8895  004E  2857               	goto	i1l2708
  8896  004F  3000               	movlw	0
  8897  0050  00A3               	movwf	___flmul@b+3
  8898  0051  3000               	movlw	0
  8899  0052  00A2               	movwf	___flmul@b+2
  8900  0053  3000               	movlw	0
  8901  0054  00A1               	movwf	___flmul@b+1
  8902  0055  3000               	movlw	0
  8903  0056  00A0               	movwf	___flmul@b
  8904  0057                     i1l2708:	
  8905  0057  17A2               	bsf	___flmul@b+2,7
  8906  0058  2861               	goto	i1l2712
  8907  0059                     i1l2710:	
  8908  0059  3000               	movlw	0
  8909  005A  00A3               	movwf	___flmul@b+3
  8910  005B  3000               	movlw	0
  8911  005C  00A2               	movwf	___flmul@b+2
  8912  005D  3000               	movlw	0
  8913  005E  00A1               	movwf	___flmul@b+1
  8914  005F  3000               	movlw	0
  8915  0060  00A0               	movwf	___flmul@b
  8916  0061                     i1l2712:	
  8917  0061  0827               	movf	___flmul@a+3,w
  8918  0062  3980               	andlw	128
  8919  0063  00F9               	movwf	??___flmul
  8920  0064  0879               	movf	??___flmul,w
  8921  0065  06A8               	xorwf	___flmul@sign,f
  8922  0066  3527               	lslf	___flmul@a+3,w
  8923  0067  00F9               	movwf	??___flmul
  8924  0068  0879               	movf	??___flmul,w
  8925  0069  00AD               	movwf	___flmul@aexp
  8926  006A  1BA6               	btfsc	___flmul@a+2,7
  8927  006B  142D               	bsf	___flmul@aexp,0
  8928  006C  082D               	movf	___flmul@aexp,w
  8929  006D  1903               	btfsc	3,2
  8930  006E  287C               	goto	i1l2728
  8931  006F  0A2D               	incf	___flmul@aexp,w
  8932  0070  1D03               	btfss	3,2
  8933  0071  287A               	goto	i1l2726
  8934  0072  3000               	movlw	0
  8935  0073  00A7               	movwf	___flmul@a+3
  8936  0074  3000               	movlw	0
  8937  0075  00A6               	movwf	___flmul@a+2
  8938  0076  3000               	movlw	0
  8939  0077  00A5               	movwf	___flmul@a+1
  8940  0078  3000               	movlw	0
  8941  0079  00A4               	movwf	___flmul@a
  8942  007A                     i1l2726:	
  8943  007A  17A6               	bsf	___flmul@a+2,7
  8944  007B  2884               	goto	i1l2730
  8945  007C                     i1l2728:	
  8946  007C  3000               	movlw	0
  8947  007D  00A7               	movwf	___flmul@a+3
  8948  007E  3000               	movlw	0
  8949  007F  00A6               	movwf	___flmul@a+2
  8950  0080  3000               	movlw	0
  8951  0081  00A5               	movwf	___flmul@a+1
  8952  0082  3000               	movlw	0
  8953  0083  00A4               	movwf	___flmul@a
  8954  0084                     i1l2730:	
  8955  0084  082D               	movf	___flmul@aexp,w
  8956  0085  1D03               	btfss	3,2
  8957  0086  082E               	movf	___flmul@bexp,w
  8958  0087  1D03               	btfss	3,2
  8959  0088  2892               	goto	i1l2738
  8960  0089  3000               	movlw	0
  8961  008A  00A3               	movwf	?___flmul+3
  8962  008B  3000               	movlw	0
  8963  008C  00A2               	movwf	?___flmul+2
  8964  008D  3000               	movlw	0
  8965  008E  00A1               	movwf	?___flmul+1
  8966  008F  3000               	movlw	0
  8967  0090  00A0               	movwf	?___flmul
  8968  0091  0008               	return
  8969  0092                     i1l2738:	
  8970  0092  0820               	movf	___flmul@b,w
  8971  0093  00F9               	movwf	??___flmul
  8972  0094  0879               	movf	??___flmul,w
  8973  0095  00F0               	movwf	__Umul8_16@multiplicand
  8974  0096  0826               	movf	___flmul@a+2,w
  8975  0097  318A  222A  3180   	fcall	__Umul8_16
  8976  009A  0871               	movf	?__Umul8_16+1,w
  8977  009B  0020               	movlb	0	; select bank0
  8978  009C  00B4               	movwf	___flmul@temp+1
  8979  009D  0870               	movf	?__Umul8_16,w
  8980  009E  00B3               	movwf	___flmul@temp
  8981  009F  0833               	movf	___flmul@temp,w
  8982  00A0  00F9               	movwf	??___flmul
  8983  00A1  01FA               	clrf	??___flmul+1
  8984  00A2  01FB               	clrf	??___flmul+2
  8985  00A3  01FC               	clrf	??___flmul+3
  8986  00A4  087C               	movf	??___flmul+3,w
  8987  00A5  00AC               	movwf	___flmul@grs+3
  8988  00A6  087B               	movf	??___flmul+2,w
  8989  00A7  00AB               	movwf	___flmul@grs+2
  8990  00A8  087A               	movf	??___flmul+1,w
  8991  00A9  00AA               	movwf	___flmul@grs+1
  8992  00AA  0879               	movf	??___flmul,w
  8993  00AB  00A9               	movwf	___flmul@grs
  8994  00AC  0834               	movf	___flmul@temp+1,w
  8995  00AD  00F9               	movwf	??___flmul
  8996  00AE  01FA               	clrf	??___flmul+1
  8997  00AF  01FB               	clrf	??___flmul+2
  8998  00B0  01FC               	clrf	??___flmul+3
  8999  00B1  087C               	movf	??___flmul+3,w
  9000  00B2  00B2               	movwf	___flmul@prod+3
  9001  00B3  087B               	movf	??___flmul+2,w
  9002  00B4  00B1               	movwf	___flmul@prod+2
  9003  00B5  087A               	movf	??___flmul+1,w
  9004  00B6  00B0               	movwf	___flmul@prod+1
  9005  00B7  0879               	movf	??___flmul,w
  9006  00B8  00AF               	movwf	___flmul@prod
  9007  00B9  0821               	movf	___flmul@b+1,w
  9008  00BA  00F9               	movwf	??___flmul
  9009  00BB  0879               	movf	??___flmul,w
  9010  00BC  00F0               	movwf	__Umul8_16@multiplicand
  9011  00BD  0825               	movf	___flmul@a+1,w
  9012  00BE  318A  222A  3180   	fcall	__Umul8_16
  9013  00C1  0871               	movf	?__Umul8_16+1,w
  9014  00C2  0020               	movlb	0	; select bank0
  9015  00C3  00B4               	movwf	___flmul@temp+1
  9016  00C4  0870               	movf	?__Umul8_16,w
  9017  00C5  00B3               	movwf	___flmul@temp
  9018  00C6  0833               	movf	___flmul@temp,w
  9019  00C7  00F9               	movwf	??___flmul
  9020  00C8  01FA               	clrf	??___flmul+1
  9021  00C9  01FB               	clrf	??___flmul+2
  9022  00CA  01FC               	clrf	??___flmul+3
  9023  00CB  0879               	movf	??___flmul,w
  9024  00CC  07A9               	addwf	___flmul@grs,f
  9025  00CD  087A               	movf	??___flmul+1,w
  9026  00CE  3DAA               	addwfc	___flmul@grs+1,f
  9027  00CF  087B               	movf	??___flmul+2,w
  9028  00D0  3DAB               	addwfc	___flmul@grs+2,f
  9029  00D1  087C               	movf	??___flmul+3,w
  9030  00D2  3DAC               	addwfc	___flmul@grs+3,f
  9031  00D3  0834               	movf	___flmul@temp+1,w
  9032  00D4  00F9               	movwf	??___flmul
  9033  00D5  01FA               	clrf	??___flmul+1
  9034  00D6  01FB               	clrf	??___flmul+2
  9035  00D7  01FC               	clrf	??___flmul+3
  9036  00D8  0879               	movf	??___flmul,w
  9037  00D9  07AF               	addwf	___flmul@prod,f
  9038  00DA  087A               	movf	??___flmul+1,w
  9039  00DB  3DB0               	addwfc	___flmul@prod+1,f
  9040  00DC  087B               	movf	??___flmul+2,w
  9041  00DD  3DB1               	addwfc	___flmul@prod+2,f
  9042  00DE  087C               	movf	??___flmul+3,w
  9043  00DF  3DB2               	addwfc	___flmul@prod+3,f
  9044  00E0  0822               	movf	___flmul@b+2,w
  9045  00E1  00F9               	movwf	??___flmul
  9046  00E2  0879               	movf	??___flmul,w
  9047  00E3  00F0               	movwf	__Umul8_16@multiplicand
  9048  00E4  0824               	movf	___flmul@a,w
  9049  00E5  318A  222A  3180   	fcall	__Umul8_16
  9050  00E8  0871               	movf	?__Umul8_16+1,w
  9051  00E9  0020               	movlb	0	; select bank0
  9052  00EA  00B4               	movwf	___flmul@temp+1
  9053  00EB  0870               	movf	?__Umul8_16,w
  9054  00EC  00B3               	movwf	___flmul@temp
  9055  00ED  0833               	movf	___flmul@temp,w
  9056  00EE  00F9               	movwf	??___flmul
  9057  00EF  01FA               	clrf	??___flmul+1
  9058  00F0  01FB               	clrf	??___flmul+2
  9059  00F1  01FC               	clrf	??___flmul+3
  9060  00F2  0879               	movf	??___flmul,w
  9061  00F3  07A9               	addwf	___flmul@grs,f
  9062  00F4  087A               	movf	??___flmul+1,w
  9063  00F5  3DAA               	addwfc	___flmul@grs+1,f
  9064  00F6  087B               	movf	??___flmul+2,w
  9065  00F7  3DAB               	addwfc	___flmul@grs+2,f
  9066  00F8  087C               	movf	??___flmul+3,w
  9067  00F9  3DAC               	addwfc	___flmul@grs+3,f
  9068  00FA  0834               	movf	___flmul@temp+1,w
  9069  00FB  00F9               	movwf	??___flmul
  9070  00FC  01FA               	clrf	??___flmul+1
  9071  00FD  01FB               	clrf	??___flmul+2
  9072  00FE  01FC               	clrf	??___flmul+3
  9073  00FF  0879               	movf	??___flmul,w
  9074  0100  07AF               	addwf	___flmul@prod,f
  9075  0101  087A               	movf	??___flmul+1,w
  9076  0102  3DB0               	addwfc	___flmul@prod+1,f
  9077  0103  087B               	movf	??___flmul+2,w
  9078  0104  3DB1               	addwfc	___flmul@prod+2,f
  9079  0105  087C               	movf	??___flmul+3,w
  9080  0106  3DB2               	addwfc	___flmul@prod+3,f
  9081  0107  3008               	movlw	8
  9082  0108                     u313_25:	
  9083  0108  35A9               	lslf	___flmul@grs,f
  9084  0109  0DAA               	rlf	___flmul@grs+1,f
  9085  010A  0DAB               	rlf	___flmul@grs+2,f
  9086  010B  0DAC               	rlf	___flmul@grs+3,f
  9087  010C  0B89               	decfsz	9,f
  9088  010D  2908               	goto	u313_25
  9089  010E  0821               	movf	___flmul@b+1,w
  9090  010F  00F9               	movwf	??___flmul
  9091  0110  0879               	movf	??___flmul,w
  9092  0111  00F0               	movwf	__Umul8_16@multiplicand
  9093  0112  0824               	movf	___flmul@a,w
  9094  0113  318A  222A  3180   	fcall	__Umul8_16
  9095  0116  0871               	movf	?__Umul8_16+1,w
  9096  0117  0020               	movlb	0	; select bank0
  9097  0118  00B4               	movwf	___flmul@temp+1
  9098  0119  0870               	movf	?__Umul8_16,w
  9099  011A  00B3               	movwf	___flmul@temp
  9100  011B  0833               	movf	___flmul@temp,w
  9101  011C  07A9               	addwf	___flmul@grs,f
  9102  011D  0834               	movf	___flmul@temp+1,w
  9103  011E  3DAA               	addwfc	___flmul@grs+1,f
  9104  011F  3000               	movlw	0
  9105  0120  3DAB               	addwfc	___flmul@grs+2,f
  9106  0121  3DAC               	addwfc	___flmul@grs+3,f
  9107  0122  0820               	movf	___flmul@b,w
  9108  0123  00F9               	movwf	??___flmul
  9109  0124  0879               	movf	??___flmul,w
  9110  0125  00F0               	movwf	__Umul8_16@multiplicand
  9111  0126  0825               	movf	___flmul@a+1,w
  9112  0127  318A  222A  3180   	fcall	__Umul8_16
  9113  012A  0871               	movf	?__Umul8_16+1,w
  9114  012B  0020               	movlb	0	; select bank0
  9115  012C  00B4               	movwf	___flmul@temp+1
  9116  012D  0870               	movf	?__Umul8_16,w
  9117  012E  00B3               	movwf	___flmul@temp
  9118  012F  0833               	movf	___flmul@temp,w
  9119  0130  07A9               	addwf	___flmul@grs,f
  9120  0131  0834               	movf	___flmul@temp+1,w
  9121  0132  3DAA               	addwfc	___flmul@grs+1,f
  9122  0133  3000               	movlw	0
  9123  0134  3DAB               	addwfc	___flmul@grs+2,f
  9124  0135  3DAC               	addwfc	___flmul@grs+3,f
  9125  0136  3008               	movlw	8
  9126  0137                     u314_25:	
  9127  0137  35A9               	lslf	___flmul@grs,f
  9128  0138  0DAA               	rlf	___flmul@grs+1,f
  9129  0139  0DAB               	rlf	___flmul@grs+2,f
  9130  013A  0DAC               	rlf	___flmul@grs+3,f
  9131  013B  0B89               	decfsz	9,f
  9132  013C  2937               	goto	u314_25
  9133  013D  0820               	movf	___flmul@b,w
  9134  013E  00F9               	movwf	??___flmul
  9135  013F  0879               	movf	??___flmul,w
  9136  0140  00F0               	movwf	__Umul8_16@multiplicand
  9137  0141  0824               	movf	___flmul@a,w
  9138  0142  318A  222A  3180   	fcall	__Umul8_16
  9139  0145  0871               	movf	?__Umul8_16+1,w
  9140  0146  0020               	movlb	0	; select bank0
  9141  0147  00B4               	movwf	___flmul@temp+1
  9142  0148  0870               	movf	?__Umul8_16,w
  9143  0149  00B3               	movwf	___flmul@temp
  9144  014A  0833               	movf	___flmul@temp,w
  9145  014B  07A9               	addwf	___flmul@grs,f
  9146  014C  0834               	movf	___flmul@temp+1,w
  9147  014D  3DAA               	addwfc	___flmul@grs+1,f
  9148  014E  3000               	movlw	0
  9149  014F  3DAB               	addwfc	___flmul@grs+2,f
  9150  0150  3DAC               	addwfc	___flmul@grs+3,f
  9151  0151  0821               	movf	___flmul@b+1,w
  9152  0152  00F9               	movwf	??___flmul
  9153  0153  0879               	movf	??___flmul,w
  9154  0154  00F0               	movwf	__Umul8_16@multiplicand
  9155  0155  0826               	movf	___flmul@a+2,w
  9156  0156  318A  222A  3180   	fcall	__Umul8_16
  9157  0159  0871               	movf	?__Umul8_16+1,w
  9158  015A  0020               	movlb	0	; select bank0
  9159  015B  00B4               	movwf	___flmul@temp+1
  9160  015C  0870               	movf	?__Umul8_16,w
  9161  015D  00B3               	movwf	___flmul@temp
  9162  015E  0833               	movf	___flmul@temp,w
  9163  015F  07AF               	addwf	___flmul@prod,f
  9164  0160  0834               	movf	___flmul@temp+1,w
  9165  0161  3DB0               	addwfc	___flmul@prod+1,f
  9166  0162  3000               	movlw	0
  9167  0163  3DB1               	addwfc	___flmul@prod+2,f
  9168  0164  3DB2               	addwfc	___flmul@prod+3,f
  9169  0165  0822               	movf	___flmul@b+2,w
  9170  0166  00F9               	movwf	??___flmul
  9171  0167  0879               	movf	??___flmul,w
  9172  0168  00F0               	movwf	__Umul8_16@multiplicand
  9173  0169  0825               	movf	___flmul@a+1,w
  9174  016A  318A  222A  3180   	fcall	__Umul8_16
  9175  016D  0871               	movf	?__Umul8_16+1,w
  9176  016E  0020               	movlb	0	; select bank0
  9177  016F  00B4               	movwf	___flmul@temp+1
  9178  0170  0870               	movf	?__Umul8_16,w
  9179  0171  00B3               	movwf	___flmul@temp
  9180  0172  0833               	movf	___flmul@temp,w
  9181  0173  07AF               	addwf	___flmul@prod,f
  9182  0174  0834               	movf	___flmul@temp+1,w
  9183  0175  3DB0               	addwfc	___flmul@prod+1,f
  9184  0176  3000               	movlw	0
  9185  0177  3DB1               	addwfc	___flmul@prod+2,f
  9186  0178  3DB2               	addwfc	___flmul@prod+3,f
  9187  0179  0822               	movf	___flmul@b+2,w
  9188  017A  00F9               	movwf	??___flmul
  9189  017B  0879               	movf	??___flmul,w
  9190  017C  00F0               	movwf	__Umul8_16@multiplicand
  9191  017D  0826               	movf	___flmul@a+2,w
  9192  017E  318A  222A  3180   	fcall	__Umul8_16
  9193  0181  0871               	movf	?__Umul8_16+1,w
  9194  0182  0020               	movlb	0	; select bank0
  9195  0183  00B4               	movwf	___flmul@temp+1
  9196  0184  0870               	movf	?__Umul8_16,w
  9197  0185  00B3               	movwf	___flmul@temp
  9198  0186  0833               	movf	___flmul@temp,w
  9199  0187  00F9               	movwf	??___flmul
  9200  0188  0834               	movf	___flmul@temp+1,w
  9201  0189  00FA               	movwf	??___flmul+1
  9202  018A  01FB               	clrf	??___flmul+2
  9203  018B  01FC               	clrf	??___flmul+3
  9204  018C  3008               	movlw	8
  9205  018D                     u315_25:	
  9206  018D  35F9               	lslf	??___flmul,f
  9207  018E  0DFA               	rlf	??___flmul+1,f
  9208  018F  0DFB               	rlf	??___flmul+2,f
  9209  0190  0DFC               	rlf	??___flmul+3,f
  9210  0191  0B89               	decfsz	9,f
  9211  0192  298D               	goto	u315_25
  9212  0193  0879               	movf	??___flmul,w
  9213  0194  07AF               	addwf	___flmul@prod,f
  9214  0195  087A               	movf	??___flmul+1,w
  9215  0196  3DB0               	addwfc	___flmul@prod+1,f
  9216  0197  087B               	movf	??___flmul+2,w
  9217  0198  3DB1               	addwfc	___flmul@prod+2,f
  9218  0199  087C               	movf	??___flmul+3,w
  9219  019A  3DB2               	addwfc	___flmul@prod+3,f
  9220  019B  0829               	movf	___flmul@grs,w
  9221  019C  00F9               	movwf	??___flmul
  9222  019D  082A               	movf	___flmul@grs+1,w
  9223  019E  00FA               	movwf	??___flmul+1
  9224  019F  082B               	movf	___flmul@grs+2,w
  9225  01A0  00FB               	movwf	??___flmul+2
  9226  01A1  082C               	movf	___flmul@grs+3,w
  9227  01A2  00FC               	movwf	??___flmul+3
  9228  01A3  3018               	movlw	24
  9229  01A4                     u316_25:	
  9230  01A4  36FC               	lsrf	??___flmul+3,f
  9231  01A5  0CFB               	rrf	??___flmul+2,f
  9232  01A6  0CFA               	rrf	??___flmul+1,f
  9233  01A7  0CF9               	rrf	??___flmul,f
  9234  01A8  0B89               	decfsz	9,f
  9235  01A9  29A4               	goto	u316_25
  9236  01AA  0879               	movf	??___flmul,w
  9237  01AB  07AF               	addwf	___flmul@prod,f
  9238  01AC  087A               	movf	??___flmul+1,w
  9239  01AD  3DB0               	addwfc	___flmul@prod+1,f
  9240  01AE  087B               	movf	??___flmul+2,w
  9241  01AF  3DB1               	addwfc	___flmul@prod+2,f
  9242  01B0  087C               	movf	??___flmul+3,w
  9243  01B1  3DB2               	addwfc	___flmul@prod+3,f
  9244  01B2  3008               	movlw	8
  9245  01B3                     u317_25:	
  9246  01B3  35A9               	lslf	___flmul@grs,f
  9247  01B4  0DAA               	rlf	___flmul@grs+1,f
  9248  01B5  0DAB               	rlf	___flmul@grs+2,f
  9249  01B6  0DAC               	rlf	___flmul@grs+3,f
  9250  01B7  0B89               	decfsz	9,f
  9251  01B8  29B3               	goto	u317_25
  9252  01B9  082E               	movf	___flmul@bexp,w
  9253  01BA  072D               	addwf	___flmul@aexp,w
  9254  01BB  00F9               	movwf	??___flmul
  9255  01BC  01FA               	clrf	??___flmul+1
  9256  01BD  0DFA               	rlf	??___flmul+1,f
  9257  01BE  0879               	movf	??___flmul,w
  9258  01BF  3E82               	addlw	130
  9259  01C0  00B3               	movwf	___flmul@temp
  9260  01C1  30FF               	movlw	255
  9261  01C2  3D7A               	addwfc	??___flmul+1,w
  9262  01C3  00B4               	movwf	___flmul@temp+1
  9263  01C4                     i1l2790:	
  9264  01C4  1BB1               	btfsc	___flmul@prod+2,7
  9265  01C5  29DB               	goto	i1l2792
  9266  01C6  3001               	movlw	1
  9267  01C7                     u318_25:	
  9268  01C7  35AF               	lslf	___flmul@prod,f
  9269  01C8  0DB0               	rlf	___flmul@prod+1,f
  9270  01C9  0DB1               	rlf	___flmul@prod+2,f
  9271  01CA  0DB2               	rlf	___flmul@prod+3,f
  9272  01CB  0B89               	decfsz	9,f
  9273  01CC  29C7               	goto	u318_25
  9274  01CD  1BAC               	btfsc	___flmul@grs+3,7
  9275  01CE  142F               	bsf	___flmul@prod,0
  9276  01CF  3001               	movlw	1
  9277  01D0                     u320_25:	
  9278  01D0  35A9               	lslf	___flmul@grs,f
  9279  01D1  0DAA               	rlf	___flmul@grs+1,f
  9280  01D2  0DAB               	rlf	___flmul@grs+2,f
  9281  01D3  0DAC               	rlf	___flmul@grs+3,f
  9282  01D4  0B89               	decfsz	9,f
  9283  01D5  29D0               	goto	u320_25
  9284  01D6  30FF               	movlw	255
  9285  01D7  07B3               	addwf	___flmul@temp,f
  9286  01D8  30FF               	movlw	255
  9287  01D9  3DB4               	addwfc	___flmul@temp+1,f
  9288  01DA  29C4               	goto	i1l2790
  9289  01DB                     i1l2792:	
  9290  01DB  01AD               	clrf	___flmul@aexp
  9291  01DC  1FAC               	btfss	___flmul@grs+3,7
  9292  01DD  29F4               	goto	i1l2802
  9293  01DE  30FF               	movlw	255
  9294  01DF  0529               	andwf	___flmul@grs,w
  9295  01E0  00F9               	movwf	??___flmul
  9296  01E1  30FF               	movlw	255
  9297  01E2  052A               	andwf	___flmul@grs+1,w
  9298  01E3  00FA               	movwf	??___flmul+1
  9299  01E4  30FF               	movlw	255
  9300  01E5  052B               	andwf	___flmul@grs+2,w
  9301  01E6  00FB               	movwf	??___flmul+2
  9302  01E7  307F               	movlw	127
  9303  01E8  052C               	andwf	___flmul@grs+3,w
  9304  01E9  00FC               	movwf	??___flmul+3
  9305  01EA  087C               	movf	??___flmul+3,w
  9306  01EB  047B               	iorwf	??___flmul+2,w
  9307  01EC  047A               	iorwf	??___flmul+1,w
  9308  01ED  0479               	iorwf	??___flmul,w
  9309  01EE  1903               	skipnz
  9310  01EF  182F               	btfsc	___flmul@prod,0
  9311  01F0  29F2               	goto	i1l2798
  9312  01F1  29F4               	goto	i1l2802
  9313  01F2                     i1l2798:	
  9314  01F2  01AD               	clrf	___flmul@aexp
  9315  01F3  0AAD               	incf	___flmul@aexp,f
  9316  01F4                     i1l2802:	
  9317  01F4  082D               	movf	___flmul@aexp,w
  9318  01F5  1903               	btfsc	3,2
  9319  01F6  2A1D               	goto	i1l2812
  9320  01F7  3001               	movlw	1
  9321  01F8  07AF               	addwf	___flmul@prod,f
  9322  01F9  3000               	movlw	0
  9323  01FA  3DB0               	addwfc	___flmul@prod+1,f
  9324  01FB  3000               	movlw	0
  9325  01FC  3DB1               	addwfc	___flmul@prod+2,f
  9326  01FD  3000               	movlw	0
  9327  01FE  3DB2               	addwfc	___flmul@prod+3,f
  9328  01FF  1C32               	btfss	___flmul@prod+3,0
  9329  0200  2A1D               	goto	i1l2812
  9330  0201  082F               	movf	___flmul@prod,w
  9331  0202  00F9               	movwf	??___flmul
  9332  0203  0830               	movf	___flmul@prod+1,w
  9333  0204  00FA               	movwf	??___flmul+1
  9334  0205  0831               	movf	___flmul@prod+2,w
  9335  0206  00FB               	movwf	??___flmul+2
  9336  0207  0832               	movf	___flmul@prod+3,w
  9337  0208  00FC               	movwf	??___flmul+3
  9338  0209  3001               	movlw	1
  9339  020A  00FD               	movwf	??___flmul+4
  9340  020B                     u327_25:	
  9341  020B  37FC               	asrf	??___flmul+3,f
  9342  020C  0CFB               	rrf	??___flmul+2,f
  9343  020D  0CFA               	rrf	??___flmul+1,f
  9344  020E  0CF9               	rrf	??___flmul,f
  9345  020F  0BFD               	decfsz	??___flmul+4,f
  9346  0210  2A0B               	goto	u327_25
  9347  0211  087C               	movf	??___flmul+3,w
  9348  0212  00B2               	movwf	___flmul@prod+3
  9349  0213  087B               	movf	??___flmul+2,w
  9350  0214  00B1               	movwf	___flmul@prod+2
  9351  0215  087A               	movf	??___flmul+1,w
  9352  0216  00B0               	movwf	___flmul@prod+1
  9353  0217  0879               	movf	??___flmul,w
  9354  0218  00AF               	movwf	___flmul@prod
  9355  0219  3001               	movlw	1
  9356  021A  07B3               	addwf	___flmul@temp,f
  9357  021B  3000               	movlw	0
  9358  021C  3DB4               	addwfc	___flmul@temp+1,f
  9359  021D                     i1l2812:	
  9360  021D  0834               	movf	___flmul@temp+1,w
  9361  021E  3A80               	xorlw	128
  9362  021F  00F9               	movwf	??___flmul
  9363  0220  3080               	movlw	128
  9364  0221  0279               	subwf	??___flmul,w
  9365  0222  1D03               	skipz
  9366  0223  2A26               	goto	u328_25
  9367  0224  30FF               	movlw	255
  9368  0225  0233               	subwf	___flmul@temp,w
  9369  0226                     u328_25:	
  9370  0226  1C03               	skipc
  9371  0227  2A32               	goto	i1l2816
  9372  0228  307F               	movlw	127
  9373  0229  0020               	movlb	0	; select bank0
  9374  022A  00B2               	movwf	___flmul@prod+3
  9375  022B  3080               	movlw	128
  9376  022C  00B1               	movwf	___flmul@prod+2
  9377  022D  3000               	movlw	0
  9378  022E  00B0               	movwf	___flmul@prod+1
  9379  022F  3000               	movlw	0
  9380  0230  00AF               	movwf	___flmul@prod
  9381  0231  2A5C               	goto	i1l920
  9382  0232                     i1l2816:	
  9383  0232  0020               	movlb	0	; select bank0
  9384  0233  0834               	movf	___flmul@temp+1,w
  9385  0234  3A80               	xorlw	128
  9386  0235  00F9               	movwf	??___flmul
  9387  0236  3080               	movlw	128
  9388  0237  0279               	subwf	??___flmul,w
  9389  0238  1D03               	skipz
  9390  0239  2A3C               	goto	u329_25
  9391  023A  3001               	movlw	1
  9392  023B  0233               	subwf	___flmul@temp,w
  9393  023C                     u329_25:	
  9394  023C  1803               	skipnc
  9395  023D  2A49               	goto	i1l2822
  9396  023E  3000               	movlw	0
  9397  023F  0020               	movlb	0	; select bank0
  9398  0240  00B2               	movwf	___flmul@prod+3
  9399  0241  3000               	movlw	0
  9400  0242  00B1               	movwf	___flmul@prod+2
  9401  0243  3000               	movlw	0
  9402  0244  00B0               	movwf	___flmul@prod+1
  9403  0245  3000               	movlw	0
  9404  0246  00AF               	movwf	___flmul@prod
  9405  0247  01A8               	clrf	___flmul@sign
  9406  0248  2A5C               	goto	i1l920
  9407  0249                     i1l2822:	
  9408  0249  0020               	movlb	0	; select bank0
  9409  024A  0833               	movf	___flmul@temp,w
  9410  024B  00F9               	movwf	??___flmul
  9411  024C  0879               	movf	??___flmul,w
  9412  024D  00AE               	movwf	___flmul@bexp
  9413  024E  30FF               	movlw	255
  9414  024F  05AF               	andwf	___flmul@prod,f
  9415  0250  30FF               	movlw	255
  9416  0251  05B0               	andwf	___flmul@prod+1,f
  9417  0252  307F               	movlw	127
  9418  0253  05B1               	andwf	___flmul@prod+2,f
  9419  0254  3000               	movlw	0
  9420  0255  05B2               	andwf	___flmul@prod+3,f
  9421  0256  182E               	btfsc	___flmul@bexp,0
  9422  0257  17B1               	bsf	___flmul@prod+2,7
  9423  0258  362E               	lsrf	___flmul@bexp,w
  9424  0259  00F9               	movwf	??___flmul
  9425  025A  0879               	movf	??___flmul,w
  9426  025B  00B2               	movwf	___flmul@prod+3
  9427  025C                     i1l920:	
  9428  025C  0828               	movf	___flmul@sign,w
  9429  025D  00F9               	movwf	??___flmul
  9430  025E  0879               	movf	??___flmul,w
  9431  025F  04B2               	iorwf	___flmul@prod+3,f
  9432  0260  0832               	movf	___flmul@prod+3,w
  9433  0261  00A3               	movwf	?___flmul+3
  9434  0262  0831               	movf	___flmul@prod+2,w
  9435  0263  00A2               	movwf	?___flmul+2
  9436  0264  0830               	movf	___flmul@prod+1,w
  9437  0265  00A1               	movwf	?___flmul+1
  9438  0266  082F               	movf	___flmul@prod,w
  9439  0267  00A0               	movwf	?___flmul
  9440  0268  0008               	return
  9441  0269                     __end_of___flmul:	
  9442                           
  9443                           	psect	text42
  9444  0A2A                     __ptext42:	
  9445 ;; *************** function __Umul8_16 *****************
  9446 ;; Defined at:
  9447 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul8_16.c"
  9448 ;; Parameters:    Size  Location     Type
  9449 ;;  multiplier      1    wreg     unsigned char 
  9450 ;;  multiplicand    1    0[COMMON] unsigned char 
  9451 ;; Auto vars:     Size  Location     Type
  9452 ;;  multiplier      1    8[COMMON] unsigned char 
  9453 ;;  word_mpld       2    6[COMMON] unsigned int 
  9454 ;;  product         2    4[COMMON] unsigned int 
  9455 ;; Return value:  Size  Location     Type
  9456 ;;                  2    0[COMMON] unsigned int 
  9457 ;; Registers used:
  9458 ;;		wreg, status,2, status,0
  9459 ;; Tracked objects:
  9460 ;;		On entry : 0/0
  9461 ;;		On exit  : 0/0
  9462 ;;		Unchanged: 0/0
  9463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9464 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9465 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9466 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9467 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9468 ;;Total ram usage:        9 bytes
  9469 ;; Hardware stack levels used:    1
  9470 ;; This function calls:
  9471 ;;		Nothing
  9472 ;; This function is called by:
  9473 ;;		___flmul
  9474 ;; This function uses a non-reentrant model
  9475 ;;
  9476                           
  9477                           
  9478                           ;psect for function __Umul8_16
  9479  0A2A                     __Umul8_16:	
  9480                           
  9481                           ;incstack = 0
  9482                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  9483                           ;__Umul8_16@multiplier stored from wreg
  9484  0A2A  00F8               	movwf	__Umul8_16@multiplier
  9485  0A2B  01F4               	clrf	__Umul8_16@product
  9486  0A2C  01F5               	clrf	__Umul8_16@product+1
  9487  0A2D  0870               	movf	__Umul8_16@multiplicand,w
  9488  0A2E  00F2               	movwf	??__Umul8_16
  9489  0A2F  01F3               	clrf	??__Umul8_16+1
  9490  0A30  0872               	movf	??__Umul8_16,w
  9491  0A31  00F6               	movwf	__Umul8_16@word_mpld
  9492  0A32  0873               	movf	??__Umul8_16+1,w
  9493  0A33  00F7               	movwf	__Umul8_16@word_mpld+1
  9494  0A34                     i1l2380:	
  9495  0A34  1C78               	btfss	__Umul8_16@multiplier,0
  9496  0A35  2A3A               	goto	i1l1014
  9497  0A36  0876               	movf	__Umul8_16@word_mpld,w
  9498  0A37  07F4               	addwf	__Umul8_16@product,f
  9499  0A38  0877               	movf	__Umul8_16@word_mpld+1,w
  9500  0A39  3DF5               	addwfc	__Umul8_16@product+1,f
  9501  0A3A                     i1l1014:	
  9502  0A3A  3001               	movlw	1
  9503  0A3B                     u241_25:	
  9504  0A3B  35F6               	lslf	__Umul8_16@word_mpld,f
  9505  0A3C  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  9506  0A3D  0B89               	decfsz	9,f
  9507  0A3E  2A3B               	goto	u241_25
  9508  0A3F  1003               	clrc
  9509  0A40  0CF8               	rrf	__Umul8_16@multiplier,f
  9510  0A41  0878               	movf	__Umul8_16@multiplier,w
  9511  0A42  1D03               	btfss	3,2
  9512  0A43  2A34               	goto	i1l2380
  9513  0A44  0875               	movf	__Umul8_16@product+1,w
  9514  0A45  00F1               	movwf	?__Umul8_16+1
  9515  0A46  0874               	movf	__Umul8_16@product,w
  9516  0A47  00F0               	movwf	?__Umul8_16
  9517  0A48  0008               	return
  9518  0A49                     __end_of__Umul8_16:	
  9519                           
  9520                           	psect	text43
  9521  0269                     __ptext43:	
  9522 ;; *************** function ___fladd *****************
  9523 ;; Defined at:
  9524 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  9525 ;; Parameters:    Size  Location     Type
  9526 ;;  b               4    0[COMMON] unsigned int 
  9527 ;;  a               4    4[COMMON] unsigned int 
  9528 ;; Auto vars:     Size  Location     Type
  9529 ;;  grs             1   11[COMMON] unsigned char 
  9530 ;;  bexp            1   10[COMMON] unsigned char 
  9531 ;;  aexp            1    9[COMMON] unsigned char 
  9532 ;;  signs           1    8[COMMON] unsigned char 
  9533 ;; Return value:  Size  Location     Type
  9534 ;;                  4    0[COMMON] unsigned char 
  9535 ;; Registers used:
  9536 ;;		wreg, status,2, status,0
  9537 ;; Tracked objects:
  9538 ;;		On entry : 0/0
  9539 ;;		On exit  : 0/0
  9540 ;;		Unchanged: 0/0
  9541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9542 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9543 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9544 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9545 ;;      Totals:        12       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9546 ;;Total ram usage:       20 bytes
  9547 ;; Hardware stack levels used:    1
  9548 ;; This function calls:
  9549 ;;		Nothing
  9550 ;; This function is called by:
  9551 ;;		_speedCalc
  9552 ;; This function uses a non-reentrant model
  9553 ;;
  9554                           
  9555                           
  9556                           ;psect for function ___fladd
  9557  0269                     ___fladd:	
  9558                           
  9559                           ;incstack = 0
  9560                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  9561  0269  0873               	movf	___fladd@b+3,w
  9562  026A  3980               	andlw	128
  9563  026B  0020               	movlb	0	; select bank0
  9564  026C  00A0               	movwf	??___fladd
  9565  026D  0820               	movf	??___fladd,w
  9566  026E  00F8               	movwf	___fladd@signs
  9567  026F  3573               	lslf	___fladd@b+3,w
  9568  0270  00A0               	movwf	??___fladd
  9569  0271  0820               	movf	??___fladd,w
  9570  0272  00FA               	movwf	___fladd@bexp
  9571  0273  1BF2               	btfsc	___fladd@b+2,7
  9572  0274  147A               	bsf	___fladd@bexp,0
  9573  0275  087A               	movf	___fladd@bexp,w
  9574  0276  1903               	btfsc	3,2
  9575  0277  2A86               	goto	i1l2518
  9576  0278  0A7A               	incf	___fladd@bexp,w
  9577  0279  1D03               	btfss	3,2
  9578  027A  2A83               	goto	i1l2514
  9579  027B  3000               	movlw	0
  9580  027C  00F3               	movwf	___fladd@b+3
  9581  027D  3000               	movlw	0
  9582  027E  00F2               	movwf	___fladd@b+2
  9583  027F  3000               	movlw	0
  9584  0280  00F1               	movwf	___fladd@b+1
  9585  0281  3000               	movlw	0
  9586  0282  00F0               	movwf	___fladd@b
  9587  0283                     i1l2514:	
  9588  0283  17F2               	bsf	___fladd@b+2,7
  9589  0284  01F3               	clrf	___fladd@b+3
  9590  0285  2A8E               	goto	i1l2520
  9591  0286                     i1l2518:	
  9592  0286  3000               	movlw	0
  9593  0287  00F3               	movwf	___fladd@b+3
  9594  0288  3000               	movlw	0
  9595  0289  00F2               	movwf	___fladd@b+2
  9596  028A  3000               	movlw	0
  9597  028B  00F1               	movwf	___fladd@b+1
  9598  028C  3000               	movlw	0
  9599  028D  00F0               	movwf	___fladd@b
  9600  028E                     i1l2520:	
  9601  028E  0877               	movf	___fladd@a+3,w
  9602  028F  3980               	andlw	128
  9603  0290  00A0               	movwf	??___fladd
  9604  0291  0820               	movf	??___fladd,w
  9605  0292  00F9               	movwf	___fladd@aexp
  9606  0293  0879               	movf	___fladd@aexp,w
  9607  0294  0678               	xorwf	___fladd@signs,w
  9608  0295  1D03               	btfss	3,2
  9609  0296  1778               	bsf	___fladd@signs,6
  9610  0297  3577               	lslf	___fladd@a+3,w
  9611  0298  00A0               	movwf	??___fladd
  9612  0299  0820               	movf	??___fladd,w
  9613  029A  00F9               	movwf	___fladd@aexp
  9614  029B  1BF6               	btfsc	___fladd@a+2,7
  9615  029C  1479               	bsf	___fladd@aexp,0
  9616  029D  0879               	movf	___fladd@aexp,w
  9617  029E  1903               	btfsc	3,2
  9618  029F  2AAE               	goto	i1l2542
  9619  02A0  0A79               	incf	___fladd@aexp,w
  9620  02A1  1D03               	btfss	3,2
  9621  02A2  2AAB               	goto	i1l2538
  9622  02A3  3000               	movlw	0
  9623  02A4  00F7               	movwf	___fladd@a+3
  9624  02A5  3000               	movlw	0
  9625  02A6  00F6               	movwf	___fladd@a+2
  9626  02A7  3000               	movlw	0
  9627  02A8  00F5               	movwf	___fladd@a+1
  9628  02A9  3000               	movlw	0
  9629  02AA  00F4               	movwf	___fladd@a
  9630  02AB                     i1l2538:	
  9631  02AB  17F6               	bsf	___fladd@a+2,7
  9632  02AC  01F7               	clrf	___fladd@a+3
  9633  02AD  2AB6               	goto	i1l812
  9634  02AE                     i1l2542:	
  9635  02AE  3000               	movlw	0
  9636  02AF  00F7               	movwf	___fladd@a+3
  9637  02B0  3000               	movlw	0
  9638  02B1  00F6               	movwf	___fladd@a+2
  9639  02B2  3000               	movlw	0
  9640  02B3  00F5               	movwf	___fladd@a+1
  9641  02B4  3000               	movlw	0
  9642  02B5  00F4               	movwf	___fladd@a
  9643  02B6                     i1l812:	
  9644  02B6  087A               	movf	___fladd@bexp,w
  9645  02B7  0279               	subwf	___fladd@aexp,w
  9646  02B8  1803               	skipnc
  9647  02B9  2AFC               	goto	i1l2578
  9648  02BA  1F78               	btfss	___fladd@signs,6
  9649  02BB  2AC0               	goto	i1l2548
  9650  02BC  3080               	movlw	128
  9651  02BD  00A0               	movwf	??___fladd
  9652  02BE  0820               	movf	??___fladd,w
  9653  02BF  06F8               	xorwf	___fladd@signs,f
  9654  02C0                     i1l2548:	
  9655  02C0  087A               	movf	___fladd@bexp,w
  9656  02C1  00A0               	movwf	??___fladd
  9657  02C2  0820               	movf	??___fladd,w
  9658  02C3  00FB               	movwf	___fladd@grs
  9659  02C4  0879               	movf	___fladd@aexp,w
  9660  02C5  00A0               	movwf	??___fladd
  9661  02C6  0820               	movf	??___fladd,w
  9662  02C7  00FA               	movwf	___fladd@bexp
  9663  02C8  087B               	movf	___fladd@grs,w
  9664  02C9  00A0               	movwf	??___fladd
  9665  02CA  0820               	movf	??___fladd,w
  9666  02CB  00F9               	movwf	___fladd@aexp
  9667  02CC  0870               	movf	___fladd@b,w
  9668  02CD  00A0               	movwf	??___fladd
  9669  02CE  0820               	movf	??___fladd,w
  9670  02CF  00FB               	movwf	___fladd@grs
  9671  02D0  0874               	movf	___fladd@a,w
  9672  02D1  00A0               	movwf	??___fladd
  9673  02D2  0820               	movf	??___fladd,w
  9674  02D3  00F0               	movwf	___fladd@b
  9675  02D4  087B               	movf	___fladd@grs,w
  9676  02D5  00A0               	movwf	??___fladd
  9677  02D6  0820               	movf	??___fladd,w
  9678  02D7  00F4               	movwf	___fladd@a
  9679  02D8  0871               	movf	___fladd@b+1,w
  9680  02D9  00A0               	movwf	??___fladd
  9681  02DA  0820               	movf	??___fladd,w
  9682  02DB  00FB               	movwf	___fladd@grs
  9683  02DC  0875               	movf	___fladd@a+1,w
  9684  02DD  00A0               	movwf	??___fladd
  9685  02DE  0820               	movf	??___fladd,w
  9686  02DF  00F1               	movwf	___fladd@b+1
  9687  02E0  087B               	movf	___fladd@grs,w
  9688  02E1  00A0               	movwf	??___fladd
  9689  02E2  0820               	movf	??___fladd,w
  9690  02E3  00F5               	movwf	___fladd@a+1
  9691  02E4  0872               	movf	___fladd@b+2,w
  9692  02E5  00A0               	movwf	??___fladd
  9693  02E6  0820               	movf	??___fladd,w
  9694  02E7  00FB               	movwf	___fladd@grs
  9695  02E8  0876               	movf	___fladd@a+2,w
  9696  02E9  00A0               	movwf	??___fladd
  9697  02EA  0820               	movf	??___fladd,w
  9698  02EB  00F2               	movwf	___fladd@b+2
  9699  02EC  087B               	movf	___fladd@grs,w
  9700  02ED  00A0               	movwf	??___fladd
  9701  02EE  0820               	movf	??___fladd,w
  9702  02EF  00F6               	movwf	___fladd@a+2
  9703  02F0  0873               	movf	___fladd@b+3,w
  9704  02F1  00A0               	movwf	??___fladd
  9705  02F2  0820               	movf	??___fladd,w
  9706  02F3  00FB               	movwf	___fladd@grs
  9707  02F4  0877               	movf	___fladd@a+3,w
  9708  02F5  00A0               	movwf	??___fladd
  9709  02F6  0820               	movf	??___fladd,w
  9710  02F7  00F3               	movwf	___fladd@b+3
  9711  02F8  087B               	movf	___fladd@grs,w
  9712  02F9  00A0               	movwf	??___fladd
  9713  02FA  0820               	movf	??___fladd,w
  9714  02FB  00F7               	movwf	___fladd@a+3
  9715  02FC                     i1l2578:	
  9716  02FC  01FB               	clrf	___fladd@grs
  9717  02FD  0879               	movf	___fladd@aexp,w
  9718  02FE  00A0               	movwf	??___fladd
  9719  02FF  01A1               	clrf	??___fladd+1
  9720  0300  0821               	movf	??___fladd+1,w
  9721  0301  00A3               	movwf	??___fladd+3
  9722  0302  087A               	movf	___fladd@bexp,w
  9723  0303  0220               	subwf	??___fladd,w
  9724  0304  00A2               	movwf	??___fladd+2
  9725  0305  1C03               	skipc
  9726  0306  03A3               	decf	??___fladd+3,f
  9727  0307  0823               	movf	??___fladd+3,w
  9728  0308  3A80               	xorlw	128
  9729  0309  00A4               	movwf	??___fladd+4
  9730  030A  3080               	movlw	128
  9731  030B  0224               	subwf	??___fladd+4,w
  9732  030C  1D03               	skipz
  9733  030D  2B10               	goto	u271_25
  9734  030E  301A               	movlw	26
  9735  030F  0222               	subwf	??___fladd+2,w
  9736  0310                     u271_25:	
  9737  0310  1C03               	skipc
  9738  0311  2B46               	goto	i1l2596
  9739  0312  0873               	movf	___fladd@b+3,w
  9740  0313  0472               	iorwf	___fladd@b+2,w
  9741  0314  0471               	iorwf	___fladd@b+1,w
  9742  0315  0470               	iorwf	___fladd@b,w
  9743  0316  1903               	btfsc	3,2
  9744  0317  2B1A               	goto	u272_20
  9745  0318  3001               	movlw	1
  9746  0319  2B1B               	goto	u273_20
  9747  031A                     u272_20:	
  9748  031A  3000               	movlw	0
  9749  031B                     u273_20:	
  9750  031B  0020               	movlb	0	; select bank0
  9751  031C  00A0               	movwf	??___fladd
  9752  031D  0820               	movf	??___fladd,w
  9753  031E  00FB               	movwf	___fladd@grs
  9754  031F  3000               	movlw	0
  9755  0320  00F3               	movwf	___fladd@b+3
  9756  0321  3000               	movlw	0
  9757  0322  00F2               	movwf	___fladd@b+2
  9758  0323  3000               	movlw	0
  9759  0324  00F1               	movwf	___fladd@b+1
  9760  0325  3000               	movlw	0
  9761  0326  00F0               	movwf	___fladd@b
  9762  0327  0879               	movf	___fladd@aexp,w
  9763  0328  00A0               	movwf	??___fladd
  9764  0329  0820               	movf	??___fladd,w
  9765  032A  00FA               	movwf	___fladd@bexp
  9766  032B  2B4A               	goto	i1l816
  9767  032C                     i1l818:	
  9768  032C  1C7B               	btfss	___fladd@grs,0
  9769  032D  2B35               	goto	i1l2586
  9770  032E  367B               	lsrf	___fladd@grs,w
  9771  032F  3801               	iorlw	1
  9772  0330  0020               	movlb	0	; select bank0
  9773  0331  00A0               	movwf	??___fladd
  9774  0332  0820               	movf	??___fladd,w
  9775  0333  00FB               	movwf	___fladd@grs
  9776  0334  2B37               	goto	i1l2588
  9777  0335                     i1l2586:	
  9778  0335  1003               	clrc
  9779  0336  0CFB               	rrf	___fladd@grs,f
  9780  0337                     i1l2588:	
  9781  0337  1870               	btfsc	___fladd@b,0
  9782  0338  17FB               	bsf	___fladd@grs,7
  9783  0339  3001               	movlw	1
  9784  033A  0020               	movlb	0	; select bank0
  9785  033B  00A0               	movwf	??___fladd
  9786  033C                     u276_25:	
  9787  033C  37F3               	asrf	___fladd@b+3,f
  9788  033D  0CF2               	rrf	___fladd@b+2,f
  9789  033E  0CF1               	rrf	___fladd@b+1,f
  9790  033F  0CF0               	rrf	___fladd@b,f
  9791  0340  0BA0               	decfsz	??___fladd& (0+127),f
  9792  0341  2B3C               	goto	u276_25
  9793  0342  3001               	movlw	1
  9794  0343  00A0               	movwf	??___fladd
  9795  0344  0820               	movf	??___fladd,w
  9796  0345  07FA               	addwf	___fladd@bexp,f
  9797  0346                     i1l2596:	
  9798  0346  0879               	movf	___fladd@aexp,w
  9799  0347  027A               	subwf	___fladd@bexp,w
  9800  0348  1C03               	skipc
  9801  0349  2B2C               	goto	i1l818
  9802  034A                     i1l816:	
  9803  034A  1B78               	btfsc	___fladd@signs,6
  9804  034B  2B7D               	goto	i1l2622
  9805  034C  087A               	movf	___fladd@bexp,w
  9806  034D  1D03               	btfss	3,2
  9807  034E  2B58               	goto	i1l2604
  9808  034F  3000               	movlw	0
  9809  0350  00F3               	movwf	?___fladd+3
  9810  0351  3000               	movlw	0
  9811  0352  00F2               	movwf	?___fladd+2
  9812  0353  3000               	movlw	0
  9813  0354  00F1               	movwf	?___fladd+1
  9814  0355  3000               	movlw	0
  9815  0356  00F0               	movwf	?___fladd
  9816  0357  0008               	return
  9817  0358                     i1l2604:	
  9818  0358  0874               	movf	___fladd@a,w
  9819  0359  07F0               	addwf	___fladd@b,f
  9820  035A  0875               	movf	___fladd@a+1,w
  9821  035B  3DF1               	addwfc	___fladd@b+1,f
  9822  035C  0876               	movf	___fladd@a+2,w
  9823  035D  3DF2               	addwfc	___fladd@b+2,f
  9824  035E  0877               	movf	___fladd@a+3,w
  9825  035F  3DF3               	addwfc	___fladd@b+3,f
  9826  0360  1C73               	btfss	___fladd@b+3,0
  9827  0361  2BF8               	goto	i1l2656
  9828  0362  1C7B               	btfss	___fladd@grs,0
  9829  0363  2B6B               	goto	i1l2612
  9830  0364  367B               	lsrf	___fladd@grs,w
  9831  0365  3801               	iorlw	1
  9832  0366  0020               	movlb	0	; select bank0
  9833  0367  00A0               	movwf	??___fladd
  9834  0368  0820               	movf	??___fladd,w
  9835  0369  00FB               	movwf	___fladd@grs
  9836  036A  2B6D               	goto	i1l2614
  9837  036B                     i1l2612:	
  9838  036B  1003               	clrc
  9839  036C  0CFB               	rrf	___fladd@grs,f
  9840  036D                     i1l2614:	
  9841  036D  1870               	btfsc	___fladd@b,0
  9842  036E  17FB               	bsf	___fladd@grs,7
  9843  036F  3001               	movlw	1
  9844  0370  0020               	movlb	0	; select bank0
  9845  0371  00A0               	movwf	??___fladd
  9846  0372                     u283_25:	
  9847  0372  37F3               	asrf	___fladd@b+3,f
  9848  0373  0CF2               	rrf	___fladd@b+2,f
  9849  0374  0CF1               	rrf	___fladd@b+1,f
  9850  0375  0CF0               	rrf	___fladd@b,f
  9851  0376  0BA0               	decfsz	??___fladd& (0+127),f
  9852  0377  2B72               	goto	u283_25
  9853  0378  3001               	movlw	1
  9854  0379  00A0               	movwf	??___fladd
  9855  037A  0820               	movf	??___fladd,w
  9856  037B  07FA               	addwf	___fladd@bexp,f
  9857  037C  2BF8               	goto	i1l2656
  9858  037D                     i1l2622:	
  9859  037D  0873               	movf	___fladd@b+3,w
  9860  037E  3A80               	xorlw	128
  9861  037F  0020               	movlb	0	; select bank0
  9862  0380  00A0               	movwf	??___fladd
  9863  0381  0877               	movf	___fladd@a+3,w
  9864  0382  3A80               	xorlw	128
  9865  0383  0220               	subwf	??___fladd,w
  9866  0384  1D03               	skipz
  9867  0385  2B90               	goto	u284_23
  9868  0386  0876               	movf	___fladd@a+2,w
  9869  0387  0272               	subwf	___fladd@b+2,w
  9870  0388  1D03               	skipz
  9871  0389  2B90               	goto	u284_23
  9872  038A  0875               	movf	___fladd@a+1,w
  9873  038B  0271               	subwf	___fladd@b+1,w
  9874  038C  1D03               	skipz
  9875  038D  2B90               	goto	u284_23
  9876  038E  0874               	movf	___fladd@a,w
  9877  038F  0270               	subwf	___fladd@b,w
  9878  0390                     u284_23:	
  9879  0390  1803               	skipnc
  9880  0391  2BC8               	goto	i1l2632
  9881  0392  30FF               	movlw	255
  9882  0393  00A0               	movwf	??___fladd
  9883  0394  30FF               	movlw	255
  9884  0395  00A1               	movwf	??___fladd+1
  9885  0396  30FF               	movlw	255
  9886  0397  00A2               	movwf	??___fladd+2
  9887  0398  30FF               	movlw	255
  9888  0399  00A3               	movwf	??___fladd+3
  9889  039A  0870               	movf	___fladd@b,w
  9890  039B  0274               	subwf	___fladd@a,w
  9891  039C  00A4               	movwf	??___fladd+4
  9892  039D  0871               	movf	___fladd@b+1,w
  9893  039E  3B75               	subwfb	___fladd@a+1,w
  9894  039F  00A5               	movwf	??___fladd+5
  9895  03A0  0872               	movf	___fladd@b+2,w
  9896  03A1  3B76               	subwfb	___fladd@a+2,w
  9897  03A2  00A6               	movwf	??___fladd+6
  9898  03A3  0873               	movf	___fladd@b+3,w
  9899  03A4  3B77               	subwfb	___fladd@a+3,w
  9900  03A5  00A7               	movwf	??___fladd+7
  9901  03A6  0824               	movf	??___fladd+4,w
  9902  03A7  07A0               	addwf	??___fladd,f
  9903  03A8  0825               	movf	??___fladd+5,w
  9904  03A9  3DA1               	addwfc	??___fladd+1,f
  9905  03AA  0826               	movf	??___fladd+6,w
  9906  03AB  3DA2               	addwfc	??___fladd+2,f
  9907  03AC  0827               	movf	??___fladd+7,w
  9908  03AD  3DA3               	addwfc	??___fladd+3,f
  9909  03AE  0823               	movf	??___fladd+3,w
  9910  03AF  00F3               	movwf	___fladd@b+3
  9911  03B0  0822               	movf	??___fladd+2,w
  9912  03B1  00F2               	movwf	___fladd@b+2
  9913  03B2  0821               	movf	??___fladd+1,w
  9914  03B3  00F1               	movwf	___fladd@b+1
  9915  03B4  0820               	movf	??___fladd,w
  9916  03B5  00F0               	movwf	___fladd@b
  9917  03B6  3080               	movlw	128
  9918  03B7  00A0               	movwf	??___fladd
  9919  03B8  0820               	movf	??___fladd,w
  9920  03B9  06F8               	xorwf	___fladd@signs,f
  9921  03BA  09FB               	comf	___fladd@grs,f
  9922  03BB  0AFB               	incf	___fladd@grs,f
  9923  03BC  087B               	movf	___fladd@grs,w
  9924  03BD  1D03               	btfss	3,2
  9925  03BE  2BD0               	goto	i1l833
  9926  03BF  3001               	movlw	1
  9927  03C0  07F0               	addwf	___fladd@b,f
  9928  03C1  3000               	movlw	0
  9929  03C2  3DF1               	addwfc	___fladd@b+1,f
  9930  03C3  3000               	movlw	0
  9931  03C4  3DF2               	addwfc	___fladd@b+2,f
  9932  03C5  3000               	movlw	0
  9933  03C6  3DF3               	addwfc	___fladd@b+3,f
  9934  03C7  2BD0               	goto	i1l833
  9935  03C8                     i1l2632:	
  9936  03C8  0874               	movf	___fladd@a,w
  9937  03C9  02F0               	subwf	___fladd@b,f
  9938  03CA  0875               	movf	___fladd@a+1,w
  9939  03CB  3BF1               	subwfb	___fladd@b+1,f
  9940  03CC  0876               	movf	___fladd@a+2,w
  9941  03CD  3BF2               	subwfb	___fladd@b+2,f
  9942  03CE  0877               	movf	___fladd@a+3,w
  9943  03CF  3BF3               	subwfb	___fladd@b+3,f
  9944  03D0                     i1l833:	
  9945  03D0  0873               	movf	___fladd@b+3,w
  9946  03D1  0472               	iorwf	___fladd@b+2,w
  9947  03D2  0471               	iorwf	___fladd@b+1,w
  9948  03D3  0470               	iorwf	___fladd@b,w
  9949  03D4  1D03               	skipz
  9950  03D5  2BF6               	goto	i1l2654
  9951  03D6  087B               	movf	___fladd@grs,w
  9952  03D7  1D03               	btfss	3,2
  9953  03D8  2BF6               	goto	i1l2654
  9954  03D9  3000               	movlw	0
  9955  03DA  00F3               	movwf	?___fladd+3
  9956  03DB  3000               	movlw	0
  9957  03DC  00F2               	movwf	?___fladd+2
  9958  03DD  3000               	movlw	0
  9959  03DE  00F1               	movwf	?___fladd+1
  9960  03DF  3000               	movlw	0
  9961  03E0  00F0               	movwf	?___fladd
  9962  03E1  0008               	return
  9963  03E2                     i1l2640:	
  9964  03E2  3001               	movlw	1
  9965  03E3                     u288_25:	
  9966  03E3  35F0               	lslf	___fladd@b,f
  9967  03E4  0DF1               	rlf	___fladd@b+1,f
  9968  03E5  0DF2               	rlf	___fladd@b+2,f
  9969  03E6  0DF3               	rlf	___fladd@b+3,f
  9970  03E7  0B89               	decfsz	9,f
  9971  03E8  2BE3               	goto	u288_25
  9972  03E9  1BFB               	btfsc	___fladd@grs,7
  9973  03EA  1470               	bsf	___fladd@b,0
  9974  03EB  1C7B               	btfss	___fladd@grs,0
  9975  03EC  2BEF               	goto	i1l2648
  9976  03ED  1403               	setc
  9977  03EE  2BF0               	goto	L2
  9978  03EF                     i1l2648:	
  9979  03EF  1003               	clrc
  9980  03F0                     L2:	
  9981  03F0  0DFB               	rlf	___fladd@grs,f
  9982  03F1  087A               	movf	___fladd@bexp,w
  9983  03F2  1903               	btfsc	3,2
  9984  03F3  2BF6               	goto	i1l2654
  9985  03F4  3001               	movlw	1
  9986  03F5  02FA               	subwf	___fladd@bexp,f
  9987  03F6                     i1l2654:	
  9988  03F6  1FF2               	btfss	___fladd@b+2,7
  9989  03F7  2BE2               	goto	i1l2640
  9990  03F8                     i1l2656:	
  9991  03F8  01F9               	clrf	___fladd@aexp
  9992  03F9  1FFB               	btfss	___fladd@grs,7
  9993  03FA  2C03               	goto	i1l2666
  9994  03FB  087B               	movf	___fladd@grs,w
  9995  03FC  397F               	andlw	127
  9996  03FD  1903               	btfsc	3,2
  9997  03FE  1870               	btfsc	___fladd@b,0
  9998  03FF  2C01               	goto	i1l2662
  9999  0400  2C03               	goto	i1l2666
 10000  0401                     i1l2662:	
 10001  0401  01F9               	clrf	___fladd@aexp
 10002  0402  0AF9               	incf	___fladd@aexp,f
 10003  0403                     i1l2666:	
 10004  0403  0879               	movf	___fladd@aexp,w
 10005  0404  1903               	btfsc	3,2
 10006  0405  2C30               	goto	i1l846
 10007  0406  3001               	movlw	1
 10008  0407  07F0               	addwf	___fladd@b,f
 10009  0408  3000               	movlw	0
 10010  0409  3DF1               	addwfc	___fladd@b+1,f
 10011  040A  3000               	movlw	0
 10012  040B  3DF2               	addwfc	___fladd@b+2,f
 10013  040C  3000               	movlw	0
 10014  040D  3DF3               	addwfc	___fladd@b+3,f
 10015  040E  1C73               	btfss	___fladd@b+3,0
 10016  040F  2C30               	goto	i1l846
 10017  0410  0870               	movf	___fladd@b,w
 10018  0411  0020               	movlb	0	; select bank0
 10019  0412  00A0               	movwf	??___fladd
 10020  0413  0871               	movf	___fladd@b+1,w
 10021  0414  00A1               	movwf	??___fladd+1
 10022  0415  0872               	movf	___fladd@b+2,w
 10023  0416  00A2               	movwf	??___fladd+2
 10024  0417  0873               	movf	___fladd@b+3,w
 10025  0418  00A3               	movwf	??___fladd+3
 10026  0419  3001               	movlw	1
 10027  041A  00A4               	movwf	??___fladd+4
 10028  041B                     u298_25:	
 10029  041B  37A3               	asrf	??___fladd+3,f
 10030  041C  0CA2               	rrf	??___fladd+2,f
 10031  041D  0CA1               	rrf	??___fladd+1,f
 10032  041E  0CA0               	rrf	??___fladd,f
 10033  041F  0BA4               	decfsz	??___fladd+4,f
 10034  0420  2C1B               	goto	u298_25
 10035  0421  0823               	movf	??___fladd+3,w
 10036  0422  00F3               	movwf	___fladd@b+3
 10037  0423  0822               	movf	??___fladd+2,w
 10038  0424  00F2               	movwf	___fladd@b+2
 10039  0425  0821               	movf	??___fladd+1,w
 10040  0426  00F1               	movwf	___fladd@b+1
 10041  0427  0820               	movf	??___fladd,w
 10042  0428  00F0               	movwf	___fladd@b
 10043  0429  0A7A               	incf	___fladd@bexp,w
 10044  042A  1903               	btfsc	3,2
 10045  042B  2C30               	goto	i1l846
 10046  042C  3001               	movlw	1
 10047  042D  00A0               	movwf	??___fladd
 10048  042E  0820               	movf	??___fladd,w
 10049  042F  07FA               	addwf	___fladd@bexp,f
 10050  0430                     i1l846:	
 10051  0430  0A7A               	incf	___fladd@bexp,w
 10052  0431  1D03               	btfss	3,2
 10053  0432  087A               	movf	___fladd@bexp,w
 10054  0433  1D03               	btfss	3,2
 10055  0434  2C40               	goto	i1l2684
 10056  0435  3000               	movlw	0
 10057  0436  00F3               	movwf	___fladd@b+3
 10058  0437  3000               	movlw	0
 10059  0438  00F2               	movwf	___fladd@b+2
 10060  0439  3000               	movlw	0
 10061  043A  00F1               	movwf	___fladd@b+1
 10062  043B  3000               	movlw	0
 10063  043C  00F0               	movwf	___fladd@b
 10064  043D  087A               	movf	___fladd@bexp,w
 10065  043E  1903               	btfsc	3,2
 10066  043F  01F8               	clrf	___fladd@signs
 10067  0440                     i1l2684:	
 10068  0440  1C7A               	btfss	___fladd@bexp,0
 10069  0441  2C44               	goto	i1l2688
 10070  0442  17F2               	bsf	___fladd@b+2,7
 10071  0443  2C49               	goto	i1l854
 10072  0444                     i1l2688:	
 10073  0444  307F               	movlw	127
 10074  0445  0020               	movlb	0	; select bank0
 10075  0446  00A0               	movwf	??___fladd
 10076  0447  0820               	movf	??___fladd,w
 10077  0448  05F2               	andwf	___fladd@b+2,f
 10078  0449                     i1l854:	
 10079  0449  367A               	lsrf	___fladd@bexp,w
 10080  044A  0020               	movlb	0	; select bank0
 10081  044B  00A0               	movwf	??___fladd
 10082  044C  0820               	movf	??___fladd,w
 10083  044D  00F3               	movwf	___fladd@b+3
 10084  044E  1FF8               	btfss	___fladd@signs,7
 10085  044F  0008               	return
 10086  0450  17F3               	bsf	___fladd@b+3,7
 10087  0451  0008               	return
 10088  0452                     __end_of___fladd:	
 10089                           
 10090                           	psect	text44
 10091  0C34                     __ptext44:	
 10092 ;; *************** function ___aldiv *****************
 10093 ;; Defined at:
 10094 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aldiv.c"
 10095 ;; Parameters:    Size  Location     Type
 10096 ;;  divisor         4    0[COMMON] long 
 10097 ;;  dividend        4    4[COMMON] long 
 10098 ;; Auto vars:     Size  Location     Type
 10099 ;;  quotient        4    2[BANK0 ] long 
 10100 ;;  sign            1    1[BANK0 ] unsigned char 
 10101 ;;  counter         1    0[BANK0 ] unsigned char 
 10102 ;; Return value:  Size  Location     Type
 10103 ;;                  4    0[COMMON] long 
 10104 ;; Registers used:
 10105 ;;		wreg, status,2, status,0
 10106 ;; Tracked objects:
 10107 ;;		On entry : 0/0
 10108 ;;		On exit  : 0/0
 10109 ;;		Unchanged: 0/0
 10110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10111 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10112 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10113 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10114 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10115 ;;Total ram usage:       15 bytes
 10116 ;; Hardware stack levels used:    1
 10117 ;; This function calls:
 10118 ;;		Nothing
 10119 ;; This function is called by:
 10120 ;;		_speedCalc
 10121 ;; This function uses a non-reentrant model
 10122 ;;
 10123                           
 10124                           
 10125                           ;psect for function ___aldiv
 10126  0C34                     ___aldiv:	
 10127                           
 10128                           ;incstack = 0
 10129                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 10130  0C34  0020               	movlb	0	; select bank0
 10131  0C35  01A1               	clrf	___aldiv@sign
 10132  0C36  1FF3               	btfss	___aldiv@divisor+3,7
 10133  0C37  2C45               	goto	i1l576
 10134  0C38  09F0               	comf	___aldiv@divisor,f
 10135  0C39  09F1               	comf	___aldiv@divisor+1,f
 10136  0C3A  09F2               	comf	___aldiv@divisor+2,f
 10137  0C3B  09F3               	comf	___aldiv@divisor+3,f
 10138  0C3C  0AF0               	incf	___aldiv@divisor,f
 10139  0C3D  1903               	skipnz
 10140  0C3E  0AF1               	incf	___aldiv@divisor+1,f
 10141  0C3F  1903               	skipnz
 10142  0C40  0AF2               	incf	___aldiv@divisor+2,f
 10143  0C41  1903               	skipnz
 10144  0C42  0AF3               	incf	___aldiv@divisor+3,f
 10145  0C43  01A1               	clrf	___aldiv@sign
 10146  0C44  0AA1               	incf	___aldiv@sign,f
 10147  0C45                     i1l576:	
 10148  0C45  1FF7               	btfss	___aldiv@dividend+3,7
 10149  0C46  2C56               	goto	i1l2470
 10150  0C47  09F4               	comf	___aldiv@dividend,f
 10151  0C48  09F5               	comf	___aldiv@dividend+1,f
 10152  0C49  09F6               	comf	___aldiv@dividend+2,f
 10153  0C4A  09F7               	comf	___aldiv@dividend+3,f
 10154  0C4B  0AF4               	incf	___aldiv@dividend,f
 10155  0C4C  1903               	skipnz
 10156  0C4D  0AF5               	incf	___aldiv@dividend+1,f
 10157  0C4E  1903               	skipnz
 10158  0C4F  0AF6               	incf	___aldiv@dividend+2,f
 10159  0C50  1903               	skipnz
 10160  0C51  0AF7               	incf	___aldiv@dividend+3,f
 10161  0C52  3001               	movlw	1
 10162  0C53  00F8               	movwf	??___aldiv
 10163  0C54  0878               	movf	??___aldiv,w
 10164  0C55  06A1               	xorwf	___aldiv@sign,f
 10165  0C56                     i1l2470:	
 10166  0C56  3000               	movlw	0
 10167  0C57  00A5               	movwf	___aldiv@quotient+3
 10168  0C58  3000               	movlw	0
 10169  0C59  00A4               	movwf	___aldiv@quotient+2
 10170  0C5A  3000               	movlw	0
 10171  0C5B  00A3               	movwf	___aldiv@quotient+1
 10172  0C5C  3000               	movlw	0
 10173  0C5D  00A2               	movwf	___aldiv@quotient
 10174  0C5E  0873               	movf	___aldiv@divisor+3,w
 10175  0C5F  0472               	iorwf	___aldiv@divisor+2,w
 10176  0C60  0471               	iorwf	___aldiv@divisor+1,w
 10177  0C61  0470               	iorwf	___aldiv@divisor,w
 10178  0C62  1903               	skipnz
 10179  0C63  2C9F               	goto	i1l2492
 10180  0C64  01A0               	clrf	___aldiv@counter
 10181  0C65  0AA0               	incf	___aldiv@counter,f
 10182  0C66                     i1l2478:	
 10183  0C66  1BF3               	btfsc	___aldiv@divisor+3,7
 10184  0C67  2C74               	goto	i1l2480
 10185  0C68  3001               	movlw	1
 10186  0C69                     u255_25:	
 10187  0C69  35F0               	lslf	___aldiv@divisor,f
 10188  0C6A  0DF1               	rlf	___aldiv@divisor+1,f
 10189  0C6B  0DF2               	rlf	___aldiv@divisor+2,f
 10190  0C6C  0DF3               	rlf	___aldiv@divisor+3,f
 10191  0C6D  0B89               	decfsz	9,f
 10192  0C6E  2C69               	goto	u255_25
 10193  0C6F  3001               	movlw	1
 10194  0C70  00F8               	movwf	??___aldiv
 10195  0C71  0878               	movf	??___aldiv,w
 10196  0C72  07A0               	addwf	___aldiv@counter,f
 10197  0C73  2C66               	goto	i1l2478
 10198  0C74                     i1l2480:	
 10199  0C74  3001               	movlw	1
 10200  0C75                     u257_25:	
 10201  0C75  35A2               	lslf	___aldiv@quotient,f
 10202  0C76  0DA3               	rlf	___aldiv@quotient+1,f
 10203  0C77  0DA4               	rlf	___aldiv@quotient+2,f
 10204  0C78  0DA5               	rlf	___aldiv@quotient+3,f
 10205  0C79  0B89               	decfsz	9,f
 10206  0C7A  2C75               	goto	u257_25
 10207  0C7B  0873               	movf	___aldiv@divisor+3,w
 10208  0C7C  0277               	subwf	___aldiv@dividend+3,w
 10209  0C7D  1D03               	skipz
 10210  0C7E  2C89               	goto	u258_25
 10211  0C7F  0872               	movf	___aldiv@divisor+2,w
 10212  0C80  0276               	subwf	___aldiv@dividend+2,w
 10213  0C81  1D03               	skipz
 10214  0C82  2C89               	goto	u258_25
 10215  0C83  0871               	movf	___aldiv@divisor+1,w
 10216  0C84  0275               	subwf	___aldiv@dividend+1,w
 10217  0C85  1D03               	skipz
 10218  0C86  2C89               	goto	u258_25
 10219  0C87  0870               	movf	___aldiv@divisor,w
 10220  0C88  0274               	subwf	___aldiv@dividend,w
 10221  0C89                     u258_25:	
 10222  0C89  1C03               	skipc
 10223  0C8A  2C94               	goto	i1l2488
 10224  0C8B  0870               	movf	___aldiv@divisor,w
 10225  0C8C  02F4               	subwf	___aldiv@dividend,f
 10226  0C8D  0871               	movf	___aldiv@divisor+1,w
 10227  0C8E  3BF5               	subwfb	___aldiv@dividend+1,f
 10228  0C8F  0872               	movf	___aldiv@divisor+2,w
 10229  0C90  3BF6               	subwfb	___aldiv@dividend+2,f
 10230  0C91  0873               	movf	___aldiv@divisor+3,w
 10231  0C92  3BF7               	subwfb	___aldiv@dividend+3,f
 10232  0C93  1422               	bsf	___aldiv@quotient,0
 10233  0C94                     i1l2488:	
 10234  0C94  3001               	movlw	1
 10235  0C95                     u259_25:	
 10236  0C95  36F3               	lsrf	___aldiv@divisor+3,f
 10237  0C96  0CF2               	rrf	___aldiv@divisor+2,f
 10238  0C97  0CF1               	rrf	___aldiv@divisor+1,f
 10239  0C98  0CF0               	rrf	___aldiv@divisor,f
 10240  0C99  0B89               	decfsz	9,f
 10241  0C9A  2C95               	goto	u259_25
 10242  0C9B  3001               	movlw	1
 10243  0C9C  02A0               	subwf	___aldiv@counter,f
 10244  0C9D  1D03               	btfss	3,2
 10245  0C9E  2C74               	goto	i1l2480
 10246  0C9F                     i1l2492:	
 10247  0C9F  0821               	movf	___aldiv@sign,w
 10248  0CA0  1903               	btfsc	3,2
 10249  0CA1  2CAD               	goto	i1l2496
 10250  0CA2  09A2               	comf	___aldiv@quotient,f
 10251  0CA3  09A3               	comf	___aldiv@quotient+1,f
 10252  0CA4  09A4               	comf	___aldiv@quotient+2,f
 10253  0CA5  09A5               	comf	___aldiv@quotient+3,f
 10254  0CA6  0AA2               	incf	___aldiv@quotient,f
 10255  0CA7  1903               	skipnz
 10256  0CA8  0AA3               	incf	___aldiv@quotient+1,f
 10257  0CA9  1903               	skipnz
 10258  0CAA  0AA4               	incf	___aldiv@quotient+2,f
 10259  0CAB  1903               	skipnz
 10260  0CAC  0AA5               	incf	___aldiv@quotient+3,f
 10261  0CAD                     i1l2496:	
 10262  0CAD  0825               	movf	___aldiv@quotient+3,w
 10263  0CAE  00F3               	movwf	?___aldiv+3
 10264  0CAF  0824               	movf	___aldiv@quotient+2,w
 10265  0CB0  00F2               	movwf	?___aldiv+2
 10266  0CB1  0823               	movf	___aldiv@quotient+1,w
 10267  0CB2  00F1               	movwf	?___aldiv+1
 10268  0CB3  0822               	movf	___aldiv@quotient,w
 10269  0CB4  00F0               	movwf	?___aldiv
 10270  0CB5  0008               	return
 10271  0CB6                     __end_of___aldiv:	
 10272  007E                     btemp	set	126	;btemp
 10273  007E                     int$flags	set	126
 10274  007E                     wtemp0	set	126


Data Sizes:
    Strings     17
    Constant    0
    Data        32
    BSS         57
    Persistent  43
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     32      60
    BANK1            80     80      80
    BANK2            80     26      66
    BANK3            80      0      32
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    puts@s	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_6(CODE[3]), hrDisp(BANK2[13]), distanceDisp(BANK2[11]), speedDisp(BANK2[8]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_5(CODE[2]), STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[5]), 
		 -> STR_1(CODE[7]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK2[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK3[32]), STR_6(CODE[3]), hrDisp(BANK2[13]), distanceDisp(BANK2[11]), 
		 -> speedDisp(BANK2[8]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S1003_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK2[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_5(CODE[2]), STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[5]), 
		 -> STR_1(CODE[7]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 7
		 -> STR_5(CODE[2]), STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[5]), 
		 -> STR_1(CODE[7]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 4
		 -> ?_printf(BANK2[2]), rpm(BANK0[4]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK2[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK2[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    writeString@string	PTR unsigned char  size(1) Largest target is 13
		 -> hrDisp(BANK2[13]), distanceDisp(BANK2[11]), speedDisp(BANK2[8]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timerISR(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timerISR(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    IOCCF7_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> speedCalc(), IOCCF7_DefaultInterruptHandler(), 

    IOCCF7_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> speedCalc(), Absolute function(), IOCCF7_DefaultInterruptHandler(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _speedCalc->___flmul
    ___xxtofl->___lmul
    ___lmul->___aldiv
    ___flmul->__Umul8_16

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _IOCCF7_ISR->_speedCalc
    _speedCalc->___xxtofl
    ___xxtofl->___lmul
    ___lmul->___aldiv

Critical Paths under _main in BANK1

    _main->_printf
    _writeString->_puts
    _resetCursor->_puts
    _puts->_fputs
    _clearLine->_printf
    _setCursor->_EUSART_Write
    _setCursor->_EUSART_is_tx_ready
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _abs->___aomod
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCCF7_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_clearLine
    _clearLine->_printf
    _printf->_vfprintf

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   30386
                                             21 BANK2      5     5      0
         _IOCCF7_SetInterruptHandler
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                            ___fltol
                          _clearLine
                             _printf
                        _resetCursor
                          _setCursor
                        _writeString
 ---------------------------------------------------------------------------------
 (1) _writeString                                          1     1      0    3558
                                             24 BANK1      1     1      0
                 _EUSART_is_tx_ready
                               _puts
 ---------------------------------------------------------------------------------
 (1) _resetCursor                                          0     0      0    3382
                               _puts
 ---------------------------------------------------------------------------------
 (2) _puts                                                 5     3      2    3382
                                             19 BANK1      5     3      2
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (1) _clearLine                                            9     7      2   11084
                                             12 BANK2      9     7      2
                             _printf
                          _setCursor
 ---------------------------------------------------------------------------------
 (1) _setCursor                                            4     3      1    1033
                                              1 BANK1      4     3      1
                       _EUSART_Write
                 _EUSART_is_tx_ready
 ---------------------------------------------------------------------------------
 (2) _EUSART_is_tx_ready                                   1     1      0      37
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4    9509
                                             79 BANK1      1     1      0
                                              5 BANK2      7     3      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    8745
                                             76 BANK1      3     0      3
                                              0 BANK2      5     5      0
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    8149
                                             58 BANK1     18    16      2
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    6109
                                             28 BANK1     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    3878
                                             19 BANK1      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     166
                                              0 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 (3) _fputs                                                9     6      3    1914
                                             10 BANK1      9     6      3
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3    1210
                                              2 BANK1      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      62
                                              1 BANK1      1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             19 BANK1      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     613
                                              0 BANK1     19     3     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     625
                                              0 BANK1     27    11     16
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             11     7      4     517
                                              0 BANK1     11     7      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     785
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0     211
                                              2 BANK1      1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     211
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     211
         _IOCCF7_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCCF7_SetInterruptHandler                           2     0      2     211
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     363
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          0     0      0    5948
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (12) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                           _timerISR *
 ---------------------------------------------------------------------------------
 (13) _timerISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _PIN_MANAGER_IOC                                     0     0      0    5948
                         _IOCCF7_ISR
 ---------------------------------------------------------------------------------
 (13) _IOCCF7_ISR                                          0     0      0    5948
                   Absolute function *
     _IOCCF7_DefaultInterruptHandler *
                          _speedCalc *
 ---------------------------------------------------------------------------------
 (14) _speedCalc                                           4     4      0    5948
                                             28 BANK0      4     4      0
                            ___aldiv
                            ___fladd
                            ___flmul
                             ___lmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (15) ___xxtofl                                           14    10      4     398
                                             14 BANK0     14    10      4
                            ___aldiv (ARG)
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (15) ___lmul                                             12     4      8     244
                                              9 COMMON     4     4      0
                                              6 BANK0      8     0      8
                            ___aldiv (ARG)
 ---------------------------------------------------------------------------------
 (15) ___flmul                                            26    18      8    2569
                                              9 COMMON     5     5      0
                                              0 BANK0     21    13      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (16) __Umul8_16                                           9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (15) ___fladd                                            20    12      8    2262
                                              0 COMMON    12     4      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (15) ___aldiv                                            15     7      8     452
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (14) _IOCCF7_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _IOCCF7_SetInterruptHandler
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCCF7_SetInterruptHandler
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _TMR0_SetInterruptHandler
   ___fltol
   _clearLine
     _printf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART_Write
               _strlen
           _fputc
             _putch
               _EUSART_Write
     _setCursor
       _EUSART_Write
       _EUSART_is_tx_ready
   _printf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART_Write
             _fputs
               _fputc
                 _putch
                   _EUSART_Write
             _strlen
         _fputc
           _putch
             _EUSART_Write
   _resetCursor
     _puts
       _fputc
         _putch
           _EUSART_Write
       _fputs
         _fputc
           _putch
             _EUSART_Write
   _setCursor
     _EUSART_Write
     _EUSART_is_tx_ready
   _writeString
     _EUSART_is_tx_ready
     _puts
       _fputc
         _putch
           _EUSART_Write
       _fputs
         _fputc
           _putch
             _EUSART_Write

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
     _IOCCF7_ISR
       Absolute function(Fake) *
       _IOCCF7_DefaultInterruptHandler *
       _speedCalc *
         ___aldiv
         ___fladd
         ___flmul
           __Umul8_16
         ___lmul
           ___aldiv (ARG)
         ___xxtofl
           ___aldiv (ARG)
           ___lmul (ARG)
             ___aldiv (ARG)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _timerISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     20      3C       5       75.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     50      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     1A      42       9       82.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      20      11       40.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      FC      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      FC      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Mar 25 12:32:04 2019

                                  __CFG_CP$OFF 0000                                             l69 095E  
                              clearLine@lineNo 014C                                _timer0ReloadVal 005B  
                          __Umul8_16@word_mpld 0076                                            l318 0D3A  
                                          l370 0B8D                                            l611 0796  
                                          l461 07C3                                            l470 049F  
                                          l712 0C18                                            l624 0FEE  
                                          l464 07E3                                            l474 04BA  
                                          l475 04CE                                            l469 0498  
                                          l478 0564                                            _abs 09DD  
                                          _pad 07A8                                            _rpm 004D  
               ?_EUSART_SetFramingErrorHandler 00A0                                   __CFG_BORV$LO 0000  
                                          wreg 0009                                   __CFG_IESO$ON 0000  
                                 ___flmul@aexp 002D                                   ___flmul@bexp 002E  
       __end_of_IOCCF7_DefaultInterruptHandler 0800        __size_of_IOCCF7_DefaultInterruptHandler 0001  
               _IOCCF7_DefaultInterruptHandler 07FF                                   ___flmul@sign 0028  
                                 ___flmul@temp 0033                                   ___flmul@prod 002F  
                                 __CFG_LVP$OFF 0000                                   __CFG_ZCD$OFF 0000  
                                  main@distInt 0158                                   ___fltol@exp1 00AA  
                                         ?_abs 00B3                                           l4000 0CE8  
                                         l4020 0D26                                           l4014 0D0D  
                                         l4006 0D00                                           l3402 06DD  
                                         l4050 0EB0                                           l3420 0730  
                                         l3430 0775                                           l3406 0705  
                                         l3342 0BBC                                           l4134 0D2C  
                                         l3408 070A                                           l3440 0F4D  
                                         l3344 0BC5                                           l3504 0570  
                                         l4136 0B7F                                           l3418 0721  
                                         l3338 0B99                                           l3354 0A91  
                                         l3514 0583                                           l3428 0769  
                                         l3452 0F82                                           l3460 0FCD  
                                         l3444 0F75                                           l3356 0AB2  
                                         l3364 09FC                                           l3508 0578  
                                         l3454 0F91                                           l3366 0A08  
                                         l3374 07B9                                           l3518 0590  
                                         l3550 0655                                           l3542 0625  
                                         l3534 05E8                                           l3384 07C5  
                                         l3560 067C                                           l3458 0FC1  
                                         l3378 07C1                                           l3482 04C9  
                                         l3554 0659                                           l3570 068C  
                                         l3388 07F2                                           l3476 04B2  
                                         l3564 0682                                           l3724 09B2  
                                         l3814 0BD8                                           l3486 04FB  
                                         ?_pad 00B3                                           l3496 04D6  
                                         l3592 0998                                           l3834 0C06  
                                         l3818 0BE1                                           l3682 0B62  
                                         l3844 0C25                                           l3836 0C14  
                                         l3684 0B67                                           l3692 0B76  
                                         l3676 0B53                                           l3686 0B6C  
                                         l3688 0B71                                           l3964 0B27  
                                         l3966 0B48                                           l3992 0CDB  
                                         l3986 0CC3                                           l3978 0CB7  
                                         STR_1 1000                                           STR_2 1007  
                                         STR_3 100F                                           STR_4 100F  
                                         STR_5 100F                                           STR_6 100C  
                                         _LATA 010C                                           _LATB 010D  
                                         _LATC 010E                                           u4005 0756  
                                         u4105 0FAF                                           u4140 046E  
                                         u4150 046F                                           u4225 056E  
                                         u4245 04EA                                           u4255 04F6  
                                         u4505 0BEA                                           u4195 04AA  
                                         u4535 0C07                                           u4615 0CD9  
                                         u3905 07CF                                           u4625 0CFE  
                                         u4635 0D23                                           u4565 0C1C  
                                         u3925 09E7                                           u3855 0BBA  
                                         u4657 09C1                                           u3970 0712  
                                         u4667 0B5E                                           _TMR0 0015  
                                         _WPUA 020C                                           _WPUB 020D  
                                         _WPUC 020E                                   __CFG_WRT$OFF 0000  
                                __CFG_FCMEN$ON 0000                                           abs@a 00B3  
                                         _dbuf 01A0                                           _main 0E74  
                                         _dtoa 0452                                           _prec 0048  
                                         _nout 0044                                           pad@i 00B7  
                                         pad@p 00B4                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           pad@w 00B9  
                                         btemp 007E                                           _puts 0A0F  
                                __CFG_BOREN$ON 0000                                           start 0014  
                                __CFG_MCLRE$ON 0000                                          ??_abs 00B5  
                                        ??_pad 00B6                        __end_of_TMR0_Initialize 09DD  
               ??_TMR0_DefaultInterruptHandler 0070                                  ?_EUSART_Write 0070  
               __size_of_OSCILLATOR_Initialize 0007                  __end_of_OSCILLATOR_Initialize 091D  
                          __size_of_IOCCF7_ISR 000D                                  ___fltol@sign1 00A9  
                              __end_of___aldiv 0CB6                                __end_of___aodiv 07A8  
                              __end_of___fladd 0452                                          ?_main 0070  
                                        ?_dtoa 00BC                                __end_of___aomod 1000  
                                __CFG_WDTE$OFF 0000                                __end_of___flmul 0269  
                              __end_of___fltol 0C34                                          ?_puts 00B3  
                                        i1l240 0012                                          i1l236 000D  
                                        i1l812 02B6                                          i1l576 0C45  
                                        i1l816 034A                                          i1l920 025C  
                                        i1l833 03D0                                          i1l818 032C  
                                        i1l854 0449                                          i1l846 0430  
                                        i1l960 0DAD                                          i1l952 0D8F  
                                        i1l946 0D59                                          i1l959 0DA3  
                                 vfpfcnvrt@fmt 00DA                                          _TRISA 008C  
                                        _TRISB 008D                                          _TRISC 008E  
                                  _writeString 09B0              __size_of_TMR0_SetInterruptHandler 0009  
                          ___lmul@multiplicand 002A                      ?_TMR0_SetInterruptHandler 00A0  
                             __end_of_TMR0_ISR 098D                        __end_of_PIN_MANAGER_IOC 0904  
                                        _flags 004A                                          _fputc 0B8E  
                                        _fputs 0A8E                                          _speed 015E  
                                        pad@fp 00BB                                          _width 0046  
                                        _putch 0904                                          dtoa@d 00BC  
                                        dtoa@i 00D8                                          dtoa@n 00D0  
                                        dtoa@p 00CA                                          dtoa@s 00CE  
                                        dtoa@w 00CC                                   main@speedInt 0156  
                                        pclath 000A                                          puts@s 00B3  
                                        status 0003                                          wtemp0 007E  
                              __initialization 0016                                   __end_of_main 0F21  
                                 __end_of_dtoa 05A3                                   __end_of_puts 0A2A  
                               ??_EUSART_Write 00A0                                 __CFG_LPBOR$OFF 0000  
                  ?_INTERRUPT_InterruptManager 0070                                         ??_main 0155  
                                       ??_dtoa 00C4                                         ??_puts 00B5  
                               __CFG_PLLEN$OFF 0000              _EUSART_DefaultFramingErrorHandler 0000  
                   _EUSART_OverrunErrorHandler 0057                                         ?_fputc 00A2  
                                       ?_fputs 00AA                                         _ANSELA 018C  
                                       ?_putch 0070                                         _ANSELB 018D  
                                       _ANSELC 018E                   ??_IOCCF7_SetInterruptHandler 00A2  
                                       _BORCON 0116                                         _RC1REG 0199  
                                       _RC1STA 019D                                         i1l1014 0A3A  
                                       _RB7PPS 0E9F                                         _ODCONA 028C  
                                       _ODCONB 028D                                         _ODCONC 028E  
                                       i1l2520 028E                                         i1l2514 0283  
                                       i1l2612 036B                                         i1l2604 0358  
                                       i1l2380 0A34                                         i1l2452 0ACA  
                                       i1l2470 0C56                                         i1l2614 036D  
                                       i1l2622 037D                                         i1l2542 02AE  
                                       i1l2518 0286                                         i1l2710 0059  
                                       i1l2480 0C74                                         i1l2640 03E2  
                                       i1l2632 03C8                                         i1l2712 0061  
                                       i1l2448 0ABF                                         i1l2538 02AB  
                                       i1l2802 01F4                                         i1l2730 0084  
                                       i1l2492 0C9F                                         i1l2548 02C0  
                                       i1l2812 021D                                         i1l2708 0057  
                                       i1l2478 0C66                                         i1l2662 0401  
                                       i1l2654 03F6                                         i1l2822 0249  
                                       i1l2726 007A                                         i1l2496 0CAD  
                                       i1l2488 0C94                                         i1l2648 03EF  
                                       i1l2656 03F8                                         i1l2816 0232  
                                       i1l2728 007C                                         i1l2840 0D51  
                                       i1l2666 0403                                         i1l2586 0335  
                                       i1l2578 02FC                                         i1l2738 0092  
                                       i1l2850 0D6C                                         i1l2684 0440  
                                       i1l2588 0337                                         i1l2596 0346  
                                       i1l2860 0DA1                                         i1l2852 0D7C  
                                       i1l2790 01C4                                         i1l2862 0D94  
                                       i1l2846 0D68                                         i1l2688 0444  
                                       i1l2792 01DB                                         i1l2874 0DC8  
                                       i1l2798 01F2                                         i1l2984 097C  
                                       u320_25 01D0                                         u241_25 0A3B  
                                       u313_25 0108                                         u314_25 0137  
                                       u250_25 0AD2                                         u315_25 018D  
                                       u316_25 01A4                     __end_of_EUSART_is_tx_ready 099B  
                                       u317_25 01B3                                         u318_25 01C7  
                                       u342_25 0DB5                                         u334_25 0D75  
                                       u255_25 0C69                                         u271_25 0310  
                                       u327_25 020B                                         u272_20 031A  
                                       u328_25 0226                                         u336_25 0D89  
                                       u273_20 031B                                         u257_25 0C75  
                                       u329_25 023C                                         u249_25 0ACB  
                                       u258_25 0C89                                         u338_25 0D9B  
                                       u259_25 0C95                                         u283_25 0372  
                                       u284_23 0390                                         u276_25 033C  
                                       u288_25 03E3                                         _OSCCON 0099  
                                       u298_25 041B                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         u405lld 0F4A  
                                       _TX1REG 019A                                         _TX1STA 019E  
                                 ?_resetCursor 0070                                         u394lld 06DA  
                             __end_of___xxtofl 0DD1                                 __CFG_PWRTE$OFF 0000  
                                 vfprintf@cfmt 0143                                         ___lmul 0AB7  
                                    ??___aldiv 0078                                      ??___aodiv 00B0  
                                    ??___fladd 0020                                      ??___aomod 00B0  
                               __CFG_STVREN$ON 0000                                      ??___flmul 0079  
                                    ??___fltol 00A4                                         _hrDisp 0120  
                             ?_TMR0_Initialize 0070                                         _printf 099B  
                                       pad@buf 00B3                                         dtoa@fp 00C9  
                                       _strlen 09F6            __size_of_IOCCF7_SetInterruptHandler 0009  
                                       fputc@c 00A2                                         fputs@c 00B0  
                                       fputs@i 00B1                                         fputs@s 00AA  
                           __size_of__Umul8_16 001F                               __end_of_timerISR 095C  
                             __end_of_vfprintf 0B51       TMR0_SetInterruptHandler@InterruptHandler 00A0  
   IOCCF7_SetInterruptHandler@InterruptHandler 00A0                               ?_PIN_MANAGER_IOC 0070  
                                 ??_IOCCF7_ISR 007E                                   ___xxtofl@arg 0038  
                                 ___xxtofl@exp 0037                              _SYSTEM_Initialize 0966  
                                 ___xxtofl@val 002E                        __end_of__initialization 0039  
                           ?_SYSTEM_Initialize 0070                                     ___fltol@f1 00A0  
                               __pcstackCOMMON 0070                                   __pidataBANK2 0A49  
                          ??_SYSTEM_Initialize 00A3                                      ?_TMR0_ISR 0070  
                                __end_of_fputc 0BCE                                  __end_of_fputs 0AB7  
                                __end_of_putch 090A                             __size_of_clearLine 0085  
                           __end_of_IOCCF7_ISR 097F                                 _OPTION_REGbits 0095  
              ??_EUSART_SetOverrunErrorHandler 00A2                                        ??_fputc 00A5  
                    __end_of_SYSTEM_Initialize 0972                                        ??_fputs 00AD  
                                      ??_putch 00A1                                     __pbssBANK0 0040  
                                   __pbssBANK2 015A                                     __pbssBANK3 01A0  
                         __end_of_EUSART_Write 0966                              __end_of__Umul8_16 0A49  
                                   __pmaintext 0E74               __end_of_TMR0_SetInterruptHandler 0952  
                                      ?___lmul 0026                                     ??_TMR0_ISR 0070  
                              __CFG_PPS1WAY$ON 0000                             __size_of_setCursor 003D  
                                   __pintentry 0004                                 ___lmul@product 0079  
                                      ?_printf 0145                                        ?_strlen 00A0  
                           __size_of_speedCalc 00A3                                __CFG_WDTCCS$SWC 0000  
                                    ?___xxtofl 002E                                   ?_writeString 0070  
                           __size_of_vfpfcnvrt 010E                                        _OSCTUNE 0098  
                                      _SLRCONA 030C                                        _SLRCONB 030D  
                                      _SLRCONC 030E             __end_of_IOCCF7_SetInterruptHandler 0949  
                   _IOCCF7_SetInterruptHandler 0940                       ??_EUSART_SetErrorHandler 00A2  
                            __end_of_clearLine 0D3B                           __size_of_resetCursor 0008  
                                    ?_timerISR 0070                                        ___aldiv 0C34  
                                      ___aodiv 06B1                                        ___fladd 0269  
                                      ___aomod 0F21                                __size_of___lmul 0030  
                                      ___flmul 003D                                        ___fltol 0BCE  
                                    ?_vfprintf 00EC                                        __ptext1 09B0  
                                      __ptext2 091D                                        __ptext3 0A0F  
                                      __ptext4 0CB6                                        __ptext5 0B51  
                                      __ptext6 098D                                        __ptext7 099B  
                                      __ptext8 0B1A                                        __ptext9 05A3  
                              __size_of_printf 0015                                __size_of_strlen 0019  
                                      _counter 0040                          _OSCILLATOR_Initialize 0916  
                                 __size_of_abs 0019                                   __size_of_pad 0056  
                                   ??___xxtofl 0032                               ___aldiv@dividend 0074  
                     ??_PIN_MANAGER_Initialize 00A2                                      _IOCCFbits 0399  
                                    _IOCCNbits 0398                                      _IOCCPbits 0397  
                                   clearLine@i 014F                     __size_of_SYSTEM_Initialize 000C  
                                      clrloop0 090B                           end_of_initialization 0039  
                            __end_of_setCursor 0B8E          __end_of_EUSART_SetOverrunErrorHandler 0940  
       __size_of_EUSART_SetOverrunErrorHandler 0009                  _EUSART_SetOverrunErrorHandler 0937  
                                      fputc@fp 00A4                                        init_ram 0910  
                                      fputs@fp 00AC                                        initloop 0911  
                            __end_of_speedCalc 0E74                              _EUSART_Initialize 0A69  
                           ?_EUSART_Initialize 0070                              __end_of_vfpfcnvrt 06B1  
                                   ??_timerISR 0070                               ___aldiv@quotient 0022  
                           _EUSART_is_tx_ready 098D                                     ??_vfprintf 0140  
                                      strlen@a 00A3                                        strlen@s 00A4  
                          ??_EUSART_Initialize 00A2                                   _distanceDisp 012D  
                     _TMR0_SetInterruptHandler 0949                            ?_EUSART_is_tx_ready 0070  
                                  ___fladd@grs 007B                               __CFG_FOSC$INTOSC 0000  
                                ___xxtofl@sign 0036                          __size_of_EUSART_Write 000A  
              __size_of_EUSART_SetErrorHandler 0009                                    ___flmul@grs 0029  
                    __end_of_EUSART_Initialize 0A8E                           ??_EUSART_is_tx_ready 00A0  
                               _speedCalc$1230 003C                                 __end_of___lmul 0AE7  
                   _EUSART_DefaultErrorHandler 0000                                    vfpfcnvrt@ap 00DB  
                                  vfpfcnvrt@fp 00EB                                    vfpfcnvrt@ll 00E1  
                                  vfpfcnvrt@vp 00E9                                   _EUSART_Write 095C  
                            __size_of_TMR0_ISR 000E                         ?_OSCILLATOR_Initialize 0070  
                            writeString@string 00B8                                 __end_of_printf 09B0  
                               __end_of_strlen 0A0F                            start_initialization 0016  
                     __size_of_TMR0_Initialize 0018                __size_of_PIN_MANAGER_Initialize 0033  
                                  __end_of_abs 09F6                                    __end_of_pad 07FE  
                         __size_of_writeString 0015                         _EUSART_is_tx_ready$167 00A0  
                                  putch@txData 00A1                       __size_of_PIN_MANAGER_IOC 0006  
               ?_EUSART_SetOverrunErrorHandler 00A0                                    vfprintf@fmt 00EC  
                   _EUSART_FramingErrorHandler 0059                                       ??___lmul 0079  
                       _EUSART_SetErrorHandler 0925                                      __Umul8_16 0A2A  
                                  __pdataBANK2 0120                                       ??_printf 00EF  
                                     ??_strlen 00A2                                      ___fladd@a 0074  
                                    ___fladd@b 0070                                      ___flmul@a 0024  
                                    ___flmul@b 0020                                      ___latbits 0002  
                                __pcstackBANK0 0020                                  __pcstackBANK1 00A0  
                                __pcstackBANK2 0140                               ___aodiv@dividend 00A8  
                            __size_of___xxtofl 0096                    ?_IOCCF7_SetInterruptHandler 00A0  
                   __size_of_EUSART_Initialize 0025                          _TMR0_InterruptHandler 0051  
                                    __pnvBANK0 0051                                      _clearLine 0CB6  
                       _PIN_MANAGER_Initialize 0AE7                                       ?___aldiv 0070  
                                     ?___aodiv 00A0                                       ?___fladd 0070  
                                     ?___aomod 00A0                               ___aodiv@quotient 00B3  
                                     ?___flmul 0020                                       ?___fltol 00A0  
                                   ?__Umul8_16 0070                                     setCursor@a 00A4  
                                   setCursor@b 00A1                              __size_of_timerISR 000A  
                 ??_INTERRUPT_InterruptManager 007E                              __size_of_vfprintf 0037  
                                     _BAUD1CON 019F                                 __size_of_fputc 0040  
                               __size_of_fputs 0029                                 __size_of_putch 0006  
                              ___aldiv@divisor 0070                              ??_TMR0_Initialize 00A2  
                                ??_resetCursor 00B8                                ___aldiv@counter 0020  
       EUSART_SetErrorHandler@interruptHandler 00A0                                      _setCursor 0B51  
                                    clear_ram0 090A                              _eusartRxLastError 004C  
                                   ?_clearLine 014C            __size_of_INTERRUPT_InterruptManager 0010  
                   ??_TMR0_SetInterruptHandler 00A2                                       _PIR1bits 0010  
              ??_EUSART_SetFramingErrorHandler 00A2                                      _puts$1049 00B7  
                                    _speedCalc 0DD1                                      _speedDisp 0138  
             ??_IOCCF7_DefaultInterruptHandler 0070                ?_IOCCF7_DefaultInterruptHandler 0070  
                         __CFG_WDTCPS$WDTCPS1F 0000                                       _TMR0_ISR 097F  
            _EUSART_DefaultOverrunErrorHandler 0000                              ??_PIN_MANAGER_IOC 007E  
                                    _vfpfcnvrt 05A3                              ___lmul@multiplier 0026  
                                   ?_setCursor 00A1                                     vfprintf@ap 00EE  
                                   vfprintf@fp 0142                            __end_of_resetCursor 0925  
                                   ?_speedCalc 0070                        ??_OSCILLATOR_Initialize 00A0  
                                  ??__Umul8_16 0072                            _EUSART_ErrorHandler 0055  
                             __size_of___aldiv 0082                               __size_of___aodiv 00F7  
                             __size_of___fladd 01E9                               __size_of___aomod 00DF  
                             __size_of___flmul 022C                               __size_of___fltol 0066  
                                   ?_vfpfcnvrt 00DA                                ___aodiv@divisor 00A0  
                              ___aodiv@counter 00B1                                       ___xxtofl 0D3B  
                                     _dtoa$703 00C7                                       __ptext10 0452  
                                     __ptext11 07A8                                       __ptext20 0BCE  
                                     __ptext12 09F6                                       __ptext21 0966  
                                     __ptext13 0A8E                                       __ptext30 0925  
                                     __ptext22 09C5                                       __ptext14 0B8E  
                                     __ptext23 0949                                       __ptext15 0904  
                                     __ptext40 0AB7                                       __ptext32 097F  
                                     __ptext24 0AE7                                       __ptext16 095C  
                                     __ptext41 003D                                       __ptext33 07FE  
                                     __ptext25 0940                                       __ptext17 09DD  
                                     __ptext42 0A2A                                       __ptext34 0952  
                                     __ptext26 0916                                       __ptext18 0F21  
                                     __ptext43 0269                                       __ptext35 08FE  
                                     __ptext27 0A69                                       __ptext19 06B1  
                                     __ptext44 0C34                                       __ptext36 0972  
                                     __ptext28 0937                                       __ptext37 07FF  
                                     __ptext29 092E                                       __ptext38 0DD1  
                                     __ptext39 0D3B                                       _distance 015A  
                                   _IOCCF7_ISR 0972                                  __size_of_main 00AD  
                                __size_of_dtoa 0151                                  __size_of_puts 001B  
                  __size_of_EUSART_is_tx_ready 000E           __end_of_TMR0_DefaultInterruptHandler 07FF  
        __size_of_TMR0_DefaultInterruptHandler 0001                   _TMR0_DefaultInterruptHandler 07FE  
                         __CFG_WDTCWS$WDTCWSSW 0000                        ?_EUSART_SetErrorHandler 00A0  
                                  ??_clearLine 014E                                     _RC1STAbits 019D  
EUSART_SetOverrunErrorHandler@interruptHandler 00A0                                       _timerISR 0952  
                                     int$flags 007E                                       _vfprintf 0B1A  
           __end_of_INTERRUPT_InterruptManager 0014                     _INTERRUPT_InterruptManager 0004  
                                    printf@fmt 0145          __end_of_EUSART_SetFramingErrorHandler 0937  
       __size_of_EUSART_SetFramingErrorHandler 0009                  _EUSART_SetFramingErrorHandler 092E  
                             ___aomod@dividend 00A8                                  ??_writeString 00B8  
                                   _INTCONbits 000B                                       intlevel1 0000  
                      ?_PIN_MANAGER_Initialize 0070                                    _resetCursor 091D  
               __end_of_EUSART_SetErrorHandler 092E                                    ??_setCursor 00A2  
                            __CFG_CLKOUTEN$OFF 0000                  ?_TMR0_DefaultInterruptHandler 0070  
                                  ??_speedCalc 007E                                       printf@ap 014B  
EUSART_SetFramingErrorHandler@interruptHandler 00A0                                ___aomod@divisor 00A0  
                                  ??_vfpfcnvrt 00DC                                ___aomod@counter 00B1  
                                __pstringtext1 1000                                  __pstringtext2 1007  
                                __pstringtext3 100C                                  __pstringtext4 100F  
                                __pstringtext5 0000                         __Umul8_16@multiplicand 0070  
                                   _OPTION_REG 0095                                _TMR0_Initialize 09C5  
                                 ___aldiv@sign 0021                                     _TX1STAbits 019E  
                                ___fladd@signs 0078                             EUSART_Write@txData 00A0  
                          __end_of_writeString 09C5                                   ___aodiv@sign 00B2  
               __end_of_PIN_MANAGER_Initialize 0B1A                                    ?_IOCCF7_ISR 0070  
                                 ___fladd@aexp 0079                                   ___fladd@bexp 007A  
                              _PIN_MANAGER_IOC 08FE                           __Umul8_16@multiplier 0078  
                                 ___aomod@sign 00B2                        _IOCCF7_InterruptHandler 0053  
                            __Umul8_16@product 0074                                 clearLine@i_604 0151  
                               clearLine@i_606 0153  
