

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri Mar 15 13:43:57 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1619
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	stringtext3,global,class=STRCODE,delta=2
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2
    22                           	psect	text2,local,class=CODE,merge=1,delta=2
    23                           	psect	text3,local,class=CODE,merge=1,delta=2
    24                           	psect	text4,local,class=CODE,merge=1,delta=2
    25                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text7,local,class=CODE,merge=1,delta=2
    28                           	psect	text8,local,class=CODE,merge=1,delta=2
    29                           	psect	text9,local,class=CODE,merge=1,delta=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2
    35                           	psect	text15,local,class=CODE,merge=1,delta=2
    36                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text19,local,class=CODE,merge=1,delta=2
    40                           	psect	text20,local,class=CODE,merge=1,delta=2
    41                           	psect	text21,local,class=CODE,merge=1,delta=2
    42                           	psect	text22,local,class=CODE,merge=1,delta=2
    43                           	psect	text23,local,class=CODE,merge=1,delta=2
    44                           	psect	text24,local,class=CODE,merge=1,delta=2
    45                           	psect	text25,local,class=CODE,merge=1,delta=2
    46                           	psect	text26,local,class=CODE,merge=1,delta=2
    47                           	psect	text27,local,class=CODE,merge=1,delta=2
    48                           	psect	text28,local,class=CODE,merge=1,delta=2
    49                           	psect	intentry,global,class=CODE,delta=2
    50                           	psect	text30,local,class=CODE,merge=1,delta=2
    51                           	psect	text31,local,class=CODE,merge=1,delta=2
    52                           	psect	text32,local,class=CODE,merge=1,delta=2
    53                           	psect	text33,local,class=CODE,merge=1,delta=2
    54                           	psect	text34,local,class=CODE,merge=1,delta=2
    55                           	psect	text35,local,class=CODE,merge=1,delta=2
    56                           	psect	text36,local,class=CODE,merge=1,delta=2
    57                           	psect	text37,local,class=CODE,merge=1,delta=2,group=1
    58                           	psect	text38,local,class=CODE,merge=1,delta=2,group=1
    59                           	psect	text39,local,class=CODE,merge=1,delta=2,group=1
    60                           	psect	text40,local,class=CODE,merge=1,delta=2,group=1
    61                           	psect	text41,local,class=CODE,merge=1,delta=2,group=1
    62                           	psect	text42,local,class=CODE,merge=1,delta=2,group=1
    63                           	psect	text43,local,class=CODE,merge=1,delta=2,group=1
    64                           	dabs	1,0x7E,2
    65  0000                     
    66                           ; Version 2.05
    67                           ; Generated 20/12/2018 GMT
    68                           ; 
    69                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    70                           ; All rights reserved.
    71                           ; 
    72                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    73                           ; 
    74                           ; Redistribution and use in source and binary forms, with or without modification, are
    75                           ; permitted provided that the following conditions are met:
    76                           ; 
    77                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    78                           ;        conditions and the following disclaimer.
    79                           ; 
    80                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    81                           ;        of conditions and the following disclaimer in the documentation and/or other
    82                           ;        materials provided with the distribution.
    83                           ; 
    84                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    85                           ;        software without specific prior written permission.
    86                           ; 
    87                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    88                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    89                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    90                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    91                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    92                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    93                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    94                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    95                           ; 
    96                           ; 
    97                           ; Code-generator required, PIC16F1619 Definitions
    98                           ; 
    99                           ; SFR Addresses
   100  0000                     	;# 
   101  0001                     	;# 
   102  0002                     	;# 
   103  0003                     	;# 
   104  0004                     	;# 
   105  0005                     	;# 
   106  0006                     	;# 
   107  0007                     	;# 
   108  0008                     	;# 
   109  0009                     	;# 
   110  000A                     	;# 
   111  000B                     	;# 
   112  000C                     	;# 
   113  000D                     	;# 
   114  000E                     	;# 
   115  0010                     	;# 
   116  0011                     	;# 
   117  0012                     	;# 
   118  0013                     	;# 
   119  0014                     	;# 
   120  0015                     	;# 
   121  0016                     	;# 
   122  0016                     	;# 
   123  0017                     	;# 
   124  0018                     	;# 
   125  0019                     	;# 
   126  001A                     	;# 
   127  001A                     	;# 
   128  001B                     	;# 
   129  001B                     	;# 
   130  001C                     	;# 
   131  001D                     	;# 
   132  001E                     	;# 
   133  001F                     	;# 
   134  008C                     	;# 
   135  008D                     	;# 
   136  008E                     	;# 
   137  0090                     	;# 
   138  0091                     	;# 
   139  0092                     	;# 
   140  0093                     	;# 
   141  0094                     	;# 
   142  0095                     	;# 
   143  0096                     	;# 
   144  0098                     	;# 
   145  0099                     	;# 
   146  009A                     	;# 
   147  009B                     	;# 
   148  009B                     	;# 
   149  009C                     	;# 
   150  009D                     	;# 
   151  009E                     	;# 
   152  009F                     	;# 
   153  010C                     	;# 
   154  010D                     	;# 
   155  010E                     	;# 
   156  0111                     	;# 
   157  0112                     	;# 
   158  0113                     	;# 
   159  0114                     	;# 
   160  0115                     	;# 
   161  0116                     	;# 
   162  0117                     	;# 
   163  0118                     	;# 
   164  0119                     	;# 
   165  011C                     	;# 
   166  018C                     	;# 
   167  018D                     	;# 
   168  018E                     	;# 
   169  0191                     	;# 
   170  0191                     	;# 
   171  0192                     	;# 
   172  0193                     	;# 
   173  0193                     	;# 
   174  0194                     	;# 
   175  0195                     	;# 
   176  0196                     	;# 
   177  0197                     	;# 
   178  0199                     	;# 
   179  0199                     	;# 
   180  0199                     	;# 
   181  019A                     	;# 
   182  019A                     	;# 
   183  019A                     	;# 
   184  019B                     	;# 
   185  019B                     	;# 
   186  019B                     	;# 
   187  019B                     	;# 
   188  019B                     	;# 
   189  019C                     	;# 
   190  019C                     	;# 
   191  019C                     	;# 
   192  019D                     	;# 
   193  019D                     	;# 
   194  019D                     	;# 
   195  019E                     	;# 
   196  019E                     	;# 
   197  019E                     	;# 
   198  019F                     	;# 
   199  019F                     	;# 
   200  019F                     	;# 
   201  019F                     	;# 
   202  019F                     	;# 
   203  020C                     	;# 
   204  020D                     	;# 
   205  020E                     	;# 
   206  0211                     	;# 
   207  0211                     	;# 
   208  0212                     	;# 
   209  0212                     	;# 
   210  0213                     	;# 
   211  0213                     	;# 
   212  0214                     	;# 
   213  0214                     	;# 
   214  0215                     	;# 
   215  0215                     	;# 
   216  0215                     	;# 
   217  0215                     	;# 
   218  0216                     	;# 
   219  0216                     	;# 
   220  0217                     	;# 
   221  0217                     	;# 
   222  028C                     	;# 
   223  028D                     	;# 
   224  028E                     	;# 
   225  0291                     	;# 
   226  0291                     	;# 
   227  0292                     	;# 
   228  0293                     	;# 
   229  0294                     	;# 
   230  0298                     	;# 
   231  0298                     	;# 
   232  0299                     	;# 
   233  029A                     	;# 
   234  029B                     	;# 
   235  029E                     	;# 
   236  030C                     	;# 
   237  030D                     	;# 
   238  030E                     	;# 
   239  038C                     	;# 
   240  038D                     	;# 
   241  038E                     	;# 
   242  0391                     	;# 
   243  0392                     	;# 
   244  0393                     	;# 
   245  0394                     	;# 
   246  0395                     	;# 
   247  0396                     	;# 
   248  0397                     	;# 
   249  0398                     	;# 
   250  0399                     	;# 
   251  040E                     	;# 
   252  0413                     	;# 
   253  0413                     	;# 
   254  0414                     	;# 
   255  0414                     	;# 
   256  0415                     	;# 
   257  0416                     	;# 
   258  0417                     	;# 
   259  0418                     	;# 
   260  041A                     	;# 
   261  041A                     	;# 
   262  041B                     	;# 
   263  041B                     	;# 
   264  041C                     	;# 
   265  041D                     	;# 
   266  041E                     	;# 
   267  041F                     	;# 
   268  0493                     	;# 
   269  0494                     	;# 
   270  0495                     	;# 
   271  0496                     	;# 
   272  049A                     	;# 
   273  049B                     	;# 
   274  049C                     	;# 
   275  049D                     	;# 
   276  058C                     	;# 
   277  058C                     	;# 
   278  058D                     	;# 
   279  058E                     	;# 
   280  058E                     	;# 
   281  058F                     	;# 
   282  0590                     	;# 
   283  0590                     	;# 
   284  0591                     	;# 
   285  0592                     	;# 
   286  0592                     	;# 
   287  0593                     	;# 
   288  0594                     	;# 
   289  0594                     	;# 
   290  0595                     	;# 
   291  0596                     	;# 
   292  0596                     	;# 
   293  0597                     	;# 
   294  0598                     	;# 
   295  0599                     	;# 
   296  059A                     	;# 
   297  059B                     	;# 
   298  059B                     	;# 
   299  059C                     	;# 
   300  059D                     	;# 
   301  060C                     	;# 
   302  060C                     	;# 
   303  060D                     	;# 
   304  060E                     	;# 
   305  060F                     	;# 
   306  060F                     	;# 
   307  0610                     	;# 
   308  0611                     	;# 
   309  0612                     	;# 
   310  0613                     	;# 
   311  0614                     	;# 
   312  0617                     	;# 
   313  0617                     	;# 
   314  0618                     	;# 
   315  0619                     	;# 
   316  061A                     	;# 
   317  061A                     	;# 
   318  061B                     	;# 
   319  061C                     	;# 
   320  0691                     	;# 
   321  0692                     	;# 
   322  0693                     	;# 
   323  0694                     	;# 
   324  0695                     	;# 
   325  0696                     	;# 
   326  0697                     	;# 
   327  0699                     	;# 
   328  069A                     	;# 
   329  0711                     	;# 
   330  0712                     	;# 
   331  0713                     	;# 
   332  0714                     	;# 
   333  0715                     	;# 
   334  0718                     	;# 
   335  0718                     	;# 
   336  0719                     	;# 
   337  071A                     	;# 
   338  071A                     	;# 
   339  071B                     	;# 
   340  071C                     	;# 
   341  071D                     	;# 
   342  0791                     	;# 
   343  0791                     	;# 
   344  0792                     	;# 
   345  0793                     	;# 
   346  0793                     	;# 
   347  0794                     	;# 
   348  0795                     	;# 
   349  0795                     	;# 
   350  0796                     	;# 
   351  0797                     	;# 
   352  0797                     	;# 
   353  0798                     	;# 
   354  0799                     	;# 
   355  079A                     	;# 
   356  080C                     	;# 
   357  080C                     	;# 
   358  080D                     	;# 
   359  080E                     	;# 
   360  080E                     	;# 
   361  080F                     	;# 
   362  0810                     	;# 
   363  0810                     	;# 
   364  0811                     	;# 
   365  0812                     	;# 
   366  0812                     	;# 
   367  0813                     	;# 
   368  0814                     	;# 
   369  0815                     	;# 
   370  0816                     	;# 
   371  0817                     	;# 
   372  0818                     	;# 
   373  0819                     	;# 
   374  081A                     	;# 
   375  081A                     	;# 
   376  081B                     	;# 
   377  081C                     	;# 
   378  081C                     	;# 
   379  081D                     	;# 
   380  088C                     	;# 
   381  088D                     	;# 
   382  088E                     	;# 
   383  088F                     	;# 
   384  088F                     	;# 
   385  0890                     	;# 
   386  0891                     	;# 
   387  0892                     	;# 
   388  0893                     	;# 
   389  0893                     	;# 
   390  0894                     	;# 
   391  0895                     	;# 
   392  0896                     	;# 
   393  0897                     	;# 
   394  0897                     	;# 
   395  0898                     	;# 
   396  0899                     	;# 
   397  0D8C                     	;# 
   398  0D8C                     	;# 
   399  0D8D                     	;# 
   400  0D8E                     	;# 
   401  0D8F                     	;# 
   402  0D8F                     	;# 
   403  0D90                     	;# 
   404  0D91                     	;# 
   405  0D92                     	;# 
   406  0D92                     	;# 
   407  0D93                     	;# 
   408  0D94                     	;# 
   409  0D95                     	;# 
   410  0D95                     	;# 
   411  0D96                     	;# 
   412  0D97                     	;# 
   413  0D98                     	;# 
   414  0D99                     	;# 
   415  0D9A                     	;# 
   416  0D9B                     	;# 
   417  0D9C                     	;# 
   418  0D9D                     	;# 
   419  0D9E                     	;# 
   420  0D9E                     	;# 
   421  0D9F                     	;# 
   422  0DA0                     	;# 
   423  0DA1                     	;# 
   424  0DA1                     	;# 
   425  0DA2                     	;# 
   426  0DA3                     	;# 
   427  0DA4                     	;# 
   428  0DA4                     	;# 
   429  0DA5                     	;# 
   430  0DA6                     	;# 
   431  0DA7                     	;# 
   432  0DA7                     	;# 
   433  0DA8                     	;# 
   434  0DA9                     	;# 
   435  0DAA                     	;# 
   436  0DAB                     	;# 
   437  0DAC                     	;# 
   438  0DAD                     	;# 
   439  0DAE                     	;# 
   440  0DAF                     	;# 
   441  0E0F                     	;# 
   442  0E10                     	;# 
   443  0E11                     	;# 
   444  0E12                     	;# 
   445  0E13                     	;# 
   446  0E14                     	;# 
   447  0E15                     	;# 
   448  0E16                     	;# 
   449  0E17                     	;# 
   450  0E18                     	;# 
   451  0E19                     	;# 
   452  0E1A                     	;# 
   453  0E1B                     	;# 
   454  0E1C                     	;# 
   455  0E1D                     	;# 
   456  0E1E                     	;# 
   457  0E1F                     	;# 
   458  0E20                     	;# 
   459  0E21                     	;# 
   460  0E22                     	;# 
   461  0E23                     	;# 
   462  0E24                     	;# 
   463  0E25                     	;# 
   464  0E26                     	;# 
   465  0E27                     	;# 
   466  0E28                     	;# 
   467  0E29                     	;# 
   468  0E2A                     	;# 
   469  0E2B                     	;# 
   470  0E2C                     	;# 
   471  0E2D                     	;# 
   472  0E2E                     	;# 
   473  0E90                     	;# 
   474  0E91                     	;# 
   475  0E92                     	;# 
   476  0E94                     	;# 
   477  0E95                     	;# 
   478  0E9C                     	;# 
   479  0E9D                     	;# 
   480  0E9E                     	;# 
   481  0E9F                     	;# 
   482  0EA0                     	;# 
   483  0EA1                     	;# 
   484  0EA2                     	;# 
   485  0EA3                     	;# 
   486  0EA4                     	;# 
   487  0EA5                     	;# 
   488  0EA6                     	;# 
   489  0EA7                     	;# 
   490  0F0F                     	;# 
   491  0F10                     	;# 
   492  0F11                     	;# 
   493  0F12                     	;# 
   494  0F13                     	;# 
   495  0F14                     	;# 
   496  0F15                     	;# 
   497  0F16                     	;# 
   498  0F17                     	;# 
   499  0F18                     	;# 
   500  0F19                     	;# 
   501  0F1A                     	;# 
   502  0F1B                     	;# 
   503  0F1C                     	;# 
   504  0F1D                     	;# 
   505  0F1E                     	;# 
   506  0F1F                     	;# 
   507  0F20                     	;# 
   508  0F21                     	;# 
   509  0F22                     	;# 
   510  0F23                     	;# 
   511  0F24                     	;# 
   512  0F25                     	;# 
   513  0F26                     	;# 
   514  0F27                     	;# 
   515  0F28                     	;# 
   516  0F29                     	;# 
   517  0F2A                     	;# 
   518  0F2B                     	;# 
   519  0F2C                     	;# 
   520  0F2D                     	;# 
   521  0F2E                     	;# 
   522  0F2F                     	;# 
   523  0F30                     	;# 
   524  0F31                     	;# 
   525  0F32                     	;# 
   526  0F33                     	;# 
   527  0F34                     	;# 
   528  0F35                     	;# 
   529  0F36                     	;# 
   530  0F37                     	;# 
   531  0FE4                     	;# 
   532  0FE5                     	;# 
   533  0FE6                     	;# 
   534  0FE7                     	;# 
   535  0FE8                     	;# 
   536  0FE9                     	;# 
   537  0FEA                     	;# 
   538  0FEB                     	;# 
   539  0FED                     	;# 
   540  0FEE                     	;# 
   541  0FEF                     	;# 
   542  0000                     	;# 
   543  0001                     	;# 
   544  0002                     	;# 
   545  0003                     	;# 
   546  0004                     	;# 
   547  0005                     	;# 
   548  0006                     	;# 
   549  0007                     	;# 
   550  0008                     	;# 
   551  0009                     	;# 
   552  000A                     	;# 
   553  000B                     	;# 
   554  000C                     	;# 
   555  000D                     	;# 
   556  000E                     	;# 
   557  0010                     	;# 
   558  0011                     	;# 
   559  0012                     	;# 
   560  0013                     	;# 
   561  0014                     	;# 
   562  0015                     	;# 
   563  0016                     	;# 
   564  0016                     	;# 
   565  0017                     	;# 
   566  0018                     	;# 
   567  0019                     	;# 
   568  001A                     	;# 
   569  001A                     	;# 
   570  001B                     	;# 
   571  001B                     	;# 
   572  001C                     	;# 
   573  001D                     	;# 
   574  001E                     	;# 
   575  001F                     	;# 
   576  008C                     	;# 
   577  008D                     	;# 
   578  008E                     	;# 
   579  0090                     	;# 
   580  0091                     	;# 
   581  0092                     	;# 
   582  0093                     	;# 
   583  0094                     	;# 
   584  0095                     	;# 
   585  0096                     	;# 
   586  0098                     	;# 
   587  0099                     	;# 
   588  009A                     	;# 
   589  009B                     	;# 
   590  009B                     	;# 
   591  009C                     	;# 
   592  009D                     	;# 
   593  009E                     	;# 
   594  009F                     	;# 
   595  010C                     	;# 
   596  010D                     	;# 
   597  010E                     	;# 
   598  0111                     	;# 
   599  0112                     	;# 
   600  0113                     	;# 
   601  0114                     	;# 
   602  0115                     	;# 
   603  0116                     	;# 
   604  0117                     	;# 
   605  0118                     	;# 
   606  0119                     	;# 
   607  011C                     	;# 
   608  018C                     	;# 
   609  018D                     	;# 
   610  018E                     	;# 
   611  0191                     	;# 
   612  0191                     	;# 
   613  0192                     	;# 
   614  0193                     	;# 
   615  0193                     	;# 
   616  0194                     	;# 
   617  0195                     	;# 
   618  0196                     	;# 
   619  0197                     	;# 
   620  0199                     	;# 
   621  0199                     	;# 
   622  0199                     	;# 
   623  019A                     	;# 
   624  019A                     	;# 
   625  019A                     	;# 
   626  019B                     	;# 
   627  019B                     	;# 
   628  019B                     	;# 
   629  019B                     	;# 
   630  019B                     	;# 
   631  019C                     	;# 
   632  019C                     	;# 
   633  019C                     	;# 
   634  019D                     	;# 
   635  019D                     	;# 
   636  019D                     	;# 
   637  019E                     	;# 
   638  019E                     	;# 
   639  019E                     	;# 
   640  019F                     	;# 
   641  019F                     	;# 
   642  019F                     	;# 
   643  019F                     	;# 
   644  019F                     	;# 
   645  020C                     	;# 
   646  020D                     	;# 
   647  020E                     	;# 
   648  0211                     	;# 
   649  0211                     	;# 
   650  0212                     	;# 
   651  0212                     	;# 
   652  0213                     	;# 
   653  0213                     	;# 
   654  0214                     	;# 
   655  0214                     	;# 
   656  0215                     	;# 
   657  0215                     	;# 
   658  0215                     	;# 
   659  0215                     	;# 
   660  0216                     	;# 
   661  0216                     	;# 
   662  0217                     	;# 
   663  0217                     	;# 
   664  028C                     	;# 
   665  028D                     	;# 
   666  028E                     	;# 
   667  0291                     	;# 
   668  0291                     	;# 
   669  0292                     	;# 
   670  0293                     	;# 
   671  0294                     	;# 
   672  0298                     	;# 
   673  0298                     	;# 
   674  0299                     	;# 
   675  029A                     	;# 
   676  029B                     	;# 
   677  029E                     	;# 
   678  030C                     	;# 
   679  030D                     	;# 
   680  030E                     	;# 
   681  038C                     	;# 
   682  038D                     	;# 
   683  038E                     	;# 
   684  0391                     	;# 
   685  0392                     	;# 
   686  0393                     	;# 
   687  0394                     	;# 
   688  0395                     	;# 
   689  0396                     	;# 
   690  0397                     	;# 
   691  0398                     	;# 
   692  0399                     	;# 
   693  040E                     	;# 
   694  0413                     	;# 
   695  0413                     	;# 
   696  0414                     	;# 
   697  0414                     	;# 
   698  0415                     	;# 
   699  0416                     	;# 
   700  0417                     	;# 
   701  0418                     	;# 
   702  041A                     	;# 
   703  041A                     	;# 
   704  041B                     	;# 
   705  041B                     	;# 
   706  041C                     	;# 
   707  041D                     	;# 
   708  041E                     	;# 
   709  041F                     	;# 
   710  0493                     	;# 
   711  0494                     	;# 
   712  0495                     	;# 
   713  0496                     	;# 
   714  049A                     	;# 
   715  049B                     	;# 
   716  049C                     	;# 
   717  049D                     	;# 
   718  058C                     	;# 
   719  058C                     	;# 
   720  058D                     	;# 
   721  058E                     	;# 
   722  058E                     	;# 
   723  058F                     	;# 
   724  0590                     	;# 
   725  0590                     	;# 
   726  0591                     	;# 
   727  0592                     	;# 
   728  0592                     	;# 
   729  0593                     	;# 
   730  0594                     	;# 
   731  0594                     	;# 
   732  0595                     	;# 
   733  0596                     	;# 
   734  0596                     	;# 
   735  0597                     	;# 
   736  0598                     	;# 
   737  0599                     	;# 
   738  059A                     	;# 
   739  059B                     	;# 
   740  059B                     	;# 
   741  059C                     	;# 
   742  059D                     	;# 
   743  060C                     	;# 
   744  060C                     	;# 
   745  060D                     	;# 
   746  060E                     	;# 
   747  060F                     	;# 
   748  060F                     	;# 
   749  0610                     	;# 
   750  0611                     	;# 
   751  0612                     	;# 
   752  0613                     	;# 
   753  0614                     	;# 
   754  0617                     	;# 
   755  0617                     	;# 
   756  0618                     	;# 
   757  0619                     	;# 
   758  061A                     	;# 
   759  061A                     	;# 
   760  061B                     	;# 
   761  061C                     	;# 
   762  0691                     	;# 
   763  0692                     	;# 
   764  0693                     	;# 
   765  0694                     	;# 
   766  0695                     	;# 
   767  0696                     	;# 
   768  0697                     	;# 
   769  0699                     	;# 
   770  069A                     	;# 
   771  0711                     	;# 
   772  0712                     	;# 
   773  0713                     	;# 
   774  0714                     	;# 
   775  0715                     	;# 
   776  0718                     	;# 
   777  0718                     	;# 
   778  0719                     	;# 
   779  071A                     	;# 
   780  071A                     	;# 
   781  071B                     	;# 
   782  071C                     	;# 
   783  071D                     	;# 
   784  0791                     	;# 
   785  0791                     	;# 
   786  0792                     	;# 
   787  0793                     	;# 
   788  0793                     	;# 
   789  0794                     	;# 
   790  0795                     	;# 
   791  0795                     	;# 
   792  0796                     	;# 
   793  0797                     	;# 
   794  0797                     	;# 
   795  0798                     	;# 
   796  0799                     	;# 
   797  079A                     	;# 
   798  080C                     	;# 
   799  080C                     	;# 
   800  080D                     	;# 
   801  080E                     	;# 
   802  080E                     	;# 
   803  080F                     	;# 
   804  0810                     	;# 
   805  0810                     	;# 
   806  0811                     	;# 
   807  0812                     	;# 
   808  0812                     	;# 
   809  0813                     	;# 
   810  0814                     	;# 
   811  0815                     	;# 
   812  0816                     	;# 
   813  0817                     	;# 
   814  0818                     	;# 
   815  0819                     	;# 
   816  081A                     	;# 
   817  081A                     	;# 
   818  081B                     	;# 
   819  081C                     	;# 
   820  081C                     	;# 
   821  081D                     	;# 
   822  088C                     	;# 
   823  088D                     	;# 
   824  088E                     	;# 
   825  088F                     	;# 
   826  088F                     	;# 
   827  0890                     	;# 
   828  0891                     	;# 
   829  0892                     	;# 
   830  0893                     	;# 
   831  0893                     	;# 
   832  0894                     	;# 
   833  0895                     	;# 
   834  0896                     	;# 
   835  0897                     	;# 
   836  0897                     	;# 
   837  0898                     	;# 
   838  0899                     	;# 
   839  0D8C                     	;# 
   840  0D8C                     	;# 
   841  0D8D                     	;# 
   842  0D8E                     	;# 
   843  0D8F                     	;# 
   844  0D8F                     	;# 
   845  0D90                     	;# 
   846  0D91                     	;# 
   847  0D92                     	;# 
   848  0D92                     	;# 
   849  0D93                     	;# 
   850  0D94                     	;# 
   851  0D95                     	;# 
   852  0D95                     	;# 
   853  0D96                     	;# 
   854  0D97                     	;# 
   855  0D98                     	;# 
   856  0D99                     	;# 
   857  0D9A                     	;# 
   858  0D9B                     	;# 
   859  0D9C                     	;# 
   860  0D9D                     	;# 
   861  0D9E                     	;# 
   862  0D9E                     	;# 
   863  0D9F                     	;# 
   864  0DA0                     	;# 
   865  0DA1                     	;# 
   866  0DA1                     	;# 
   867  0DA2                     	;# 
   868  0DA3                     	;# 
   869  0DA4                     	;# 
   870  0DA4                     	;# 
   871  0DA5                     	;# 
   872  0DA6                     	;# 
   873  0DA7                     	;# 
   874  0DA7                     	;# 
   875  0DA8                     	;# 
   876  0DA9                     	;# 
   877  0DAA                     	;# 
   878  0DAB                     	;# 
   879  0DAC                     	;# 
   880  0DAD                     	;# 
   881  0DAE                     	;# 
   882  0DAF                     	;# 
   883  0E0F                     	;# 
   884  0E10                     	;# 
   885  0E11                     	;# 
   886  0E12                     	;# 
   887  0E13                     	;# 
   888  0E14                     	;# 
   889  0E15                     	;# 
   890  0E16                     	;# 
   891  0E17                     	;# 
   892  0E18                     	;# 
   893  0E19                     	;# 
   894  0E1A                     	;# 
   895  0E1B                     	;# 
   896  0E1C                     	;# 
   897  0E1D                     	;# 
   898  0E1E                     	;# 
   899  0E1F                     	;# 
   900  0E20                     	;# 
   901  0E21                     	;# 
   902  0E22                     	;# 
   903  0E23                     	;# 
   904  0E24                     	;# 
   905  0E25                     	;# 
   906  0E26                     	;# 
   907  0E27                     	;# 
   908  0E28                     	;# 
   909  0E29                     	;# 
   910  0E2A                     	;# 
   911  0E2B                     	;# 
   912  0E2C                     	;# 
   913  0E2D                     	;# 
   914  0E2E                     	;# 
   915  0E90                     	;# 
   916  0E91                     	;# 
   917  0E92                     	;# 
   918  0E94                     	;# 
   919  0E95                     	;# 
   920  0E9C                     	;# 
   921  0E9D                     	;# 
   922  0E9E                     	;# 
   923  0E9F                     	;# 
   924  0EA0                     	;# 
   925  0EA1                     	;# 
   926  0EA2                     	;# 
   927  0EA3                     	;# 
   928  0EA4                     	;# 
   929  0EA5                     	;# 
   930  0EA6                     	;# 
   931  0EA7                     	;# 
   932  0F0F                     	;# 
   933  0F10                     	;# 
   934  0F11                     	;# 
   935  0F12                     	;# 
   936  0F13                     	;# 
   937  0F14                     	;# 
   938  0F15                     	;# 
   939  0F16                     	;# 
   940  0F17                     	;# 
   941  0F18                     	;# 
   942  0F19                     	;# 
   943  0F1A                     	;# 
   944  0F1B                     	;# 
   945  0F1C                     	;# 
   946  0F1D                     	;# 
   947  0F1E                     	;# 
   948  0F1F                     	;# 
   949  0F20                     	;# 
   950  0F21                     	;# 
   951  0F22                     	;# 
   952  0F23                     	;# 
   953  0F24                     	;# 
   954  0F25                     	;# 
   955  0F26                     	;# 
   956  0F27                     	;# 
   957  0F28                     	;# 
   958  0F29                     	;# 
   959  0F2A                     	;# 
   960  0F2B                     	;# 
   961  0F2C                     	;# 
   962  0F2D                     	;# 
   963  0F2E                     	;# 
   964  0F2F                     	;# 
   965  0F30                     	;# 
   966  0F31                     	;# 
   967  0F32                     	;# 
   968  0F33                     	;# 
   969  0F34                     	;# 
   970  0F35                     	;# 
   971  0F36                     	;# 
   972  0F37                     	;# 
   973  0FE4                     	;# 
   974  0FE5                     	;# 
   975  0FE6                     	;# 
   976  0FE7                     	;# 
   977  0FE8                     	;# 
   978  0FE9                     	;# 
   979  0FEA                     	;# 
   980  0FEB                     	;# 
   981  0FED                     	;# 
   982  0FEE                     	;# 
   983  0FEF                     	;# 
   984  0000                     	;# 
   985  0001                     	;# 
   986  0002                     	;# 
   987  0003                     	;# 
   988  0004                     	;# 
   989  0005                     	;# 
   990  0006                     	;# 
   991  0007                     	;# 
   992  0008                     	;# 
   993  0009                     	;# 
   994  000A                     	;# 
   995  000B                     	;# 
   996  000C                     	;# 
   997  000D                     	;# 
   998  000E                     	;# 
   999  0010                     	;# 
  1000  0011                     	;# 
  1001  0012                     	;# 
  1002  0013                     	;# 
  1003  0014                     	;# 
  1004  0015                     	;# 
  1005  0016                     	;# 
  1006  0016                     	;# 
  1007  0017                     	;# 
  1008  0018                     	;# 
  1009  0019                     	;# 
  1010  001A                     	;# 
  1011  001A                     	;# 
  1012  001B                     	;# 
  1013  001B                     	;# 
  1014  001C                     	;# 
  1015  001D                     	;# 
  1016  001E                     	;# 
  1017  001F                     	;# 
  1018  008C                     	;# 
  1019  008D                     	;# 
  1020  008E                     	;# 
  1021  0090                     	;# 
  1022  0091                     	;# 
  1023  0092                     	;# 
  1024  0093                     	;# 
  1025  0094                     	;# 
  1026  0095                     	;# 
  1027  0096                     	;# 
  1028  0098                     	;# 
  1029  0099                     	;# 
  1030  009A                     	;# 
  1031  009B                     	;# 
  1032  009B                     	;# 
  1033  009C                     	;# 
  1034  009D                     	;# 
  1035  009E                     	;# 
  1036  009F                     	;# 
  1037  010C                     	;# 
  1038  010D                     	;# 
  1039  010E                     	;# 
  1040  0111                     	;# 
  1041  0112                     	;# 
  1042  0113                     	;# 
  1043  0114                     	;# 
  1044  0115                     	;# 
  1045  0116                     	;# 
  1046  0117                     	;# 
  1047  0118                     	;# 
  1048  0119                     	;# 
  1049  011C                     	;# 
  1050  018C                     	;# 
  1051  018D                     	;# 
  1052  018E                     	;# 
  1053  0191                     	;# 
  1054  0191                     	;# 
  1055  0192                     	;# 
  1056  0193                     	;# 
  1057  0193                     	;# 
  1058  0194                     	;# 
  1059  0195                     	;# 
  1060  0196                     	;# 
  1061  0197                     	;# 
  1062  0199                     	;# 
  1063  0199                     	;# 
  1064  0199                     	;# 
  1065  019A                     	;# 
  1066  019A                     	;# 
  1067  019A                     	;# 
  1068  019B                     	;# 
  1069  019B                     	;# 
  1070  019B                     	;# 
  1071  019B                     	;# 
  1072  019B                     	;# 
  1073  019C                     	;# 
  1074  019C                     	;# 
  1075  019C                     	;# 
  1076  019D                     	;# 
  1077  019D                     	;# 
  1078  019D                     	;# 
  1079  019E                     	;# 
  1080  019E                     	;# 
  1081  019E                     	;# 
  1082  019F                     	;# 
  1083  019F                     	;# 
  1084  019F                     	;# 
  1085  019F                     	;# 
  1086  019F                     	;# 
  1087  020C                     	;# 
  1088  020D                     	;# 
  1089  020E                     	;# 
  1090  0211                     	;# 
  1091  0211                     	;# 
  1092  0212                     	;# 
  1093  0212                     	;# 
  1094  0213                     	;# 
  1095  0213                     	;# 
  1096  0214                     	;# 
  1097  0214                     	;# 
  1098  0215                     	;# 
  1099  0215                     	;# 
  1100  0215                     	;# 
  1101  0215                     	;# 
  1102  0216                     	;# 
  1103  0216                     	;# 
  1104  0217                     	;# 
  1105  0217                     	;# 
  1106  028C                     	;# 
  1107  028D                     	;# 
  1108  028E                     	;# 
  1109  0291                     	;# 
  1110  0291                     	;# 
  1111  0292                     	;# 
  1112  0293                     	;# 
  1113  0294                     	;# 
  1114  0298                     	;# 
  1115  0298                     	;# 
  1116  0299                     	;# 
  1117  029A                     	;# 
  1118  029B                     	;# 
  1119  029E                     	;# 
  1120  030C                     	;# 
  1121  030D                     	;# 
  1122  030E                     	;# 
  1123  038C                     	;# 
  1124  038D                     	;# 
  1125  038E                     	;# 
  1126  0391                     	;# 
  1127  0392                     	;# 
  1128  0393                     	;# 
  1129  0394                     	;# 
  1130  0395                     	;# 
  1131  0396                     	;# 
  1132  0397                     	;# 
  1133  0398                     	;# 
  1134  0399                     	;# 
  1135  040E                     	;# 
  1136  0413                     	;# 
  1137  0413                     	;# 
  1138  0414                     	;# 
  1139  0414                     	;# 
  1140  0415                     	;# 
  1141  0416                     	;# 
  1142  0417                     	;# 
  1143  0418                     	;# 
  1144  041A                     	;# 
  1145  041A                     	;# 
  1146  041B                     	;# 
  1147  041B                     	;# 
  1148  041C                     	;# 
  1149  041D                     	;# 
  1150  041E                     	;# 
  1151  041F                     	;# 
  1152  0493                     	;# 
  1153  0494                     	;# 
  1154  0495                     	;# 
  1155  0496                     	;# 
  1156  049A                     	;# 
  1157  049B                     	;# 
  1158  049C                     	;# 
  1159  049D                     	;# 
  1160  058C                     	;# 
  1161  058C                     	;# 
  1162  058D                     	;# 
  1163  058E                     	;# 
  1164  058E                     	;# 
  1165  058F                     	;# 
  1166  0590                     	;# 
  1167  0590                     	;# 
  1168  0591                     	;# 
  1169  0592                     	;# 
  1170  0592                     	;# 
  1171  0593                     	;# 
  1172  0594                     	;# 
  1173  0594                     	;# 
  1174  0595                     	;# 
  1175  0596                     	;# 
  1176  0596                     	;# 
  1177  0597                     	;# 
  1178  0598                     	;# 
  1179  0599                     	;# 
  1180  059A                     	;# 
  1181  059B                     	;# 
  1182  059B                     	;# 
  1183  059C                     	;# 
  1184  059D                     	;# 
  1185  060C                     	;# 
  1186  060C                     	;# 
  1187  060D                     	;# 
  1188  060E                     	;# 
  1189  060F                     	;# 
  1190  060F                     	;# 
  1191  0610                     	;# 
  1192  0611                     	;# 
  1193  0612                     	;# 
  1194  0613                     	;# 
  1195  0614                     	;# 
  1196  0617                     	;# 
  1197  0617                     	;# 
  1198  0618                     	;# 
  1199  0619                     	;# 
  1200  061A                     	;# 
  1201  061A                     	;# 
  1202  061B                     	;# 
  1203  061C                     	;# 
  1204  0691                     	;# 
  1205  0692                     	;# 
  1206  0693                     	;# 
  1207  0694                     	;# 
  1208  0695                     	;# 
  1209  0696                     	;# 
  1210  0697                     	;# 
  1211  0699                     	;# 
  1212  069A                     	;# 
  1213  0711                     	;# 
  1214  0712                     	;# 
  1215  0713                     	;# 
  1216  0714                     	;# 
  1217  0715                     	;# 
  1218  0718                     	;# 
  1219  0718                     	;# 
  1220  0719                     	;# 
  1221  071A                     	;# 
  1222  071A                     	;# 
  1223  071B                     	;# 
  1224  071C                     	;# 
  1225  071D                     	;# 
  1226  0791                     	;# 
  1227  0791                     	;# 
  1228  0792                     	;# 
  1229  0793                     	;# 
  1230  0793                     	;# 
  1231  0794                     	;# 
  1232  0795                     	;# 
  1233  0795                     	;# 
  1234  0796                     	;# 
  1235  0797                     	;# 
  1236  0797                     	;# 
  1237  0798                     	;# 
  1238  0799                     	;# 
  1239  079A                     	;# 
  1240  080C                     	;# 
  1241  080C                     	;# 
  1242  080D                     	;# 
  1243  080E                     	;# 
  1244  080E                     	;# 
  1245  080F                     	;# 
  1246  0810                     	;# 
  1247  0810                     	;# 
  1248  0811                     	;# 
  1249  0812                     	;# 
  1250  0812                     	;# 
  1251  0813                     	;# 
  1252  0814                     	;# 
  1253  0815                     	;# 
  1254  0816                     	;# 
  1255  0817                     	;# 
  1256  0818                     	;# 
  1257  0819                     	;# 
  1258  081A                     	;# 
  1259  081A                     	;# 
  1260  081B                     	;# 
  1261  081C                     	;# 
  1262  081C                     	;# 
  1263  081D                     	;# 
  1264  088C                     	;# 
  1265  088D                     	;# 
  1266  088E                     	;# 
  1267  088F                     	;# 
  1268  088F                     	;# 
  1269  0890                     	;# 
  1270  0891                     	;# 
  1271  0892                     	;# 
  1272  0893                     	;# 
  1273  0893                     	;# 
  1274  0894                     	;# 
  1275  0895                     	;# 
  1276  0896                     	;# 
  1277  0897                     	;# 
  1278  0897                     	;# 
  1279  0898                     	;# 
  1280  0899                     	;# 
  1281  0D8C                     	;# 
  1282  0D8C                     	;# 
  1283  0D8D                     	;# 
  1284  0D8E                     	;# 
  1285  0D8F                     	;# 
  1286  0D8F                     	;# 
  1287  0D90                     	;# 
  1288  0D91                     	;# 
  1289  0D92                     	;# 
  1290  0D92                     	;# 
  1291  0D93                     	;# 
  1292  0D94                     	;# 
  1293  0D95                     	;# 
  1294  0D95                     	;# 
  1295  0D96                     	;# 
  1296  0D97                     	;# 
  1297  0D98                     	;# 
  1298  0D99                     	;# 
  1299  0D9A                     	;# 
  1300  0D9B                     	;# 
  1301  0D9C                     	;# 
  1302  0D9D                     	;# 
  1303  0D9E                     	;# 
  1304  0D9E                     	;# 
  1305  0D9F                     	;# 
  1306  0DA0                     	;# 
  1307  0DA1                     	;# 
  1308  0DA1                     	;# 
  1309  0DA2                     	;# 
  1310  0DA3                     	;# 
  1311  0DA4                     	;# 
  1312  0DA4                     	;# 
  1313  0DA5                     	;# 
  1314  0DA6                     	;# 
  1315  0DA7                     	;# 
  1316  0DA7                     	;# 
  1317  0DA8                     	;# 
  1318  0DA9                     	;# 
  1319  0DAA                     	;# 
  1320  0DAB                     	;# 
  1321  0DAC                     	;# 
  1322  0DAD                     	;# 
  1323  0DAE                     	;# 
  1324  0DAF                     	;# 
  1325  0E0F                     	;# 
  1326  0E10                     	;# 
  1327  0E11                     	;# 
  1328  0E12                     	;# 
  1329  0E13                     	;# 
  1330  0E14                     	;# 
  1331  0E15                     	;# 
  1332  0E16                     	;# 
  1333  0E17                     	;# 
  1334  0E18                     	;# 
  1335  0E19                     	;# 
  1336  0E1A                     	;# 
  1337  0E1B                     	;# 
  1338  0E1C                     	;# 
  1339  0E1D                     	;# 
  1340  0E1E                     	;# 
  1341  0E1F                     	;# 
  1342  0E20                     	;# 
  1343  0E21                     	;# 
  1344  0E22                     	;# 
  1345  0E23                     	;# 
  1346  0E24                     	;# 
  1347  0E25                     	;# 
  1348  0E26                     	;# 
  1349  0E27                     	;# 
  1350  0E28                     	;# 
  1351  0E29                     	;# 
  1352  0E2A                     	;# 
  1353  0E2B                     	;# 
  1354  0E2C                     	;# 
  1355  0E2D                     	;# 
  1356  0E2E                     	;# 
  1357  0E90                     	;# 
  1358  0E91                     	;# 
  1359  0E92                     	;# 
  1360  0E94                     	;# 
  1361  0E95                     	;# 
  1362  0E9C                     	;# 
  1363  0E9D                     	;# 
  1364  0E9E                     	;# 
  1365  0E9F                     	;# 
  1366  0EA0                     	;# 
  1367  0EA1                     	;# 
  1368  0EA2                     	;# 
  1369  0EA3                     	;# 
  1370  0EA4                     	;# 
  1371  0EA5                     	;# 
  1372  0EA6                     	;# 
  1373  0EA7                     	;# 
  1374  0F0F                     	;# 
  1375  0F10                     	;# 
  1376  0F11                     	;# 
  1377  0F12                     	;# 
  1378  0F13                     	;# 
  1379  0F14                     	;# 
  1380  0F15                     	;# 
  1381  0F16                     	;# 
  1382  0F17                     	;# 
  1383  0F18                     	;# 
  1384  0F19                     	;# 
  1385  0F1A                     	;# 
  1386  0F1B                     	;# 
  1387  0F1C                     	;# 
  1388  0F1D                     	;# 
  1389  0F1E                     	;# 
  1390  0F1F                     	;# 
  1391  0F20                     	;# 
  1392  0F21                     	;# 
  1393  0F22                     	;# 
  1394  0F23                     	;# 
  1395  0F24                     	;# 
  1396  0F25                     	;# 
  1397  0F26                     	;# 
  1398  0F27                     	;# 
  1399  0F28                     	;# 
  1400  0F29                     	;# 
  1401  0F2A                     	;# 
  1402  0F2B                     	;# 
  1403  0F2C                     	;# 
  1404  0F2D                     	;# 
  1405  0F2E                     	;# 
  1406  0F2F                     	;# 
  1407  0F30                     	;# 
  1408  0F31                     	;# 
  1409  0F32                     	;# 
  1410  0F33                     	;# 
  1411  0F34                     	;# 
  1412  0F35                     	;# 
  1413  0F36                     	;# 
  1414  0F37                     	;# 
  1415  0FE4                     	;# 
  1416  0FE5                     	;# 
  1417  0FE6                     	;# 
  1418  0FE7                     	;# 
  1419  0FE8                     	;# 
  1420  0FE9                     	;# 
  1421  0FEA                     	;# 
  1422  0FEB                     	;# 
  1423  0FED                     	;# 
  1424  0FEE                     	;# 
  1425  0FEF                     	;# 
  1426  0000                     	;# 
  1427  0001                     	;# 
  1428  0002                     	;# 
  1429  0003                     	;# 
  1430  0004                     	;# 
  1431  0005                     	;# 
  1432  0006                     	;# 
  1433  0007                     	;# 
  1434  0008                     	;# 
  1435  0009                     	;# 
  1436  000A                     	;# 
  1437  000B                     	;# 
  1438  000C                     	;# 
  1439  000D                     	;# 
  1440  000E                     	;# 
  1441  0010                     	;# 
  1442  0011                     	;# 
  1443  0012                     	;# 
  1444  0013                     	;# 
  1445  0014                     	;# 
  1446  0015                     	;# 
  1447  0016                     	;# 
  1448  0016                     	;# 
  1449  0017                     	;# 
  1450  0018                     	;# 
  1451  0019                     	;# 
  1452  001A                     	;# 
  1453  001A                     	;# 
  1454  001B                     	;# 
  1455  001B                     	;# 
  1456  001C                     	;# 
  1457  001D                     	;# 
  1458  001E                     	;# 
  1459  001F                     	;# 
  1460  008C                     	;# 
  1461  008D                     	;# 
  1462  008E                     	;# 
  1463  0090                     	;# 
  1464  0091                     	;# 
  1465  0092                     	;# 
  1466  0093                     	;# 
  1467  0094                     	;# 
  1468  0095                     	;# 
  1469  0096                     	;# 
  1470  0098                     	;# 
  1471  0099                     	;# 
  1472  009A                     	;# 
  1473  009B                     	;# 
  1474  009B                     	;# 
  1475  009C                     	;# 
  1476  009D                     	;# 
  1477  009E                     	;# 
  1478  009F                     	;# 
  1479  010C                     	;# 
  1480  010D                     	;# 
  1481  010E                     	;# 
  1482  0111                     	;# 
  1483  0112                     	;# 
  1484  0113                     	;# 
  1485  0114                     	;# 
  1486  0115                     	;# 
  1487  0116                     	;# 
  1488  0117                     	;# 
  1489  0118                     	;# 
  1490  0119                     	;# 
  1491  011C                     	;# 
  1492  018C                     	;# 
  1493  018D                     	;# 
  1494  018E                     	;# 
  1495  0191                     	;# 
  1496  0191                     	;# 
  1497  0192                     	;# 
  1498  0193                     	;# 
  1499  0193                     	;# 
  1500  0194                     	;# 
  1501  0195                     	;# 
  1502  0196                     	;# 
  1503  0197                     	;# 
  1504  0199                     	;# 
  1505  0199                     	;# 
  1506  0199                     	;# 
  1507  019A                     	;# 
  1508  019A                     	;# 
  1509  019A                     	;# 
  1510  019B                     	;# 
  1511  019B                     	;# 
  1512  019B                     	;# 
  1513  019B                     	;# 
  1514  019B                     	;# 
  1515  019C                     	;# 
  1516  019C                     	;# 
  1517  019C                     	;# 
  1518  019D                     	;# 
  1519  019D                     	;# 
  1520  019D                     	;# 
  1521  019E                     	;# 
  1522  019E                     	;# 
  1523  019E                     	;# 
  1524  019F                     	;# 
  1525  019F                     	;# 
  1526  019F                     	;# 
  1527  019F                     	;# 
  1528  019F                     	;# 
  1529  020C                     	;# 
  1530  020D                     	;# 
  1531  020E                     	;# 
  1532  0211                     	;# 
  1533  0211                     	;# 
  1534  0212                     	;# 
  1535  0212                     	;# 
  1536  0213                     	;# 
  1537  0213                     	;# 
  1538  0214                     	;# 
  1539  0214                     	;# 
  1540  0215                     	;# 
  1541  0215                     	;# 
  1542  0215                     	;# 
  1543  0215                     	;# 
  1544  0216                     	;# 
  1545  0216                     	;# 
  1546  0217                     	;# 
  1547  0217                     	;# 
  1548  028C                     	;# 
  1549  028D                     	;# 
  1550  028E                     	;# 
  1551  0291                     	;# 
  1552  0291                     	;# 
  1553  0292                     	;# 
  1554  0293                     	;# 
  1555  0294                     	;# 
  1556  0298                     	;# 
  1557  0298                     	;# 
  1558  0299                     	;# 
  1559  029A                     	;# 
  1560  029B                     	;# 
  1561  029E                     	;# 
  1562  030C                     	;# 
  1563  030D                     	;# 
  1564  030E                     	;# 
  1565  038C                     	;# 
  1566  038D                     	;# 
  1567  038E                     	;# 
  1568  0391                     	;# 
  1569  0392                     	;# 
  1570  0393                     	;# 
  1571  0394                     	;# 
  1572  0395                     	;# 
  1573  0396                     	;# 
  1574  0397                     	;# 
  1575  0398                     	;# 
  1576  0399                     	;# 
  1577  040E                     	;# 
  1578  0413                     	;# 
  1579  0413                     	;# 
  1580  0414                     	;# 
  1581  0414                     	;# 
  1582  0415                     	;# 
  1583  0416                     	;# 
  1584  0417                     	;# 
  1585  0418                     	;# 
  1586  041A                     	;# 
  1587  041A                     	;# 
  1588  041B                     	;# 
  1589  041B                     	;# 
  1590  041C                     	;# 
  1591  041D                     	;# 
  1592  041E                     	;# 
  1593  041F                     	;# 
  1594  0493                     	;# 
  1595  0494                     	;# 
  1596  0495                     	;# 
  1597  0496                     	;# 
  1598  049A                     	;# 
  1599  049B                     	;# 
  1600  049C                     	;# 
  1601  049D                     	;# 
  1602  058C                     	;# 
  1603  058C                     	;# 
  1604  058D                     	;# 
  1605  058E                     	;# 
  1606  058E                     	;# 
  1607  058F                     	;# 
  1608  0590                     	;# 
  1609  0590                     	;# 
  1610  0591                     	;# 
  1611  0592                     	;# 
  1612  0592                     	;# 
  1613  0593                     	;# 
  1614  0594                     	;# 
  1615  0594                     	;# 
  1616  0595                     	;# 
  1617  0596                     	;# 
  1618  0596                     	;# 
  1619  0597                     	;# 
  1620  0598                     	;# 
  1621  0599                     	;# 
  1622  059A                     	;# 
  1623  059B                     	;# 
  1624  059B                     	;# 
  1625  059C                     	;# 
  1626  059D                     	;# 
  1627  060C                     	;# 
  1628  060C                     	;# 
  1629  060D                     	;# 
  1630  060E                     	;# 
  1631  060F                     	;# 
  1632  060F                     	;# 
  1633  0610                     	;# 
  1634  0611                     	;# 
  1635  0612                     	;# 
  1636  0613                     	;# 
  1637  0614                     	;# 
  1638  0617                     	;# 
  1639  0617                     	;# 
  1640  0618                     	;# 
  1641  0619                     	;# 
  1642  061A                     	;# 
  1643  061A                     	;# 
  1644  061B                     	;# 
  1645  061C                     	;# 
  1646  0691                     	;# 
  1647  0692                     	;# 
  1648  0693                     	;# 
  1649  0694                     	;# 
  1650  0695                     	;# 
  1651  0696                     	;# 
  1652  0697                     	;# 
  1653  0699                     	;# 
  1654  069A                     	;# 
  1655  0711                     	;# 
  1656  0712                     	;# 
  1657  0713                     	;# 
  1658  0714                     	;# 
  1659  0715                     	;# 
  1660  0718                     	;# 
  1661  0718                     	;# 
  1662  0719                     	;# 
  1663  071A                     	;# 
  1664  071A                     	;# 
  1665  071B                     	;# 
  1666  071C                     	;# 
  1667  071D                     	;# 
  1668  0791                     	;# 
  1669  0791                     	;# 
  1670  0792                     	;# 
  1671  0793                     	;# 
  1672  0793                     	;# 
  1673  0794                     	;# 
  1674  0795                     	;# 
  1675  0795                     	;# 
  1676  0796                     	;# 
  1677  0797                     	;# 
  1678  0797                     	;# 
  1679  0798                     	;# 
  1680  0799                     	;# 
  1681  079A                     	;# 
  1682  080C                     	;# 
  1683  080C                     	;# 
  1684  080D                     	;# 
  1685  080E                     	;# 
  1686  080E                     	;# 
  1687  080F                     	;# 
  1688  0810                     	;# 
  1689  0810                     	;# 
  1690  0811                     	;# 
  1691  0812                     	;# 
  1692  0812                     	;# 
  1693  0813                     	;# 
  1694  0814                     	;# 
  1695  0815                     	;# 
  1696  0816                     	;# 
  1697  0817                     	;# 
  1698  0818                     	;# 
  1699  0819                     	;# 
  1700  081A                     	;# 
  1701  081A                     	;# 
  1702  081B                     	;# 
  1703  081C                     	;# 
  1704  081C                     	;# 
  1705  081D                     	;# 
  1706  088C                     	;# 
  1707  088D                     	;# 
  1708  088E                     	;# 
  1709  088F                     	;# 
  1710  088F                     	;# 
  1711  0890                     	;# 
  1712  0891                     	;# 
  1713  0892                     	;# 
  1714  0893                     	;# 
  1715  0893                     	;# 
  1716  0894                     	;# 
  1717  0895                     	;# 
  1718  0896                     	;# 
  1719  0897                     	;# 
  1720  0897                     	;# 
  1721  0898                     	;# 
  1722  0899                     	;# 
  1723  0D8C                     	;# 
  1724  0D8C                     	;# 
  1725  0D8D                     	;# 
  1726  0D8E                     	;# 
  1727  0D8F                     	;# 
  1728  0D8F                     	;# 
  1729  0D90                     	;# 
  1730  0D91                     	;# 
  1731  0D92                     	;# 
  1732  0D92                     	;# 
  1733  0D93                     	;# 
  1734  0D94                     	;# 
  1735  0D95                     	;# 
  1736  0D95                     	;# 
  1737  0D96                     	;# 
  1738  0D97                     	;# 
  1739  0D98                     	;# 
  1740  0D99                     	;# 
  1741  0D9A                     	;# 
  1742  0D9B                     	;# 
  1743  0D9C                     	;# 
  1744  0D9D                     	;# 
  1745  0D9E                     	;# 
  1746  0D9E                     	;# 
  1747  0D9F                     	;# 
  1748  0DA0                     	;# 
  1749  0DA1                     	;# 
  1750  0DA1                     	;# 
  1751  0DA2                     	;# 
  1752  0DA3                     	;# 
  1753  0DA4                     	;# 
  1754  0DA4                     	;# 
  1755  0DA5                     	;# 
  1756  0DA6                     	;# 
  1757  0DA7                     	;# 
  1758  0DA7                     	;# 
  1759  0DA8                     	;# 
  1760  0DA9                     	;# 
  1761  0DAA                     	;# 
  1762  0DAB                     	;# 
  1763  0DAC                     	;# 
  1764  0DAD                     	;# 
  1765  0DAE                     	;# 
  1766  0DAF                     	;# 
  1767  0E0F                     	;# 
  1768  0E10                     	;# 
  1769  0E11                     	;# 
  1770  0E12                     	;# 
  1771  0E13                     	;# 
  1772  0E14                     	;# 
  1773  0E15                     	;# 
  1774  0E16                     	;# 
  1775  0E17                     	;# 
  1776  0E18                     	;# 
  1777  0E19                     	;# 
  1778  0E1A                     	;# 
  1779  0E1B                     	;# 
  1780  0E1C                     	;# 
  1781  0E1D                     	;# 
  1782  0E1E                     	;# 
  1783  0E1F                     	;# 
  1784  0E20                     	;# 
  1785  0E21                     	;# 
  1786  0E22                     	;# 
  1787  0E23                     	;# 
  1788  0E24                     	;# 
  1789  0E25                     	;# 
  1790  0E26                     	;# 
  1791  0E27                     	;# 
  1792  0E28                     	;# 
  1793  0E29                     	;# 
  1794  0E2A                     	;# 
  1795  0E2B                     	;# 
  1796  0E2C                     	;# 
  1797  0E2D                     	;# 
  1798  0E2E                     	;# 
  1799  0E90                     	;# 
  1800  0E91                     	;# 
  1801  0E92                     	;# 
  1802  0E94                     	;# 
  1803  0E95                     	;# 
  1804  0E9C                     	;# 
  1805  0E9D                     	;# 
  1806  0E9E                     	;# 
  1807  0E9F                     	;# 
  1808  0EA0                     	;# 
  1809  0EA1                     	;# 
  1810  0EA2                     	;# 
  1811  0EA3                     	;# 
  1812  0EA4                     	;# 
  1813  0EA5                     	;# 
  1814  0EA6                     	;# 
  1815  0EA7                     	;# 
  1816  0F0F                     	;# 
  1817  0F10                     	;# 
  1818  0F11                     	;# 
  1819  0F12                     	;# 
  1820  0F13                     	;# 
  1821  0F14                     	;# 
  1822  0F15                     	;# 
  1823  0F16                     	;# 
  1824  0F17                     	;# 
  1825  0F18                     	;# 
  1826  0F19                     	;# 
  1827  0F1A                     	;# 
  1828  0F1B                     	;# 
  1829  0F1C                     	;# 
  1830  0F1D                     	;# 
  1831  0F1E                     	;# 
  1832  0F1F                     	;# 
  1833  0F20                     	;# 
  1834  0F21                     	;# 
  1835  0F22                     	;# 
  1836  0F23                     	;# 
  1837  0F24                     	;# 
  1838  0F25                     	;# 
  1839  0F26                     	;# 
  1840  0F27                     	;# 
  1841  0F28                     	;# 
  1842  0F29                     	;# 
  1843  0F2A                     	;# 
  1844  0F2B                     	;# 
  1845  0F2C                     	;# 
  1846  0F2D                     	;# 
  1847  0F2E                     	;# 
  1848  0F2F                     	;# 
  1849  0F30                     	;# 
  1850  0F31                     	;# 
  1851  0F32                     	;# 
  1852  0F33                     	;# 
  1853  0F34                     	;# 
  1854  0F35                     	;# 
  1855  0F36                     	;# 
  1856  0F37                     	;# 
  1857  0FE4                     	;# 
  1858  0FE5                     	;# 
  1859  0FE6                     	;# 
  1860  0FE7                     	;# 
  1861  0FE8                     	;# 
  1862  0FE9                     	;# 
  1863  0FEA                     	;# 
  1864  0FEB                     	;# 
  1865  0FED                     	;# 
  1866  0FEE                     	;# 
  1867  0FEF                     	;# 
  1868  0000                     	;# 
  1869  0001                     	;# 
  1870  0002                     	;# 
  1871  0003                     	;# 
  1872  0004                     	;# 
  1873  0005                     	;# 
  1874  0006                     	;# 
  1875  0007                     	;# 
  1876  0008                     	;# 
  1877  0009                     	;# 
  1878  000A                     	;# 
  1879  000B                     	;# 
  1880  000C                     	;# 
  1881  000D                     	;# 
  1882  000E                     	;# 
  1883  0010                     	;# 
  1884  0011                     	;# 
  1885  0012                     	;# 
  1886  0013                     	;# 
  1887  0014                     	;# 
  1888  0015                     	;# 
  1889  0016                     	;# 
  1890  0016                     	;# 
  1891  0017                     	;# 
  1892  0018                     	;# 
  1893  0019                     	;# 
  1894  001A                     	;# 
  1895  001A                     	;# 
  1896  001B                     	;# 
  1897  001B                     	;# 
  1898  001C                     	;# 
  1899  001D                     	;# 
  1900  001E                     	;# 
  1901  001F                     	;# 
  1902  008C                     	;# 
  1903  008D                     	;# 
  1904  008E                     	;# 
  1905  0090                     	;# 
  1906  0091                     	;# 
  1907  0092                     	;# 
  1908  0093                     	;# 
  1909  0094                     	;# 
  1910  0095                     	;# 
  1911  0096                     	;# 
  1912  0098                     	;# 
  1913  0099                     	;# 
  1914  009A                     	;# 
  1915  009B                     	;# 
  1916  009B                     	;# 
  1917  009C                     	;# 
  1918  009D                     	;# 
  1919  009E                     	;# 
  1920  009F                     	;# 
  1921  010C                     	;# 
  1922  010D                     	;# 
  1923  010E                     	;# 
  1924  0111                     	;# 
  1925  0112                     	;# 
  1926  0113                     	;# 
  1927  0114                     	;# 
  1928  0115                     	;# 
  1929  0116                     	;# 
  1930  0117                     	;# 
  1931  0118                     	;# 
  1932  0119                     	;# 
  1933  011C                     	;# 
  1934  018C                     	;# 
  1935  018D                     	;# 
  1936  018E                     	;# 
  1937  0191                     	;# 
  1938  0191                     	;# 
  1939  0192                     	;# 
  1940  0193                     	;# 
  1941  0193                     	;# 
  1942  0194                     	;# 
  1943  0195                     	;# 
  1944  0196                     	;# 
  1945  0197                     	;# 
  1946  0199                     	;# 
  1947  0199                     	;# 
  1948  0199                     	;# 
  1949  019A                     	;# 
  1950  019A                     	;# 
  1951  019A                     	;# 
  1952  019B                     	;# 
  1953  019B                     	;# 
  1954  019B                     	;# 
  1955  019B                     	;# 
  1956  019B                     	;# 
  1957  019C                     	;# 
  1958  019C                     	;# 
  1959  019C                     	;# 
  1960  019D                     	;# 
  1961  019D                     	;# 
  1962  019D                     	;# 
  1963  019E                     	;# 
  1964  019E                     	;# 
  1965  019E                     	;# 
  1966  019F                     	;# 
  1967  019F                     	;# 
  1968  019F                     	;# 
  1969  019F                     	;# 
  1970  019F                     	;# 
  1971  020C                     	;# 
  1972  020D                     	;# 
  1973  020E                     	;# 
  1974  0211                     	;# 
  1975  0211                     	;# 
  1976  0212                     	;# 
  1977  0212                     	;# 
  1978  0213                     	;# 
  1979  0213                     	;# 
  1980  0214                     	;# 
  1981  0214                     	;# 
  1982  0215                     	;# 
  1983  0215                     	;# 
  1984  0215                     	;# 
  1985  0215                     	;# 
  1986  0216                     	;# 
  1987  0216                     	;# 
  1988  0217                     	;# 
  1989  0217                     	;# 
  1990  028C                     	;# 
  1991  028D                     	;# 
  1992  028E                     	;# 
  1993  0291                     	;# 
  1994  0291                     	;# 
  1995  0292                     	;# 
  1996  0293                     	;# 
  1997  0294                     	;# 
  1998  0298                     	;# 
  1999  0298                     	;# 
  2000  0299                     	;# 
  2001  029A                     	;# 
  2002  029B                     	;# 
  2003  029E                     	;# 
  2004  030C                     	;# 
  2005  030D                     	;# 
  2006  030E                     	;# 
  2007  038C                     	;# 
  2008  038D                     	;# 
  2009  038E                     	;# 
  2010  0391                     	;# 
  2011  0392                     	;# 
  2012  0393                     	;# 
  2013  0394                     	;# 
  2014  0395                     	;# 
  2015  0396                     	;# 
  2016  0397                     	;# 
  2017  0398                     	;# 
  2018  0399                     	;# 
  2019  040E                     	;# 
  2020  0413                     	;# 
  2021  0413                     	;# 
  2022  0414                     	;# 
  2023  0414                     	;# 
  2024  0415                     	;# 
  2025  0416                     	;# 
  2026  0417                     	;# 
  2027  0418                     	;# 
  2028  041A                     	;# 
  2029  041A                     	;# 
  2030  041B                     	;# 
  2031  041B                     	;# 
  2032  041C                     	;# 
  2033  041D                     	;# 
  2034  041E                     	;# 
  2035  041F                     	;# 
  2036  0493                     	;# 
  2037  0494                     	;# 
  2038  0495                     	;# 
  2039  0496                     	;# 
  2040  049A                     	;# 
  2041  049B                     	;# 
  2042  049C                     	;# 
  2043  049D                     	;# 
  2044  058C                     	;# 
  2045  058C                     	;# 
  2046  058D                     	;# 
  2047  058E                     	;# 
  2048  058E                     	;# 
  2049  058F                     	;# 
  2050  0590                     	;# 
  2051  0590                     	;# 
  2052  0591                     	;# 
  2053  0592                     	;# 
  2054  0592                     	;# 
  2055  0593                     	;# 
  2056  0594                     	;# 
  2057  0594                     	;# 
  2058  0595                     	;# 
  2059  0596                     	;# 
  2060  0596                     	;# 
  2061  0597                     	;# 
  2062  0598                     	;# 
  2063  0599                     	;# 
  2064  059A                     	;# 
  2065  059B                     	;# 
  2066  059B                     	;# 
  2067  059C                     	;# 
  2068  059D                     	;# 
  2069  060C                     	;# 
  2070  060C                     	;# 
  2071  060D                     	;# 
  2072  060E                     	;# 
  2073  060F                     	;# 
  2074  060F                     	;# 
  2075  0610                     	;# 
  2076  0611                     	;# 
  2077  0612                     	;# 
  2078  0613                     	;# 
  2079  0614                     	;# 
  2080  0617                     	;# 
  2081  0617                     	;# 
  2082  0618                     	;# 
  2083  0619                     	;# 
  2084  061A                     	;# 
  2085  061A                     	;# 
  2086  061B                     	;# 
  2087  061C                     	;# 
  2088  0691                     	;# 
  2089  0692                     	;# 
  2090  0693                     	;# 
  2091  0694                     	;# 
  2092  0695                     	;# 
  2093  0696                     	;# 
  2094  0697                     	;# 
  2095  0699                     	;# 
  2096  069A                     	;# 
  2097  0711                     	;# 
  2098  0712                     	;# 
  2099  0713                     	;# 
  2100  0714                     	;# 
  2101  0715                     	;# 
  2102  0718                     	;# 
  2103  0718                     	;# 
  2104  0719                     	;# 
  2105  071A                     	;# 
  2106  071A                     	;# 
  2107  071B                     	;# 
  2108  071C                     	;# 
  2109  071D                     	;# 
  2110  0791                     	;# 
  2111  0791                     	;# 
  2112  0792                     	;# 
  2113  0793                     	;# 
  2114  0793                     	;# 
  2115  0794                     	;# 
  2116  0795                     	;# 
  2117  0795                     	;# 
  2118  0796                     	;# 
  2119  0797                     	;# 
  2120  0797                     	;# 
  2121  0798                     	;# 
  2122  0799                     	;# 
  2123  079A                     	;# 
  2124  080C                     	;# 
  2125  080C                     	;# 
  2126  080D                     	;# 
  2127  080E                     	;# 
  2128  080E                     	;# 
  2129  080F                     	;# 
  2130  0810                     	;# 
  2131  0810                     	;# 
  2132  0811                     	;# 
  2133  0812                     	;# 
  2134  0812                     	;# 
  2135  0813                     	;# 
  2136  0814                     	;# 
  2137  0815                     	;# 
  2138  0816                     	;# 
  2139  0817                     	;# 
  2140  0818                     	;# 
  2141  0819                     	;# 
  2142  081A                     	;# 
  2143  081A                     	;# 
  2144  081B                     	;# 
  2145  081C                     	;# 
  2146  081C                     	;# 
  2147  081D                     	;# 
  2148  088C                     	;# 
  2149  088D                     	;# 
  2150  088E                     	;# 
  2151  088F                     	;# 
  2152  088F                     	;# 
  2153  0890                     	;# 
  2154  0891                     	;# 
  2155  0892                     	;# 
  2156  0893                     	;# 
  2157  0893                     	;# 
  2158  0894                     	;# 
  2159  0895                     	;# 
  2160  0896                     	;# 
  2161  0897                     	;# 
  2162  0897                     	;# 
  2163  0898                     	;# 
  2164  0899                     	;# 
  2165  0D8C                     	;# 
  2166  0D8C                     	;# 
  2167  0D8D                     	;# 
  2168  0D8E                     	;# 
  2169  0D8F                     	;# 
  2170  0D8F                     	;# 
  2171  0D90                     	;# 
  2172  0D91                     	;# 
  2173  0D92                     	;# 
  2174  0D92                     	;# 
  2175  0D93                     	;# 
  2176  0D94                     	;# 
  2177  0D95                     	;# 
  2178  0D95                     	;# 
  2179  0D96                     	;# 
  2180  0D97                     	;# 
  2181  0D98                     	;# 
  2182  0D99                     	;# 
  2183  0D9A                     	;# 
  2184  0D9B                     	;# 
  2185  0D9C                     	;# 
  2186  0D9D                     	;# 
  2187  0D9E                     	;# 
  2188  0D9E                     	;# 
  2189  0D9F                     	;# 
  2190  0DA0                     	;# 
  2191  0DA1                     	;# 
  2192  0DA1                     	;# 
  2193  0DA2                     	;# 
  2194  0DA3                     	;# 
  2195  0DA4                     	;# 
  2196  0DA4                     	;# 
  2197  0DA5                     	;# 
  2198  0DA6                     	;# 
  2199  0DA7                     	;# 
  2200  0DA7                     	;# 
  2201  0DA8                     	;# 
  2202  0DA9                     	;# 
  2203  0DAA                     	;# 
  2204  0DAB                     	;# 
  2205  0DAC                     	;# 
  2206  0DAD                     	;# 
  2207  0DAE                     	;# 
  2208  0DAF                     	;# 
  2209  0E0F                     	;# 
  2210  0E10                     	;# 
  2211  0E11                     	;# 
  2212  0E12                     	;# 
  2213  0E13                     	;# 
  2214  0E14                     	;# 
  2215  0E15                     	;# 
  2216  0E16                     	;# 
  2217  0E17                     	;# 
  2218  0E18                     	;# 
  2219  0E19                     	;# 
  2220  0E1A                     	;# 
  2221  0E1B                     	;# 
  2222  0E1C                     	;# 
  2223  0E1D                     	;# 
  2224  0E1E                     	;# 
  2225  0E1F                     	;# 
  2226  0E20                     	;# 
  2227  0E21                     	;# 
  2228  0E22                     	;# 
  2229  0E23                     	;# 
  2230  0E24                     	;# 
  2231  0E25                     	;# 
  2232  0E26                     	;# 
  2233  0E27                     	;# 
  2234  0E28                     	;# 
  2235  0E29                     	;# 
  2236  0E2A                     	;# 
  2237  0E2B                     	;# 
  2238  0E2C                     	;# 
  2239  0E2D                     	;# 
  2240  0E2E                     	;# 
  2241  0E90                     	;# 
  2242  0E91                     	;# 
  2243  0E92                     	;# 
  2244  0E94                     	;# 
  2245  0E95                     	;# 
  2246  0E9C                     	;# 
  2247  0E9D                     	;# 
  2248  0E9E                     	;# 
  2249  0E9F                     	;# 
  2250  0EA0                     	;# 
  2251  0EA1                     	;# 
  2252  0EA2                     	;# 
  2253  0EA3                     	;# 
  2254  0EA4                     	;# 
  2255  0EA5                     	;# 
  2256  0EA6                     	;# 
  2257  0EA7                     	;# 
  2258  0F0F                     	;# 
  2259  0F10                     	;# 
  2260  0F11                     	;# 
  2261  0F12                     	;# 
  2262  0F13                     	;# 
  2263  0F14                     	;# 
  2264  0F15                     	;# 
  2265  0F16                     	;# 
  2266  0F17                     	;# 
  2267  0F18                     	;# 
  2268  0F19                     	;# 
  2269  0F1A                     	;# 
  2270  0F1B                     	;# 
  2271  0F1C                     	;# 
  2272  0F1D                     	;# 
  2273  0F1E                     	;# 
  2274  0F1F                     	;# 
  2275  0F20                     	;# 
  2276  0F21                     	;# 
  2277  0F22                     	;# 
  2278  0F23                     	;# 
  2279  0F24                     	;# 
  2280  0F25                     	;# 
  2281  0F26                     	;# 
  2282  0F27                     	;# 
  2283  0F28                     	;# 
  2284  0F29                     	;# 
  2285  0F2A                     	;# 
  2286  0F2B                     	;# 
  2287  0F2C                     	;# 
  2288  0F2D                     	;# 
  2289  0F2E                     	;# 
  2290  0F2F                     	;# 
  2291  0F30                     	;# 
  2292  0F31                     	;# 
  2293  0F32                     	;# 
  2294  0F33                     	;# 
  2295  0F34                     	;# 
  2296  0F35                     	;# 
  2297  0F36                     	;# 
  2298  0F37                     	;# 
  2299  0FE4                     	;# 
  2300  0FE5                     	;# 
  2301  0FE6                     	;# 
  2302  0FE7                     	;# 
  2303  0FE8                     	;# 
  2304  0FE9                     	;# 
  2305  0FEA                     	;# 
  2306  0FEB                     	;# 
  2307  0FED                     	;# 
  2308  0FEE                     	;# 
  2309  0FEF                     	;# 
  2310  0000                     	;# 
  2311  0001                     	;# 
  2312  0002                     	;# 
  2313  0003                     	;# 
  2314  0004                     	;# 
  2315  0005                     	;# 
  2316  0006                     	;# 
  2317  0007                     	;# 
  2318  0008                     	;# 
  2319  0009                     	;# 
  2320  000A                     	;# 
  2321  000B                     	;# 
  2322  000C                     	;# 
  2323  000D                     	;# 
  2324  000E                     	;# 
  2325  0010                     	;# 
  2326  0011                     	;# 
  2327  0012                     	;# 
  2328  0013                     	;# 
  2329  0014                     	;# 
  2330  0015                     	;# 
  2331  0016                     	;# 
  2332  0016                     	;# 
  2333  0017                     	;# 
  2334  0018                     	;# 
  2335  0019                     	;# 
  2336  001A                     	;# 
  2337  001A                     	;# 
  2338  001B                     	;# 
  2339  001B                     	;# 
  2340  001C                     	;# 
  2341  001D                     	;# 
  2342  001E                     	;# 
  2343  001F                     	;# 
  2344  008C                     	;# 
  2345  008D                     	;# 
  2346  008E                     	;# 
  2347  0090                     	;# 
  2348  0091                     	;# 
  2349  0092                     	;# 
  2350  0093                     	;# 
  2351  0094                     	;# 
  2352  0095                     	;# 
  2353  0096                     	;# 
  2354  0098                     	;# 
  2355  0099                     	;# 
  2356  009A                     	;# 
  2357  009B                     	;# 
  2358  009B                     	;# 
  2359  009C                     	;# 
  2360  009D                     	;# 
  2361  009E                     	;# 
  2362  009F                     	;# 
  2363  010C                     	;# 
  2364  010D                     	;# 
  2365  010E                     	;# 
  2366  0111                     	;# 
  2367  0112                     	;# 
  2368  0113                     	;# 
  2369  0114                     	;# 
  2370  0115                     	;# 
  2371  0116                     	;# 
  2372  0117                     	;# 
  2373  0118                     	;# 
  2374  0119                     	;# 
  2375  011C                     	;# 
  2376  018C                     	;# 
  2377  018D                     	;# 
  2378  018E                     	;# 
  2379  0191                     	;# 
  2380  0191                     	;# 
  2381  0192                     	;# 
  2382  0193                     	;# 
  2383  0193                     	;# 
  2384  0194                     	;# 
  2385  0195                     	;# 
  2386  0196                     	;# 
  2387  0197                     	;# 
  2388  0199                     	;# 
  2389  0199                     	;# 
  2390  0199                     	;# 
  2391  019A                     	;# 
  2392  019A                     	;# 
  2393  019A                     	;# 
  2394  019B                     	;# 
  2395  019B                     	;# 
  2396  019B                     	;# 
  2397  019B                     	;# 
  2398  019B                     	;# 
  2399  019C                     	;# 
  2400  019C                     	;# 
  2401  019C                     	;# 
  2402  019D                     	;# 
  2403  019D                     	;# 
  2404  019D                     	;# 
  2405  019E                     	;# 
  2406  019E                     	;# 
  2407  019E                     	;# 
  2408  019F                     	;# 
  2409  019F                     	;# 
  2410  019F                     	;# 
  2411  019F                     	;# 
  2412  019F                     	;# 
  2413  020C                     	;# 
  2414  020D                     	;# 
  2415  020E                     	;# 
  2416  0211                     	;# 
  2417  0211                     	;# 
  2418  0212                     	;# 
  2419  0212                     	;# 
  2420  0213                     	;# 
  2421  0213                     	;# 
  2422  0214                     	;# 
  2423  0214                     	;# 
  2424  0215                     	;# 
  2425  0215                     	;# 
  2426  0215                     	;# 
  2427  0215                     	;# 
  2428  0216                     	;# 
  2429  0216                     	;# 
  2430  0217                     	;# 
  2431  0217                     	;# 
  2432  028C                     	;# 
  2433  028D                     	;# 
  2434  028E                     	;# 
  2435  0291                     	;# 
  2436  0291                     	;# 
  2437  0292                     	;# 
  2438  0293                     	;# 
  2439  0294                     	;# 
  2440  0298                     	;# 
  2441  0298                     	;# 
  2442  0299                     	;# 
  2443  029A                     	;# 
  2444  029B                     	;# 
  2445  029E                     	;# 
  2446  030C                     	;# 
  2447  030D                     	;# 
  2448  030E                     	;# 
  2449  038C                     	;# 
  2450  038D                     	;# 
  2451  038E                     	;# 
  2452  0391                     	;# 
  2453  0392                     	;# 
  2454  0393                     	;# 
  2455  0394                     	;# 
  2456  0395                     	;# 
  2457  0396                     	;# 
  2458  0397                     	;# 
  2459  0398                     	;# 
  2460  0399                     	;# 
  2461  040E                     	;# 
  2462  0413                     	;# 
  2463  0413                     	;# 
  2464  0414                     	;# 
  2465  0414                     	;# 
  2466  0415                     	;# 
  2467  0416                     	;# 
  2468  0417                     	;# 
  2469  0418                     	;# 
  2470  041A                     	;# 
  2471  041A                     	;# 
  2472  041B                     	;# 
  2473  041B                     	;# 
  2474  041C                     	;# 
  2475  041D                     	;# 
  2476  041E                     	;# 
  2477  041F                     	;# 
  2478  0493                     	;# 
  2479  0494                     	;# 
  2480  0495                     	;# 
  2481  0496                     	;# 
  2482  049A                     	;# 
  2483  049B                     	;# 
  2484  049C                     	;# 
  2485  049D                     	;# 
  2486  058C                     	;# 
  2487  058C                     	;# 
  2488  058D                     	;# 
  2489  058E                     	;# 
  2490  058E                     	;# 
  2491  058F                     	;# 
  2492  0590                     	;# 
  2493  0590                     	;# 
  2494  0591                     	;# 
  2495  0592                     	;# 
  2496  0592                     	;# 
  2497  0593                     	;# 
  2498  0594                     	;# 
  2499  0594                     	;# 
  2500  0595                     	;# 
  2501  0596                     	;# 
  2502  0596                     	;# 
  2503  0597                     	;# 
  2504  0598                     	;# 
  2505  0599                     	;# 
  2506  059A                     	;# 
  2507  059B                     	;# 
  2508  059B                     	;# 
  2509  059C                     	;# 
  2510  059D                     	;# 
  2511  060C                     	;# 
  2512  060C                     	;# 
  2513  060D                     	;# 
  2514  060E                     	;# 
  2515  060F                     	;# 
  2516  060F                     	;# 
  2517  0610                     	;# 
  2518  0611                     	;# 
  2519  0612                     	;# 
  2520  0613                     	;# 
  2521  0614                     	;# 
  2522  0617                     	;# 
  2523  0617                     	;# 
  2524  0618                     	;# 
  2525  0619                     	;# 
  2526  061A                     	;# 
  2527  061A                     	;# 
  2528  061B                     	;# 
  2529  061C                     	;# 
  2530  0691                     	;# 
  2531  0692                     	;# 
  2532  0693                     	;# 
  2533  0694                     	;# 
  2534  0695                     	;# 
  2535  0696                     	;# 
  2536  0697                     	;# 
  2537  0699                     	;# 
  2538  069A                     	;# 
  2539  0711                     	;# 
  2540  0712                     	;# 
  2541  0713                     	;# 
  2542  0714                     	;# 
  2543  0715                     	;# 
  2544  0718                     	;# 
  2545  0718                     	;# 
  2546  0719                     	;# 
  2547  071A                     	;# 
  2548  071A                     	;# 
  2549  071B                     	;# 
  2550  071C                     	;# 
  2551  071D                     	;# 
  2552  0791                     	;# 
  2553  0791                     	;# 
  2554  0792                     	;# 
  2555  0793                     	;# 
  2556  0793                     	;# 
  2557  0794                     	;# 
  2558  0795                     	;# 
  2559  0795                     	;# 
  2560  0796                     	;# 
  2561  0797                     	;# 
  2562  0797                     	;# 
  2563  0798                     	;# 
  2564  0799                     	;# 
  2565  079A                     	;# 
  2566  080C                     	;# 
  2567  080C                     	;# 
  2568  080D                     	;# 
  2569  080E                     	;# 
  2570  080E                     	;# 
  2571  080F                     	;# 
  2572  0810                     	;# 
  2573  0810                     	;# 
  2574  0811                     	;# 
  2575  0812                     	;# 
  2576  0812                     	;# 
  2577  0813                     	;# 
  2578  0814                     	;# 
  2579  0815                     	;# 
  2580  0816                     	;# 
  2581  0817                     	;# 
  2582  0818                     	;# 
  2583  0819                     	;# 
  2584  081A                     	;# 
  2585  081A                     	;# 
  2586  081B                     	;# 
  2587  081C                     	;# 
  2588  081C                     	;# 
  2589  081D                     	;# 
  2590  088C                     	;# 
  2591  088D                     	;# 
  2592  088E                     	;# 
  2593  088F                     	;# 
  2594  088F                     	;# 
  2595  0890                     	;# 
  2596  0891                     	;# 
  2597  0892                     	;# 
  2598  0893                     	;# 
  2599  0893                     	;# 
  2600  0894                     	;# 
  2601  0895                     	;# 
  2602  0896                     	;# 
  2603  0897                     	;# 
  2604  0897                     	;# 
  2605  0898                     	;# 
  2606  0899                     	;# 
  2607  0D8C                     	;# 
  2608  0D8C                     	;# 
  2609  0D8D                     	;# 
  2610  0D8E                     	;# 
  2611  0D8F                     	;# 
  2612  0D8F                     	;# 
  2613  0D90                     	;# 
  2614  0D91                     	;# 
  2615  0D92                     	;# 
  2616  0D92                     	;# 
  2617  0D93                     	;# 
  2618  0D94                     	;# 
  2619  0D95                     	;# 
  2620  0D95                     	;# 
  2621  0D96                     	;# 
  2622  0D97                     	;# 
  2623  0D98                     	;# 
  2624  0D99                     	;# 
  2625  0D9A                     	;# 
  2626  0D9B                     	;# 
  2627  0D9C                     	;# 
  2628  0D9D                     	;# 
  2629  0D9E                     	;# 
  2630  0D9E                     	;# 
  2631  0D9F                     	;# 
  2632  0DA0                     	;# 
  2633  0DA1                     	;# 
  2634  0DA1                     	;# 
  2635  0DA2                     	;# 
  2636  0DA3                     	;# 
  2637  0DA4                     	;# 
  2638  0DA4                     	;# 
  2639  0DA5                     	;# 
  2640  0DA6                     	;# 
  2641  0DA7                     	;# 
  2642  0DA7                     	;# 
  2643  0DA8                     	;# 
  2644  0DA9                     	;# 
  2645  0DAA                     	;# 
  2646  0DAB                     	;# 
  2647  0DAC                     	;# 
  2648  0DAD                     	;# 
  2649  0DAE                     	;# 
  2650  0DAF                     	;# 
  2651  0E0F                     	;# 
  2652  0E10                     	;# 
  2653  0E11                     	;# 
  2654  0E12                     	;# 
  2655  0E13                     	;# 
  2656  0E14                     	;# 
  2657  0E15                     	;# 
  2658  0E16                     	;# 
  2659  0E17                     	;# 
  2660  0E18                     	;# 
  2661  0E19                     	;# 
  2662  0E1A                     	;# 
  2663  0E1B                     	;# 
  2664  0E1C                     	;# 
  2665  0E1D                     	;# 
  2666  0E1E                     	;# 
  2667  0E1F                     	;# 
  2668  0E20                     	;# 
  2669  0E21                     	;# 
  2670  0E22                     	;# 
  2671  0E23                     	;# 
  2672  0E24                     	;# 
  2673  0E25                     	;# 
  2674  0E26                     	;# 
  2675  0E27                     	;# 
  2676  0E28                     	;# 
  2677  0E29                     	;# 
  2678  0E2A                     	;# 
  2679  0E2B                     	;# 
  2680  0E2C                     	;# 
  2681  0E2D                     	;# 
  2682  0E2E                     	;# 
  2683  0E90                     	;# 
  2684  0E91                     	;# 
  2685  0E92                     	;# 
  2686  0E94                     	;# 
  2687  0E95                     	;# 
  2688  0E9C                     	;# 
  2689  0E9D                     	;# 
  2690  0E9E                     	;# 
  2691  0E9F                     	;# 
  2692  0EA0                     	;# 
  2693  0EA1                     	;# 
  2694  0EA2                     	;# 
  2695  0EA3                     	;# 
  2696  0EA4                     	;# 
  2697  0EA5                     	;# 
  2698  0EA6                     	;# 
  2699  0EA7                     	;# 
  2700  0F0F                     	;# 
  2701  0F10                     	;# 
  2702  0F11                     	;# 
  2703  0F12                     	;# 
  2704  0F13                     	;# 
  2705  0F14                     	;# 
  2706  0F15                     	;# 
  2707  0F16                     	;# 
  2708  0F17                     	;# 
  2709  0F18                     	;# 
  2710  0F19                     	;# 
  2711  0F1A                     	;# 
  2712  0F1B                     	;# 
  2713  0F1C                     	;# 
  2714  0F1D                     	;# 
  2715  0F1E                     	;# 
  2716  0F1F                     	;# 
  2717  0F20                     	;# 
  2718  0F21                     	;# 
  2719  0F22                     	;# 
  2720  0F23                     	;# 
  2721  0F24                     	;# 
  2722  0F25                     	;# 
  2723  0F26                     	;# 
  2724  0F27                     	;# 
  2725  0F28                     	;# 
  2726  0F29                     	;# 
  2727  0F2A                     	;# 
  2728  0F2B                     	;# 
  2729  0F2C                     	;# 
  2730  0F2D                     	;# 
  2731  0F2E                     	;# 
  2732  0F2F                     	;# 
  2733  0F30                     	;# 
  2734  0F31                     	;# 
  2735  0F32                     	;# 
  2736  0F33                     	;# 
  2737  0F34                     	;# 
  2738  0F35                     	;# 
  2739  0F36                     	;# 
  2740  0F37                     	;# 
  2741  0FE4                     	;# 
  2742  0FE5                     	;# 
  2743  0FE6                     	;# 
  2744  0FE7                     	;# 
  2745  0FE8                     	;# 
  2746  0FE9                     	;# 
  2747  0FEA                     	;# 
  2748  0FEB                     	;# 
  2749  0FED                     	;# 
  2750  0FEE                     	;# 
  2751  0FEF                     	;# 
  2752  0000                     	;# 
  2753  0001                     	;# 
  2754  0002                     	;# 
  2755  0003                     	;# 
  2756  0004                     	;# 
  2757  0005                     	;# 
  2758  0006                     	;# 
  2759  0007                     	;# 
  2760  0008                     	;# 
  2761  0009                     	;# 
  2762  000A                     	;# 
  2763  000B                     	;# 
  2764  000C                     	;# 
  2765  000D                     	;# 
  2766  000E                     	;# 
  2767  0010                     	;# 
  2768  0011                     	;# 
  2769  0012                     	;# 
  2770  0013                     	;# 
  2771  0014                     	;# 
  2772  0015                     	;# 
  2773  0016                     	;# 
  2774  0016                     	;# 
  2775  0017                     	;# 
  2776  0018                     	;# 
  2777  0019                     	;# 
  2778  001A                     	;# 
  2779  001A                     	;# 
  2780  001B                     	;# 
  2781  001B                     	;# 
  2782  001C                     	;# 
  2783  001D                     	;# 
  2784  001E                     	;# 
  2785  001F                     	;# 
  2786  008C                     	;# 
  2787  008D                     	;# 
  2788  008E                     	;# 
  2789  0090                     	;# 
  2790  0091                     	;# 
  2791  0092                     	;# 
  2792  0093                     	;# 
  2793  0094                     	;# 
  2794  0095                     	;# 
  2795  0096                     	;# 
  2796  0098                     	;# 
  2797  0099                     	;# 
  2798  009A                     	;# 
  2799  009B                     	;# 
  2800  009B                     	;# 
  2801  009C                     	;# 
  2802  009D                     	;# 
  2803  009E                     	;# 
  2804  009F                     	;# 
  2805  010C                     	;# 
  2806  010D                     	;# 
  2807  010E                     	;# 
  2808  0111                     	;# 
  2809  0112                     	;# 
  2810  0113                     	;# 
  2811  0114                     	;# 
  2812  0115                     	;# 
  2813  0116                     	;# 
  2814  0117                     	;# 
  2815  0118                     	;# 
  2816  0119                     	;# 
  2817  011C                     	;# 
  2818  018C                     	;# 
  2819  018D                     	;# 
  2820  018E                     	;# 
  2821  0191                     	;# 
  2822  0191                     	;# 
  2823  0192                     	;# 
  2824  0193                     	;# 
  2825  0193                     	;# 
  2826  0194                     	;# 
  2827  0195                     	;# 
  2828  0196                     	;# 
  2829  0197                     	;# 
  2830  0199                     	;# 
  2831  0199                     	;# 
  2832  0199                     	;# 
  2833  019A                     	;# 
  2834  019A                     	;# 
  2835  019A                     	;# 
  2836  019B                     	;# 
  2837  019B                     	;# 
  2838  019B                     	;# 
  2839  019B                     	;# 
  2840  019B                     	;# 
  2841  019C                     	;# 
  2842  019C                     	;# 
  2843  019C                     	;# 
  2844  019D                     	;# 
  2845  019D                     	;# 
  2846  019D                     	;# 
  2847  019E                     	;# 
  2848  019E                     	;# 
  2849  019E                     	;# 
  2850  019F                     	;# 
  2851  019F                     	;# 
  2852  019F                     	;# 
  2853  019F                     	;# 
  2854  019F                     	;# 
  2855  020C                     	;# 
  2856  020D                     	;# 
  2857  020E                     	;# 
  2858  0211                     	;# 
  2859  0211                     	;# 
  2860  0212                     	;# 
  2861  0212                     	;# 
  2862  0213                     	;# 
  2863  0213                     	;# 
  2864  0214                     	;# 
  2865  0214                     	;# 
  2866  0215                     	;# 
  2867  0215                     	;# 
  2868  0215                     	;# 
  2869  0215                     	;# 
  2870  0216                     	;# 
  2871  0216                     	;# 
  2872  0217                     	;# 
  2873  0217                     	;# 
  2874  028C                     	;# 
  2875  028D                     	;# 
  2876  028E                     	;# 
  2877  0291                     	;# 
  2878  0291                     	;# 
  2879  0292                     	;# 
  2880  0293                     	;# 
  2881  0294                     	;# 
  2882  0298                     	;# 
  2883  0298                     	;# 
  2884  0299                     	;# 
  2885  029A                     	;# 
  2886  029B                     	;# 
  2887  029E                     	;# 
  2888  030C                     	;# 
  2889  030D                     	;# 
  2890  030E                     	;# 
  2891  038C                     	;# 
  2892  038D                     	;# 
  2893  038E                     	;# 
  2894  0391                     	;# 
  2895  0392                     	;# 
  2896  0393                     	;# 
  2897  0394                     	;# 
  2898  0395                     	;# 
  2899  0396                     	;# 
  2900  0397                     	;# 
  2901  0398                     	;# 
  2902  0399                     	;# 
  2903  040E                     	;# 
  2904  0413                     	;# 
  2905  0413                     	;# 
  2906  0414                     	;# 
  2907  0414                     	;# 
  2908  0415                     	;# 
  2909  0416                     	;# 
  2910  0417                     	;# 
  2911  0418                     	;# 
  2912  041A                     	;# 
  2913  041A                     	;# 
  2914  041B                     	;# 
  2915  041B                     	;# 
  2916  041C                     	;# 
  2917  041D                     	;# 
  2918  041E                     	;# 
  2919  041F                     	;# 
  2920  0493                     	;# 
  2921  0494                     	;# 
  2922  0495                     	;# 
  2923  0496                     	;# 
  2924  049A                     	;# 
  2925  049B                     	;# 
  2926  049C                     	;# 
  2927  049D                     	;# 
  2928  058C                     	;# 
  2929  058C                     	;# 
  2930  058D                     	;# 
  2931  058E                     	;# 
  2932  058E                     	;# 
  2933  058F                     	;# 
  2934  0590                     	;# 
  2935  0590                     	;# 
  2936  0591                     	;# 
  2937  0592                     	;# 
  2938  0592                     	;# 
  2939  0593                     	;# 
  2940  0594                     	;# 
  2941  0594                     	;# 
  2942  0595                     	;# 
  2943  0596                     	;# 
  2944  0596                     	;# 
  2945  0597                     	;# 
  2946  0598                     	;# 
  2947  0599                     	;# 
  2948  059A                     	;# 
  2949  059B                     	;# 
  2950  059B                     	;# 
  2951  059C                     	;# 
  2952  059D                     	;# 
  2953  060C                     	;# 
  2954  060C                     	;# 
  2955  060D                     	;# 
  2956  060E                     	;# 
  2957  060F                     	;# 
  2958  060F                     	;# 
  2959  0610                     	;# 
  2960  0611                     	;# 
  2961  0612                     	;# 
  2962  0613                     	;# 
  2963  0614                     	;# 
  2964  0617                     	;# 
  2965  0617                     	;# 
  2966  0618                     	;# 
  2967  0619                     	;# 
  2968  061A                     	;# 
  2969  061A                     	;# 
  2970  061B                     	;# 
  2971  061C                     	;# 
  2972  0691                     	;# 
  2973  0692                     	;# 
  2974  0693                     	;# 
  2975  0694                     	;# 
  2976  0695                     	;# 
  2977  0696                     	;# 
  2978  0697                     	;# 
  2979  0699                     	;# 
  2980  069A                     	;# 
  2981  0711                     	;# 
  2982  0712                     	;# 
  2983  0713                     	;# 
  2984  0714                     	;# 
  2985  0715                     	;# 
  2986  0718                     	;# 
  2987  0718                     	;# 
  2988  0719                     	;# 
  2989  071A                     	;# 
  2990  071A                     	;# 
  2991  071B                     	;# 
  2992  071C                     	;# 
  2993  071D                     	;# 
  2994  0791                     	;# 
  2995  0791                     	;# 
  2996  0792                     	;# 
  2997  0793                     	;# 
  2998  0793                     	;# 
  2999  0794                     	;# 
  3000  0795                     	;# 
  3001  0795                     	;# 
  3002  0796                     	;# 
  3003  0797                     	;# 
  3004  0797                     	;# 
  3005  0798                     	;# 
  3006  0799                     	;# 
  3007  079A                     	;# 
  3008  080C                     	;# 
  3009  080C                     	;# 
  3010  080D                     	;# 
  3011  080E                     	;# 
  3012  080E                     	;# 
  3013  080F                     	;# 
  3014  0810                     	;# 
  3015  0810                     	;# 
  3016  0811                     	;# 
  3017  0812                     	;# 
  3018  0812                     	;# 
  3019  0813                     	;# 
  3020  0814                     	;# 
  3021  0815                     	;# 
  3022  0816                     	;# 
  3023  0817                     	;# 
  3024  0818                     	;# 
  3025  0819                     	;# 
  3026  081A                     	;# 
  3027  081A                     	;# 
  3028  081B                     	;# 
  3029  081C                     	;# 
  3030  081C                     	;# 
  3031  081D                     	;# 
  3032  088C                     	;# 
  3033  088D                     	;# 
  3034  088E                     	;# 
  3035  088F                     	;# 
  3036  088F                     	;# 
  3037  0890                     	;# 
  3038  0891                     	;# 
  3039  0892                     	;# 
  3040  0893                     	;# 
  3041  0893                     	;# 
  3042  0894                     	;# 
  3043  0895                     	;# 
  3044  0896                     	;# 
  3045  0897                     	;# 
  3046  0897                     	;# 
  3047  0898                     	;# 
  3048  0899                     	;# 
  3049  0D8C                     	;# 
  3050  0D8C                     	;# 
  3051  0D8D                     	;# 
  3052  0D8E                     	;# 
  3053  0D8F                     	;# 
  3054  0D8F                     	;# 
  3055  0D90                     	;# 
  3056  0D91                     	;# 
  3057  0D92                     	;# 
  3058  0D92                     	;# 
  3059  0D93                     	;# 
  3060  0D94                     	;# 
  3061  0D95                     	;# 
  3062  0D95                     	;# 
  3063  0D96                     	;# 
  3064  0D97                     	;# 
  3065  0D98                     	;# 
  3066  0D99                     	;# 
  3067  0D9A                     	;# 
  3068  0D9B                     	;# 
  3069  0D9C                     	;# 
  3070  0D9D                     	;# 
  3071  0D9E                     	;# 
  3072  0D9E                     	;# 
  3073  0D9F                     	;# 
  3074  0DA0                     	;# 
  3075  0DA1                     	;# 
  3076  0DA1                     	;# 
  3077  0DA2                     	;# 
  3078  0DA3                     	;# 
  3079  0DA4                     	;# 
  3080  0DA4                     	;# 
  3081  0DA5                     	;# 
  3082  0DA6                     	;# 
  3083  0DA7                     	;# 
  3084  0DA7                     	;# 
  3085  0DA8                     	;# 
  3086  0DA9                     	;# 
  3087  0DAA                     	;# 
  3088  0DAB                     	;# 
  3089  0DAC                     	;# 
  3090  0DAD                     	;# 
  3091  0DAE                     	;# 
  3092  0DAF                     	;# 
  3093  0E0F                     	;# 
  3094  0E10                     	;# 
  3095  0E11                     	;# 
  3096  0E12                     	;# 
  3097  0E13                     	;# 
  3098  0E14                     	;# 
  3099  0E15                     	;# 
  3100  0E16                     	;# 
  3101  0E17                     	;# 
  3102  0E18                     	;# 
  3103  0E19                     	;# 
  3104  0E1A                     	;# 
  3105  0E1B                     	;# 
  3106  0E1C                     	;# 
  3107  0E1D                     	;# 
  3108  0E1E                     	;# 
  3109  0E1F                     	;# 
  3110  0E20                     	;# 
  3111  0E21                     	;# 
  3112  0E22                     	;# 
  3113  0E23                     	;# 
  3114  0E24                     	;# 
  3115  0E25                     	;# 
  3116  0E26                     	;# 
  3117  0E27                     	;# 
  3118  0E28                     	;# 
  3119  0E29                     	;# 
  3120  0E2A                     	;# 
  3121  0E2B                     	;# 
  3122  0E2C                     	;# 
  3123  0E2D                     	;# 
  3124  0E2E                     	;# 
  3125  0E90                     	;# 
  3126  0E91                     	;# 
  3127  0E92                     	;# 
  3128  0E94                     	;# 
  3129  0E95                     	;# 
  3130  0E9C                     	;# 
  3131  0E9D                     	;# 
  3132  0E9E                     	;# 
  3133  0E9F                     	;# 
  3134  0EA0                     	;# 
  3135  0EA1                     	;# 
  3136  0EA2                     	;# 
  3137  0EA3                     	;# 
  3138  0EA4                     	;# 
  3139  0EA5                     	;# 
  3140  0EA6                     	;# 
  3141  0EA7                     	;# 
  3142  0F0F                     	;# 
  3143  0F10                     	;# 
  3144  0F11                     	;# 
  3145  0F12                     	;# 
  3146  0F13                     	;# 
  3147  0F14                     	;# 
  3148  0F15                     	;# 
  3149  0F16                     	;# 
  3150  0F17                     	;# 
  3151  0F18                     	;# 
  3152  0F19                     	;# 
  3153  0F1A                     	;# 
  3154  0F1B                     	;# 
  3155  0F1C                     	;# 
  3156  0F1D                     	;# 
  3157  0F1E                     	;# 
  3158  0F1F                     	;# 
  3159  0F20                     	;# 
  3160  0F21                     	;# 
  3161  0F22                     	;# 
  3162  0F23                     	;# 
  3163  0F24                     	;# 
  3164  0F25                     	;# 
  3165  0F26                     	;# 
  3166  0F27                     	;# 
  3167  0F28                     	;# 
  3168  0F29                     	;# 
  3169  0F2A                     	;# 
  3170  0F2B                     	;# 
  3171  0F2C                     	;# 
  3172  0F2D                     	;# 
  3173  0F2E                     	;# 
  3174  0F2F                     	;# 
  3175  0F30                     	;# 
  3176  0F31                     	;# 
  3177  0F32                     	;# 
  3178  0F33                     	;# 
  3179  0F34                     	;# 
  3180  0F35                     	;# 
  3181  0F36                     	;# 
  3182  0F37                     	;# 
  3183  0FE4                     	;# 
  3184  0FE5                     	;# 
  3185  0FE6                     	;# 
  3186  0FE7                     	;# 
  3187  0FE8                     	;# 
  3188  0FE9                     	;# 
  3189  0FEA                     	;# 
  3190  0FEB                     	;# 
  3191  0FED                     	;# 
  3192  0FEE                     	;# 
  3193  0FEF                     	;# 
  3194                           
  3195 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  3196  0000                     
  3197 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  3198  0000                     
  3199 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  3200  0000                     
  3201                           	psect	idataBANK2
  3202  0B75                     __pidataBANK2:	
  3203                           
  3204                           ;initializer for _hrDisp
  3205  0B75  3448               	retlw	72
  3206  0B76  3465               	retlw	101
  3207  0B77  3461               	retlw	97
  3208  0B78  3472               	retlw	114
  3209  0B79  3474               	retlw	116
  3210  0B7A  3420               	retlw	32
  3211  0B7B  3452               	retlw	82
  3212  0B7C  3461               	retlw	97
  3213  0B7D  3474               	retlw	116
  3214  0B7E  3465               	retlw	101
  3215  0B7F  343A               	retlw	58
  3216  0B80  3420               	retlw	32
  3217  0B81  3400               	retlw	0
  3218                           
  3219                           ;initializer for _distanceDisp
  3220  0B82  3444               	retlw	68
  3221  0B83  3469               	retlw	105
  3222  0B84  3473               	retlw	115
  3223  0B85  3474               	retlw	116
  3224  0B86  3461               	retlw	97
  3225  0B87  346E               	retlw	110
  3226  0B88  3463               	retlw	99
  3227  0B89  3465               	retlw	101
  3228  0B8A  343A               	retlw	58
  3229  0B8B  3420               	retlw	32
  3230  0B8C  3400               	retlw	0
  3231                           
  3232                           ;initializer for _speedDisp
  3233  0B8D  3453               	retlw	83
  3234  0B8E  3470               	retlw	112
  3235  0B8F  3465               	retlw	101
  3236  0B90  3465               	retlw	101
  3237  0B91  3464               	retlw	100
  3238  0B92  343A               	retlw	58
  3239  0B93  3420               	retlw	32
  3240  0B94  3400               	retlw	0
  3241                           
  3242                           	psect	nvBANK0
  3243  0056                     __pnvBANK0:	
  3244  0056                     _TMR0_InterruptHandler:	
  3245  0056                     	ds	2
  3246  0058                     _IOCCF5_InterruptHandler:	
  3247  0058                     	ds	2
  3248  005A                     _EUSART_ErrorHandler:	
  3249  005A                     	ds	2
  3250  005C                     _EUSART_OverrunErrorHandler:	
  3251  005C                     	ds	2
  3252  005E                     _EUSART_FramingErrorHandler:	
  3253  005E                     	ds	2
  3254  0060                     _timer0ReloadVal:	
  3255  0060                     	ds	1
  3256  0015                     _TMR0	set	21
  3257  000B                     _INTCONbits	set	11
  3258  0010                     _PIR1bits	set	16
  3259  0095                     _OPTION_REG	set	149
  3260  0095                     _OPTION_REGbits	set	149
  3261  008E                     _TRISC	set	142
  3262  008D                     _TRISB	set	141
  3263  008C                     _TRISA	set	140
  3264  0098                     _OSCTUNE	set	152
  3265  0099                     _OSCCON	set	153
  3266  010E                     _LATC	set	270
  3267  010D                     _LATB	set	269
  3268  010C                     _LATA	set	268
  3269  0116                     _BORCON	set	278
  3270  018C                     _ANSELA	set	396
  3271  018D                     _ANSELB	set	397
  3272  018E                     _ANSELC	set	398
  3273  019A                     _TX1REG	set	410
  3274  0199                     _RC1REG	set	409
  3275  019D                     _RC1STAbits	set	413
  3276  019E                     _TX1STAbits	set	414
  3277  019C                     _SPBRGH	set	412
  3278  019B                     _SPBRGL	set	411
  3279  019E                     _TX1STA	set	414
  3280  019D                     _RC1STA	set	413
  3281  019F                     _BAUD1CON	set	415
  3282  020E                     _WPUC	set	526
  3283  020C                     _WPUA	set	524
  3284  020D                     _WPUB	set	525
  3285  028E                     _ODCONC	set	654
  3286  028D                     _ODCONB	set	653
  3287  028C                     _ODCONA	set	652
  3288  030E                     _SLRCONC	set	782
  3289  030D                     _SLRCONB	set	781
  3290  030C                     _SLRCONA	set	780
  3291  0397                     _IOCCPbits	set	919
  3292  0398                     _IOCCNbits	set	920
  3293  0399                     _IOCCFbits	set	921
  3294  0E9F                     _RB7PPS	set	3743
  3295                           
  3296                           	psect	stringtext1
  3297  1000                     __pstringtext1:	
  3298  1000                     STR_3:	
  3299  1000  347C               	retlw	124	;'|'
  3300  1001  342D               	retlw	45	;'-'
  3301  1002  3400               	retlw	0
  3302                           
  3303                           	psect	stringtext2
  3304  1003                     __pstringtext2:	
  3305  1003                     STR_1:	
  3306  1003  3425               	retlw	37	;'%'
  3307  1004  3464               	retlw	100	;'d'
  3308  1005  3400               	retlw	0
  3309                           
  3310                           	psect	stringtext3
  3311  0000                     __pstringtext3:	
  3312  1003                     
  3313                           ; #config settings
  3314  0000                     
  3315                           	psect	cinit
  3316  0016                     start_initialization:	
  3317  0016                     __initialization:	
  3318                           
  3319                           ; Initialize objects allocated to BANK2
  3320  0016  3075               	movlw	low __pidataBANK2
  3321  0017  0084               	movwf	4
  3322  0018  308B               	movlw	(high __pidataBANK2)| (0+128)
  3323  0019  0085               	movwf	5
  3324  001A  3020               	movlw	low __pdataBANK2
  3325  001B  0086               	movwf	6
  3326  001C  3001               	movlw	high __pdataBANK2
  3327  001D  0087               	movwf	7
  3328  001E  3020               	movlw	32
  3329  001F  318A  2232  3180   	fcall	init_ram
  3330                           
  3331                           ; Clear objects allocated to BANK0
  3332  0022  3049               	movlw	low __pbssBANK0
  3333  0023  0084               	movwf	4
  3334  0024  3000               	movlw	high __pbssBANK0
  3335  0025  0085               	movwf	5
  3336  0026  300D               	movlw	13
  3337  0027  318A  222C  3180   	fcall	clear_ram0
  3338                           
  3339                           ; Clear objects allocated to BANK2
  3340  002A  0022               	movlb	2	; select bank2
  3341  002B  01CD               	clrf	__pbssBANK2& (0+127)
  3342  002C  01CE               	clrf	(__pbssBANK2+1)& (0+127)
  3343  002D  01CF               	clrf	(__pbssBANK2+2)& (0+127)
  3344  002E  01D0               	clrf	(__pbssBANK2+3)& (0+127)
  3345  002F  01D1               	clrf	(__pbssBANK2+4)& (0+127)
  3346  0030  01D2               	clrf	(__pbssBANK2+5)& (0+127)
  3347                           
  3348                           ; Clear objects allocated to BANK3
  3349  0031  30A0               	movlw	low __pbssBANK3
  3350  0032  0084               	movwf	4
  3351  0033  3001               	movlw	high __pbssBANK3
  3352  0034  0085               	movwf	5
  3353  0035  3020               	movlw	32
  3354  0036  318A  222C         	fcall	clear_ram0
  3355  0038                     end_of_initialization:	
  3356                           ;End of C runtime variable initialization code
  3357                           
  3358  0038                     __end_of__initialization:	
  3359  0038  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3360  0039  0020               	movlb	0
  3361  003A  318D  2D7D         	ljmp	_main	;jump to C main() function
  3362                           
  3363                           	psect	bssBANK0
  3364  0049                     __pbssBANK0:	
  3365  0049                     _width:	
  3366  0049                     	ds	2
  3367  004B                     _prec:	
  3368  004B                     	ds	2
  3369  004D                     _flags:	
  3370  004D                     	ds	2
  3371  004F                     _counter:	
  3372  004F                     	ds	2
  3373  0051                     _second:	
  3374  0051                     	ds	2
  3375  0053                     _eusartRxLastError:	
  3376  0053                     	ds	1
  3377  0054                     _rpm:	
  3378  0054                     	ds	2
  3379                           
  3380                           	psect	bssBANK2
  3381  014D                     __pbssBANK2:	
  3382  014D                     _nout:	
  3383  014D                     	ds	2
  3384  014F                     _speed:	
  3385  014F                     	ds	2
  3386  0151                     _distance:	
  3387  0151                     	ds	2
  3388                           
  3389                           	psect	dataBANK2
  3390  0120                     __pdataBANK2:	
  3391  0120                     _hrDisp:	
  3392  0120                     	ds	13
  3393  012D                     _distanceDisp:	
  3394  012D                     	ds	11
  3395  0138                     _speedDisp:	
  3396  0138                     	ds	8
  3397                           
  3398                           	psect	bssBANK3
  3399  01A0                     __pbssBANK3:	
  3400  01A0                     _dbuf:	
  3401  01A0                     	ds	32
  3402                           
  3403                           	psect	inittext
  3404  0A32                     init_ram:	
  3405  0A32  00FE               	movwf	126
  3406  0A33                     initloop:	
  3407  0A33  0012               	moviw fsr0++
  3408  0A34  001E               	movwi fsr1++
  3409  0A35  0BFE               	decfsz	126,f
  3410  0A36  2A33               	goto	initloop
  3411  0A37  3400               	retlw	0
  3412                           
  3413                           	psect	clrtext
  3414  0A2C                     clear_ram0:	
  3415                           ;	Called with FSR0 containing the base address, and
  3416                           ;	WREG with the size to clear
  3417                           
  3418  0A2C  0064               	clrwdt	;clear the watchdog before getting into this loop
  3419  0A2D                     clrloop0:	
  3420  0A2D  0180               	clrf	0	;clear RAM location pointed to by FSR
  3421  0A2E  3101               	addfsr 0,1
  3422  0A2F  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3423  0A30  2A2D               	goto	clrloop0	;have we reached the end yet?
  3424  0A31  3400               	retlw	0	;all done for this memory range, return
  3425                           
  3426                           	psect	cstackBANK2
  3427  0140                     __pcstackBANK2:	
  3428  0140                     ??_vfprintf:	
  3429                           
  3430                           ; 1 bytes @ 0x0
  3431  0140                     	ds	2
  3432  0142                     vfprintf@fp:	
  3433                           
  3434                           ; 1 bytes @ 0x2
  3435  0142                     	ds	1
  3436  0143                     vfprintf@cfmt:	
  3437                           
  3438                           ; 2 bytes @ 0x3
  3439  0143                     	ds	2
  3440  0145                     ?_printf:	
  3441  0145                     printf@fmt:	
  3442                           ; 2 bytes @ 0x5
  3443                           
  3444                           
  3445                           ; 2 bytes @ 0x5
  3446  0145                     	ds	6
  3447  014B                     printf@ap:	
  3448                           
  3449                           ; 1 bytes @ 0xB
  3450  014B                     	ds	1
  3451  014C                     ??_main:	
  3452                           
  3453                           ; 1 bytes @ 0xC
  3454  014C                     	ds	1
  3455                           
  3456                           	psect	cstackBANK1
  3457  00A0                     __pcstackBANK1:	
  3458  00A0                     ?_EUSART_SetFramingErrorHandler:	
  3459  00A0                     ?_EUSART_SetOverrunErrorHandler:	
  3460                           ; 1 bytes @ 0x0
  3461                           
  3462  00A0                     ?_EUSART_SetErrorHandler:	
  3463                           ; 1 bytes @ 0x0
  3464                           
  3465  00A0                     ??_OSCILLATOR_Initialize:	
  3466                           ; 1 bytes @ 0x0
  3467                           
  3468  00A0                     ?_IOCCF5_SetInterruptHandler:	
  3469                           ; 1 bytes @ 0x0
  3470                           
  3471  00A0                     ?_TMR0_SetInterruptHandler:	
  3472                           ; 1 bytes @ 0x0
  3473                           
  3474  00A0                     ??_EUSART_is_tx_ready:	
  3475                           ; 1 bytes @ 0x0
  3476                           
  3477  00A0                     ??_EUSART_Write:	
  3478                           ; 1 bytes @ 0x0
  3479                           
  3480  00A0                     ?_strlen:	
  3481                           ; 1 bytes @ 0x0
  3482                           
  3483  00A0                     ?___aodiv:	
  3484                           ; 2 bytes @ 0x0
  3485                           
  3486  00A0                     ?___aomod:	
  3487                           ; 8 bytes @ 0x0
  3488                           
  3489  00A0                     _EUSART_is_tx_ready$167:	
  3490                           ; 8 bytes @ 0x0
  3491                           
  3492  00A0                     EUSART_Write@txData:	
  3493                           ; 1 bytes @ 0x0
  3494                           
  3495  00A0                     EUSART_SetFramingErrorHandler@interruptHandler:	
  3496                           ; 1 bytes @ 0x0
  3497                           
  3498  00A0                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  3499                           ; 2 bytes @ 0x0
  3500                           
  3501  00A0                     EUSART_SetErrorHandler@interruptHandler:	
  3502                           ; 2 bytes @ 0x0
  3503                           
  3504  00A0                     IOCCF5_SetInterruptHandler@InterruptHandler:	
  3505                           ; 2 bytes @ 0x0
  3506                           
  3507  00A0                     TMR0_SetInterruptHandler@InterruptHandler:	
  3508                           ; 2 bytes @ 0x0
  3509                           
  3510  00A0                     ___aodiv@divisor:	
  3511                           ; 2 bytes @ 0x0
  3512                           
  3513  00A0                     ___aomod@divisor:	
  3514                           ; 8 bytes @ 0x0
  3515                           
  3516                           
  3517                           ; 8 bytes @ 0x0
  3518  00A0                     	ds	1
  3519  00A1                     ?_setCursor:	
  3520  00A1                     ??_putch:	
  3521                           ; 1 bytes @ 0x1
  3522                           
  3523  00A1                     putch@txData:	
  3524                           ; 1 bytes @ 0x1
  3525                           
  3526  00A1                     setCursor@b:	
  3527                           ; 1 bytes @ 0x1
  3528                           
  3529                           
  3530                           ; 1 bytes @ 0x1
  3531  00A1                     	ds	1
  3532  00A2                     ??_EUSART_SetFramingErrorHandler:	
  3533  00A2                     ??_EUSART_SetOverrunErrorHandler:	
  3534                           ; 1 bytes @ 0x2
  3535                           
  3536  00A2                     ??_EUSART_SetErrorHandler:	
  3537                           ; 1 bytes @ 0x2
  3538                           
  3539  00A2                     ??_PIN_MANAGER_Initialize:	
  3540                           ; 1 bytes @ 0x2
  3541                           
  3542  00A2                     ??_TMR0_Initialize:	
  3543                           ; 1 bytes @ 0x2
  3544                           
  3545  00A2                     ??_IOCCF5_SetInterruptHandler:	
  3546                           ; 1 bytes @ 0x2
  3547                           
  3548  00A2                     ??_TMR0_SetInterruptHandler:	
  3549                           ; 1 bytes @ 0x2
  3550                           
  3551  00A2                     ??_setCursor:	
  3552                           ; 1 bytes @ 0x2
  3553                           
  3554  00A2                     ??_strlen:	
  3555                           ; 1 bytes @ 0x2
  3556                           
  3557  00A2                     ??_EUSART_Initialize:	
  3558                           ; 1 bytes @ 0x2
  3559                           
  3560  00A2                     ?_fputc:	
  3561                           ; 1 bytes @ 0x2
  3562                           
  3563  00A2                     fputc@c:	
  3564                           ; 2 bytes @ 0x2
  3565                           
  3566                           
  3567                           ; 2 bytes @ 0x2
  3568  00A2                     	ds	1
  3569  00A3                     ??_SYSTEM_Initialize:	
  3570  00A3                     strlen@a:	
  3571                           ; 1 bytes @ 0x3
  3572                           
  3573                           
  3574                           ; 1 bytes @ 0x3
  3575  00A3                     	ds	1
  3576  00A4                     setCursor@a:	
  3577  00A4                     fputc@fp:	
  3578                           ; 1 bytes @ 0x4
  3579                           
  3580  00A4                     strlen@s:	
  3581                           ; 1 bytes @ 0x4
  3582                           
  3583                           
  3584                           ; 1 bytes @ 0x4
  3585  00A4                     	ds	1
  3586  00A5                     ??_fputc:	
  3587                           
  3588                           ; 1 bytes @ 0x5
  3589  00A5                     	ds	3
  3590  00A8                     ___aodiv@dividend:	
  3591  00A8                     ___aomod@dividend:	
  3592                           ; 8 bytes @ 0x8
  3593                           
  3594                           
  3595                           ; 8 bytes @ 0x8
  3596  00A8                     	ds	2
  3597  00AA                     ?_fputs:	
  3598  00AA                     fputs@s:	
  3599                           ; 2 bytes @ 0xA
  3600                           
  3601                           
  3602                           ; 2 bytes @ 0xA
  3603  00AA                     	ds	2
  3604  00AC                     fputs@fp:	
  3605                           
  3606                           ; 1 bytes @ 0xC
  3607  00AC                     	ds	1
  3608  00AD                     ??_fputs:	
  3609                           
  3610                           ; 1 bytes @ 0xD
  3611  00AD                     	ds	3
  3612  00B0                     ??___aodiv:	
  3613  00B0                     ??___aomod:	
  3614                           ; 1 bytes @ 0x10
  3615                           
  3616  00B0                     fputs@c:	
  3617                           ; 1 bytes @ 0x10
  3618                           
  3619                           
  3620                           ; 1 bytes @ 0x10
  3621  00B0                     	ds	1
  3622  00B1                     ___aodiv@counter:	
  3623  00B1                     ___aomod@counter:	
  3624                           ; 1 bytes @ 0x11
  3625                           
  3626  00B1                     fputs@i:	
  3627                           ; 1 bytes @ 0x11
  3628                           
  3629                           
  3630                           ; 2 bytes @ 0x11
  3631  00B1                     	ds	1
  3632  00B2                     ___aodiv@sign:	
  3633  00B2                     ___aomod@sign:	
  3634                           ; 1 bytes @ 0x12
  3635                           
  3636                           
  3637                           ; 1 bytes @ 0x12
  3638  00B2                     	ds	1
  3639  00B3                     ?_puts:	
  3640  00B3                     ?_abs:	
  3641                           ; 2 bytes @ 0x13
  3642                           
  3643  00B3                     ?_pad:	
  3644                           ; 2 bytes @ 0x13
  3645                           
  3646  00B3                     pad@buf:	
  3647                           ; 2 bytes @ 0x13
  3648                           
  3649  00B3                     abs@a:	
  3650                           ; 1 bytes @ 0x13
  3651                           
  3652  00B3                     puts@s:	
  3653                           ; 2 bytes @ 0x13
  3654                           
  3655  00B3                     ___aodiv@quotient:	
  3656                           ; 2 bytes @ 0x13
  3657                           
  3658                           
  3659                           ; 8 bytes @ 0x13
  3660  00B3                     	ds	1
  3661  00B4                     pad@p:	
  3662                           
  3663                           ; 2 bytes @ 0x14
  3664  00B4                     	ds	1
  3665  00B5                     ??_puts:	
  3666  00B5                     ??_abs:	
  3667                           ; 1 bytes @ 0x15
  3668                           
  3669                           
  3670                           ; 1 bytes @ 0x15
  3671  00B5                     	ds	1
  3672  00B6                     ??_pad:	
  3673                           
  3674                           ; 1 bytes @ 0x16
  3675  00B6                     	ds	1
  3676  00B7                     _puts$1033:	
  3677  00B7                     pad@i:	
  3678                           ; 1 bytes @ 0x17
  3679                           
  3680                           
  3681                           ; 2 bytes @ 0x17
  3682  00B7                     	ds	1
  3683  00B8                     ??_resetCursor:	
  3684  00B8                     ??_writeString:	
  3685                           ; 1 bytes @ 0x18
  3686                           
  3687  00B8                     writeString@string:	
  3688                           ; 1 bytes @ 0x18
  3689                           
  3690                           
  3691                           ; 1 bytes @ 0x18
  3692  00B8                     	ds	1
  3693  00B9                     pad@w:	
  3694                           
  3695                           ; 2 bytes @ 0x19
  3696  00B9                     	ds	2
  3697  00BB                     pad@fp:	
  3698                           
  3699                           ; 1 bytes @ 0x1B
  3700  00BB                     	ds	1
  3701  00BC                     ?_dtoa:	
  3702  00BC                     dtoa@d:	
  3703                           ; 2 bytes @ 0x1C
  3704                           
  3705                           
  3706                           ; 8 bytes @ 0x1C
  3707  00BC                     	ds	8
  3708  00C4                     ??_dtoa:	
  3709                           
  3710                           ; 1 bytes @ 0x24
  3711  00C4                     	ds	3
  3712  00C7                     _dtoa$687:	
  3713                           
  3714                           ; 2 bytes @ 0x27
  3715  00C7                     	ds	2
  3716  00C9                     dtoa@p:	
  3717                           
  3718                           ; 2 bytes @ 0x29
  3719  00C9                     	ds	2
  3720  00CB                     dtoa@fp:	
  3721                           
  3722                           ; 1 bytes @ 0x2B
  3723  00CB                     	ds	1
  3724  00CC                     dtoa@w:	
  3725                           
  3726                           ; 2 bytes @ 0x2C
  3727  00CC                     	ds	2
  3728  00CE                     dtoa@s:	
  3729                           
  3730                           ; 2 bytes @ 0x2E
  3731  00CE                     	ds	2
  3732  00D0                     dtoa@n:	
  3733                           
  3734                           ; 8 bytes @ 0x30
  3735  00D0                     	ds	8
  3736  00D8                     dtoa@i:	
  3737                           
  3738                           ; 2 bytes @ 0x38
  3739  00D8                     	ds	2
  3740  00DA                     ?_vfpfcnvrt:	
  3741  00DA                     vfpfcnvrt@fmt:	
  3742                           ; 2 bytes @ 0x3A
  3743                           
  3744                           
  3745                           ; 1 bytes @ 0x3A
  3746  00DA                     	ds	1
  3747  00DB                     vfpfcnvrt@ap:	
  3748                           
  3749                           ; 1 bytes @ 0x3B
  3750  00DB                     	ds	1
  3751  00DC                     ??_vfpfcnvrt:	
  3752                           
  3753                           ; 1 bytes @ 0x3C
  3754  00DC                     	ds	5
  3755  00E1                     vfpfcnvrt@ll:	
  3756                           
  3757                           ; 8 bytes @ 0x41
  3758  00E1                     	ds	8
  3759  00E9                     vfpfcnvrt@vp:	
  3760                           
  3761                           ; 2 bytes @ 0x49
  3762  00E9                     	ds	2
  3763  00EB                     vfpfcnvrt@fp:	
  3764                           
  3765                           ; 1 bytes @ 0x4B
  3766  00EB                     	ds	1
  3767  00EC                     ?_vfprintf:	
  3768  00EC                     vfprintf@fmt:	
  3769                           ; 2 bytes @ 0x4C
  3770                           
  3771                           
  3772                           ; 2 bytes @ 0x4C
  3773  00EC                     	ds	2
  3774  00EE                     vfprintf@ap:	
  3775                           
  3776                           ; 1 bytes @ 0x4E
  3777  00EE                     	ds	1
  3778  00EF                     ??_printf:	
  3779                           
  3780                           ; 1 bytes @ 0x4F
  3781  00EF                     	ds	1
  3782                           
  3783                           	psect	cstackCOMMON
  3784  0070                     __pcstackCOMMON:	
  3785  0070                     ?_PIN_MANAGER_Initialize:	
  3786  0070                     ?_OSCILLATOR_Initialize:	
  3787                           ; 1 bytes @ 0x0
  3788                           
  3789  0070                     ?_TMR0_Initialize:	
  3790                           ; 1 bytes @ 0x0
  3791                           
  3792  0070                     ?_IOCCF5_DefaultInterruptHandler:	
  3793                           ; 1 bytes @ 0x0
  3794                           
  3795  0070                     ??_IOCCF5_DefaultInterruptHandler:	
  3796                           ; 1 bytes @ 0x0
  3797                           
  3798  0070                     ?_IOCCF5_ISR:	
  3799                           ; 1 bytes @ 0x0
  3800                           
  3801  0070                     ?_TMR0_DefaultInterruptHandler:	
  3802                           ; 1 bytes @ 0x0
  3803                           
  3804  0070                     ??_TMR0_DefaultInterruptHandler:	
  3805                           ; 1 bytes @ 0x0
  3806                           
  3807  0070                     ?_timerISR:	
  3808                           ; 1 bytes @ 0x0
  3809                           
  3810  0070                     ??_timerISR:	
  3811                           ; 1 bytes @ 0x0
  3812                           
  3813  0070                     ?_speedCalc:	
  3814                           ; 1 bytes @ 0x0
  3815                           
  3816  0070                     ?_resetCursor:	
  3817                           ; 1 bytes @ 0x0
  3818                           
  3819  0070                     ?_writeString:	
  3820                           ; 1 bytes @ 0x0
  3821                           
  3822  0070                     ?_EUSART_Initialize:	
  3823                           ; 1 bytes @ 0x0
  3824                           
  3825  0070                     ?_EUSART_is_tx_ready:	
  3826                           ; 1 bytes @ 0x0
  3827                           
  3828  0070                     ?_EUSART_Write:	
  3829                           ; 1 bytes @ 0x0
  3830                           
  3831  0070                     ?_putch:	
  3832                           ; 1 bytes @ 0x0
  3833                           
  3834  0070                     ?_SYSTEM_Initialize:	
  3835                           ; 1 bytes @ 0x0
  3836                           
  3837  0070                     ?_PIN_MANAGER_IOC:	
  3838                           ; 1 bytes @ 0x0
  3839                           
  3840  0070                     ?_TMR0_ISR:	
  3841                           ; 1 bytes @ 0x0
  3842                           
  3843  0070                     ??_TMR0_ISR:	
  3844                           ; 1 bytes @ 0x0
  3845                           
  3846  0070                     ?_INTERRUPT_InterruptManager:	
  3847                           ; 1 bytes @ 0x0
  3848                           
  3849  0070                     ?_main:	
  3850                           ; 1 bytes @ 0x0
  3851                           
  3852  0070                     ?__Umul8_16:	
  3853                           ; 1 bytes @ 0x0
  3854                           
  3855  0070                     ?___awdiv:	
  3856                           ; 2 bytes @ 0x0
  3857                           
  3858  0070                     ?___xxtofl:	
  3859                           ; 2 bytes @ 0x0
  3860                           
  3861  0070                     __Umul8_16@multiplicand:	
  3862                           ; 4 bytes @ 0x0
  3863                           
  3864  0070                     ___awdiv@divisor:	
  3865                           ; 1 bytes @ 0x0
  3866                           
  3867  0070                     ___xxtofl@val:	
  3868                           ; 2 bytes @ 0x0
  3869                           
  3870                           
  3871                           ; 4 bytes @ 0x0
  3872  0070                     	ds	2
  3873  0072                     ??__Umul8_16:	
  3874  0072                     ___awdiv@dividend:	
  3875                           ; 1 bytes @ 0x2
  3876                           
  3877                           
  3878                           ; 2 bytes @ 0x2
  3879  0072                     	ds	2
  3880  0074                     ??___awdiv:	
  3881  0074                     ??___xxtofl:	
  3882                           ; 1 bytes @ 0x4
  3883                           
  3884  0074                     __Umul8_16@product:	
  3885                           ; 1 bytes @ 0x4
  3886                           
  3887                           
  3888                           ; 2 bytes @ 0x4
  3889  0074                     	ds	1
  3890  0075                     ___awdiv@counter:	
  3891                           
  3892                           ; 1 bytes @ 0x5
  3893  0075                     	ds	1
  3894  0076                     ___awdiv@sign:	
  3895  0076                     __Umul8_16@word_mpld:	
  3896                           ; 1 bytes @ 0x6
  3897                           
  3898                           
  3899                           ; 2 bytes @ 0x6
  3900  0076                     	ds	1
  3901  0077                     ___awdiv@quotient:	
  3902                           
  3903                           ; 2 bytes @ 0x7
  3904  0077                     	ds	1
  3905  0078                     ___xxtofl@sign:	
  3906  0078                     __Umul8_16@multiplier:	
  3907                           ; 1 bytes @ 0x8
  3908                           
  3909                           
  3910                           ; 1 bytes @ 0x8
  3911  0078                     	ds	1
  3912  0079                     ?___wmul:	
  3913  0079                     ___xxtofl@exp:	
  3914                           ; 2 bytes @ 0x9
  3915                           
  3916  0079                     ___wmul@multiplier:	
  3917                           ; 1 bytes @ 0x9
  3918                           
  3919                           
  3920                           ; 2 bytes @ 0x9
  3921  0079                     	ds	1
  3922  007A                     ___xxtofl@arg:	
  3923                           
  3924                           ; 4 bytes @ 0xA
  3925  007A                     	ds	1
  3926  007B                     ___wmul@multiplicand:	
  3927                           
  3928                           ; 2 bytes @ 0xB
  3929  007B                     	ds	2
  3930  007D                     ??___wmul:	
  3931                           
  3932                           ; 1 bytes @ 0xD
  3933  007D                     	ds	1
  3934  007E                     ??_IOCCF5_ISR:	
  3935  007E                     ??_speedCalc:	
  3936                           ; 1 bytes @ 0xE
  3937                           
  3938  007E                     ??_PIN_MANAGER_IOC:	
  3939                           ; 1 bytes @ 0xE
  3940                           
  3941  007E                     ??_INTERRUPT_InterruptManager:	
  3942                           ; 1 bytes @ 0xE
  3943                           
  3944                           
  3945                           	psect	cstackBANK0
  3946  0020                     __pcstackBANK0:	
  3947                           ; 1 bytes @ 0xE
  3948                           
  3949  0020                     ?___fladd:	
  3950  0020                     ?___flmul:	
  3951                           ; 4 bytes @ 0x0
  3952                           
  3953  0020                     ___wmul@product:	
  3954                           ; 4 bytes @ 0x0
  3955                           
  3956  0020                     ___fladd@b:	
  3957                           ; 2 bytes @ 0x0
  3958                           
  3959  0020                     ___flmul@b:	
  3960                           ; 4 bytes @ 0x0
  3961                           
  3962                           
  3963                           ; 4 bytes @ 0x0
  3964  0020                     	ds	4
  3965  0024                     ___fladd@a:	
  3966  0024                     ___flmul@a:	
  3967                           ; 4 bytes @ 0x4
  3968                           
  3969                           
  3970                           ; 4 bytes @ 0x4
  3971  0024                     	ds	4
  3972  0028                     ??___fladd:	
  3973  0028                     ??___flmul:	
  3974                           ; 1 bytes @ 0x8
  3975                           
  3976                           
  3977                           ; 1 bytes @ 0x8
  3978  0028                     	ds	5
  3979  002D                     ___flmul@sign:	
  3980                           
  3981                           ; 1 bytes @ 0xD
  3982  002D                     	ds	1
  3983  002E                     ___flmul@grs:	
  3984                           
  3985                           ; 4 bytes @ 0xE
  3986  002E                     	ds	2
  3987  0030                     ___fladd@signs:	
  3988                           
  3989                           ; 1 bytes @ 0x10
  3990  0030                     	ds	1
  3991  0031                     ___fladd@aexp:	
  3992                           
  3993                           ; 1 bytes @ 0x11
  3994  0031                     	ds	1
  3995  0032                     ___fladd@bexp:	
  3996  0032                     ___flmul@aexp:	
  3997                           ; 1 bytes @ 0x12
  3998                           
  3999                           
  4000                           ; 1 bytes @ 0x12
  4001  0032                     	ds	1
  4002  0033                     ___fladd@grs:	
  4003  0033                     ___flmul@bexp:	
  4004                           ; 1 bytes @ 0x13
  4005                           
  4006                           
  4007                           ; 1 bytes @ 0x13
  4008  0033                     	ds	1
  4009  0034                     ___flmul@prod:	
  4010                           
  4011                           ; 4 bytes @ 0x14
  4012  0034                     	ds	4
  4013  0038                     ___flmul@temp:	
  4014                           
  4015                           ; 2 bytes @ 0x18
  4016  0038                     	ds	2
  4017  003A                     ?___fltol:	
  4018  003A                     ___fltol@f1:	
  4019                           ; 4 bytes @ 0x1A
  4020                           
  4021                           
  4022                           ; 4 bytes @ 0x1A
  4023  003A                     	ds	4
  4024  003E                     ??___fltol:	
  4025                           
  4026                           ; 1 bytes @ 0x1E
  4027  003E                     	ds	5
  4028  0043                     ___fltol@sign1:	
  4029                           
  4030                           ; 1 bytes @ 0x23
  4031  0043                     	ds	1
  4032  0044                     ___fltol@exp1:	
  4033                           
  4034                           ; 1 bytes @ 0x24
  4035  0044                     	ds	1
  4036  0045                     _speedCalc$1214:	
  4037                           
  4038                           ; 4 bytes @ 0x25
  4039  0045                     	ds	4
  4040                           
  4041                           	psect	maintext
  4042  0D7D                     __pmaintext:	
  4043 ;;
  4044 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  4045 ;;
  4046 ;; *************** function _main *****************
  4047 ;; Defined at:
  4048 ;;		line 37 in file "main.c"
  4049 ;; Parameters:    Size  Location     Type
  4050 ;;		None
  4051 ;; Auto vars:     Size  Location     Type
  4052 ;;		None
  4053 ;; Return value:  Size  Location     Type
  4054 ;;                  1    wreg      void 
  4055 ;; Registers used:
  4056 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4057 ;; Tracked objects:
  4058 ;;		On entry : B1F/0
  4059 ;;		On exit  : 0/0
  4060 ;;		Unchanged: 0/0
  4061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4064 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  4065 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  4066 ;;Total ram usage:        1 bytes
  4067 ;; Hardware stack levels required when called:   15
  4068 ;; This function calls:
  4069 ;;		_IOCCF5_SetInterruptHandler
  4070 ;;		_SYSTEM_Initialize
  4071 ;;		_TMR0_SetInterruptHandler
  4072 ;;		_printf
  4073 ;;		_resetCursor
  4074 ;;		_setCursor
  4075 ;;		_writeString
  4076 ;; This function is called by:
  4077 ;;		Startup code after reset
  4078 ;; This function uses a non-reentrant model
  4079 ;;
  4080                           
  4081                           
  4082                           ;psect for function _main
  4083  0D7D                     _main:	
  4084                           
  4085                           ;main.c: 40:     SYSTEM_Initialize();
  4086                           
  4087                           ;incstack = 0
  4088                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4089  0D7D  318A  2274  318D   	fcall	_SYSTEM_Initialize
  4090                           
  4091                           ;main.c: 42:     TMR0_SetInterruptHandler( timerISR ) ;
  4092  0D80  3020               	movlw	low _timerISR
  4093  0D81  0021               	movlb	1	; select bank1
  4094  0D82  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler^(0+128)
  4095  0D83  300A               	movlw	high _timerISR
  4096  0D84  00A1               	movwf	(TMR0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  4097  0D85  318A  226B  318D   	fcall	_TMR0_SetInterruptHandler
  4098                           
  4099                           ;main.c: 43:     IOCCF5_SetInterruptHandler( speedCalc ) ;
  4100  0D88  307B               	movlw	low _speedCalc
  4101  0D89  0021               	movlb	1	; select bank1
  4102  0D8A  00A0               	movwf	IOCCF5_SetInterruptHandler@InterruptHandler^(0+128)
  4103  0D8B  300E               	movlw	high _speedCalc
  4104  0D8C  00A1               	movwf	(IOCCF5_SetInterruptHandler@InterruptHandler^(0+128)+1)
  4105  0D8D  318A  2262  318D   	fcall	_IOCCF5_SetInterruptHandler
  4106                           
  4107                           ;main.c: 46:     resetCursor() ;
  4108  0D90  318A  223F  318D   	fcall	_resetCursor
  4109                           
  4110                           ;main.c: 48:     setCursor(1,0) ;
  4111  0D93  0021               	movlb	1	; select bank1
  4112  0D94  01A1               	clrf	setCursor@b^(0+128)
  4113  0D95  3001               	movlw	1
  4114  0D96  318C  2449  318D   	fcall	_setCursor
  4115                           
  4116                           ;main.c: 49:     writeString(speedDisp);
  4117  0D99  3038               	movlw	(low (_speedDisp| (0+256)))& (0+255)
  4118  0D9A  318A  22BE  318D   	fcall	_writeString
  4119                           
  4120                           ;main.c: 50:     setCursor(2,0) ;
  4121  0D9D  0021               	movlb	1	; select bank1
  4122  0D9E  01A1               	clrf	setCursor@b^(0+128)
  4123  0D9F  3002               	movlw	2
  4124  0DA0  318C  2449  318D   	fcall	_setCursor
  4125                           
  4126                           ;main.c: 51:     writeString(distanceDisp);
  4127  0DA3  302D               	movlw	(low (_distanceDisp| (0+256)))& (0+255)
  4128  0DA4  318A  22BE  318D   	fcall	_writeString
  4129                           
  4130                           ;main.c: 52:     setCursor(3,0) ;
  4131  0DA7  0021               	movlb	1	; select bank1
  4132  0DA8  01A1               	clrf	setCursor@b^(0+128)
  4133  0DA9  3003               	movlw	3
  4134  0DAA  318C  2449  318D   	fcall	_setCursor
  4135                           
  4136                           ;main.c: 53:     writeString(hrDisp);
  4137  0DAD  3020               	movlw	(low (_hrDisp| (0+256)))& (0+255)
  4138  0DAE  318A  22BE  318D   	fcall	_writeString
  4139                           
  4140                           ;main.c: 54:     setCursor(4,0) ;
  4141  0DB1  0021               	movlb	1	; select bank1
  4142  0DB2  01A1               	clrf	setCursor@b^(0+128)
  4143  0DB3  3004               	movlw	4
  4144  0DB4  318C  2449  318D   	fcall	_setCursor
  4145                           
  4146                           ;main.c: 56:     (INTCONbits.GIE = 1);
  4147  0DB7  178B               	bsf	11,7	;volatile
  4148                           
  4149                           ;main.c: 57:     (INTCONbits.PEIE = 1);
  4150  0DB8  170B               	bsf	11,6	;volatile
  4151  0DB9                     l3179:	
  4152                           
  4153                           ;main.c: 59:         setCursor(1,10) ;
  4154  0DB9  300A               	movlw	10
  4155  0DBA  0022               	movlb	2	; select bank2
  4156  0DBB  00CC               	movwf	??_main^(0+256)
  4157  0DBC  084C               	movf	??_main^(0+256),w
  4158  0DBD  0021               	movlb	1	; select bank1
  4159  0DBE  00A1               	movwf	setCursor@b^(0+128)
  4160  0DBF  3001               	movlw	1
  4161  0DC0  318C  2449  318D   	fcall	_setCursor
  4162                           
  4163                           ;main.c: 60:         printf( "%d", speed ) ;
  4164  0DC3  3003               	movlw	low (STR_1| (0+32768))
  4165  0DC4  0022               	movlb	2	; select bank2
  4166  0DC5  00C5               	movwf	printf@fmt^(0+256)
  4167  0DC6  3090               	movlw	high (STR_1| (0+32768))
  4168  0DC7  00C6               	movwf	(printf@fmt^(0+256)+1)
  4169  0DC8  0850               	movf	(_speed+1)^(0+256),w
  4170  0DC9  00C8               	movwf	((?_printf+1)^(0+256)+2)
  4171  0DCA  084F               	movf	_speed^(0+256),w
  4172  0DCB  00C7               	movwf	(?_printf^(0+256)+2)
  4173  0DCC  318A  22A9  318D   	fcall	_printf
  4174                           
  4175                           ;main.c: 61:         setCursor(2,11) ;
  4176  0DCF  300B               	movlw	11
  4177  0DD0  0022               	movlb	2	; select bank2
  4178  0DD1  00CC               	movwf	??_main^(0+256)
  4179  0DD2  084C               	movf	??_main^(0+256),w
  4180  0DD3  0021               	movlb	1	; select bank1
  4181  0DD4  00A1               	movwf	setCursor@b^(0+128)
  4182  0DD5  3002               	movlw	2
  4183  0DD6  318C  2449  318D   	fcall	_setCursor
  4184                           
  4185                           ;main.c: 62:         printf( "%d", distance ) ;
  4186  0DD9  3003               	movlw	low (STR_1| (0+32768))
  4187  0DDA  0022               	movlb	2	; select bank2
  4188  0DDB  00C5               	movwf	printf@fmt^(0+256)
  4189  0DDC  3090               	movlw	high (STR_1| (0+32768))
  4190  0DDD  00C6               	movwf	(printf@fmt^(0+256)+1)
  4191  0DDE  0852               	movf	(_distance+1)^(0+256),w
  4192  0DDF  00C8               	movwf	((?_printf+1)^(0+256)+2)
  4193  0DE0  0851               	movf	_distance^(0+256),w
  4194  0DE1  00C7               	movwf	(?_printf^(0+256)+2)
  4195  0DE2  318A  22A9  318D   	fcall	_printf
  4196  0DE5  2DB9               	goto	l3179
  4197  0DE6                     __end_of_main:	
  4198                           
  4199                           	psect	text1
  4200  0ABE                     __ptext1:	
  4201 ;; *************** function _writeString *****************
  4202 ;; Defined at:
  4203 ;;		line 60 in file "displayOptions.c"
  4204 ;; Parameters:    Size  Location     Type
  4205 ;;  string          1    wreg     PTR unsigned char 
  4206 ;;		 -> hrDisp(13), distanceDisp(11), speedDisp(8), 
  4207 ;; Auto vars:     Size  Location     Type
  4208 ;;  string          1   24[BANK1 ] PTR unsigned char 
  4209 ;;		 -> hrDisp(13), distanceDisp(11), speedDisp(8), 
  4210 ;; Return value:  Size  Location     Type
  4211 ;;                  1    wreg      void 
  4212 ;; Registers used:
  4213 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4214 ;; Tracked objects:
  4215 ;;		On entry : 0/0
  4216 ;;		On exit  : 0/0
  4217 ;;		Unchanged: 0/0
  4218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4220 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4222 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4223 ;;Total ram usage:        1 bytes
  4224 ;; Hardware stack levels used:    1
  4225 ;; Hardware stack levels required when called:   11
  4226 ;; This function calls:
  4227 ;;		_EUSART_is_tx_ready
  4228 ;;		_puts
  4229 ;; This function is called by:
  4230 ;;		_main
  4231 ;; This function uses a non-reentrant model
  4232 ;;
  4233                           
  4234                           
  4235                           ;psect for function _writeString
  4236  0ABE                     _writeString:	
  4237                           
  4238                           ;incstack = 0
  4239                           ; Regs used in _writeString: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4240                           ;writeString@string stored from wreg
  4241  0ABE  0021               	movlb	1	; select bank1
  4242  0ABF  00B8               	movwf	writeString@string^(0+128)
  4243  0AC0                     l3007:	
  4244                           ;displayOptions.c: 61:     while( !EUSART_is_tx_ready() ) ;
  4245                           
  4246  0AC0  318A  229B  318A   	fcall	_EUSART_is_tx_ready
  4247  0AC3  3A00               	xorlw	0
  4248  0AC4  1903               	skipnz
  4249  0AC5  2AC0               	goto	l3007
  4250                           
  4251                           ;displayOptions.c: 62:     puts( string );
  4252  0AC6  0021               	movlb	1	; select bank1
  4253  0AC7  0838               	movf	writeString@string^(0+128),w
  4254  0AC8  00B3               	movwf	puts@s^(0+128)
  4255  0AC9  3001               	movlw	1
  4256  0ACA  00B4               	movwf	(puts@s+1)^(0+128)
  4257  0ACB  318B  231D  318A   	fcall	_puts
  4258                           
  4259                           ;displayOptions.c: 63:     _delay((unsigned long)((200)*(500000/4000000.0)));
  4260  0ACE  3008               	movlw	8
  4261  0ACF                     u3777:	
  4262  0ACF  0B89               	decfsz	9,f
  4263  0AD0  2ACF               	goto	u3777
  4264  0AD1  0000               	nop
  4265  0AD2  0008               	return
  4266  0AD3                     __end_of_writeString:	
  4267                           
  4268                           	psect	text2
  4269  0C49                     __ptext2:	
  4270 ;; *************** function _setCursor *****************
  4271 ;; Defined at:
  4272 ;;		line 72 in file "displayOptions.c"
  4273 ;; Parameters:    Size  Location     Type
  4274 ;;  a               1    wreg     unsigned char 
  4275 ;;  b               1    1[BANK1 ] unsigned char 
  4276 ;; Auto vars:     Size  Location     Type
  4277 ;;  a               1    4[BANK1 ] unsigned char 
  4278 ;; Return value:  Size  Location     Type
  4279 ;;                  1    wreg      void 
  4280 ;; Registers used:
  4281 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4282 ;; Tracked objects:
  4283 ;;		On entry : 0/0
  4284 ;;		On exit  : 0/0
  4285 ;;		Unchanged: 0/0
  4286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4287 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4288 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4289 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4290 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4291 ;;Total ram usage:        4 bytes
  4292 ;; Hardware stack levels used:    1
  4293 ;; Hardware stack levels required when called:    7
  4294 ;; This function calls:
  4295 ;;		_EUSART_Write
  4296 ;;		_EUSART_is_tx_ready
  4297 ;; This function is called by:
  4298 ;;		_main
  4299 ;; This function uses a non-reentrant model
  4300 ;;
  4301                           
  4302                           
  4303                           ;psect for function _setCursor
  4304  0C49                     _setCursor:	
  4305                           
  4306                           ;incstack = 0
  4307                           ; Regs used in _setCursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4308                           ;setCursor@a stored from wreg
  4309  0C49  0021               	movlb	1	; select bank1
  4310  0C4A  00A4               	movwf	setCursor@a^(0+128)
  4311  0C4B                     l2981:	
  4312                           ;displayOptions.c: 73:     while( !EUSART_is_tx_ready() ) ;
  4313                           
  4314  0C4B  318A  229B  318C   	fcall	_EUSART_is_tx_ready
  4315  0C4E  3A00               	xorlw	0
  4316  0C4F  1903               	skipnz
  4317  0C50  2C4B               	goto	l2981
  4318                           
  4319                           ;displayOptions.c: 74:     EUSART_Write( 254 );
  4320  0C51  30FE               	movlw	254
  4321  0C52  3187  27F6  318C   	fcall	_EUSART_Write
  4322                           
  4323                           ;displayOptions.c: 75:     _delay((unsigned long)((200)*(500000/4000000.0)));
  4324  0C55  3008               	movlw	8
  4325  0C56                     u3787:	
  4326  0C56  0B89               	decfsz	9,f
  4327  0C57  2C56               	goto	u3787
  4328  0C58  0000               	nop
  4329                           
  4330                           ;displayOptions.c: 76:     switch ( a ){
  4331  0C59  2C6E               	goto	l2997
  4332  0C5A                     l2987:	
  4333                           
  4334                           ;displayOptions.c: 78:         {;displayOptions.c: 79:             EUSART_Write(128 + 0 
      +                          + b) ;
  4335  0C5A  0821               	movf	setCursor@b^(0+128),w
  4336  0C5B  3E80               	addlw	128
  4337  0C5C  3187  27F6         	fcall	_EUSART_Write
  4338                           
  4339                           ;displayOptions.c: 80:             break ;
  4340  0C5E  0008               	return
  4341  0C5F                     l2989:	
  4342                           
  4343                           ;displayOptions.c: 83:         {;displayOptions.c: 84:            EUSART_Write(128 + 64 
      +                          + b) ;
  4344  0C5F  0821               	movf	setCursor@b^(0+128),w
  4345  0C60  3EC0               	addlw	192
  4346  0C61  3187  27F6         	fcall	_EUSART_Write
  4347                           
  4348                           ;displayOptions.c: 85:            break ;
  4349  0C63  0008               	return
  4350  0C64                     l2991:	
  4351                           
  4352                           ;displayOptions.c: 88:         {;displayOptions.c: 89:             EUSART_Write(128 + 20
      +                           + b) ;
  4353  0C64  0821               	movf	setCursor@b^(0+128),w
  4354  0C65  3E94               	addlw	148
  4355  0C66  3187  27F6         	fcall	_EUSART_Write
  4356                           
  4357                           ;displayOptions.c: 90:             break ;
  4358  0C68  0008               	return
  4359  0C69                     l2993:	
  4360                           
  4361                           ;displayOptions.c: 93:         {;displayOptions.c: 94:             EUSART_Write(128 + 84
      +                           + b) ;
  4362  0C69  0821               	movf	setCursor@b^(0+128),w
  4363  0C6A  3ED4               	addlw	212
  4364  0C6B  3187  27F6         	fcall	_EUSART_Write
  4365                           
  4366                           ;displayOptions.c: 95:             break ;
  4367  0C6D  0008               	return
  4368  0C6E                     l2997:	
  4369  0C6E  0021               	movlb	1	; select bank1
  4370  0C6F  0824               	movf	setCursor@a^(0+128),w
  4371  0C70  00A2               	movwf	??_setCursor^(0+128)
  4372  0C71  01A3               	clrf	(??_setCursor^(0+128)+1)
  4373                           
  4374                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4375                           ; Switch size 1, requested type "simple"
  4376                           ; Number of cases is 1, Range of values is 0 to 0
  4377                           ; switch strategies available:
  4378                           ; Name         Instructions Cycles
  4379                           ; simple_byte            4     3 (average)
  4380                           ; direct_byte            8     6 (fixed)
  4381                           ; jumptable            260     6 (fixed)
  4382                           ;	Chosen strategy is simple_byte
  4383  0C72  0823               	movf	(??_setCursor+1)^(0+128),w
  4384  0C73  3A00               	xorlw	0	; case 0
  4385  0C74  1903               	skipnz
  4386  0C75  2C77               	goto	l3225
  4387  0C76  2C85               	goto	l351
  4388  0C77                     l3225:	
  4389                           
  4390                           ; Switch size 1, requested type "simple"
  4391                           ; Number of cases is 4, Range of values is 1 to 4
  4392                           ; switch strategies available:
  4393                           ; Name         Instructions Cycles
  4394                           ; simple_byte           13     7 (average)
  4395                           ; direct_byte           17     9 (fixed)
  4396                           ; jumptable            263     9 (fixed)
  4397                           ;	Chosen strategy is simple_byte
  4398  0C77  0822               	movf	??_setCursor^(0+128),w
  4399  0C78  3A01               	xorlw	1	; case 1
  4400  0C79  1903               	skipnz
  4401  0C7A  2C5A               	goto	l2987
  4402  0C7B  3A03               	xorlw	3	; case 2
  4403  0C7C  1903               	skipnz
  4404  0C7D  2C5F               	goto	l2989
  4405  0C7E  3A01               	xorlw	1	; case 3
  4406  0C7F  1903               	skipnz
  4407  0C80  2C64               	goto	l2991
  4408  0C81  3A07               	xorlw	7	; case 4
  4409  0C82  1903               	skipnz
  4410  0C83  2C69               	goto	l2993
  4411  0C84  2C85               	goto	l351
  4412  0C85                     l351:	
  4413  0C85  0008               	return
  4414  0C86                     __end_of_setCursor:	
  4415                           
  4416                           	psect	text3
  4417  0A9B                     __ptext3:	
  4418 ;; *************** function _EUSART_is_tx_ready *****************
  4419 ;; Defined at:
  4420 ;;		line 93 in file "mcc_generated_files/eusart.c"
  4421 ;; Parameters:    Size  Location     Type
  4422 ;;		None
  4423 ;; Auto vars:     Size  Location     Type
  4424 ;;		None
  4425 ;; Return value:  Size  Location     Type
  4426 ;;                  1    wreg      _Bool 
  4427 ;; Registers used:
  4428 ;;		wreg, status,2
  4429 ;; Tracked objects:
  4430 ;;		On entry : 0/0
  4431 ;;		On exit  : 0/0
  4432 ;;		Unchanged: 0/0
  4433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4435 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4437 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4438 ;;Total ram usage:        1 bytes
  4439 ;; Hardware stack levels used:    1
  4440 ;; Hardware stack levels required when called:    6
  4441 ;; This function calls:
  4442 ;;		Nothing
  4443 ;; This function is called by:
  4444 ;;		_writeString
  4445 ;;		_setCursor
  4446 ;;		_backlightBrightness
  4447 ;;		_writePrintf
  4448 ;; This function uses a non-reentrant model
  4449 ;;
  4450                           
  4451                           
  4452                           ;psect for function _EUSART_is_tx_ready
  4453  0A9B                     _EUSART_is_tx_ready:	
  4454                           
  4455                           ;mcc_generated_files/eusart.c: 95:     return (_Bool)(PIR1bits.TXIF && TX1STAbits.TXEN);
  4456                           
  4457                           ;incstack = 0
  4458                           ; Regs used in _EUSART_is_tx_ready: [wreg+status,2]
  4459  0A9B  0021               	movlb	1	; select bank1
  4460  0A9C  01A0               	clrf	_EUSART_is_tx_ready$167^(0+128)
  4461  0A9D  0020               	movlb	0	; select bank0
  4462  0A9E  1E10               	btfss	16,4	;volatile
  4463  0A9F  2AA6               	goto	l2851
  4464  0AA0  0023               	movlb	3	; select bank3
  4465  0AA1  1E9E               	btfss	30,5	;volatile
  4466  0AA2  2AA6               	goto	l2851
  4467  0AA3  0021               	movlb	1	; select bank1
  4468  0AA4  01A0               	clrf	_EUSART_is_tx_ready$167^(0+128)
  4469  0AA5  0AA0               	incf	_EUSART_is_tx_ready$167^(0+128),f
  4470  0AA6                     l2851:	
  4471  0AA6  0021               	movlb	1	; select bank1
  4472  0AA7  0820               	movf	_EUSART_is_tx_ready$167^(0+128),w
  4473  0AA8  0008               	return
  4474  0AA9                     __end_of_EUSART_is_tx_ready:	
  4475                           
  4476                           	psect	text4
  4477  0A3F                     __ptext4:	
  4478 ;; *************** function _resetCursor *****************
  4479 ;; Defined at:
  4480 ;;		line 56 in file "displayOptions.c"
  4481 ;; Parameters:    Size  Location     Type
  4482 ;;		None
  4483 ;; Auto vars:     Size  Location     Type
  4484 ;;		None
  4485 ;; Return value:  Size  Location     Type
  4486 ;;                  1    wreg      void 
  4487 ;; Registers used:
  4488 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4489 ;; Tracked objects:
  4490 ;;		On entry : 0/0
  4491 ;;		On exit  : 0/0
  4492 ;;		Unchanged: 0/0
  4493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4498 ;;Total ram usage:        0 bytes
  4499 ;; Hardware stack levels used:    1
  4500 ;; Hardware stack levels required when called:   11
  4501 ;; This function calls:
  4502 ;;		_puts
  4503 ;; This function is called by:
  4504 ;;		_main
  4505 ;; This function uses a non-reentrant model
  4506 ;;
  4507                           
  4508                           
  4509                           ;psect for function _resetCursor
  4510  0A3F                     _resetCursor:	
  4511                           
  4512                           ;displayOptions.c: 57:     puts("|-");
  4513                           
  4514                           ;incstack = 0
  4515                           ; Regs used in _resetCursor: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4516  0A3F  3000               	movlw	low (STR_3| (0+32768))
  4517  0A40  0021               	movlb	1	; select bank1
  4518  0A41  00B3               	movwf	puts@s^(0+128)
  4519  0A42  3090               	movlw	high (STR_3| (0+32768))
  4520  0A43  00B4               	movwf	(puts@s^(0+128)+1)
  4521  0A44  318B  231D         	fcall	_puts
  4522  0A46  0008               	return
  4523  0A47                     __end_of_resetCursor:	
  4524                           
  4525                           	psect	text5
  4526  0B1D                     __ptext5:	
  4527 ;; *************** function _puts *****************
  4528 ;; Defined at:
  4529 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\puts.c"
  4530 ;; Parameters:    Size  Location     Type
  4531 ;;  s               2   19[BANK1 ] PTR const unsigned char 
  4532 ;;		 -> STR_3(3), hrDisp(13), distanceDisp(11), speedDisp(8), 
  4533 ;; Auto vars:     Size  Location     Type
  4534 ;;  r               2    0        int 
  4535 ;; Return value:  Size  Location     Type
  4536 ;;                  2   19[BANK1 ] int 
  4537 ;; Registers used:
  4538 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4539 ;; Tracked objects:
  4540 ;;		On entry : 0/0
  4541 ;;		On exit  : 0/0
  4542 ;;		Unchanged: 0/0
  4543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4544 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4545 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4547 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  4548 ;;Total ram usage:        5 bytes
  4549 ;; Hardware stack levels used:    1
  4550 ;; Hardware stack levels required when called:   10
  4551 ;; This function calls:
  4552 ;;		_fputc
  4553 ;;		_fputs
  4554 ;; This function is called by:
  4555 ;;		_resetCursor
  4556 ;;		_writeString
  4557 ;; This function uses a non-reentrant model
  4558 ;;
  4559                           
  4560                           
  4561                           ;psect for function _puts
  4562  0B1D                     _puts:	
  4563                           
  4564                           ;incstack = 0
  4565                           ; Regs used in _puts: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4566  0B1D  0021               	movlb	1	; select bank1
  4567  0B1E  01B7               	clrf	_puts$1033^(0+128)
  4568  0B1F  0AB7               	incf	_puts$1033^(0+128),f
  4569  0B20  0834               	movf	(puts@s+1)^(0+128),w
  4570  0B21  00AB               	movwf	(fputs@s+1)^(0+128)
  4571  0B22  0833               	movf	puts@s^(0+128),w
  4572  0B23  00AA               	movwf	fputs@s^(0+128)
  4573  0B24  01AC               	clrf	fputs@fp^(0+128)
  4574  0B25  318B  23B9  318B   	fcall	_fputs
  4575  0B28  0021               	movlb	1	; select bank1
  4576  0B29  1BAB               	btfsc	(?_fputs+1)^(0+128),7
  4577  0B2A  0008               	return
  4578  0B2B  300A               	movlw	10
  4579  0B2C  00A2               	movwf	fputc@c^(0+128)
  4580  0B2D  3000               	movlw	0
  4581  0B2E  00A3               	movwf	(fputc@c^(0+128)+1)
  4582  0B2F  01A4               	clrf	fputc@fp^(0+128)
  4583  0B30  318C  2486  318B   	fcall	_fputc
  4584  0B33  0021               	movlb	1	; select bank1
  4585  0B34  1BA3               	btfsc	(?_fputc+1)^(0+128),7
  4586  0B35  0008               	return
  4587  0B36  01B7               	clrf	_puts$1033^(0+128)
  4588  0B37  0008               	return
  4589  0B38                     __end_of_puts:	
  4590                           
  4591                           	psect	text6
  4592  0AA9                     __ptext6:	
  4593 ;; *************** function _printf *****************
  4594 ;; Defined at:
  4595 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  4596 ;; Parameters:    Size  Location     Type
  4597 ;;  fmt             2    5[BANK2 ] PTR const unsigned char 
  4598 ;;		 -> STR_2(3), STR_1(3), 
  4599 ;; Auto vars:     Size  Location     Type
  4600 ;;  ret             2    0        int 
  4601 ;;  ap              1   11[BANK2 ] PTR void [1]
  4602 ;;		 -> ?_printf(2), 
  4603 ;; Return value:  Size  Location     Type
  4604 ;;                  2    5[BANK2 ] int 
  4605 ;; Registers used:
  4606 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4607 ;; Tracked objects:
  4608 ;;		On entry : 0/0
  4609 ;;		On exit  : 0/0
  4610 ;;		Unchanged: 0/0
  4611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4612 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  4613 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  4614 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4615 ;;      Totals:         0       0       1       7       0       0       0       0       0       0       0       0       
      +0       0
  4616 ;;Total ram usage:        8 bytes
  4617 ;; Hardware stack levels used:    1
  4618 ;; Hardware stack levels required when called:   14
  4619 ;; This function calls:
  4620 ;;		_vfprintf
  4621 ;; This function is called by:
  4622 ;;		_main
  4623 ;;		_writePrintf
  4624 ;; This function uses a non-reentrant model
  4625 ;;
  4626                           
  4627                           
  4628                           ;psect for function _printf
  4629  0AA9                     _printf:	
  4630                           
  4631                           ;incstack = 0
  4632                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4633  0AA9  3047               	movlw	(low ((?_printf| (0+256)+2)))& (0+255)
  4634  0AAA  0021               	movlb	1	; select bank1
  4635  0AAB  00EF               	movwf	??_printf^(0+128)
  4636  0AAC  086F               	movf	??_printf^(0+128),w
  4637  0AAD  0022               	movlb	2	; select bank2
  4638  0AAE  00CB               	movwf	printf@ap^(0+256)
  4639  0AAF  0846               	movf	(printf@fmt+1)^(0+256),w
  4640  0AB0  0021               	movlb	1	; select bank1
  4641  0AB1  00ED               	movwf	(vfprintf@fmt+1)^(0+128)
  4642  0AB2  0022               	movlb	2	; select bank2
  4643  0AB3  0845               	movf	printf@fmt^(0+256),w
  4644  0AB4  0021               	movlb	1	; select bank1
  4645  0AB5  00EC               	movwf	vfprintf@fmt^(0+128)
  4646  0AB6  304B               	movlw	(low (printf@ap| (0+256)))& (0+255)
  4647  0AB7  00EF               	movwf	??_printf^(0+128)
  4648  0AB8  086F               	movf	??_printf^(0+128),w
  4649  0AB9  00EE               	movwf	vfprintf@ap^(0+128)
  4650  0ABA  3000               	movlw	0
  4651  0ABB  318C  2415         	fcall	_vfprintf
  4652  0ABD  0008               	return
  4653  0ABE                     __end_of_printf:	
  4654                           
  4655                           	psect	text7
  4656  0C15                     __ptext7:	
  4657 ;; *************** function _vfprintf *****************
  4658 ;; Defined at:
  4659 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4660 ;; Parameters:    Size  Location     Type
  4661 ;;  fp              1    wreg     PTR struct _IO_FILE
  4662 ;;		 -> NULL(0), 
  4663 ;;  fmt             2   76[BANK1 ] PTR const unsigned char 
  4664 ;;		 -> STR_2(3), STR_1(3), 
  4665 ;;  ap              1   78[BANK1 ] PTR PTR void 
  4666 ;;		 -> printf@ap(1), 
  4667 ;; Auto vars:     Size  Location     Type
  4668 ;;  fp              1    2[BANK2 ] PTR struct _IO_FILE
  4669 ;;		 -> NULL(0), 
  4670 ;;  cfmt            2    3[BANK2 ] PTR unsigned char 
  4671 ;;		 -> STR_2(3), STR_1(3), 
  4672 ;; Return value:  Size  Location     Type
  4673 ;;                  2   76[BANK1 ] int 
  4674 ;; Registers used:
  4675 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4676 ;; Tracked objects:
  4677 ;;		On entry : 0/0
  4678 ;;		On exit  : 0/0
  4679 ;;		Unchanged: 0/0
  4680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4681 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4682 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  4683 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  4684 ;;      Totals:         0       0       3       5       0       0       0       0       0       0       0       0       
      +0       0
  4685 ;;Total ram usage:        8 bytes
  4686 ;; Hardware stack levels used:    1
  4687 ;; Hardware stack levels required when called:   13
  4688 ;; This function calls:
  4689 ;;		_vfpfcnvrt
  4690 ;; This function is called by:
  4691 ;;		_printf
  4692 ;; This function uses a non-reentrant model
  4693 ;;
  4694                           
  4695                           
  4696                           ;psect for function _vfprintf
  4697  0C15                     _vfprintf:	
  4698                           
  4699                           ;incstack = 0
  4700                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4701                           ;vfprintf@fp stored from wreg
  4702  0C15  0022               	movlb	2	; select bank2
  4703  0C16  00C2               	movwf	vfprintf@fp^(0+256)
  4704                           
  4705                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  4706  0C17  0021               	movlb	1	; select bank1
  4707  0C18  086D               	movf	(vfprintf@fmt+1)^(0+128),w
  4708  0C19  0022               	movlb	2	; select bank2
  4709  0C1A  00C4               	movwf	(vfprintf@cfmt+1)^(0+256)
  4710  0C1B  0021               	movlb	1	; select bank1
  4711  0C1C  086C               	movf	vfprintf@fmt^(0+128),w
  4712  0C1D  0022               	movlb	2	; select bank2
  4713  0C1E  00C3               	movwf	vfprintf@cfmt^(0+256)
  4714                           
  4715                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  4716  0C1F  01CD               	clrf	_nout^(0+256)
  4717  0C20  01CE               	clrf	(_nout+1)^(0+256)
  4718  0C21                     l3145:	
  4719                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  4720                           
  4721                           
  4722                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  4723  0C21  0843               	movf	vfprintf@cfmt^(0+256),w
  4724  0C22  0084               	movwf	4
  4725  0C23  0844               	movf	(vfprintf@cfmt+1)^(0+256),w
  4726  0C24  0085               	movwf	5
  4727  0C25  0012               	moviw fsr0++
  4728  0C26  1903               	btfsc	3,2
  4729  0C27  2C41               	goto	l3147
  4730                           
  4731                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  4732  0C28  3043               	movlw	(low (vfprintf@cfmt| (0+256)))& (0+255)
  4733  0C29  00C0               	movwf	??_vfprintf^(0+256)
  4734  0C2A  0840               	movf	??_vfprintf^(0+256),w
  4735  0C2B  0021               	movlb	1	; select bank1
  4736  0C2C  00DA               	movwf	vfpfcnvrt@fmt^(0+128)
  4737  0C2D  086E               	movf	vfprintf@ap^(0+128),w
  4738  0C2E  0022               	movlb	2	; select bank2
  4739  0C2F  00C1               	movwf	(??_vfprintf+1)^(0+256)
  4740  0C30  0841               	movf	(??_vfprintf+1)^(0+256),w
  4741  0C31  0021               	movlb	1	; select bank1
  4742  0C32  00DB               	movwf	vfpfcnvrt@ap^(0+128)
  4743  0C33  0022               	movlb	2	; select bank2
  4744  0C34  0842               	movf	vfprintf@fp^(0+256),w
  4745  0C35  3185  259B  318C   	fcall	_vfpfcnvrt
  4746  0C38  0021               	movlb	1	; select bank1
  4747  0C39  085A               	movf	?_vfpfcnvrt^(0+128),w
  4748  0C3A  0022               	movlb	2	; select bank2
  4749  0C3B  07CD               	addwf	_nout^(0+256),f
  4750  0C3C  0021               	movlb	1	; select bank1
  4751  0C3D  085B               	movf	(?_vfpfcnvrt+1)^(0+128),w
  4752  0C3E  0022               	movlb	2	; select bank2
  4753  0C3F  3DCE               	addwfc	(_nout+1)^(0+256),f
  4754  0C40  2C21               	goto	l3145
  4755  0C41                     l3147:	
  4756                           
  4757                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  4758  0C41  084E               	movf	(_nout+1)^(0+256),w
  4759  0C42  0021               	movlb	1	; select bank1
  4760  0C43  00ED               	movwf	(?_vfprintf+1)^(0+128)
  4761  0C44  0022               	movlb	2	; select bank2
  4762  0C45  084D               	movf	_nout^(0+256),w
  4763  0C46  0021               	movlb	1	; select bank1
  4764  0C47  00EC               	movwf	?_vfprintf^(0+128)
  4765  0C48  0008               	return
  4766  0C49                     __end_of_vfprintf:	
  4767                           
  4768                           	psect	text8
  4769  059B                     __ptext8:	
  4770 ;; *************** function _vfpfcnvrt *****************
  4771 ;; Defined at:
  4772 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4773 ;; Parameters:    Size  Location     Type
  4774 ;;  fp              1    wreg     PTR struct _IO_FILE
  4775 ;;		 -> NULL(0), 
  4776 ;;  fmt             1   58[BANK1 ] PTR PTR unsigned char 
  4777 ;;		 -> vfprintf@cfmt(2), 
  4778 ;;  ap              1   59[BANK1 ] PTR PTR void 
  4779 ;;		 -> printf@ap(1), 
  4780 ;; Auto vars:     Size  Location     Type
  4781 ;;  fp              1   75[BANK1 ] PTR struct _IO_FILE
  4782 ;;		 -> NULL(0), 
  4783 ;;  ll              8   65[BANK1 ] long long 
  4784 ;;  llu             8    0        unsigned long long 
  4785 ;;  f               4    0        unsigned long long 
  4786 ;;  ct              3    0        unsigned char [3]
  4787 ;;  vp              2   73[BANK1 ] PTR void 
  4788 ;;		 -> ?_printf(2), rpm(2), 
  4789 ;;  i               2    0        int 
  4790 ;;  done            2    0        int 
  4791 ;;  cp              2    0        PTR unsigned char 
  4792 ;;  c               1    0        unsigned char 
  4793 ;; Return value:  Size  Location     Type
  4794 ;;                  2   58[BANK1 ] int 
  4795 ;; Registers used:
  4796 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4797 ;; Tracked objects:
  4798 ;;		On entry : 0/0
  4799 ;;		On exit  : 0/0
  4800 ;;		Unchanged: 0/0
  4801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4802 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4803 ;;      Locals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0
  4804 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  4805 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0
  4806 ;;Total ram usage:       18 bytes
  4807 ;; Hardware stack levels used:    1
  4808 ;; Hardware stack levels required when called:   12
  4809 ;; This function calls:
  4810 ;;		_dtoa
  4811 ;;		_fputc
  4812 ;; This function is called by:
  4813 ;;		_vfprintf
  4814 ;; This function uses a non-reentrant model
  4815 ;;
  4816                           
  4817                           
  4818                           ;psect for function _vfpfcnvrt
  4819  059B                     _vfpfcnvrt:	
  4820                           
  4821                           ;incstack = 0
  4822                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4823                           ;vfpfcnvrt@fp stored from wreg
  4824  059B  0021               	movlb	1	; select bank1
  4825  059C  00EB               	movwf	vfpfcnvrt@fp^(0+128)
  4826                           
  4827                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  4828  059D  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  4829  059E  0086               	movwf	6
  4830  059F  3001               	movlw	1	; select bank2/3
  4831  05A0  0087               	movwf	7
  4832  05A1  3F40               	moviw [0]fsr1
  4833  05A2  00DC               	movwf	??_vfpfcnvrt^(0+128)
  4834  05A3  3F41               	moviw [1]fsr1
  4835  05A4  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  4836  05A5  085C               	movf	??_vfpfcnvrt^(0+128),w
  4837  05A6  0084               	movwf	4
  4838  05A7  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4839  05A8  0085               	movwf	5
  4840  05A9  0012               	moviw fsr0++
  4841  05AA  3A25               	xorlw	37
  4842  05AB  1D03               	btfss	3,2
  4843  05AC  2E84               	goto	l2823
  4844                           
  4845                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  4846  05AD  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  4847  05AE  0086               	movwf	6
  4848  05AF  3001               	movlw	1	; select bank2/3
  4849  05B0  0087               	movwf	7
  4850  05B1  3001               	movlw	1
  4851  05B2  0781               	addwf	1,f
  4852  05B3  3141               	addfsr 1,1
  4853  05B4  1803               	skipnc
  4854  05B5  0A81               	incf	1,f
  4855                           
  4856                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  4857  05B6  0020               	movlb	0	; select bank0
  4858  05B7  01C9               	clrf	_width
  4859  05B8  01CA               	clrf	_width+1
  4860  05B9  01CD               	clrf	_flags
  4861  05BA  01CE               	clrf	_flags+1
  4862                           
  4863                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  4864  05BB  30FF               	movlw	255
  4865  05BC  00CB               	movwf	_prec
  4866  05BD  30FF               	movlw	255
  4867  05BE  00CC               	movwf	_prec+1
  4868                           
  4869                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  4870  05BF  0021               	movlb	1	; select bank1
  4871  05C0  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  4872  05C1  0086               	movwf	6
  4873  05C2  3001               	movlw	1	; select bank2/3
  4874  05C3  0087               	movwf	7
  4875  05C4  3F40               	moviw [0]fsr1
  4876  05C5  00DC               	movwf	??_vfpfcnvrt^(0+128)
  4877  05C6  3F41               	moviw [1]fsr1
  4878  05C7  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  4879  05C8  085C               	movf	??_vfpfcnvrt^(0+128),w
  4880  05C9  0084               	movwf	4
  4881  05CA  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4882  05CB  0085               	movwf	5
  4883  05CC  0012               	moviw fsr0++
  4884  05CD  3A64               	xorlw	100
  4885  05CE  1903               	btfsc	3,2
  4886  05CF  2DE0               	goto	l2787
  4887  05D0  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  4888  05D1  0086               	movwf	6
  4889  05D2  3001               	movlw	1	; select bank2/3
  4890  05D3  0087               	movwf	7
  4891  05D4  3F40               	moviw [0]fsr1
  4892  05D5  00DC               	movwf	??_vfpfcnvrt^(0+128)
  4893  05D6  3F41               	moviw [1]fsr1
  4894  05D7  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  4895  05D8  085C               	movf	??_vfpfcnvrt^(0+128),w
  4896  05D9  0084               	movwf	4
  4897  05DA  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4898  05DB  0085               	movwf	5
  4899  05DC  0012               	moviw fsr0++
  4900  05DD  3A69               	xorlw	105
  4901  05DE  1D03               	btfss	3,2
  4902  05DF  2E1D               	goto	l2795
  4903  05E0                     l2787:	
  4904                           
  4905                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  4906  05E0  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  4907  05E1  0086               	movwf	6
  4908  05E2  3001               	movlw	1	; select bank2/3
  4909  05E3  0087               	movwf	7
  4910  05E4  3001               	movlw	1
  4911  05E5  0781               	addwf	1,f
  4912  05E6  3141               	addfsr 1,1
  4913  05E7  1803               	skipnc
  4914  05E8  0A81               	incf	1,f
  4915                           
  4916                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4917  05E9  085B               	movf	vfpfcnvrt@ap^(0+128),w
  4918  05EA  0086               	movwf	6
  4919  05EB  3001               	movlw	1	; select bank2/3
  4920  05EC  0087               	movwf	7
  4921  05ED  0801               	movf	1,w
  4922  05EE  0084               	movwf	4
  4923  05EF  3001               	movlw	1	; select bank2/3
  4924  05F0  0085               	movwf	5
  4925  05F1  3002               	movlw	2
  4926  05F2  0781               	addwf	1,f
  4927  05F3  3F00               	moviw [0]fsr0
  4928  05F4  00DC               	movwf	??_vfpfcnvrt^(0+128)
  4929  05F5  3F01               	moviw [1]fsr0
  4930  05F6  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  4931  05F7  085C               	movf	??_vfpfcnvrt^(0+128),w
  4932  05F8  00E1               	movwf	vfpfcnvrt@ll^(0+128)
  4933  05F9  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4934  05FA  00E2               	movwf	(vfpfcnvrt@ll+1)^(0+128)
  4935  05FB  0D89               	rlf	9,f
  4936  05FC  3B89               	subwfb	9,f
  4937  05FD  0989               	comf	9,f
  4938  05FE  00E3               	movwf	(vfpfcnvrt@ll+2)^(0+128)
  4939  05FF  00E4               	movwf	(vfpfcnvrt@ll+3)^(0+128)
  4940  0600  00E5               	movwf	(vfpfcnvrt@ll+4)^(0+128)
  4941  0601  00E6               	movwf	(vfpfcnvrt@ll+5)^(0+128)
  4942  0602  00E7               	movwf	(vfpfcnvrt@ll+6)^(0+128)
  4943  0603  00E8               	movwf	(vfpfcnvrt@ll+7)^(0+128)
  4944                           
  4945                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  4946  0604  0861               	movf	vfpfcnvrt@ll^(0+128),w
  4947  0605  00BC               	movwf	dtoa@d^(0+128)
  4948  0606  0862               	movf	(vfpfcnvrt@ll+1)^(0+128),w
  4949  0607  00BD               	movwf	(dtoa@d+1)^(0+128)
  4950  0608  0863               	movf	(vfpfcnvrt@ll+2)^(0+128),w
  4951  0609  00BE               	movwf	(dtoa@d+2)^(0+128)
  4952  060A  0864               	movf	(vfpfcnvrt@ll+3)^(0+128),w
  4953  060B  00BF               	movwf	(dtoa@d+3)^(0+128)
  4954  060C  0865               	movf	(vfpfcnvrt@ll+4)^(0+128),w
  4955  060D  00C0               	movwf	(dtoa@d+4)^(0+128)
  4956  060E  0866               	movf	(vfpfcnvrt@ll+5)^(0+128),w
  4957  060F  00C1               	movwf	(dtoa@d+5)^(0+128)
  4958  0610  0867               	movf	(vfpfcnvrt@ll+6)^(0+128),w
  4959  0611  00C2               	movwf	(dtoa@d+6)^(0+128)
  4960  0612  0868               	movf	(vfpfcnvrt@ll+7)^(0+128),w
  4961  0613  00C3               	movwf	(dtoa@d+7)^(0+128)
  4962  0614  086B               	movf	vfpfcnvrt@fp^(0+128),w
  4963  0615  3184  244A         	fcall	_dtoa
  4964  0617  0021               	movlb	1	; select bank1
  4965  0618  083D               	movf	(?_dtoa+1)^(0+128),w
  4966  0619  00DB               	movwf	(?_vfpfcnvrt+1)^(0+128)
  4967  061A  083C               	movf	?_dtoa^(0+128),w
  4968  061B  00DA               	movwf	?_vfpfcnvrt^(0+128)
  4969  061C  0008               	return
  4970  061D                     l2795:	
  4971                           
  4972                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1077:      
      +                             if (*fmt[0] == 'n') {
  4973  061D  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  4974  061E  0086               	movwf	6
  4975  061F  3001               	movlw	1	; select bank2/3
  4976  0620  0087               	movwf	7
  4977  0621  3F40               	moviw [0]fsr1
  4978  0622  00DC               	movwf	??_vfpfcnvrt^(0+128)
  4979  0623  3F41               	moviw [1]fsr1
  4980  0624  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  4981  0625  085C               	movf	??_vfpfcnvrt^(0+128),w
  4982  0626  0084               	movwf	4
  4983  0627  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4984  0628  0085               	movwf	5
  4985  0629  0012               	moviw fsr0++
  4986  062A  3A6E               	xorlw	110
  4987  062B  1D03               	btfss	3,2
  4988  062C  2E51               	goto	l2807
  4989                           
  4990                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1078:      
      +                                 ++*fmt;
  4991  062D  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  4992  062E  0086               	movwf	6
  4993  062F  3001               	movlw	1	; select bank2/3
  4994  0630  0087               	movwf	7
  4995  0631  3001               	movlw	1
  4996  0632  0781               	addwf	1,f
  4997  0633  3141               	addfsr 1,1
  4998  0634  1803               	skipnc
  4999  0635  0A81               	incf	1,f
  5000                           
  5001                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1079:      
      +                                 vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
  5002  0636  085B               	movf	vfpfcnvrt@ap^(0+128),w
  5003  0637  0086               	movwf	6
  5004  0638  3001               	movlw	1	; select bank2/3
  5005  0639  0087               	movwf	7
  5006  063A  0801               	movf	1,w
  5007  063B  0084               	movwf	4
  5008  063C  3001               	movlw	1	; select bank2/3
  5009  063D  0085               	movwf	5
  5010  063E  3002               	movlw	2
  5011  063F  0781               	addwf	1,f
  5012  0640  3F00               	moviw [0]fsr0
  5013  0641  00E9               	movwf	vfpfcnvrt@vp^(0+128)
  5014  0642  3F01               	moviw [1]fsr0
  5015  0643  00EA               	movwf	(vfpfcnvrt@vp+1)^(0+128)
  5016                           
  5017                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1080:      
      +                                 *(int *)vp = nout;
  5018  0644  0869               	movf	vfpfcnvrt@vp^(0+128),w
  5019  0645  0086               	movwf	6
  5020  0646  086A               	movf	(vfpfcnvrt@vp+1)^(0+128),w
  5021  0647  0087               	movwf	7
  5022  0648  0022               	movlb	2	; select bank2
  5023  0649  084D               	movf	_nout^(0+256),w
  5024  064A  3FC0               	movwi [0]fsr1
  5025  064B  084E               	movf	(_nout+1)^(0+256),w
  5026  064C  3FC1               	movwi [1]fsr1
  5027  064D                     l2803:	
  5028                           
  5029                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1081:      
      +                                 return 0;
  5030  064D  0021               	movlb	1	; select bank1
  5031  064E  01DA               	clrf	?_vfpfcnvrt^(0+128)
  5032  064F  01DB               	clrf	(?_vfpfcnvrt+1)^(0+128)
  5033  0650  0008               	return
  5034  0651                     l2807:	
  5035                           
  5036                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  5037  0651  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5038  0652  0086               	movwf	6
  5039  0653  3001               	movlw	1	; select bank2/3
  5040  0654  0087               	movwf	7
  5041  0655  3F40               	moviw [0]fsr1
  5042  0656  00DC               	movwf	??_vfpfcnvrt^(0+128)
  5043  0657  3F41               	moviw [1]fsr1
  5044  0658  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5045  0659  085C               	movf	??_vfpfcnvrt^(0+128),w
  5046  065A  0084               	movwf	4
  5047  065B  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5048  065C  0085               	movwf	5
  5049  065D  0012               	moviw fsr0++
  5050  065E  3A25               	xorlw	37
  5051  065F  1D03               	btfss	3,2
  5052  0660  2E7A               	goto	l2817
  5053                           
  5054                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  5055  0661  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5056  0662  0086               	movwf	6
  5057  0663  3001               	movlw	1	; select bank2/3
  5058  0664  0087               	movwf	7
  5059  0665  3001               	movlw	1
  5060  0666  0781               	addwf	1,f
  5061  0667  3141               	addfsr 1,1
  5062  0668  1803               	skipnc
  5063  0669  0A81               	incf	1,f
  5064                           
  5065                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  5066  066A  3025               	movlw	37
  5067  066B  00A2               	movwf	fputc@c^(0+128)
  5068  066C  3000               	movlw	0
  5069  066D  00A3               	movwf	(fputc@c^(0+128)+1)
  5070  066E  086B               	movf	vfpfcnvrt@fp^(0+128),w
  5071  066F  00DC               	movwf	??_vfpfcnvrt^(0+128)
  5072  0670  085C               	movf	??_vfpfcnvrt^(0+128),w
  5073  0671  00A4               	movwf	fputc@fp^(0+128)
  5074  0672  318C  2486         	fcall	_fputc
  5075  0674                     l2813:	
  5076                           
  5077                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  5078  0674  3001               	movlw	1
  5079  0675  0021               	movlb	1	; select bank1
  5080  0676  00DA               	movwf	?_vfpfcnvrt^(0+128)
  5081  0677  3000               	movlw	0
  5082  0678  00DB               	movwf	(?_vfpfcnvrt^(0+128)+1)
  5083  0679  0008               	return
  5084  067A                     l2817:	
  5085                           
  5086                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  5087  067A  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5088  067B  0086               	movwf	6
  5089  067C  3001               	movlw	1	; select bank2/3
  5090  067D  0087               	movwf	7
  5091  067E  3001               	movlw	1
  5092  067F  0781               	addwf	1,f
  5093  0680  3141               	addfsr 1,1
  5094  0681  1803               	skipnc
  5095  0682  0A81               	incf	1,f
  5096  0683  2E4D               	goto	l2803
  5097  0684                     l2823:	
  5098                           
  5099                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  5100  0684  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5101  0685  0086               	movwf	6
  5102  0686  3001               	movlw	1	; select bank2/3
  5103  0687  0087               	movwf	7
  5104  0688  3F40               	moviw [0]fsr1
  5105  0689  00DC               	movwf	??_vfpfcnvrt^(0+128)
  5106  068A  3F41               	moviw [1]fsr1
  5107  068B  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5108  068C  085C               	movf	??_vfpfcnvrt^(0+128),w
  5109  068D  0084               	movwf	4
  5110  068E  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5111  068F  0085               	movwf	5
  5112  0690  0800               	movf	0,w	;code access
  5113  0691  00DE               	movwf	(??_vfpfcnvrt+2)^(0+128)
  5114  0692  01DF               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  5115  0693  085E               	movf	(??_vfpfcnvrt+2)^(0+128),w
  5116  0694  00A2               	movwf	fputc@c^(0+128)
  5117  0695  085F               	movf	(??_vfpfcnvrt+3)^(0+128),w
  5118  0696  00A3               	movwf	(fputc@c+1)^(0+128)
  5119  0697  086B               	movf	vfpfcnvrt@fp^(0+128),w
  5120  0698  00E0               	movwf	(??_vfpfcnvrt+4)^(0+128)
  5121  0699  0860               	movf	(??_vfpfcnvrt+4)^(0+128),w
  5122  069A  00A4               	movwf	fputc@fp^(0+128)
  5123  069B  318C  2486  3185   	fcall	_fputc
  5124                           
  5125                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  5126  069E  0021               	movlb	1	; select bank1
  5127  069F  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5128  06A0  0086               	movwf	6
  5129  06A1  3001               	movlw	1	; select bank2/3
  5130  06A2  0087               	movwf	7
  5131  06A3  3001               	movlw	1
  5132  06A4  0781               	addwf	1,f
  5133  06A5  3141               	addfsr 1,1
  5134  06A6  1803               	skipnc
  5135  06A7  0A81               	incf	1,f
  5136  06A8  2E74               	goto	l2813
  5137  06A9                     __end_of_vfpfcnvrt:	
  5138                           
  5139                           	psect	text9
  5140  044A                     __ptext9:	
  5141 ;; *************** function _dtoa *****************
  5142 ;; Defined at:
  5143 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5144 ;; Parameters:    Size  Location     Type
  5145 ;;  fp              1    wreg     PTR struct _IO_FILE
  5146 ;;		 -> NULL(0), 
  5147 ;;  d               8   28[BANK1 ] long long 
  5148 ;; Auto vars:     Size  Location     Type
  5149 ;;  fp              1   43[BANK1 ] PTR struct _IO_FILE
  5150 ;;		 -> NULL(0), 
  5151 ;;  n               8   48[BANK1 ] long long 
  5152 ;;  i               2   56[BANK1 ] int 
  5153 ;;  s               2   46[BANK1 ] int 
  5154 ;;  w               2   44[BANK1 ] int 
  5155 ;;  p               2   41[BANK1 ] int 
  5156 ;; Return value:  Size  Location     Type
  5157 ;;                  2   28[BANK1 ] int 
  5158 ;; Registers used:
  5159 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5160 ;; Tracked objects:
  5161 ;;		On entry : 0/0
  5162 ;;		On exit  : 0/0
  5163 ;;		Unchanged: 0/0
  5164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5165 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  5166 ;;      Locals:         0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0
  5167 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5168 ;;      Totals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0
  5169 ;;Total ram usage:       30 bytes
  5170 ;; Hardware stack levels used:    1
  5171 ;; Hardware stack levels required when called:   11
  5172 ;; This function calls:
  5173 ;;		___aodiv
  5174 ;;		___aomod
  5175 ;;		_abs
  5176 ;;		_pad
  5177 ;; This function is called by:
  5178 ;;		_vfpfcnvrt
  5179 ;; This function uses a non-reentrant model
  5180 ;;
  5181                           
  5182                           
  5183                           ;psect for function _dtoa
  5184  044A                     _dtoa:	
  5185                           
  5186                           ;incstack = 0
  5187                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5188                           ;dtoa@fp stored from wreg
  5189  044A  0021               	movlb	1	; select bank1
  5190  044B  00CB               	movwf	dtoa@fp^(0+128)
  5191                           
  5192                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  5193  044C  083C               	movf	dtoa@d^(0+128),w
  5194  044D  00D0               	movwf	dtoa@n^(0+128)
  5195  044E  083D               	movf	(dtoa@d+1)^(0+128),w
  5196  044F  00D1               	movwf	(dtoa@n+1)^(0+128)
  5197  0450  083E               	movf	(dtoa@d+2)^(0+128),w
  5198  0451  00D2               	movwf	(dtoa@n+2)^(0+128)
  5199  0452  083F               	movf	(dtoa@d+3)^(0+128),w
  5200  0453  00D3               	movwf	(dtoa@n+3)^(0+128)
  5201  0454  0840               	movf	(dtoa@d+4)^(0+128),w
  5202  0455  00D4               	movwf	(dtoa@n+4)^(0+128)
  5203  0456  0841               	movf	(dtoa@d+5)^(0+128),w
  5204  0457  00D5               	movwf	(dtoa@n+5)^(0+128)
  5205  0458  0842               	movf	(dtoa@d+6)^(0+128),w
  5206  0459  00D6               	movwf	(dtoa@n+6)^(0+128)
  5207  045A  0843               	movf	(dtoa@d+7)^(0+128),w
  5208  045B  00D7               	movwf	(dtoa@n+7)^(0+128)
  5209                           
  5210                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  5211  045C  30D0               	movlw	low dtoa@n
  5212  045D  0086               	movwf	6
  5213  045E  3000               	movlw	high dtoa@n
  5214  045F  0087               	movwf	7
  5215  0460  3F47               	moviw [7]fsr1
  5216  0461  00C4               	movwf	??_dtoa^(0+128)
  5217  0462  1FC4               	btfss	??_dtoa^(0+128),7
  5218  0463  2C66               	goto	u2240
  5219  0464  3001               	movlw	1
  5220  0465  2C67               	goto	u2250
  5221  0466                     u2240:	
  5222  0466  3000               	movlw	0
  5223  0467                     u2250:	
  5224  0467  0021               	movlb	1	; select bank1
  5225  0468  00C5               	movwf	(??_dtoa+1)^(0+128)
  5226  0469  01C6               	clrf	((??_dtoa+1)^(0+128)+1)
  5227  046A  0845               	movf	(??_dtoa+1)^(0+128),w
  5228  046B  00CE               	movwf	dtoa@s^(0+128)
  5229  046C  0846               	movf	(??_dtoa+2)^(0+128),w
  5230  046D  00CF               	movwf	(dtoa@s+1)^(0+128)
  5231                           
  5232                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  5233  046E  084E               	movf	dtoa@s^(0+128),w
  5234  046F  044F               	iorwf	(dtoa@s+1)^(0+128),w
  5235  0470  1903               	btfsc	3,2
  5236  0471  2C90               	goto	l450
  5237                           
  5238                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  5239  0472  09D0               	comf	dtoa@n^(0+128),f
  5240  0473  09D1               	comf	(dtoa@n+1)^(0+128),f
  5241  0474  09D2               	comf	(dtoa@n+2)^(0+128),f
  5242  0475  09D3               	comf	(dtoa@n+3)^(0+128),f
  5243  0476  09D4               	comf	(dtoa@n+4)^(0+128),f
  5244  0477  09D5               	comf	(dtoa@n+5)^(0+128),f
  5245  0478  09D6               	comf	(dtoa@n+6)^(0+128),f
  5246  0479  09D7               	comf	(dtoa@n+7)^(0+128),f
  5247  047A  0AD0               	incf	dtoa@n^(0+128),f
  5248  047B  1D03               	skipz
  5249  047C  2C90               	goto	l450
  5250  047D  0AD1               	incf	(dtoa@n+1)^(0+128),f
  5251  047E  1D03               	skipz
  5252  047F  2C90               	goto	l450
  5253  0480  0AD2               	incf	(dtoa@n+2)^(0+128),f
  5254  0481  1D03               	skipz
  5255  0482  2C90               	goto	l450
  5256  0483  0AD3               	incf	(dtoa@n+3)^(0+128),f
  5257  0484  1D03               	skipz
  5258  0485  2C90               	goto	l450
  5259  0486  0AD4               	incf	(dtoa@n+4)^(0+128),f
  5260  0487  1D03               	skipz
  5261  0488  2C90               	goto	l450
  5262  0489  0AD5               	incf	(dtoa@n+5)^(0+128),f
  5263  048A  1D03               	skipz
  5264  048B  2C90               	goto	l450
  5265  048C  0AD6               	incf	(dtoa@n+6)^(0+128),f
  5266  048D  1D03               	skipz
  5267  048E  2C90               	goto	l450
  5268  048F  0AD7               	incf	(dtoa@n+7)^(0+128),f
  5269  0490                     l450:	
  5270                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 284:     }
  5271                           
  5272                           
  5273                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  5274  0490  0020               	movlb	0	; select bank0
  5275  0491  1BCC               	btfsc	_prec+1,7
  5276  0492  2C97               	goto	l451
  5277                           
  5278                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  5279  0493  30FD               	movlw	253
  5280  0494  05CD               	andwf	_flags,f
  5281  0495  30FF               	movlw	255
  5282  0496  05CE               	andwf	_flags+1,f
  5283  0497                     l451:	
  5284                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 289:     }
  5285                           
  5286                           
  5287                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  5288  0497  084C               	movf	_prec+1,w
  5289  0498  3A80               	xorlw	128
  5290  0499  0021               	movlb	1	; select bank1
  5291  049A  00C4               	movwf	??_dtoa^(0+128)
  5292  049B  3080               	movlw	128
  5293  049C  0244               	subwf	??_dtoa^(0+128),w
  5294  049D  1D03               	skipz
  5295  049E  2CA2               	goto	u2295
  5296  049F  3001               	movlw	1
  5297  04A0  0020               	movlb	0	; select bank0
  5298  04A1  024B               	subwf	_prec,w
  5299  04A2                     u2295:	
  5300  04A2  1803               	skipnc
  5301  04A3  2CAA               	goto	l2241
  5302  04A4  3001               	movlw	1
  5303  04A5  0021               	movlb	1	; select bank1
  5304  04A6  00C9               	movwf	dtoa@p^(0+128)
  5305  04A7  3000               	movlw	0
  5306  04A8  00CA               	movwf	(dtoa@p^(0+128)+1)
  5307  04A9  2CB2               	goto	l455
  5308  04AA                     l2241:	
  5309  04AA  0020               	movlb	0	; select bank0
  5310  04AB  084C               	movf	_prec+1,w
  5311  04AC  0021               	movlb	1	; select bank1
  5312  04AD  00CA               	movwf	(dtoa@p+1)^(0+128)
  5313  04AE  0020               	movlb	0	; select bank0
  5314  04AF  084B               	movf	_prec,w
  5315  04B0  0021               	movlb	1	; select bank1
  5316  04B1  00C9               	movwf	dtoa@p^(0+128)
  5317  04B2                     l455:	
  5318                           
  5319                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  5320  04B2  0020               	movlb	0	; select bank0
  5321  04B3  084A               	movf	_width+1,w
  5322  04B4  0021               	movlb	1	; select bank1
  5323  04B5  00CD               	movwf	(dtoa@w+1)^(0+128)
  5324  04B6  0020               	movlb	0	; select bank0
  5325  04B7  0849               	movf	_width,w
  5326  04B8  0021               	movlb	1	; select bank1
  5327  04B9  00CC               	movwf	dtoa@w^(0+128)
  5328                           
  5329                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  5330  04BA  084E               	movf	dtoa@s^(0+128),w
  5331  04BB  044F               	iorwf	(dtoa@s+1)^(0+128),w
  5332  04BC  1D03               	btfss	3,2
  5333  04BD  2CC1               	goto	l2247
  5334  04BE  0020               	movlb	0	; select bank0
  5335  04BF  1D4D               	btfss	_flags,2
  5336  04C0  2CC6               	goto	l456
  5337  04C1                     l2247:	
  5338                           
  5339                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  5340  04C1  30FF               	movlw	255
  5341  04C2  0021               	movlb	1	; select bank1
  5342  04C3  07CC               	addwf	dtoa@w^(0+128),f
  5343  04C4  30FF               	movlw	255
  5344  04C5  3DCD               	addwfc	(dtoa@w+1)^(0+128),f
  5345  04C6                     l456:	
  5346                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 294:     }
  5347                           
  5348                           
  5349                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  5350  04C6  301F               	movlw	31
  5351  04C7  0021               	movlb	1	; select bank1
  5352  04C8  00D8               	movwf	dtoa@i^(0+128)
  5353  04C9  3000               	movlw	0
  5354  04CA  00D9               	movwf	(dtoa@i^(0+128)+1)
  5355                           
  5356                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  5357  04CB  0023               	movlb	3	; select bank3
  5358  04CC  01BF               	clrf	(_dbuf^(0+384)+31)
  5359                           
  5360                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5361  04CD  2D5C               	goto	l459
  5362  04CE                     l2261:	
  5363  04CE  0021               	movlb	1	; select bank1
  5364  04CF  0850               	movf	dtoa@n^(0+128),w
  5365  04D0  0451               	iorwf	(dtoa@n+1)^(0+128),w
  5366  04D1  0452               	iorwf	(dtoa@n+2)^(0+128),w
  5367  04D2  0453               	iorwf	(dtoa@n+3)^(0+128),w
  5368  04D3  0454               	iorwf	(dtoa@n+4)^(0+128),w
  5369  04D4  0455               	iorwf	(dtoa@n+5)^(0+128),w
  5370  04D5  0456               	iorwf	(dtoa@n+6)^(0+128),w
  5371  04D6  0457               	iorwf	(dtoa@n+7)^(0+128),w
  5372  04D7  1D03               	skipz
  5373  04D8  2CF3               	goto	l2251
  5374  04D9  084A               	movf	(dtoa@p+1)^(0+128),w
  5375  04DA  3A80               	xorlw	128
  5376  04DB  00C4               	movwf	??_dtoa^(0+128)
  5377  04DC  3080               	movlw	128
  5378  04DD  0244               	subwf	??_dtoa^(0+128),w
  5379  04DE  1D03               	skipz
  5380  04DF  2CE2               	goto	u2345
  5381  04E0  3001               	movlw	1
  5382  04E1  0249               	subwf	dtoa@p^(0+128),w
  5383  04E2                     u2345:	
  5384  04E2  1803               	skipnc
  5385  04E3  2CF3               	goto	l2251
  5386  04E4  0021               	movlb	1	; select bank1
  5387  04E5  084D               	movf	(dtoa@w+1)^(0+128),w
  5388  04E6  3A80               	xorlw	128
  5389  04E7  00C4               	movwf	??_dtoa^(0+128)
  5390  04E8  3080               	movlw	128
  5391  04E9  0244               	subwf	??_dtoa^(0+128),w
  5392  04EA  1D03               	skipz
  5393  04EB  2CEE               	goto	u2355
  5394  04EC  3001               	movlw	1
  5395  04ED  024C               	subwf	dtoa@w^(0+128),w
  5396  04EE                     u2355:	
  5397  04EE  1C03               	skipc
  5398  04EF  2D68               	goto	l2269
  5399  04F0  0020               	movlb	0	; select bank0
  5400  04F1  1CCD               	btfss	_flags,1
  5401  04F2  2D68               	goto	l2269
  5402  04F3                     l2251:	
  5403                           
  5404                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  5405  04F3  30FF               	movlw	255
  5406  04F4  0021               	movlb	1	; select bank1
  5407  04F5  07D8               	addwf	dtoa@i^(0+128),f
  5408  04F6  30FF               	movlw	255
  5409  04F7  3DD9               	addwfc	(dtoa@i+1)^(0+128),f
  5410                           
  5411                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  5412  04F8  300A               	movlw	10
  5413  04F9  00A0               	movwf	___aomod@divisor^(0+128)
  5414  04FA  01A1               	clrf	(___aomod@divisor+1)^(0+128)
  5415  04FB  01A2               	clrf	(___aomod@divisor+2)^(0+128)
  5416  04FC  01A3               	clrf	(___aomod@divisor+3)^(0+128)
  5417  04FD  01A4               	clrf	(___aomod@divisor+4)^(0+128)
  5418  04FE  01A5               	clrf	(___aomod@divisor+5)^(0+128)
  5419  04FF  01A6               	clrf	(___aomod@divisor+6)^(0+128)
  5420  0500  01A7               	clrf	(___aomod@divisor+7)^(0+128)
  5421  0501  0850               	movf	dtoa@n^(0+128),w
  5422  0502  00A8               	movwf	___aomod@dividend^(0+128)
  5423  0503  0851               	movf	(dtoa@n+1)^(0+128),w
  5424  0504  00A9               	movwf	(___aomod@dividend+1)^(0+128)
  5425  0505  0852               	movf	(dtoa@n+2)^(0+128),w
  5426  0506  00AA               	movwf	(___aomod@dividend+2)^(0+128)
  5427  0507  0853               	movf	(dtoa@n+3)^(0+128),w
  5428  0508  00AB               	movwf	(___aomod@dividend+3)^(0+128)
  5429  0509  0854               	movf	(dtoa@n+4)^(0+128),w
  5430  050A  00AC               	movwf	(___aomod@dividend+4)^(0+128)
  5431  050B  0855               	movf	(dtoa@n+5)^(0+128),w
  5432  050C  00AD               	movwf	(___aomod@dividend+5)^(0+128)
  5433  050D  0856               	movf	(dtoa@n+6)^(0+128),w
  5434  050E  00AE               	movwf	(___aomod@dividend+6)^(0+128)
  5435  050F  0857               	movf	(dtoa@n+7)^(0+128),w
  5436  0510  00AF               	movwf	(___aomod@dividend+7)^(0+128)
  5437  0511  318F  2721  3184   	fcall	___aomod
  5438  0514  0021               	movlb	1	; select bank1
  5439  0515  0821               	movf	(?___aomod+1)^(0+128),w
  5440  0516  00B4               	movwf	(abs@a+1)^(0+128)
  5441  0517  0820               	movf	?___aomod^(0+128),w
  5442  0518  00B3               	movwf	abs@a^(0+128)
  5443  0519  318A  22EB  3184   	fcall	_abs
  5444  051C  0021               	movlb	1	; select bank1
  5445  051D  0833               	movf	?_abs^(0+128),w
  5446  051E  3E30               	addlw	48
  5447  051F  00C4               	movwf	??_dtoa^(0+128)
  5448  0520  0858               	movf	dtoa@i^(0+128),w
  5449  0521  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5450  0522  0086               	movwf	6
  5451  0523  3001               	movlw	1	; select bank3/4
  5452  0524  0087               	movwf	7
  5453  0525  0844               	movf	??_dtoa^(0+128),w
  5454  0526  0081               	movwf	1
  5455                           
  5456                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  5457  0527  30FF               	movlw	255
  5458  0528  07C9               	addwf	dtoa@p^(0+128),f
  5459  0529  30FF               	movlw	255
  5460  052A  3DCA               	addwfc	(dtoa@p+1)^(0+128),f
  5461                           
  5462                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  5463  052B  30FF               	movlw	255
  5464  052C  07CC               	addwf	dtoa@w^(0+128),f
  5465  052D  30FF               	movlw	255
  5466  052E  3DCD               	addwfc	(dtoa@w+1)^(0+128),f
  5467                           
  5468                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  5469  052F  300A               	movlw	10
  5470  0530  00A0               	movwf	___aodiv@divisor^(0+128)
  5471  0531  01A1               	clrf	(___aodiv@divisor+1)^(0+128)
  5472  0532  01A2               	clrf	(___aodiv@divisor+2)^(0+128)
  5473  0533  01A3               	clrf	(___aodiv@divisor+3)^(0+128)
  5474  0534  01A4               	clrf	(___aodiv@divisor+4)^(0+128)
  5475  0535  01A5               	clrf	(___aodiv@divisor+5)^(0+128)
  5476  0536  01A6               	clrf	(___aodiv@divisor+6)^(0+128)
  5477  0537  01A7               	clrf	(___aodiv@divisor+7)^(0+128)
  5478  0538  0850               	movf	dtoa@n^(0+128),w
  5479  0539  00A8               	movwf	___aodiv@dividend^(0+128)
  5480  053A  0851               	movf	(dtoa@n+1)^(0+128),w
  5481  053B  00A9               	movwf	(___aodiv@dividend+1)^(0+128)
  5482  053C  0852               	movf	(dtoa@n+2)^(0+128),w
  5483  053D  00AA               	movwf	(___aodiv@dividend+2)^(0+128)
  5484  053E  0853               	movf	(dtoa@n+3)^(0+128),w
  5485  053F  00AB               	movwf	(___aodiv@dividend+3)^(0+128)
  5486  0540  0854               	movf	(dtoa@n+4)^(0+128),w
  5487  0541  00AC               	movwf	(___aodiv@dividend+4)^(0+128)
  5488  0542  0855               	movf	(dtoa@n+5)^(0+128),w
  5489  0543  00AD               	movwf	(___aodiv@dividend+5)^(0+128)
  5490  0544  0856               	movf	(dtoa@n+6)^(0+128),w
  5491  0545  00AE               	movwf	(___aodiv@dividend+6)^(0+128)
  5492  0546  0857               	movf	(dtoa@n+7)^(0+128),w
  5493  0547  00AF               	movwf	(___aodiv@dividend+7)^(0+128)
  5494  0548  3186  26A9  3184   	fcall	___aodiv
  5495  054B  0021               	movlb	1	; select bank1
  5496  054C  0820               	movf	?___aodiv^(0+128),w
  5497  054D  00D0               	movwf	dtoa@n^(0+128)
  5498  054E  0821               	movf	(?___aodiv+1)^(0+128),w
  5499  054F  00D1               	movwf	(dtoa@n+1)^(0+128)
  5500  0550  0822               	movf	(?___aodiv+2)^(0+128),w
  5501  0551  00D2               	movwf	(dtoa@n+2)^(0+128)
  5502  0552  0823               	movf	(?___aodiv+3)^(0+128),w
  5503  0553  00D3               	movwf	(dtoa@n+3)^(0+128)
  5504  0554  0824               	movf	(?___aodiv+4)^(0+128),w
  5505  0555  00D4               	movwf	(dtoa@n+4)^(0+128)
  5506  0556  0825               	movf	(?___aodiv+5)^(0+128),w
  5507  0557  00D5               	movwf	(dtoa@n+5)^(0+128)
  5508  0558  0826               	movf	(?___aodiv+6)^(0+128),w
  5509  0559  00D6               	movwf	(dtoa@n+6)^(0+128)
  5510  055A  0827               	movf	(?___aodiv+7)^(0+128),w
  5511  055B  00D7               	movwf	(dtoa@n+7)^(0+128)
  5512  055C                     l459:	
  5513                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 305:     }
  5514                           
  5515                           
  5516                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5517  055C  0021               	movlb	1	; select bank1
  5518  055D  0859               	movf	(dtoa@i+1)^(0+128),w
  5519  055E  3A80               	xorlw	128
  5520  055F  00C4               	movwf	??_dtoa^(0+128)
  5521  0560  3080               	movlw	128
  5522  0561  0244               	subwf	??_dtoa^(0+128),w
  5523  0562  1D03               	skipz
  5524  0563  2D66               	goto	u2325
  5525  0564  3001               	movlw	1
  5526  0565  0258               	subwf	dtoa@i^(0+128),w
  5527  0566                     u2325:	
  5528  0566  1803               	btfsc	3,0
  5529  0567  2CCE               	goto	l2261
  5530  0568                     l2269:	
  5531                           
  5532                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  5533  0568  0021               	movlb	1	; select bank1
  5534  0569  084E               	movf	dtoa@s^(0+128),w
  5535  056A  044F               	iorwf	(dtoa@s+1)^(0+128),w
  5536  056B  1D03               	btfss	3,2
  5537  056C  2D70               	goto	l2273
  5538  056D  0020               	movlb	0	; select bank0
  5539  056E  1D4D               	btfss	_flags,2
  5540  056F  2D88               	goto	l2283
  5541  0570                     l2273:	
  5542                           
  5543                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  5544  0570  30FF               	movlw	255
  5545  0571  0021               	movlb	1	; select bank1
  5546  0572  07D8               	addwf	dtoa@i^(0+128),f
  5547  0573  30FF               	movlw	255
  5548  0574  3DD9               	addwfc	(dtoa@i+1)^(0+128),f
  5549                           
  5550                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  5551  0575  084E               	movf	dtoa@s^(0+128),w
  5552  0576  044F               	iorwf	(dtoa@s+1)^(0+128),w
  5553  0577  1D03               	btfss	3,2
  5554  0578  2D7B               	goto	l2279
  5555  0579  302B               	movlw	43
  5556  057A  2D7C               	goto	L1
  5557  057B                     l2279:	
  5558  057B  302D               	movlw	45
  5559  057C                     L1:	
  5560  057C  00C7               	movwf	_dtoa$687^(0+128)
  5561  057D  3000               	movlw	0
  5562  057E  00C8               	movwf	(_dtoa$687^(0+128)+1)
  5563  057F  0847               	movf	_dtoa$687^(0+128),w
  5564  0580  00C4               	movwf	??_dtoa^(0+128)
  5565  0581  0858               	movf	dtoa@i^(0+128),w
  5566  0582  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5567  0583  0086               	movwf	6
  5568  0584  3001               	movlw	1	; select bank3/4
  5569  0585  0087               	movwf	7
  5570  0586  0844               	movf	??_dtoa^(0+128),w
  5571  0587  0081               	movwf	1
  5572  0588                     l2283:	
  5573                           
  5574                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  5575  0588  0021               	movlb	1	; select bank1
  5576  0589  0858               	movf	dtoa@i^(0+128),w
  5577  058A  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5578  058B  00C4               	movwf	??_dtoa^(0+128)
  5579  058C  0844               	movf	??_dtoa^(0+128),w
  5580  058D  00B3               	movwf	pad@buf^(0+128)
  5581  058E  084D               	movf	(dtoa@w+1)^(0+128),w
  5582  058F  00B5               	movwf	(pad@p+1)^(0+128)
  5583  0590  084C               	movf	dtoa@w^(0+128),w
  5584  0591  00B4               	movwf	pad@p^(0+128)
  5585  0592  084B               	movf	dtoa@fp^(0+128),w
  5586  0593  3187  27A0         	fcall	_pad
  5587  0595  0021               	movlb	1	; select bank1
  5588  0596  0834               	movf	(?_pad+1)^(0+128),w
  5589  0597  00BD               	movwf	(?_dtoa+1)^(0+128)
  5590  0598  0833               	movf	?_pad^(0+128),w
  5591  0599  00BC               	movwf	?_dtoa^(0+128)
  5592  059A  0008               	return
  5593  059B                     __end_of_dtoa:	
  5594                           
  5595                           	psect	text10
  5596  07A0                     __ptext10:	
  5597 ;; *************** function _pad *****************
  5598 ;; Defined at:
  5599 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5600 ;; Parameters:    Size  Location     Type
  5601 ;;  fp              1    wreg     PTR struct _IO_FILE
  5602 ;;		 -> NULL(0), 
  5603 ;;  buf             1   19[BANK1 ] PTR unsigned char 
  5604 ;;		 -> dbuf(32), 
  5605 ;;  p               2   20[BANK1 ] int 
  5606 ;; Auto vars:     Size  Location     Type
  5607 ;;  fp              1   27[BANK1 ] PTR struct _IO_FILE
  5608 ;;		 -> NULL(0), 
  5609 ;;  w               2   25[BANK1 ] int 
  5610 ;;  i               2   23[BANK1 ] int 
  5611 ;; Return value:  Size  Location     Type
  5612 ;;                  2   19[BANK1 ] int 
  5613 ;; Registers used:
  5614 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5615 ;; Tracked objects:
  5616 ;;		On entry : 0/0
  5617 ;;		On exit  : 0/0
  5618 ;;		Unchanged: 0/0
  5619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5620 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5621 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  5622 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5623 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  5624 ;;Total ram usage:        9 bytes
  5625 ;; Hardware stack levels used:    1
  5626 ;; Hardware stack levels required when called:   10
  5627 ;; This function calls:
  5628 ;;		_fputc
  5629 ;;		_fputs
  5630 ;;		_strlen
  5631 ;; This function is called by:
  5632 ;;		_dtoa
  5633 ;; This function uses a non-reentrant model
  5634 ;;
  5635                           
  5636                           
  5637                           ;psect for function _pad
  5638  07A0                     _pad:	
  5639                           
  5640                           ;incstack = 0
  5641                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5642                           ;pad@fp stored from wreg
  5643  07A0  0021               	movlb	1	; select bank1
  5644  07A1  00BB               	movwf	pad@fp^(0+128)
  5645                           
  5646                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  5647  07A2  0020               	movlb	0	; select bank0
  5648  07A3  1C4D               	btfss	_flags,0
  5649  07A4  2FB1               	goto	l2125
  5650                           
  5651                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  5652  07A5  0021               	movlb	1	; select bank1
  5653  07A6  0833               	movf	pad@buf^(0+128),w
  5654  07A7  00AA               	movwf	fputs@s^(0+128)
  5655  07A8  3001               	movlw	1
  5656  07A9  00AB               	movwf	(fputs@s+1)^(0+128)
  5657  07AA  083B               	movf	pad@fp^(0+128),w
  5658  07AB  00B6               	movwf	??_pad^(0+128)
  5659  07AC  0836               	movf	??_pad^(0+128),w
  5660  07AD  00AC               	movwf	fputs@fp^(0+128)
  5661  07AE  318B  23B9  3187   	fcall	_fputs
  5662  07B1                     l2125:	
  5663                           
  5664                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  5665  07B1  0021               	movlb	1	; select bank1
  5666  07B2  1BB5               	btfsc	(pad@p+1)^(0+128),7
  5667  07B3  2FB9               	goto	l2129
  5668  07B4  0835               	movf	(pad@p+1)^(0+128),w
  5669  07B5  00BA               	movwf	(pad@w+1)^(0+128)
  5670  07B6  0834               	movf	pad@p^(0+128),w
  5671  07B7  00B9               	movwf	pad@w^(0+128)
  5672  07B8  2FBB               	goto	l442
  5673  07B9                     l2129:	
  5674  07B9  01B9               	clrf	pad@w^(0+128)
  5675  07BA  01BA               	clrf	(pad@w+1)^(0+128)
  5676  07BB                     l442:	
  5677                           
  5678                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  5679  07BB  01B7               	clrf	pad@i^(0+128)
  5680  07BC  01B8               	clrf	(pad@i+1)^(0+128)
  5681  07BD                     l2135:	
  5682                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  5683                           
  5684                           
  5685                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  5686  07BD  0838               	movf	(pad@i+1)^(0+128),w
  5687  07BE  3A80               	xorlw	128
  5688  07BF  00B6               	movwf	??_pad^(0+128)
  5689  07C0  083A               	movf	(pad@w+1)^(0+128),w
  5690  07C1  3A80               	xorlw	128
  5691  07C2  0236               	subwf	??_pad^(0+128),w
  5692  07C3  1D03               	skipz
  5693  07C4  2FC7               	goto	u1975
  5694  07C5  0839               	movf	pad@w^(0+128),w
  5695  07C6  0237               	subwf	pad@i^(0+128),w
  5696  07C7                     u1975:	
  5697  07C7  1803               	btfsc	3,0
  5698  07C8  2FDB               	goto	l445
  5699                           
  5700                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  5701  07C9  3020               	movlw	32
  5702  07CA  0021               	movlb	1	; select bank1
  5703  07CB  00A2               	movwf	fputc@c^(0+128)
  5704  07CC  3000               	movlw	0
  5705  07CD  00A3               	movwf	(fputc@c^(0+128)+1)
  5706  07CE  083B               	movf	pad@fp^(0+128),w
  5707  07CF  00B6               	movwf	??_pad^(0+128)
  5708  07D0  0836               	movf	??_pad^(0+128),w
  5709  07D1  00A4               	movwf	fputc@fp^(0+128)
  5710  07D2  318C  2486  3187   	fcall	_fputc
  5711                           
  5712                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  5713  07D5  3001               	movlw	1
  5714  07D6  0021               	movlb	1	; select bank1
  5715  07D7  07B7               	addwf	pad@i^(0+128),f
  5716  07D8  3000               	movlw	0
  5717  07D9  3DB8               	addwfc	(pad@i+1)^(0+128),f
  5718  07DA  2FBD               	goto	l2135
  5719  07DB                     l445:	
  5720                           
  5721                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  5722  07DB  0020               	movlb	0	; select bank0
  5723  07DC  184D               	btfsc	_flags,0
  5724  07DD  2FEA               	goto	l2139
  5725                           
  5726                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  5727  07DE  0021               	movlb	1	; select bank1
  5728  07DF  0833               	movf	pad@buf^(0+128),w
  5729  07E0  00AA               	movwf	fputs@s^(0+128)
  5730  07E1  3001               	movlw	1
  5731  07E2  00AB               	movwf	(fputs@s+1)^(0+128)
  5732  07E3  083B               	movf	pad@fp^(0+128),w
  5733  07E4  00B6               	movwf	??_pad^(0+128)
  5734  07E5  0836               	movf	??_pad^(0+128),w
  5735  07E6  00AC               	movwf	fputs@fp^(0+128)
  5736  07E7  318B  23B9  3187   	fcall	_fputs
  5737  07EA                     l2139:	
  5738                           
  5739                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  5740  07EA  0021               	movlb	1	; select bank1
  5741  07EB  0833               	movf	pad@buf^(0+128),w
  5742  07EC  318B  2304         	fcall	_strlen
  5743  07EE  0021               	movlb	1	; select bank1
  5744  07EF  0839               	movf	pad@w^(0+128),w
  5745  07F0  0720               	addwf	?_strlen^(0+128),w
  5746  07F1  00B3               	movwf	?_pad^(0+128)
  5747  07F2  083A               	movf	(pad@w+1)^(0+128),w
  5748  07F3  3D21               	addwfc	(?_strlen+1)^(0+128),w
  5749  07F4  00B4               	movwf	(?_pad+1)^(0+128)
  5750  07F5  0008               	return
  5751  07F6                     __end_of_pad:	
  5752                           
  5753                           	psect	text11
  5754  0B04                     __ptext11:	
  5755 ;; *************** function _strlen *****************
  5756 ;; Defined at:
  5757 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  5758 ;; Parameters:    Size  Location     Type
  5759 ;;  s               1    wreg     PTR const unsigned char 
  5760 ;;		 -> dbuf(32), 
  5761 ;; Auto vars:     Size  Location     Type
  5762 ;;  s               1    4[BANK1 ] PTR const unsigned char 
  5763 ;;		 -> dbuf(32), 
  5764 ;;  a               1    3[BANK1 ] PTR const unsigned char 
  5765 ;;		 -> dbuf(32), 
  5766 ;; Return value:  Size  Location     Type
  5767 ;;                  2    0[BANK1 ] unsigned int 
  5768 ;; Registers used:
  5769 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5770 ;; Tracked objects:
  5771 ;;		On entry : 0/0
  5772 ;;		On exit  : 0/0
  5773 ;;		Unchanged: 0/0
  5774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5775 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5776 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5777 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5778 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  5779 ;;Total ram usage:        5 bytes
  5780 ;; Hardware stack levels used:    1
  5781 ;; Hardware stack levels required when called:    6
  5782 ;; This function calls:
  5783 ;;		Nothing
  5784 ;; This function is called by:
  5785 ;;		_pad
  5786 ;; This function uses a non-reentrant model
  5787 ;;
  5788                           
  5789                           
  5790                           ;psect for function _strlen
  5791  0B04                     _strlen:	
  5792                           
  5793                           ;incstack = 0
  5794                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  5795                           ;strlen@s stored from wreg
  5796  0B04  0021               	movlb	1	; select bank1
  5797  0B05  00A4               	movwf	strlen@s^(0+128)
  5798  0B06  0824               	movf	strlen@s^(0+128),w
  5799  0B07  00A2               	movwf	??_strlen^(0+128)
  5800  0B08  0822               	movf	??_strlen^(0+128),w
  5801  0B09  00A3               	movwf	strlen@a^(0+128)
  5802  0B0A                     l2115:	
  5803  0B0A  0824               	movf	strlen@s^(0+128),w
  5804  0B0B  0086               	movwf	6
  5805  0B0C  3001               	movlw	1	; select bank2/3
  5806  0B0D  0087               	movwf	7
  5807  0B0E  0801               	movf	1,w
  5808  0B0F  1903               	btfsc	3,2
  5809  0B10  2B16               	goto	l2117
  5810  0B11  3001               	movlw	1
  5811  0B12  00A2               	movwf	??_strlen^(0+128)
  5812  0B13  0822               	movf	??_strlen^(0+128),w
  5813  0B14  07A4               	addwf	strlen@s^(0+128),f
  5814  0B15  2B0A               	goto	l2115
  5815  0B16                     l2117:	
  5816  0B16  0823               	movf	strlen@a^(0+128),w
  5817  0B17  0224               	subwf	strlen@s^(0+128),w
  5818  0B18  00A0               	movwf	?_strlen^(0+128)
  5819  0B19  01A1               	clrf	(?_strlen+1)^(0+128)
  5820  0B1A  1BA0               	btfsc	?_strlen^(0+128),7
  5821  0B1B  03A1               	decf	(?_strlen+1)^(0+128),f
  5822  0B1C  0008               	return
  5823  0B1D                     __end_of_strlen:	
  5824                           
  5825                           	psect	text12
  5826  0BB9                     __ptext12:	
  5827 ;; *************** function _fputs *****************
  5828 ;; Defined at:
  5829 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  5830 ;; Parameters:    Size  Location     Type
  5831 ;;  s               2   10[BANK1 ] PTR const unsigned char 
  5832 ;;		 -> dbuf(32), STR_3(3), hrDisp(13), distanceDisp(11), 
  5833 ;;		 -> speedDisp(8), 
  5834 ;;  fp              1   12[BANK1 ] PTR struct _IO_FILE
  5835 ;;		 -> NULL(0), 
  5836 ;; Auto vars:     Size  Location     Type
  5837 ;;  i               2   17[BANK1 ] int 
  5838 ;;  c               1   16[BANK1 ] unsigned char 
  5839 ;; Return value:  Size  Location     Type
  5840 ;;                  2   10[BANK1 ] int 
  5841 ;; Registers used:
  5842 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5843 ;; Tracked objects:
  5844 ;;		On entry : 0/0
  5845 ;;		On exit  : 0/0
  5846 ;;		Unchanged: 0/0
  5847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5848 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5849 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5850 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5851 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  5852 ;;Total ram usage:        9 bytes
  5853 ;; Hardware stack levels used:    1
  5854 ;; Hardware stack levels required when called:    9
  5855 ;; This function calls:
  5856 ;;		_fputc
  5857 ;; This function is called by:
  5858 ;;		_pad
  5859 ;;		_puts
  5860 ;; This function uses a non-reentrant model
  5861 ;;
  5862                           
  5863                           
  5864                           ;psect for function _fputs
  5865  0BB9                     _fputs:	
  5866                           
  5867                           ;incstack = 0
  5868                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5869  0BB9  0021               	movlb	1	; select bank1
  5870  0BBA  01B1               	clrf	fputs@i^(0+128)
  5871  0BBB  01B2               	clrf	(fputs@i+1)^(0+128)
  5872  0BBC                     l2105:	
  5873  0BBC  082A               	movf	fputs@s^(0+128),w
  5874  0BBD  0731               	addwf	fputs@i^(0+128),w
  5875  0BBE  0084               	movwf	4
  5876  0BBF  082B               	movf	(fputs@s+1)^(0+128),w
  5877  0BC0  3D32               	addwfc	(fputs@i+1)^(0+128),w
  5878  0BC1  0085               	movwf	5
  5879  0BC2  0800               	movf	0,w	;code access
  5880  0BC3  00AD               	movwf	??_fputs^(0+128)
  5881  0BC4  082D               	movf	??_fputs^(0+128),w
  5882  0BC5  00B0               	movwf	fputs@c^(0+128)
  5883  0BC6  0830               	movf	fputs@c^(0+128),w
  5884  0BC7  1903               	btfsc	3,2
  5885  0BC8  2BDD               	goto	l2107
  5886  0BC9  0830               	movf	fputs@c^(0+128),w
  5887  0BCA  00AD               	movwf	??_fputs^(0+128)
  5888  0BCB  01AE               	clrf	(??_fputs^(0+128)+1)
  5889  0BCC  082D               	movf	??_fputs^(0+128),w
  5890  0BCD  00A2               	movwf	fputc@c^(0+128)
  5891  0BCE  082E               	movf	(??_fputs+1)^(0+128),w
  5892  0BCF  00A3               	movwf	(fputc@c+1)^(0+128)
  5893  0BD0  082C               	movf	fputs@fp^(0+128),w
  5894  0BD1  00AF               	movwf	(??_fputs+2)^(0+128)
  5895  0BD2  082F               	movf	(??_fputs+2)^(0+128),w
  5896  0BD3  00A4               	movwf	fputc@fp^(0+128)
  5897  0BD4  318C  2486  318B   	fcall	_fputc
  5898  0BD7  3001               	movlw	1
  5899  0BD8  0021               	movlb	1	; select bank1
  5900  0BD9  07B1               	addwf	fputs@i^(0+128),f
  5901  0BDA  3000               	movlw	0
  5902  0BDB  3DB2               	addwfc	(fputs@i+1)^(0+128),f
  5903  0BDC  2BBC               	goto	l2105
  5904  0BDD                     l2107:	
  5905  0BDD  0832               	movf	(fputs@i+1)^(0+128),w
  5906  0BDE  00AB               	movwf	(?_fputs+1)^(0+128)
  5907  0BDF  0831               	movf	fputs@i^(0+128),w
  5908  0BE0  00AA               	movwf	?_fputs^(0+128)
  5909  0BE1  0008               	return
  5910  0BE2                     __end_of_fputs:	
  5911                           
  5912                           	psect	text13
  5913  0C86                     __ptext13:	
  5914 ;; *************** function _fputc *****************
  5915 ;; Defined at:
  5916 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  5917 ;; Parameters:    Size  Location     Type
  5918 ;;  c               2    2[BANK1 ] int 
  5919 ;;  fp              1    4[BANK1 ] PTR struct _IO_FILE
  5920 ;;		 -> NULL(0), 
  5921 ;; Auto vars:     Size  Location     Type
  5922 ;;		None
  5923 ;; Return value:  Size  Location     Type
  5924 ;;                  2    2[BANK1 ] int 
  5925 ;; Registers used:
  5926 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5927 ;; Tracked objects:
  5928 ;;		On entry : 0/0
  5929 ;;		On exit  : 0/0
  5930 ;;		Unchanged: 0/0
  5931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5932 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5934 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  5935 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  5936 ;;Total ram usage:        8 bytes
  5937 ;; Hardware stack levels used:    1
  5938 ;; Hardware stack levels required when called:    8
  5939 ;; This function calls:
  5940 ;;		_putch
  5941 ;; This function is called by:
  5942 ;;		_pad
  5943 ;;		_vfpfcnvrt
  5944 ;;		_fputs
  5945 ;;		_puts
  5946 ;; This function uses a non-reentrant model
  5947 ;;
  5948                           
  5949                           
  5950                           ;psect for function _fputc
  5951  0C86                     _fputc:	
  5952                           
  5953                           ;incstack = 0
  5954                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5955  0C86  0021               	movlb	1	; select bank1
  5956  0C87  0824               	movf	fputc@fp^(0+128),w
  5957  0C88  1D03               	btfss	3,2
  5958  0C89  0824               	movf	fputc@fp^(0+128),w
  5959  0C8A  1D03               	btfss	3,2
  5960  0C8B  2C91               	goto	l2089
  5961  0C8C  0822               	movf	fputc@c^(0+128),w
  5962  0C8D  318A  2226  318C   	fcall	_putch
  5963  0C90  2CBD               	goto	l2095
  5964  0C91                     l2089:	
  5965  0C91  0824               	movf	fputc@fp^(0+128),w
  5966  0C92  3E03               	addlw	3
  5967  0C93  0086               	movwf	6
  5968  0C94  0187               	clrf	7
  5969  0C95  0016               	moviw fsr1++
  5970  0C96  0401               	iorwf	1,w
  5971  0C97  1903               	btfsc	3,2
  5972  0C98  2CB4               	goto	l2093
  5973  0C99  0824               	movf	fputc@fp^(0+128),w
  5974  0C9A  3E03               	addlw	3
  5975  0C9B  0086               	movwf	6
  5976  0C9C  0187               	clrf	7
  5977  0C9D  3F40               	moviw [0]fsr1
  5978  0C9E  00A5               	movwf	??_fputc^(0+128)
  5979  0C9F  3F41               	moviw [1]fsr1
  5980  0CA0  00A6               	movwf	(??_fputc^(0+128)+1)
  5981  0CA1  0A24               	incf	fputc@fp^(0+128),w
  5982  0CA2  0086               	movwf	6
  5983  0CA3  0187               	clrf	7
  5984  0CA4  3F40               	moviw [0]fsr1
  5985  0CA5  00A7               	movwf	(??_fputc+2)^(0+128)
  5986  0CA6  3F41               	moviw [1]fsr1
  5987  0CA7  00A8               	movwf	((??_fputc+2)^(0+128)+1)
  5988  0CA8  0828               	movf	(??_fputc+3)^(0+128),w
  5989  0CA9  3A80               	xorlw	128
  5990  0CAA  00A9               	movwf	(??_fputc+4)^(0+128)
  5991  0CAB  0826               	movf	(??_fputc+1)^(0+128),w
  5992  0CAC  3A80               	xorlw	128
  5993  0CAD  0229               	subwf	(??_fputc+4)^(0+128),w
  5994  0CAE  1D03               	skipz
  5995  0CAF  2CB2               	goto	u1925
  5996  0CB0  0825               	movf	??_fputc^(0+128),w
  5997  0CB1  0227               	subwf	(??_fputc+2)^(0+128),w
  5998  0CB2                     u1925:	
  5999  0CB2  1803               	skipnc
  6000  0CB3  2CBD               	goto	l2095
  6001  0CB4                     l2093:	
  6002  0CB4  0021               	movlb	1	; select bank1
  6003  0CB5  0A24               	incf	fputc@fp^(0+128),w
  6004  0CB6  0086               	movwf	6
  6005  0CB7  0187               	clrf	7
  6006  0CB8  3001               	movlw	1
  6007  0CB9  0781               	addwf	1,f
  6008  0CBA  3141               	addfsr 1,1
  6009  0CBB  1803               	skipnc
  6010  0CBC  0A81               	incf	1,f
  6011  0CBD                     l2095:	
  6012  0CBD  0021               	movlb	1	; select bank1
  6013  0CBE  0822               	movf	fputc@c^(0+128),w
  6014  0CBF  00A5               	movwf	??_fputc^(0+128)
  6015  0CC0  01A6               	clrf	(??_fputc^(0+128)+1)
  6016  0CC1  0825               	movf	??_fputc^(0+128),w
  6017  0CC2  00A2               	movwf	?_fputc^(0+128)
  6018  0CC3  0826               	movf	(??_fputc+1)^(0+128),w
  6019  0CC4  00A3               	movwf	(?_fputc+1)^(0+128)
  6020  0CC5  0008               	return
  6021  0CC6                     __end_of_fputc:	
  6022                           
  6023                           	psect	text14
  6024  0A26                     __ptext14:	
  6025 ;; *************** function _putch *****************
  6026 ;; Defined at:
  6027 ;;		line 151 in file "mcc_generated_files/eusart.c"
  6028 ;; Parameters:    Size  Location     Type
  6029 ;;  txData          1    wreg     unsigned char 
  6030 ;; Auto vars:     Size  Location     Type
  6031 ;;  txData          1    1[BANK1 ] unsigned char 
  6032 ;; Return value:  Size  Location     Type
  6033 ;;                  1    wreg      void 
  6034 ;; Registers used:
  6035 ;;		wreg, status,2, status,0, pclath, cstack
  6036 ;; Tracked objects:
  6037 ;;		On entry : 0/0
  6038 ;;		On exit  : 0/0
  6039 ;;		Unchanged: 0/0
  6040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6042 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6044 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6045 ;;Total ram usage:        1 bytes
  6046 ;; Hardware stack levels used:    1
  6047 ;; Hardware stack levels required when called:    7
  6048 ;; This function calls:
  6049 ;;		_EUSART_Write
  6050 ;; This function is called by:
  6051 ;;		_fputc
  6052 ;; This function uses a non-reentrant model
  6053 ;;
  6054                           
  6055                           
  6056                           ;psect for function _putch
  6057  0A26                     _putch:	
  6058                           
  6059                           ;incstack = 0
  6060                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  6061                           ;putch@txData stored from wreg
  6062  0A26  0021               	movlb	1	; select bank1
  6063  0A27  00A1               	movwf	putch@txData^(0+128)
  6064                           
  6065                           ;mcc_generated_files/eusart.c: 151: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 152: {;mcc_generated_files/eusart.c: 153:     EUSART_Write(txData);
  6066  0A28  0821               	movf	putch@txData^(0+128),w
  6067  0A29  3187  27F6         	fcall	_EUSART_Write
  6068  0A2B  0008               	return
  6069  0A2C                     __end_of_putch:	
  6070                           
  6071                           	psect	text15
  6072  07F6                     __ptext15:	
  6073 ;; *************** function _EUSART_Write *****************
  6074 ;; Defined at:
  6075 ;;		line 137 in file "mcc_generated_files/eusart.c"
  6076 ;; Parameters:    Size  Location     Type
  6077 ;;  txData          1    wreg     unsigned char 
  6078 ;; Auto vars:     Size  Location     Type
  6079 ;;  txData          1    0[BANK1 ] unsigned char 
  6080 ;; Return value:  Size  Location     Type
  6081 ;;                  1    wreg      void 
  6082 ;; Registers used:
  6083 ;;		wreg
  6084 ;; Tracked objects:
  6085 ;;		On entry : 0/0
  6086 ;;		On exit  : 0/0
  6087 ;;		Unchanged: 0/0
  6088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6090 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6092 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6093 ;;Total ram usage:        1 bytes
  6094 ;; Hardware stack levels used:    1
  6095 ;; Hardware stack levels required when called:    6
  6096 ;; This function calls:
  6097 ;;		Nothing
  6098 ;; This function is called by:
  6099 ;;		_putch
  6100 ;;		_setCursor
  6101 ;;		_backlightBrightness
  6102 ;; This function uses a non-reentrant model
  6103 ;;
  6104                           
  6105                           
  6106                           ;psect for function _EUSART_Write
  6107  07F6                     _EUSART_Write:	
  6108                           
  6109                           ;incstack = 0
  6110                           ; Regs used in _EUSART_Write: [wreg]
  6111                           ;EUSART_Write@txData stored from wreg
  6112  07F6  0021               	movlb	1	; select bank1
  6113  07F7  00A0               	movwf	EUSART_Write@txData^(0+128)
  6114  07F8                     l69:	
  6115                           ;mcc_generated_files/eusart.c: 140:     {;mcc_generated_files/eusart.c: 141:     }
  6116                           
  6117                           
  6118                           ;mcc_generated_files/eusart.c: 139:     while(0 == PIR1bits.TXIF)
  6119  07F8  0020               	movlb	0	; select bank0
  6120  07F9  1E10               	btfss	16,4	;volatile
  6121  07FA  2FF8               	goto	l69
  6122                           
  6123                           ;mcc_generated_files/eusart.c: 143:     TX1REG = txData;
  6124  07FB  0021               	movlb	1	; select bank1
  6125  07FC  0820               	movf	EUSART_Write@txData^(0+128),w
  6126  07FD  0023               	movlb	3	; select bank3
  6127  07FE  009A               	movwf	26	;volatile
  6128  07FF  0008               	return
  6129  0800                     __end_of_EUSART_Write:	
  6130                           
  6131                           	psect	text16
  6132  0AEB                     __ptext16:	
  6133 ;; *************** function _abs *****************
  6134 ;; Defined at:
  6135 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  6136 ;; Parameters:    Size  Location     Type
  6137 ;;  a               2   19[BANK1 ] int 
  6138 ;; Auto vars:     Size  Location     Type
  6139 ;;		None
  6140 ;; Return value:  Size  Location     Type
  6141 ;;                  2   19[BANK1 ] int 
  6142 ;; Registers used:
  6143 ;;		wreg, status,2, status,0
  6144 ;; Tracked objects:
  6145 ;;		On entry : 0/0
  6146 ;;		On exit  : 0/0
  6147 ;;		Unchanged: 0/0
  6148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6149 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6151 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6152 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  6153 ;;Total ram usage:        4 bytes
  6154 ;; Hardware stack levels used:    1
  6155 ;; Hardware stack levels required when called:    6
  6156 ;; This function calls:
  6157 ;;		Nothing
  6158 ;; This function is called by:
  6159 ;;		_dtoa
  6160 ;; This function uses a non-reentrant model
  6161 ;;
  6162                           
  6163                           
  6164                           ;psect for function _abs
  6165  0AEB                     _abs:	
  6166                           
  6167                           ;incstack = 0
  6168                           ; Regs used in _abs: [wreg+status,2+status,0]
  6169  0AEB  0021               	movlb	1	; select bank1
  6170  0AEC  0834               	movf	(abs@a+1)^(0+128),w
  6171  0AED  3A80               	xorlw	128
  6172  0AEE  00B5               	movwf	??_abs^(0+128)
  6173  0AEF  3080               	movlw	128
  6174  0AF0  0235               	subwf	??_abs^(0+128),w
  6175  0AF1  1D03               	skipz
  6176  0AF2  2AF5               	goto	u1995
  6177  0AF3  3001               	movlw	1
  6178  0AF4  0233               	subwf	abs@a^(0+128),w
  6179  0AF5                     u1995:	
  6180  0AF5  1803               	skipnc
  6181  0AF6  0008               	return
  6182  0AF7  0021               	movlb	1	; select bank1
  6183  0AF8  0933               	comf	abs@a^(0+128),w
  6184  0AF9  00B5               	movwf	??_abs^(0+128)
  6185  0AFA  0934               	comf	(abs@a+1)^(0+128),w
  6186  0AFB  00B6               	movwf	(??_abs^(0+128)+1)
  6187  0AFC  0AB5               	incf	??_abs^(0+128),f
  6188  0AFD  1903               	skipnz
  6189  0AFE  0AB6               	incf	(??_abs^(0+128)+1),f
  6190  0AFF  0835               	movf	??_abs^(0+128),w
  6191  0B00  00B3               	movwf	?_abs^(0+128)
  6192  0B01  0836               	movf	(??_abs+1)^(0+128),w
  6193  0B02  00B4               	movwf	(?_abs+1)^(0+128)
  6194  0B03  0008               	return
  6195  0B04                     __end_of_abs:	
  6196                           
  6197                           	psect	text17
  6198  0F21                     __ptext17:	
  6199 ;; *************** function ___aomod *****************
  6200 ;; Defined at:
  6201 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  6202 ;; Parameters:    Size  Location     Type
  6203 ;;  divisor         8    0[BANK1 ] long long 
  6204 ;;  dividend        8    8[BANK1 ] long long 
  6205 ;; Auto vars:     Size  Location     Type
  6206 ;;  sign            1   18[BANK1 ] unsigned char 
  6207 ;;  counter         1   17[BANK1 ] unsigned char 
  6208 ;; Return value:  Size  Location     Type
  6209 ;;                  8    0[BANK1 ] long long 
  6210 ;; Registers used:
  6211 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6212 ;; Tracked objects:
  6213 ;;		On entry : 0/0
  6214 ;;		On exit  : 0/0
  6215 ;;		Unchanged: 0/0
  6216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6217 ;;      Params:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  6218 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6219 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6220 ;;      Totals:         0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0
  6221 ;;Total ram usage:       19 bytes
  6222 ;; Hardware stack levels used:    1
  6223 ;; Hardware stack levels required when called:    6
  6224 ;; This function calls:
  6225 ;;		Nothing
  6226 ;; This function is called by:
  6227 ;;		_dtoa
  6228 ;; This function uses a non-reentrant model
  6229 ;;
  6230                           
  6231                           
  6232                           ;psect for function ___aomod
  6233  0F21                     ___aomod:	
  6234                           
  6235                           ;incstack = 0
  6236                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  6237  0F21  0021               	movlb	1	; select bank1
  6238  0F22  01B2               	clrf	___aomod@sign^(0+128)
  6239  0F23  30A8               	movlw	low ___aomod@dividend
  6240  0F24  0086               	movwf	6
  6241  0F25  3000               	movlw	high ___aomod@dividend
  6242  0F26  0087               	movwf	7
  6243  0F27  3F47               	moviw [7]fsr1
  6244  0F28  00B0               	movwf	??___aomod^(0+128)
  6245  0F29  1FB0               	btfss	??___aomod^(0+128),7
  6246  0F2A  2F4D               	goto	l2191
  6247  0F2B  0021               	movlb	1	; select bank1
  6248  0F2C  09A8               	comf	___aomod@dividend^(0+128),f
  6249  0F2D  09A9               	comf	(___aomod@dividend+1)^(0+128),f
  6250  0F2E  09AA               	comf	(___aomod@dividend+2)^(0+128),f
  6251  0F2F  09AB               	comf	(___aomod@dividend+3)^(0+128),f
  6252  0F30  09AC               	comf	(___aomod@dividend+4)^(0+128),f
  6253  0F31  09AD               	comf	(___aomod@dividend+5)^(0+128),f
  6254  0F32  09AE               	comf	(___aomod@dividend+6)^(0+128),f
  6255  0F33  09AF               	comf	(___aomod@dividend+7)^(0+128),f
  6256  0F34  0AA8               	incf	___aomod@dividend^(0+128),f
  6257  0F35  1D03               	skipz
  6258  0F36  2F4A               	goto	u212lld
  6259  0F37  0AA9               	incf	(___aomod@dividend+1)^(0+128),f
  6260  0F38  1D03               	skipz
  6261  0F39  2F4A               	goto	u212lld
  6262  0F3A  0AAA               	incf	(___aomod@dividend+2)^(0+128),f
  6263  0F3B  1D03               	skipz
  6264  0F3C  2F4A               	goto	u212lld
  6265  0F3D  0AAB               	incf	(___aomod@dividend+3)^(0+128),f
  6266  0F3E  1D03               	skipz
  6267  0F3F  2F4A               	goto	u212lld
  6268  0F40  0AAC               	incf	(___aomod@dividend+4)^(0+128),f
  6269  0F41  1D03               	skipz
  6270  0F42  2F4A               	goto	u212lld
  6271  0F43  0AAD               	incf	(___aomod@dividend+5)^(0+128),f
  6272  0F44  1D03               	skipz
  6273  0F45  2F4A               	goto	u212lld
  6274  0F46  0AAE               	incf	(___aomod@dividend+6)^(0+128),f
  6275  0F47  1D03               	skipz
  6276  0F48  2F4A               	goto	u212lld
  6277  0F49  0AAF               	incf	(___aomod@dividend+7)^(0+128),f
  6278  0F4A                     u212lld:	
  6279  0F4A  0021               	movlb	1	; select bank1
  6280  0F4B  01B2               	clrf	___aomod@sign^(0+128)
  6281  0F4C  0AB2               	incf	___aomod@sign^(0+128),f
  6282  0F4D                     l2191:	
  6283  0F4D  30A0               	movlw	low ___aomod@divisor
  6284  0F4E  0086               	movwf	6
  6285  0F4F  3000               	movlw	high ___aomod@divisor
  6286  0F50  0087               	movwf	7
  6287  0F51  3F47               	moviw [7]fsr1
  6288  0F52  0021               	movlb	1	; select bank1
  6289  0F53  00B0               	movwf	??___aomod^(0+128)
  6290  0F54  1FB0               	btfss	??___aomod^(0+128),7
  6291  0F55  2F75               	goto	l2195
  6292  0F56  0021               	movlb	1	; select bank1
  6293  0F57  09A0               	comf	___aomod@divisor^(0+128),f
  6294  0F58  09A1               	comf	(___aomod@divisor+1)^(0+128),f
  6295  0F59  09A2               	comf	(___aomod@divisor+2)^(0+128),f
  6296  0F5A  09A3               	comf	(___aomod@divisor+3)^(0+128),f
  6297  0F5B  09A4               	comf	(___aomod@divisor+4)^(0+128),f
  6298  0F5C  09A5               	comf	(___aomod@divisor+5)^(0+128),f
  6299  0F5D  09A6               	comf	(___aomod@divisor+6)^(0+128),f
  6300  0F5E  09A7               	comf	(___aomod@divisor+7)^(0+128),f
  6301  0F5F  0AA0               	incf	___aomod@divisor^(0+128),f
  6302  0F60  1D03               	skipz
  6303  0F61  2F75               	goto	l2195
  6304  0F62  0AA1               	incf	(___aomod@divisor+1)^(0+128),f
  6305  0F63  1D03               	skipz
  6306  0F64  2F75               	goto	l2195
  6307  0F65  0AA2               	incf	(___aomod@divisor+2)^(0+128),f
  6308  0F66  1D03               	skipz
  6309  0F67  2F75               	goto	l2195
  6310  0F68  0AA3               	incf	(___aomod@divisor+3)^(0+128),f
  6311  0F69  1D03               	skipz
  6312  0F6A  2F75               	goto	l2195
  6313  0F6B  0AA4               	incf	(___aomod@divisor+4)^(0+128),f
  6314  0F6C  1D03               	skipz
  6315  0F6D  2F75               	goto	l2195
  6316  0F6E  0AA5               	incf	(___aomod@divisor+5)^(0+128),f
  6317  0F6F  1D03               	skipz
  6318  0F70  2F75               	goto	l2195
  6319  0F71  0AA6               	incf	(___aomod@divisor+6)^(0+128),f
  6320  0F72  1D03               	skipz
  6321  0F73  2F75               	goto	l2195
  6322  0F74  0AA7               	incf	(___aomod@divisor+7)^(0+128),f
  6323  0F75                     l2195:	
  6324  0F75  0021               	movlb	1	; select bank1
  6325  0F76  0820               	movf	___aomod@divisor^(0+128),w
  6326  0F77  0421               	iorwf	(___aomod@divisor+1)^(0+128),w
  6327  0F78  0422               	iorwf	(___aomod@divisor+2)^(0+128),w
  6328  0F79  0423               	iorwf	(___aomod@divisor+3)^(0+128),w
  6329  0F7A  0424               	iorwf	(___aomod@divisor+4)^(0+128),w
  6330  0F7B  0425               	iorwf	(___aomod@divisor+5)^(0+128),w
  6331  0F7C  0426               	iorwf	(___aomod@divisor+6)^(0+128),w
  6332  0F7D  0427               	iorwf	(___aomod@divisor+7)^(0+128),w
  6333  0F7E  1903               	skipnz
  6334  0F7F  2FCD               	goto	l2211
  6335  0F80  01B1               	clrf	___aomod@counter^(0+128)
  6336  0F81  0AB1               	incf	___aomod@counter^(0+128),f
  6337  0F82                     l2203:	
  6338  0F82  1BA7               	btfsc	(___aomod@divisor+7)^(0+128),7
  6339  0F83  2F91               	goto	l2205
  6340  0F84  35A0               	lslf	___aomod@divisor^(0+128),f
  6341  0F85  0DA1               	rlf	(___aomod@divisor+1)^(0+128),f
  6342  0F86  0DA2               	rlf	(___aomod@divisor+2)^(0+128),f
  6343  0F87  0DA3               	rlf	(___aomod@divisor+3)^(0+128),f
  6344  0F88  0DA4               	rlf	(___aomod@divisor+4)^(0+128),f
  6345  0F89  0DA5               	rlf	(___aomod@divisor+5)^(0+128),f
  6346  0F8A  0DA6               	rlf	(___aomod@divisor+6)^(0+128),f
  6347  0F8B  0DA7               	rlf	(___aomod@divisor+7)^(0+128),f
  6348  0F8C  3001               	movlw	1
  6349  0F8D  00B0               	movwf	??___aomod^(0+128)
  6350  0F8E  0830               	movf	??___aomod^(0+128),w
  6351  0F8F  07B1               	addwf	___aomod@counter^(0+128),f
  6352  0F90  2F82               	goto	l2203
  6353  0F91                     l2205:	
  6354  0F91  0827               	movf	(___aomod@divisor+7)^(0+128),w
  6355  0F92  022F               	subwf	(___aomod@dividend+7)^(0+128),w
  6356  0F93  1D03               	skipz
  6357  0F94  2FAF               	goto	u2175
  6358  0F95  0826               	movf	(___aomod@divisor+6)^(0+128),w
  6359  0F96  022E               	subwf	(___aomod@dividend+6)^(0+128),w
  6360  0F97  1D03               	skipz
  6361  0F98  2FAF               	goto	u2175
  6362  0F99  0825               	movf	(___aomod@divisor+5)^(0+128),w
  6363  0F9A  022D               	subwf	(___aomod@dividend+5)^(0+128),w
  6364  0F9B  1D03               	skipz
  6365  0F9C  2FAF               	goto	u2175
  6366  0F9D  0824               	movf	(___aomod@divisor+4)^(0+128),w
  6367  0F9E  022C               	subwf	(___aomod@dividend+4)^(0+128),w
  6368  0F9F  1D03               	skipz
  6369  0FA0  2FAF               	goto	u2175
  6370  0FA1  0823               	movf	(___aomod@divisor+3)^(0+128),w
  6371  0FA2  022B               	subwf	(___aomod@dividend+3)^(0+128),w
  6372  0FA3  1D03               	skipz
  6373  0FA4  2FAF               	goto	u2175
  6374  0FA5  0822               	movf	(___aomod@divisor+2)^(0+128),w
  6375  0FA6  022A               	subwf	(___aomod@dividend+2)^(0+128),w
  6376  0FA7  1D03               	skipz
  6377  0FA8  2FAF               	goto	u2175
  6378  0FA9  0821               	movf	(___aomod@divisor+1)^(0+128),w
  6379  0FAA  0229               	subwf	(___aomod@dividend+1)^(0+128),w
  6380  0FAB  1D03               	skipz
  6381  0FAC  2FAF               	goto	u2175
  6382  0FAD  0820               	movf	___aomod@divisor^(0+128),w
  6383  0FAE  0228               	subwf	___aomod@dividend^(0+128),w
  6384  0FAF                     u2175:	
  6385  0FAF  1C03               	skipc
  6386  0FB0  2FC1               	goto	l2209
  6387  0FB1  0820               	movf	___aomod@divisor^(0+128),w
  6388  0FB2  02A8               	subwf	___aomod@dividend^(0+128),f
  6389  0FB3  0821               	movf	(___aomod@divisor+1)^(0+128),w
  6390  0FB4  3BA9               	subwfb	(___aomod@dividend+1)^(0+128),f
  6391  0FB5  0822               	movf	(___aomod@divisor+2)^(0+128),w
  6392  0FB6  3BAA               	subwfb	(___aomod@dividend+2)^(0+128),f
  6393  0FB7  0823               	movf	(___aomod@divisor+3)^(0+128),w
  6394  0FB8  3BAB               	subwfb	(___aomod@dividend+3)^(0+128),f
  6395  0FB9  0824               	movf	(___aomod@divisor+4)^(0+128),w
  6396  0FBA  3BAC               	subwfb	(___aomod@dividend+4)^(0+128),f
  6397  0FBB  0825               	movf	(___aomod@divisor+5)^(0+128),w
  6398  0FBC  3BAD               	subwfb	(___aomod@dividend+5)^(0+128),f
  6399  0FBD  0826               	movf	(___aomod@divisor+6)^(0+128),w
  6400  0FBE  3BAE               	subwfb	(___aomod@dividend+6)^(0+128),f
  6401  0FBF  0827               	movf	(___aomod@divisor+7)^(0+128),w
  6402  0FC0  3BAF               	subwfb	(___aomod@dividend+7)^(0+128),f
  6403  0FC1                     l2209:	
  6404  0FC1  36A7               	lsrf	(___aomod@divisor+7)^(0+128),f
  6405  0FC2  0CA6               	rrf	(___aomod@divisor+6)^(0+128),f
  6406  0FC3  0CA5               	rrf	(___aomod@divisor+5)^(0+128),f
  6407  0FC4  0CA4               	rrf	(___aomod@divisor+4)^(0+128),f
  6408  0FC5  0CA3               	rrf	(___aomod@divisor+3)^(0+128),f
  6409  0FC6  0CA2               	rrf	(___aomod@divisor+2)^(0+128),f
  6410  0FC7  0CA1               	rrf	(___aomod@divisor+1)^(0+128),f
  6411  0FC8  0CA0               	rrf	___aomod@divisor^(0+128),f
  6412  0FC9  3001               	movlw	1
  6413  0FCA  02B1               	subwf	___aomod@counter^(0+128),f
  6414  0FCB  1D03               	btfss	3,2
  6415  0FCC  2F91               	goto	l2205
  6416  0FCD                     l2211:	
  6417  0FCD  0832               	movf	___aomod@sign^(0+128),w
  6418  0FCE  1903               	btfsc	3,2
  6419  0FCF  2FEE               	goto	l605
  6420  0FD0  09A8               	comf	___aomod@dividend^(0+128),f
  6421  0FD1  09A9               	comf	(___aomod@dividend+1)^(0+128),f
  6422  0FD2  09AA               	comf	(___aomod@dividend+2)^(0+128),f
  6423  0FD3  09AB               	comf	(___aomod@dividend+3)^(0+128),f
  6424  0FD4  09AC               	comf	(___aomod@dividend+4)^(0+128),f
  6425  0FD5  09AD               	comf	(___aomod@dividend+5)^(0+128),f
  6426  0FD6  09AE               	comf	(___aomod@dividend+6)^(0+128),f
  6427  0FD7  09AF               	comf	(___aomod@dividend+7)^(0+128),f
  6428  0FD8  0AA8               	incf	___aomod@dividend^(0+128),f
  6429  0FD9  1D03               	skipz
  6430  0FDA  2FEE               	goto	l605
  6431  0FDB  0AA9               	incf	(___aomod@dividend+1)^(0+128),f
  6432  0FDC  1D03               	skipz
  6433  0FDD  2FEE               	goto	l605
  6434  0FDE  0AAA               	incf	(___aomod@dividend+2)^(0+128),f
  6435  0FDF  1D03               	skipz
  6436  0FE0  2FEE               	goto	l605
  6437  0FE1  0AAB               	incf	(___aomod@dividend+3)^(0+128),f
  6438  0FE2  1D03               	skipz
  6439  0FE3  2FEE               	goto	l605
  6440  0FE4  0AAC               	incf	(___aomod@dividend+4)^(0+128),f
  6441  0FE5  1D03               	skipz
  6442  0FE6  2FEE               	goto	l605
  6443  0FE7  0AAD               	incf	(___aomod@dividend+5)^(0+128),f
  6444  0FE8  1D03               	skipz
  6445  0FE9  2FEE               	goto	l605
  6446  0FEA  0AAE               	incf	(___aomod@dividend+6)^(0+128),f
  6447  0FEB  1D03               	skipz
  6448  0FEC  2FEE               	goto	l605
  6449  0FED  0AAF               	incf	(___aomod@dividend+7)^(0+128),f
  6450  0FEE                     l605:	
  6451  0FEE  0021               	movlb	1	; select bank1
  6452  0FEF  0828               	movf	___aomod@dividend^(0+128),w
  6453  0FF0  00A0               	movwf	?___aomod^(0+128)
  6454  0FF1  0829               	movf	(___aomod@dividend+1)^(0+128),w
  6455  0FF2  00A1               	movwf	(?___aomod+1)^(0+128)
  6456  0FF3  082A               	movf	(___aomod@dividend+2)^(0+128),w
  6457  0FF4  00A2               	movwf	(?___aomod+2)^(0+128)
  6458  0FF5  082B               	movf	(___aomod@dividend+3)^(0+128),w
  6459  0FF6  00A3               	movwf	(?___aomod+3)^(0+128)
  6460  0FF7  082C               	movf	(___aomod@dividend+4)^(0+128),w
  6461  0FF8  00A4               	movwf	(?___aomod+4)^(0+128)
  6462  0FF9  082D               	movf	(___aomod@dividend+5)^(0+128),w
  6463  0FFA  00A5               	movwf	(?___aomod+5)^(0+128)
  6464  0FFB  082E               	movf	(___aomod@dividend+6)^(0+128),w
  6465  0FFC  00A6               	movwf	(?___aomod+6)^(0+128)
  6466  0FFD  082F               	movf	(___aomod@dividend+7)^(0+128),w
  6467  0FFE  00A7               	movwf	(?___aomod+7)^(0+128)
  6468  0FFF  0008               	return
  6469  1000                     __end_of___aomod:	
  6470                           
  6471                           	psect	text18
  6472  06A9                     __ptext18:	
  6473 ;; *************** function ___aodiv *****************
  6474 ;; Defined at:
  6475 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  6476 ;; Parameters:    Size  Location     Type
  6477 ;;  divisor         8    0[BANK1 ] long long 
  6478 ;;  dividend        8    8[BANK1 ] long long 
  6479 ;; Auto vars:     Size  Location     Type
  6480 ;;  quotient        8   19[BANK1 ] long long 
  6481 ;;  sign            1   18[BANK1 ] unsigned char 
  6482 ;;  counter         1   17[BANK1 ] unsigned char 
  6483 ;; Return value:  Size  Location     Type
  6484 ;;                  8    0[BANK1 ] long long 
  6485 ;; Registers used:
  6486 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6487 ;; Tracked objects:
  6488 ;;		On entry : 0/0
  6489 ;;		On exit  : 0/0
  6490 ;;		Unchanged: 0/0
  6491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6492 ;;      Params:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  6493 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  6494 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6495 ;;      Totals:         0       0      27       0       0       0       0       0       0       0       0       0       
      +0       0
  6496 ;;Total ram usage:       27 bytes
  6497 ;; Hardware stack levels used:    1
  6498 ;; Hardware stack levels required when called:    6
  6499 ;; This function calls:
  6500 ;;		Nothing
  6501 ;; This function is called by:
  6502 ;;		_dtoa
  6503 ;; This function uses a non-reentrant model
  6504 ;;
  6505                           
  6506                           
  6507                           ;psect for function ___aodiv
  6508  06A9                     ___aodiv:	
  6509                           
  6510                           ;incstack = 0
  6511                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  6512  06A9  0021               	movlb	1	; select bank1
  6513  06AA  01B2               	clrf	___aodiv@sign^(0+128)
  6514  06AB  30A0               	movlw	low ___aodiv@divisor
  6515  06AC  0086               	movwf	6
  6516  06AD  3000               	movlw	high ___aodiv@divisor
  6517  06AE  0087               	movwf	7
  6518  06AF  3F47               	moviw [7]fsr1
  6519  06B0  00B0               	movwf	??___aodiv^(0+128)
  6520  06B1  1FB0               	btfss	??___aodiv^(0+128),7
  6521  06B2  2ED5               	goto	l2153
  6522  06B3  0021               	movlb	1	; select bank1
  6523  06B4  09A0               	comf	___aodiv@divisor^(0+128),f
  6524  06B5  09A1               	comf	(___aodiv@divisor+1)^(0+128),f
  6525  06B6  09A2               	comf	(___aodiv@divisor+2)^(0+128),f
  6526  06B7  09A3               	comf	(___aodiv@divisor+3)^(0+128),f
  6527  06B8  09A4               	comf	(___aodiv@divisor+4)^(0+128),f
  6528  06B9  09A5               	comf	(___aodiv@divisor+5)^(0+128),f
  6529  06BA  09A6               	comf	(___aodiv@divisor+6)^(0+128),f
  6530  06BB  09A7               	comf	(___aodiv@divisor+7)^(0+128),f
  6531  06BC  0AA0               	incf	___aodiv@divisor^(0+128),f
  6532  06BD  1D03               	skipz
  6533  06BE  2ED2               	goto	u201lld
  6534  06BF  0AA1               	incf	(___aodiv@divisor+1)^(0+128),f
  6535  06C0  1D03               	skipz
  6536  06C1  2ED2               	goto	u201lld
  6537  06C2  0AA2               	incf	(___aodiv@divisor+2)^(0+128),f
  6538  06C3  1D03               	skipz
  6539  06C4  2ED2               	goto	u201lld
  6540  06C5  0AA3               	incf	(___aodiv@divisor+3)^(0+128),f
  6541  06C6  1D03               	skipz
  6542  06C7  2ED2               	goto	u201lld
  6543  06C8  0AA4               	incf	(___aodiv@divisor+4)^(0+128),f
  6544  06C9  1D03               	skipz
  6545  06CA  2ED2               	goto	u201lld
  6546  06CB  0AA5               	incf	(___aodiv@divisor+5)^(0+128),f
  6547  06CC  1D03               	skipz
  6548  06CD  2ED2               	goto	u201lld
  6549  06CE  0AA6               	incf	(___aodiv@divisor+6)^(0+128),f
  6550  06CF  1D03               	skipz
  6551  06D0  2ED2               	goto	u201lld
  6552  06D1  0AA7               	incf	(___aodiv@divisor+7)^(0+128),f
  6553  06D2                     u201lld:	
  6554  06D2  0021               	movlb	1	; select bank1
  6555  06D3  01B2               	clrf	___aodiv@sign^(0+128)
  6556  06D4  0AB2               	incf	___aodiv@sign^(0+128),f
  6557  06D5                     l2153:	
  6558  06D5  30A8               	movlw	low ___aodiv@dividend
  6559  06D6  0086               	movwf	6
  6560  06D7  3000               	movlw	high ___aodiv@dividend
  6561  06D8  0087               	movwf	7
  6562  06D9  3F47               	moviw [7]fsr1
  6563  06DA  0021               	movlb	1	; select bank1
  6564  06DB  00B0               	movwf	??___aodiv^(0+128)
  6565  06DC  1FB0               	btfss	??___aodiv^(0+128),7
  6566  06DD  2F02               	goto	l2159
  6567  06DE  0021               	movlb	1	; select bank1
  6568  06DF  09A8               	comf	___aodiv@dividend^(0+128),f
  6569  06E0  09A9               	comf	(___aodiv@dividend+1)^(0+128),f
  6570  06E1  09AA               	comf	(___aodiv@dividend+2)^(0+128),f
  6571  06E2  09AB               	comf	(___aodiv@dividend+3)^(0+128),f
  6572  06E3  09AC               	comf	(___aodiv@dividend+4)^(0+128),f
  6573  06E4  09AD               	comf	(___aodiv@dividend+5)^(0+128),f
  6574  06E5  09AE               	comf	(___aodiv@dividend+6)^(0+128),f
  6575  06E6  09AF               	comf	(___aodiv@dividend+7)^(0+128),f
  6576  06E7  0AA8               	incf	___aodiv@dividend^(0+128),f
  6577  06E8  1D03               	skipz
  6578  06E9  2EFD               	goto	l2157
  6579  06EA  0AA9               	incf	(___aodiv@dividend+1)^(0+128),f
  6580  06EB  1D03               	skipz
  6581  06EC  2EFD               	goto	l2157
  6582  06ED  0AAA               	incf	(___aodiv@dividend+2)^(0+128),f
  6583  06EE  1D03               	skipz
  6584  06EF  2EFD               	goto	l2157
  6585  06F0  0AAB               	incf	(___aodiv@dividend+3)^(0+128),f
  6586  06F1  1D03               	skipz
  6587  06F2  2EFD               	goto	l2157
  6588  06F3  0AAC               	incf	(___aodiv@dividend+4)^(0+128),f
  6589  06F4  1D03               	skipz
  6590  06F5  2EFD               	goto	l2157
  6591  06F6  0AAD               	incf	(___aodiv@dividend+5)^(0+128),f
  6592  06F7  1D03               	skipz
  6593  06F8  2EFD               	goto	l2157
  6594  06F9  0AAE               	incf	(___aodiv@dividend+6)^(0+128),f
  6595  06FA  1D03               	skipz
  6596  06FB  2EFD               	goto	l2157
  6597  06FC  0AAF               	incf	(___aodiv@dividend+7)^(0+128),f
  6598  06FD                     l2157:	
  6599  06FD  3001               	movlw	1
  6600  06FE  0021               	movlb	1	; select bank1
  6601  06FF  00B0               	movwf	??___aodiv^(0+128)
  6602  0700  0830               	movf	??___aodiv^(0+128),w
  6603  0701  06B2               	xorwf	___aodiv@sign^(0+128),f
  6604  0702                     l2159:	
  6605  0702  30B3               	movlw	low ___aodiv@quotient
  6606  0703  0086               	movwf	6
  6607  0704  3000               	movlw	high ___aodiv@quotient
  6608  0705  0087               	movwf	7
  6609  0706  3008               	movlw	8
  6610  0707  0021               	movlb	1	; select bank1
  6611  0708  00B0               	movwf	??___aodiv^(0+128)
  6612  0709  3000               	movlw	0
  6613  070A                     u2040:	
  6614  070A  001E               	movwi fsr1++
  6615  070B  0BB0               	decfsz	??___aodiv^(0+128),f
  6616  070C  2F0A               	goto	u2040
  6617  070D  0820               	movf	___aodiv@divisor^(0+128),w
  6618  070E  0421               	iorwf	(___aodiv@divisor+1)^(0+128),w
  6619  070F  0422               	iorwf	(___aodiv@divisor+2)^(0+128),w
  6620  0710  0423               	iorwf	(___aodiv@divisor+3)^(0+128),w
  6621  0711  0424               	iorwf	(___aodiv@divisor+4)^(0+128),w
  6622  0712  0425               	iorwf	(___aodiv@divisor+5)^(0+128),w
  6623  0713  0426               	iorwf	(___aodiv@divisor+6)^(0+128),w
  6624  0714  0427               	iorwf	(___aodiv@divisor+7)^(0+128),w
  6625  0715  1903               	skipnz
  6626  0716  2F6D               	goto	l2181
  6627  0717  01B1               	clrf	___aodiv@counter^(0+128)
  6628  0718  0AB1               	incf	___aodiv@counter^(0+128),f
  6629  0719                     l2169:	
  6630  0719  1BA7               	btfsc	(___aodiv@divisor+7)^(0+128),7
  6631  071A  2F28               	goto	l2171
  6632  071B  35A0               	lslf	___aodiv@divisor^(0+128),f
  6633  071C  0DA1               	rlf	(___aodiv@divisor+1)^(0+128),f
  6634  071D  0DA2               	rlf	(___aodiv@divisor+2)^(0+128),f
  6635  071E  0DA3               	rlf	(___aodiv@divisor+3)^(0+128),f
  6636  071F  0DA4               	rlf	(___aodiv@divisor+4)^(0+128),f
  6637  0720  0DA5               	rlf	(___aodiv@divisor+5)^(0+128),f
  6638  0721  0DA6               	rlf	(___aodiv@divisor+6)^(0+128),f
  6639  0722  0DA7               	rlf	(___aodiv@divisor+7)^(0+128),f
  6640  0723  3001               	movlw	1
  6641  0724  00B0               	movwf	??___aodiv^(0+128)
  6642  0725  0830               	movf	??___aodiv^(0+128),w
  6643  0726  07B1               	addwf	___aodiv@counter^(0+128),f
  6644  0727  2F19               	goto	l2169
  6645  0728                     l2171:	
  6646  0728  35B3               	lslf	___aodiv@quotient^(0+128),f
  6647  0729  0DB4               	rlf	(___aodiv@quotient+1)^(0+128),f
  6648  072A  0DB5               	rlf	(___aodiv@quotient+2)^(0+128),f
  6649  072B  0DB6               	rlf	(___aodiv@quotient+3)^(0+128),f
  6650  072C  0DB7               	rlf	(___aodiv@quotient+4)^(0+128),f
  6651  072D  0DB8               	rlf	(___aodiv@quotient+5)^(0+128),f
  6652  072E  0DB9               	rlf	(___aodiv@quotient+6)^(0+128),f
  6653  072F  0DBA               	rlf	(___aodiv@quotient+7)^(0+128),f
  6654  0730  0827               	movf	(___aodiv@divisor+7)^(0+128),w
  6655  0731  022F               	subwf	(___aodiv@dividend+7)^(0+128),w
  6656  0732  1D03               	skipz
  6657  0733  2F4E               	goto	u2075
  6658  0734  0826               	movf	(___aodiv@divisor+6)^(0+128),w
  6659  0735  022E               	subwf	(___aodiv@dividend+6)^(0+128),w
  6660  0736  1D03               	skipz
  6661  0737  2F4E               	goto	u2075
  6662  0738  0825               	movf	(___aodiv@divisor+5)^(0+128),w
  6663  0739  022D               	subwf	(___aodiv@dividend+5)^(0+128),w
  6664  073A  1D03               	skipz
  6665  073B  2F4E               	goto	u2075
  6666  073C  0824               	movf	(___aodiv@divisor+4)^(0+128),w
  6667  073D  022C               	subwf	(___aodiv@dividend+4)^(0+128),w
  6668  073E  1D03               	skipz
  6669  073F  2F4E               	goto	u2075
  6670  0740  0823               	movf	(___aodiv@divisor+3)^(0+128),w
  6671  0741  022B               	subwf	(___aodiv@dividend+3)^(0+128),w
  6672  0742  1D03               	skipz
  6673  0743  2F4E               	goto	u2075
  6674  0744  0822               	movf	(___aodiv@divisor+2)^(0+128),w
  6675  0745  022A               	subwf	(___aodiv@dividend+2)^(0+128),w
  6676  0746  1D03               	skipz
  6677  0747  2F4E               	goto	u2075
  6678  0748  0821               	movf	(___aodiv@divisor+1)^(0+128),w
  6679  0749  0229               	subwf	(___aodiv@dividend+1)^(0+128),w
  6680  074A  1D03               	skipz
  6681  074B  2F4E               	goto	u2075
  6682  074C  0820               	movf	___aodiv@divisor^(0+128),w
  6683  074D  0228               	subwf	___aodiv@dividend^(0+128),w
  6684  074E                     u2075:	
  6685  074E  1C03               	skipc
  6686  074F  2F61               	goto	l2179
  6687  0750  0820               	movf	___aodiv@divisor^(0+128),w
  6688  0751  02A8               	subwf	___aodiv@dividend^(0+128),f
  6689  0752  0821               	movf	(___aodiv@divisor+1)^(0+128),w
  6690  0753  3BA9               	subwfb	(___aodiv@dividend+1)^(0+128),f
  6691  0754  0822               	movf	(___aodiv@divisor+2)^(0+128),w
  6692  0755  3BAA               	subwfb	(___aodiv@dividend+2)^(0+128),f
  6693  0756  0823               	movf	(___aodiv@divisor+3)^(0+128),w
  6694  0757  3BAB               	subwfb	(___aodiv@dividend+3)^(0+128),f
  6695  0758  0824               	movf	(___aodiv@divisor+4)^(0+128),w
  6696  0759  3BAC               	subwfb	(___aodiv@dividend+4)^(0+128),f
  6697  075A  0825               	movf	(___aodiv@divisor+5)^(0+128),w
  6698  075B  3BAD               	subwfb	(___aodiv@dividend+5)^(0+128),f
  6699  075C  0826               	movf	(___aodiv@divisor+6)^(0+128),w
  6700  075D  3BAE               	subwfb	(___aodiv@dividend+6)^(0+128),f
  6701  075E  0827               	movf	(___aodiv@divisor+7)^(0+128),w
  6702  075F  3BAF               	subwfb	(___aodiv@dividend+7)^(0+128),f
  6703  0760  1433               	bsf	___aodiv@quotient^(0+128),0
  6704  0761                     l2179:	
  6705  0761  36A7               	lsrf	(___aodiv@divisor+7)^(0+128),f
  6706  0762  0CA6               	rrf	(___aodiv@divisor+6)^(0+128),f
  6707  0763  0CA5               	rrf	(___aodiv@divisor+5)^(0+128),f
  6708  0764  0CA4               	rrf	(___aodiv@divisor+4)^(0+128),f
  6709  0765  0CA3               	rrf	(___aodiv@divisor+3)^(0+128),f
  6710  0766  0CA2               	rrf	(___aodiv@divisor+2)^(0+128),f
  6711  0767  0CA1               	rrf	(___aodiv@divisor+1)^(0+128),f
  6712  0768  0CA0               	rrf	___aodiv@divisor^(0+128),f
  6713  0769  3001               	movlw	1
  6714  076A  02B1               	subwf	___aodiv@counter^(0+128),f
  6715  076B  1D03               	btfss	3,2
  6716  076C  2F28               	goto	l2171
  6717  076D                     l2181:	
  6718  076D  0832               	movf	___aodiv@sign^(0+128),w
  6719  076E  1903               	btfsc	3,2
  6720  076F  2F8E               	goto	l592
  6721  0770  09B3               	comf	___aodiv@quotient^(0+128),f
  6722  0771  09B4               	comf	(___aodiv@quotient+1)^(0+128),f
  6723  0772  09B5               	comf	(___aodiv@quotient+2)^(0+128),f
  6724  0773  09B6               	comf	(___aodiv@quotient+3)^(0+128),f
  6725  0774  09B7               	comf	(___aodiv@quotient+4)^(0+128),f
  6726  0775  09B8               	comf	(___aodiv@quotient+5)^(0+128),f
  6727  0776  09B9               	comf	(___aodiv@quotient+6)^(0+128),f
  6728  0777  09BA               	comf	(___aodiv@quotient+7)^(0+128),f
  6729  0778  0AB3               	incf	___aodiv@quotient^(0+128),f
  6730  0779  1D03               	skipz
  6731  077A  2F8E               	goto	l592
  6732  077B  0AB4               	incf	(___aodiv@quotient+1)^(0+128),f
  6733  077C  1D03               	skipz
  6734  077D  2F8E               	goto	l592
  6735  077E  0AB5               	incf	(___aodiv@quotient+2)^(0+128),f
  6736  077F  1D03               	skipz
  6737  0780  2F8E               	goto	l592
  6738  0781  0AB6               	incf	(___aodiv@quotient+3)^(0+128),f
  6739  0782  1D03               	skipz
  6740  0783  2F8E               	goto	l592
  6741  0784  0AB7               	incf	(___aodiv@quotient+4)^(0+128),f
  6742  0785  1D03               	skipz
  6743  0786  2F8E               	goto	l592
  6744  0787  0AB8               	incf	(___aodiv@quotient+5)^(0+128),f
  6745  0788  1D03               	skipz
  6746  0789  2F8E               	goto	l592
  6747  078A  0AB9               	incf	(___aodiv@quotient+6)^(0+128),f
  6748  078B  1D03               	skipz
  6749  078C  2F8E               	goto	l592
  6750  078D  0ABA               	incf	(___aodiv@quotient+7)^(0+128),f
  6751  078E                     l592:	
  6752  078E  0021               	movlb	1	; select bank1
  6753  078F  0833               	movf	___aodiv@quotient^(0+128),w
  6754  0790  00A0               	movwf	?___aodiv^(0+128)
  6755  0791  0834               	movf	(___aodiv@quotient+1)^(0+128),w
  6756  0792  00A1               	movwf	(?___aodiv+1)^(0+128)
  6757  0793  0835               	movf	(___aodiv@quotient+2)^(0+128),w
  6758  0794  00A2               	movwf	(?___aodiv+2)^(0+128)
  6759  0795  0836               	movf	(___aodiv@quotient+3)^(0+128),w
  6760  0796  00A3               	movwf	(?___aodiv+3)^(0+128)
  6761  0797  0837               	movf	(___aodiv@quotient+4)^(0+128),w
  6762  0798  00A4               	movwf	(?___aodiv+4)^(0+128)
  6763  0799  0838               	movf	(___aodiv@quotient+5)^(0+128),w
  6764  079A  00A5               	movwf	(?___aodiv+5)^(0+128)
  6765  079B  0839               	movf	(___aodiv@quotient+6)^(0+128),w
  6766  079C  00A6               	movwf	(?___aodiv+6)^(0+128)
  6767  079D  083A               	movf	(___aodiv@quotient+7)^(0+128),w
  6768  079E  00A7               	movwf	(?___aodiv+7)^(0+128)
  6769  079F  0008               	return
  6770  07A0                     __end_of___aodiv:	
  6771                           
  6772                           	psect	text19
  6773  0A74                     __ptext19:	
  6774 ;; *************** function _SYSTEM_Initialize *****************
  6775 ;; Defined at:
  6776 ;;		line 50 in file "mcc_generated_files/mcc.c"
  6777 ;; Parameters:    Size  Location     Type
  6778 ;;		None
  6779 ;; Auto vars:     Size  Location     Type
  6780 ;;		None
  6781 ;; Return value:  Size  Location     Type
  6782 ;;                  1    wreg      void 
  6783 ;; Registers used:
  6784 ;;		wreg, status,2, status,0, pclath, cstack
  6785 ;; Tracked objects:
  6786 ;;		On entry : 0/0
  6787 ;;		On exit  : 0/0
  6788 ;;		Unchanged: 0/0
  6789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6794 ;;Total ram usage:        0 bytes
  6795 ;; Hardware stack levels used:    1
  6796 ;; Hardware stack levels required when called:    8
  6797 ;; This function calls:
  6798 ;;		_EUSART_Initialize
  6799 ;;		_OSCILLATOR_Initialize
  6800 ;;		_PIN_MANAGER_Initialize
  6801 ;;		_TMR0_Initialize
  6802 ;; This function is called by:
  6803 ;;		_main
  6804 ;; This function uses a non-reentrant model
  6805 ;;
  6806                           
  6807                           
  6808                           ;psect for function _SYSTEM_Initialize
  6809  0A74                     _SYSTEM_Initialize:	
  6810                           
  6811                           ;mcc_generated_files/mcc.c: 52:     PIN_MANAGER_Initialize();
  6812                           
  6813                           ;incstack = 0
  6814                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6815  0A74  318B  23E2  318A   	fcall	_PIN_MANAGER_Initialize
  6816                           
  6817                           ;mcc_generated_files/mcc.c: 53:     OSCILLATOR_Initialize();
  6818  0A77  318A  2238  318A   	fcall	_OSCILLATOR_Initialize
  6819                           
  6820                           ;mcc_generated_files/mcc.c: 54:     TMR0_Initialize();
  6821  0A7A  318A  22D3  318A   	fcall	_TMR0_Initialize
  6822                           
  6823                           ;mcc_generated_files/mcc.c: 55:     EUSART_Initialize();
  6824  0A7D  318B  2395         	fcall	_EUSART_Initialize
  6825  0A7F  0008               	return
  6826  0A80                     __end_of_SYSTEM_Initialize:	
  6827                           
  6828                           	psect	text20
  6829  0AD3                     __ptext20:	
  6830 ;; *************** function _TMR0_Initialize *****************
  6831 ;; Defined at:
  6832 ;;		line 18 in file "mcc_generated_files/tmr0.c"
  6833 ;; Parameters:    Size  Location     Type
  6834 ;;		None
  6835 ;; Auto vars:     Size  Location     Type
  6836 ;;		None
  6837 ;; Return value:  Size  Location     Type
  6838 ;;                  1    wreg      void 
  6839 ;; Registers used:
  6840 ;;		wreg, status,2, status,0, pclath, cstack
  6841 ;; Tracked objects:
  6842 ;;		On entry : 0/0
  6843 ;;		On exit  : 0/0
  6844 ;;		Unchanged: 0/0
  6845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6848 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6849 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6850 ;;Total ram usage:        1 bytes
  6851 ;; Hardware stack levels used:    1
  6852 ;; Hardware stack levels required when called:    7
  6853 ;; This function calls:
  6854 ;;		_TMR0_SetInterruptHandler
  6855 ;; This function is called by:
  6856 ;;		_SYSTEM_Initialize
  6857 ;; This function uses a non-reentrant model
  6858 ;;
  6859                           
  6860                           
  6861                           ;psect for function _TMR0_Initialize
  6862  0AD3                     _TMR0_Initialize:	
  6863                           
  6864                           ;mcc_generated_files/tmr0.c: 23:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xDF 
      +                          & 0x3F));
  6865                           
  6866                           ;incstack = 0
  6867                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6868  0AD3  0021               	movlb	1	; select bank1
  6869  0AD4  0815               	movf	21,w	;volatile
  6870  0AD5  39C0               	andlw	192
  6871  0AD6  381F               	iorlw	31
  6872  0AD7  0095               	movwf	21	;volatile
  6873                           
  6874                           ;mcc_generated_files/tmr0.c: 26:     TMR0 = 0x83;
  6875  0AD8  3083               	movlw	131
  6876  0AD9  0020               	movlb	0	; select bank0
  6877  0ADA  0095               	movwf	21	;volatile
  6878                           
  6879                           ;mcc_generated_files/tmr0.c: 29:     timer0ReloadVal= 131;
  6880  0ADB  3083               	movlw	131
  6881  0ADC  0021               	movlb	1	; select bank1
  6882  0ADD  00A2               	movwf	??_TMR0_Initialize^(0+128)
  6883  0ADE  0822               	movf	??_TMR0_Initialize^(0+128),w
  6884  0ADF  0020               	movlb	0	; select bank0
  6885  0AE0  00E0               	movwf	_timer0ReloadVal	;volatile
  6886                           
  6887                           ;mcc_generated_files/tmr0.c: 32:     INTCONbits.TMR0IF = 0;
  6888  0AE1  110B               	bcf	11,2	;volatile
  6889                           
  6890                           ;mcc_generated_files/tmr0.c: 35:     INTCONbits.TMR0IE = 1;
  6891  0AE2  168B               	bsf	11,5	;volatile
  6892                           
  6893                           ;mcc_generated_files/tmr0.c: 38:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  6894  0AE3  3003               	movlw	low _TMR0_DefaultInterruptHandler
  6895  0AE4  0021               	movlb	1	; select bank1
  6896  0AE5  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler^(0+128)
  6897  0AE6  3000               	movlw	high _TMR0_DefaultInterruptHandler
  6898  0AE7  00A1               	movwf	(TMR0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  6899  0AE8  318A  226B         	fcall	_TMR0_SetInterruptHandler
  6900  0AEA  0008               	return
  6901  0AEB                     __end_of_TMR0_Initialize:	
  6902                           
  6903                           	psect	text21
  6904  0A6B                     __ptext21:	
  6905 ;; *************** function _TMR0_SetInterruptHandler *****************
  6906 ;; Defined at:
  6907 ;;		line 79 in file "mcc_generated_files/tmr0.c"
  6908 ;; Parameters:    Size  Location     Type
  6909 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  6910 ;;		 -> timerISR(1), TMR0_DefaultInterruptHandler(1), 
  6911 ;; Auto vars:     Size  Location     Type
  6912 ;;		None
  6913 ;; Return value:  Size  Location     Type
  6914 ;;                  1    wreg      void 
  6915 ;; Registers used:
  6916 ;;		wreg
  6917 ;; Tracked objects:
  6918 ;;		On entry : 0/0
  6919 ;;		On exit  : 0/0
  6920 ;;		Unchanged: 0/0
  6921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6922 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6925 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6926 ;;Total ram usage:        2 bytes
  6927 ;; Hardware stack levels used:    1
  6928 ;; Hardware stack levels required when called:    6
  6929 ;; This function calls:
  6930 ;;		Nothing
  6931 ;; This function is called by:
  6932 ;;		_TMR0_Initialize
  6933 ;;		_main
  6934 ;; This function uses a non-reentrant model
  6935 ;;
  6936                           
  6937                           
  6938                           ;psect for function _TMR0_SetInterruptHandler
  6939  0A6B                     _TMR0_SetInterruptHandler:	
  6940                           
  6941                           ;mcc_generated_files/tmr0.c: 80:     TMR0_InterruptHandler = InterruptHandler;
  6942                           
  6943                           ;incstack = 0
  6944                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  6945  0A6B  0021               	movlb	1	; select bank1
  6946  0A6C  0821               	movf	(TMR0_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  6947  0A6D  0020               	movlb	0	; select bank0
  6948  0A6E  00D7               	movwf	_TMR0_InterruptHandler+1
  6949  0A6F  0021               	movlb	1	; select bank1
  6950  0A70  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler^(0+128),w
  6951  0A71  0020               	movlb	0	; select bank0
  6952  0A72  00D6               	movwf	_TMR0_InterruptHandler
  6953  0A73  0008               	return
  6954  0A74                     __end_of_TMR0_SetInterruptHandler:	
  6955                           
  6956                           	psect	text22
  6957  0BE2                     __ptext22:	
  6958 ;; *************** function _PIN_MANAGER_Initialize *****************
  6959 ;; Defined at:
  6960 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  6961 ;; Parameters:    Size  Location     Type
  6962 ;;		None
  6963 ;; Auto vars:     Size  Location     Type
  6964 ;;		None
  6965 ;; Return value:  Size  Location     Type
  6966 ;;                  1    wreg      void 
  6967 ;; Registers used:
  6968 ;;		wreg, status,2, status,0, pclath, cstack
  6969 ;; Tracked objects:
  6970 ;;		On entry : 0/0
  6971 ;;		On exit  : 0/0
  6972 ;;		Unchanged: 0/0
  6973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6978 ;;Total ram usage:        0 bytes
  6979 ;; Hardware stack levels used:    1
  6980 ;; Hardware stack levels required when called:    7
  6981 ;; This function calls:
  6982 ;;		_IOCCF5_SetInterruptHandler
  6983 ;; This function is called by:
  6984 ;;		_SYSTEM_Initialize
  6985 ;; This function uses a non-reentrant model
  6986 ;;
  6987                           
  6988                           
  6989                           ;psect for function _PIN_MANAGER_Initialize
  6990  0BE2                     _PIN_MANAGER_Initialize:	
  6991                           
  6992                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  6993                           
  6994                           ;incstack = 0
  6995                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6996  0BE2  0022               	movlb	2	; select bank2
  6997  0BE3  018C               	clrf	12	;volatile
  6998                           
  6999                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  7000  0BE4  018D               	clrf	13	;volatile
  7001                           
  7002                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  7003  0BE5  018E               	clrf	14	;volatile
  7004                           
  7005                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0x37;
  7006  0BE6  3037               	movlw	55
  7007  0BE7  0021               	movlb	1	; select bank1
  7008  0BE8  008C               	movwf	12	;volatile
  7009                           
  7010                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0x70;
  7011  0BE9  3070               	movlw	112
  7012  0BEA  008D               	movwf	13	;volatile
  7013                           
  7014                           ;mcc_generated_files/pin_manager.c: 71:     TRISC = 0xFF;
  7015  0BEB  30FF               	movlw	255
  7016  0BEC  008E               	movwf	14	;volatile
  7017                           
  7018                           ;mcc_generated_files/pin_manager.c: 76:     ANSELC = 0xCF;
  7019  0BED  30CF               	movlw	207
  7020  0BEE  0023               	movlb	3	; select bank3
  7021  0BEF  008E               	movwf	14	;volatile
  7022                           
  7023                           ;mcc_generated_files/pin_manager.c: 77:     ANSELB = 0x70;
  7024  0BF0  3070               	movlw	112
  7025  0BF1  008D               	movwf	13	;volatile
  7026                           
  7027                           ;mcc_generated_files/pin_manager.c: 78:     ANSELA = 0x17;
  7028  0BF2  3017               	movlw	23
  7029  0BF3  008C               	movwf	12	;volatile
  7030                           
  7031                           ;mcc_generated_files/pin_manager.c: 83:     WPUB = 0x00;
  7032  0BF4  0024               	movlb	4	; select bank4
  7033  0BF5  018D               	clrf	13	;volatile
  7034                           
  7035                           ;mcc_generated_files/pin_manager.c: 84:     WPUA = 0x00;
  7036  0BF6  018C               	clrf	12	;volatile
  7037                           
  7038                           ;mcc_generated_files/pin_manager.c: 85:     WPUC = 0x00;
  7039  0BF7  018E               	clrf	14	;volatile
  7040                           
  7041                           ;mcc_generated_files/pin_manager.c: 86:     OPTION_REGbits.nWPUEN = 1;
  7042  0BF8  0021               	movlb	1	; select bank1
  7043  0BF9  1795               	bsf	21,7	;volatile
  7044                           
  7045                           ;mcc_generated_files/pin_manager.c: 91:     ODCONA = 0x00;
  7046  0BFA  0025               	movlb	5	; select bank5
  7047  0BFB  018C               	clrf	12	;volatile
  7048                           
  7049                           ;mcc_generated_files/pin_manager.c: 92:     ODCONB = 0x00;
  7050  0BFC  018D               	clrf	13	;volatile
  7051                           
  7052                           ;mcc_generated_files/pin_manager.c: 93:     ODCONC = 0x00;
  7053  0BFD  018E               	clrf	14	;volatile
  7054                           
  7055                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONA = 0x37;
  7056  0BFE  3037               	movlw	55
  7057  0BFF  0026               	movlb	6	; select bank6
  7058  0C00  008C               	movwf	12	;volatile
  7059                           
  7060                           ;mcc_generated_files/pin_manager.c: 99:     SLRCONB = 0xF0;
  7061  0C01  30F0               	movlw	240
  7062  0C02  008D               	movwf	13	;volatile
  7063                           
  7064                           ;mcc_generated_files/pin_manager.c: 100:     SLRCONC = 0xFF;
  7065  0C03  30FF               	movlw	255
  7066  0C04  008E               	movwf	14	;volatile
  7067                           
  7068                           ;mcc_generated_files/pin_manager.c: 107:     IOCCFbits.IOCCF5 = 0;
  7069  0C05  0027               	movlb	7	; select bank7
  7070  0C06  1299               	bcf	25,5	;volatile
  7071                           
  7072                           ;mcc_generated_files/pin_manager.c: 109:     IOCCNbits.IOCCN5 = 0;
  7073  0C07  1298               	bcf	24,5	;volatile
  7074                           
  7075                           ;mcc_generated_files/pin_manager.c: 111:     IOCCPbits.IOCCP5 = 0;
  7076  0C08  1297               	bcf	23,5	;volatile
  7077                           
  7078                           ;mcc_generated_files/pin_manager.c: 116:     IOCCF5_SetInterruptHandler(IOCCF5_DefaultIn
      +                          terruptHandler);
  7079  0C09  3002               	movlw	low _IOCCF5_DefaultInterruptHandler
  7080  0C0A  0021               	movlb	1	; select bank1
  7081  0C0B  00A0               	movwf	IOCCF5_SetInterruptHandler@InterruptHandler^(0+128)
  7082  0C0C  3000               	movlw	high _IOCCF5_DefaultInterruptHandler
  7083  0C0D  00A1               	movwf	(IOCCF5_SetInterruptHandler@InterruptHandler^(0+128)+1)
  7084  0C0E  318A  2262         	fcall	_IOCCF5_SetInterruptHandler
  7085                           
  7086                           ;mcc_generated_files/pin_manager.c: 119:     INTCONbits.IOCIE = 1;
  7087  0C10  158B               	bsf	11,3	;volatile
  7088                           
  7089                           ;mcc_generated_files/pin_manager.c: 122:     RB7PPS = 0x12;
  7090  0C11  3012               	movlw	18
  7091  0C12  003D               	movlb	29	; select bank29
  7092  0C13  009F               	movwf	31	;volatile
  7093  0C14  0008               	return
  7094  0C15                     __end_of_PIN_MANAGER_Initialize:	
  7095                           
  7096                           	psect	text23
  7097  0A62                     __ptext23:	
  7098 ;; *************** function _IOCCF5_SetInterruptHandler *****************
  7099 ;; Defined at:
  7100 ;;		line 152 in file "mcc_generated_files/pin_manager.c"
  7101 ;; Parameters:    Size  Location     Type
  7102 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  7103 ;;		 -> speedCalc(1), IOCCF5_DefaultInterruptHandler(1), 
  7104 ;; Auto vars:     Size  Location     Type
  7105 ;;		None
  7106 ;; Return value:  Size  Location     Type
  7107 ;;                  1    wreg      void 
  7108 ;; Registers used:
  7109 ;;		wreg
  7110 ;; Tracked objects:
  7111 ;;		On entry : 0/0
  7112 ;;		On exit  : 0/0
  7113 ;;		Unchanged: 0/0
  7114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7115 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7118 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7119 ;;Total ram usage:        2 bytes
  7120 ;; Hardware stack levels used:    1
  7121 ;; Hardware stack levels required when called:    6
  7122 ;; This function calls:
  7123 ;;		Nothing
  7124 ;; This function is called by:
  7125 ;;		_PIN_MANAGER_Initialize
  7126 ;;		_main
  7127 ;; This function uses a non-reentrant model
  7128 ;;
  7129                           
  7130                           
  7131                           ;psect for function _IOCCF5_SetInterruptHandler
  7132  0A62                     _IOCCF5_SetInterruptHandler:	
  7133                           
  7134                           ;mcc_generated_files/pin_manager.c: 153:     IOCCF5_InterruptHandler = InterruptHandler;
  7135                           
  7136                           ;incstack = 0
  7137                           ; Regs used in _IOCCF5_SetInterruptHandler: [wreg]
  7138  0A62  0021               	movlb	1	; select bank1
  7139  0A63  0821               	movf	(IOCCF5_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  7140  0A64  0020               	movlb	0	; select bank0
  7141  0A65  00D9               	movwf	_IOCCF5_InterruptHandler+1
  7142  0A66  0021               	movlb	1	; select bank1
  7143  0A67  0820               	movf	IOCCF5_SetInterruptHandler@InterruptHandler^(0+128),w
  7144  0A68  0020               	movlb	0	; select bank0
  7145  0A69  00D8               	movwf	_IOCCF5_InterruptHandler
  7146  0A6A  0008               	return
  7147  0A6B                     __end_of_IOCCF5_SetInterruptHandler:	
  7148                           
  7149                           	psect	text24
  7150  0A38                     __ptext24:	
  7151 ;; *************** function _OSCILLATOR_Initialize *****************
  7152 ;; Defined at:
  7153 ;;		line 58 in file "mcc_generated_files/mcc.c"
  7154 ;; Parameters:    Size  Location     Type
  7155 ;;		None
  7156 ;; Auto vars:     Size  Location     Type
  7157 ;;		None
  7158 ;; Return value:  Size  Location     Type
  7159 ;;                  1    wreg      void 
  7160 ;; Registers used:
  7161 ;;		wreg, status,2
  7162 ;; Tracked objects:
  7163 ;;		On entry : 0/0
  7164 ;;		On exit  : 0/0
  7165 ;;		Unchanged: 0/0
  7166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7170 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7171 ;;Total ram usage:        0 bytes
  7172 ;; Hardware stack levels used:    1
  7173 ;; Hardware stack levels required when called:    6
  7174 ;; This function calls:
  7175 ;;		Nothing
  7176 ;; This function is called by:
  7177 ;;		_SYSTEM_Initialize
  7178 ;; This function uses a non-reentrant model
  7179 ;;
  7180                           
  7181                           
  7182                           ;psect for function _OSCILLATOR_Initialize
  7183  0A38                     _OSCILLATOR_Initialize:	
  7184                           
  7185                           ;mcc_generated_files/mcc.c: 61:     OSCCON = 0x52;
  7186                           
  7187                           ;incstack = 0
  7188                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  7189  0A38  3052               	movlw	82
  7190  0A39  0021               	movlb	1	; select bank1
  7191  0A3A  0099               	movwf	25	;volatile
  7192                           
  7193                           ;mcc_generated_files/mcc.c: 63:     OSCTUNE = 0x00;
  7194  0A3B  0198               	clrf	24	;volatile
  7195                           
  7196                           ;mcc_generated_files/mcc.c: 65:     BORCON = 0x00;
  7197  0A3C  0022               	movlb	2	; select bank2
  7198  0A3D  0196               	clrf	22	;volatile
  7199  0A3E  0008               	return
  7200  0A3F                     __end_of_OSCILLATOR_Initialize:	
  7201                           
  7202                           	psect	text25
  7203  0B95                     __ptext25:	
  7204 ;; *************** function _EUSART_Initialize *****************
  7205 ;; Defined at:
  7206 ;;		line 65 in file "mcc_generated_files/eusart.c"
  7207 ;; Parameters:    Size  Location     Type
  7208 ;;		None
  7209 ;; Auto vars:     Size  Location     Type
  7210 ;;		None
  7211 ;; Return value:  Size  Location     Type
  7212 ;;                  1    wreg      void 
  7213 ;; Registers used:
  7214 ;;		wreg, status,2, status,0, pclath, cstack
  7215 ;; Tracked objects:
  7216 ;;		On entry : 0/0
  7217 ;;		On exit  : 0/0
  7218 ;;		Unchanged: 0/0
  7219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7224 ;;Total ram usage:        0 bytes
  7225 ;; Hardware stack levels used:    1
  7226 ;; Hardware stack levels required when called:    7
  7227 ;; This function calls:
  7228 ;;		_EUSART_SetErrorHandler
  7229 ;;		_EUSART_SetFramingErrorHandler
  7230 ;;		_EUSART_SetOverrunErrorHandler
  7231 ;; This function is called by:
  7232 ;;		_SYSTEM_Initialize
  7233 ;; This function uses a non-reentrant model
  7234 ;;
  7235                           
  7236                           
  7237                           ;psect for function _EUSART_Initialize
  7238  0B95                     _EUSART_Initialize:	
  7239                           
  7240                           ;mcc_generated_files/eusart.c: 70:     BAUD1CON = 0x08;
  7241                           
  7242                           ;incstack = 0
  7243                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7244  0B95  3008               	movlw	8
  7245  0B96  0023               	movlb	3	; select bank3
  7246  0B97  009F               	movwf	31	;volatile
  7247                           
  7248                           ;mcc_generated_files/eusart.c: 73:     RC1STA = 0x80;
  7249  0B98  3080               	movlw	128
  7250  0B99  009D               	movwf	29	;volatile
  7251                           
  7252                           ;mcc_generated_files/eusart.c: 76:     TX1STA = 0x24;
  7253  0B9A  3024               	movlw	36
  7254  0B9B  009E               	movwf	30	;volatile
  7255                           
  7256                           ;mcc_generated_files/eusart.c: 79:     SPBRGL = 0x0C;
  7257  0B9C  300C               	movlw	12
  7258  0B9D  009B               	movwf	27	;volatile
  7259                           
  7260                           ;mcc_generated_files/eusart.c: 82:     SPBRGH = 0x00;
  7261  0B9E  019C               	clrf	28	;volatile
  7262                           
  7263                           ;mcc_generated_files/eusart.c: 85:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  7264  0B9F  3000               	movlw	0
  7265  0BA0  0021               	movlb	1	; select bank1
  7266  0BA1  00A0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128)
  7267  0BA2  3000               	movlw	0
  7268  0BA3  00A1               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler^(0+128)+1)
  7269  0BA4  318A  2250  318B   	fcall	_EUSART_SetFramingErrorHandler
  7270                           
  7271                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  7272  0BA7  3000               	movlw	0
  7273  0BA8  0021               	movlb	1	; select bank1
  7274  0BA9  00A0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)
  7275  0BAA  3000               	movlw	0
  7276  0BAB  00A1               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)+1)
  7277  0BAC  318A  2259  318B   	fcall	_EUSART_SetOverrunErrorHandler
  7278                           
  7279                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  7280  0BAF  3000               	movlw	0
  7281  0BB0  0021               	movlb	1	; select bank1
  7282  0BB1  00A0               	movwf	EUSART_SetErrorHandler@interruptHandler^(0+128)
  7283  0BB2  3000               	movlw	0
  7284  0BB3  00A1               	movwf	(EUSART_SetErrorHandler@interruptHandler^(0+128)+1)
  7285  0BB4  318A  2247         	fcall	_EUSART_SetErrorHandler
  7286                           
  7287                           ;mcc_generated_files/eusart.c: 89:     eusartRxLastError.status = 0;
  7288  0BB6  0020               	movlb	0	; select bank0
  7289  0BB7  01D3               	clrf	_eusartRxLastError	;volatile
  7290  0BB8  0008               	return
  7291  0BB9                     __end_of_EUSART_Initialize:	
  7292                           
  7293                           	psect	text26
  7294  0A59                     __ptext26:	
  7295 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  7296 ;; Defined at:
  7297 ;;		line 175 in file "mcc_generated_files/eusart.c"
  7298 ;; Parameters:    Size  Location     Type
  7299 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  7300 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  7301 ;; Auto vars:     Size  Location     Type
  7302 ;;		None
  7303 ;; Return value:  Size  Location     Type
  7304 ;;                  1    wreg      void 
  7305 ;; Registers used:
  7306 ;;		wreg
  7307 ;; Tracked objects:
  7308 ;;		On entry : 0/0
  7309 ;;		On exit  : 0/0
  7310 ;;		Unchanged: 0/0
  7311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7312 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7315 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7316 ;;Total ram usage:        2 bytes
  7317 ;; Hardware stack levels used:    1
  7318 ;; Hardware stack levels required when called:    6
  7319 ;; This function calls:
  7320 ;;		Nothing
  7321 ;; This function is called by:
  7322 ;;		_EUSART_Initialize
  7323 ;; This function uses a non-reentrant model
  7324 ;;
  7325                           
  7326                           
  7327                           ;psect for function _EUSART_SetOverrunErrorHandler
  7328  0A59                     _EUSART_SetOverrunErrorHandler:	
  7329                           
  7330                           ;mcc_generated_files/eusart.c: 176:     EUSART_OverrunErrorHandler = interruptHandler;
  7331                           
  7332                           ;incstack = 0
  7333                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  7334  0A59  0021               	movlb	1	; select bank1
  7335  0A5A  0821               	movf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^(0+128),w
  7336  0A5B  0020               	movlb	0	; select bank0
  7337  0A5C  00DD               	movwf	_EUSART_OverrunErrorHandler+1
  7338  0A5D  0021               	movlb	1	; select bank1
  7339  0A5E  0820               	movf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128),w
  7340  0A5F  0020               	movlb	0	; select bank0
  7341  0A60  00DC               	movwf	_EUSART_OverrunErrorHandler
  7342  0A61  0008               	return
  7343  0A62                     __end_of_EUSART_SetOverrunErrorHandler:	
  7344                           
  7345                           	psect	text27
  7346  0A50                     __ptext27:	
  7347 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  7348 ;; Defined at:
  7349 ;;		line 171 in file "mcc_generated_files/eusart.c"
  7350 ;; Parameters:    Size  Location     Type
  7351 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  7352 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  7353 ;; Auto vars:     Size  Location     Type
  7354 ;;		None
  7355 ;; Return value:  Size  Location     Type
  7356 ;;                  1    wreg      void 
  7357 ;; Registers used:
  7358 ;;		wreg
  7359 ;; Tracked objects:
  7360 ;;		On entry : 0/0
  7361 ;;		On exit  : 0/0
  7362 ;;		Unchanged: 0/0
  7363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7364 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7367 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7368 ;;Total ram usage:        2 bytes
  7369 ;; Hardware stack levels used:    1
  7370 ;; Hardware stack levels required when called:    6
  7371 ;; This function calls:
  7372 ;;		Nothing
  7373 ;; This function is called by:
  7374 ;;		_EUSART_Initialize
  7375 ;; This function uses a non-reentrant model
  7376 ;;
  7377                           
  7378                           
  7379                           ;psect for function _EUSART_SetFramingErrorHandler
  7380  0A50                     _EUSART_SetFramingErrorHandler:	
  7381                           
  7382                           ;mcc_generated_files/eusart.c: 172:     EUSART_FramingErrorHandler = interruptHandler;
  7383                           
  7384                           ;incstack = 0
  7385                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  7386  0A50  0021               	movlb	1	; select bank1
  7387  0A51  0821               	movf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^(0+128),w
  7388  0A52  0020               	movlb	0	; select bank0
  7389  0A53  00DF               	movwf	_EUSART_FramingErrorHandler+1
  7390  0A54  0021               	movlb	1	; select bank1
  7391  0A55  0820               	movf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128),w
  7392  0A56  0020               	movlb	0	; select bank0
  7393  0A57  00DE               	movwf	_EUSART_FramingErrorHandler
  7394  0A58  0008               	return
  7395  0A59                     __end_of_EUSART_SetFramingErrorHandler:	
  7396                           
  7397                           	psect	text28
  7398  0A47                     __ptext28:	
  7399 ;; *************** function _EUSART_SetErrorHandler *****************
  7400 ;; Defined at:
  7401 ;;		line 179 in file "mcc_generated_files/eusart.c"
  7402 ;; Parameters:    Size  Location     Type
  7403 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  7404 ;;		 -> EUSART_DefaultErrorHandler(1), 
  7405 ;; Auto vars:     Size  Location     Type
  7406 ;;		None
  7407 ;; Return value:  Size  Location     Type
  7408 ;;                  1    wreg      void 
  7409 ;; Registers used:
  7410 ;;		wreg
  7411 ;; Tracked objects:
  7412 ;;		On entry : 0/0
  7413 ;;		On exit  : 0/0
  7414 ;;		Unchanged: 0/0
  7415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7416 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7419 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7420 ;;Total ram usage:        2 bytes
  7421 ;; Hardware stack levels used:    1
  7422 ;; Hardware stack levels required when called:    6
  7423 ;; This function calls:
  7424 ;;		Nothing
  7425 ;; This function is called by:
  7426 ;;		_EUSART_Initialize
  7427 ;; This function uses a non-reentrant model
  7428 ;;
  7429                           
  7430                           
  7431                           ;psect for function _EUSART_SetErrorHandler
  7432  0A47                     _EUSART_SetErrorHandler:	
  7433                           
  7434                           ;mcc_generated_files/eusart.c: 180:     EUSART_ErrorHandler = interruptHandler;
  7435                           
  7436                           ;incstack = 0
  7437                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  7438  0A47  0021               	movlb	1	; select bank1
  7439  0A48  0821               	movf	(EUSART_SetErrorHandler@interruptHandler+1)^(0+128),w
  7440  0A49  0020               	movlb	0	; select bank0
  7441  0A4A  00DB               	movwf	_EUSART_ErrorHandler+1
  7442  0A4B  0021               	movlb	1	; select bank1
  7443  0A4C  0820               	movf	EUSART_SetErrorHandler@interruptHandler^(0+128),w
  7444  0A4D  0020               	movlb	0	; select bank0
  7445  0A4E  00DA               	movwf	_EUSART_ErrorHandler
  7446  0A4F  0008               	return
  7447  0A50                     __end_of_EUSART_SetErrorHandler:	
  7448                           
  7449                           	psect	intentry
  7450  0004                     __pintentry:	
  7451 ;; *************** function _INTERRUPT_InterruptManager *****************
  7452 ;; Defined at:
  7453 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  7454 ;; Parameters:    Size  Location     Type
  7455 ;;		None
  7456 ;; Auto vars:     Size  Location     Type
  7457 ;;		None
  7458 ;; Return value:  Size  Location     Type
  7459 ;;                  1    wreg      void 
  7460 ;; Registers used:
  7461 ;;		wreg, status,2, status,0, pclath, cstack
  7462 ;; Tracked objects:
  7463 ;;		On entry : 0/0
  7464 ;;		On exit  : 0/0
  7465 ;;		Unchanged: 0/0
  7466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7471 ;;Total ram usage:        0 bytes
  7472 ;; Hardware stack levels used:    1
  7473 ;; Hardware stack levels required when called:    5
  7474 ;; This function calls:
  7475 ;;		_PIN_MANAGER_IOC
  7476 ;;		_TMR0_ISR
  7477 ;; This function is called by:
  7478 ;;		Interrupt level 1
  7479 ;; This function uses a non-reentrant model
  7480 ;;
  7481                           
  7482  0004                     _INTERRUPT_InterruptManager:	
  7483                           
  7484                           ;incstack = 0
  7485  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  7486                           
  7487                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  7488  0005  3180               	pagesel	$
  7489                           
  7490                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  7491  0006  1A8B               	btfsc	11,5	;volatile
  7492  0007  1D0B               	btfss	11,2	;volatile
  7493  0008  280D               	goto	i1l236
  7494                           
  7495                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
  7496  0009  318A  228D  3180   	fcall	_TMR0_ISR
  7497                           
  7498                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  7499  000C  2812               	goto	i1l239
  7500  000D                     i1l236:	
  7501                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.IOCIE == 1 && INTCO
      +                          Nbits.IOCIF == 1)
  7502                           
  7503  000D  198B               	btfsc	11,3	;volatile
  7504  000E  1C0B               	btfss	11,0	;volatile
  7505  000F  2812               	goto	i1l239
  7506                           
  7507                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         PIN_MANAGER_IOC();
  7508  0010  318A  221A         	fcall	_PIN_MANAGER_IOC
  7509  0012                     i1l239:	
  7510  0012  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  7511  0013  0009               	retfie
  7512  0014                     __end_of_INTERRUPT_InterruptManager:	
  7513                           
  7514                           	psect	text30
  7515  0A8D                     __ptext30:	
  7516 ;; *************** function _TMR0_ISR *****************
  7517 ;; Defined at:
  7518 ;;		line 62 in file "mcc_generated_files/tmr0.c"
  7519 ;; Parameters:    Size  Location     Type
  7520 ;;		None
  7521 ;; Auto vars:     Size  Location     Type
  7522 ;;		None
  7523 ;; Return value:  Size  Location     Type
  7524 ;;                  1    wreg      void 
  7525 ;; Registers used:
  7526 ;;		wreg, status,2, status,0, pclath, cstack
  7527 ;; Tracked objects:
  7528 ;;		On entry : 0/0
  7529 ;;		On exit  : 0/0
  7530 ;;		Unchanged: 0/0
  7531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7536 ;;Total ram usage:        0 bytes
  7537 ;; Hardware stack levels used:    1
  7538 ;; Hardware stack levels required when called:    1
  7539 ;; This function calls:
  7540 ;;		Absolute function
  7541 ;;		_TMR0_DefaultInterruptHandler
  7542 ;;		_timerISR
  7543 ;; This function is called by:
  7544 ;;		_INTERRUPT_InterruptManager
  7545 ;; This function uses a non-reentrant model
  7546 ;;
  7547                           
  7548                           
  7549                           ;psect for function _TMR0_ISR
  7550  0A8D                     _TMR0_ISR:	
  7551                           
  7552                           ;mcc_generated_files/tmr0.c: 66:     INTCONbits.TMR0IF = 0;
  7553                           
  7554                           ;incstack = 0
  7555                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  7556  0A8D  110B               	bcf	11,2	;volatile
  7557                           
  7558                           ;mcc_generated_files/tmr0.c: 68:     TMR0 = timer0ReloadVal;
  7559  0A8E  0020               	movlb	0	; select bank0
  7560  0A8F  0860               	movf	_timer0ReloadVal,w	;volatile
  7561  0A90  0095               	movwf	21	;volatile
  7562                           
  7563                           ;mcc_generated_files/tmr0.c: 70:     if(TMR0_InterruptHandler)
  7564  0A91  0856               	movf	_TMR0_InterruptHandler,w
  7565  0A92  0457               	iorwf	_TMR0_InterruptHandler+1,w
  7566  0A93  1903               	btfsc	3,2
  7567  0A94  0008               	return
  7568                           
  7569                           ;mcc_generated_files/tmr0.c: 71:     {;mcc_generated_files/tmr0.c: 72:         TMR0_Inte
      +                          rruptHandler();
  7570  0A95  0857               	movf	_TMR0_InterruptHandler+1,w
  7571  0A96  008A               	movwf	10
  7572  0A97  0856               	movf	_TMR0_InterruptHandler,w
  7573  0A98  000A               	callw
  7574  0A99  318A               	pagesel	$
  7575  0A9A  0008               	return
  7576  0A9B                     __end_of_TMR0_ISR:	
  7577                           
  7578                           	psect	text31
  7579  0003                     __ptext31:	
  7580 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  7581 ;; Defined at:
  7582 ;;		line 83 in file "mcc_generated_files/tmr0.c"
  7583 ;; Parameters:    Size  Location     Type
  7584 ;;		None
  7585 ;; Auto vars:     Size  Location     Type
  7586 ;;		None
  7587 ;; Return value:  Size  Location     Type
  7588 ;;                  1    wreg      void 
  7589 ;; Registers used:
  7590 ;;		None
  7591 ;; Tracked objects:
  7592 ;;		On entry : 0/0
  7593 ;;		On exit  : 0/0
  7594 ;;		Unchanged: 0/0
  7595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7600 ;;Total ram usage:        0 bytes
  7601 ;; Hardware stack levels used:    1
  7602 ;; This function calls:
  7603 ;;		Nothing
  7604 ;; This function is called by:
  7605 ;;		_TMR0_Initialize
  7606 ;;		_TMR0_ISR
  7607 ;; This function uses a non-reentrant model
  7608 ;;
  7609                           
  7610                           
  7611                           ;psect for function _TMR0_DefaultInterruptHandler
  7612  0003                     _TMR0_DefaultInterruptHandler:	
  7613                           
  7614                           ;incstack = 0
  7615                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  7616  0003  0008               	return
  7617  0004                     __end_of_TMR0_DefaultInterruptHandler:	
  7618                           
  7619                           	psect	text32
  7620  0A20                     __ptext32:	
  7621 ;; *************** function _timerISR *****************
  7622 ;; Defined at:
  7623 ;;		line 68 in file "main.c"
  7624 ;; Parameters:    Size  Location     Type
  7625 ;;		None
  7626 ;; Auto vars:     Size  Location     Type
  7627 ;;		None
  7628 ;; Return value:  Size  Location     Type
  7629 ;;                  1    wreg      void 
  7630 ;; Registers used:
  7631 ;;		wreg
  7632 ;; Tracked objects:
  7633 ;;		On entry : 0/0
  7634 ;;		On exit  : 0/0
  7635 ;;		Unchanged: 0/0
  7636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7641 ;;Total ram usage:        0 bytes
  7642 ;; Hardware stack levels used:    1
  7643 ;; This function calls:
  7644 ;;		Nothing
  7645 ;; This function is called by:
  7646 ;;		_main
  7647 ;;		_TMR0_ISR
  7648 ;; This function uses a non-reentrant model
  7649 ;;
  7650                           
  7651                           
  7652                           ;psect for function _timerISR
  7653  0A20                     _timerISR:	
  7654                           
  7655                           ;main.c: 69:     counter++ ;
  7656                           
  7657                           ;incstack = 0
  7658                           ; Regs used in _timerISR: [wreg]
  7659  0A20  3001               	movlw	1
  7660  0A21  0020               	movlb	0	; select bank0
  7661  0A22  07CF               	addwf	_counter,f
  7662  0A23  3000               	movlw	0
  7663  0A24  3DD0               	addwfc	_counter+1,f
  7664  0A25  0008               	return
  7665  0A26                     __end_of_timerISR:	
  7666                           
  7667                           	psect	text33
  7668  0A1A                     __ptext33:	
  7669 ;; *************** function _PIN_MANAGER_IOC *****************
  7670 ;; Defined at:
  7671 ;;		line 125 in file "mcc_generated_files/pin_manager.c"
  7672 ;; Parameters:    Size  Location     Type
  7673 ;;		None
  7674 ;; Auto vars:     Size  Location     Type
  7675 ;;		None
  7676 ;; Return value:  Size  Location     Type
  7677 ;;                  1    wreg      void 
  7678 ;; Registers used:
  7679 ;;		wreg, status,2, status,0, pclath, cstack
  7680 ;; Tracked objects:
  7681 ;;		On entry : 0/0
  7682 ;;		On exit  : 0/0
  7683 ;;		Unchanged: 0/0
  7684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7689 ;;Total ram usage:        0 bytes
  7690 ;; Hardware stack levels used:    1
  7691 ;; Hardware stack levels required when called:    4
  7692 ;; This function calls:
  7693 ;;		_IOCCF5_ISR
  7694 ;; This function is called by:
  7695 ;;		_INTERRUPT_InterruptManager
  7696 ;; This function uses a non-reentrant model
  7697 ;;
  7698                           
  7699                           
  7700                           ;psect for function _PIN_MANAGER_IOC
  7701  0A1A                     _PIN_MANAGER_IOC:	
  7702                           
  7703                           ;mcc_generated_files/pin_manager.c: 128:     if(IOCCFbits.IOCCF5 == 1)
  7704                           
  7705                           ;incstack = 0
  7706                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
  7707  0A1A  0027               	movlb	7	; select bank7
  7708  0A1B  1E99               	btfss	25,5	;volatile
  7709  0A1C  0008               	return
  7710                           
  7711                           ;mcc_generated_files/pin_manager.c: 129:     {;mcc_generated_files/pin_manager.c: 130:  
      +                                 IOCCF5_ISR();
  7712  0A1D  318A  2280         	fcall	_IOCCF5_ISR
  7713  0A1F  0008               	return
  7714  0A20                     __end_of_PIN_MANAGER_IOC:	
  7715                           
  7716                           	psect	text34
  7717  0A80                     __ptext34:	
  7718 ;; *************** function _IOCCF5_ISR *****************
  7719 ;; Defined at:
  7720 ;;		line 137 in file "mcc_generated_files/pin_manager.c"
  7721 ;; Parameters:    Size  Location     Type
  7722 ;;		None
  7723 ;; Auto vars:     Size  Location     Type
  7724 ;;		None
  7725 ;; Return value:  Size  Location     Type
  7726 ;;                  1    wreg      void 
  7727 ;; Registers used:
  7728 ;;		wreg, status,2, status,0, pclath, cstack
  7729 ;; Tracked objects:
  7730 ;;		On entry : 0/0
  7731 ;;		On exit  : 0/0
  7732 ;;		Unchanged: 0/0
  7733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7737 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7738 ;;Total ram usage:        0 bytes
  7739 ;; Hardware stack levels used:    1
  7740 ;; Hardware stack levels required when called:    3
  7741 ;; This function calls:
  7742 ;;		Absolute function
  7743 ;;		_IOCCF5_DefaultInterruptHandler
  7744 ;;		_speedCalc
  7745 ;; This function is called by:
  7746 ;;		_PIN_MANAGER_IOC
  7747 ;; This function uses a non-reentrant model
  7748 ;;
  7749                           
  7750                           
  7751                           ;psect for function _IOCCF5_ISR
  7752  0A80                     _IOCCF5_ISR:	
  7753                           
  7754                           ;mcc_generated_files/pin_manager.c: 142:     if(IOCCF5_InterruptHandler)
  7755                           
  7756                           ;incstack = 0
  7757                           ; Regs used in _IOCCF5_ISR: [wreg+status,2+status,0+pclath+cstack]
  7758  0A80  0020               	movlb	0	; select bank0
  7759  0A81  0858               	movf	_IOCCF5_InterruptHandler,w
  7760  0A82  0459               	iorwf	_IOCCF5_InterruptHandler+1,w
  7761  0A83  1903               	btfsc	3,2
  7762  0A84  2A8A               	goto	i1l2911
  7763                           
  7764                           ;mcc_generated_files/pin_manager.c: 143:     {;mcc_generated_files/pin_manager.c: 144:  
      +                                 IOCCF5_InterruptHandler();
  7765  0A85  0859               	movf	_IOCCF5_InterruptHandler+1,w
  7766  0A86  008A               	movwf	10
  7767  0A87  0858               	movf	_IOCCF5_InterruptHandler,w
  7768  0A88  000A               	callw
  7769  0A89  318A               	pagesel	$
  7770  0A8A                     i1l2911:	
  7771                           
  7772                           ;mcc_generated_files/pin_manager.c: 146:     IOCCFbits.IOCCF5 = 0;
  7773  0A8A  0027               	movlb	7	; select bank7
  7774  0A8B  1299               	bcf	25,5	;volatile
  7775  0A8C  0008               	return
  7776  0A8D                     __end_of_IOCCF5_ISR:	
  7777                           
  7778                           	psect	text35
  7779  0002                     __ptext35:	
  7780 ;; *************** function _IOCCF5_DefaultInterruptHandler *****************
  7781 ;; Defined at:
  7782 ;;		line 159 in file "mcc_generated_files/pin_manager.c"
  7783 ;; Parameters:    Size  Location     Type
  7784 ;;		None
  7785 ;; Auto vars:     Size  Location     Type
  7786 ;;		None
  7787 ;; Return value:  Size  Location     Type
  7788 ;;                  1    wreg      void 
  7789 ;; Registers used:
  7790 ;;		None
  7791 ;; Tracked objects:
  7792 ;;		On entry : 0/0
  7793 ;;		On exit  : 0/0
  7794 ;;		Unchanged: 0/0
  7795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7800 ;;Total ram usage:        0 bytes
  7801 ;; Hardware stack levels used:    1
  7802 ;; This function calls:
  7803 ;;		Nothing
  7804 ;; This function is called by:
  7805 ;;		_PIN_MANAGER_Initialize
  7806 ;;		_IOCCF5_ISR
  7807 ;; This function uses a non-reentrant model
  7808 ;;
  7809                           
  7810                           
  7811                           ;psect for function _IOCCF5_DefaultInterruptHandler
  7812  0002                     _IOCCF5_DefaultInterruptHandler:	
  7813                           
  7814                           ;incstack = 0
  7815                           ; Regs used in _IOCCF5_DefaultInterruptHandler: []
  7816  0002  0008               	return
  7817  0003                     __end_of_IOCCF5_DefaultInterruptHandler:	
  7818                           
  7819                           	psect	text36
  7820  0E7B                     __ptext36:	
  7821 ;; *************** function _speedCalc *****************
  7822 ;; Defined at:
  7823 ;;		line 72 in file "main.c"
  7824 ;; Parameters:    Size  Location     Type
  7825 ;;		None
  7826 ;; Auto vars:     Size  Location     Type
  7827 ;;		None
  7828 ;; Return value:  Size  Location     Type
  7829 ;;                  1    wreg      void 
  7830 ;; Registers used:
  7831 ;;		wreg, status,2, status,0, pclath, cstack
  7832 ;; Tracked objects:
  7833 ;;		On entry : 0/0
  7834 ;;		On exit  : 0/0
  7835 ;;		Unchanged: 0/0
  7836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7838 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7840 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7841 ;;Total ram usage:        4 bytes
  7842 ;; Hardware stack levels used:    1
  7843 ;; Hardware stack levels required when called:    2
  7844 ;; This function calls:
  7845 ;;		___awdiv
  7846 ;;		___fladd
  7847 ;;		___flmul
  7848 ;;		___fltol
  7849 ;;		___wmul
  7850 ;;		___xxtofl
  7851 ;; This function is called by:
  7852 ;;		_main
  7853 ;;		_IOCCF5_ISR
  7854 ;; This function uses a non-reentrant model
  7855 ;;
  7856                           
  7857                           
  7858                           ;psect for function _speedCalc
  7859  0E7B                     _speedCalc:	
  7860                           
  7861                           ;main.c: 74:     rpm = ( counter/1000 ) * 60 ;
  7862                           
  7863                           ;incstack = 0
  7864                           ; Regs used in _speedCalc: [wreg+status,2+status,0+pclath+cstack]
  7865  0E7B  30E8               	movlw	232
  7866  0E7C  00F0               	movwf	___awdiv@divisor
  7867  0E7D  3003               	movlw	3
  7868  0E7E  00F1               	movwf	___awdiv@divisor+1
  7869  0E7F  0020               	movlb	0	; select bank0
  7870  0E80  0850               	movf	_counter+1,w
  7871  0E81  00F3               	movwf	___awdiv@dividend+1
  7872  0E82  084F               	movf	_counter,w
  7873  0E83  00F2               	movwf	___awdiv@dividend
  7874  0E84  318C  24C6  318E   	fcall	___awdiv
  7875  0E87  0871               	movf	?___awdiv+1,w
  7876  0E88  00FA               	movwf	___wmul@multiplier+1
  7877  0E89  0870               	movf	?___awdiv,w
  7878  0E8A  00F9               	movwf	___wmul@multiplier
  7879  0E8B  303C               	movlw	60
  7880  0E8C  00FB               	movwf	___wmul@multiplicand
  7881  0E8D  3000               	movlw	0
  7882  0E8E  00FC               	movwf	___wmul@multiplicand+1
  7883  0E8F  318B  2338  318E   	fcall	___wmul
  7884  0E92  087A               	movf	?___wmul+1,w
  7885  0E93  0020               	movlb	0	; select bank0
  7886  0E94  00D5               	movwf	_rpm+1
  7887  0E95  0879               	movf	?___wmul,w
  7888  0E96  00D4               	movwf	_rpm
  7889                           
  7890                           ;main.c: 76:     speed = 2.096 * rpm * 0.06 ;
  7891  0E97  0854               	movf	_rpm,w
  7892  0E98  00F0               	movwf	___xxtofl@val
  7893  0E99  0855               	movf	_rpm+1,w
  7894  0E9A  00F1               	movwf	___xxtofl@val+1
  7895  0E9B  0D89               	rlf	9,f
  7896  0E9C  3B89               	subwfb	9,f
  7897  0E9D  0989               	comf	9,f
  7898  0E9E  00F2               	movwf	___xxtofl@val+2
  7899  0E9F  00F3               	movwf	___xxtofl@val+3
  7900  0EA0  3001               	movlw	1
  7901  0EA1  318D  25E6  318E   	fcall	___xxtofl
  7902  0EA4  0873               	movf	?___xxtofl+3,w
  7903  0EA5  0020               	movlb	0	; select bank0
  7904  0EA6  00A7               	movwf	___flmul@a+3
  7905  0EA7  0872               	movf	?___xxtofl+2,w
  7906  0EA8  00A6               	movwf	___flmul@a+2
  7907  0EA9  0871               	movf	?___xxtofl+1,w
  7908  0EAA  00A5               	movwf	___flmul@a+1
  7909  0EAB  0870               	movf	?___xxtofl,w
  7910  0EAC  00A4               	movwf	___flmul@a
  7911  0EAD  3040               	movlw	64
  7912  0EAE  00A3               	movwf	___flmul@b+3
  7913  0EAF  3006               	movlw	6
  7914  0EB0  00A2               	movwf	___flmul@b+2
  7915  0EB1  3024               	movlw	36
  7916  0EB2  00A1               	movwf	___flmul@b+1
  7917  0EB3  30DD               	movlw	221
  7918  0EB4  00A0               	movwf	___flmul@b
  7919  0EB5  3180  203C  318E   	fcall	___flmul
  7920  0EB8  0020               	movlb	0	; select bank0
  7921  0EB9  0823               	movf	?___flmul+3,w
  7922  0EBA  00C8               	movwf	_speedCalc$1214+3
  7923  0EBB  0822               	movf	?___flmul+2,w
  7924  0EBC  00C7               	movwf	_speedCalc$1214+2
  7925  0EBD  0821               	movf	?___flmul+1,w
  7926  0EBE  00C6               	movwf	_speedCalc$1214+1
  7927  0EBF  0820               	movf	?___flmul,w
  7928  0EC0  00C5               	movwf	_speedCalc$1214
  7929                           
  7930                           ;main.c: 76:     speed = 2.096 * rpm * 0.06 ;
  7931  0EC1  0848               	movf	_speedCalc$1214+3,w
  7932  0EC2  00A7               	movwf	___flmul@a+3
  7933  0EC3  0847               	movf	_speedCalc$1214+2,w
  7934  0EC4  00A6               	movwf	___flmul@a+2
  7935  0EC5  0846               	movf	_speedCalc$1214+1,w
  7936  0EC6  00A5               	movwf	___flmul@a+1
  7937  0EC7  0845               	movf	_speedCalc$1214,w
  7938  0EC8  00A4               	movwf	___flmul@a
  7939  0EC9  303D               	movlw	61
  7940  0ECA  00A3               	movwf	___flmul@b+3
  7941  0ECB  3075               	movlw	117
  7942  0ECC  00A2               	movwf	___flmul@b+2
  7943  0ECD  30C2               	movlw	194
  7944  0ECE  00A1               	movwf	___flmul@b+1
  7945  0ECF  308F               	movlw	143
  7946  0ED0  00A0               	movwf	___flmul@b
  7947  0ED1  3180  203C  318E   	fcall	___flmul
  7948  0ED4  0020               	movlb	0	; select bank0
  7949  0ED5  0823               	movf	?___flmul+3,w
  7950  0ED6  00BD               	movwf	___fltol@f1+3
  7951  0ED7  0822               	movf	?___flmul+2,w
  7952  0ED8  00BC               	movwf	___fltol@f1+2
  7953  0ED9  0821               	movf	?___flmul+1,w
  7954  0EDA  00BB               	movwf	___fltol@f1+1
  7955  0EDB  0820               	movf	?___flmul,w
  7956  0EDC  00BA               	movwf	___fltol@f1
  7957  0EDD  318D  2517  318E   	fcall	___fltol
  7958  0EE0  0020               	movlb	0	; select bank0
  7959  0EE1  083B               	movf	?___fltol+1,w
  7960  0EE2  0022               	movlb	2	; select bank2
  7961  0EE3  00D0               	movwf	(_speed+1)^(0+256)
  7962  0EE4  0020               	movlb	0	; select bank0
  7963  0EE5  083A               	movf	?___fltol,w
  7964  0EE6  0022               	movlb	2	; select bank2
  7965  0EE7  00CF               	movwf	_speed^(0+256)
  7966                           
  7967                           ;main.c: 77:     counter = 0 ;
  7968  0EE8  0020               	movlb	0	; select bank0
  7969  0EE9  01CF               	clrf	_counter
  7970  0EEA  01D0               	clrf	_counter+1
  7971                           
  7972                           ;main.c: 78:     distance = distance + 2.096 ;
  7973  0EEB  0022               	movlb	2	; select bank2
  7974  0EEC  0851               	movf	_distance^(0+256),w
  7975  0EED  00F0               	movwf	___xxtofl@val
  7976  0EEE  0852               	movf	(_distance+1)^(0+256),w
  7977  0EEF  00F1               	movwf	___xxtofl@val+1
  7978  0EF0  0D89               	rlf	9,f
  7979  0EF1  3B89               	subwfb	9,f
  7980  0EF2  0989               	comf	9,f
  7981  0EF3  00F2               	movwf	___xxtofl@val+2
  7982  0EF4  00F3               	movwf	___xxtofl@val+3
  7983  0EF5  3001               	movlw	1
  7984  0EF6  318D  25E6  318E   	fcall	___xxtofl
  7985  0EF9  0873               	movf	?___xxtofl+3,w
  7986  0EFA  0020               	movlb	0	; select bank0
  7987  0EFB  00A7               	movwf	___fladd@a+3
  7988  0EFC  0872               	movf	?___xxtofl+2,w
  7989  0EFD  00A6               	movwf	___fladd@a+2
  7990  0EFE  0871               	movf	?___xxtofl+1,w
  7991  0EFF  00A5               	movwf	___fladd@a+1
  7992  0F00  0870               	movf	?___xxtofl,w
  7993  0F01  00A4               	movwf	___fladd@a
  7994  0F02  3040               	movlw	64
  7995  0F03  00A3               	movwf	___fladd@b+3
  7996  0F04  3006               	movlw	6
  7997  0F05  00A2               	movwf	___fladd@b+2
  7998  0F06  3024               	movlw	36
  7999  0F07  00A1               	movwf	___fladd@b+1
  8000  0F08  30DD               	movlw	221
  8001  0F09  00A0               	movwf	___fladd@b
  8002  0F0A  3182  2268  318E   	fcall	___fladd
  8003  0F0D  0020               	movlb	0	; select bank0
  8004  0F0E  0823               	movf	?___fladd+3,w
  8005  0F0F  00BD               	movwf	___fltol@f1+3
  8006  0F10  0822               	movf	?___fladd+2,w
  8007  0F11  00BC               	movwf	___fltol@f1+2
  8008  0F12  0821               	movf	?___fladd+1,w
  8009  0F13  00BB               	movwf	___fltol@f1+1
  8010  0F14  0820               	movf	?___fladd,w
  8011  0F15  00BA               	movwf	___fltol@f1
  8012  0F16  318D  2517         	fcall	___fltol
  8013  0F18  0020               	movlb	0	; select bank0
  8014  0F19  083B               	movf	?___fltol+1,w
  8015  0F1A  0022               	movlb	2	; select bank2
  8016  0F1B  00D2               	movwf	(_distance+1)^(0+256)
  8017  0F1C  0020               	movlb	0	; select bank0
  8018  0F1D  083A               	movf	?___fltol,w
  8019  0F1E  0022               	movlb	2	; select bank2
  8020  0F1F  00D1               	movwf	_distance^(0+256)
  8021  0F20  0008               	return
  8022  0F21                     __end_of_speedCalc:	
  8023                           
  8024                           	psect	text37
  8025  0DE6                     __ptext37:	
  8026 ;; *************** function ___xxtofl *****************
  8027 ;; Defined at:
  8028 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
  8029 ;; Parameters:    Size  Location     Type
  8030 ;;  sign            1    wreg     unsigned char 
  8031 ;;  val             4    0[COMMON] long 
  8032 ;; Auto vars:     Size  Location     Type
  8033 ;;  sign            1    8[COMMON] unsigned char 
  8034 ;;  arg             4   10[COMMON] unsigned long 
  8035 ;;  exp             1    9[COMMON] unsigned char 
  8036 ;; Return value:  Size  Location     Type
  8037 ;;                  4    0[COMMON] unsigned char 
  8038 ;; Registers used:
  8039 ;;		wreg, status,2, status,0
  8040 ;; Tracked objects:
  8041 ;;		On entry : 0/0
  8042 ;;		On exit  : 0/0
  8043 ;;		Unchanged: 0/0
  8044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8045 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8046 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8047 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8048 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8049 ;;Total ram usage:       14 bytes
  8050 ;; Hardware stack levels used:    1
  8051 ;; This function calls:
  8052 ;;		Nothing
  8053 ;; This function is called by:
  8054 ;;		_speedCalc
  8055 ;; This function uses a non-reentrant model
  8056 ;;
  8057                           
  8058                           
  8059                           ;psect for function ___xxtofl
  8060  0DE6                     ___xxtofl:	
  8061                           
  8062                           ;incstack = 0
  8063                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  8064                           ;___xxtofl@sign stored from wreg
  8065  0DE6  00F8               	movwf	___xxtofl@sign
  8066  0DE7  0878               	movf	___xxtofl@sign,w
  8067  0DE8  1D03               	btfss	3,2
  8068  0DE9  1FF3               	btfss	___xxtofl@val+3,7
  8069  0DEA  2DFB               	goto	i1l2721
  8070  0DEB  0970               	comf	___xxtofl@val,w
  8071  0DEC  00FA               	movwf	___xxtofl@arg
  8072  0DED  0971               	comf	___xxtofl@val+1,w
  8073  0DEE  00FB               	movwf	___xxtofl@arg+1
  8074  0DEF  0972               	comf	___xxtofl@val+2,w
  8075  0DF0  00FC               	movwf	___xxtofl@arg+2
  8076  0DF1  0973               	comf	___xxtofl@val+3,w
  8077  0DF2  00FD               	movwf	___xxtofl@arg+3
  8078  0DF3  0AFA               	incf	___xxtofl@arg,f
  8079  0DF4  1903               	skipnz
  8080  0DF5  0AFB               	incf	___xxtofl@arg+1,f
  8081  0DF6  1903               	skipnz
  8082  0DF7  0AFC               	incf	___xxtofl@arg+2,f
  8083  0DF8  1903               	skipnz
  8084  0DF9  0AFD               	incf	___xxtofl@arg+3,f
  8085  0DFA  2E03               	goto	i1l927
  8086  0DFB                     i1l2721:	
  8087  0DFB  0873               	movf	___xxtofl@val+3,w
  8088  0DFC  00FD               	movwf	___xxtofl@arg+3
  8089  0DFD  0872               	movf	___xxtofl@val+2,w
  8090  0DFE  00FC               	movwf	___xxtofl@arg+2
  8091  0DFF  0871               	movf	___xxtofl@val+1,w
  8092  0E00  00FB               	movwf	___xxtofl@arg+1
  8093  0E01  0870               	movf	___xxtofl@val,w
  8094  0E02  00FA               	movwf	___xxtofl@arg
  8095  0E03                     i1l927:	
  8096  0E03  0873               	movf	___xxtofl@val+3,w
  8097  0E04  0472               	iorwf	___xxtofl@val+2,w
  8098  0E05  0471               	iorwf	___xxtofl@val+1,w
  8099  0E06  0470               	iorwf	___xxtofl@val,w
  8100  0E07  1D03               	skipz
  8101  0E08  2E12               	goto	i1l2727
  8102  0E09  3000               	movlw	0
  8103  0E0A  00F3               	movwf	?___xxtofl+3
  8104  0E0B  3000               	movlw	0
  8105  0E0C  00F2               	movwf	?___xxtofl+2
  8106  0E0D  3000               	movlw	0
  8107  0E0E  00F1               	movwf	?___xxtofl+1
  8108  0E0F  3000               	movlw	0
  8109  0E10  00F0               	movwf	?___xxtofl
  8110  0E11  0008               	return
  8111  0E12                     i1l2727:	
  8112  0E12  3096               	movlw	150
  8113  0E13  00F4               	movwf	??___xxtofl
  8114  0E14  0874               	movf	??___xxtofl,w
  8115  0E15  00F9               	movwf	___xxtofl@exp
  8116  0E16                     i1l2731:	
  8117  0E16  30FE               	movlw	254
  8118  0E17  057D               	andwf	___xxtofl@arg+3,w
  8119  0E18  1903               	btfsc	3,2
  8120  0E19  2E39               	goto	i1l933
  8121  0E1A  3001               	movlw	1
  8122  0E1B  00F4               	movwf	??___xxtofl
  8123  0E1C  0874               	movf	??___xxtofl,w
  8124  0E1D  07F9               	addwf	___xxtofl@exp,f
  8125  0E1E  3001               	movlw	1
  8126  0E1F                     u336_25:	
  8127  0E1F  36FD               	lsrf	___xxtofl@arg+3,f
  8128  0E20  0CFC               	rrf	___xxtofl@arg+2,f
  8129  0E21  0CFB               	rrf	___xxtofl@arg+1,f
  8130  0E22  0CFA               	rrf	___xxtofl@arg,f
  8131  0E23  0B89               	decfsz	9,f
  8132  0E24  2E1F               	goto	u336_25
  8133  0E25  2E16               	goto	i1l2731
  8134  0E26                     i1l2733:	
  8135  0E26  3001               	movlw	1
  8136  0E27  00F4               	movwf	??___xxtofl
  8137  0E28  0874               	movf	??___xxtofl,w
  8138  0E29  07F9               	addwf	___xxtofl@exp,f
  8139  0E2A  3001               	movlw	1
  8140  0E2B  07FA               	addwf	___xxtofl@arg,f
  8141  0E2C  3000               	movlw	0
  8142  0E2D  3DFB               	addwfc	___xxtofl@arg+1,f
  8143  0E2E  3000               	movlw	0
  8144  0E2F  3DFC               	addwfc	___xxtofl@arg+2,f
  8145  0E30  3000               	movlw	0
  8146  0E31  3DFD               	addwfc	___xxtofl@arg+3,f
  8147  0E32  3001               	movlw	1
  8148  0E33                     u338_25:	
  8149  0E33  36FD               	lsrf	___xxtofl@arg+3,f
  8150  0E34  0CFC               	rrf	___xxtofl@arg+2,f
  8151  0E35  0CFB               	rrf	___xxtofl@arg+1,f
  8152  0E36  0CFA               	rrf	___xxtofl@arg,f
  8153  0E37  0B89               	decfsz	9,f
  8154  0E38  2E33               	goto	u338_25
  8155  0E39                     i1l933:	
  8156  0E39  30FF               	movlw	255
  8157  0E3A  057D               	andwf	___xxtofl@arg+3,w
  8158  0E3B  1903               	btfsc	3,2
  8159  0E3C  2E4B               	goto	i1l2741
  8160  0E3D  2E26               	goto	i1l2733
  8161  0E3E                     i1l2743:	
  8162  0E3E  3002               	movlw	2
  8163  0E3F  0279               	subwf	___xxtofl@exp,w
  8164  0E40  1C03               	btfss	3,0
  8165  0E41  2E4D               	goto	i1l940
  8166  0E42  3001               	movlw	1
  8167  0E43  02F9               	subwf	___xxtofl@exp,f
  8168  0E44  3001               	movlw	1
  8169  0E45                     u340_25:	
  8170  0E45  35FA               	lslf	___xxtofl@arg,f
  8171  0E46  0DFB               	rlf	___xxtofl@arg+1,f
  8172  0E47  0DFC               	rlf	___xxtofl@arg+2,f
  8173  0E48  0DFD               	rlf	___xxtofl@arg+3,f
  8174  0E49  0B89               	decfsz	9,f
  8175  0E4A  2E45               	goto	u340_25
  8176  0E4B                     i1l2741:	
  8177  0E4B  1FFC               	btfss	___xxtofl@arg+2,7
  8178  0E4C  2E3E               	goto	i1l2743
  8179  0E4D                     i1l940:	
  8180  0E4D  1879               	btfsc	___xxtofl@exp,0
  8181  0E4E  2E57               	goto	i1l941
  8182  0E4F  30FF               	movlw	255
  8183  0E50  05FA               	andwf	___xxtofl@arg,f
  8184  0E51  30FF               	movlw	255
  8185  0E52  05FB               	andwf	___xxtofl@arg+1,f
  8186  0E53  307F               	movlw	127
  8187  0E54  05FC               	andwf	___xxtofl@arg+2,f
  8188  0E55  30FF               	movlw	255
  8189  0E56  05FD               	andwf	___xxtofl@arg+3,f
  8190  0E57                     i1l941:	
  8191  0E57  1003               	clrc
  8192  0E58  0CF9               	rrf	___xxtofl@exp,f
  8193  0E59  0879               	movf	___xxtofl@exp,w
  8194  0E5A  00F4               	movwf	??___xxtofl
  8195  0E5B  01F5               	clrf	??___xxtofl+1
  8196  0E5C  01F6               	clrf	??___xxtofl+2
  8197  0E5D  01F7               	clrf	??___xxtofl+3
  8198  0E5E  3018               	movlw	24
  8199  0E5F                     u344_25:	
  8200  0E5F  35F4               	lslf	??___xxtofl,f
  8201  0E60  0DF5               	rlf	??___xxtofl+1,f
  8202  0E61  0DF6               	rlf	??___xxtofl+2,f
  8203  0E62  0DF7               	rlf	??___xxtofl+3,f
  8204  0E63  0B89               	decfsz	9,f
  8205  0E64  2E5F               	goto	u344_25
  8206  0E65  0874               	movf	??___xxtofl,w
  8207  0E66  04FA               	iorwf	___xxtofl@arg,f
  8208  0E67  0875               	movf	??___xxtofl+1,w
  8209  0E68  04FB               	iorwf	___xxtofl@arg+1,f
  8210  0E69  0876               	movf	??___xxtofl+2,w
  8211  0E6A  04FC               	iorwf	___xxtofl@arg+2,f
  8212  0E6B  0877               	movf	??___xxtofl+3,w
  8213  0E6C  04FD               	iorwf	___xxtofl@arg+3,f
  8214  0E6D  0878               	movf	___xxtofl@sign,w
  8215  0E6E  1D03               	btfss	3,2
  8216  0E6F  1FF3               	btfss	___xxtofl@val+3,7
  8217  0E70  2E72               	goto	i1l2755
  8218  0E71  17FD               	bsf	___xxtofl@arg+3,7
  8219  0E72                     i1l2755:	
  8220  0E72  087D               	movf	___xxtofl@arg+3,w
  8221  0E73  00F3               	movwf	?___xxtofl+3
  8222  0E74  087C               	movf	___xxtofl@arg+2,w
  8223  0E75  00F2               	movwf	?___xxtofl+2
  8224  0E76  087B               	movf	___xxtofl@arg+1,w
  8225  0E77  00F1               	movwf	?___xxtofl+1
  8226  0E78  087A               	movf	___xxtofl@arg,w
  8227  0E79  00F0               	movwf	?___xxtofl
  8228  0E7A  0008               	return
  8229  0E7B                     __end_of___xxtofl:	
  8230                           
  8231                           	psect	text38
  8232  0B38                     __ptext38:	
  8233 ;; *************** function ___wmul *****************
  8234 ;; Defined at:
  8235 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  8236 ;; Parameters:    Size  Location     Type
  8237 ;;  multiplier      2    9[COMMON] unsigned int 
  8238 ;;  multiplicand    2   11[COMMON] unsigned int 
  8239 ;; Auto vars:     Size  Location     Type
  8240 ;;  product         2    0[BANK0 ] unsigned int 
  8241 ;; Return value:  Size  Location     Type
  8242 ;;                  2    9[COMMON] unsigned int 
  8243 ;; Registers used:
  8244 ;;		wreg, status,2, status,0
  8245 ;; Tracked objects:
  8246 ;;		On entry : 0/0
  8247 ;;		On exit  : 0/0
  8248 ;;		Unchanged: 0/0
  8249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8250 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8251 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8253 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8254 ;;Total ram usage:        6 bytes
  8255 ;; Hardware stack levels used:    1
  8256 ;; This function calls:
  8257 ;;		Nothing
  8258 ;; This function is called by:
  8259 ;;		_speedCalc
  8260 ;; This function uses a non-reentrant model
  8261 ;;
  8262                           
  8263                           
  8264                           ;psect for function ___wmul
  8265  0B38                     ___wmul:	
  8266                           
  8267                           ;incstack = 0
  8268                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8269  0B38  0020               	movlb	0	; select bank0
  8270  0B39  01A0               	clrf	___wmul@product
  8271  0B3A  01A1               	clrf	___wmul@product+1
  8272  0B3B                     i1l2289:	
  8273  0B3B  1C79               	btfss	___wmul@multiplier,0
  8274  0B3C  2B42               	goto	i1l492
  8275  0B3D  087B               	movf	___wmul@multiplicand,w
  8276  0B3E  0020               	movlb	0	; select bank0
  8277  0B3F  07A0               	addwf	___wmul@product,f
  8278  0B40  087C               	movf	___wmul@multiplicand+1,w
  8279  0B41  3DA1               	addwfc	___wmul@product+1,f
  8280  0B42                     i1l492:	
  8281  0B42  3001               	movlw	1
  8282  0B43                     u241_25:	
  8283  0B43  35FB               	lslf	___wmul@multiplicand,f
  8284  0B44  0DFC               	rlf	___wmul@multiplicand+1,f
  8285  0B45  0B89               	decfsz	9,f
  8286  0B46  2B43               	goto	u241_25
  8287  0B47  3001               	movlw	1
  8288  0B48                     u242_25:	
  8289  0B48  36FA               	lsrf	___wmul@multiplier+1,f
  8290  0B49  0CF9               	rrf	___wmul@multiplier,f
  8291  0B4A  0B89               	decfsz	9,f
  8292  0B4B  2B48               	goto	u242_25
  8293  0B4C  0879               	movf	___wmul@multiplier,w
  8294  0B4D  047A               	iorwf	___wmul@multiplier+1,w
  8295  0B4E  1D03               	btfss	3,2
  8296  0B4F  2B3B               	goto	i1l2289
  8297  0B50  0020               	movlb	0	; select bank0
  8298  0B51  0821               	movf	___wmul@product+1,w
  8299  0B52  00FA               	movwf	?___wmul+1
  8300  0B53  0820               	movf	___wmul@product,w
  8301  0B54  00F9               	movwf	?___wmul
  8302  0B55  0008               	return
  8303  0B56                     __end_of___wmul:	
  8304                           
  8305                           	psect	text39
  8306  0D17                     __ptext39:	
  8307 ;; *************** function ___fltol *****************
  8308 ;; Defined at:
  8309 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
  8310 ;; Parameters:    Size  Location     Type
  8311 ;;  f1              4   26[BANK0 ] unsigned int 
  8312 ;; Auto vars:     Size  Location     Type
  8313 ;;  exp1            1   36[BANK0 ] unsigned char 
  8314 ;;  sign1           1   35[BANK0 ] unsigned char 
  8315 ;; Return value:  Size  Location     Type
  8316 ;;                  4   26[BANK0 ] long 
  8317 ;; Registers used:
  8318 ;;		wreg, status,2, status,0
  8319 ;; Tracked objects:
  8320 ;;		On entry : 0/0
  8321 ;;		On exit  : 0/0
  8322 ;;		Unchanged: 0/0
  8323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8324 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8325 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8326 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8327 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8328 ;;Total ram usage:       11 bytes
  8329 ;; Hardware stack levels used:    1
  8330 ;; This function calls:
  8331 ;;		Nothing
  8332 ;; This function is called by:
  8333 ;;		_speedCalc
  8334 ;; This function uses a non-reentrant model
  8335 ;;
  8336                           
  8337                           
  8338                           ;psect for function ___fltol
  8339  0D17                     ___fltol:	
  8340                           
  8341                           ;incstack = 0
  8342                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  8343  0D17  1003               	clrc
  8344  0D18  0020               	movlb	0	; select bank0
  8345  0D19  0D3C               	rlf	___fltol@f1+2,w
  8346  0D1A  0D3D               	rlf	___fltol@f1+3,w
  8347  0D1B  00BE               	movwf	??___fltol
  8348  0D1C  083E               	movf	??___fltol,w
  8349  0D1D  00C4               	movwf	___fltol@exp1
  8350  0D1E  0844               	movf	___fltol@exp1,w
  8351  0D1F  1D03               	btfss	3,2
  8352  0D20  2D2A               	goto	i1l2351
  8353  0D21                     i1l2347:	
  8354  0D21  3000               	movlw	0
  8355  0D22  00BD               	movwf	?___fltol+3
  8356  0D23  3000               	movlw	0
  8357  0D24  00BC               	movwf	?___fltol+2
  8358  0D25  3000               	movlw	0
  8359  0D26  00BB               	movwf	?___fltol+1
  8360  0D27  3000               	movlw	0
  8361  0D28  00BA               	movwf	?___fltol
  8362  0D29  0008               	return
  8363  0D2A                     i1l2351:	
  8364  0D2A  083A               	movf	___fltol@f1,w
  8365  0D2B  00BE               	movwf	??___fltol
  8366  0D2C  083B               	movf	___fltol@f1+1,w
  8367  0D2D  00BF               	movwf	??___fltol+1
  8368  0D2E  083C               	movf	___fltol@f1+2,w
  8369  0D2F  00C0               	movwf	??___fltol+2
  8370  0D30  083D               	movf	___fltol@f1+3,w
  8371  0D31  00C1               	movwf	??___fltol+3
  8372  0D32  301F               	movlw	31
  8373  0D33                     u255_25:	
  8374  0D33  36C1               	lsrf	??___fltol+3,f
  8375  0D34  0CC0               	rrf	??___fltol+2,f
  8376  0D35  0CBF               	rrf	??___fltol+1,f
  8377  0D36  0CBE               	rrf	??___fltol,f
  8378  0D37  0B89               	decfsz	9,f
  8379  0D38  2D33               	goto	u255_25
  8380  0D39  083E               	movf	??___fltol,w
  8381  0D3A  00C2               	movwf	??___fltol+4
  8382  0D3B  0842               	movf	??___fltol+4,w
  8383  0D3C  00C3               	movwf	___fltol@sign1
  8384  0D3D  17BC               	bsf	___fltol@f1+2,7
  8385  0D3E  30FF               	movlw	255
  8386  0D3F  05BA               	andwf	___fltol@f1,f
  8387  0D40  30FF               	movlw	255
  8388  0D41  05BB               	andwf	___fltol@f1+1,f
  8389  0D42  30FF               	movlw	255
  8390  0D43  05BC               	andwf	___fltol@f1+2,f
  8391  0D44  3000               	movlw	0
  8392  0D45  05BD               	andwf	___fltol@f1+3,f
  8393  0D46  3096               	movlw	150
  8394  0D47  02C4               	subwf	___fltol@exp1,f
  8395  0D48  1FC4               	btfss	___fltol@exp1,7
  8396  0D49  2D5D               	goto	i1l2369
  8397  0D4A  0844               	movf	___fltol@exp1,w
  8398  0D4B  3A80               	xorlw	128
  8399  0D4C  3E97               	addlw	151
  8400  0D4D  1C03               	btfss	3,0
  8401  0D4E  2D21               	goto	i1l2347
  8402  0D4F                     i1l2367:	
  8403  0D4F  3001               	movlw	1
  8404  0D50                     u258_25:	
  8405  0D50  36BD               	lsrf	___fltol@f1+3,f
  8406  0D51  0CBC               	rrf	___fltol@f1+2,f
  8407  0D52  0CBB               	rrf	___fltol@f1+1,f
  8408  0D53  0CBA               	rrf	___fltol@f1,f
  8409  0D54  0B89               	decfsz	9,f
  8410  0D55  2D50               	goto	u258_25
  8411  0D56  3001               	movlw	1
  8412  0D57  00BE               	movwf	??___fltol
  8413  0D58  083E               	movf	??___fltol,w
  8414  0D59  07C4               	addwf	___fltol@exp1,f
  8415  0D5A  1903               	btfsc	3,2
  8416  0D5B  2D6E               	goto	i1l2377
  8417  0D5C  2D4F               	goto	i1l2367
  8418  0D5D                     i1l2369:	
  8419  0D5D  3020               	movlw	32
  8420  0D5E  0244               	subwf	___fltol@exp1,w
  8421  0D5F  1803               	btfsc	3,0
  8422  0D60  2D21               	goto	i1l2347
  8423  0D61                     i1l693:	
  8424  0D61  0844               	movf	___fltol@exp1,w
  8425  0D62  1903               	btfsc	3,2
  8426  0D63  2D6E               	goto	i1l2377
  8427  0D64  3001               	movlw	1
  8428  0D65                     u261_25:	
  8429  0D65  35BA               	lslf	___fltol@f1,f
  8430  0D66  0DBB               	rlf	___fltol@f1+1,f
  8431  0D67  0DBC               	rlf	___fltol@f1+2,f
  8432  0D68  0DBD               	rlf	___fltol@f1+3,f
  8433  0D69  0B89               	decfsz	9,f
  8434  0D6A  2D65               	goto	u261_25
  8435  0D6B  3001               	movlw	1
  8436  0D6C  02C4               	subwf	___fltol@exp1,f
  8437  0D6D  2D61               	goto	i1l693
  8438  0D6E                     i1l2377:	
  8439  0D6E  0843               	movf	___fltol@sign1,w
  8440  0D6F  1903               	btfsc	3,2
  8441  0D70  0008               	return
  8442  0D71  09BA               	comf	___fltol@f1,f
  8443  0D72  09BB               	comf	___fltol@f1+1,f
  8444  0D73  09BC               	comf	___fltol@f1+2,f
  8445  0D74  09BD               	comf	___fltol@f1+3,f
  8446  0D75  0ABA               	incf	___fltol@f1,f
  8447  0D76  1903               	skipnz
  8448  0D77  0ABB               	incf	___fltol@f1+1,f
  8449  0D78  1903               	skipnz
  8450  0D79  0ABC               	incf	___fltol@f1+2,f
  8451  0D7A  1903               	skipnz
  8452  0D7B  0ABD               	incf	___fltol@f1+3,f
  8453  0D7C  0008               	return
  8454  0D7D                     __end_of___fltol:	
  8455                           
  8456                           	psect	text40
  8457  003C                     __ptext40:	
  8458 ;; *************** function ___flmul *****************
  8459 ;; Defined at:
  8460 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
  8461 ;; Parameters:    Size  Location     Type
  8462 ;;  b               4    0[BANK0 ] long 
  8463 ;;  a               4    4[BANK0 ] long 
  8464 ;; Auto vars:     Size  Location     Type
  8465 ;;  prod            4   20[BANK0 ] struct .
  8466 ;;  grs             4   14[BANK0 ] unsigned long 
  8467 ;;  temp            2   24[BANK0 ] struct .
  8468 ;;  bexp            1   19[BANK0 ] unsigned char 
  8469 ;;  aexp            1   18[BANK0 ] unsigned char 
  8470 ;;  sign            1   13[BANK0 ] unsigned char 
  8471 ;; Return value:  Size  Location     Type
  8472 ;;                  4    0[BANK0 ] unsigned char 
  8473 ;; Registers used:
  8474 ;;		wreg, status,2, status,0, pclath, cstack
  8475 ;; Tracked objects:
  8476 ;;		On entry : 0/0
  8477 ;;		On exit  : 0/0
  8478 ;;		Unchanged: 0/0
  8479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8480 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8481 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8482 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8483 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8484 ;;Total ram usage:       26 bytes
  8485 ;; Hardware stack levels used:    1
  8486 ;; Hardware stack levels required when called:    1
  8487 ;; This function calls:
  8488 ;;		__Umul8_16
  8489 ;; This function is called by:
  8490 ;;		_speedCalc
  8491 ;; This function uses a non-reentrant model
  8492 ;;
  8493                           
  8494                           
  8495                           ;psect for function ___flmul
  8496  003C                     ___flmul:	
  8497                           
  8498                           ;incstack = 0
  8499                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  8500  003C  0020               	movlb	0	; select bank0
  8501  003D  0823               	movf	___flmul@b+3,w
  8502  003E  3980               	andlw	128
  8503  003F  00A8               	movwf	??___flmul
  8504  0040  0828               	movf	??___flmul,w
  8505  0041  00AD               	movwf	___flmul@sign
  8506  0042  3523               	lslf	___flmul@b+3,w
  8507  0043  00A8               	movwf	??___flmul
  8508  0044  0828               	movf	??___flmul,w
  8509  0045  00B3               	movwf	___flmul@bexp
  8510  0046  1BA2               	btfsc	___flmul@b+2,7
  8511  0047  1433               	bsf	___flmul@bexp,0
  8512  0048  0833               	movf	___flmul@bexp,w
  8513  0049  1903               	btfsc	3,2
  8514  004A  2858               	goto	i1l2591
  8515  004B  0A33               	incf	___flmul@bexp,w
  8516  004C  1D03               	btfss	3,2
  8517  004D  2856               	goto	i1l2589
  8518  004E  3000               	movlw	0
  8519  004F  00A3               	movwf	___flmul@b+3
  8520  0050  3000               	movlw	0
  8521  0051  00A2               	movwf	___flmul@b+2
  8522  0052  3000               	movlw	0
  8523  0053  00A1               	movwf	___flmul@b+1
  8524  0054  3000               	movlw	0
  8525  0055  00A0               	movwf	___flmul@b
  8526  0056                     i1l2589:	
  8527  0056  17A2               	bsf	___flmul@b+2,7
  8528  0057  2860               	goto	i1l2593
  8529  0058                     i1l2591:	
  8530  0058  3000               	movlw	0
  8531  0059  00A3               	movwf	___flmul@b+3
  8532  005A  3000               	movlw	0
  8533  005B  00A2               	movwf	___flmul@b+2
  8534  005C  3000               	movlw	0
  8535  005D  00A1               	movwf	___flmul@b+1
  8536  005E  3000               	movlw	0
  8537  005F  00A0               	movwf	___flmul@b
  8538  0060                     i1l2593:	
  8539  0060  0827               	movf	___flmul@a+3,w
  8540  0061  3980               	andlw	128
  8541  0062  00A8               	movwf	??___flmul
  8542  0063  0828               	movf	??___flmul,w
  8543  0064  06AD               	xorwf	___flmul@sign,f
  8544  0065  3527               	lslf	___flmul@a+3,w
  8545  0066  00A8               	movwf	??___flmul
  8546  0067  0828               	movf	??___flmul,w
  8547  0068  00B2               	movwf	___flmul@aexp
  8548  0069  1BA6               	btfsc	___flmul@a+2,7
  8549  006A  1432               	bsf	___flmul@aexp,0
  8550  006B  0832               	movf	___flmul@aexp,w
  8551  006C  1903               	btfsc	3,2
  8552  006D  287B               	goto	i1l2609
  8553  006E  0A32               	incf	___flmul@aexp,w
  8554  006F  1D03               	btfss	3,2
  8555  0070  2879               	goto	i1l2607
  8556  0071  3000               	movlw	0
  8557  0072  00A7               	movwf	___flmul@a+3
  8558  0073  3000               	movlw	0
  8559  0074  00A6               	movwf	___flmul@a+2
  8560  0075  3000               	movlw	0
  8561  0076  00A5               	movwf	___flmul@a+1
  8562  0077  3000               	movlw	0
  8563  0078  00A4               	movwf	___flmul@a
  8564  0079                     i1l2607:	
  8565  0079  17A6               	bsf	___flmul@a+2,7
  8566  007A  2883               	goto	i1l2611
  8567  007B                     i1l2609:	
  8568  007B  3000               	movlw	0
  8569  007C  00A7               	movwf	___flmul@a+3
  8570  007D  3000               	movlw	0
  8571  007E  00A6               	movwf	___flmul@a+2
  8572  007F  3000               	movlw	0
  8573  0080  00A5               	movwf	___flmul@a+1
  8574  0081  3000               	movlw	0
  8575  0082  00A4               	movwf	___flmul@a
  8576  0083                     i1l2611:	
  8577  0083  0832               	movf	___flmul@aexp,w
  8578  0084  1D03               	btfss	3,2
  8579  0085  0833               	movf	___flmul@bexp,w
  8580  0086  1D03               	btfss	3,2
  8581  0087  2891               	goto	i1l2619
  8582  0088  3000               	movlw	0
  8583  0089  00A3               	movwf	?___flmul+3
  8584  008A  3000               	movlw	0
  8585  008B  00A2               	movwf	?___flmul+2
  8586  008C  3000               	movlw	0
  8587  008D  00A1               	movwf	?___flmul+1
  8588  008E  3000               	movlw	0
  8589  008F  00A0               	movwf	?___flmul
  8590  0090  0008               	return
  8591  0091                     i1l2619:	
  8592  0091  0820               	movf	___flmul@b,w
  8593  0092  00A8               	movwf	??___flmul
  8594  0093  0828               	movf	??___flmul,w
  8595  0094  00F0               	movwf	__Umul8_16@multiplicand
  8596  0095  0826               	movf	___flmul@a+2,w
  8597  0096  318B  2356  3180   	fcall	__Umul8_16
  8598  0099  0871               	movf	?__Umul8_16+1,w
  8599  009A  0020               	movlb	0	; select bank0
  8600  009B  00B9               	movwf	___flmul@temp+1
  8601  009C  0870               	movf	?__Umul8_16,w
  8602  009D  00B8               	movwf	___flmul@temp
  8603  009E  0838               	movf	___flmul@temp,w
  8604  009F  00A8               	movwf	??___flmul
  8605  00A0  01A9               	clrf	??___flmul+1
  8606  00A1  01AA               	clrf	??___flmul+2
  8607  00A2  01AB               	clrf	??___flmul+3
  8608  00A3  082B               	movf	??___flmul+3,w
  8609  00A4  00B1               	movwf	___flmul@grs+3
  8610  00A5  082A               	movf	??___flmul+2,w
  8611  00A6  00B0               	movwf	___flmul@grs+2
  8612  00A7  0829               	movf	??___flmul+1,w
  8613  00A8  00AF               	movwf	___flmul@grs+1
  8614  00A9  0828               	movf	??___flmul,w
  8615  00AA  00AE               	movwf	___flmul@grs
  8616  00AB  0839               	movf	___flmul@temp+1,w
  8617  00AC  00A8               	movwf	??___flmul
  8618  00AD  01A9               	clrf	??___flmul+1
  8619  00AE  01AA               	clrf	??___flmul+2
  8620  00AF  01AB               	clrf	??___flmul+3
  8621  00B0  082B               	movf	??___flmul+3,w
  8622  00B1  00B7               	movwf	___flmul@prod+3
  8623  00B2  082A               	movf	??___flmul+2,w
  8624  00B3  00B6               	movwf	___flmul@prod+2
  8625  00B4  0829               	movf	??___flmul+1,w
  8626  00B5  00B5               	movwf	___flmul@prod+1
  8627  00B6  0828               	movf	??___flmul,w
  8628  00B7  00B4               	movwf	___flmul@prod
  8629  00B8  0821               	movf	___flmul@b+1,w
  8630  00B9  00A8               	movwf	??___flmul
  8631  00BA  0828               	movf	??___flmul,w
  8632  00BB  00F0               	movwf	__Umul8_16@multiplicand
  8633  00BC  0825               	movf	___flmul@a+1,w
  8634  00BD  318B  2356  3180   	fcall	__Umul8_16
  8635  00C0  0871               	movf	?__Umul8_16+1,w
  8636  00C1  0020               	movlb	0	; select bank0
  8637  00C2  00B9               	movwf	___flmul@temp+1
  8638  00C3  0870               	movf	?__Umul8_16,w
  8639  00C4  00B8               	movwf	___flmul@temp
  8640  00C5  0838               	movf	___flmul@temp,w
  8641  00C6  00A8               	movwf	??___flmul
  8642  00C7  01A9               	clrf	??___flmul+1
  8643  00C8  01AA               	clrf	??___flmul+2
  8644  00C9  01AB               	clrf	??___flmul+3
  8645  00CA  0828               	movf	??___flmul,w
  8646  00CB  07AE               	addwf	___flmul@grs,f
  8647  00CC  0829               	movf	??___flmul+1,w
  8648  00CD  3DAF               	addwfc	___flmul@grs+1,f
  8649  00CE  082A               	movf	??___flmul+2,w
  8650  00CF  3DB0               	addwfc	___flmul@grs+2,f
  8651  00D0  082B               	movf	??___flmul+3,w
  8652  00D1  3DB1               	addwfc	___flmul@grs+3,f
  8653  00D2  0839               	movf	___flmul@temp+1,w
  8654  00D3  00A8               	movwf	??___flmul
  8655  00D4  01A9               	clrf	??___flmul+1
  8656  00D5  01AA               	clrf	??___flmul+2
  8657  00D6  01AB               	clrf	??___flmul+3
  8658  00D7  0828               	movf	??___flmul,w
  8659  00D8  07B4               	addwf	___flmul@prod,f
  8660  00D9  0829               	movf	??___flmul+1,w
  8661  00DA  3DB5               	addwfc	___flmul@prod+1,f
  8662  00DB  082A               	movf	??___flmul+2,w
  8663  00DC  3DB6               	addwfc	___flmul@prod+2,f
  8664  00DD  082B               	movf	??___flmul+3,w
  8665  00DE  3DB7               	addwfc	___flmul@prod+3,f
  8666  00DF  0822               	movf	___flmul@b+2,w
  8667  00E0  00A8               	movwf	??___flmul
  8668  00E1  0828               	movf	??___flmul,w
  8669  00E2  00F0               	movwf	__Umul8_16@multiplicand
  8670  00E3  0824               	movf	___flmul@a,w
  8671  00E4  318B  2356  3180   	fcall	__Umul8_16
  8672  00E7  0871               	movf	?__Umul8_16+1,w
  8673  00E8  0020               	movlb	0	; select bank0
  8674  00E9  00B9               	movwf	___flmul@temp+1
  8675  00EA  0870               	movf	?__Umul8_16,w
  8676  00EB  00B8               	movwf	___flmul@temp
  8677  00EC  0838               	movf	___flmul@temp,w
  8678  00ED  00A8               	movwf	??___flmul
  8679  00EE  01A9               	clrf	??___flmul+1
  8680  00EF  01AA               	clrf	??___flmul+2
  8681  00F0  01AB               	clrf	??___flmul+3
  8682  00F1  0828               	movf	??___flmul,w
  8683  00F2  07AE               	addwf	___flmul@grs,f
  8684  00F3  0829               	movf	??___flmul+1,w
  8685  00F4  3DAF               	addwfc	___flmul@grs+1,f
  8686  00F5  082A               	movf	??___flmul+2,w
  8687  00F6  3DB0               	addwfc	___flmul@grs+2,f
  8688  00F7  082B               	movf	??___flmul+3,w
  8689  00F8  3DB1               	addwfc	___flmul@grs+3,f
  8690  00F9  0839               	movf	___flmul@temp+1,w
  8691  00FA  00A8               	movwf	??___flmul
  8692  00FB  01A9               	clrf	??___flmul+1
  8693  00FC  01AA               	clrf	??___flmul+2
  8694  00FD  01AB               	clrf	??___flmul+3
  8695  00FE  0828               	movf	??___flmul,w
  8696  00FF  07B4               	addwf	___flmul@prod,f
  8697  0100  0829               	movf	??___flmul+1,w
  8698  0101  3DB5               	addwfc	___flmul@prod+1,f
  8699  0102  082A               	movf	??___flmul+2,w
  8700  0103  3DB6               	addwfc	___flmul@prod+2,f
  8701  0104  082B               	movf	??___flmul+3,w
  8702  0105  3DB7               	addwfc	___flmul@prod+3,f
  8703  0106  3008               	movlw	8
  8704  0107                     u315_25:	
  8705  0107  35AE               	lslf	___flmul@grs,f
  8706  0108  0DAF               	rlf	___flmul@grs+1,f
  8707  0109  0DB0               	rlf	___flmul@grs+2,f
  8708  010A  0DB1               	rlf	___flmul@grs+3,f
  8709  010B  0B89               	decfsz	9,f
  8710  010C  2907               	goto	u315_25
  8711  010D  0821               	movf	___flmul@b+1,w
  8712  010E  00A8               	movwf	??___flmul
  8713  010F  0828               	movf	??___flmul,w
  8714  0110  00F0               	movwf	__Umul8_16@multiplicand
  8715  0111  0824               	movf	___flmul@a,w
  8716  0112  318B  2356  3180   	fcall	__Umul8_16
  8717  0115  0871               	movf	?__Umul8_16+1,w
  8718  0116  0020               	movlb	0	; select bank0
  8719  0117  00B9               	movwf	___flmul@temp+1
  8720  0118  0870               	movf	?__Umul8_16,w
  8721  0119  00B8               	movwf	___flmul@temp
  8722  011A  0838               	movf	___flmul@temp,w
  8723  011B  07AE               	addwf	___flmul@grs,f
  8724  011C  0839               	movf	___flmul@temp+1,w
  8725  011D  3DAF               	addwfc	___flmul@grs+1,f
  8726  011E  3000               	movlw	0
  8727  011F  3DB0               	addwfc	___flmul@grs+2,f
  8728  0120  3DB1               	addwfc	___flmul@grs+3,f
  8729  0121  0820               	movf	___flmul@b,w
  8730  0122  00A8               	movwf	??___flmul
  8731  0123  0828               	movf	??___flmul,w
  8732  0124  00F0               	movwf	__Umul8_16@multiplicand
  8733  0125  0825               	movf	___flmul@a+1,w
  8734  0126  318B  2356  3180   	fcall	__Umul8_16
  8735  0129  0871               	movf	?__Umul8_16+1,w
  8736  012A  0020               	movlb	0	; select bank0
  8737  012B  00B9               	movwf	___flmul@temp+1
  8738  012C  0870               	movf	?__Umul8_16,w
  8739  012D  00B8               	movwf	___flmul@temp
  8740  012E  0838               	movf	___flmul@temp,w
  8741  012F  07AE               	addwf	___flmul@grs,f
  8742  0130  0839               	movf	___flmul@temp+1,w
  8743  0131  3DAF               	addwfc	___flmul@grs+1,f
  8744  0132  3000               	movlw	0
  8745  0133  3DB0               	addwfc	___flmul@grs+2,f
  8746  0134  3DB1               	addwfc	___flmul@grs+3,f
  8747  0135  3008               	movlw	8
  8748  0136                     u316_25:	
  8749  0136  35AE               	lslf	___flmul@grs,f
  8750  0137  0DAF               	rlf	___flmul@grs+1,f
  8751  0138  0DB0               	rlf	___flmul@grs+2,f
  8752  0139  0DB1               	rlf	___flmul@grs+3,f
  8753  013A  0B89               	decfsz	9,f
  8754  013B  2936               	goto	u316_25
  8755  013C  0820               	movf	___flmul@b,w
  8756  013D  00A8               	movwf	??___flmul
  8757  013E  0828               	movf	??___flmul,w
  8758  013F  00F0               	movwf	__Umul8_16@multiplicand
  8759  0140  0824               	movf	___flmul@a,w
  8760  0141  318B  2356  3180   	fcall	__Umul8_16
  8761  0144  0871               	movf	?__Umul8_16+1,w
  8762  0145  0020               	movlb	0	; select bank0
  8763  0146  00B9               	movwf	___flmul@temp+1
  8764  0147  0870               	movf	?__Umul8_16,w
  8765  0148  00B8               	movwf	___flmul@temp
  8766  0149  0838               	movf	___flmul@temp,w
  8767  014A  07AE               	addwf	___flmul@grs,f
  8768  014B  0839               	movf	___flmul@temp+1,w
  8769  014C  3DAF               	addwfc	___flmul@grs+1,f
  8770  014D  3000               	movlw	0
  8771  014E  3DB0               	addwfc	___flmul@grs+2,f
  8772  014F  3DB1               	addwfc	___flmul@grs+3,f
  8773  0150  0821               	movf	___flmul@b+1,w
  8774  0151  00A8               	movwf	??___flmul
  8775  0152  0828               	movf	??___flmul,w
  8776  0153  00F0               	movwf	__Umul8_16@multiplicand
  8777  0154  0826               	movf	___flmul@a+2,w
  8778  0155  318B  2356  3180   	fcall	__Umul8_16
  8779  0158  0871               	movf	?__Umul8_16+1,w
  8780  0159  0020               	movlb	0	; select bank0
  8781  015A  00B9               	movwf	___flmul@temp+1
  8782  015B  0870               	movf	?__Umul8_16,w
  8783  015C  00B8               	movwf	___flmul@temp
  8784  015D  0838               	movf	___flmul@temp,w
  8785  015E  07B4               	addwf	___flmul@prod,f
  8786  015F  0839               	movf	___flmul@temp+1,w
  8787  0160  3DB5               	addwfc	___flmul@prod+1,f
  8788  0161  3000               	movlw	0
  8789  0162  3DB6               	addwfc	___flmul@prod+2,f
  8790  0163  3DB7               	addwfc	___flmul@prod+3,f
  8791  0164  0822               	movf	___flmul@b+2,w
  8792  0165  00A8               	movwf	??___flmul
  8793  0166  0828               	movf	??___flmul,w
  8794  0167  00F0               	movwf	__Umul8_16@multiplicand
  8795  0168  0825               	movf	___flmul@a+1,w
  8796  0169  318B  2356  3180   	fcall	__Umul8_16
  8797  016C  0871               	movf	?__Umul8_16+1,w
  8798  016D  0020               	movlb	0	; select bank0
  8799  016E  00B9               	movwf	___flmul@temp+1
  8800  016F  0870               	movf	?__Umul8_16,w
  8801  0170  00B8               	movwf	___flmul@temp
  8802  0171  0838               	movf	___flmul@temp,w
  8803  0172  07B4               	addwf	___flmul@prod,f
  8804  0173  0839               	movf	___flmul@temp+1,w
  8805  0174  3DB5               	addwfc	___flmul@prod+1,f
  8806  0175  3000               	movlw	0
  8807  0176  3DB6               	addwfc	___flmul@prod+2,f
  8808  0177  3DB7               	addwfc	___flmul@prod+3,f
  8809  0178  0822               	movf	___flmul@b+2,w
  8810  0179  00A8               	movwf	??___flmul
  8811  017A  0828               	movf	??___flmul,w
  8812  017B  00F0               	movwf	__Umul8_16@multiplicand
  8813  017C  0826               	movf	___flmul@a+2,w
  8814  017D  318B  2356  3180   	fcall	__Umul8_16
  8815  0180  0871               	movf	?__Umul8_16+1,w
  8816  0181  0020               	movlb	0	; select bank0
  8817  0182  00B9               	movwf	___flmul@temp+1
  8818  0183  0870               	movf	?__Umul8_16,w
  8819  0184  00B8               	movwf	___flmul@temp
  8820  0185  0838               	movf	___flmul@temp,w
  8821  0186  00A8               	movwf	??___flmul
  8822  0187  0839               	movf	___flmul@temp+1,w
  8823  0188  00A9               	movwf	??___flmul+1
  8824  0189  01AA               	clrf	??___flmul+2
  8825  018A  01AB               	clrf	??___flmul+3
  8826  018B  3008               	movlw	8
  8827  018C                     u317_25:	
  8828  018C  35A8               	lslf	??___flmul,f
  8829  018D  0DA9               	rlf	??___flmul+1,f
  8830  018E  0DAA               	rlf	??___flmul+2,f
  8831  018F  0DAB               	rlf	??___flmul+3,f
  8832  0190  0B89               	decfsz	9,f
  8833  0191  298C               	goto	u317_25
  8834  0192  0828               	movf	??___flmul,w
  8835  0193  07B4               	addwf	___flmul@prod,f
  8836  0194  0829               	movf	??___flmul+1,w
  8837  0195  3DB5               	addwfc	___flmul@prod+1,f
  8838  0196  082A               	movf	??___flmul+2,w
  8839  0197  3DB6               	addwfc	___flmul@prod+2,f
  8840  0198  082B               	movf	??___flmul+3,w
  8841  0199  3DB7               	addwfc	___flmul@prod+3,f
  8842  019A  082E               	movf	___flmul@grs,w
  8843  019B  00A8               	movwf	??___flmul
  8844  019C  082F               	movf	___flmul@grs+1,w
  8845  019D  00A9               	movwf	??___flmul+1
  8846  019E  0830               	movf	___flmul@grs+2,w
  8847  019F  00AA               	movwf	??___flmul+2
  8848  01A0  0831               	movf	___flmul@grs+3,w
  8849  01A1  00AB               	movwf	??___flmul+3
  8850  01A2  3018               	movlw	24
  8851  01A3                     u318_25:	
  8852  01A3  36AB               	lsrf	??___flmul+3,f
  8853  01A4  0CAA               	rrf	??___flmul+2,f
  8854  01A5  0CA9               	rrf	??___flmul+1,f
  8855  01A6  0CA8               	rrf	??___flmul,f
  8856  01A7  0B89               	decfsz	9,f
  8857  01A8  29A3               	goto	u318_25
  8858  01A9  0828               	movf	??___flmul,w
  8859  01AA  07B4               	addwf	___flmul@prod,f
  8860  01AB  0829               	movf	??___flmul+1,w
  8861  01AC  3DB5               	addwfc	___flmul@prod+1,f
  8862  01AD  082A               	movf	??___flmul+2,w
  8863  01AE  3DB6               	addwfc	___flmul@prod+2,f
  8864  01AF  082B               	movf	??___flmul+3,w
  8865  01B0  3DB7               	addwfc	___flmul@prod+3,f
  8866  01B1  3008               	movlw	8
  8867  01B2                     u319_25:	
  8868  01B2  35AE               	lslf	___flmul@grs,f
  8869  01B3  0DAF               	rlf	___flmul@grs+1,f
  8870  01B4  0DB0               	rlf	___flmul@grs+2,f
  8871  01B5  0DB1               	rlf	___flmul@grs+3,f
  8872  01B6  0B89               	decfsz	9,f
  8873  01B7  29B2               	goto	u319_25
  8874  01B8  0833               	movf	___flmul@bexp,w
  8875  01B9  0732               	addwf	___flmul@aexp,w
  8876  01BA  00A8               	movwf	??___flmul
  8877  01BB  01A9               	clrf	??___flmul+1
  8878  01BC  0DA9               	rlf	??___flmul+1,f
  8879  01BD  0828               	movf	??___flmul,w
  8880  01BE  3E82               	addlw	130
  8881  01BF  00B8               	movwf	___flmul@temp
  8882  01C0  30FF               	movlw	255
  8883  01C1  3D29               	addwfc	??___flmul+1,w
  8884  01C2  00B9               	movwf	___flmul@temp+1
  8885  01C3                     i1l2671:	
  8886  01C3  1BB6               	btfsc	___flmul@prod+2,7
  8887  01C4  29DA               	goto	i1l2673
  8888  01C5  3001               	movlw	1
  8889  01C6                     u320_25:	
  8890  01C6  35B4               	lslf	___flmul@prod,f
  8891  01C7  0DB5               	rlf	___flmul@prod+1,f
  8892  01C8  0DB6               	rlf	___flmul@prod+2,f
  8893  01C9  0DB7               	rlf	___flmul@prod+3,f
  8894  01CA  0B89               	decfsz	9,f
  8895  01CB  29C6               	goto	u320_25
  8896  01CC  1BB1               	btfsc	___flmul@grs+3,7
  8897  01CD  1434               	bsf	___flmul@prod,0
  8898  01CE  3001               	movlw	1
  8899  01CF                     u322_25:	
  8900  01CF  35AE               	lslf	___flmul@grs,f
  8901  01D0  0DAF               	rlf	___flmul@grs+1,f
  8902  01D1  0DB0               	rlf	___flmul@grs+2,f
  8903  01D2  0DB1               	rlf	___flmul@grs+3,f
  8904  01D3  0B89               	decfsz	9,f
  8905  01D4  29CF               	goto	u322_25
  8906  01D5  30FF               	movlw	255
  8907  01D6  07B8               	addwf	___flmul@temp,f
  8908  01D7  30FF               	movlw	255
  8909  01D8  3DB9               	addwfc	___flmul@temp+1,f
  8910  01D9  29C3               	goto	i1l2671
  8911  01DA                     i1l2673:	
  8912  01DA  01B2               	clrf	___flmul@aexp
  8913  01DB  1FB1               	btfss	___flmul@grs+3,7
  8914  01DC  29F3               	goto	i1l2683
  8915  01DD  30FF               	movlw	255
  8916  01DE  052E               	andwf	___flmul@grs,w
  8917  01DF  00A8               	movwf	??___flmul
  8918  01E0  30FF               	movlw	255
  8919  01E1  052F               	andwf	___flmul@grs+1,w
  8920  01E2  00A9               	movwf	??___flmul+1
  8921  01E3  30FF               	movlw	255
  8922  01E4  0530               	andwf	___flmul@grs+2,w
  8923  01E5  00AA               	movwf	??___flmul+2
  8924  01E6  307F               	movlw	127
  8925  01E7  0531               	andwf	___flmul@grs+3,w
  8926  01E8  00AB               	movwf	??___flmul+3
  8927  01E9  082B               	movf	??___flmul+3,w
  8928  01EA  042A               	iorwf	??___flmul+2,w
  8929  01EB  0429               	iorwf	??___flmul+1,w
  8930  01EC  0428               	iorwf	??___flmul,w
  8931  01ED  1903               	skipnz
  8932  01EE  1834               	btfsc	___flmul@prod,0
  8933  01EF  29F1               	goto	i1l2679
  8934  01F0  29F3               	goto	i1l2683
  8935  01F1                     i1l2679:	
  8936  01F1  01B2               	clrf	___flmul@aexp
  8937  01F2  0AB2               	incf	___flmul@aexp,f
  8938  01F3                     i1l2683:	
  8939  01F3  0832               	movf	___flmul@aexp,w
  8940  01F4  1903               	btfsc	3,2
  8941  01F5  2A1C               	goto	i1l2693
  8942  01F6  3001               	movlw	1
  8943  01F7  07B4               	addwf	___flmul@prod,f
  8944  01F8  3000               	movlw	0
  8945  01F9  3DB5               	addwfc	___flmul@prod+1,f
  8946  01FA  3000               	movlw	0
  8947  01FB  3DB6               	addwfc	___flmul@prod+2,f
  8948  01FC  3000               	movlw	0
  8949  01FD  3DB7               	addwfc	___flmul@prod+3,f
  8950  01FE  1C37               	btfss	___flmul@prod+3,0
  8951  01FF  2A1C               	goto	i1l2693
  8952  0200  0834               	movf	___flmul@prod,w
  8953  0201  00A8               	movwf	??___flmul
  8954  0202  0835               	movf	___flmul@prod+1,w
  8955  0203  00A9               	movwf	??___flmul+1
  8956  0204  0836               	movf	___flmul@prod+2,w
  8957  0205  00AA               	movwf	??___flmul+2
  8958  0206  0837               	movf	___flmul@prod+3,w
  8959  0207  00AB               	movwf	??___flmul+3
  8960  0208  3001               	movlw	1
  8961  0209  00AC               	movwf	??___flmul+4
  8962  020A                     u329_25:	
  8963  020A  37AB               	asrf	??___flmul+3,f
  8964  020B  0CAA               	rrf	??___flmul+2,f
  8965  020C  0CA9               	rrf	??___flmul+1,f
  8966  020D  0CA8               	rrf	??___flmul,f
  8967  020E  0BAC               	decfsz	??___flmul+4,f
  8968  020F  2A0A               	goto	u329_25
  8969  0210  082B               	movf	??___flmul+3,w
  8970  0211  00B7               	movwf	___flmul@prod+3
  8971  0212  082A               	movf	??___flmul+2,w
  8972  0213  00B6               	movwf	___flmul@prod+2
  8973  0214  0829               	movf	??___flmul+1,w
  8974  0215  00B5               	movwf	___flmul@prod+1
  8975  0216  0828               	movf	??___flmul,w
  8976  0217  00B4               	movwf	___flmul@prod
  8977  0218  3001               	movlw	1
  8978  0219  07B8               	addwf	___flmul@temp,f
  8979  021A  3000               	movlw	0
  8980  021B  3DB9               	addwfc	___flmul@temp+1,f
  8981  021C                     i1l2693:	
  8982  021C  0839               	movf	___flmul@temp+1,w
  8983  021D  3A80               	xorlw	128
  8984  021E  00A8               	movwf	??___flmul
  8985  021F  3080               	movlw	128
  8986  0220  0228               	subwf	??___flmul,w
  8987  0221  1D03               	skipz
  8988  0222  2A25               	goto	u330_25
  8989  0223  30FF               	movlw	255
  8990  0224  0238               	subwf	___flmul@temp,w
  8991  0225                     u330_25:	
  8992  0225  1C03               	skipc
  8993  0226  2A31               	goto	i1l2697
  8994  0227  307F               	movlw	127
  8995  0228  0020               	movlb	0	; select bank0
  8996  0229  00B7               	movwf	___flmul@prod+3
  8997  022A  3080               	movlw	128
  8998  022B  00B6               	movwf	___flmul@prod+2
  8999  022C  3000               	movlw	0
  9000  022D  00B5               	movwf	___flmul@prod+1
  9001  022E  3000               	movlw	0
  9002  022F  00B4               	movwf	___flmul@prod
  9003  0230  2A5B               	goto	i1l901
  9004  0231                     i1l2697:	
  9005  0231  0020               	movlb	0	; select bank0
  9006  0232  0839               	movf	___flmul@temp+1,w
  9007  0233  3A80               	xorlw	128
  9008  0234  00A8               	movwf	??___flmul
  9009  0235  3080               	movlw	128
  9010  0236  0228               	subwf	??___flmul,w
  9011  0237  1D03               	skipz
  9012  0238  2A3B               	goto	u331_25
  9013  0239  3001               	movlw	1
  9014  023A  0238               	subwf	___flmul@temp,w
  9015  023B                     u331_25:	
  9016  023B  1803               	skipnc
  9017  023C  2A48               	goto	i1l2703
  9018  023D  3000               	movlw	0
  9019  023E  0020               	movlb	0	; select bank0
  9020  023F  00B7               	movwf	___flmul@prod+3
  9021  0240  3000               	movlw	0
  9022  0241  00B6               	movwf	___flmul@prod+2
  9023  0242  3000               	movlw	0
  9024  0243  00B5               	movwf	___flmul@prod+1
  9025  0244  3000               	movlw	0
  9026  0245  00B4               	movwf	___flmul@prod
  9027  0246  01AD               	clrf	___flmul@sign
  9028  0247  2A5B               	goto	i1l901
  9029  0248                     i1l2703:	
  9030  0248  0020               	movlb	0	; select bank0
  9031  0249  0838               	movf	___flmul@temp,w
  9032  024A  00A8               	movwf	??___flmul
  9033  024B  0828               	movf	??___flmul,w
  9034  024C  00B3               	movwf	___flmul@bexp
  9035  024D  30FF               	movlw	255
  9036  024E  05B4               	andwf	___flmul@prod,f
  9037  024F  30FF               	movlw	255
  9038  0250  05B5               	andwf	___flmul@prod+1,f
  9039  0251  307F               	movlw	127
  9040  0252  05B6               	andwf	___flmul@prod+2,f
  9041  0253  3000               	movlw	0
  9042  0254  05B7               	andwf	___flmul@prod+3,f
  9043  0255  1833               	btfsc	___flmul@bexp,0
  9044  0256  17B6               	bsf	___flmul@prod+2,7
  9045  0257  3633               	lsrf	___flmul@bexp,w
  9046  0258  00A8               	movwf	??___flmul
  9047  0259  0828               	movf	??___flmul,w
  9048  025A  00B7               	movwf	___flmul@prod+3
  9049  025B                     i1l901:	
  9050  025B  082D               	movf	___flmul@sign,w
  9051  025C  00A8               	movwf	??___flmul
  9052  025D  0828               	movf	??___flmul,w
  9053  025E  04B7               	iorwf	___flmul@prod+3,f
  9054  025F  0837               	movf	___flmul@prod+3,w
  9055  0260  00A3               	movwf	?___flmul+3
  9056  0261  0836               	movf	___flmul@prod+2,w
  9057  0262  00A2               	movwf	?___flmul+2
  9058  0263  0835               	movf	___flmul@prod+1,w
  9059  0264  00A1               	movwf	?___flmul+1
  9060  0265  0834               	movf	___flmul@prod,w
  9061  0266  00A0               	movwf	?___flmul
  9062  0267  0008               	return
  9063  0268                     __end_of___flmul:	
  9064                           
  9065                           	psect	text41
  9066  0B56                     __ptext41:	
  9067 ;; *************** function __Umul8_16 *****************
  9068 ;; Defined at:
  9069 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul8_16.c"
  9070 ;; Parameters:    Size  Location     Type
  9071 ;;  multiplier      1    wreg     unsigned char 
  9072 ;;  multiplicand    1    0[COMMON] unsigned char 
  9073 ;; Auto vars:     Size  Location     Type
  9074 ;;  multiplier      1    8[COMMON] unsigned char 
  9075 ;;  word_mpld       2    6[COMMON] unsigned int 
  9076 ;;  product         2    4[COMMON] unsigned int 
  9077 ;; Return value:  Size  Location     Type
  9078 ;;                  2    0[COMMON] unsigned int 
  9079 ;; Registers used:
  9080 ;;		wreg, status,2, status,0
  9081 ;; Tracked objects:
  9082 ;;		On entry : 0/0
  9083 ;;		On exit  : 0/0
  9084 ;;		Unchanged: 0/0
  9085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9086 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9087 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9088 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9089 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9090 ;;Total ram usage:        9 bytes
  9091 ;; Hardware stack levels used:    1
  9092 ;; This function calls:
  9093 ;;		Nothing
  9094 ;; This function is called by:
  9095 ;;		___flmul
  9096 ;; This function uses a non-reentrant model
  9097 ;;
  9098                           
  9099                           
  9100                           ;psect for function __Umul8_16
  9101  0B56                     __Umul8_16:	
  9102                           
  9103                           ;incstack = 0
  9104                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  9105                           ;__Umul8_16@multiplier stored from wreg
  9106  0B56  00F8               	movwf	__Umul8_16@multiplier
  9107  0B57  01F4               	clrf	__Umul8_16@product
  9108  0B58  01F5               	clrf	__Umul8_16@product+1
  9109  0B59  0870               	movf	__Umul8_16@multiplicand,w
  9110  0B5A  00F2               	movwf	??__Umul8_16
  9111  0B5B  01F3               	clrf	??__Umul8_16+1
  9112  0B5C  0872               	movf	??__Umul8_16,w
  9113  0B5D  00F6               	movwf	__Umul8_16@word_mpld
  9114  0B5E  0873               	movf	??__Umul8_16+1,w
  9115  0B5F  00F7               	movwf	__Umul8_16@word_mpld+1
  9116  0B60                     i1l2219:	
  9117  0B60  1C78               	btfss	__Umul8_16@multiplier,0
  9118  0B61  2B66               	goto	i1l995
  9119  0B62  0876               	movf	__Umul8_16@word_mpld,w
  9120  0B63  07F4               	addwf	__Umul8_16@product,f
  9121  0B64  0877               	movf	__Umul8_16@word_mpld+1,w
  9122  0B65  3DF5               	addwfc	__Umul8_16@product+1,f
  9123  0B66                     i1l995:	
  9124  0B66  3001               	movlw	1
  9125  0B67                     u222_25:	
  9126  0B67  35F6               	lslf	__Umul8_16@word_mpld,f
  9127  0B68  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  9128  0B69  0B89               	decfsz	9,f
  9129  0B6A  2B67               	goto	u222_25
  9130  0B6B  1003               	clrc
  9131  0B6C  0CF8               	rrf	__Umul8_16@multiplier,f
  9132  0B6D  0878               	movf	__Umul8_16@multiplier,w
  9133  0B6E  1D03               	btfss	3,2
  9134  0B6F  2B60               	goto	i1l2219
  9135  0B70  0875               	movf	__Umul8_16@product+1,w
  9136  0B71  00F1               	movwf	?__Umul8_16+1
  9137  0B72  0874               	movf	__Umul8_16@product,w
  9138  0B73  00F0               	movwf	?__Umul8_16
  9139  0B74  0008               	return
  9140  0B75                     __end_of__Umul8_16:	
  9141                           
  9142                           	psect	text42
  9143  0268                     __ptext42:	
  9144 ;; *************** function ___fladd *****************
  9145 ;; Defined at:
  9146 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  9147 ;; Parameters:    Size  Location     Type
  9148 ;;  b               4    0[BANK0 ] unsigned int 
  9149 ;;  a               4    4[BANK0 ] unsigned int 
  9150 ;; Auto vars:     Size  Location     Type
  9151 ;;  grs             1   19[BANK0 ] unsigned char 
  9152 ;;  bexp            1   18[BANK0 ] unsigned char 
  9153 ;;  aexp            1   17[BANK0 ] unsigned char 
  9154 ;;  signs           1   16[BANK0 ] unsigned char 
  9155 ;; Return value:  Size  Location     Type
  9156 ;;                  4    0[BANK0 ] unsigned char 
  9157 ;; Registers used:
  9158 ;;		wreg, status,2, status,0
  9159 ;; Tracked objects:
  9160 ;;		On entry : 0/0
  9161 ;;		On exit  : 0/0
  9162 ;;		Unchanged: 0/0
  9163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9164 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9165 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9166 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9167 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9168 ;;Total ram usage:       20 bytes
  9169 ;; Hardware stack levels used:    1
  9170 ;; This function calls:
  9171 ;;		Nothing
  9172 ;; This function is called by:
  9173 ;;		_speedCalc
  9174 ;; This function uses a non-reentrant model
  9175 ;;
  9176                           
  9177                           
  9178                           ;psect for function ___fladd
  9179  0268                     ___fladd:	
  9180                           
  9181                           ;incstack = 0
  9182                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  9183  0268  0020               	movlb	0	; select bank0
  9184  0269  0823               	movf	___fladd@b+3,w
  9185  026A  3980               	andlw	128
  9186  026B  00A8               	movwf	??___fladd
  9187  026C  0828               	movf	??___fladd,w
  9188  026D  00B0               	movwf	___fladd@signs
  9189  026E  3523               	lslf	___fladd@b+3,w
  9190  026F  00A8               	movwf	??___fladd
  9191  0270  0828               	movf	??___fladd,w
  9192  0271  00B2               	movwf	___fladd@bexp
  9193  0272  1BA2               	btfsc	___fladd@b+2,7
  9194  0273  1432               	bsf	___fladd@bexp,0
  9195  0274  0832               	movf	___fladd@bexp,w
  9196  0275  1903               	btfsc	3,2
  9197  0276  2A85               	goto	i1l2399
  9198  0277  0A32               	incf	___fladd@bexp,w
  9199  0278  1D03               	btfss	3,2
  9200  0279  2A82               	goto	i1l2395
  9201  027A  3000               	movlw	0
  9202  027B  00A3               	movwf	___fladd@b+3
  9203  027C  3000               	movlw	0
  9204  027D  00A2               	movwf	___fladd@b+2
  9205  027E  3000               	movlw	0
  9206  027F  00A1               	movwf	___fladd@b+1
  9207  0280  3000               	movlw	0
  9208  0281  00A0               	movwf	___fladd@b
  9209  0282                     i1l2395:	
  9210  0282  17A2               	bsf	___fladd@b+2,7
  9211  0283  01A3               	clrf	___fladd@b+3
  9212  0284  2A8D               	goto	i1l2401
  9213  0285                     i1l2399:	
  9214  0285  3000               	movlw	0
  9215  0286  00A3               	movwf	___fladd@b+3
  9216  0287  3000               	movlw	0
  9217  0288  00A2               	movwf	___fladd@b+2
  9218  0289  3000               	movlw	0
  9219  028A  00A1               	movwf	___fladd@b+1
  9220  028B  3000               	movlw	0
  9221  028C  00A0               	movwf	___fladd@b
  9222  028D                     i1l2401:	
  9223  028D  0827               	movf	___fladd@a+3,w
  9224  028E  3980               	andlw	128
  9225  028F  00A8               	movwf	??___fladd
  9226  0290  0828               	movf	??___fladd,w
  9227  0291  00B1               	movwf	___fladd@aexp
  9228  0292  0831               	movf	___fladd@aexp,w
  9229  0293  0630               	xorwf	___fladd@signs,w
  9230  0294  1D03               	btfss	3,2
  9231  0295  1730               	bsf	___fladd@signs,6
  9232  0296  3527               	lslf	___fladd@a+3,w
  9233  0297  00A8               	movwf	??___fladd
  9234  0298  0828               	movf	??___fladd,w
  9235  0299  00B1               	movwf	___fladd@aexp
  9236  029A  1BA6               	btfsc	___fladd@a+2,7
  9237  029B  1431               	bsf	___fladd@aexp,0
  9238  029C  0831               	movf	___fladd@aexp,w
  9239  029D  1903               	btfsc	3,2
  9240  029E  2AAD               	goto	i1l2423
  9241  029F  0A31               	incf	___fladd@aexp,w
  9242  02A0  1D03               	btfss	3,2
  9243  02A1  2AAA               	goto	i1l2419
  9244  02A2  3000               	movlw	0
  9245  02A3  00A7               	movwf	___fladd@a+3
  9246  02A4  3000               	movlw	0
  9247  02A5  00A6               	movwf	___fladd@a+2
  9248  02A6  3000               	movlw	0
  9249  02A7  00A5               	movwf	___fladd@a+1
  9250  02A8  3000               	movlw	0
  9251  02A9  00A4               	movwf	___fladd@a
  9252  02AA                     i1l2419:	
  9253  02AA  17A6               	bsf	___fladd@a+2,7
  9254  02AB  01A7               	clrf	___fladd@a+3
  9255  02AC  2AB5               	goto	i1l793
  9256  02AD                     i1l2423:	
  9257  02AD  3000               	movlw	0
  9258  02AE  00A7               	movwf	___fladd@a+3
  9259  02AF  3000               	movlw	0
  9260  02B0  00A6               	movwf	___fladd@a+2
  9261  02B1  3000               	movlw	0
  9262  02B2  00A5               	movwf	___fladd@a+1
  9263  02B3  3000               	movlw	0
  9264  02B4  00A4               	movwf	___fladd@a
  9265  02B5                     i1l793:	
  9266  02B5  0832               	movf	___fladd@bexp,w
  9267  02B6  0231               	subwf	___fladd@aexp,w
  9268  02B7  1803               	skipnc
  9269  02B8  2AFB               	goto	i1l2459
  9270  02B9  1F30               	btfss	___fladd@signs,6
  9271  02BA  2ABF               	goto	i1l2429
  9272  02BB  3080               	movlw	128
  9273  02BC  00A8               	movwf	??___fladd
  9274  02BD  0828               	movf	??___fladd,w
  9275  02BE  06B0               	xorwf	___fladd@signs,f
  9276  02BF                     i1l2429:	
  9277  02BF  0832               	movf	___fladd@bexp,w
  9278  02C0  00A8               	movwf	??___fladd
  9279  02C1  0828               	movf	??___fladd,w
  9280  02C2  00B3               	movwf	___fladd@grs
  9281  02C3  0831               	movf	___fladd@aexp,w
  9282  02C4  00A8               	movwf	??___fladd
  9283  02C5  0828               	movf	??___fladd,w
  9284  02C6  00B2               	movwf	___fladd@bexp
  9285  02C7  0833               	movf	___fladd@grs,w
  9286  02C8  00A8               	movwf	??___fladd
  9287  02C9  0828               	movf	??___fladd,w
  9288  02CA  00B1               	movwf	___fladd@aexp
  9289  02CB  0820               	movf	___fladd@b,w
  9290  02CC  00A8               	movwf	??___fladd
  9291  02CD  0828               	movf	??___fladd,w
  9292  02CE  00B3               	movwf	___fladd@grs
  9293  02CF  0824               	movf	___fladd@a,w
  9294  02D0  00A8               	movwf	??___fladd
  9295  02D1  0828               	movf	??___fladd,w
  9296  02D2  00A0               	movwf	___fladd@b
  9297  02D3  0833               	movf	___fladd@grs,w
  9298  02D4  00A8               	movwf	??___fladd
  9299  02D5  0828               	movf	??___fladd,w
  9300  02D6  00A4               	movwf	___fladd@a
  9301  02D7  0821               	movf	___fladd@b+1,w
  9302  02D8  00A8               	movwf	??___fladd
  9303  02D9  0828               	movf	??___fladd,w
  9304  02DA  00B3               	movwf	___fladd@grs
  9305  02DB  0825               	movf	___fladd@a+1,w
  9306  02DC  00A8               	movwf	??___fladd
  9307  02DD  0828               	movf	??___fladd,w
  9308  02DE  00A1               	movwf	___fladd@b+1
  9309  02DF  0833               	movf	___fladd@grs,w
  9310  02E0  00A8               	movwf	??___fladd
  9311  02E1  0828               	movf	??___fladd,w
  9312  02E2  00A5               	movwf	___fladd@a+1
  9313  02E3  0822               	movf	___fladd@b+2,w
  9314  02E4  00A8               	movwf	??___fladd
  9315  02E5  0828               	movf	??___fladd,w
  9316  02E6  00B3               	movwf	___fladd@grs
  9317  02E7  0826               	movf	___fladd@a+2,w
  9318  02E8  00A8               	movwf	??___fladd
  9319  02E9  0828               	movf	??___fladd,w
  9320  02EA  00A2               	movwf	___fladd@b+2
  9321  02EB  0833               	movf	___fladd@grs,w
  9322  02EC  00A8               	movwf	??___fladd
  9323  02ED  0828               	movf	??___fladd,w
  9324  02EE  00A6               	movwf	___fladd@a+2
  9325  02EF  0823               	movf	___fladd@b+3,w
  9326  02F0  00A8               	movwf	??___fladd
  9327  02F1  0828               	movf	??___fladd,w
  9328  02F2  00B3               	movwf	___fladd@grs
  9329  02F3  0827               	movf	___fladd@a+3,w
  9330  02F4  00A8               	movwf	??___fladd
  9331  02F5  0828               	movf	??___fladd,w
  9332  02F6  00A3               	movwf	___fladd@b+3
  9333  02F7  0833               	movf	___fladd@grs,w
  9334  02F8  00A8               	movwf	??___fladd
  9335  02F9  0828               	movf	??___fladd,w
  9336  02FA  00A7               	movwf	___fladd@a+3
  9337  02FB                     i1l2459:	
  9338  02FB  01B3               	clrf	___fladd@grs
  9339  02FC  0831               	movf	___fladd@aexp,w
  9340  02FD  00A8               	movwf	??___fladd
  9341  02FE  01A9               	clrf	??___fladd+1
  9342  02FF  0829               	movf	??___fladd+1,w
  9343  0300  00AB               	movwf	??___fladd+3
  9344  0301  0832               	movf	___fladd@bexp,w
  9345  0302  0228               	subwf	??___fladd,w
  9346  0303  00AA               	movwf	??___fladd+2
  9347  0304  1C03               	skipc
  9348  0305  03AB               	decf	??___fladd+3,f
  9349  0306  082B               	movf	??___fladd+3,w
  9350  0307  3A80               	xorlw	128
  9351  0308  00AC               	movwf	??___fladd+4
  9352  0309  3080               	movlw	128
  9353  030A  022C               	subwf	??___fladd+4,w
  9354  030B  1D03               	skipz
  9355  030C  2B0F               	goto	u273_25
  9356  030D  301A               	movlw	26
  9357  030E  022A               	subwf	??___fladd+2,w
  9358  030F                     u273_25:	
  9359  030F  1C03               	skipc
  9360  0310  2B43               	goto	i1l2477
  9361  0311  0020               	movlb	0	; select bank0
  9362  0312  0823               	movf	___fladd@b+3,w
  9363  0313  0422               	iorwf	___fladd@b+2,w
  9364  0314  0421               	iorwf	___fladd@b+1,w
  9365  0315  0420               	iorwf	___fladd@b,w
  9366  0316  1903               	btfsc	3,2
  9367  0317  2B1A               	goto	u274_20
  9368  0318  3001               	movlw	1
  9369  0319  2B1B               	goto	u275_20
  9370  031A                     u274_20:	
  9371  031A  3000               	movlw	0
  9372  031B                     u275_20:	
  9373  031B  00A8               	movwf	??___fladd
  9374  031C  0828               	movf	??___fladd,w
  9375  031D  00B3               	movwf	___fladd@grs
  9376  031E  3000               	movlw	0
  9377  031F  00A3               	movwf	___fladd@b+3
  9378  0320  3000               	movlw	0
  9379  0321  00A2               	movwf	___fladd@b+2
  9380  0322  3000               	movlw	0
  9381  0323  00A1               	movwf	___fladd@b+1
  9382  0324  3000               	movlw	0
  9383  0325  00A0               	movwf	___fladd@b
  9384  0326  0831               	movf	___fladd@aexp,w
  9385  0327  00A8               	movwf	??___fladd
  9386  0328  0828               	movf	??___fladd,w
  9387  0329  00B2               	movwf	___fladd@bexp
  9388  032A  2B48               	goto	i1l797
  9389  032B                     i1l799:	
  9390  032B  1C33               	btfss	___fladd@grs,0
  9391  032C  2B33               	goto	i1l2467
  9392  032D  3633               	lsrf	___fladd@grs,w
  9393  032E  3801               	iorlw	1
  9394  032F  00A8               	movwf	??___fladd
  9395  0330  0828               	movf	??___fladd,w
  9396  0331  00B3               	movwf	___fladd@grs
  9397  0332  2B35               	goto	i1l2469
  9398  0333                     i1l2467:	
  9399  0333  1003               	clrc
  9400  0334  0CB3               	rrf	___fladd@grs,f
  9401  0335                     i1l2469:	
  9402  0335  1820               	btfsc	___fladd@b,0
  9403  0336  17B3               	bsf	___fladd@grs,7
  9404  0337  3001               	movlw	1
  9405  0338  00A8               	movwf	??___fladd
  9406  0339                     u278_25:	
  9407  0339  37A3               	asrf	___fladd@b+3,f
  9408  033A  0CA2               	rrf	___fladd@b+2,f
  9409  033B  0CA1               	rrf	___fladd@b+1,f
  9410  033C  0CA0               	rrf	___fladd@b,f
  9411  033D  0BA8               	decfsz	??___fladd& (0+127),f
  9412  033E  2B39               	goto	u278_25
  9413  033F  3001               	movlw	1
  9414  0340  00A8               	movwf	??___fladd
  9415  0341  0828               	movf	??___fladd,w
  9416  0342  07B2               	addwf	___fladd@bexp,f
  9417  0343                     i1l2477:	
  9418  0343  0020               	movlb	0	; select bank0
  9419  0344  0831               	movf	___fladd@aexp,w
  9420  0345  0232               	subwf	___fladd@bexp,w
  9421  0346  1C03               	skipc
  9422  0347  2B2B               	goto	i1l799
  9423  0348                     i1l797:	
  9424  0348  1B30               	btfsc	___fladd@signs,6
  9425  0349  2B79               	goto	i1l2503
  9426  034A  0832               	movf	___fladd@bexp,w
  9427  034B  1D03               	btfss	3,2
  9428  034C  2B56               	goto	i1l2485
  9429  034D  3000               	movlw	0
  9430  034E  00A3               	movwf	?___fladd+3
  9431  034F  3000               	movlw	0
  9432  0350  00A2               	movwf	?___fladd+2
  9433  0351  3000               	movlw	0
  9434  0352  00A1               	movwf	?___fladd+1
  9435  0353  3000               	movlw	0
  9436  0354  00A0               	movwf	?___fladd
  9437  0355  0008               	return
  9438  0356                     i1l2485:	
  9439  0356  0824               	movf	___fladd@a,w
  9440  0357  07A0               	addwf	___fladd@b,f
  9441  0358  0825               	movf	___fladd@a+1,w
  9442  0359  3DA1               	addwfc	___fladd@b+1,f
  9443  035A  0826               	movf	___fladd@a+2,w
  9444  035B  3DA2               	addwfc	___fladd@b+2,f
  9445  035C  0827               	movf	___fladd@a+3,w
  9446  035D  3DA3               	addwfc	___fladd@b+3,f
  9447  035E  1C23               	btfss	___fladd@b+3,0
  9448  035F  2BF3               	goto	i1l2537
  9449  0360  1C33               	btfss	___fladd@grs,0
  9450  0361  2B68               	goto	i1l2493
  9451  0362  3633               	lsrf	___fladd@grs,w
  9452  0363  3801               	iorlw	1
  9453  0364  00A8               	movwf	??___fladd
  9454  0365  0828               	movf	??___fladd,w
  9455  0366  00B3               	movwf	___fladd@grs
  9456  0367  2B6A               	goto	i1l2495
  9457  0368                     i1l2493:	
  9458  0368  1003               	clrc
  9459  0369  0CB3               	rrf	___fladd@grs,f
  9460  036A                     i1l2495:	
  9461  036A  1820               	btfsc	___fladd@b,0
  9462  036B  17B3               	bsf	___fladd@grs,7
  9463  036C  3001               	movlw	1
  9464  036D  00A8               	movwf	??___fladd
  9465  036E                     u285_25:	
  9466  036E  37A3               	asrf	___fladd@b+3,f
  9467  036F  0CA2               	rrf	___fladd@b+2,f
  9468  0370  0CA1               	rrf	___fladd@b+1,f
  9469  0371  0CA0               	rrf	___fladd@b,f
  9470  0372  0BA8               	decfsz	??___fladd& (0+127),f
  9471  0373  2B6E               	goto	u285_25
  9472  0374  3001               	movlw	1
  9473  0375  00A8               	movwf	??___fladd
  9474  0376  0828               	movf	??___fladd,w
  9475  0377  07B2               	addwf	___fladd@bexp,f
  9476  0378  2BF3               	goto	i1l2537
  9477  0379                     i1l2503:	
  9478  0379  0823               	movf	___fladd@b+3,w
  9479  037A  3A80               	xorlw	128
  9480  037B  00A8               	movwf	??___fladd
  9481  037C  0827               	movf	___fladd@a+3,w
  9482  037D  3A80               	xorlw	128
  9483  037E  0228               	subwf	??___fladd,w
  9484  037F  1D03               	skipz
  9485  0380  2B8B               	goto	u286_23
  9486  0381  0826               	movf	___fladd@a+2,w
  9487  0382  0222               	subwf	___fladd@b+2,w
  9488  0383  1D03               	skipz
  9489  0384  2B8B               	goto	u286_23
  9490  0385  0825               	movf	___fladd@a+1,w
  9491  0386  0221               	subwf	___fladd@b+1,w
  9492  0387  1D03               	skipz
  9493  0388  2B8B               	goto	u286_23
  9494  0389  0824               	movf	___fladd@a,w
  9495  038A  0220               	subwf	___fladd@b,w
  9496  038B                     u286_23:	
  9497  038B  1803               	skipnc
  9498  038C  2BC3               	goto	i1l2513
  9499  038D  30FF               	movlw	255
  9500  038E  00A8               	movwf	??___fladd
  9501  038F  30FF               	movlw	255
  9502  0390  00A9               	movwf	??___fladd+1
  9503  0391  30FF               	movlw	255
  9504  0392  00AA               	movwf	??___fladd+2
  9505  0393  30FF               	movlw	255
  9506  0394  00AB               	movwf	??___fladd+3
  9507  0395  0820               	movf	___fladd@b,w
  9508  0396  0224               	subwf	___fladd@a,w
  9509  0397  00AC               	movwf	??___fladd+4
  9510  0398  0821               	movf	___fladd@b+1,w
  9511  0399  3B25               	subwfb	___fladd@a+1,w
  9512  039A  00AD               	movwf	??___fladd+5
  9513  039B  0822               	movf	___fladd@b+2,w
  9514  039C  3B26               	subwfb	___fladd@a+2,w
  9515  039D  00AE               	movwf	??___fladd+6
  9516  039E  0823               	movf	___fladd@b+3,w
  9517  039F  3B27               	subwfb	___fladd@a+3,w
  9518  03A0  00AF               	movwf	??___fladd+7
  9519  03A1  082C               	movf	??___fladd+4,w
  9520  03A2  07A8               	addwf	??___fladd,f
  9521  03A3  082D               	movf	??___fladd+5,w
  9522  03A4  3DA9               	addwfc	??___fladd+1,f
  9523  03A5  082E               	movf	??___fladd+6,w
  9524  03A6  3DAA               	addwfc	??___fladd+2,f
  9525  03A7  082F               	movf	??___fladd+7,w
  9526  03A8  3DAB               	addwfc	??___fladd+3,f
  9527  03A9  082B               	movf	??___fladd+3,w
  9528  03AA  00A3               	movwf	___fladd@b+3
  9529  03AB  082A               	movf	??___fladd+2,w
  9530  03AC  00A2               	movwf	___fladd@b+2
  9531  03AD  0829               	movf	??___fladd+1,w
  9532  03AE  00A1               	movwf	___fladd@b+1
  9533  03AF  0828               	movf	??___fladd,w
  9534  03B0  00A0               	movwf	___fladd@b
  9535  03B1  3080               	movlw	128
  9536  03B2  00A8               	movwf	??___fladd
  9537  03B3  0828               	movf	??___fladd,w
  9538  03B4  06B0               	xorwf	___fladd@signs,f
  9539  03B5  09B3               	comf	___fladd@grs,f
  9540  03B6  0AB3               	incf	___fladd@grs,f
  9541  03B7  0833               	movf	___fladd@grs,w
  9542  03B8  1D03               	btfss	3,2
  9543  03B9  2BCB               	goto	i1l814
  9544  03BA  3001               	movlw	1
  9545  03BB  07A0               	addwf	___fladd@b,f
  9546  03BC  3000               	movlw	0
  9547  03BD  3DA1               	addwfc	___fladd@b+1,f
  9548  03BE  3000               	movlw	0
  9549  03BF  3DA2               	addwfc	___fladd@b+2,f
  9550  03C0  3000               	movlw	0
  9551  03C1  3DA3               	addwfc	___fladd@b+3,f
  9552  03C2  2BCB               	goto	i1l814
  9553  03C3                     i1l2513:	
  9554  03C3  0824               	movf	___fladd@a,w
  9555  03C4  02A0               	subwf	___fladd@b,f
  9556  03C5  0825               	movf	___fladd@a+1,w
  9557  03C6  3BA1               	subwfb	___fladd@b+1,f
  9558  03C7  0826               	movf	___fladd@a+2,w
  9559  03C8  3BA2               	subwfb	___fladd@b+2,f
  9560  03C9  0827               	movf	___fladd@a+3,w
  9561  03CA  3BA3               	subwfb	___fladd@b+3,f
  9562  03CB                     i1l814:	
  9563  03CB  0823               	movf	___fladd@b+3,w
  9564  03CC  0422               	iorwf	___fladd@b+2,w
  9565  03CD  0421               	iorwf	___fladd@b+1,w
  9566  03CE  0420               	iorwf	___fladd@b,w
  9567  03CF  1D03               	skipz
  9568  03D0  2BF1               	goto	i1l2535
  9569  03D1  0833               	movf	___fladd@grs,w
  9570  03D2  1D03               	btfss	3,2
  9571  03D3  2BF1               	goto	i1l2535
  9572  03D4  3000               	movlw	0
  9573  03D5  00A3               	movwf	?___fladd+3
  9574  03D6  3000               	movlw	0
  9575  03D7  00A2               	movwf	?___fladd+2
  9576  03D8  3000               	movlw	0
  9577  03D9  00A1               	movwf	?___fladd+1
  9578  03DA  3000               	movlw	0
  9579  03DB  00A0               	movwf	?___fladd
  9580  03DC  0008               	return
  9581  03DD                     i1l2521:	
  9582  03DD  3001               	movlw	1
  9583  03DE                     u290_25:	
  9584  03DE  35A0               	lslf	___fladd@b,f
  9585  03DF  0DA1               	rlf	___fladd@b+1,f
  9586  03E0  0DA2               	rlf	___fladd@b+2,f
  9587  03E1  0DA3               	rlf	___fladd@b+3,f
  9588  03E2  0B89               	decfsz	9,f
  9589  03E3  2BDE               	goto	u290_25
  9590  03E4  1BB3               	btfsc	___fladd@grs,7
  9591  03E5  1420               	bsf	___fladd@b,0
  9592  03E6  1C33               	btfss	___fladd@grs,0
  9593  03E7  2BEA               	goto	i1l2529
  9594  03E8  1403               	setc
  9595  03E9  2BEB               	goto	L2
  9596  03EA                     i1l2529:	
  9597  03EA  1003               	clrc
  9598  03EB                     L2:	
  9599  03EB  0DB3               	rlf	___fladd@grs,f
  9600  03EC  0832               	movf	___fladd@bexp,w
  9601  03ED  1903               	btfsc	3,2
  9602  03EE  2BF1               	goto	i1l2535
  9603  03EF  3001               	movlw	1
  9604  03F0  02B2               	subwf	___fladd@bexp,f
  9605  03F1                     i1l2535:	
  9606  03F1  1FA2               	btfss	___fladd@b+2,7
  9607  03F2  2BDD               	goto	i1l2521
  9608  03F3                     i1l2537:	
  9609  03F3  01B1               	clrf	___fladd@aexp
  9610  03F4  1FB3               	btfss	___fladd@grs,7
  9611  03F5  2BFE               	goto	i1l2547
  9612  03F6  0833               	movf	___fladd@grs,w
  9613  03F7  397F               	andlw	127
  9614  03F8  1903               	btfsc	3,2
  9615  03F9  1820               	btfsc	___fladd@b,0
  9616  03FA  2BFC               	goto	i1l2543
  9617  03FB  2BFE               	goto	i1l2547
  9618  03FC                     i1l2543:	
  9619  03FC  01B1               	clrf	___fladd@aexp
  9620  03FD  0AB1               	incf	___fladd@aexp,f
  9621  03FE                     i1l2547:	
  9622  03FE  0831               	movf	___fladd@aexp,w
  9623  03FF  1903               	btfsc	3,2
  9624  0400  2C2A               	goto	i1l827
  9625  0401  3001               	movlw	1
  9626  0402  07A0               	addwf	___fladd@b,f
  9627  0403  3000               	movlw	0
  9628  0404  3DA1               	addwfc	___fladd@b+1,f
  9629  0405  3000               	movlw	0
  9630  0406  3DA2               	addwfc	___fladd@b+2,f
  9631  0407  3000               	movlw	0
  9632  0408  3DA3               	addwfc	___fladd@b+3,f
  9633  0409  1C23               	btfss	___fladd@b+3,0
  9634  040A  2C2A               	goto	i1l827
  9635  040B  0820               	movf	___fladd@b,w
  9636  040C  00A8               	movwf	??___fladd
  9637  040D  0821               	movf	___fladd@b+1,w
  9638  040E  00A9               	movwf	??___fladd+1
  9639  040F  0822               	movf	___fladd@b+2,w
  9640  0410  00AA               	movwf	??___fladd+2
  9641  0411  0823               	movf	___fladd@b+3,w
  9642  0412  00AB               	movwf	??___fladd+3
  9643  0413  3001               	movlw	1
  9644  0414  00AC               	movwf	??___fladd+4
  9645  0415                     u300_25:	
  9646  0415  37AB               	asrf	??___fladd+3,f
  9647  0416  0CAA               	rrf	??___fladd+2,f
  9648  0417  0CA9               	rrf	??___fladd+1,f
  9649  0418  0CA8               	rrf	??___fladd,f
  9650  0419  0BAC               	decfsz	??___fladd+4,f
  9651  041A  2C15               	goto	u300_25
  9652  041B  082B               	movf	??___fladd+3,w
  9653  041C  00A3               	movwf	___fladd@b+3
  9654  041D  082A               	movf	??___fladd+2,w
  9655  041E  00A2               	movwf	___fladd@b+2
  9656  041F  0829               	movf	??___fladd+1,w
  9657  0420  00A1               	movwf	___fladd@b+1
  9658  0421  0828               	movf	??___fladd,w
  9659  0422  00A0               	movwf	___fladd@b
  9660  0423  0A32               	incf	___fladd@bexp,w
  9661  0424  1903               	btfsc	3,2
  9662  0425  2C2A               	goto	i1l827
  9663  0426  3001               	movlw	1
  9664  0427  00A8               	movwf	??___fladd
  9665  0428  0828               	movf	??___fladd,w
  9666  0429  07B2               	addwf	___fladd@bexp,f
  9667  042A                     i1l827:	
  9668  042A  0A32               	incf	___fladd@bexp,w
  9669  042B  1D03               	btfss	3,2
  9670  042C  0832               	movf	___fladd@bexp,w
  9671  042D  1D03               	btfss	3,2
  9672  042E  2C3A               	goto	i1l2565
  9673  042F  3000               	movlw	0
  9674  0430  00A3               	movwf	___fladd@b+3
  9675  0431  3000               	movlw	0
  9676  0432  00A2               	movwf	___fladd@b+2
  9677  0433  3000               	movlw	0
  9678  0434  00A1               	movwf	___fladd@b+1
  9679  0435  3000               	movlw	0
  9680  0436  00A0               	movwf	___fladd@b
  9681  0437  0832               	movf	___fladd@bexp,w
  9682  0438  1903               	btfsc	3,2
  9683  0439  01B0               	clrf	___fladd@signs
  9684  043A                     i1l2565:	
  9685  043A  1C32               	btfss	___fladd@bexp,0
  9686  043B  2C3E               	goto	i1l2569
  9687  043C  17A2               	bsf	___fladd@b+2,7
  9688  043D  2C42               	goto	i1l835
  9689  043E                     i1l2569:	
  9690  043E  307F               	movlw	127
  9691  043F  00A8               	movwf	??___fladd
  9692  0440  0828               	movf	??___fladd,w
  9693  0441  05A2               	andwf	___fladd@b+2,f
  9694  0442                     i1l835:	
  9695  0442  3632               	lsrf	___fladd@bexp,w
  9696  0443  00A8               	movwf	??___fladd
  9697  0444  0828               	movf	??___fladd,w
  9698  0445  00A3               	movwf	___fladd@b+3
  9699  0446  1FB0               	btfss	___fladd@signs,7
  9700  0447  0008               	return
  9701  0448  17A3               	bsf	___fladd@b+3,7
  9702  0449  0008               	return
  9703  044A                     __end_of___fladd:	
  9704                           
  9705                           	psect	text43
  9706  0CC6                     __ptext43:	
  9707 ;; *************** function ___awdiv *****************
  9708 ;; Defined at:
  9709 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  9710 ;; Parameters:    Size  Location     Type
  9711 ;;  divisor         2    0[COMMON] int 
  9712 ;;  dividend        2    2[COMMON] int 
  9713 ;; Auto vars:     Size  Location     Type
  9714 ;;  quotient        2    7[COMMON] int 
  9715 ;;  sign            1    6[COMMON] unsigned char 
  9716 ;;  counter         1    5[COMMON] unsigned char 
  9717 ;; Return value:  Size  Location     Type
  9718 ;;                  2    0[COMMON] int 
  9719 ;; Registers used:
  9720 ;;		wreg, status,2, status,0
  9721 ;; Tracked objects:
  9722 ;;		On entry : 0/0
  9723 ;;		On exit  : 0/0
  9724 ;;		Unchanged: 0/0
  9725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9726 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9727 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9728 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9729 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9730 ;;Total ram usage:        9 bytes
  9731 ;; Hardware stack levels used:    1
  9732 ;; This function calls:
  9733 ;;		Nothing
  9734 ;; This function is called by:
  9735 ;;		_speedCalc
  9736 ;; This function uses a non-reentrant model
  9737 ;;
  9738                           
  9739                           
  9740                           ;psect for function ___awdiv
  9741  0CC6                     ___awdiv:	
  9742                           
  9743                           ;incstack = 0
  9744                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  9745  0CC6  01F6               	clrf	___awdiv@sign
  9746  0CC7  1FF1               	btfss	___awdiv@divisor+1,7
  9747  0CC8  2CD0               	goto	i1l2309
  9748  0CC9  09F0               	comf	___awdiv@divisor,f
  9749  0CCA  09F1               	comf	___awdiv@divisor+1,f
  9750  0CCB  0AF0               	incf	___awdiv@divisor,f
  9751  0CCC  1903               	skipnz
  9752  0CCD  0AF1               	incf	___awdiv@divisor+1,f
  9753  0CCE  01F6               	clrf	___awdiv@sign
  9754  0CCF  0AF6               	incf	___awdiv@sign,f
  9755  0CD0                     i1l2309:	
  9756  0CD0  1FF3               	btfss	___awdiv@dividend+1,7
  9757  0CD1  2CDB               	goto	i1l2315
  9758  0CD2  09F2               	comf	___awdiv@dividend,f
  9759  0CD3  09F3               	comf	___awdiv@dividend+1,f
  9760  0CD4  0AF2               	incf	___awdiv@dividend,f
  9761  0CD5  1903               	skipnz
  9762  0CD6  0AF3               	incf	___awdiv@dividend+1,f
  9763  0CD7  3001               	movlw	1
  9764  0CD8  00F4               	movwf	??___awdiv
  9765  0CD9  0874               	movf	??___awdiv,w
  9766  0CDA  06F6               	xorwf	___awdiv@sign,f
  9767  0CDB                     i1l2315:	
  9768  0CDB  01F7               	clrf	___awdiv@quotient
  9769  0CDC  01F8               	clrf	___awdiv@quotient+1
  9770  0CDD  0870               	movf	___awdiv@divisor,w
  9771  0CDE  0471               	iorwf	___awdiv@divisor+1,w
  9772  0CDF  1903               	btfsc	3,2
  9773  0CE0  2D0A               	goto	i1l2337
  9774  0CE1  01F5               	clrf	___awdiv@counter
  9775  0CE2  0AF5               	incf	___awdiv@counter,f
  9776  0CE3                     i1l2325:	
  9777  0CE3  1BF1               	btfsc	___awdiv@divisor+1,7
  9778  0CE4  2CEF               	goto	i1l2327
  9779  0CE5  3001               	movlw	1
  9780  0CE6                     u247_25:	
  9781  0CE6  35F0               	lslf	___awdiv@divisor,f
  9782  0CE7  0DF1               	rlf	___awdiv@divisor+1,f
  9783  0CE8  0B89               	decfsz	9,f
  9784  0CE9  2CE6               	goto	u247_25
  9785  0CEA  3001               	movlw	1
  9786  0CEB  00F4               	movwf	??___awdiv
  9787  0CEC  0874               	movf	??___awdiv,w
  9788  0CED  07F5               	addwf	___awdiv@counter,f
  9789  0CEE  2CE3               	goto	i1l2325
  9790  0CEF                     i1l2327:	
  9791  0CEF  3001               	movlw	1
  9792  0CF0                     u249_25:	
  9793  0CF0  35F7               	lslf	___awdiv@quotient,f
  9794  0CF1  0DF8               	rlf	___awdiv@quotient+1,f
  9795  0CF2  0B89               	decfsz	9,f
  9796  0CF3  2CF0               	goto	u249_25
  9797  0CF4  0871               	movf	___awdiv@divisor+1,w
  9798  0CF5  0273               	subwf	___awdiv@dividend+1,w
  9799  0CF6  1D03               	skipz
  9800  0CF7  2CFA               	goto	u250_25
  9801  0CF8  0870               	movf	___awdiv@divisor,w
  9802  0CF9  0272               	subwf	___awdiv@dividend,w
  9803  0CFA                     u250_25:	
  9804  0CFA  1C03               	skipc
  9805  0CFB  2D01               	goto	i1l2333
  9806  0CFC  0870               	movf	___awdiv@divisor,w
  9807  0CFD  02F2               	subwf	___awdiv@dividend,f
  9808  0CFE  0871               	movf	___awdiv@divisor+1,w
  9809  0CFF  3BF3               	subwfb	___awdiv@dividend+1,f
  9810  0D00  1477               	bsf	___awdiv@quotient,0
  9811  0D01                     i1l2333:	
  9812  0D01  3001               	movlw	1
  9813  0D02                     u251_25:	
  9814  0D02  36F1               	lsrf	___awdiv@divisor+1,f
  9815  0D03  0CF0               	rrf	___awdiv@divisor,f
  9816  0D04  0B89               	decfsz	9,f
  9817  0D05  2D02               	goto	u251_25
  9818  0D06  3001               	movlw	1
  9819  0D07  02F5               	subwf	___awdiv@counter,f
  9820  0D08  1D03               	btfss	3,2
  9821  0D09  2CEF               	goto	i1l2327
  9822  0D0A                     i1l2337:	
  9823  0D0A  0876               	movf	___awdiv@sign,w
  9824  0D0B  1903               	btfsc	3,2
  9825  0D0C  2D12               	goto	i1l2341
  9826  0D0D  09F7               	comf	___awdiv@quotient,f
  9827  0D0E  09F8               	comf	___awdiv@quotient+1,f
  9828  0D0F  0AF7               	incf	___awdiv@quotient,f
  9829  0D10  1903               	skipnz
  9830  0D11  0AF8               	incf	___awdiv@quotient+1,f
  9831  0D12                     i1l2341:	
  9832  0D12  0878               	movf	___awdiv@quotient+1,w
  9833  0D13  00F1               	movwf	?___awdiv+1
  9834  0D14  0877               	movf	___awdiv@quotient,w
  9835  0D15  00F0               	movwf	?___awdiv
  9836  0D16  0008               	return
  9837  0D17                     __end_of___awdiv:	
  9838  007E                     btemp	set	126	;btemp
  9839  007E                     int$flags	set	126
  9840  007E                     wtemp0	set	126


Data Sizes:
    Strings     6
    Constant    0
    Data        32
    BSS         51
    Persistent  43
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     41      65
    BANK1            80     80      80
    BANK2            80     13      51
    BANK3            80      0      32
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    puts@s	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_3(CODE[3]), hrDisp(BANK2[13]), distanceDisp(BANK2[11]), speedDisp(BANK2[8]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_2(CODE[3]), STR_1(CODE[3]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK2[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK3[32]), STR_3(CODE[3]), hrDisp(BANK2[13]), distanceDisp(BANK2[11]), 
		 -> speedDisp(BANK2[8]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S987_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK2[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_2(CODE[3]), STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_2(CODE[3]), STR_1(CODE[3]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 2
		 -> ?_printf(BANK2[2]), rpm(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK2[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK2[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    writeString@string	PTR unsigned char  size(1) Largest target is 13
		 -> hrDisp(BANK2[13]), distanceDisp(BANK2[11]), speedDisp(BANK2[8]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timerISR(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timerISR(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    IOCCF5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> speedCalc(), IOCCF5_DefaultInterruptHandler(), 

    IOCCF5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> speedCalc(), Absolute function(), IOCCF5_DefaultInterruptHandler(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _speedCalc->___xxtofl
    ___wmul->___awdiv
    ___fltol->___xxtofl
    ___flmul->___xxtofl
    ___fladd->___xxtofl

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _IOCCF5_ISR->_speedCalc
    _speedCalc->___fltol
    ___fltol->___flmul

Critical Paths under _main in BANK1

    _main->_printf
    _writeString->_puts
    _setCursor->_EUSART_Write
    _setCursor->_EUSART_is_tx_ready
    _resetCursor->_puts
    _puts->_fputs
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _abs->___aomod
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCCF5_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_printf
    _printf->_vfprintf

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   14344
                                             12 BANK2      1     1      0
         _IOCCF5_SetInterruptHandler
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                             _printf
                        _resetCursor
                          _setCursor
                        _writeString
 ---------------------------------------------------------------------------------
 (1) _writeString                                          1     1      0    2879
                                             24 BANK1      1     1      0
                 _EUSART_is_tx_ready
                               _puts
 ---------------------------------------------------------------------------------
 (1) _setCursor                                            4     3      1     612
                                              1 BANK1      4     3      1
                       _EUSART_Write
                 _EUSART_is_tx_ready
 ---------------------------------------------------------------------------------
 (2) _EUSART_is_tx_ready                                   1     1      0      24
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _resetCursor                                          0     0      0    2734
                               _puts
 ---------------------------------------------------------------------------------
 (2) _puts                                                 5     3      2    2734
                                             19 BANK1      5     3      2
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4    7129
                                             79 BANK1      1     1      0
                                              5 BANK2      7     3      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    6772
                                             76 BANK1      3     0      3
                                              0 BANK2      5     5      0
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    6325
                                             58 BANK1     18    16      2
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    4723
                                             28 BANK1     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    3100
                                             19 BANK1      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     123
                                              0 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 (3) _fputs                                                9     6      3    1549
                                             10 BANK1      9     6      3
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     980
                                              2 BANK1      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      44
                                              1 BANK1      1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             19 BANK1      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     448
                                              0 BANK1     19     3     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     452
                                              0 BANK1     27    11     16
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     642
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0     174
                                              2 BANK1      1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     174
         _IOCCF5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCCF5_SetInterruptHandler                           2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          0     0      0    6405
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                           _timerISR *
 ---------------------------------------------------------------------------------
 (12) _timerISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _PIN_MANAGER_IOC                                     0     0      0    6405
                         _IOCCF5_ISR
 ---------------------------------------------------------------------------------
 (12) _IOCCF5_ISR                                          0     0      0    6405
                   Absolute function *
     _IOCCF5_DefaultInterruptHandler *
                          _speedCalc *
 ---------------------------------------------------------------------------------
 (13) _speedCalc                                           4     4      0    6405
                                             37 BANK0      4     4      0
                            ___awdiv
                            ___fladd
                            ___flmul
                            ___fltol
                             ___wmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (14) ___xxtofl                                           14    10      4     474
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (14) ___wmul                                              6     2      4     244
                                              9 COMMON     4     0      4
                                              0 BANK0      2     2      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (14) ___fltol                                            11     7      4     381
                                             26 BANK0     11     7      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (14) ___flmul                                            26    18      8    2569
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (15) __Umul8_16                                           9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (14) ___fladd                                            20    12      8    2262
                                              0 BANK0     20    12      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (14) ___awdiv                                             9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (13) _IOCCF5_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _IOCCF5_SetInterruptHandler
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCCF5_SetInterruptHandler
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _TMR0_SetInterruptHandler
   _printf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART_Write
             _fputs
               _fputc
                 _putch
                   _EUSART_Write
             _strlen
         _fputc
           _putch
             _EUSART_Write
   _resetCursor
     _puts
       _fputc
         _putch
           _EUSART_Write
       _fputs
         _fputc
           _putch
             _EUSART_Write
   _setCursor
     _EUSART_Write
     _EUSART_is_tx_ready
   _writeString
     _EUSART_is_tx_ready
     _puts
       _fputc
         _putch
           _EUSART_Write
       _fputs
         _fputc
           _putch
             _EUSART_Write

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
     _IOCCF5_ISR
       Absolute function(Fake) *
       _IOCCF5_DefaultInterruptHandler *
       _speedCalc *
         ___awdiv
         ___fladd
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___wmul
           ___awdiv (ARG)
         ___xxtofl
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _timerISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     29      41       5       81.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     50      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      D      33       9       63.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      20      11       40.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      F2      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      F2      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri Mar 15 13:43:57 2019

                                  __CFG_CP$OFF 0000                                             l69 07F8  
                                 ___awdiv@sign 0076                            ___wmul@multiplicand 007B  
                              _timer0ReloadVal 0060                            __Umul8_16@word_mpld 0076  
                                          l351 0C85                                            l442 07BB  
                                          l450 0490                                            l451 0497  
                                          l605 0FEE                                            l445 07DB  
                                          l455 04B2                                            l456 04C6  
                                          l459 055C                                            l592 078E  
                                          _abs 0AEB                                            _pad 07A0  
                                          _rpm 0054                 ?_EUSART_SetFramingErrorHandler 00A0  
                                 __CFG_BORV$LO 0000                                            wreg 0009  
                                 __CFG_IESO$ON 0000                                   ___flmul@aexp 0032  
                                 ___flmul@bexp 0033                                   ___flmul@sign 002D  
                                 ___flmul@temp 0038                                   ___flmul@prod 0034  
                                 __CFG_LVP$OFF 0000                                   __CFG_ZCD$OFF 0000  
                                 ___fltol@exp1 0044                                           ?_abs 00B3  
                                         l2105 0BBC                                           l2203 0F82  
                                         l2211 0FCD                                           l2107 0BDD  
                                         l2115 0B0A                                           l2205 0F91  
                                         l2117 0B16                                           l2125 07B1  
                                         l2135 07BD                                           l3007 0AC0  
                                         l2153 06D5                                           l2209 0FC1  
                                         l2129 07B9                                           l2241 04AA  
                                         l2171 0728                                           l2139 07EA  
                                         l2251 04F3                                           l2181 076D  
                                         l2157 06FD                                           l2093 0CB4  
                                         l2261 04CE                                           l2159 0702  
                                         l2191 0F4D                                           l2095 0CBD  
                                         l2247 04C1                                           l2169 0719  
                                         l2089 0C91                                           l2273 0570  
                                         l3145 0C21                                           l3225 0C77  
                                         l2179 0761                                           l2195 0F75  
                                         l2283 0588                                           l3147 0C41  
                                         l2269 0568                                           l2279 057B  
                                         l2803 064D                                           l3179 0DB9  
                                         l2813 0674                                           l2807 0651  
                                         l2823 0684                                           l2817 067A  
                                         l2851 0AA6                                           ?_pad 00B3  
                                         l2795 061D                                           l2787 05E0  
                                         l2981 0C4B                                           l2991 0C64  
                                         l2993 0C69                                           l2987 0C5A  
                                         l2989 0C5F                                           l2997 0C6E  
                                         STR_1 1003                                           STR_2 1003  
                                         STR_3 1000                                           u2040 070A  
                                         _LATA 010C                                           _LATB 010D  
                                         _LATC 010E                                           u2240 0466  
                                         u2250 0467                                           u2075 074E  
                                         u2325 0566                                           u2175 0FAF  
                                         u2345 04E2                                           u2355 04EE  
                                         u2295 04A2                                           u1925 0CB2  
                                         u1975 07C7                                           u1995 0AF5  
                                         u3777 0ACF                                           u3787 0C56  
                                         _TMR0 0015                                           _WPUA 020C  
                                         _WPUB 020D                                           _WPUC 020E  
                                 __CFG_WRT$OFF 0000                                  __CFG_FCMEN$ON 0000  
                                         abs@a 00B3                                           _dbuf 01A0  
                                         _main 0D7D                                           _dtoa 044A  
                                         _prec 004B                                           _nout 014D  
                                         pad@i 00B7                                           pad@p 00B4  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         pad@w 00B9                                           btemp 007E  
                                         _puts 0B1D               ??_IOCCF5_DefaultInterruptHandler 0070  
              ?_IOCCF5_DefaultInterruptHandler 0070                                  __CFG_BOREN$ON 0000  
                                         start 0014                                  __CFG_MCLRE$ON 0000  
                                        ??_abs 00B5                                          ??_pad 00B6  
                      __end_of_TMR0_Initialize 0AEB                 ??_TMR0_DefaultInterruptHandler 0070  
                                ?_EUSART_Write 0070                 __size_of_OSCILLATOR_Initialize 0007  
                __end_of_OSCILLATOR_Initialize 0A3F                            __size_of_IOCCF5_ISR 000D  
                                ___fltol@sign1 0043                                __end_of___aodiv 07A0  
                              __end_of___fladd 044A                                          ?_main 0070  
                                        ?_dtoa 00BC                                __end_of___aomod 1000  
                              __end_of___awdiv 0D17                                  __CFG_WDTE$OFF 0000  
                              __end_of___flmul 0268                                __end_of___fltol 0D7D  
                                        ?_puts 00B3                                ___awdiv@divisor 0070  
                                        i1l236 000D                                          i1l239 0012  
                                        i1l492 0B42                                          i1l901 025B  
                                        i1l814 03CB                                          i1l835 0442  
                                        i1l827 042A                                          i1l940 0E4D  
                                        i1l693 0D61                                          i1l941 0E57  
                                        i1l933 0E39                                          i1l927 0E03  
                                        i1l793 02B5                                          i1l797 0348  
                                        i1l799 032B                                          i1l995 0B66  
                              ___awdiv@counter 0075                                   vfpfcnvrt@fmt 00DA  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TRISC 008E                                    _writeString 0ABE  
            __size_of_TMR0_SetInterruptHandler 0009                      ?_TMR0_SetInterruptHandler 00A0  
                             __end_of_TMR0_ISR 0A9B                        __end_of_PIN_MANAGER_IOC 0A20  
                                        _flags 004D                                          _fputc 0C86  
                                        _fputs 0BB9                                          _speed 014F  
                                        pad@fp 00BB                                          _width 0049  
                                        _putch 0A26                                          dtoa@d 00BC  
                                        dtoa@i 00D8                                          dtoa@n 00D0  
                                        dtoa@p 00C9                                          dtoa@s 00CE  
                                        dtoa@w 00CC                                          pclath 000A  
                                        puts@s 00B3                                          status 0003  
                                        wtemp0 007E                                __initialization 0016  
                                 __end_of_main 0DE6                                   __end_of_dtoa 059B  
                                 __end_of_puts 0B38                                 ??_EUSART_Write 00A0  
                               __CFG_LPBOR$OFF 0000                    ?_INTERRUPT_InterruptManager 0070  
                                       ??_main 014C                                         ??_dtoa 00C4  
                                       ??_puts 00B5                                 __CFG_PLLEN$OFF 0000  
            _EUSART_DefaultFramingErrorHandler 0000                     _EUSART_OverrunErrorHandler 005C  
                                       ?_fputc 00A2                                         ?_fputs 00AA  
                             ___awdiv@dividend 0072                                         _ANSELA 018C  
                                       ?_putch 0070                                         _ANSELB 018D  
                                       _ANSELC 018E                                         _BORCON 0116  
                                       _RC1REG 0199                                         _RC1STA 019D  
                                       _RB7PPS 0E9F                                         i1l2401 028D  
                                       _ODCONA 028C                                         _ODCONB 028D  
                                       i1l2315 0CDB                                         i1l2219 0B60  
                                       _ODCONC 028E                                         i1l2341 0D12  
                                       i1l2333 0D01                                         i1l2325 0CE3  
                                       i1l2309 0CD0                                         i1l2327 0CEF  
                                       i1l2503 0379                                         i1l2423 02AD  
                                       i1l2351 0D2A                                         i1l2337 0D0A  
                                       i1l2521 03DD                                         i1l2513 03C3  
                                       i1l2419 02AA                                         i1l2611 0083  
                                       i1l2347 0D21                                         i1l2429 02BF  
                                       i1l2543 03FC                                         i1l2535 03F1  
                                       i1l2703 0248                                         i1l2607 0079  
                                       i1l2367 0D4F                                         i1l2529 03EA  
                                       i1l2537 03F3                                         i1l2609 007B  
                                       i1l2377 0D6E                                         i1l2369 0D5D  
                                       i1l2289 0B3B                                         i1l2721 0DFB  
                                       i1l2547 03FE                                         i1l2467 0333  
                                       i1l2459 02FB                                         i1l2395 0282  
                                       i1l2619 0091                                         i1l2731 0E16  
                                       i1l2565 043A                                         i1l2493 0368  
                                       i1l2485 0356                                         i1l2469 0335  
                                       i1l2477 0343                                         i1l2741 0E4B  
                                       i1l2733 0E26                                         i1l2495 036A  
                                       i1l2399 0285                                         i1l2671 01C3  
                                       i1l2591 0058                                         i1l2743 0E3E  
                                       i1l2727 0E12                                         i1l2911 0A8A  
                                       i1l2569 043E                                         i1l2673 01DA  
                                       i1l2593 0060                                         i1l2683 01F3  
                                       i1l2755 0E72                                         i1l2693 021C  
                                       i1l2589 0056                                         i1l2679 01F1  
                                       i1l2697 0231                                         u300_25 0415  
                                       u222_25 0B67                                         u320_25 01C6  
                                       u241_25 0B43                                         u250_25 0CFA  
                                       u330_25 0225                                         u322_25 01CF  
                                       u242_25 0B48                                         u251_25 0D02  
                                       u331_25 023B                                         u315_25 0107  
                                       u316_25 0136                                         u340_25 0E45  
                   __end_of_EUSART_is_tx_ready 0AA9                                         u317_25 018C  
                                       u261_25 0D65                                         u318_25 01A3  
                                       u247_25 0CE6                                         u319_25 01B2  
                                       u255_25 0D33                                         u344_25 0E5F  
                                       u336_25 0E1F                                         u249_25 0CF0  
                                       u273_25 030F                                         u329_25 020A  
                                       u274_20 031A                                         u290_25 03DE  
                                       u258_25 0D50                                         u338_25 0E33  
                                       u275_20 031B                                         u285_25 036E  
                                       u286_23 038B                                         u278_25 0339  
                                       _OSCCON 0099                                         u201lld 06D2  
                                       u212lld 0F4A                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _TX1REG 019A  
                                       _TX1STA 019E                                   ?_resetCursor 0070  
                             __end_of___xxtofl 0E7B                                 __CFG_PWRTE$OFF 0000  
                                 vfprintf@cfmt 0143                                      ??___aodiv 00B0  
                                    ??___fladd 0028                                      ??___aomod 00B0  
                                       ___wmul 0B38                                      ??___awdiv 0074  
                               __CFG_STVREN$ON 0000                                      ??___flmul 0028  
                                    ??___fltol 003E                                         _hrDisp 0120  
                             ?_TMR0_Initialize 0070                               ___awdiv@quotient 0077  
                                       _second 0051                                         _printf 0AA9  
                                       pad@buf 00B3                                         dtoa@fp 00CB  
                                       _strlen 0B04                                         fputc@c 00A2  
                                       fputs@c 00B0                                         fputs@i 00B1  
                                       fputs@s 00AA                             __size_of__Umul8_16 001F  
                             __end_of_timerISR 0A26                               __end_of_vfprintf 0C49  
     TMR0_SetInterruptHandler@InterruptHandler 00A0     IOCCF5_SetInterruptHandler@InterruptHandler 00A0  
                             ?_PIN_MANAGER_IOC 0070                                   ??_IOCCF5_ISR 007E  
                                 ___xxtofl@arg 007A                                   ___xxtofl@exp 0079  
                            _SYSTEM_Initialize 0A74                                   ___xxtofl@val 0070  
                      __end_of__initialization 0038                             ?_SYSTEM_Initialize 0070  
                                   ___fltol@f1 003A                                 __pcstackCOMMON 0070  
                                 __pidataBANK2 0B75                            ??_SYSTEM_Initialize 00A3  
                                    ?_TMR0_ISR 0070                                  __end_of_fputc 0CC6  
                                __end_of_fputs 0BE2                                  __end_of_putch 0A2C  
                           __end_of_IOCCF5_ISR 0A8D                                 _OPTION_REGbits 0095  
              ??_EUSART_SetOverrunErrorHandler 00A2                                        ??_fputc 00A5  
                    __end_of_SYSTEM_Initialize 0A80                                        ??_fputs 00AD  
                                      ??_putch 00A1                                     __pbssBANK0 0049  
                                   __pbssBANK2 014D                                     __pbssBANK3 01A0  
                         __end_of_EUSART_Write 0800                              __end_of__Umul8_16 0B75  
                                   __pmaintext 0D7D               __end_of_TMR0_SetInterruptHandler 0A74  
                                      ?___wmul 0079                                     ??_TMR0_ISR 0070  
                              __CFG_PPS1WAY$ON 0000                             __size_of_setCursor 003D  
                                   __pintentry 0004         __end_of_IOCCF5_DefaultInterruptHandler 0003  
      __size_of_IOCCF5_DefaultInterruptHandler 0001                 _IOCCF5_DefaultInterruptHandler 0002  
                                      ?_printf 0145                                        ?_strlen 00A0  
                           __size_of_speedCalc 00A6                                __CFG_WDTCCS$SWC 0000  
                                    ?___xxtofl 0070                                   ?_writeString 0070  
                           __size_of_vfpfcnvrt 010E                                        _OSCTUNE 0098  
                                      _SLRCONA 030C                                        _SLRCONB 030D  
                                      _SLRCONC 030E                       ??_EUSART_SetErrorHandler 00A2  
                         __size_of_resetCursor 0008                                      ?_timerISR 0070  
                                      ___aodiv 06A9                                        ___fladd 0268  
                                      ___aomod 0F21                                        ___awdiv 0CC6  
                                      ___flmul 003C                                        ___fltol 0D17  
                              __size_of___wmul 001E                                      ?_vfprintf 00EC  
                                      __ptext1 0ABE                                        __ptext2 0C49  
                                      __ptext3 0A9B                                        __ptext4 0A3F  
                                      __ptext5 0B1D                                        __ptext6 0AA9  
                                      __ptext7 0C15                                        __ptext8 059B  
                                      __ptext9 044A                                __size_of_printf 0015  
                              __size_of_strlen 0019                                        _counter 004F  
                        _OSCILLATOR_Initialize 0A38                                   __size_of_abs 0019  
                                 __size_of_pad 0056                                     ??___xxtofl 0074  
                     ??_PIN_MANAGER_Initialize 00A2                                      _IOCCFbits 0399  
                                    _IOCCNbits 0398                                      _IOCCPbits 0397  
                   __size_of_SYSTEM_Initialize 000C                                        clrloop0 0A2D  
                         end_of_initialization 0038                              __end_of_setCursor 0C86  
        __end_of_EUSART_SetOverrunErrorHandler 0A62         __size_of_EUSART_SetOverrunErrorHandler 0009  
                _EUSART_SetOverrunErrorHandler 0A59                                        fputc@fp 00A4  
                                      init_ram 0A32                                        fputs@fp 00AC  
                                      initloop 0A33                              __end_of_speedCalc 0F21  
                            _EUSART_Initialize 0B95                             ?_EUSART_Initialize 0070  
                            __end_of_vfpfcnvrt 06A9                                     ??_timerISR 0070  
                           _EUSART_is_tx_ready 0A9B                                     ??_vfprintf 0140  
                                      strlen@a 00A3                                        strlen@s 00A4  
                          ??_EUSART_Initialize 00A2                                   _distanceDisp 012D  
                     _TMR0_SetInterruptHandler 0A6B                            ?_EUSART_is_tx_ready 0070  
                                  ___fladd@grs 0033                               __CFG_FOSC$INTOSC 0000  
                                ___xxtofl@sign 0078                          __size_of_EUSART_Write 000A  
                 ??_IOCCF5_SetInterruptHandler 00A2                __size_of_EUSART_SetErrorHandler 0009  
                                  ___flmul@grs 002E                      __end_of_EUSART_Initialize 0BB9  
                         ??_EUSART_is_tx_ready 00A0                                 _speedCalc$1214 0045  
                   _EUSART_DefaultErrorHandler 0000                                    vfpfcnvrt@ap 00DB  
                                  vfpfcnvrt@fp 00EB                                    vfpfcnvrt@ll 00E1  
                               __end_of___wmul 0B56                                    vfpfcnvrt@vp 00E9  
                                 _EUSART_Write 07F6                              __size_of_TMR0_ISR 000E  
                       ?_OSCILLATOR_Initialize 0070                              writeString@string 00B8  
          __size_of_IOCCF5_SetInterruptHandler 0009                                 __end_of_printf 0ABE  
                               __end_of_strlen 0B1D                            start_initialization 0016  
                     __size_of_TMR0_Initialize 0018                __size_of_PIN_MANAGER_Initialize 0033  
                                  __end_of_abs 0B04                                    __end_of_pad 07F6  
                         __size_of_writeString 0015                         _EUSART_is_tx_ready$167 00A0  
                                  putch@txData 00A1                       __size_of_PIN_MANAGER_IOC 0006  
               ?_EUSART_SetOverrunErrorHandler 00A0                                    vfprintf@fmt 00EC  
                   _EUSART_FramingErrorHandler 005E                                       ??___wmul 007D  
                       _EUSART_SetErrorHandler 0A47                                      __Umul8_16 0B56  
                                  __pdataBANK2 0120                                       ??_printf 00EF  
                                     ??_strlen 00A2                                      ___fladd@a 0024  
                                    ___fladd@b 0020                                      ___flmul@a 0024  
                                    ___flmul@b 0020                                      ___latbits 0002  
                                __pcstackBANK0 0020                                  __pcstackBANK1 00A0  
                                __pcstackBANK2 0140                               ___aodiv@dividend 00A8  
                            __size_of___xxtofl 0095                     __size_of_EUSART_Initialize 0024  
                        _TMR0_InterruptHandler 0056                                      __pnvBANK0 0056  
                      _IOCCF5_InterruptHandler 0058                         _PIN_MANAGER_Initialize 0BE2  
                                     ?___aodiv 00A0                                       ?___fladd 0020  
                                     ?___aomod 00A0                                       ?___awdiv 0070  
                             ___aodiv@quotient 00B3                                       ?___flmul 0020  
                                     ?___fltol 003A                                     ?__Umul8_16 0070  
                                   setCursor@a 00A4                                     setCursor@b 00A1  
                            __size_of_timerISR 0006                   ??_INTERRUPT_InterruptManager 007E  
                            __size_of_vfprintf 0034                                       _BAUD1CON 019F  
           __end_of_IOCCF5_SetInterruptHandler 0A6B                     _IOCCF5_SetInterruptHandler 0A62  
                               __size_of_fputc 0040                                 __size_of_fputs 0029  
                               __size_of_putch 0006                              ??_TMR0_Initialize 00A2  
                                ??_resetCursor 00B8                                 ___wmul@product 0020  
       EUSART_SetErrorHandler@interruptHandler 00A0                                      _setCursor 0C49  
                                    clear_ram0 0A2C                              _eusartRxLastError 0053  
          __size_of_INTERRUPT_InterruptManager 0010                     ??_TMR0_SetInterruptHandler 00A2  
                                     _PIR1bits 0010                ??_EUSART_SetFramingErrorHandler 00A2  
                                    _puts$1033 00B7                                      _speedCalc 0E7B  
                                    _speedDisp 0138                           __CFG_WDTCPS$WDTCPS1F 0000  
                                     _TMR0_ISR 0A8D              _EUSART_DefaultOverrunErrorHandler 0000  
                            ??_PIN_MANAGER_IOC 007E                                      _vfpfcnvrt 059B  
                            ___wmul@multiplier 0079                                     ?_setCursor 00A1  
                                   vfprintf@ap 00EE                                     vfprintf@fp 0142  
                          __end_of_resetCursor 0A47                                     ?_speedCalc 0070  
                      ??_OSCILLATOR_Initialize 00A0                                    ??__Umul8_16 0072  
                          _EUSART_ErrorHandler 005A                               __size_of___aodiv 00F7  
                             __size_of___fladd 01E2                               __size_of___aomod 00DF  
                             __size_of___awdiv 0051                               __size_of___flmul 022C  
                             __size_of___fltol 0066                                     ?_vfpfcnvrt 00DA  
                              ___aodiv@divisor 00A0                                ___aodiv@counter 00B1  
                                     ___xxtofl 0DE6                                       _dtoa$687 00C7  
                                     __ptext10 07A0                                       __ptext11 0B04  
                                     __ptext20 0AD3                                       __ptext12 0BB9  
                                     __ptext21 0A6B                                       __ptext13 0C86  
                                     __ptext30 0A8D                                       __ptext22 0BE2  
                                     __ptext14 0A26                                       __ptext31 0003  
                                     __ptext23 0A62                                       __ptext15 07F6  
                                     __ptext40 003C                                       __ptext32 0A20  
                                     __ptext24 0A38                                       __ptext16 0AEB  
                                     __ptext41 0B56                                       __ptext33 0A1A  
                                     __ptext25 0B95                                       __ptext17 0F21  
                                     __ptext42 0268                                       __ptext34 0A80  
                                     __ptext26 0A59                                       __ptext18 06A9  
                                     __ptext43 0CC6                                       __ptext35 0002  
                                     __ptext27 0A50                                       __ptext19 0A74  
                                     __ptext36 0E7B                                       __ptext28 0A47  
                                     __ptext37 0DE6                                       __ptext38 0B38  
                                     __ptext39 0D17                                       _distance 0151  
                                   _IOCCF5_ISR 0A80                                  __size_of_main 0069  
                                __size_of_dtoa 0151                                  __size_of_puts 001B  
                  __size_of_EUSART_is_tx_ready 000E           __end_of_TMR0_DefaultInterruptHandler 0004  
        __size_of_TMR0_DefaultInterruptHandler 0001                   _TMR0_DefaultInterruptHandler 0003  
                         __CFG_WDTCWS$WDTCWSSW 0000                        ?_EUSART_SetErrorHandler 00A0  
                                   _RC1STAbits 019D  EUSART_SetOverrunErrorHandler@interruptHandler 00A0  
                                     _timerISR 0A20                                       int$flags 007E  
                                     _vfprintf 0C15             __end_of_INTERRUPT_InterruptManager 0014  
                   _INTERRUPT_InterruptManager 0004                                      printf@fmt 0145  
        __end_of_EUSART_SetFramingErrorHandler 0A59         __size_of_EUSART_SetFramingErrorHandler 0009  
                _EUSART_SetFramingErrorHandler 0A50                               ___aomod@dividend 00A8  
                                ??_writeString 00B8                                     _INTCONbits 000B  
                                     intlevel1 0000                        ?_PIN_MANAGER_Initialize 0070  
                                  _resetCursor 0A3F                 __end_of_EUSART_SetErrorHandler 0A50  
                                  ??_setCursor 00A2                              __CFG_CLKOUTEN$OFF 0000  
                ?_TMR0_DefaultInterruptHandler 0070                                    ??_speedCalc 007E  
                                     printf@ap 014B  EUSART_SetFramingErrorHandler@interruptHandler 00A0  
                              ___aomod@divisor 00A0                                    ??_vfpfcnvrt 00DC  
                              ___aomod@counter 00B1                                  __pstringtext1 1000  
                                __pstringtext2 1003                                  __pstringtext3 0000  
                       __Umul8_16@multiplicand 0070                                     _OPTION_REG 0095  
                              _TMR0_Initialize 0AD3                    ?_IOCCF5_SetInterruptHandler 00A0  
                                   _TX1STAbits 019E                                  ___fladd@signs 0030  
                           EUSART_Write@txData 00A0                            __end_of_writeString 0AD3  
                                 ___aodiv@sign 00B2                                    ?_IOCCF5_ISR 0070  
               __end_of_PIN_MANAGER_Initialize 0C15                                   ___fladd@aexp 0031  
                                 ___fladd@bexp 0032                                _PIN_MANAGER_IOC 0A1A  
                         __Umul8_16@multiplier 0078                                   ___aomod@sign 00B2  
                            __Umul8_16@product 0074  
