

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Mar 20 18:11:26 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1619
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
     7                           	psect	stringtext1,global,class=STRCODE,delta=2
     8                           	psect	stringtext2,global,class=STRCODE,delta=2
     9                           	psect	stringtext3,global,class=STRCODE,delta=2
    10                           	psect	stringtext4,global,class=STRCODE,delta=2
    11                           	psect	cinit,global,class=CODE,merge=1,delta=2
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	inittext,global,class=CODE,delta=2
    17                           	psect	clrtext,global,class=CODE,delta=2
    18                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    19                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    21                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    23                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    24                           	psect	text1,local,class=CODE,merge=1,delta=2
    25                           	psect	text2,local,class=CODE,merge=1,delta=2
    26                           	psect	text3,local,class=CODE,merge=1,delta=2
    27                           	psect	text4,local,class=CODE,merge=1,delta=2
    28                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text7,local,class=CODE,merge=1,delta=2
    31                           	psect	text8,local,class=CODE,merge=1,delta=2
    32                           	psect	text9,local,class=CODE,merge=1,delta=2
    33                           	psect	text10,local,class=CODE,merge=1,delta=2
    34                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text14,local,class=CODE,merge=1,delta=2
    38                           	psect	text15,local,class=CODE,merge=1,delta=2
    39                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text19,local,class=CODE,merge=1,delta=2
    43                           	psect	text20,local,class=CODE,merge=1,delta=2
    44                           	psect	text21,local,class=CODE,merge=1,delta=2
    45                           	psect	text22,local,class=CODE,merge=1,delta=2
    46                           	psect	text23,local,class=CODE,merge=1,delta=2
    47                           	psect	text24,local,class=CODE,merge=1,delta=2
    48                           	psect	text25,local,class=CODE,merge=1,delta=2
    49                           	psect	text26,local,class=CODE,merge=1,delta=2
    50                           	psect	text27,local,class=CODE,merge=1,delta=2
    51                           	psect	text28,local,class=CODE,merge=1,delta=2
    52                           	psect	intentry,global,class=CODE,delta=2
    53                           	psect	text30,local,class=CODE,merge=1,delta=2
    54                           	psect	text31,local,class=CODE,merge=1,delta=2
    55                           	psect	text32,local,class=CODE,merge=1,delta=2
    56                           	psect	text33,local,class=CODE,merge=1,delta=2
    57                           	psect	text34,local,class=CODE,merge=1,delta=2
    58                           	psect	text35,local,class=CODE,merge=1,delta=2
    59                           	psect	text36,local,class=CODE,merge=1,delta=2
    60                           	psect	text37,local,class=CODE,merge=1,delta=2,group=1
    61                           	psect	text38,local,class=CODE,merge=1,delta=2,group=1
    62                           	psect	text39,local,class=CODE,merge=1,delta=2,group=1
    63                           	psect	text40,local,class=CODE,merge=1,delta=2,group=1
    64                           	psect	text41,local,class=CODE,merge=1,delta=2,group=1
    65                           	psect	text42,local,class=CODE,merge=1,delta=2,group=1
    66                           	dabs	1,0x7E,2
    67  0000                     
    68                           ; Version 2.05
    69                           ; Generated 20/12/2018 GMT
    70                           ; 
    71                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    72                           ; All rights reserved.
    73                           ; 
    74                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    75                           ; 
    76                           ; Redistribution and use in source and binary forms, with or without modification, are
    77                           ; permitted provided that the following conditions are met:
    78                           ; 
    79                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    80                           ;        conditions and the following disclaimer.
    81                           ; 
    82                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    83                           ;        of conditions and the following disclaimer in the documentation and/or other
    84                           ;        materials provided with the distribution.
    85                           ; 
    86                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    87                           ;        software without specific prior written permission.
    88                           ; 
    89                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    90                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    91                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    92                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    93                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    94                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    95                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    96                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    97                           ; 
    98                           ; 
    99                           ; Code-generator required, PIC16F1619 Definitions
   100                           ; 
   101                           ; SFR Addresses
   102  0000                     	;# 
   103  0001                     	;# 
   104  0002                     	;# 
   105  0003                     	;# 
   106  0004                     	;# 
   107  0005                     	;# 
   108  0006                     	;# 
   109  0007                     	;# 
   110  0008                     	;# 
   111  0009                     	;# 
   112  000A                     	;# 
   113  000B                     	;# 
   114  000C                     	;# 
   115  000D                     	;# 
   116  000E                     	;# 
   117  0010                     	;# 
   118  0011                     	;# 
   119  0012                     	;# 
   120  0013                     	;# 
   121  0014                     	;# 
   122  0015                     	;# 
   123  0016                     	;# 
   124  0016                     	;# 
   125  0017                     	;# 
   126  0018                     	;# 
   127  0019                     	;# 
   128  001A                     	;# 
   129  001A                     	;# 
   130  001B                     	;# 
   131  001B                     	;# 
   132  001C                     	;# 
   133  001D                     	;# 
   134  001E                     	;# 
   135  001F                     	;# 
   136  008C                     	;# 
   137  008D                     	;# 
   138  008E                     	;# 
   139  0090                     	;# 
   140  0091                     	;# 
   141  0092                     	;# 
   142  0093                     	;# 
   143  0094                     	;# 
   144  0095                     	;# 
   145  0096                     	;# 
   146  0098                     	;# 
   147  0099                     	;# 
   148  009A                     	;# 
   149  009B                     	;# 
   150  009B                     	;# 
   151  009C                     	;# 
   152  009D                     	;# 
   153  009E                     	;# 
   154  009F                     	;# 
   155  010C                     	;# 
   156  010D                     	;# 
   157  010E                     	;# 
   158  0111                     	;# 
   159  0112                     	;# 
   160  0113                     	;# 
   161  0114                     	;# 
   162  0115                     	;# 
   163  0116                     	;# 
   164  0117                     	;# 
   165  0118                     	;# 
   166  0119                     	;# 
   167  011C                     	;# 
   168  018C                     	;# 
   169  018D                     	;# 
   170  018E                     	;# 
   171  0191                     	;# 
   172  0191                     	;# 
   173  0192                     	;# 
   174  0193                     	;# 
   175  0193                     	;# 
   176  0194                     	;# 
   177  0195                     	;# 
   178  0196                     	;# 
   179  0197                     	;# 
   180  0199                     	;# 
   181  0199                     	;# 
   182  0199                     	;# 
   183  019A                     	;# 
   184  019A                     	;# 
   185  019A                     	;# 
   186  019B                     	;# 
   187  019B                     	;# 
   188  019B                     	;# 
   189  019B                     	;# 
   190  019B                     	;# 
   191  019C                     	;# 
   192  019C                     	;# 
   193  019C                     	;# 
   194  019D                     	;# 
   195  019D                     	;# 
   196  019D                     	;# 
   197  019E                     	;# 
   198  019E                     	;# 
   199  019E                     	;# 
   200  019F                     	;# 
   201  019F                     	;# 
   202  019F                     	;# 
   203  019F                     	;# 
   204  019F                     	;# 
   205  020C                     	;# 
   206  020D                     	;# 
   207  020E                     	;# 
   208  0211                     	;# 
   209  0211                     	;# 
   210  0212                     	;# 
   211  0212                     	;# 
   212  0213                     	;# 
   213  0213                     	;# 
   214  0214                     	;# 
   215  0214                     	;# 
   216  0215                     	;# 
   217  0215                     	;# 
   218  0215                     	;# 
   219  0215                     	;# 
   220  0216                     	;# 
   221  0216                     	;# 
   222  0217                     	;# 
   223  0217                     	;# 
   224  028C                     	;# 
   225  028D                     	;# 
   226  028E                     	;# 
   227  0291                     	;# 
   228  0291                     	;# 
   229  0292                     	;# 
   230  0293                     	;# 
   231  0294                     	;# 
   232  0298                     	;# 
   233  0298                     	;# 
   234  0299                     	;# 
   235  029A                     	;# 
   236  029B                     	;# 
   237  029E                     	;# 
   238  030C                     	;# 
   239  030D                     	;# 
   240  030E                     	;# 
   241  038C                     	;# 
   242  038D                     	;# 
   243  038E                     	;# 
   244  0391                     	;# 
   245  0392                     	;# 
   246  0393                     	;# 
   247  0394                     	;# 
   248  0395                     	;# 
   249  0396                     	;# 
   250  0397                     	;# 
   251  0398                     	;# 
   252  0399                     	;# 
   253  040E                     	;# 
   254  0413                     	;# 
   255  0413                     	;# 
   256  0414                     	;# 
   257  0414                     	;# 
   258  0415                     	;# 
   259  0416                     	;# 
   260  0417                     	;# 
   261  0418                     	;# 
   262  041A                     	;# 
   263  041A                     	;# 
   264  041B                     	;# 
   265  041B                     	;# 
   266  041C                     	;# 
   267  041D                     	;# 
   268  041E                     	;# 
   269  041F                     	;# 
   270  0493                     	;# 
   271  0494                     	;# 
   272  0495                     	;# 
   273  0496                     	;# 
   274  049A                     	;# 
   275  049B                     	;# 
   276  049C                     	;# 
   277  049D                     	;# 
   278  058C                     	;# 
   279  058C                     	;# 
   280  058D                     	;# 
   281  058E                     	;# 
   282  058E                     	;# 
   283  058F                     	;# 
   284  0590                     	;# 
   285  0590                     	;# 
   286  0591                     	;# 
   287  0592                     	;# 
   288  0592                     	;# 
   289  0593                     	;# 
   290  0594                     	;# 
   291  0594                     	;# 
   292  0595                     	;# 
   293  0596                     	;# 
   294  0596                     	;# 
   295  0597                     	;# 
   296  0598                     	;# 
   297  0599                     	;# 
   298  059A                     	;# 
   299  059B                     	;# 
   300  059B                     	;# 
   301  059C                     	;# 
   302  059D                     	;# 
   303  060C                     	;# 
   304  060C                     	;# 
   305  060D                     	;# 
   306  060E                     	;# 
   307  060F                     	;# 
   308  060F                     	;# 
   309  0610                     	;# 
   310  0611                     	;# 
   311  0612                     	;# 
   312  0613                     	;# 
   313  0614                     	;# 
   314  0617                     	;# 
   315  0617                     	;# 
   316  0618                     	;# 
   317  0619                     	;# 
   318  061A                     	;# 
   319  061A                     	;# 
   320  061B                     	;# 
   321  061C                     	;# 
   322  0691                     	;# 
   323  0692                     	;# 
   324  0693                     	;# 
   325  0694                     	;# 
   326  0695                     	;# 
   327  0696                     	;# 
   328  0697                     	;# 
   329  0699                     	;# 
   330  069A                     	;# 
   331  0711                     	;# 
   332  0712                     	;# 
   333  0713                     	;# 
   334  0714                     	;# 
   335  0715                     	;# 
   336  0718                     	;# 
   337  0718                     	;# 
   338  0719                     	;# 
   339  071A                     	;# 
   340  071A                     	;# 
   341  071B                     	;# 
   342  071C                     	;# 
   343  071D                     	;# 
   344  0791                     	;# 
   345  0791                     	;# 
   346  0792                     	;# 
   347  0793                     	;# 
   348  0793                     	;# 
   349  0794                     	;# 
   350  0795                     	;# 
   351  0795                     	;# 
   352  0796                     	;# 
   353  0797                     	;# 
   354  0797                     	;# 
   355  0798                     	;# 
   356  0799                     	;# 
   357  079A                     	;# 
   358  080C                     	;# 
   359  080C                     	;# 
   360  080D                     	;# 
   361  080E                     	;# 
   362  080E                     	;# 
   363  080F                     	;# 
   364  0810                     	;# 
   365  0810                     	;# 
   366  0811                     	;# 
   367  0812                     	;# 
   368  0812                     	;# 
   369  0813                     	;# 
   370  0814                     	;# 
   371  0815                     	;# 
   372  0816                     	;# 
   373  0817                     	;# 
   374  0818                     	;# 
   375  0819                     	;# 
   376  081A                     	;# 
   377  081A                     	;# 
   378  081B                     	;# 
   379  081C                     	;# 
   380  081C                     	;# 
   381  081D                     	;# 
   382  088C                     	;# 
   383  088D                     	;# 
   384  088E                     	;# 
   385  088F                     	;# 
   386  088F                     	;# 
   387  0890                     	;# 
   388  0891                     	;# 
   389  0892                     	;# 
   390  0893                     	;# 
   391  0893                     	;# 
   392  0894                     	;# 
   393  0895                     	;# 
   394  0896                     	;# 
   395  0897                     	;# 
   396  0897                     	;# 
   397  0898                     	;# 
   398  0899                     	;# 
   399  0D8C                     	;# 
   400  0D8C                     	;# 
   401  0D8D                     	;# 
   402  0D8E                     	;# 
   403  0D8F                     	;# 
   404  0D8F                     	;# 
   405  0D90                     	;# 
   406  0D91                     	;# 
   407  0D92                     	;# 
   408  0D92                     	;# 
   409  0D93                     	;# 
   410  0D94                     	;# 
   411  0D95                     	;# 
   412  0D95                     	;# 
   413  0D96                     	;# 
   414  0D97                     	;# 
   415  0D98                     	;# 
   416  0D99                     	;# 
   417  0D9A                     	;# 
   418  0D9B                     	;# 
   419  0D9C                     	;# 
   420  0D9D                     	;# 
   421  0D9E                     	;# 
   422  0D9E                     	;# 
   423  0D9F                     	;# 
   424  0DA0                     	;# 
   425  0DA1                     	;# 
   426  0DA1                     	;# 
   427  0DA2                     	;# 
   428  0DA3                     	;# 
   429  0DA4                     	;# 
   430  0DA4                     	;# 
   431  0DA5                     	;# 
   432  0DA6                     	;# 
   433  0DA7                     	;# 
   434  0DA7                     	;# 
   435  0DA8                     	;# 
   436  0DA9                     	;# 
   437  0DAA                     	;# 
   438  0DAB                     	;# 
   439  0DAC                     	;# 
   440  0DAD                     	;# 
   441  0DAE                     	;# 
   442  0DAF                     	;# 
   443  0E0F                     	;# 
   444  0E10                     	;# 
   445  0E11                     	;# 
   446  0E12                     	;# 
   447  0E13                     	;# 
   448  0E14                     	;# 
   449  0E15                     	;# 
   450  0E16                     	;# 
   451  0E17                     	;# 
   452  0E18                     	;# 
   453  0E19                     	;# 
   454  0E1A                     	;# 
   455  0E1B                     	;# 
   456  0E1C                     	;# 
   457  0E1D                     	;# 
   458  0E1E                     	;# 
   459  0E1F                     	;# 
   460  0E20                     	;# 
   461  0E21                     	;# 
   462  0E22                     	;# 
   463  0E23                     	;# 
   464  0E24                     	;# 
   465  0E25                     	;# 
   466  0E26                     	;# 
   467  0E27                     	;# 
   468  0E28                     	;# 
   469  0E29                     	;# 
   470  0E2A                     	;# 
   471  0E2B                     	;# 
   472  0E2C                     	;# 
   473  0E2D                     	;# 
   474  0E2E                     	;# 
   475  0E90                     	;# 
   476  0E91                     	;# 
   477  0E92                     	;# 
   478  0E94                     	;# 
   479  0E95                     	;# 
   480  0E9C                     	;# 
   481  0E9D                     	;# 
   482  0E9E                     	;# 
   483  0E9F                     	;# 
   484  0EA0                     	;# 
   485  0EA1                     	;# 
   486  0EA2                     	;# 
   487  0EA3                     	;# 
   488  0EA4                     	;# 
   489  0EA5                     	;# 
   490  0EA6                     	;# 
   491  0EA7                     	;# 
   492  0F0F                     	;# 
   493  0F10                     	;# 
   494  0F11                     	;# 
   495  0F12                     	;# 
   496  0F13                     	;# 
   497  0F14                     	;# 
   498  0F15                     	;# 
   499  0F16                     	;# 
   500  0F17                     	;# 
   501  0F18                     	;# 
   502  0F19                     	;# 
   503  0F1A                     	;# 
   504  0F1B                     	;# 
   505  0F1C                     	;# 
   506  0F1D                     	;# 
   507  0F1E                     	;# 
   508  0F1F                     	;# 
   509  0F20                     	;# 
   510  0F21                     	;# 
   511  0F22                     	;# 
   512  0F23                     	;# 
   513  0F24                     	;# 
   514  0F25                     	;# 
   515  0F26                     	;# 
   516  0F27                     	;# 
   517  0F28                     	;# 
   518  0F29                     	;# 
   519  0F2A                     	;# 
   520  0F2B                     	;# 
   521  0F2C                     	;# 
   522  0F2D                     	;# 
   523  0F2E                     	;# 
   524  0F2F                     	;# 
   525  0F30                     	;# 
   526  0F31                     	;# 
   527  0F32                     	;# 
   528  0F33                     	;# 
   529  0F34                     	;# 
   530  0F35                     	;# 
   531  0F36                     	;# 
   532  0F37                     	;# 
   533  0FE4                     	;# 
   534  0FE5                     	;# 
   535  0FE6                     	;# 
   536  0FE7                     	;# 
   537  0FE8                     	;# 
   538  0FE9                     	;# 
   539  0FEA                     	;# 
   540  0FEB                     	;# 
   541  0FED                     	;# 
   542  0FEE                     	;# 
   543  0FEF                     	;# 
   544  0000                     	;# 
   545  0001                     	;# 
   546  0002                     	;# 
   547  0003                     	;# 
   548  0004                     	;# 
   549  0005                     	;# 
   550  0006                     	;# 
   551  0007                     	;# 
   552  0008                     	;# 
   553  0009                     	;# 
   554  000A                     	;# 
   555  000B                     	;# 
   556  000C                     	;# 
   557  000D                     	;# 
   558  000E                     	;# 
   559  0010                     	;# 
   560  0011                     	;# 
   561  0012                     	;# 
   562  0013                     	;# 
   563  0014                     	;# 
   564  0015                     	;# 
   565  0016                     	;# 
   566  0016                     	;# 
   567  0017                     	;# 
   568  0018                     	;# 
   569  0019                     	;# 
   570  001A                     	;# 
   571  001A                     	;# 
   572  001B                     	;# 
   573  001B                     	;# 
   574  001C                     	;# 
   575  001D                     	;# 
   576  001E                     	;# 
   577  001F                     	;# 
   578  008C                     	;# 
   579  008D                     	;# 
   580  008E                     	;# 
   581  0090                     	;# 
   582  0091                     	;# 
   583  0092                     	;# 
   584  0093                     	;# 
   585  0094                     	;# 
   586  0095                     	;# 
   587  0096                     	;# 
   588  0098                     	;# 
   589  0099                     	;# 
   590  009A                     	;# 
   591  009B                     	;# 
   592  009B                     	;# 
   593  009C                     	;# 
   594  009D                     	;# 
   595  009E                     	;# 
   596  009F                     	;# 
   597  010C                     	;# 
   598  010D                     	;# 
   599  010E                     	;# 
   600  0111                     	;# 
   601  0112                     	;# 
   602  0113                     	;# 
   603  0114                     	;# 
   604  0115                     	;# 
   605  0116                     	;# 
   606  0117                     	;# 
   607  0118                     	;# 
   608  0119                     	;# 
   609  011C                     	;# 
   610  018C                     	;# 
   611  018D                     	;# 
   612  018E                     	;# 
   613  0191                     	;# 
   614  0191                     	;# 
   615  0192                     	;# 
   616  0193                     	;# 
   617  0193                     	;# 
   618  0194                     	;# 
   619  0195                     	;# 
   620  0196                     	;# 
   621  0197                     	;# 
   622  0199                     	;# 
   623  0199                     	;# 
   624  0199                     	;# 
   625  019A                     	;# 
   626  019A                     	;# 
   627  019A                     	;# 
   628  019B                     	;# 
   629  019B                     	;# 
   630  019B                     	;# 
   631  019B                     	;# 
   632  019B                     	;# 
   633  019C                     	;# 
   634  019C                     	;# 
   635  019C                     	;# 
   636  019D                     	;# 
   637  019D                     	;# 
   638  019D                     	;# 
   639  019E                     	;# 
   640  019E                     	;# 
   641  019E                     	;# 
   642  019F                     	;# 
   643  019F                     	;# 
   644  019F                     	;# 
   645  019F                     	;# 
   646  019F                     	;# 
   647  020C                     	;# 
   648  020D                     	;# 
   649  020E                     	;# 
   650  0211                     	;# 
   651  0211                     	;# 
   652  0212                     	;# 
   653  0212                     	;# 
   654  0213                     	;# 
   655  0213                     	;# 
   656  0214                     	;# 
   657  0214                     	;# 
   658  0215                     	;# 
   659  0215                     	;# 
   660  0215                     	;# 
   661  0215                     	;# 
   662  0216                     	;# 
   663  0216                     	;# 
   664  0217                     	;# 
   665  0217                     	;# 
   666  028C                     	;# 
   667  028D                     	;# 
   668  028E                     	;# 
   669  0291                     	;# 
   670  0291                     	;# 
   671  0292                     	;# 
   672  0293                     	;# 
   673  0294                     	;# 
   674  0298                     	;# 
   675  0298                     	;# 
   676  0299                     	;# 
   677  029A                     	;# 
   678  029B                     	;# 
   679  029E                     	;# 
   680  030C                     	;# 
   681  030D                     	;# 
   682  030E                     	;# 
   683  038C                     	;# 
   684  038D                     	;# 
   685  038E                     	;# 
   686  0391                     	;# 
   687  0392                     	;# 
   688  0393                     	;# 
   689  0394                     	;# 
   690  0395                     	;# 
   691  0396                     	;# 
   692  0397                     	;# 
   693  0398                     	;# 
   694  0399                     	;# 
   695  040E                     	;# 
   696  0413                     	;# 
   697  0413                     	;# 
   698  0414                     	;# 
   699  0414                     	;# 
   700  0415                     	;# 
   701  0416                     	;# 
   702  0417                     	;# 
   703  0418                     	;# 
   704  041A                     	;# 
   705  041A                     	;# 
   706  041B                     	;# 
   707  041B                     	;# 
   708  041C                     	;# 
   709  041D                     	;# 
   710  041E                     	;# 
   711  041F                     	;# 
   712  0493                     	;# 
   713  0494                     	;# 
   714  0495                     	;# 
   715  0496                     	;# 
   716  049A                     	;# 
   717  049B                     	;# 
   718  049C                     	;# 
   719  049D                     	;# 
   720  058C                     	;# 
   721  058C                     	;# 
   722  058D                     	;# 
   723  058E                     	;# 
   724  058E                     	;# 
   725  058F                     	;# 
   726  0590                     	;# 
   727  0590                     	;# 
   728  0591                     	;# 
   729  0592                     	;# 
   730  0592                     	;# 
   731  0593                     	;# 
   732  0594                     	;# 
   733  0594                     	;# 
   734  0595                     	;# 
   735  0596                     	;# 
   736  0596                     	;# 
   737  0597                     	;# 
   738  0598                     	;# 
   739  0599                     	;# 
   740  059A                     	;# 
   741  059B                     	;# 
   742  059B                     	;# 
   743  059C                     	;# 
   744  059D                     	;# 
   745  060C                     	;# 
   746  060C                     	;# 
   747  060D                     	;# 
   748  060E                     	;# 
   749  060F                     	;# 
   750  060F                     	;# 
   751  0610                     	;# 
   752  0611                     	;# 
   753  0612                     	;# 
   754  0613                     	;# 
   755  0614                     	;# 
   756  0617                     	;# 
   757  0617                     	;# 
   758  0618                     	;# 
   759  0619                     	;# 
   760  061A                     	;# 
   761  061A                     	;# 
   762  061B                     	;# 
   763  061C                     	;# 
   764  0691                     	;# 
   765  0692                     	;# 
   766  0693                     	;# 
   767  0694                     	;# 
   768  0695                     	;# 
   769  0696                     	;# 
   770  0697                     	;# 
   771  0699                     	;# 
   772  069A                     	;# 
   773  0711                     	;# 
   774  0712                     	;# 
   775  0713                     	;# 
   776  0714                     	;# 
   777  0715                     	;# 
   778  0718                     	;# 
   779  0718                     	;# 
   780  0719                     	;# 
   781  071A                     	;# 
   782  071A                     	;# 
   783  071B                     	;# 
   784  071C                     	;# 
   785  071D                     	;# 
   786  0791                     	;# 
   787  0791                     	;# 
   788  0792                     	;# 
   789  0793                     	;# 
   790  0793                     	;# 
   791  0794                     	;# 
   792  0795                     	;# 
   793  0795                     	;# 
   794  0796                     	;# 
   795  0797                     	;# 
   796  0797                     	;# 
   797  0798                     	;# 
   798  0799                     	;# 
   799  079A                     	;# 
   800  080C                     	;# 
   801  080C                     	;# 
   802  080D                     	;# 
   803  080E                     	;# 
   804  080E                     	;# 
   805  080F                     	;# 
   806  0810                     	;# 
   807  0810                     	;# 
   808  0811                     	;# 
   809  0812                     	;# 
   810  0812                     	;# 
   811  0813                     	;# 
   812  0814                     	;# 
   813  0815                     	;# 
   814  0816                     	;# 
   815  0817                     	;# 
   816  0818                     	;# 
   817  0819                     	;# 
   818  081A                     	;# 
   819  081A                     	;# 
   820  081B                     	;# 
   821  081C                     	;# 
   822  081C                     	;# 
   823  081D                     	;# 
   824  088C                     	;# 
   825  088D                     	;# 
   826  088E                     	;# 
   827  088F                     	;# 
   828  088F                     	;# 
   829  0890                     	;# 
   830  0891                     	;# 
   831  0892                     	;# 
   832  0893                     	;# 
   833  0893                     	;# 
   834  0894                     	;# 
   835  0895                     	;# 
   836  0896                     	;# 
   837  0897                     	;# 
   838  0897                     	;# 
   839  0898                     	;# 
   840  0899                     	;# 
   841  0D8C                     	;# 
   842  0D8C                     	;# 
   843  0D8D                     	;# 
   844  0D8E                     	;# 
   845  0D8F                     	;# 
   846  0D8F                     	;# 
   847  0D90                     	;# 
   848  0D91                     	;# 
   849  0D92                     	;# 
   850  0D92                     	;# 
   851  0D93                     	;# 
   852  0D94                     	;# 
   853  0D95                     	;# 
   854  0D95                     	;# 
   855  0D96                     	;# 
   856  0D97                     	;# 
   857  0D98                     	;# 
   858  0D99                     	;# 
   859  0D9A                     	;# 
   860  0D9B                     	;# 
   861  0D9C                     	;# 
   862  0D9D                     	;# 
   863  0D9E                     	;# 
   864  0D9E                     	;# 
   865  0D9F                     	;# 
   866  0DA0                     	;# 
   867  0DA1                     	;# 
   868  0DA1                     	;# 
   869  0DA2                     	;# 
   870  0DA3                     	;# 
   871  0DA4                     	;# 
   872  0DA4                     	;# 
   873  0DA5                     	;# 
   874  0DA6                     	;# 
   875  0DA7                     	;# 
   876  0DA7                     	;# 
   877  0DA8                     	;# 
   878  0DA9                     	;# 
   879  0DAA                     	;# 
   880  0DAB                     	;# 
   881  0DAC                     	;# 
   882  0DAD                     	;# 
   883  0DAE                     	;# 
   884  0DAF                     	;# 
   885  0E0F                     	;# 
   886  0E10                     	;# 
   887  0E11                     	;# 
   888  0E12                     	;# 
   889  0E13                     	;# 
   890  0E14                     	;# 
   891  0E15                     	;# 
   892  0E16                     	;# 
   893  0E17                     	;# 
   894  0E18                     	;# 
   895  0E19                     	;# 
   896  0E1A                     	;# 
   897  0E1B                     	;# 
   898  0E1C                     	;# 
   899  0E1D                     	;# 
   900  0E1E                     	;# 
   901  0E1F                     	;# 
   902  0E20                     	;# 
   903  0E21                     	;# 
   904  0E22                     	;# 
   905  0E23                     	;# 
   906  0E24                     	;# 
   907  0E25                     	;# 
   908  0E26                     	;# 
   909  0E27                     	;# 
   910  0E28                     	;# 
   911  0E29                     	;# 
   912  0E2A                     	;# 
   913  0E2B                     	;# 
   914  0E2C                     	;# 
   915  0E2D                     	;# 
   916  0E2E                     	;# 
   917  0E90                     	;# 
   918  0E91                     	;# 
   919  0E92                     	;# 
   920  0E94                     	;# 
   921  0E95                     	;# 
   922  0E9C                     	;# 
   923  0E9D                     	;# 
   924  0E9E                     	;# 
   925  0E9F                     	;# 
   926  0EA0                     	;# 
   927  0EA1                     	;# 
   928  0EA2                     	;# 
   929  0EA3                     	;# 
   930  0EA4                     	;# 
   931  0EA5                     	;# 
   932  0EA6                     	;# 
   933  0EA7                     	;# 
   934  0F0F                     	;# 
   935  0F10                     	;# 
   936  0F11                     	;# 
   937  0F12                     	;# 
   938  0F13                     	;# 
   939  0F14                     	;# 
   940  0F15                     	;# 
   941  0F16                     	;# 
   942  0F17                     	;# 
   943  0F18                     	;# 
   944  0F19                     	;# 
   945  0F1A                     	;# 
   946  0F1B                     	;# 
   947  0F1C                     	;# 
   948  0F1D                     	;# 
   949  0F1E                     	;# 
   950  0F1F                     	;# 
   951  0F20                     	;# 
   952  0F21                     	;# 
   953  0F22                     	;# 
   954  0F23                     	;# 
   955  0F24                     	;# 
   956  0F25                     	;# 
   957  0F26                     	;# 
   958  0F27                     	;# 
   959  0F28                     	;# 
   960  0F29                     	;# 
   961  0F2A                     	;# 
   962  0F2B                     	;# 
   963  0F2C                     	;# 
   964  0F2D                     	;# 
   965  0F2E                     	;# 
   966  0F2F                     	;# 
   967  0F30                     	;# 
   968  0F31                     	;# 
   969  0F32                     	;# 
   970  0F33                     	;# 
   971  0F34                     	;# 
   972  0F35                     	;# 
   973  0F36                     	;# 
   974  0F37                     	;# 
   975  0FE4                     	;# 
   976  0FE5                     	;# 
   977  0FE6                     	;# 
   978  0FE7                     	;# 
   979  0FE8                     	;# 
   980  0FE9                     	;# 
   981  0FEA                     	;# 
   982  0FEB                     	;# 
   983  0FED                     	;# 
   984  0FEE                     	;# 
   985  0FEF                     	;# 
   986  0000                     	;# 
   987  0001                     	;# 
   988  0002                     	;# 
   989  0003                     	;# 
   990  0004                     	;# 
   991  0005                     	;# 
   992  0006                     	;# 
   993  0007                     	;# 
   994  0008                     	;# 
   995  0009                     	;# 
   996  000A                     	;# 
   997  000B                     	;# 
   998  000C                     	;# 
   999  000D                     	;# 
  1000  000E                     	;# 
  1001  0010                     	;# 
  1002  0011                     	;# 
  1003  0012                     	;# 
  1004  0013                     	;# 
  1005  0014                     	;# 
  1006  0015                     	;# 
  1007  0016                     	;# 
  1008  0016                     	;# 
  1009  0017                     	;# 
  1010  0018                     	;# 
  1011  0019                     	;# 
  1012  001A                     	;# 
  1013  001A                     	;# 
  1014  001B                     	;# 
  1015  001B                     	;# 
  1016  001C                     	;# 
  1017  001D                     	;# 
  1018  001E                     	;# 
  1019  001F                     	;# 
  1020  008C                     	;# 
  1021  008D                     	;# 
  1022  008E                     	;# 
  1023  0090                     	;# 
  1024  0091                     	;# 
  1025  0092                     	;# 
  1026  0093                     	;# 
  1027  0094                     	;# 
  1028  0095                     	;# 
  1029  0096                     	;# 
  1030  0098                     	;# 
  1031  0099                     	;# 
  1032  009A                     	;# 
  1033  009B                     	;# 
  1034  009B                     	;# 
  1035  009C                     	;# 
  1036  009D                     	;# 
  1037  009E                     	;# 
  1038  009F                     	;# 
  1039  010C                     	;# 
  1040  010D                     	;# 
  1041  010E                     	;# 
  1042  0111                     	;# 
  1043  0112                     	;# 
  1044  0113                     	;# 
  1045  0114                     	;# 
  1046  0115                     	;# 
  1047  0116                     	;# 
  1048  0117                     	;# 
  1049  0118                     	;# 
  1050  0119                     	;# 
  1051  011C                     	;# 
  1052  018C                     	;# 
  1053  018D                     	;# 
  1054  018E                     	;# 
  1055  0191                     	;# 
  1056  0191                     	;# 
  1057  0192                     	;# 
  1058  0193                     	;# 
  1059  0193                     	;# 
  1060  0194                     	;# 
  1061  0195                     	;# 
  1062  0196                     	;# 
  1063  0197                     	;# 
  1064  0199                     	;# 
  1065  0199                     	;# 
  1066  0199                     	;# 
  1067  019A                     	;# 
  1068  019A                     	;# 
  1069  019A                     	;# 
  1070  019B                     	;# 
  1071  019B                     	;# 
  1072  019B                     	;# 
  1073  019B                     	;# 
  1074  019B                     	;# 
  1075  019C                     	;# 
  1076  019C                     	;# 
  1077  019C                     	;# 
  1078  019D                     	;# 
  1079  019D                     	;# 
  1080  019D                     	;# 
  1081  019E                     	;# 
  1082  019E                     	;# 
  1083  019E                     	;# 
  1084  019F                     	;# 
  1085  019F                     	;# 
  1086  019F                     	;# 
  1087  019F                     	;# 
  1088  019F                     	;# 
  1089  020C                     	;# 
  1090  020D                     	;# 
  1091  020E                     	;# 
  1092  0211                     	;# 
  1093  0211                     	;# 
  1094  0212                     	;# 
  1095  0212                     	;# 
  1096  0213                     	;# 
  1097  0213                     	;# 
  1098  0214                     	;# 
  1099  0214                     	;# 
  1100  0215                     	;# 
  1101  0215                     	;# 
  1102  0215                     	;# 
  1103  0215                     	;# 
  1104  0216                     	;# 
  1105  0216                     	;# 
  1106  0217                     	;# 
  1107  0217                     	;# 
  1108  028C                     	;# 
  1109  028D                     	;# 
  1110  028E                     	;# 
  1111  0291                     	;# 
  1112  0291                     	;# 
  1113  0292                     	;# 
  1114  0293                     	;# 
  1115  0294                     	;# 
  1116  0298                     	;# 
  1117  0298                     	;# 
  1118  0299                     	;# 
  1119  029A                     	;# 
  1120  029B                     	;# 
  1121  029E                     	;# 
  1122  030C                     	;# 
  1123  030D                     	;# 
  1124  030E                     	;# 
  1125  038C                     	;# 
  1126  038D                     	;# 
  1127  038E                     	;# 
  1128  0391                     	;# 
  1129  0392                     	;# 
  1130  0393                     	;# 
  1131  0394                     	;# 
  1132  0395                     	;# 
  1133  0396                     	;# 
  1134  0397                     	;# 
  1135  0398                     	;# 
  1136  0399                     	;# 
  1137  040E                     	;# 
  1138  0413                     	;# 
  1139  0413                     	;# 
  1140  0414                     	;# 
  1141  0414                     	;# 
  1142  0415                     	;# 
  1143  0416                     	;# 
  1144  0417                     	;# 
  1145  0418                     	;# 
  1146  041A                     	;# 
  1147  041A                     	;# 
  1148  041B                     	;# 
  1149  041B                     	;# 
  1150  041C                     	;# 
  1151  041D                     	;# 
  1152  041E                     	;# 
  1153  041F                     	;# 
  1154  0493                     	;# 
  1155  0494                     	;# 
  1156  0495                     	;# 
  1157  0496                     	;# 
  1158  049A                     	;# 
  1159  049B                     	;# 
  1160  049C                     	;# 
  1161  049D                     	;# 
  1162  058C                     	;# 
  1163  058C                     	;# 
  1164  058D                     	;# 
  1165  058E                     	;# 
  1166  058E                     	;# 
  1167  058F                     	;# 
  1168  0590                     	;# 
  1169  0590                     	;# 
  1170  0591                     	;# 
  1171  0592                     	;# 
  1172  0592                     	;# 
  1173  0593                     	;# 
  1174  0594                     	;# 
  1175  0594                     	;# 
  1176  0595                     	;# 
  1177  0596                     	;# 
  1178  0596                     	;# 
  1179  0597                     	;# 
  1180  0598                     	;# 
  1181  0599                     	;# 
  1182  059A                     	;# 
  1183  059B                     	;# 
  1184  059B                     	;# 
  1185  059C                     	;# 
  1186  059D                     	;# 
  1187  060C                     	;# 
  1188  060C                     	;# 
  1189  060D                     	;# 
  1190  060E                     	;# 
  1191  060F                     	;# 
  1192  060F                     	;# 
  1193  0610                     	;# 
  1194  0611                     	;# 
  1195  0612                     	;# 
  1196  0613                     	;# 
  1197  0614                     	;# 
  1198  0617                     	;# 
  1199  0617                     	;# 
  1200  0618                     	;# 
  1201  0619                     	;# 
  1202  061A                     	;# 
  1203  061A                     	;# 
  1204  061B                     	;# 
  1205  061C                     	;# 
  1206  0691                     	;# 
  1207  0692                     	;# 
  1208  0693                     	;# 
  1209  0694                     	;# 
  1210  0695                     	;# 
  1211  0696                     	;# 
  1212  0697                     	;# 
  1213  0699                     	;# 
  1214  069A                     	;# 
  1215  0711                     	;# 
  1216  0712                     	;# 
  1217  0713                     	;# 
  1218  0714                     	;# 
  1219  0715                     	;# 
  1220  0718                     	;# 
  1221  0718                     	;# 
  1222  0719                     	;# 
  1223  071A                     	;# 
  1224  071A                     	;# 
  1225  071B                     	;# 
  1226  071C                     	;# 
  1227  071D                     	;# 
  1228  0791                     	;# 
  1229  0791                     	;# 
  1230  0792                     	;# 
  1231  0793                     	;# 
  1232  0793                     	;# 
  1233  0794                     	;# 
  1234  0795                     	;# 
  1235  0795                     	;# 
  1236  0796                     	;# 
  1237  0797                     	;# 
  1238  0797                     	;# 
  1239  0798                     	;# 
  1240  0799                     	;# 
  1241  079A                     	;# 
  1242  080C                     	;# 
  1243  080C                     	;# 
  1244  080D                     	;# 
  1245  080E                     	;# 
  1246  080E                     	;# 
  1247  080F                     	;# 
  1248  0810                     	;# 
  1249  0810                     	;# 
  1250  0811                     	;# 
  1251  0812                     	;# 
  1252  0812                     	;# 
  1253  0813                     	;# 
  1254  0814                     	;# 
  1255  0815                     	;# 
  1256  0816                     	;# 
  1257  0817                     	;# 
  1258  0818                     	;# 
  1259  0819                     	;# 
  1260  081A                     	;# 
  1261  081A                     	;# 
  1262  081B                     	;# 
  1263  081C                     	;# 
  1264  081C                     	;# 
  1265  081D                     	;# 
  1266  088C                     	;# 
  1267  088D                     	;# 
  1268  088E                     	;# 
  1269  088F                     	;# 
  1270  088F                     	;# 
  1271  0890                     	;# 
  1272  0891                     	;# 
  1273  0892                     	;# 
  1274  0893                     	;# 
  1275  0893                     	;# 
  1276  0894                     	;# 
  1277  0895                     	;# 
  1278  0896                     	;# 
  1279  0897                     	;# 
  1280  0897                     	;# 
  1281  0898                     	;# 
  1282  0899                     	;# 
  1283  0D8C                     	;# 
  1284  0D8C                     	;# 
  1285  0D8D                     	;# 
  1286  0D8E                     	;# 
  1287  0D8F                     	;# 
  1288  0D8F                     	;# 
  1289  0D90                     	;# 
  1290  0D91                     	;# 
  1291  0D92                     	;# 
  1292  0D92                     	;# 
  1293  0D93                     	;# 
  1294  0D94                     	;# 
  1295  0D95                     	;# 
  1296  0D95                     	;# 
  1297  0D96                     	;# 
  1298  0D97                     	;# 
  1299  0D98                     	;# 
  1300  0D99                     	;# 
  1301  0D9A                     	;# 
  1302  0D9B                     	;# 
  1303  0D9C                     	;# 
  1304  0D9D                     	;# 
  1305  0D9E                     	;# 
  1306  0D9E                     	;# 
  1307  0D9F                     	;# 
  1308  0DA0                     	;# 
  1309  0DA1                     	;# 
  1310  0DA1                     	;# 
  1311  0DA2                     	;# 
  1312  0DA3                     	;# 
  1313  0DA4                     	;# 
  1314  0DA4                     	;# 
  1315  0DA5                     	;# 
  1316  0DA6                     	;# 
  1317  0DA7                     	;# 
  1318  0DA7                     	;# 
  1319  0DA8                     	;# 
  1320  0DA9                     	;# 
  1321  0DAA                     	;# 
  1322  0DAB                     	;# 
  1323  0DAC                     	;# 
  1324  0DAD                     	;# 
  1325  0DAE                     	;# 
  1326  0DAF                     	;# 
  1327  0E0F                     	;# 
  1328  0E10                     	;# 
  1329  0E11                     	;# 
  1330  0E12                     	;# 
  1331  0E13                     	;# 
  1332  0E14                     	;# 
  1333  0E15                     	;# 
  1334  0E16                     	;# 
  1335  0E17                     	;# 
  1336  0E18                     	;# 
  1337  0E19                     	;# 
  1338  0E1A                     	;# 
  1339  0E1B                     	;# 
  1340  0E1C                     	;# 
  1341  0E1D                     	;# 
  1342  0E1E                     	;# 
  1343  0E1F                     	;# 
  1344  0E20                     	;# 
  1345  0E21                     	;# 
  1346  0E22                     	;# 
  1347  0E23                     	;# 
  1348  0E24                     	;# 
  1349  0E25                     	;# 
  1350  0E26                     	;# 
  1351  0E27                     	;# 
  1352  0E28                     	;# 
  1353  0E29                     	;# 
  1354  0E2A                     	;# 
  1355  0E2B                     	;# 
  1356  0E2C                     	;# 
  1357  0E2D                     	;# 
  1358  0E2E                     	;# 
  1359  0E90                     	;# 
  1360  0E91                     	;# 
  1361  0E92                     	;# 
  1362  0E94                     	;# 
  1363  0E95                     	;# 
  1364  0E9C                     	;# 
  1365  0E9D                     	;# 
  1366  0E9E                     	;# 
  1367  0E9F                     	;# 
  1368  0EA0                     	;# 
  1369  0EA1                     	;# 
  1370  0EA2                     	;# 
  1371  0EA3                     	;# 
  1372  0EA4                     	;# 
  1373  0EA5                     	;# 
  1374  0EA6                     	;# 
  1375  0EA7                     	;# 
  1376  0F0F                     	;# 
  1377  0F10                     	;# 
  1378  0F11                     	;# 
  1379  0F12                     	;# 
  1380  0F13                     	;# 
  1381  0F14                     	;# 
  1382  0F15                     	;# 
  1383  0F16                     	;# 
  1384  0F17                     	;# 
  1385  0F18                     	;# 
  1386  0F19                     	;# 
  1387  0F1A                     	;# 
  1388  0F1B                     	;# 
  1389  0F1C                     	;# 
  1390  0F1D                     	;# 
  1391  0F1E                     	;# 
  1392  0F1F                     	;# 
  1393  0F20                     	;# 
  1394  0F21                     	;# 
  1395  0F22                     	;# 
  1396  0F23                     	;# 
  1397  0F24                     	;# 
  1398  0F25                     	;# 
  1399  0F26                     	;# 
  1400  0F27                     	;# 
  1401  0F28                     	;# 
  1402  0F29                     	;# 
  1403  0F2A                     	;# 
  1404  0F2B                     	;# 
  1405  0F2C                     	;# 
  1406  0F2D                     	;# 
  1407  0F2E                     	;# 
  1408  0F2F                     	;# 
  1409  0F30                     	;# 
  1410  0F31                     	;# 
  1411  0F32                     	;# 
  1412  0F33                     	;# 
  1413  0F34                     	;# 
  1414  0F35                     	;# 
  1415  0F36                     	;# 
  1416  0F37                     	;# 
  1417  0FE4                     	;# 
  1418  0FE5                     	;# 
  1419  0FE6                     	;# 
  1420  0FE7                     	;# 
  1421  0FE8                     	;# 
  1422  0FE9                     	;# 
  1423  0FEA                     	;# 
  1424  0FEB                     	;# 
  1425  0FED                     	;# 
  1426  0FEE                     	;# 
  1427  0FEF                     	;# 
  1428  0000                     	;# 
  1429  0001                     	;# 
  1430  0002                     	;# 
  1431  0003                     	;# 
  1432  0004                     	;# 
  1433  0005                     	;# 
  1434  0006                     	;# 
  1435  0007                     	;# 
  1436  0008                     	;# 
  1437  0009                     	;# 
  1438  000A                     	;# 
  1439  000B                     	;# 
  1440  000C                     	;# 
  1441  000D                     	;# 
  1442  000E                     	;# 
  1443  0010                     	;# 
  1444  0011                     	;# 
  1445  0012                     	;# 
  1446  0013                     	;# 
  1447  0014                     	;# 
  1448  0015                     	;# 
  1449  0016                     	;# 
  1450  0016                     	;# 
  1451  0017                     	;# 
  1452  0018                     	;# 
  1453  0019                     	;# 
  1454  001A                     	;# 
  1455  001A                     	;# 
  1456  001B                     	;# 
  1457  001B                     	;# 
  1458  001C                     	;# 
  1459  001D                     	;# 
  1460  001E                     	;# 
  1461  001F                     	;# 
  1462  008C                     	;# 
  1463  008D                     	;# 
  1464  008E                     	;# 
  1465  0090                     	;# 
  1466  0091                     	;# 
  1467  0092                     	;# 
  1468  0093                     	;# 
  1469  0094                     	;# 
  1470  0095                     	;# 
  1471  0096                     	;# 
  1472  0098                     	;# 
  1473  0099                     	;# 
  1474  009A                     	;# 
  1475  009B                     	;# 
  1476  009B                     	;# 
  1477  009C                     	;# 
  1478  009D                     	;# 
  1479  009E                     	;# 
  1480  009F                     	;# 
  1481  010C                     	;# 
  1482  010D                     	;# 
  1483  010E                     	;# 
  1484  0111                     	;# 
  1485  0112                     	;# 
  1486  0113                     	;# 
  1487  0114                     	;# 
  1488  0115                     	;# 
  1489  0116                     	;# 
  1490  0117                     	;# 
  1491  0118                     	;# 
  1492  0119                     	;# 
  1493  011C                     	;# 
  1494  018C                     	;# 
  1495  018D                     	;# 
  1496  018E                     	;# 
  1497  0191                     	;# 
  1498  0191                     	;# 
  1499  0192                     	;# 
  1500  0193                     	;# 
  1501  0193                     	;# 
  1502  0194                     	;# 
  1503  0195                     	;# 
  1504  0196                     	;# 
  1505  0197                     	;# 
  1506  0199                     	;# 
  1507  0199                     	;# 
  1508  0199                     	;# 
  1509  019A                     	;# 
  1510  019A                     	;# 
  1511  019A                     	;# 
  1512  019B                     	;# 
  1513  019B                     	;# 
  1514  019B                     	;# 
  1515  019B                     	;# 
  1516  019B                     	;# 
  1517  019C                     	;# 
  1518  019C                     	;# 
  1519  019C                     	;# 
  1520  019D                     	;# 
  1521  019D                     	;# 
  1522  019D                     	;# 
  1523  019E                     	;# 
  1524  019E                     	;# 
  1525  019E                     	;# 
  1526  019F                     	;# 
  1527  019F                     	;# 
  1528  019F                     	;# 
  1529  019F                     	;# 
  1530  019F                     	;# 
  1531  020C                     	;# 
  1532  020D                     	;# 
  1533  020E                     	;# 
  1534  0211                     	;# 
  1535  0211                     	;# 
  1536  0212                     	;# 
  1537  0212                     	;# 
  1538  0213                     	;# 
  1539  0213                     	;# 
  1540  0214                     	;# 
  1541  0214                     	;# 
  1542  0215                     	;# 
  1543  0215                     	;# 
  1544  0215                     	;# 
  1545  0215                     	;# 
  1546  0216                     	;# 
  1547  0216                     	;# 
  1548  0217                     	;# 
  1549  0217                     	;# 
  1550  028C                     	;# 
  1551  028D                     	;# 
  1552  028E                     	;# 
  1553  0291                     	;# 
  1554  0291                     	;# 
  1555  0292                     	;# 
  1556  0293                     	;# 
  1557  0294                     	;# 
  1558  0298                     	;# 
  1559  0298                     	;# 
  1560  0299                     	;# 
  1561  029A                     	;# 
  1562  029B                     	;# 
  1563  029E                     	;# 
  1564  030C                     	;# 
  1565  030D                     	;# 
  1566  030E                     	;# 
  1567  038C                     	;# 
  1568  038D                     	;# 
  1569  038E                     	;# 
  1570  0391                     	;# 
  1571  0392                     	;# 
  1572  0393                     	;# 
  1573  0394                     	;# 
  1574  0395                     	;# 
  1575  0396                     	;# 
  1576  0397                     	;# 
  1577  0398                     	;# 
  1578  0399                     	;# 
  1579  040E                     	;# 
  1580  0413                     	;# 
  1581  0413                     	;# 
  1582  0414                     	;# 
  1583  0414                     	;# 
  1584  0415                     	;# 
  1585  0416                     	;# 
  1586  0417                     	;# 
  1587  0418                     	;# 
  1588  041A                     	;# 
  1589  041A                     	;# 
  1590  041B                     	;# 
  1591  041B                     	;# 
  1592  041C                     	;# 
  1593  041D                     	;# 
  1594  041E                     	;# 
  1595  041F                     	;# 
  1596  0493                     	;# 
  1597  0494                     	;# 
  1598  0495                     	;# 
  1599  0496                     	;# 
  1600  049A                     	;# 
  1601  049B                     	;# 
  1602  049C                     	;# 
  1603  049D                     	;# 
  1604  058C                     	;# 
  1605  058C                     	;# 
  1606  058D                     	;# 
  1607  058E                     	;# 
  1608  058E                     	;# 
  1609  058F                     	;# 
  1610  0590                     	;# 
  1611  0590                     	;# 
  1612  0591                     	;# 
  1613  0592                     	;# 
  1614  0592                     	;# 
  1615  0593                     	;# 
  1616  0594                     	;# 
  1617  0594                     	;# 
  1618  0595                     	;# 
  1619  0596                     	;# 
  1620  0596                     	;# 
  1621  0597                     	;# 
  1622  0598                     	;# 
  1623  0599                     	;# 
  1624  059A                     	;# 
  1625  059B                     	;# 
  1626  059B                     	;# 
  1627  059C                     	;# 
  1628  059D                     	;# 
  1629  060C                     	;# 
  1630  060C                     	;# 
  1631  060D                     	;# 
  1632  060E                     	;# 
  1633  060F                     	;# 
  1634  060F                     	;# 
  1635  0610                     	;# 
  1636  0611                     	;# 
  1637  0612                     	;# 
  1638  0613                     	;# 
  1639  0614                     	;# 
  1640  0617                     	;# 
  1641  0617                     	;# 
  1642  0618                     	;# 
  1643  0619                     	;# 
  1644  061A                     	;# 
  1645  061A                     	;# 
  1646  061B                     	;# 
  1647  061C                     	;# 
  1648  0691                     	;# 
  1649  0692                     	;# 
  1650  0693                     	;# 
  1651  0694                     	;# 
  1652  0695                     	;# 
  1653  0696                     	;# 
  1654  0697                     	;# 
  1655  0699                     	;# 
  1656  069A                     	;# 
  1657  0711                     	;# 
  1658  0712                     	;# 
  1659  0713                     	;# 
  1660  0714                     	;# 
  1661  0715                     	;# 
  1662  0718                     	;# 
  1663  0718                     	;# 
  1664  0719                     	;# 
  1665  071A                     	;# 
  1666  071A                     	;# 
  1667  071B                     	;# 
  1668  071C                     	;# 
  1669  071D                     	;# 
  1670  0791                     	;# 
  1671  0791                     	;# 
  1672  0792                     	;# 
  1673  0793                     	;# 
  1674  0793                     	;# 
  1675  0794                     	;# 
  1676  0795                     	;# 
  1677  0795                     	;# 
  1678  0796                     	;# 
  1679  0797                     	;# 
  1680  0797                     	;# 
  1681  0798                     	;# 
  1682  0799                     	;# 
  1683  079A                     	;# 
  1684  080C                     	;# 
  1685  080C                     	;# 
  1686  080D                     	;# 
  1687  080E                     	;# 
  1688  080E                     	;# 
  1689  080F                     	;# 
  1690  0810                     	;# 
  1691  0810                     	;# 
  1692  0811                     	;# 
  1693  0812                     	;# 
  1694  0812                     	;# 
  1695  0813                     	;# 
  1696  0814                     	;# 
  1697  0815                     	;# 
  1698  0816                     	;# 
  1699  0817                     	;# 
  1700  0818                     	;# 
  1701  0819                     	;# 
  1702  081A                     	;# 
  1703  081A                     	;# 
  1704  081B                     	;# 
  1705  081C                     	;# 
  1706  081C                     	;# 
  1707  081D                     	;# 
  1708  088C                     	;# 
  1709  088D                     	;# 
  1710  088E                     	;# 
  1711  088F                     	;# 
  1712  088F                     	;# 
  1713  0890                     	;# 
  1714  0891                     	;# 
  1715  0892                     	;# 
  1716  0893                     	;# 
  1717  0893                     	;# 
  1718  0894                     	;# 
  1719  0895                     	;# 
  1720  0896                     	;# 
  1721  0897                     	;# 
  1722  0897                     	;# 
  1723  0898                     	;# 
  1724  0899                     	;# 
  1725  0D8C                     	;# 
  1726  0D8C                     	;# 
  1727  0D8D                     	;# 
  1728  0D8E                     	;# 
  1729  0D8F                     	;# 
  1730  0D8F                     	;# 
  1731  0D90                     	;# 
  1732  0D91                     	;# 
  1733  0D92                     	;# 
  1734  0D92                     	;# 
  1735  0D93                     	;# 
  1736  0D94                     	;# 
  1737  0D95                     	;# 
  1738  0D95                     	;# 
  1739  0D96                     	;# 
  1740  0D97                     	;# 
  1741  0D98                     	;# 
  1742  0D99                     	;# 
  1743  0D9A                     	;# 
  1744  0D9B                     	;# 
  1745  0D9C                     	;# 
  1746  0D9D                     	;# 
  1747  0D9E                     	;# 
  1748  0D9E                     	;# 
  1749  0D9F                     	;# 
  1750  0DA0                     	;# 
  1751  0DA1                     	;# 
  1752  0DA1                     	;# 
  1753  0DA2                     	;# 
  1754  0DA3                     	;# 
  1755  0DA4                     	;# 
  1756  0DA4                     	;# 
  1757  0DA5                     	;# 
  1758  0DA6                     	;# 
  1759  0DA7                     	;# 
  1760  0DA7                     	;# 
  1761  0DA8                     	;# 
  1762  0DA9                     	;# 
  1763  0DAA                     	;# 
  1764  0DAB                     	;# 
  1765  0DAC                     	;# 
  1766  0DAD                     	;# 
  1767  0DAE                     	;# 
  1768  0DAF                     	;# 
  1769  0E0F                     	;# 
  1770  0E10                     	;# 
  1771  0E11                     	;# 
  1772  0E12                     	;# 
  1773  0E13                     	;# 
  1774  0E14                     	;# 
  1775  0E15                     	;# 
  1776  0E16                     	;# 
  1777  0E17                     	;# 
  1778  0E18                     	;# 
  1779  0E19                     	;# 
  1780  0E1A                     	;# 
  1781  0E1B                     	;# 
  1782  0E1C                     	;# 
  1783  0E1D                     	;# 
  1784  0E1E                     	;# 
  1785  0E1F                     	;# 
  1786  0E20                     	;# 
  1787  0E21                     	;# 
  1788  0E22                     	;# 
  1789  0E23                     	;# 
  1790  0E24                     	;# 
  1791  0E25                     	;# 
  1792  0E26                     	;# 
  1793  0E27                     	;# 
  1794  0E28                     	;# 
  1795  0E29                     	;# 
  1796  0E2A                     	;# 
  1797  0E2B                     	;# 
  1798  0E2C                     	;# 
  1799  0E2D                     	;# 
  1800  0E2E                     	;# 
  1801  0E90                     	;# 
  1802  0E91                     	;# 
  1803  0E92                     	;# 
  1804  0E94                     	;# 
  1805  0E95                     	;# 
  1806  0E9C                     	;# 
  1807  0E9D                     	;# 
  1808  0E9E                     	;# 
  1809  0E9F                     	;# 
  1810  0EA0                     	;# 
  1811  0EA1                     	;# 
  1812  0EA2                     	;# 
  1813  0EA3                     	;# 
  1814  0EA4                     	;# 
  1815  0EA5                     	;# 
  1816  0EA6                     	;# 
  1817  0EA7                     	;# 
  1818  0F0F                     	;# 
  1819  0F10                     	;# 
  1820  0F11                     	;# 
  1821  0F12                     	;# 
  1822  0F13                     	;# 
  1823  0F14                     	;# 
  1824  0F15                     	;# 
  1825  0F16                     	;# 
  1826  0F17                     	;# 
  1827  0F18                     	;# 
  1828  0F19                     	;# 
  1829  0F1A                     	;# 
  1830  0F1B                     	;# 
  1831  0F1C                     	;# 
  1832  0F1D                     	;# 
  1833  0F1E                     	;# 
  1834  0F1F                     	;# 
  1835  0F20                     	;# 
  1836  0F21                     	;# 
  1837  0F22                     	;# 
  1838  0F23                     	;# 
  1839  0F24                     	;# 
  1840  0F25                     	;# 
  1841  0F26                     	;# 
  1842  0F27                     	;# 
  1843  0F28                     	;# 
  1844  0F29                     	;# 
  1845  0F2A                     	;# 
  1846  0F2B                     	;# 
  1847  0F2C                     	;# 
  1848  0F2D                     	;# 
  1849  0F2E                     	;# 
  1850  0F2F                     	;# 
  1851  0F30                     	;# 
  1852  0F31                     	;# 
  1853  0F32                     	;# 
  1854  0F33                     	;# 
  1855  0F34                     	;# 
  1856  0F35                     	;# 
  1857  0F36                     	;# 
  1858  0F37                     	;# 
  1859  0FE4                     	;# 
  1860  0FE5                     	;# 
  1861  0FE6                     	;# 
  1862  0FE7                     	;# 
  1863  0FE8                     	;# 
  1864  0FE9                     	;# 
  1865  0FEA                     	;# 
  1866  0FEB                     	;# 
  1867  0FED                     	;# 
  1868  0FEE                     	;# 
  1869  0FEF                     	;# 
  1870  0000                     	;# 
  1871  0001                     	;# 
  1872  0002                     	;# 
  1873  0003                     	;# 
  1874  0004                     	;# 
  1875  0005                     	;# 
  1876  0006                     	;# 
  1877  0007                     	;# 
  1878  0008                     	;# 
  1879  0009                     	;# 
  1880  000A                     	;# 
  1881  000B                     	;# 
  1882  000C                     	;# 
  1883  000D                     	;# 
  1884  000E                     	;# 
  1885  0010                     	;# 
  1886  0011                     	;# 
  1887  0012                     	;# 
  1888  0013                     	;# 
  1889  0014                     	;# 
  1890  0015                     	;# 
  1891  0016                     	;# 
  1892  0016                     	;# 
  1893  0017                     	;# 
  1894  0018                     	;# 
  1895  0019                     	;# 
  1896  001A                     	;# 
  1897  001A                     	;# 
  1898  001B                     	;# 
  1899  001B                     	;# 
  1900  001C                     	;# 
  1901  001D                     	;# 
  1902  001E                     	;# 
  1903  001F                     	;# 
  1904  008C                     	;# 
  1905  008D                     	;# 
  1906  008E                     	;# 
  1907  0090                     	;# 
  1908  0091                     	;# 
  1909  0092                     	;# 
  1910  0093                     	;# 
  1911  0094                     	;# 
  1912  0095                     	;# 
  1913  0096                     	;# 
  1914  0098                     	;# 
  1915  0099                     	;# 
  1916  009A                     	;# 
  1917  009B                     	;# 
  1918  009B                     	;# 
  1919  009C                     	;# 
  1920  009D                     	;# 
  1921  009E                     	;# 
  1922  009F                     	;# 
  1923  010C                     	;# 
  1924  010D                     	;# 
  1925  010E                     	;# 
  1926  0111                     	;# 
  1927  0112                     	;# 
  1928  0113                     	;# 
  1929  0114                     	;# 
  1930  0115                     	;# 
  1931  0116                     	;# 
  1932  0117                     	;# 
  1933  0118                     	;# 
  1934  0119                     	;# 
  1935  011C                     	;# 
  1936  018C                     	;# 
  1937  018D                     	;# 
  1938  018E                     	;# 
  1939  0191                     	;# 
  1940  0191                     	;# 
  1941  0192                     	;# 
  1942  0193                     	;# 
  1943  0193                     	;# 
  1944  0194                     	;# 
  1945  0195                     	;# 
  1946  0196                     	;# 
  1947  0197                     	;# 
  1948  0199                     	;# 
  1949  0199                     	;# 
  1950  0199                     	;# 
  1951  019A                     	;# 
  1952  019A                     	;# 
  1953  019A                     	;# 
  1954  019B                     	;# 
  1955  019B                     	;# 
  1956  019B                     	;# 
  1957  019B                     	;# 
  1958  019B                     	;# 
  1959  019C                     	;# 
  1960  019C                     	;# 
  1961  019C                     	;# 
  1962  019D                     	;# 
  1963  019D                     	;# 
  1964  019D                     	;# 
  1965  019E                     	;# 
  1966  019E                     	;# 
  1967  019E                     	;# 
  1968  019F                     	;# 
  1969  019F                     	;# 
  1970  019F                     	;# 
  1971  019F                     	;# 
  1972  019F                     	;# 
  1973  020C                     	;# 
  1974  020D                     	;# 
  1975  020E                     	;# 
  1976  0211                     	;# 
  1977  0211                     	;# 
  1978  0212                     	;# 
  1979  0212                     	;# 
  1980  0213                     	;# 
  1981  0213                     	;# 
  1982  0214                     	;# 
  1983  0214                     	;# 
  1984  0215                     	;# 
  1985  0215                     	;# 
  1986  0215                     	;# 
  1987  0215                     	;# 
  1988  0216                     	;# 
  1989  0216                     	;# 
  1990  0217                     	;# 
  1991  0217                     	;# 
  1992  028C                     	;# 
  1993  028D                     	;# 
  1994  028E                     	;# 
  1995  0291                     	;# 
  1996  0291                     	;# 
  1997  0292                     	;# 
  1998  0293                     	;# 
  1999  0294                     	;# 
  2000  0298                     	;# 
  2001  0298                     	;# 
  2002  0299                     	;# 
  2003  029A                     	;# 
  2004  029B                     	;# 
  2005  029E                     	;# 
  2006  030C                     	;# 
  2007  030D                     	;# 
  2008  030E                     	;# 
  2009  038C                     	;# 
  2010  038D                     	;# 
  2011  038E                     	;# 
  2012  0391                     	;# 
  2013  0392                     	;# 
  2014  0393                     	;# 
  2015  0394                     	;# 
  2016  0395                     	;# 
  2017  0396                     	;# 
  2018  0397                     	;# 
  2019  0398                     	;# 
  2020  0399                     	;# 
  2021  040E                     	;# 
  2022  0413                     	;# 
  2023  0413                     	;# 
  2024  0414                     	;# 
  2025  0414                     	;# 
  2026  0415                     	;# 
  2027  0416                     	;# 
  2028  0417                     	;# 
  2029  0418                     	;# 
  2030  041A                     	;# 
  2031  041A                     	;# 
  2032  041B                     	;# 
  2033  041B                     	;# 
  2034  041C                     	;# 
  2035  041D                     	;# 
  2036  041E                     	;# 
  2037  041F                     	;# 
  2038  0493                     	;# 
  2039  0494                     	;# 
  2040  0495                     	;# 
  2041  0496                     	;# 
  2042  049A                     	;# 
  2043  049B                     	;# 
  2044  049C                     	;# 
  2045  049D                     	;# 
  2046  058C                     	;# 
  2047  058C                     	;# 
  2048  058D                     	;# 
  2049  058E                     	;# 
  2050  058E                     	;# 
  2051  058F                     	;# 
  2052  0590                     	;# 
  2053  0590                     	;# 
  2054  0591                     	;# 
  2055  0592                     	;# 
  2056  0592                     	;# 
  2057  0593                     	;# 
  2058  0594                     	;# 
  2059  0594                     	;# 
  2060  0595                     	;# 
  2061  0596                     	;# 
  2062  0596                     	;# 
  2063  0597                     	;# 
  2064  0598                     	;# 
  2065  0599                     	;# 
  2066  059A                     	;# 
  2067  059B                     	;# 
  2068  059B                     	;# 
  2069  059C                     	;# 
  2070  059D                     	;# 
  2071  060C                     	;# 
  2072  060C                     	;# 
  2073  060D                     	;# 
  2074  060E                     	;# 
  2075  060F                     	;# 
  2076  060F                     	;# 
  2077  0610                     	;# 
  2078  0611                     	;# 
  2079  0612                     	;# 
  2080  0613                     	;# 
  2081  0614                     	;# 
  2082  0617                     	;# 
  2083  0617                     	;# 
  2084  0618                     	;# 
  2085  0619                     	;# 
  2086  061A                     	;# 
  2087  061A                     	;# 
  2088  061B                     	;# 
  2089  061C                     	;# 
  2090  0691                     	;# 
  2091  0692                     	;# 
  2092  0693                     	;# 
  2093  0694                     	;# 
  2094  0695                     	;# 
  2095  0696                     	;# 
  2096  0697                     	;# 
  2097  0699                     	;# 
  2098  069A                     	;# 
  2099  0711                     	;# 
  2100  0712                     	;# 
  2101  0713                     	;# 
  2102  0714                     	;# 
  2103  0715                     	;# 
  2104  0718                     	;# 
  2105  0718                     	;# 
  2106  0719                     	;# 
  2107  071A                     	;# 
  2108  071A                     	;# 
  2109  071B                     	;# 
  2110  071C                     	;# 
  2111  071D                     	;# 
  2112  0791                     	;# 
  2113  0791                     	;# 
  2114  0792                     	;# 
  2115  0793                     	;# 
  2116  0793                     	;# 
  2117  0794                     	;# 
  2118  0795                     	;# 
  2119  0795                     	;# 
  2120  0796                     	;# 
  2121  0797                     	;# 
  2122  0797                     	;# 
  2123  0798                     	;# 
  2124  0799                     	;# 
  2125  079A                     	;# 
  2126  080C                     	;# 
  2127  080C                     	;# 
  2128  080D                     	;# 
  2129  080E                     	;# 
  2130  080E                     	;# 
  2131  080F                     	;# 
  2132  0810                     	;# 
  2133  0810                     	;# 
  2134  0811                     	;# 
  2135  0812                     	;# 
  2136  0812                     	;# 
  2137  0813                     	;# 
  2138  0814                     	;# 
  2139  0815                     	;# 
  2140  0816                     	;# 
  2141  0817                     	;# 
  2142  0818                     	;# 
  2143  0819                     	;# 
  2144  081A                     	;# 
  2145  081A                     	;# 
  2146  081B                     	;# 
  2147  081C                     	;# 
  2148  081C                     	;# 
  2149  081D                     	;# 
  2150  088C                     	;# 
  2151  088D                     	;# 
  2152  088E                     	;# 
  2153  088F                     	;# 
  2154  088F                     	;# 
  2155  0890                     	;# 
  2156  0891                     	;# 
  2157  0892                     	;# 
  2158  0893                     	;# 
  2159  0893                     	;# 
  2160  0894                     	;# 
  2161  0895                     	;# 
  2162  0896                     	;# 
  2163  0897                     	;# 
  2164  0897                     	;# 
  2165  0898                     	;# 
  2166  0899                     	;# 
  2167  0D8C                     	;# 
  2168  0D8C                     	;# 
  2169  0D8D                     	;# 
  2170  0D8E                     	;# 
  2171  0D8F                     	;# 
  2172  0D8F                     	;# 
  2173  0D90                     	;# 
  2174  0D91                     	;# 
  2175  0D92                     	;# 
  2176  0D92                     	;# 
  2177  0D93                     	;# 
  2178  0D94                     	;# 
  2179  0D95                     	;# 
  2180  0D95                     	;# 
  2181  0D96                     	;# 
  2182  0D97                     	;# 
  2183  0D98                     	;# 
  2184  0D99                     	;# 
  2185  0D9A                     	;# 
  2186  0D9B                     	;# 
  2187  0D9C                     	;# 
  2188  0D9D                     	;# 
  2189  0D9E                     	;# 
  2190  0D9E                     	;# 
  2191  0D9F                     	;# 
  2192  0DA0                     	;# 
  2193  0DA1                     	;# 
  2194  0DA1                     	;# 
  2195  0DA2                     	;# 
  2196  0DA3                     	;# 
  2197  0DA4                     	;# 
  2198  0DA4                     	;# 
  2199  0DA5                     	;# 
  2200  0DA6                     	;# 
  2201  0DA7                     	;# 
  2202  0DA7                     	;# 
  2203  0DA8                     	;# 
  2204  0DA9                     	;# 
  2205  0DAA                     	;# 
  2206  0DAB                     	;# 
  2207  0DAC                     	;# 
  2208  0DAD                     	;# 
  2209  0DAE                     	;# 
  2210  0DAF                     	;# 
  2211  0E0F                     	;# 
  2212  0E10                     	;# 
  2213  0E11                     	;# 
  2214  0E12                     	;# 
  2215  0E13                     	;# 
  2216  0E14                     	;# 
  2217  0E15                     	;# 
  2218  0E16                     	;# 
  2219  0E17                     	;# 
  2220  0E18                     	;# 
  2221  0E19                     	;# 
  2222  0E1A                     	;# 
  2223  0E1B                     	;# 
  2224  0E1C                     	;# 
  2225  0E1D                     	;# 
  2226  0E1E                     	;# 
  2227  0E1F                     	;# 
  2228  0E20                     	;# 
  2229  0E21                     	;# 
  2230  0E22                     	;# 
  2231  0E23                     	;# 
  2232  0E24                     	;# 
  2233  0E25                     	;# 
  2234  0E26                     	;# 
  2235  0E27                     	;# 
  2236  0E28                     	;# 
  2237  0E29                     	;# 
  2238  0E2A                     	;# 
  2239  0E2B                     	;# 
  2240  0E2C                     	;# 
  2241  0E2D                     	;# 
  2242  0E2E                     	;# 
  2243  0E90                     	;# 
  2244  0E91                     	;# 
  2245  0E92                     	;# 
  2246  0E94                     	;# 
  2247  0E95                     	;# 
  2248  0E9C                     	;# 
  2249  0E9D                     	;# 
  2250  0E9E                     	;# 
  2251  0E9F                     	;# 
  2252  0EA0                     	;# 
  2253  0EA1                     	;# 
  2254  0EA2                     	;# 
  2255  0EA3                     	;# 
  2256  0EA4                     	;# 
  2257  0EA5                     	;# 
  2258  0EA6                     	;# 
  2259  0EA7                     	;# 
  2260  0F0F                     	;# 
  2261  0F10                     	;# 
  2262  0F11                     	;# 
  2263  0F12                     	;# 
  2264  0F13                     	;# 
  2265  0F14                     	;# 
  2266  0F15                     	;# 
  2267  0F16                     	;# 
  2268  0F17                     	;# 
  2269  0F18                     	;# 
  2270  0F19                     	;# 
  2271  0F1A                     	;# 
  2272  0F1B                     	;# 
  2273  0F1C                     	;# 
  2274  0F1D                     	;# 
  2275  0F1E                     	;# 
  2276  0F1F                     	;# 
  2277  0F20                     	;# 
  2278  0F21                     	;# 
  2279  0F22                     	;# 
  2280  0F23                     	;# 
  2281  0F24                     	;# 
  2282  0F25                     	;# 
  2283  0F26                     	;# 
  2284  0F27                     	;# 
  2285  0F28                     	;# 
  2286  0F29                     	;# 
  2287  0F2A                     	;# 
  2288  0F2B                     	;# 
  2289  0F2C                     	;# 
  2290  0F2D                     	;# 
  2291  0F2E                     	;# 
  2292  0F2F                     	;# 
  2293  0F30                     	;# 
  2294  0F31                     	;# 
  2295  0F32                     	;# 
  2296  0F33                     	;# 
  2297  0F34                     	;# 
  2298  0F35                     	;# 
  2299  0F36                     	;# 
  2300  0F37                     	;# 
  2301  0FE4                     	;# 
  2302  0FE5                     	;# 
  2303  0FE6                     	;# 
  2304  0FE7                     	;# 
  2305  0FE8                     	;# 
  2306  0FE9                     	;# 
  2307  0FEA                     	;# 
  2308  0FEB                     	;# 
  2309  0FED                     	;# 
  2310  0FEE                     	;# 
  2311  0FEF                     	;# 
  2312  0000                     	;# 
  2313  0001                     	;# 
  2314  0002                     	;# 
  2315  0003                     	;# 
  2316  0004                     	;# 
  2317  0005                     	;# 
  2318  0006                     	;# 
  2319  0007                     	;# 
  2320  0008                     	;# 
  2321  0009                     	;# 
  2322  000A                     	;# 
  2323  000B                     	;# 
  2324  000C                     	;# 
  2325  000D                     	;# 
  2326  000E                     	;# 
  2327  0010                     	;# 
  2328  0011                     	;# 
  2329  0012                     	;# 
  2330  0013                     	;# 
  2331  0014                     	;# 
  2332  0015                     	;# 
  2333  0016                     	;# 
  2334  0016                     	;# 
  2335  0017                     	;# 
  2336  0018                     	;# 
  2337  0019                     	;# 
  2338  001A                     	;# 
  2339  001A                     	;# 
  2340  001B                     	;# 
  2341  001B                     	;# 
  2342  001C                     	;# 
  2343  001D                     	;# 
  2344  001E                     	;# 
  2345  001F                     	;# 
  2346  008C                     	;# 
  2347  008D                     	;# 
  2348  008E                     	;# 
  2349  0090                     	;# 
  2350  0091                     	;# 
  2351  0092                     	;# 
  2352  0093                     	;# 
  2353  0094                     	;# 
  2354  0095                     	;# 
  2355  0096                     	;# 
  2356  0098                     	;# 
  2357  0099                     	;# 
  2358  009A                     	;# 
  2359  009B                     	;# 
  2360  009B                     	;# 
  2361  009C                     	;# 
  2362  009D                     	;# 
  2363  009E                     	;# 
  2364  009F                     	;# 
  2365  010C                     	;# 
  2366  010D                     	;# 
  2367  010E                     	;# 
  2368  0111                     	;# 
  2369  0112                     	;# 
  2370  0113                     	;# 
  2371  0114                     	;# 
  2372  0115                     	;# 
  2373  0116                     	;# 
  2374  0117                     	;# 
  2375  0118                     	;# 
  2376  0119                     	;# 
  2377  011C                     	;# 
  2378  018C                     	;# 
  2379  018D                     	;# 
  2380  018E                     	;# 
  2381  0191                     	;# 
  2382  0191                     	;# 
  2383  0192                     	;# 
  2384  0193                     	;# 
  2385  0193                     	;# 
  2386  0194                     	;# 
  2387  0195                     	;# 
  2388  0196                     	;# 
  2389  0197                     	;# 
  2390  0199                     	;# 
  2391  0199                     	;# 
  2392  0199                     	;# 
  2393  019A                     	;# 
  2394  019A                     	;# 
  2395  019A                     	;# 
  2396  019B                     	;# 
  2397  019B                     	;# 
  2398  019B                     	;# 
  2399  019B                     	;# 
  2400  019B                     	;# 
  2401  019C                     	;# 
  2402  019C                     	;# 
  2403  019C                     	;# 
  2404  019D                     	;# 
  2405  019D                     	;# 
  2406  019D                     	;# 
  2407  019E                     	;# 
  2408  019E                     	;# 
  2409  019E                     	;# 
  2410  019F                     	;# 
  2411  019F                     	;# 
  2412  019F                     	;# 
  2413  019F                     	;# 
  2414  019F                     	;# 
  2415  020C                     	;# 
  2416  020D                     	;# 
  2417  020E                     	;# 
  2418  0211                     	;# 
  2419  0211                     	;# 
  2420  0212                     	;# 
  2421  0212                     	;# 
  2422  0213                     	;# 
  2423  0213                     	;# 
  2424  0214                     	;# 
  2425  0214                     	;# 
  2426  0215                     	;# 
  2427  0215                     	;# 
  2428  0215                     	;# 
  2429  0215                     	;# 
  2430  0216                     	;# 
  2431  0216                     	;# 
  2432  0217                     	;# 
  2433  0217                     	;# 
  2434  028C                     	;# 
  2435  028D                     	;# 
  2436  028E                     	;# 
  2437  0291                     	;# 
  2438  0291                     	;# 
  2439  0292                     	;# 
  2440  0293                     	;# 
  2441  0294                     	;# 
  2442  0298                     	;# 
  2443  0298                     	;# 
  2444  0299                     	;# 
  2445  029A                     	;# 
  2446  029B                     	;# 
  2447  029E                     	;# 
  2448  030C                     	;# 
  2449  030D                     	;# 
  2450  030E                     	;# 
  2451  038C                     	;# 
  2452  038D                     	;# 
  2453  038E                     	;# 
  2454  0391                     	;# 
  2455  0392                     	;# 
  2456  0393                     	;# 
  2457  0394                     	;# 
  2458  0395                     	;# 
  2459  0396                     	;# 
  2460  0397                     	;# 
  2461  0398                     	;# 
  2462  0399                     	;# 
  2463  040E                     	;# 
  2464  0413                     	;# 
  2465  0413                     	;# 
  2466  0414                     	;# 
  2467  0414                     	;# 
  2468  0415                     	;# 
  2469  0416                     	;# 
  2470  0417                     	;# 
  2471  0418                     	;# 
  2472  041A                     	;# 
  2473  041A                     	;# 
  2474  041B                     	;# 
  2475  041B                     	;# 
  2476  041C                     	;# 
  2477  041D                     	;# 
  2478  041E                     	;# 
  2479  041F                     	;# 
  2480  0493                     	;# 
  2481  0494                     	;# 
  2482  0495                     	;# 
  2483  0496                     	;# 
  2484  049A                     	;# 
  2485  049B                     	;# 
  2486  049C                     	;# 
  2487  049D                     	;# 
  2488  058C                     	;# 
  2489  058C                     	;# 
  2490  058D                     	;# 
  2491  058E                     	;# 
  2492  058E                     	;# 
  2493  058F                     	;# 
  2494  0590                     	;# 
  2495  0590                     	;# 
  2496  0591                     	;# 
  2497  0592                     	;# 
  2498  0592                     	;# 
  2499  0593                     	;# 
  2500  0594                     	;# 
  2501  0594                     	;# 
  2502  0595                     	;# 
  2503  0596                     	;# 
  2504  0596                     	;# 
  2505  0597                     	;# 
  2506  0598                     	;# 
  2507  0599                     	;# 
  2508  059A                     	;# 
  2509  059B                     	;# 
  2510  059B                     	;# 
  2511  059C                     	;# 
  2512  059D                     	;# 
  2513  060C                     	;# 
  2514  060C                     	;# 
  2515  060D                     	;# 
  2516  060E                     	;# 
  2517  060F                     	;# 
  2518  060F                     	;# 
  2519  0610                     	;# 
  2520  0611                     	;# 
  2521  0612                     	;# 
  2522  0613                     	;# 
  2523  0614                     	;# 
  2524  0617                     	;# 
  2525  0617                     	;# 
  2526  0618                     	;# 
  2527  0619                     	;# 
  2528  061A                     	;# 
  2529  061A                     	;# 
  2530  061B                     	;# 
  2531  061C                     	;# 
  2532  0691                     	;# 
  2533  0692                     	;# 
  2534  0693                     	;# 
  2535  0694                     	;# 
  2536  0695                     	;# 
  2537  0696                     	;# 
  2538  0697                     	;# 
  2539  0699                     	;# 
  2540  069A                     	;# 
  2541  0711                     	;# 
  2542  0712                     	;# 
  2543  0713                     	;# 
  2544  0714                     	;# 
  2545  0715                     	;# 
  2546  0718                     	;# 
  2547  0718                     	;# 
  2548  0719                     	;# 
  2549  071A                     	;# 
  2550  071A                     	;# 
  2551  071B                     	;# 
  2552  071C                     	;# 
  2553  071D                     	;# 
  2554  0791                     	;# 
  2555  0791                     	;# 
  2556  0792                     	;# 
  2557  0793                     	;# 
  2558  0793                     	;# 
  2559  0794                     	;# 
  2560  0795                     	;# 
  2561  0795                     	;# 
  2562  0796                     	;# 
  2563  0797                     	;# 
  2564  0797                     	;# 
  2565  0798                     	;# 
  2566  0799                     	;# 
  2567  079A                     	;# 
  2568  080C                     	;# 
  2569  080C                     	;# 
  2570  080D                     	;# 
  2571  080E                     	;# 
  2572  080E                     	;# 
  2573  080F                     	;# 
  2574  0810                     	;# 
  2575  0810                     	;# 
  2576  0811                     	;# 
  2577  0812                     	;# 
  2578  0812                     	;# 
  2579  0813                     	;# 
  2580  0814                     	;# 
  2581  0815                     	;# 
  2582  0816                     	;# 
  2583  0817                     	;# 
  2584  0818                     	;# 
  2585  0819                     	;# 
  2586  081A                     	;# 
  2587  081A                     	;# 
  2588  081B                     	;# 
  2589  081C                     	;# 
  2590  081C                     	;# 
  2591  081D                     	;# 
  2592  088C                     	;# 
  2593  088D                     	;# 
  2594  088E                     	;# 
  2595  088F                     	;# 
  2596  088F                     	;# 
  2597  0890                     	;# 
  2598  0891                     	;# 
  2599  0892                     	;# 
  2600  0893                     	;# 
  2601  0893                     	;# 
  2602  0894                     	;# 
  2603  0895                     	;# 
  2604  0896                     	;# 
  2605  0897                     	;# 
  2606  0897                     	;# 
  2607  0898                     	;# 
  2608  0899                     	;# 
  2609  0D8C                     	;# 
  2610  0D8C                     	;# 
  2611  0D8D                     	;# 
  2612  0D8E                     	;# 
  2613  0D8F                     	;# 
  2614  0D8F                     	;# 
  2615  0D90                     	;# 
  2616  0D91                     	;# 
  2617  0D92                     	;# 
  2618  0D92                     	;# 
  2619  0D93                     	;# 
  2620  0D94                     	;# 
  2621  0D95                     	;# 
  2622  0D95                     	;# 
  2623  0D96                     	;# 
  2624  0D97                     	;# 
  2625  0D98                     	;# 
  2626  0D99                     	;# 
  2627  0D9A                     	;# 
  2628  0D9B                     	;# 
  2629  0D9C                     	;# 
  2630  0D9D                     	;# 
  2631  0D9E                     	;# 
  2632  0D9E                     	;# 
  2633  0D9F                     	;# 
  2634  0DA0                     	;# 
  2635  0DA1                     	;# 
  2636  0DA1                     	;# 
  2637  0DA2                     	;# 
  2638  0DA3                     	;# 
  2639  0DA4                     	;# 
  2640  0DA4                     	;# 
  2641  0DA5                     	;# 
  2642  0DA6                     	;# 
  2643  0DA7                     	;# 
  2644  0DA7                     	;# 
  2645  0DA8                     	;# 
  2646  0DA9                     	;# 
  2647  0DAA                     	;# 
  2648  0DAB                     	;# 
  2649  0DAC                     	;# 
  2650  0DAD                     	;# 
  2651  0DAE                     	;# 
  2652  0DAF                     	;# 
  2653  0E0F                     	;# 
  2654  0E10                     	;# 
  2655  0E11                     	;# 
  2656  0E12                     	;# 
  2657  0E13                     	;# 
  2658  0E14                     	;# 
  2659  0E15                     	;# 
  2660  0E16                     	;# 
  2661  0E17                     	;# 
  2662  0E18                     	;# 
  2663  0E19                     	;# 
  2664  0E1A                     	;# 
  2665  0E1B                     	;# 
  2666  0E1C                     	;# 
  2667  0E1D                     	;# 
  2668  0E1E                     	;# 
  2669  0E1F                     	;# 
  2670  0E20                     	;# 
  2671  0E21                     	;# 
  2672  0E22                     	;# 
  2673  0E23                     	;# 
  2674  0E24                     	;# 
  2675  0E25                     	;# 
  2676  0E26                     	;# 
  2677  0E27                     	;# 
  2678  0E28                     	;# 
  2679  0E29                     	;# 
  2680  0E2A                     	;# 
  2681  0E2B                     	;# 
  2682  0E2C                     	;# 
  2683  0E2D                     	;# 
  2684  0E2E                     	;# 
  2685  0E90                     	;# 
  2686  0E91                     	;# 
  2687  0E92                     	;# 
  2688  0E94                     	;# 
  2689  0E95                     	;# 
  2690  0E9C                     	;# 
  2691  0E9D                     	;# 
  2692  0E9E                     	;# 
  2693  0E9F                     	;# 
  2694  0EA0                     	;# 
  2695  0EA1                     	;# 
  2696  0EA2                     	;# 
  2697  0EA3                     	;# 
  2698  0EA4                     	;# 
  2699  0EA5                     	;# 
  2700  0EA6                     	;# 
  2701  0EA7                     	;# 
  2702  0F0F                     	;# 
  2703  0F10                     	;# 
  2704  0F11                     	;# 
  2705  0F12                     	;# 
  2706  0F13                     	;# 
  2707  0F14                     	;# 
  2708  0F15                     	;# 
  2709  0F16                     	;# 
  2710  0F17                     	;# 
  2711  0F18                     	;# 
  2712  0F19                     	;# 
  2713  0F1A                     	;# 
  2714  0F1B                     	;# 
  2715  0F1C                     	;# 
  2716  0F1D                     	;# 
  2717  0F1E                     	;# 
  2718  0F1F                     	;# 
  2719  0F20                     	;# 
  2720  0F21                     	;# 
  2721  0F22                     	;# 
  2722  0F23                     	;# 
  2723  0F24                     	;# 
  2724  0F25                     	;# 
  2725  0F26                     	;# 
  2726  0F27                     	;# 
  2727  0F28                     	;# 
  2728  0F29                     	;# 
  2729  0F2A                     	;# 
  2730  0F2B                     	;# 
  2731  0F2C                     	;# 
  2732  0F2D                     	;# 
  2733  0F2E                     	;# 
  2734  0F2F                     	;# 
  2735  0F30                     	;# 
  2736  0F31                     	;# 
  2737  0F32                     	;# 
  2738  0F33                     	;# 
  2739  0F34                     	;# 
  2740  0F35                     	;# 
  2741  0F36                     	;# 
  2742  0F37                     	;# 
  2743  0FE4                     	;# 
  2744  0FE5                     	;# 
  2745  0FE6                     	;# 
  2746  0FE7                     	;# 
  2747  0FE8                     	;# 
  2748  0FE9                     	;# 
  2749  0FEA                     	;# 
  2750  0FEB                     	;# 
  2751  0FED                     	;# 
  2752  0FEE                     	;# 
  2753  0FEF                     	;# 
  2754  0000                     	;# 
  2755  0001                     	;# 
  2756  0002                     	;# 
  2757  0003                     	;# 
  2758  0004                     	;# 
  2759  0005                     	;# 
  2760  0006                     	;# 
  2761  0007                     	;# 
  2762  0008                     	;# 
  2763  0009                     	;# 
  2764  000A                     	;# 
  2765  000B                     	;# 
  2766  000C                     	;# 
  2767  000D                     	;# 
  2768  000E                     	;# 
  2769  0010                     	;# 
  2770  0011                     	;# 
  2771  0012                     	;# 
  2772  0013                     	;# 
  2773  0014                     	;# 
  2774  0015                     	;# 
  2775  0016                     	;# 
  2776  0016                     	;# 
  2777  0017                     	;# 
  2778  0018                     	;# 
  2779  0019                     	;# 
  2780  001A                     	;# 
  2781  001A                     	;# 
  2782  001B                     	;# 
  2783  001B                     	;# 
  2784  001C                     	;# 
  2785  001D                     	;# 
  2786  001E                     	;# 
  2787  001F                     	;# 
  2788  008C                     	;# 
  2789  008D                     	;# 
  2790  008E                     	;# 
  2791  0090                     	;# 
  2792  0091                     	;# 
  2793  0092                     	;# 
  2794  0093                     	;# 
  2795  0094                     	;# 
  2796  0095                     	;# 
  2797  0096                     	;# 
  2798  0098                     	;# 
  2799  0099                     	;# 
  2800  009A                     	;# 
  2801  009B                     	;# 
  2802  009B                     	;# 
  2803  009C                     	;# 
  2804  009D                     	;# 
  2805  009E                     	;# 
  2806  009F                     	;# 
  2807  010C                     	;# 
  2808  010D                     	;# 
  2809  010E                     	;# 
  2810  0111                     	;# 
  2811  0112                     	;# 
  2812  0113                     	;# 
  2813  0114                     	;# 
  2814  0115                     	;# 
  2815  0116                     	;# 
  2816  0117                     	;# 
  2817  0118                     	;# 
  2818  0119                     	;# 
  2819  011C                     	;# 
  2820  018C                     	;# 
  2821  018D                     	;# 
  2822  018E                     	;# 
  2823  0191                     	;# 
  2824  0191                     	;# 
  2825  0192                     	;# 
  2826  0193                     	;# 
  2827  0193                     	;# 
  2828  0194                     	;# 
  2829  0195                     	;# 
  2830  0196                     	;# 
  2831  0197                     	;# 
  2832  0199                     	;# 
  2833  0199                     	;# 
  2834  0199                     	;# 
  2835  019A                     	;# 
  2836  019A                     	;# 
  2837  019A                     	;# 
  2838  019B                     	;# 
  2839  019B                     	;# 
  2840  019B                     	;# 
  2841  019B                     	;# 
  2842  019B                     	;# 
  2843  019C                     	;# 
  2844  019C                     	;# 
  2845  019C                     	;# 
  2846  019D                     	;# 
  2847  019D                     	;# 
  2848  019D                     	;# 
  2849  019E                     	;# 
  2850  019E                     	;# 
  2851  019E                     	;# 
  2852  019F                     	;# 
  2853  019F                     	;# 
  2854  019F                     	;# 
  2855  019F                     	;# 
  2856  019F                     	;# 
  2857  020C                     	;# 
  2858  020D                     	;# 
  2859  020E                     	;# 
  2860  0211                     	;# 
  2861  0211                     	;# 
  2862  0212                     	;# 
  2863  0212                     	;# 
  2864  0213                     	;# 
  2865  0213                     	;# 
  2866  0214                     	;# 
  2867  0214                     	;# 
  2868  0215                     	;# 
  2869  0215                     	;# 
  2870  0215                     	;# 
  2871  0215                     	;# 
  2872  0216                     	;# 
  2873  0216                     	;# 
  2874  0217                     	;# 
  2875  0217                     	;# 
  2876  028C                     	;# 
  2877  028D                     	;# 
  2878  028E                     	;# 
  2879  0291                     	;# 
  2880  0291                     	;# 
  2881  0292                     	;# 
  2882  0293                     	;# 
  2883  0294                     	;# 
  2884  0298                     	;# 
  2885  0298                     	;# 
  2886  0299                     	;# 
  2887  029A                     	;# 
  2888  029B                     	;# 
  2889  029E                     	;# 
  2890  030C                     	;# 
  2891  030D                     	;# 
  2892  030E                     	;# 
  2893  038C                     	;# 
  2894  038D                     	;# 
  2895  038E                     	;# 
  2896  0391                     	;# 
  2897  0392                     	;# 
  2898  0393                     	;# 
  2899  0394                     	;# 
  2900  0395                     	;# 
  2901  0396                     	;# 
  2902  0397                     	;# 
  2903  0398                     	;# 
  2904  0399                     	;# 
  2905  040E                     	;# 
  2906  0413                     	;# 
  2907  0413                     	;# 
  2908  0414                     	;# 
  2909  0414                     	;# 
  2910  0415                     	;# 
  2911  0416                     	;# 
  2912  0417                     	;# 
  2913  0418                     	;# 
  2914  041A                     	;# 
  2915  041A                     	;# 
  2916  041B                     	;# 
  2917  041B                     	;# 
  2918  041C                     	;# 
  2919  041D                     	;# 
  2920  041E                     	;# 
  2921  041F                     	;# 
  2922  0493                     	;# 
  2923  0494                     	;# 
  2924  0495                     	;# 
  2925  0496                     	;# 
  2926  049A                     	;# 
  2927  049B                     	;# 
  2928  049C                     	;# 
  2929  049D                     	;# 
  2930  058C                     	;# 
  2931  058C                     	;# 
  2932  058D                     	;# 
  2933  058E                     	;# 
  2934  058E                     	;# 
  2935  058F                     	;# 
  2936  0590                     	;# 
  2937  0590                     	;# 
  2938  0591                     	;# 
  2939  0592                     	;# 
  2940  0592                     	;# 
  2941  0593                     	;# 
  2942  0594                     	;# 
  2943  0594                     	;# 
  2944  0595                     	;# 
  2945  0596                     	;# 
  2946  0596                     	;# 
  2947  0597                     	;# 
  2948  0598                     	;# 
  2949  0599                     	;# 
  2950  059A                     	;# 
  2951  059B                     	;# 
  2952  059B                     	;# 
  2953  059C                     	;# 
  2954  059D                     	;# 
  2955  060C                     	;# 
  2956  060C                     	;# 
  2957  060D                     	;# 
  2958  060E                     	;# 
  2959  060F                     	;# 
  2960  060F                     	;# 
  2961  0610                     	;# 
  2962  0611                     	;# 
  2963  0612                     	;# 
  2964  0613                     	;# 
  2965  0614                     	;# 
  2966  0617                     	;# 
  2967  0617                     	;# 
  2968  0618                     	;# 
  2969  0619                     	;# 
  2970  061A                     	;# 
  2971  061A                     	;# 
  2972  061B                     	;# 
  2973  061C                     	;# 
  2974  0691                     	;# 
  2975  0692                     	;# 
  2976  0693                     	;# 
  2977  0694                     	;# 
  2978  0695                     	;# 
  2979  0696                     	;# 
  2980  0697                     	;# 
  2981  0699                     	;# 
  2982  069A                     	;# 
  2983  0711                     	;# 
  2984  0712                     	;# 
  2985  0713                     	;# 
  2986  0714                     	;# 
  2987  0715                     	;# 
  2988  0718                     	;# 
  2989  0718                     	;# 
  2990  0719                     	;# 
  2991  071A                     	;# 
  2992  071A                     	;# 
  2993  071B                     	;# 
  2994  071C                     	;# 
  2995  071D                     	;# 
  2996  0791                     	;# 
  2997  0791                     	;# 
  2998  0792                     	;# 
  2999  0793                     	;# 
  3000  0793                     	;# 
  3001  0794                     	;# 
  3002  0795                     	;# 
  3003  0795                     	;# 
  3004  0796                     	;# 
  3005  0797                     	;# 
  3006  0797                     	;# 
  3007  0798                     	;# 
  3008  0799                     	;# 
  3009  079A                     	;# 
  3010  080C                     	;# 
  3011  080C                     	;# 
  3012  080D                     	;# 
  3013  080E                     	;# 
  3014  080E                     	;# 
  3015  080F                     	;# 
  3016  0810                     	;# 
  3017  0810                     	;# 
  3018  0811                     	;# 
  3019  0812                     	;# 
  3020  0812                     	;# 
  3021  0813                     	;# 
  3022  0814                     	;# 
  3023  0815                     	;# 
  3024  0816                     	;# 
  3025  0817                     	;# 
  3026  0818                     	;# 
  3027  0819                     	;# 
  3028  081A                     	;# 
  3029  081A                     	;# 
  3030  081B                     	;# 
  3031  081C                     	;# 
  3032  081C                     	;# 
  3033  081D                     	;# 
  3034  088C                     	;# 
  3035  088D                     	;# 
  3036  088E                     	;# 
  3037  088F                     	;# 
  3038  088F                     	;# 
  3039  0890                     	;# 
  3040  0891                     	;# 
  3041  0892                     	;# 
  3042  0893                     	;# 
  3043  0893                     	;# 
  3044  0894                     	;# 
  3045  0895                     	;# 
  3046  0896                     	;# 
  3047  0897                     	;# 
  3048  0897                     	;# 
  3049  0898                     	;# 
  3050  0899                     	;# 
  3051  0D8C                     	;# 
  3052  0D8C                     	;# 
  3053  0D8D                     	;# 
  3054  0D8E                     	;# 
  3055  0D8F                     	;# 
  3056  0D8F                     	;# 
  3057  0D90                     	;# 
  3058  0D91                     	;# 
  3059  0D92                     	;# 
  3060  0D92                     	;# 
  3061  0D93                     	;# 
  3062  0D94                     	;# 
  3063  0D95                     	;# 
  3064  0D95                     	;# 
  3065  0D96                     	;# 
  3066  0D97                     	;# 
  3067  0D98                     	;# 
  3068  0D99                     	;# 
  3069  0D9A                     	;# 
  3070  0D9B                     	;# 
  3071  0D9C                     	;# 
  3072  0D9D                     	;# 
  3073  0D9E                     	;# 
  3074  0D9E                     	;# 
  3075  0D9F                     	;# 
  3076  0DA0                     	;# 
  3077  0DA1                     	;# 
  3078  0DA1                     	;# 
  3079  0DA2                     	;# 
  3080  0DA3                     	;# 
  3081  0DA4                     	;# 
  3082  0DA4                     	;# 
  3083  0DA5                     	;# 
  3084  0DA6                     	;# 
  3085  0DA7                     	;# 
  3086  0DA7                     	;# 
  3087  0DA8                     	;# 
  3088  0DA9                     	;# 
  3089  0DAA                     	;# 
  3090  0DAB                     	;# 
  3091  0DAC                     	;# 
  3092  0DAD                     	;# 
  3093  0DAE                     	;# 
  3094  0DAF                     	;# 
  3095  0E0F                     	;# 
  3096  0E10                     	;# 
  3097  0E11                     	;# 
  3098  0E12                     	;# 
  3099  0E13                     	;# 
  3100  0E14                     	;# 
  3101  0E15                     	;# 
  3102  0E16                     	;# 
  3103  0E17                     	;# 
  3104  0E18                     	;# 
  3105  0E19                     	;# 
  3106  0E1A                     	;# 
  3107  0E1B                     	;# 
  3108  0E1C                     	;# 
  3109  0E1D                     	;# 
  3110  0E1E                     	;# 
  3111  0E1F                     	;# 
  3112  0E20                     	;# 
  3113  0E21                     	;# 
  3114  0E22                     	;# 
  3115  0E23                     	;# 
  3116  0E24                     	;# 
  3117  0E25                     	;# 
  3118  0E26                     	;# 
  3119  0E27                     	;# 
  3120  0E28                     	;# 
  3121  0E29                     	;# 
  3122  0E2A                     	;# 
  3123  0E2B                     	;# 
  3124  0E2C                     	;# 
  3125  0E2D                     	;# 
  3126  0E2E                     	;# 
  3127  0E90                     	;# 
  3128  0E91                     	;# 
  3129  0E92                     	;# 
  3130  0E94                     	;# 
  3131  0E95                     	;# 
  3132  0E9C                     	;# 
  3133  0E9D                     	;# 
  3134  0E9E                     	;# 
  3135  0E9F                     	;# 
  3136  0EA0                     	;# 
  3137  0EA1                     	;# 
  3138  0EA2                     	;# 
  3139  0EA3                     	;# 
  3140  0EA4                     	;# 
  3141  0EA5                     	;# 
  3142  0EA6                     	;# 
  3143  0EA7                     	;# 
  3144  0F0F                     	;# 
  3145  0F10                     	;# 
  3146  0F11                     	;# 
  3147  0F12                     	;# 
  3148  0F13                     	;# 
  3149  0F14                     	;# 
  3150  0F15                     	;# 
  3151  0F16                     	;# 
  3152  0F17                     	;# 
  3153  0F18                     	;# 
  3154  0F19                     	;# 
  3155  0F1A                     	;# 
  3156  0F1B                     	;# 
  3157  0F1C                     	;# 
  3158  0F1D                     	;# 
  3159  0F1E                     	;# 
  3160  0F1F                     	;# 
  3161  0F20                     	;# 
  3162  0F21                     	;# 
  3163  0F22                     	;# 
  3164  0F23                     	;# 
  3165  0F24                     	;# 
  3166  0F25                     	;# 
  3167  0F26                     	;# 
  3168  0F27                     	;# 
  3169  0F28                     	;# 
  3170  0F29                     	;# 
  3171  0F2A                     	;# 
  3172  0F2B                     	;# 
  3173  0F2C                     	;# 
  3174  0F2D                     	;# 
  3175  0F2E                     	;# 
  3176  0F2F                     	;# 
  3177  0F30                     	;# 
  3178  0F31                     	;# 
  3179  0F32                     	;# 
  3180  0F33                     	;# 
  3181  0F34                     	;# 
  3182  0F35                     	;# 
  3183  0F36                     	;# 
  3184  0F37                     	;# 
  3185  0FE4                     	;# 
  3186  0FE5                     	;# 
  3187  0FE6                     	;# 
  3188  0FE7                     	;# 
  3189  0FE8                     	;# 
  3190  0FE9                     	;# 
  3191  0FEA                     	;# 
  3192  0FEB                     	;# 
  3193  0FED                     	;# 
  3194  0FEE                     	;# 
  3195  0FEF                     	;# 
  3196                           
  3197 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  3198  0000                     
  3199 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  3200  0000                     
  3201 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  3202  0000                     
  3203                           	psect	idataBANK2
  3204  0B6D                     __pidataBANK2:	
  3205                           
  3206                           ;initializer for _hrDisp
  3207  0B6D  3448               	retlw	72
  3208  0B6E  3465               	retlw	101
  3209  0B6F  3461               	retlw	97
  3210  0B70  3472               	retlw	114
  3211  0B71  3474               	retlw	116
  3212  0B72  3420               	retlw	32
  3213  0B73  3452               	retlw	82
  3214  0B74  3461               	retlw	97
  3215  0B75  3474               	retlw	116
  3216  0B76  3465               	retlw	101
  3217  0B77  343A               	retlw	58
  3218  0B78  3420               	retlw	32
  3219  0B79  3400               	retlw	0
  3220                           
  3221                           ;initializer for _distanceDisp
  3222  0B7A  3444               	retlw	68
  3223  0B7B  3469               	retlw	105
  3224  0B7C  3473               	retlw	115
  3225  0B7D  3474               	retlw	116
  3226  0B7E  3461               	retlw	97
  3227  0B7F  346E               	retlw	110
  3228  0B80  3463               	retlw	99
  3229  0B81  3465               	retlw	101
  3230  0B82  343A               	retlw	58
  3231  0B83  3420               	retlw	32
  3232  0B84  3400               	retlw	0
  3233                           
  3234                           ;initializer for _speedDisp
  3235  0B85  3453               	retlw	83
  3236  0B86  3470               	retlw	112
  3237  0B87  3465               	retlw	101
  3238  0B88  3465               	retlw	101
  3239  0B89  3464               	retlw	100
  3240  0B8A  343A               	retlw	58
  3241  0B8B  3420               	retlw	32
  3242  0B8C  3400               	retlw	0
  3243                           
  3244                           	psect	nvBANK0
  3245  0057                     __pnvBANK0:	
  3246  0057                     _TMR0_InterruptHandler:	
  3247  0057                     	ds	2
  3248  0059                     _IOCCF7_InterruptHandler:	
  3249  0059                     	ds	2
  3250  005B                     _EUSART_OverrunErrorHandler:	
  3251  005B                     	ds	2
  3252  005D                     _EUSART_FramingErrorHandler:	
  3253  005D                     	ds	2
  3254  005F                     _timer0ReloadVal:	
  3255  005F                     	ds	1
  3256                           
  3257                           	psect	nvBANK2
  3258  016E                     __pnvBANK2:	
  3259  016E                     _EUSART_ErrorHandler:	
  3260  016E                     	ds	2
  3261  0015                     _TMR0	set	21
  3262  000B                     _INTCONbits	set	11
  3263  0010                     _PIR1bits	set	16
  3264  0095                     _OPTION_REG	set	149
  3265  0095                     _OPTION_REGbits	set	149
  3266  008E                     _TRISC	set	142
  3267  008D                     _TRISB	set	141
  3268  008C                     _TRISA	set	140
  3269  0098                     _OSCTUNE	set	152
  3270  0099                     _OSCCON	set	153
  3271  010E                     _LATC	set	270
  3272  010D                     _LATB	set	269
  3273  010C                     _LATA	set	268
  3274  0116                     _BORCON	set	278
  3275  018C                     _ANSELA	set	396
  3276  018D                     _ANSELB	set	397
  3277  018E                     _ANSELC	set	398
  3278  019A                     _TX1REG	set	410
  3279  0199                     _RC1REG	set	409
  3280  019D                     _RC1STAbits	set	413
  3281  019E                     _TX1STAbits	set	414
  3282  019C                     _SPBRGH	set	412
  3283  019B                     _SPBRGL	set	411
  3284  019E                     _TX1STA	set	414
  3285  019D                     _RC1STA	set	413
  3286  019F                     _BAUD1CON	set	415
  3287  020E                     _WPUC	set	526
  3288  020C                     _WPUA	set	524
  3289  020D                     _WPUB	set	525
  3290  028E                     _ODCONC	set	654
  3291  028D                     _ODCONB	set	653
  3292  028C                     _ODCONA	set	652
  3293  030E                     _SLRCONC	set	782
  3294  030D                     _SLRCONB	set	781
  3295  030C                     _SLRCONA	set	780
  3296  0397                     _IOCCPbits	set	919
  3297  0398                     _IOCCNbits	set	920
  3298  0399                     _IOCCFbits	set	921
  3299  0E9F                     _RB7PPS	set	3743
  3300                           
  3301                           	psect	stringtext1
  3302  1000                     __pstringtext1:	
  3303  1000                     STR_1:	
  3304  1000  3420               	retlw	32	;' '
  3305  1001  3420               	retlw	32	;' '
  3306  1002  3420               	retlw	32	;' '
  3307  1003  3425               	retlw	37	;'%'
  3308  1004  3464               	retlw	100	;'d'
  3309  1005  3420               	retlw	32	;' '
  3310  1006  346B               	retlw	107	;'k'
  3311  1007  346D               	retlw	109	;'m'
  3312  1008  3468               	retlw	104	;'h'
  3313  1009  3420               	retlw	32	;' '
  3314  100A  3420               	retlw	32	;' '
  3315  100B  3420               	retlw	32	;' '
  3316  100C  3420               	retlw	32	;' '
  3317  100D  3400               	retlw	0
  3318                           
  3319                           	psect	stringtext2
  3320  100E                     __pstringtext2:	
  3321  100E                     STR_2:	
  3322  100E  3420               	retlw	32	;' '
  3323  100F  3420               	retlw	32	;' '
  3324  1010  3420               	retlw	32	;' '
  3325  1011  3425               	retlw	37	;'%'
  3326  1012  3464               	retlw	100	;'d'
  3327  1013  3420               	retlw	32	;' '
  3328  1014  346D               	retlw	109	;'m'
  3329  1015  3420               	retlw	32	;' '
  3330  1016  3420               	retlw	32	;' '
  3331  1017  3400               	retlw	0
  3332                           
  3333                           	psect	stringtext3
  3334  1018                     __pstringtext3:	
  3335  1018                     STR_3:	
  3336  1018  347C               	retlw	124	;'|'
  3337  1019  342D               	retlw	45	;'-'
  3338  101A  3400               	retlw	0
  3339                           
  3340                           	psect	stringtext4
  3341  0000                     __pstringtext4:	
  3342                           
  3343                           ; #config settings
  3344  0000                     
  3345                           	psect	cinit
  3346  0016                     start_initialization:	
  3347  0016                     __initialization:	
  3348                           
  3349                           ; Initialize objects allocated to BANK2
  3350  0016  306D               	movlw	low __pidataBANK2
  3351  0017  0084               	movwf	4
  3352  0018  308B               	movlw	(high __pidataBANK2)| (0+128)
  3353  0019  0085               	movwf	5
  3354  001A  3040               	movlw	low __pdataBANK2
  3355  001B  0086               	movwf	6
  3356  001C  3001               	movlw	high __pdataBANK2
  3357  001D  0087               	movwf	7
  3358  001E  3020               	movlw	32
  3359  001F  318A  2242  3180   	fcall	init_ram
  3360                           
  3361                           ; Clear objects allocated to BANK0
  3362  0022  3040               	movlw	low __pbssBANK0
  3363  0023  0084               	movwf	4
  3364  0024  3000               	movlw	high __pbssBANK0
  3365  0025  0085               	movwf	5
  3366  0026  3017               	movlw	23
  3367  0027  318A  223C  3180   	fcall	clear_ram0
  3368                           
  3369                           ; Clear objects allocated to BANK1
  3370  002A  0021               	movlb	1	; select bank1
  3371  002B  01EE               	clrf	__pbssBANK1& (0+127)
  3372  002C  01EF               	clrf	(__pbssBANK1+1)& (0+127)
  3373                           
  3374                           ; Clear objects allocated to BANK2
  3375  002D  3020               	movlw	low __pbssBANK2
  3376  002E  0084               	movwf	4
  3377  002F  3001               	movlw	high __pbssBANK2
  3378  0030  0085               	movwf	5
  3379  0031  3020               	movlw	32
  3380  0032  318A  223C         	fcall	clear_ram0
  3381  0034                     end_of_initialization:	
  3382                           ;End of C runtime variable initialization code
  3383                           
  3384  0034                     __end_of__initialization:	
  3385  0034  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3386  0035  0020               	movlb	0
  3387  0036  318C  2CEE         	ljmp	_main	;jump to C main() function
  3388                           
  3389                           	psect	bssBANK0
  3390  0040                     __pbssBANK0:	
  3391  0040                     _distance:	
  3392  0040                     	ds	4
  3393  0044                     _speed:	
  3394  0044                     	ds	4
  3395  0048                     _counter:	
  3396  0048                     	ds	4
  3397  004C                     _nout:	
  3398  004C                     	ds	2
  3399  004E                     _width:	
  3400  004E                     	ds	2
  3401  0050                     _prec:	
  3402  0050                     	ds	2
  3403  0052                     _eusartRxLastError:	
  3404  0052                     	ds	1
  3405  0053                     _rpm:	
  3406  0053                     	ds	4
  3407                           
  3408                           	psect	bssBANK1
  3409  00EE                     __pbssBANK1:	
  3410  00EE                     _flags:	
  3411  00EE                     	ds	2
  3412                           
  3413                           	psect	bssBANK2
  3414  0120                     __pbssBANK2:	
  3415  0120                     _dbuf:	
  3416  0120                     	ds	32
  3417                           
  3418                           	psect	dataBANK2
  3419  0140                     __pdataBANK2:	
  3420  0140                     _hrDisp:	
  3421  0140                     	ds	13
  3422  014D                     _distanceDisp:	
  3423  014D                     	ds	11
  3424  0158                     _speedDisp:	
  3425  0158                     	ds	8
  3426                           
  3427                           	psect	inittext
  3428  0A42                     init_ram:	
  3429  0A42  00FE               	movwf	126
  3430  0A43                     initloop:	
  3431  0A43  0012               	moviw fsr0++
  3432  0A44  001E               	movwi fsr1++
  3433  0A45  0BFE               	decfsz	126,f
  3434  0A46  2A43               	goto	initloop
  3435  0A47  3400               	retlw	0
  3436                           
  3437                           	psect	clrtext
  3438  0A3C                     clear_ram0:	
  3439                           ;	Called with FSR0 containing the base address, and
  3440                           ;	WREG with the size to clear
  3441                           
  3442  0A3C  0064               	clrwdt	;clear the watchdog before getting into this loop
  3443  0A3D                     clrloop0:	
  3444  0A3D  0180               	clrf	0	;clear RAM location pointed to by FSR
  3445  0A3E  3101               	addfsr 0,1
  3446  0A3F  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3447  0A40  2A3D               	goto	clrloop0	;have we reached the end yet?
  3448  0A41  3400               	retlw	0	;all done for this memory range, return
  3449                           
  3450                           	psect	cstackBANK3
  3451  01A0                     __pcstackBANK3:	
  3452  01A0                     	ds	2
  3453  01A2                     printf@ap:	
  3454                           
  3455                           ; 1 bytes @ 0x2
  3456  01A2                     	ds	1
  3457                           
  3458                           	psect	cstackBANK2
  3459  0160                     __pcstackBANK2:	
  3460  0160                     ?_vfprintf:	
  3461  0160                     vfprintf@fmt:	
  3462                           ; 2 bytes @ 0x0
  3463                           
  3464                           
  3465                           ; 2 bytes @ 0x0
  3466  0160                     	ds	2
  3467  0162                     vfprintf@ap:	
  3468                           
  3469                           ; 1 bytes @ 0x2
  3470  0162                     	ds	1
  3471  0163                     vfprintf@fp:	
  3472                           
  3473                           ; 1 bytes @ 0x3
  3474  0163                     	ds	1
  3475  0164                     vfprintf@cfmt:	
  3476                           
  3477                           ; 2 bytes @ 0x4
  3478  0164                     	ds	2
  3479  0166                     ?_printf:	
  3480  0166                     printf@fmt:	
  3481                           ; 2 bytes @ 0x6
  3482                           
  3483                           
  3484                           ; 2 bytes @ 0x6
  3485  0166                     	ds	6
  3486  016C                     ??_printf:	
  3487                           
  3488                           ; 1 bytes @ 0xC
  3489  016C                     	ds	1
  3490  016D                     ??_main:	
  3491                           
  3492                           ; 1 bytes @ 0xD
  3493  016D                     	ds	1
  3494                           
  3495                           	psect	cstackBANK1
  3496  00A0                     __pcstackBANK1:	
  3497  00A0                     ?_EUSART_SetFramingErrorHandler:	
  3498  00A0                     ?_EUSART_SetOverrunErrorHandler:	
  3499                           ; 1 bytes @ 0x0
  3500                           
  3501  00A0                     ?_EUSART_SetErrorHandler:	
  3502                           ; 1 bytes @ 0x0
  3503                           
  3504  00A0                     ??_OSCILLATOR_Initialize:	
  3505                           ; 1 bytes @ 0x0
  3506                           
  3507  00A0                     ?_IOCCF7_SetInterruptHandler:	
  3508                           ; 1 bytes @ 0x0
  3509                           
  3510  00A0                     ?_TMR0_SetInterruptHandler:	
  3511                           ; 1 bytes @ 0x0
  3512                           
  3513  00A0                     ??_EUSART_is_tx_ready:	
  3514                           ; 1 bytes @ 0x0
  3515                           
  3516  00A0                     ??_EUSART_Write:	
  3517                           ; 1 bytes @ 0x0
  3518                           
  3519  00A0                     ?_strlen:	
  3520                           ; 1 bytes @ 0x0
  3521                           
  3522  00A0                     ?___aodiv:	
  3523                           ; 2 bytes @ 0x0
  3524                           
  3525  00A0                     ?___aomod:	
  3526                           ; 8 bytes @ 0x0
  3527                           
  3528  00A0                     _EUSART_is_tx_ready$167:	
  3529                           ; 8 bytes @ 0x0
  3530                           
  3531  00A0                     EUSART_Write@txData:	
  3532                           ; 1 bytes @ 0x0
  3533                           
  3534  00A0                     EUSART_SetFramingErrorHandler@interruptHandler:	
  3535                           ; 1 bytes @ 0x0
  3536                           
  3537  00A0                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  3538                           ; 2 bytes @ 0x0
  3539                           
  3540  00A0                     EUSART_SetErrorHandler@interruptHandler:	
  3541                           ; 2 bytes @ 0x0
  3542                           
  3543  00A0                     IOCCF7_SetInterruptHandler@InterruptHandler:	
  3544                           ; 2 bytes @ 0x0
  3545                           
  3546  00A0                     TMR0_SetInterruptHandler@InterruptHandler:	
  3547                           ; 2 bytes @ 0x0
  3548                           
  3549  00A0                     ___aodiv@divisor:	
  3550                           ; 2 bytes @ 0x0
  3551                           
  3552  00A0                     ___aomod@divisor:	
  3553                           ; 8 bytes @ 0x0
  3554                           
  3555                           
  3556                           ; 8 bytes @ 0x0
  3557  00A0                     	ds	1
  3558  00A1                     ?_setCursor:	
  3559  00A1                     ??_putch:	
  3560                           ; 1 bytes @ 0x1
  3561                           
  3562  00A1                     putch@txData:	
  3563                           ; 1 bytes @ 0x1
  3564                           
  3565  00A1                     setCursor@b:	
  3566                           ; 1 bytes @ 0x1
  3567                           
  3568                           
  3569                           ; 1 bytes @ 0x1
  3570  00A1                     	ds	1
  3571  00A2                     ??_EUSART_SetFramingErrorHandler:	
  3572  00A2                     ??_EUSART_SetOverrunErrorHandler:	
  3573                           ; 1 bytes @ 0x2
  3574                           
  3575  00A2                     ??_EUSART_SetErrorHandler:	
  3576                           ; 1 bytes @ 0x2
  3577                           
  3578  00A2                     ??_PIN_MANAGER_Initialize:	
  3579                           ; 1 bytes @ 0x2
  3580                           
  3581  00A2                     ??_TMR0_Initialize:	
  3582                           ; 1 bytes @ 0x2
  3583                           
  3584  00A2                     ??_IOCCF7_SetInterruptHandler:	
  3585                           ; 1 bytes @ 0x2
  3586                           
  3587  00A2                     ??_TMR0_SetInterruptHandler:	
  3588                           ; 1 bytes @ 0x2
  3589                           
  3590  00A2                     ??_setCursor:	
  3591                           ; 1 bytes @ 0x2
  3592                           
  3593  00A2                     ??_strlen:	
  3594                           ; 1 bytes @ 0x2
  3595                           
  3596  00A2                     ??_EUSART_Initialize:	
  3597                           ; 1 bytes @ 0x2
  3598                           
  3599  00A2                     ?_fputc:	
  3600                           ; 1 bytes @ 0x2
  3601                           
  3602  00A2                     fputc@c:	
  3603                           ; 2 bytes @ 0x2
  3604                           
  3605                           
  3606                           ; 2 bytes @ 0x2
  3607  00A2                     	ds	1
  3608  00A3                     ??_SYSTEM_Initialize:	
  3609  00A3                     strlen@a:	
  3610                           ; 1 bytes @ 0x3
  3611                           
  3612                           
  3613                           ; 1 bytes @ 0x3
  3614  00A3                     	ds	1
  3615  00A4                     setCursor@a:	
  3616  00A4                     fputc@fp:	
  3617                           ; 1 bytes @ 0x4
  3618                           
  3619  00A4                     strlen@s:	
  3620                           ; 1 bytes @ 0x4
  3621                           
  3622                           
  3623                           ; 1 bytes @ 0x4
  3624  00A4                     	ds	1
  3625  00A5                     ??_fputc:	
  3626                           
  3627                           ; 1 bytes @ 0x5
  3628  00A5                     	ds	3
  3629  00A8                     ___aodiv@dividend:	
  3630  00A8                     ___aomod@dividend:	
  3631                           ; 8 bytes @ 0x8
  3632                           
  3633                           
  3634                           ; 8 bytes @ 0x8
  3635  00A8                     	ds	2
  3636  00AA                     ?_fputs:	
  3637  00AA                     fputs@s:	
  3638                           ; 2 bytes @ 0xA
  3639                           
  3640                           
  3641                           ; 2 bytes @ 0xA
  3642  00AA                     	ds	2
  3643  00AC                     fputs@fp:	
  3644                           
  3645                           ; 1 bytes @ 0xC
  3646  00AC                     	ds	1
  3647  00AD                     ??_fputs:	
  3648                           
  3649                           ; 1 bytes @ 0xD
  3650  00AD                     	ds	3
  3651  00B0                     ??___aodiv:	
  3652  00B0                     ??___aomod:	
  3653                           ; 1 bytes @ 0x10
  3654                           
  3655  00B0                     fputs@c:	
  3656                           ; 1 bytes @ 0x10
  3657                           
  3658                           
  3659                           ; 1 bytes @ 0x10
  3660  00B0                     	ds	1
  3661  00B1                     ___aodiv@counter:	
  3662  00B1                     ___aomod@counter:	
  3663                           ; 1 bytes @ 0x11
  3664                           
  3665  00B1                     fputs@i:	
  3666                           ; 1 bytes @ 0x11
  3667                           
  3668                           
  3669                           ; 2 bytes @ 0x11
  3670  00B1                     	ds	1
  3671  00B2                     ___aodiv@sign:	
  3672  00B2                     ___aomod@sign:	
  3673                           ; 1 bytes @ 0x12
  3674                           
  3675                           
  3676                           ; 1 bytes @ 0x12
  3677  00B2                     	ds	1
  3678  00B3                     ?_puts:	
  3679  00B3                     ?_abs:	
  3680                           ; 2 bytes @ 0x13
  3681                           
  3682  00B3                     ?_pad:	
  3683                           ; 2 bytes @ 0x13
  3684                           
  3685  00B3                     pad@buf:	
  3686                           ; 2 bytes @ 0x13
  3687                           
  3688  00B3                     abs@a:	
  3689                           ; 1 bytes @ 0x13
  3690                           
  3691  00B3                     puts@s:	
  3692                           ; 2 bytes @ 0x13
  3693                           
  3694  00B3                     ___aodiv@quotient:	
  3695                           ; 2 bytes @ 0x13
  3696                           
  3697                           
  3698                           ; 8 bytes @ 0x13
  3699  00B3                     	ds	1
  3700  00B4                     pad@p:	
  3701                           
  3702                           ; 2 bytes @ 0x14
  3703  00B4                     	ds	1
  3704  00B5                     ??_puts:	
  3705  00B5                     ??_abs:	
  3706                           ; 1 bytes @ 0x15
  3707                           
  3708                           
  3709                           ; 1 bytes @ 0x15
  3710  00B5                     	ds	1
  3711  00B6                     ??_pad:	
  3712                           
  3713                           ; 1 bytes @ 0x16
  3714  00B6                     	ds	1
  3715  00B7                     _puts$1032:	
  3716  00B7                     pad@i:	
  3717                           ; 1 bytes @ 0x17
  3718                           
  3719                           
  3720                           ; 2 bytes @ 0x17
  3721  00B7                     	ds	1
  3722  00B8                     ??_resetCursor:	
  3723  00B8                     ??_writeString:	
  3724                           ; 1 bytes @ 0x18
  3725                           
  3726  00B8                     writeString@string:	
  3727                           ; 1 bytes @ 0x18
  3728                           
  3729                           
  3730                           ; 1 bytes @ 0x18
  3731  00B8                     	ds	1
  3732  00B9                     pad@w:	
  3733                           
  3734                           ; 2 bytes @ 0x19
  3735  00B9                     	ds	2
  3736  00BB                     pad@fp:	
  3737                           
  3738                           ; 1 bytes @ 0x1B
  3739  00BB                     	ds	1
  3740  00BC                     ?_dtoa:	
  3741  00BC                     dtoa@d:	
  3742                           ; 2 bytes @ 0x1C
  3743                           
  3744                           
  3745                           ; 8 bytes @ 0x1C
  3746  00BC                     	ds	8
  3747  00C4                     ??_dtoa:	
  3748                           
  3749                           ; 1 bytes @ 0x24
  3750  00C4                     	ds	3
  3751  00C7                     _dtoa$686:	
  3752                           
  3753                           ; 2 bytes @ 0x27
  3754  00C7                     	ds	2
  3755  00C9                     dtoa@fp:	
  3756                           
  3757                           ; 1 bytes @ 0x29
  3758  00C9                     	ds	1
  3759  00CA                     dtoa@p:	
  3760                           
  3761                           ; 2 bytes @ 0x2A
  3762  00CA                     	ds	2
  3763  00CC                     dtoa@w:	
  3764                           
  3765                           ; 2 bytes @ 0x2C
  3766  00CC                     	ds	2
  3767  00CE                     dtoa@s:	
  3768                           
  3769                           ; 2 bytes @ 0x2E
  3770  00CE                     	ds	2
  3771  00D0                     dtoa@n:	
  3772                           
  3773                           ; 8 bytes @ 0x30
  3774  00D0                     	ds	8
  3775  00D8                     dtoa@i:	
  3776                           
  3777                           ; 2 bytes @ 0x38
  3778  00D8                     	ds	2
  3779  00DA                     ?_vfpfcnvrt:	
  3780  00DA                     vfpfcnvrt@fmt:	
  3781                           ; 2 bytes @ 0x3A
  3782                           
  3783                           
  3784                           ; 1 bytes @ 0x3A
  3785  00DA                     	ds	1
  3786  00DB                     vfpfcnvrt@ap:	
  3787                           
  3788                           ; 1 bytes @ 0x3B
  3789  00DB                     	ds	1
  3790  00DC                     ??_vfpfcnvrt:	
  3791                           
  3792                           ; 1 bytes @ 0x3C
  3793  00DC                     	ds	5
  3794  00E1                     vfpfcnvrt@ll:	
  3795                           
  3796                           ; 8 bytes @ 0x41
  3797  00E1                     	ds	8
  3798  00E9                     vfpfcnvrt@vp:	
  3799                           
  3800                           ; 2 bytes @ 0x49
  3801  00E9                     	ds	2
  3802  00EB                     vfpfcnvrt@fp:	
  3803                           
  3804                           ; 1 bytes @ 0x4B
  3805  00EB                     	ds	1
  3806  00EC                     ??_vfprintf:	
  3807                           
  3808                           ; 1 bytes @ 0x4C
  3809  00EC                     	ds	2
  3810                           
  3811                           	psect	cstackCOMMON
  3812  0070                     __pcstackCOMMON:	
  3813  0070                     ?_PIN_MANAGER_Initialize:	
  3814  0070                     ?_OSCILLATOR_Initialize:	
  3815                           ; 1 bytes @ 0x0
  3816                           
  3817  0070                     ?_TMR0_Initialize:	
  3818                           ; 1 bytes @ 0x0
  3819                           
  3820  0070                     ?_IOCCF7_DefaultInterruptHandler:	
  3821                           ; 1 bytes @ 0x0
  3822                           
  3823  0070                     ??_IOCCF7_DefaultInterruptHandler:	
  3824                           ; 1 bytes @ 0x0
  3825                           
  3826  0070                     ?_IOCCF7_ISR:	
  3827                           ; 1 bytes @ 0x0
  3828                           
  3829  0070                     ?_TMR0_DefaultInterruptHandler:	
  3830                           ; 1 bytes @ 0x0
  3831                           
  3832  0070                     ??_TMR0_DefaultInterruptHandler:	
  3833                           ; 1 bytes @ 0x0
  3834                           
  3835  0070                     ?_timerISR:	
  3836                           ; 1 bytes @ 0x0
  3837                           
  3838  0070                     ??_timerISR:	
  3839                           ; 1 bytes @ 0x0
  3840                           
  3841  0070                     ?_speedCalc:	
  3842                           ; 1 bytes @ 0x0
  3843                           
  3844  0070                     ?_resetCursor:	
  3845                           ; 1 bytes @ 0x0
  3846                           
  3847  0070                     ?_writeString:	
  3848                           ; 1 bytes @ 0x0
  3849                           
  3850  0070                     ?_EUSART_Initialize:	
  3851                           ; 1 bytes @ 0x0
  3852                           
  3853  0070                     ?_EUSART_is_tx_ready:	
  3854                           ; 1 bytes @ 0x0
  3855                           
  3856  0070                     ?_EUSART_Write:	
  3857                           ; 1 bytes @ 0x0
  3858                           
  3859  0070                     ?_putch:	
  3860                           ; 1 bytes @ 0x0
  3861                           
  3862  0070                     ?_SYSTEM_Initialize:	
  3863                           ; 1 bytes @ 0x0
  3864                           
  3865  0070                     ?_PIN_MANAGER_IOC:	
  3866                           ; 1 bytes @ 0x0
  3867                           
  3868  0070                     ?_TMR0_ISR:	
  3869                           ; 1 bytes @ 0x0
  3870                           
  3871  0070                     ??_TMR0_ISR:	
  3872                           ; 1 bytes @ 0x0
  3873                           
  3874  0070                     ?_INTERRUPT_InterruptManager:	
  3875                           ; 1 bytes @ 0x0
  3876                           
  3877  0070                     ?_main:	
  3878                           ; 1 bytes @ 0x0
  3879                           
  3880  0070                     ?__Umul8_16:	
  3881                           ; 1 bytes @ 0x0
  3882                           
  3883  0070                     ?___aldiv:	
  3884                           ; 2 bytes @ 0x0
  3885                           
  3886  0070                     ?___fladd:	
  3887                           ; 4 bytes @ 0x0
  3888                           
  3889  0070                     __Umul8_16@multiplicand:	
  3890                           ; 4 bytes @ 0x0
  3891                           
  3892  0070                     ___aldiv@divisor:	
  3893                           ; 1 bytes @ 0x0
  3894                           
  3895  0070                     ___fladd@b:	
  3896                           ; 4 bytes @ 0x0
  3897                           
  3898                           
  3899                           ; 4 bytes @ 0x0
  3900  0070                     	ds	2
  3901  0072                     ??__Umul8_16:	
  3902                           
  3903                           ; 1 bytes @ 0x2
  3904  0072                     	ds	2
  3905  0074                     __Umul8_16@product:	
  3906  0074                     ___aldiv@dividend:	
  3907                           ; 2 bytes @ 0x4
  3908                           
  3909  0074                     ___fladd@a:	
  3910                           ; 4 bytes @ 0x4
  3911                           
  3912                           
  3913                           ; 4 bytes @ 0x4
  3914  0074                     	ds	2
  3915  0076                     __Umul8_16@word_mpld:	
  3916                           
  3917                           ; 2 bytes @ 0x6
  3918  0076                     	ds	2
  3919  0078                     ??___aldiv:	
  3920  0078                     ___fladd@signs:	
  3921                           ; 1 bytes @ 0x8
  3922                           
  3923  0078                     __Umul8_16@multiplier:	
  3924                           ; 1 bytes @ 0x8
  3925                           
  3926                           
  3927                           ; 1 bytes @ 0x8
  3928  0078                     	ds	1
  3929  0079                     ??___lmul:	
  3930  0079                     ??___flmul:	
  3931                           ; 1 bytes @ 0x9
  3932                           
  3933  0079                     ___fladd@aexp:	
  3934                           ; 1 bytes @ 0x9
  3935                           
  3936  0079                     ___lmul@product:	
  3937                           ; 1 bytes @ 0x9
  3938                           
  3939                           
  3940                           ; 4 bytes @ 0x9
  3941  0079                     	ds	1
  3942  007A                     ___fladd@bexp:	
  3943                           
  3944                           ; 1 bytes @ 0xA
  3945  007A                     	ds	1
  3946  007B                     ___fladd@grs:	
  3947                           
  3948                           ; 1 bytes @ 0xB
  3949  007B                     	ds	3
  3950  007E                     ??_IOCCF7_ISR:	
  3951  007E                     ??_speedCalc:	
  3952                           ; 1 bytes @ 0xE
  3953                           
  3954  007E                     ??_PIN_MANAGER_IOC:	
  3955                           ; 1 bytes @ 0xE
  3956                           
  3957  007E                     ??_INTERRUPT_InterruptManager:	
  3958                           ; 1 bytes @ 0xE
  3959                           
  3960                           
  3961                           	psect	cstackBANK0
  3962  0020                     __pcstackBANK0:	
  3963                           ; 1 bytes @ 0xE
  3964                           
  3965  0020                     ??___fladd:	
  3966  0020                     ?___flmul:	
  3967                           ; 1 bytes @ 0x0
  3968                           
  3969  0020                     ___aldiv@counter:	
  3970                           ; 4 bytes @ 0x0
  3971                           
  3972  0020                     ___flmul@b:	
  3973                           ; 1 bytes @ 0x0
  3974                           
  3975                           
  3976                           ; 4 bytes @ 0x0
  3977  0020                     	ds	1
  3978  0021                     ___aldiv@sign:	
  3979                           
  3980                           ; 1 bytes @ 0x1
  3981  0021                     	ds	1
  3982  0022                     ___aldiv@quotient:	
  3983                           
  3984                           ; 4 bytes @ 0x2
  3985  0022                     	ds	2
  3986  0024                     ___flmul@a:	
  3987                           
  3988                           ; 4 bytes @ 0x4
  3989  0024                     	ds	2
  3990  0026                     ?___lmul:	
  3991  0026                     ___lmul@multiplier:	
  3992                           ; 4 bytes @ 0x6
  3993                           
  3994                           
  3995                           ; 4 bytes @ 0x6
  3996  0026                     	ds	2
  3997  0028                     ___flmul@sign:	
  3998                           
  3999                           ; 1 bytes @ 0x8
  4000  0028                     	ds	1
  4001  0029                     ___flmul@grs:	
  4002                           
  4003                           ; 4 bytes @ 0x9
  4004  0029                     	ds	1
  4005  002A                     ___lmul@multiplicand:	
  4006                           
  4007                           ; 4 bytes @ 0xA
  4008  002A                     	ds	3
  4009  002D                     ___flmul@aexp:	
  4010                           
  4011                           ; 1 bytes @ 0xD
  4012  002D                     	ds	1
  4013  002E                     ?___xxtofl:	
  4014  002E                     ___flmul@bexp:	
  4015                           ; 4 bytes @ 0xE
  4016                           
  4017  002E                     ___xxtofl@val:	
  4018                           ; 1 bytes @ 0xE
  4019                           
  4020                           
  4021                           ; 4 bytes @ 0xE
  4022  002E                     	ds	1
  4023  002F                     ___flmul@prod:	
  4024                           
  4025                           ; 4 bytes @ 0xF
  4026  002F                     	ds	3
  4027  0032                     ??___xxtofl:	
  4028                           
  4029                           ; 1 bytes @ 0x12
  4030  0032                     	ds	1
  4031  0033                     ___flmul@temp:	
  4032                           
  4033                           ; 2 bytes @ 0x13
  4034  0033                     	ds	3
  4035  0036                     ___xxtofl@sign:	
  4036                           
  4037                           ; 1 bytes @ 0x16
  4038  0036                     	ds	1
  4039  0037                     ___xxtofl@exp:	
  4040                           
  4041                           ; 1 bytes @ 0x17
  4042  0037                     	ds	1
  4043  0038                     ___xxtofl@arg:	
  4044                           
  4045                           ; 4 bytes @ 0x18
  4046  0038                     	ds	4
  4047  003C                     _speedCalc$1213:	
  4048                           
  4049                           ; 4 bytes @ 0x1C
  4050  003C                     	ds	4
  4051                           
  4052                           	psect	maintext
  4053  0CEE                     __pmaintext:	
  4054 ;;
  4055 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  4056 ;;
  4057 ;; *************** function _main *****************
  4058 ;; Defined at:
  4059 ;;		line 35 in file "main.c"
  4060 ;; Parameters:    Size  Location     Type
  4061 ;;		None
  4062 ;; Auto vars:     Size  Location     Type
  4063 ;;		None
  4064 ;; Return value:  Size  Location     Type
  4065 ;;                  1    wreg      void 
  4066 ;; Registers used:
  4067 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4068 ;; Tracked objects:
  4069 ;;		On entry : B1F/0
  4070 ;;		On exit  : 0/0
  4071 ;;		Unchanged: 0/0
  4072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4075 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  4076 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  4077 ;;Total ram usage:        1 bytes
  4078 ;; Hardware stack levels required when called:   15
  4079 ;; This function calls:
  4080 ;;		_IOCCF7_SetInterruptHandler
  4081 ;;		_SYSTEM_Initialize
  4082 ;;		_TMR0_SetInterruptHandler
  4083 ;;		_printf
  4084 ;;		_resetCursor
  4085 ;;		_setCursor
  4086 ;;		_writeString
  4087 ;; This function is called by:
  4088 ;;		Startup code after reset
  4089 ;; This function uses a non-reentrant model
  4090 ;;
  4091                           
  4092                           
  4093                           ;psect for function _main
  4094  0CEE                     _main:	
  4095                           
  4096                           ;main.c: 38:     SYSTEM_Initialize();
  4097                           
  4098                           ;incstack = 0
  4099                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4100  0CEE  3187  27F4  318C   	fcall	_SYSTEM_Initialize
  4101                           
  4102                           ;main.c: 41:     TMR0_SetInterruptHandler( timerISR ) ;
  4103  0CF1  3084               	movlw	low _timerISR
  4104  0CF2  0021               	movlb	1	; select bank1
  4105  0CF3  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler^(0+128)
  4106  0CF4  300A               	movlw	high _timerISR
  4107  0CF5  00A1               	movwf	(TMR0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  4108  0CF6  318A  227B  318C   	fcall	_TMR0_SetInterruptHandler
  4109                           
  4110                           ;main.c: 42:     IOCCF7_SetInterruptHandler( speedCalc ) ;
  4111  0CF9  3087               	movlw	low _speedCalc
  4112  0CFA  0021               	movlb	1	; select bank1
  4113  0CFB  00A0               	movwf	IOCCF7_SetInterruptHandler@InterruptHandler^(0+128)
  4114  0CFC  300E               	movlw	high _speedCalc
  4115  0CFD  00A1               	movwf	(IOCCF7_SetInterruptHandler@InterruptHandler^(0+128)+1)
  4116  0CFE  318A  2272  318C   	fcall	_IOCCF7_SetInterruptHandler
  4117                           
  4118                           ;main.c: 45:     resetCursor() ;
  4119  0D01  318A  224F  318C   	fcall	_resetCursor
  4120                           
  4121                           ;main.c: 48:     setCursor(1,0) ;
  4122  0D04  0021               	movlb	1	; select bank1
  4123  0D05  01A1               	clrf	setCursor@b^(0+128)
  4124  0D06  3001               	movlw	1
  4125  0D07  318C  2471  318C   	fcall	_setCursor
  4126                           
  4127                           ;main.c: 49:     writeString(speedDisp);
  4128  0D0A  3058               	movlw	(low (_speedDisp| (0+256)))& (0+255)
  4129  0D0B  318A  22D4  318C   	fcall	_writeString
  4130                           
  4131                           ;main.c: 50:     setCursor(2,0) ;
  4132  0D0E  0021               	movlb	1	; select bank1
  4133  0D0F  01A1               	clrf	setCursor@b^(0+128)
  4134  0D10  3002               	movlw	2
  4135  0D11  318C  2471  318C   	fcall	_setCursor
  4136                           
  4137                           ;main.c: 51:     writeString(distanceDisp);
  4138  0D14  304D               	movlw	(low (_distanceDisp| (0+256)))& (0+255)
  4139  0D15  318A  22D4  318C   	fcall	_writeString
  4140                           
  4141                           ;main.c: 52:     setCursor(3,0) ;
  4142  0D18  0021               	movlb	1	; select bank1
  4143  0D19  01A1               	clrf	setCursor@b^(0+128)
  4144  0D1A  3003               	movlw	3
  4145  0D1B  318C  2471  318C   	fcall	_setCursor
  4146                           
  4147                           ;main.c: 53:     writeString(hrDisp);
  4148  0D1E  3040               	movlw	(low (_hrDisp| (0+256)))& (0+255)
  4149  0D1F  318A  22D4  318C   	fcall	_writeString
  4150                           
  4151                           ;main.c: 54:     setCursor(4,0) ;
  4152  0D22  0021               	movlb	1	; select bank1
  4153  0D23  01A1               	clrf	setCursor@b^(0+128)
  4154  0D24  3004               	movlw	4
  4155  0D25  318C  2471  318C   	fcall	_setCursor
  4156                           
  4157                           ;main.c: 57:     (INTCONbits.GIE = 1);
  4158  0D28  178B               	bsf	11,7	;volatile
  4159                           
  4160                           ;main.c: 58:     (INTCONbits.PEIE = 1);
  4161  0D29  170B               	bsf	11,6	;volatile
  4162  0D2A                     l3600:	
  4163                           
  4164                           ;main.c: 61:         setCursor(1,10) ;
  4165  0D2A  300A               	movlw	10
  4166  0D2B  0022               	movlb	2	; select bank2
  4167  0D2C  00ED               	movwf	??_main^(0+256)
  4168  0D2D  086D               	movf	??_main^(0+256),w
  4169  0D2E  0021               	movlb	1	; select bank1
  4170  0D2F  00A1               	movwf	setCursor@b^(0+128)
  4171  0D30  3001               	movlw	1
  4172  0D31  318C  2471  318C   	fcall	_setCursor
  4173                           
  4174                           ;main.c: 62:         printf( "   %d kmh    ", speed ) ;
  4175  0D34  3000               	movlw	low (STR_1| (0+32768))
  4176  0D35  0022               	movlb	2	; select bank2
  4177  0D36  00E6               	movwf	printf@fmt^(0+256)
  4178  0D37  3090               	movlw	high (STR_1| (0+32768))
  4179  0D38  00E7               	movwf	(printf@fmt^(0+256)+1)
  4180  0D39  0020               	movlb	0	; select bank0
  4181  0D3A  0847               	movf	_speed+3,w	;volatile
  4182  0D3B  0022               	movlb	2	; select bank2
  4183  0D3C  00EB               	movwf	((?_printf+3)^(0+256)+2)
  4184  0D3D  0020               	movlb	0	; select bank0
  4185  0D3E  0846               	movf	_speed+2,w	;volatile
  4186  0D3F  0022               	movlb	2	; select bank2
  4187  0D40  00EA               	movwf	((?_printf+2)^(0+256)+2)
  4188  0D41  0020               	movlb	0	; select bank0
  4189  0D42  0845               	movf	_speed+1,w	;volatile
  4190  0D43  0022               	movlb	2	; select bank2
  4191  0D44  00E9               	movwf	((?_printf+1)^(0+256)+2)
  4192  0D45  0020               	movlb	0	; select bank0
  4193  0D46  0844               	movf	_speed,w	;volatile
  4194  0D47  0022               	movlb	2	; select bank2
  4195  0D48  00E8               	movwf	(?_printf^(0+256)+2)
  4196  0D49  318A  22C1  318C   	fcall	_printf
  4197                           
  4198                           ;main.c: 63:         setCursor(2,11) ;
  4199  0D4C  300B               	movlw	11
  4200  0D4D  0022               	movlb	2	; select bank2
  4201  0D4E  00ED               	movwf	??_main^(0+256)
  4202  0D4F  086D               	movf	??_main^(0+256),w
  4203  0D50  0021               	movlb	1	; select bank1
  4204  0D51  00A1               	movwf	setCursor@b^(0+128)
  4205  0D52  3002               	movlw	2
  4206  0D53  318C  2471  318C   	fcall	_setCursor
  4207                           
  4208                           ;main.c: 64:         printf("   %d m  ", distance ) ;
  4209  0D56  300E               	movlw	low (STR_2| (0+32768))
  4210  0D57  0022               	movlb	2	; select bank2
  4211  0D58  00E6               	movwf	printf@fmt^(0+256)
  4212  0D59  3090               	movlw	high (STR_2| (0+32768))
  4213  0D5A  00E7               	movwf	(printf@fmt^(0+256)+1)
  4214  0D5B  0020               	movlb	0	; select bank0
  4215  0D5C  0843               	movf	_distance+3,w	;volatile
  4216  0D5D  0022               	movlb	2	; select bank2
  4217  0D5E  00EB               	movwf	((?_printf+3)^(0+256)+2)
  4218  0D5F  0020               	movlb	0	; select bank0
  4219  0D60  0842               	movf	_distance+2,w	;volatile
  4220  0D61  0022               	movlb	2	; select bank2
  4221  0D62  00EA               	movwf	((?_printf+2)^(0+256)+2)
  4222  0D63  0020               	movlb	0	; select bank0
  4223  0D64  0841               	movf	_distance+1,w	;volatile
  4224  0D65  0022               	movlb	2	; select bank2
  4225  0D66  00E9               	movwf	((?_printf+1)^(0+256)+2)
  4226  0D67  0020               	movlb	0	; select bank0
  4227  0D68  0840               	movf	_distance,w	;volatile
  4228  0D69  0022               	movlb	2	; select bank2
  4229  0D6A  00E8               	movwf	(?_printf^(0+256)+2)
  4230  0D6B  318A  22C1  318C   	fcall	_printf
  4231  0D6E  2D2A               	goto	l3600
  4232  0D6F                     __end_of_main:	
  4233                           
  4234                           	psect	text1
  4235  0AD4                     __ptext1:	
  4236 ;; *************** function _writeString *****************
  4237 ;; Defined at:
  4238 ;;		line 60 in file "displayOptions.c"
  4239 ;; Parameters:    Size  Location     Type
  4240 ;;  string          1    wreg     PTR unsigned char 
  4241 ;;		 -> hrDisp(13), distanceDisp(11), speedDisp(8), 
  4242 ;; Auto vars:     Size  Location     Type
  4243 ;;  string          1   24[BANK1 ] PTR unsigned char 
  4244 ;;		 -> hrDisp(13), distanceDisp(11), speedDisp(8), 
  4245 ;; Return value:  Size  Location     Type
  4246 ;;                  1    wreg      void 
  4247 ;; Registers used:
  4248 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4249 ;; Tracked objects:
  4250 ;;		On entry : 0/0
  4251 ;;		On exit  : 0/0
  4252 ;;		Unchanged: 0/0
  4253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4255 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4257 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4258 ;;Total ram usage:        1 bytes
  4259 ;; Hardware stack levels used:    1
  4260 ;; Hardware stack levels required when called:   11
  4261 ;; This function calls:
  4262 ;;		_EUSART_is_tx_ready
  4263 ;;		_puts
  4264 ;; This function is called by:
  4265 ;;		_main
  4266 ;; This function uses a non-reentrant model
  4267 ;;
  4268                           
  4269                           
  4270                           ;psect for function _writeString
  4271  0AD4                     _writeString:	
  4272                           
  4273                           ;incstack = 0
  4274                           ; Regs used in _writeString: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4275                           ;writeString@string stored from wreg
  4276  0AD4  0021               	movlb	1	; select bank1
  4277  0AD5  00B8               	movwf	writeString@string^(0+128)
  4278  0AD6                     l3446:	
  4279                           ;displayOptions.c: 61:     while( !EUSART_is_tx_ready() ) ;
  4280                           
  4281  0AD6  318A  22B3  318A   	fcall	_EUSART_is_tx_ready
  4282  0AD9  3A00               	xorlw	0
  4283  0ADA  1903               	skipnz
  4284  0ADB  2AD6               	goto	l3446
  4285                           
  4286                           ;displayOptions.c: 62:     puts( string );
  4287  0ADC  0021               	movlb	1	; select bank1
  4288  0ADD  0838               	movf	writeString@string^(0+128),w
  4289  0ADE  00B3               	movwf	puts@s^(0+128)
  4290  0ADF  3001               	movlw	1
  4291  0AE0  00B4               	movwf	(puts@s+1)^(0+128)
  4292  0AE1  318B  2333  318A   	fcall	_puts
  4293                           
  4294                           ;displayOptions.c: 63:     _delay((unsigned long)((200)*(16000000/4000000.0)));
  4295  0AE4  30A0               	movlw	160
  4296  0AE5                     u4237:	
  4297  0AE5  3200               	nop2
  4298  0AE6  0B89               	decfsz	9,f
  4299  0AE7  2AE5               	goto	u4237
  4300  0AE8  0008               	return
  4301  0AE9                     __end_of_writeString:	
  4302                           
  4303                           	psect	text2
  4304  0C71                     __ptext2:	
  4305 ;; *************** function _setCursor *****************
  4306 ;; Defined at:
  4307 ;;		line 72 in file "displayOptions.c"
  4308 ;; Parameters:    Size  Location     Type
  4309 ;;  a               1    wreg     unsigned char 
  4310 ;;  b               1    1[BANK1 ] unsigned char 
  4311 ;; Auto vars:     Size  Location     Type
  4312 ;;  a               1    4[BANK1 ] unsigned char 
  4313 ;; Return value:  Size  Location     Type
  4314 ;;                  1    wreg      void 
  4315 ;; Registers used:
  4316 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4317 ;; Tracked objects:
  4318 ;;		On entry : 0/0
  4319 ;;		On exit  : 0/0
  4320 ;;		Unchanged: 0/0
  4321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4322 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4323 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4324 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4325 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4326 ;;Total ram usage:        4 bytes
  4327 ;; Hardware stack levels used:    1
  4328 ;; Hardware stack levels required when called:    7
  4329 ;; This function calls:
  4330 ;;		_EUSART_Write
  4331 ;;		_EUSART_is_tx_ready
  4332 ;; This function is called by:
  4333 ;;		_main
  4334 ;; This function uses a non-reentrant model
  4335 ;;
  4336                           
  4337                           
  4338                           ;psect for function _setCursor
  4339  0C71                     _setCursor:	
  4340                           
  4341                           ;incstack = 0
  4342                           ; Regs used in _setCursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4343                           ;setCursor@a stored from wreg
  4344  0C71  0021               	movlb	1	; select bank1
  4345  0C72  00A4               	movwf	setCursor@a^(0+128)
  4346  0C73                     l3420:	
  4347                           ;displayOptions.c: 73:     while( !EUSART_is_tx_ready() ) ;
  4348                           
  4349  0C73  318A  22B3  318C   	fcall	_EUSART_is_tx_ready
  4350  0C76  3A00               	xorlw	0
  4351  0C77  1903               	skipnz
  4352  0C78  2C73               	goto	l3420
  4353                           
  4354                           ;displayOptions.c: 74:     EUSART_Write( 254 );
  4355  0C79  30FE               	movlw	254
  4356  0C7A  318A  228E  318C   	fcall	_EUSART_Write
  4357                           
  4358                           ;displayOptions.c: 75:     _delay((unsigned long)((200)*(16000000/4000000.0)));
  4359  0C7D  30A0               	movlw	160
  4360  0C7E                     u4247:	
  4361  0C7E  3200               	nop2
  4362  0C7F  0B89               	decfsz	9,f
  4363  0C80  2C7E               	goto	u4247
  4364                           
  4365                           ;displayOptions.c: 76:     switch ( a ){
  4366  0C81  2C96               	goto	l3436
  4367  0C82                     l3426:	
  4368                           
  4369                           ;displayOptions.c: 78:         {;displayOptions.c: 79:             EUSART_Write(128 + 0 
      +                          + b) ;
  4370  0C82  0821               	movf	setCursor@b^(0+128),w
  4371  0C83  3E80               	addlw	128
  4372  0C84  318A  228E         	fcall	_EUSART_Write
  4373                           
  4374                           ;displayOptions.c: 80:             break ;
  4375  0C86  0008               	return
  4376  0C87                     l3428:	
  4377                           
  4378                           ;displayOptions.c: 83:         {;displayOptions.c: 84:            EUSART_Write(128 + 64 
      +                          + b) ;
  4379  0C87  0821               	movf	setCursor@b^(0+128),w
  4380  0C88  3EC0               	addlw	192
  4381  0C89  318A  228E         	fcall	_EUSART_Write
  4382                           
  4383                           ;displayOptions.c: 85:            break ;
  4384  0C8B  0008               	return
  4385  0C8C                     l3430:	
  4386                           
  4387                           ;displayOptions.c: 88:         {;displayOptions.c: 89:             EUSART_Write(128 + 20
      +                           + b) ;
  4388  0C8C  0821               	movf	setCursor@b^(0+128),w
  4389  0C8D  3E94               	addlw	148
  4390  0C8E  318A  228E         	fcall	_EUSART_Write
  4391                           
  4392                           ;displayOptions.c: 90:             break ;
  4393  0C90  0008               	return
  4394  0C91                     l3432:	
  4395                           
  4396                           ;displayOptions.c: 93:         {;displayOptions.c: 94:             EUSART_Write(128 + 84
      +                           + b) ;
  4397  0C91  0821               	movf	setCursor@b^(0+128),w
  4398  0C92  3ED4               	addlw	212
  4399  0C93  318A  228E         	fcall	_EUSART_Write
  4400                           
  4401                           ;displayOptions.c: 95:             break ;
  4402  0C95  0008               	return
  4403  0C96                     l3436:	
  4404  0C96  0021               	movlb	1	; select bank1
  4405  0C97  0824               	movf	setCursor@a^(0+128),w
  4406  0C98  00A2               	movwf	??_setCursor^(0+128)
  4407  0C99  01A3               	clrf	(??_setCursor^(0+128)+1)
  4408                           
  4409                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4410                           ; Switch size 1, requested type "simple"
  4411                           ; Number of cases is 1, Range of values is 0 to 0
  4412                           ; switch strategies available:
  4413                           ; Name         Instructions Cycles
  4414                           ; simple_byte            4     3 (average)
  4415                           ; direct_byte            8     6 (fixed)
  4416                           ; jumptable            260     6 (fixed)
  4417                           ;	Chosen strategy is simple_byte
  4418  0C9A  0823               	movf	(??_setCursor+1)^(0+128),w
  4419  0C9B  3A00               	xorlw	0	; case 0
  4420  0C9C  1903               	skipnz
  4421  0C9D  2C9F               	goto	l3646
  4422  0C9E  2CAD               	goto	l350
  4423  0C9F                     l3646:	
  4424                           
  4425                           ; Switch size 1, requested type "simple"
  4426                           ; Number of cases is 4, Range of values is 1 to 4
  4427                           ; switch strategies available:
  4428                           ; Name         Instructions Cycles
  4429                           ; simple_byte           13     7 (average)
  4430                           ; direct_byte           17     9 (fixed)
  4431                           ; jumptable            263     9 (fixed)
  4432                           ;	Chosen strategy is simple_byte
  4433  0C9F  0822               	movf	??_setCursor^(0+128),w
  4434  0CA0  3A01               	xorlw	1	; case 1
  4435  0CA1  1903               	skipnz
  4436  0CA2  2C82               	goto	l3426
  4437  0CA3  3A03               	xorlw	3	; case 2
  4438  0CA4  1903               	skipnz
  4439  0CA5  2C87               	goto	l3428
  4440  0CA6  3A01               	xorlw	1	; case 3
  4441  0CA7  1903               	skipnz
  4442  0CA8  2C8C               	goto	l3430
  4443  0CA9  3A07               	xorlw	7	; case 4
  4444  0CAA  1903               	skipnz
  4445  0CAB  2C91               	goto	l3432
  4446  0CAC  2CAD               	goto	l350
  4447  0CAD                     l350:	
  4448  0CAD  0008               	return
  4449  0CAE                     __end_of_setCursor:	
  4450                           
  4451                           	psect	text3
  4452  0AB3                     __ptext3:	
  4453 ;; *************** function _EUSART_is_tx_ready *****************
  4454 ;; Defined at:
  4455 ;;		line 93 in file "mcc_generated_files/eusart.c"
  4456 ;; Parameters:    Size  Location     Type
  4457 ;;		None
  4458 ;; Auto vars:     Size  Location     Type
  4459 ;;		None
  4460 ;; Return value:  Size  Location     Type
  4461 ;;                  1    wreg      _Bool 
  4462 ;; Registers used:
  4463 ;;		wreg, status,2
  4464 ;; Tracked objects:
  4465 ;;		On entry : 0/0
  4466 ;;		On exit  : 0/0
  4467 ;;		Unchanged: 0/0
  4468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4470 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4472 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4473 ;;Total ram usage:        1 bytes
  4474 ;; Hardware stack levels used:    1
  4475 ;; Hardware stack levels required when called:    6
  4476 ;; This function calls:
  4477 ;;		Nothing
  4478 ;; This function is called by:
  4479 ;;		_writeString
  4480 ;;		_setCursor
  4481 ;;		_backlightBrightness
  4482 ;;		_writePrintf
  4483 ;; This function uses a non-reentrant model
  4484 ;;
  4485                           
  4486                           
  4487                           ;psect for function _EUSART_is_tx_ready
  4488  0AB3                     _EUSART_is_tx_ready:	
  4489                           
  4490                           ;mcc_generated_files/eusart.c: 95:     return (_Bool)(PIR1bits.TXIF && TX1STAbits.TXEN);
  4491                           
  4492                           ;incstack = 0
  4493                           ; Regs used in _EUSART_is_tx_ready: [wreg+status,2]
  4494  0AB3  0021               	movlb	1	; select bank1
  4495  0AB4  01A0               	clrf	_EUSART_is_tx_ready$167^(0+128)
  4496  0AB5  0020               	movlb	0	; select bank0
  4497  0AB6  1E10               	btfss	16,4	;volatile
  4498  0AB7  2ABE               	goto	l3334
  4499  0AB8  0023               	movlb	3	; select bank3
  4500  0AB9  1E9E               	btfss	30,5	;volatile
  4501  0ABA  2ABE               	goto	l3334
  4502  0ABB  0021               	movlb	1	; select bank1
  4503  0ABC  01A0               	clrf	_EUSART_is_tx_ready$167^(0+128)
  4504  0ABD  0AA0               	incf	_EUSART_is_tx_ready$167^(0+128),f
  4505  0ABE                     l3334:	
  4506  0ABE  0021               	movlb	1	; select bank1
  4507  0ABF  0820               	movf	_EUSART_is_tx_ready$167^(0+128),w
  4508  0AC0  0008               	return
  4509  0AC1                     __end_of_EUSART_is_tx_ready:	
  4510                           
  4511                           	psect	text4
  4512  0A4F                     __ptext4:	
  4513 ;; *************** function _resetCursor *****************
  4514 ;; Defined at:
  4515 ;;		line 56 in file "displayOptions.c"
  4516 ;; Parameters:    Size  Location     Type
  4517 ;;		None
  4518 ;; Auto vars:     Size  Location     Type
  4519 ;;		None
  4520 ;; Return value:  Size  Location     Type
  4521 ;;                  1    wreg      void 
  4522 ;; Registers used:
  4523 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4524 ;; Tracked objects:
  4525 ;;		On entry : 0/0
  4526 ;;		On exit  : 0/0
  4527 ;;		Unchanged: 0/0
  4528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4533 ;;Total ram usage:        0 bytes
  4534 ;; Hardware stack levels used:    1
  4535 ;; Hardware stack levels required when called:   11
  4536 ;; This function calls:
  4537 ;;		_puts
  4538 ;; This function is called by:
  4539 ;;		_main
  4540 ;; This function uses a non-reentrant model
  4541 ;;
  4542                           
  4543                           
  4544                           ;psect for function _resetCursor
  4545  0A4F                     _resetCursor:	
  4546                           
  4547                           ;displayOptions.c: 57:     puts("|-");
  4548                           
  4549                           ;incstack = 0
  4550                           ; Regs used in _resetCursor: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4551  0A4F  3018               	movlw	low (STR_3| (0+32768))
  4552  0A50  0021               	movlb	1	; select bank1
  4553  0A51  00B3               	movwf	puts@s^(0+128)
  4554  0A52  3090               	movlw	high (STR_3| (0+32768))
  4555  0A53  00B4               	movwf	(puts@s^(0+128)+1)
  4556  0A54  318B  2333         	fcall	_puts
  4557  0A56  0008               	return
  4558  0A57                     __end_of_resetCursor:	
  4559                           
  4560                           	psect	text5
  4561  0B33                     __ptext5:	
  4562 ;; *************** function _puts *****************
  4563 ;; Defined at:
  4564 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\puts.c"
  4565 ;; Parameters:    Size  Location     Type
  4566 ;;  s               2   19[BANK1 ] PTR const unsigned char 
  4567 ;;		 -> STR_3(3), hrDisp(13), distanceDisp(11), speedDisp(8), 
  4568 ;; Auto vars:     Size  Location     Type
  4569 ;;  r               2    0        int 
  4570 ;; Return value:  Size  Location     Type
  4571 ;;                  2   19[BANK1 ] int 
  4572 ;; Registers used:
  4573 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4574 ;; Tracked objects:
  4575 ;;		On entry : 0/0
  4576 ;;		On exit  : 0/0
  4577 ;;		Unchanged: 0/0
  4578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4579 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4580 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4582 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  4583 ;;Total ram usage:        5 bytes
  4584 ;; Hardware stack levels used:    1
  4585 ;; Hardware stack levels required when called:   10
  4586 ;; This function calls:
  4587 ;;		_fputc
  4588 ;;		_fputs
  4589 ;; This function is called by:
  4590 ;;		_resetCursor
  4591 ;;		_writeString
  4592 ;; This function uses a non-reentrant model
  4593 ;;
  4594                           
  4595                           
  4596                           ;psect for function _puts
  4597  0B33                     _puts:	
  4598                           
  4599                           ;incstack = 0
  4600                           ; Regs used in _puts: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4601  0B33  0021               	movlb	1	; select bank1
  4602  0B34  01B7               	clrf	_puts$1032^(0+128)
  4603  0B35  0AB7               	incf	_puts$1032^(0+128),f
  4604  0B36  0834               	movf	(puts@s+1)^(0+128),w
  4605  0B37  00AB               	movwf	(fputs@s+1)^(0+128)
  4606  0B38  0833               	movf	puts@s^(0+128),w
  4607  0B39  00AA               	movwf	fputs@s^(0+128)
  4608  0B3A  01AC               	clrf	fputs@fp^(0+128)
  4609  0B3B  318B  23B2  318B   	fcall	_fputs
  4610  0B3E  0021               	movlb	1	; select bank1
  4611  0B3F  1BAB               	btfsc	(?_fputs+1)^(0+128),7
  4612  0B40  0008               	return
  4613  0B41  300A               	movlw	10
  4614  0B42  00A2               	movwf	fputc@c^(0+128)
  4615  0B43  3000               	movlw	0
  4616  0B44  00A3               	movwf	(fputc@c^(0+128)+1)
  4617  0B45  01A4               	clrf	fputc@fp^(0+128)
  4618  0B46  318C  24AE  318B   	fcall	_fputc
  4619  0B49  0021               	movlb	1	; select bank1
  4620  0B4A  1BA3               	btfsc	(?_fputc+1)^(0+128),7
  4621  0B4B  0008               	return
  4622  0B4C  01B7               	clrf	_puts$1032^(0+128)
  4623  0B4D  0008               	return
  4624  0B4E                     __end_of_puts:	
  4625                           
  4626                           	psect	text6
  4627  0AC1                     __ptext6:	
  4628 ;; *************** function _printf *****************
  4629 ;; Defined at:
  4630 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  4631 ;; Parameters:    Size  Location     Type
  4632 ;;  fmt             2    6[BANK2 ] PTR const unsigned char 
  4633 ;;		 -> STR_2(10), STR_1(14), 
  4634 ;; Auto vars:     Size  Location     Type
  4635 ;;  ret             2    0        int 
  4636 ;;  ap              1    2[BANK3 ] PTR void [1]
  4637 ;;		 -> ?_printf(2), 
  4638 ;; Return value:  Size  Location     Type
  4639 ;;                  2    6[BANK2 ] int 
  4640 ;; Registers used:
  4641 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4642 ;; Tracked objects:
  4643 ;;		On entry : 0/0
  4644 ;;		On exit  : 0/0
  4645 ;;		Unchanged: 0/0
  4646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4647 ;;      Params:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0
  4648 ;;      Locals:         0       0       0       0       3       0       0       0       0       0       0       0       
      +0       0
  4649 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  4650 ;;      Totals:         0       0       0       7       3       0       0       0       0       0       0       0       
      +0       0
  4651 ;;Total ram usage:       10 bytes
  4652 ;; Hardware stack levels used:    1
  4653 ;; Hardware stack levels required when called:   14
  4654 ;; This function calls:
  4655 ;;		_vfprintf
  4656 ;; This function is called by:
  4657 ;;		_main
  4658 ;;		_writePrintf
  4659 ;; This function uses a non-reentrant model
  4660 ;;
  4661                           
  4662                           
  4663                           ;psect for function _printf
  4664  0AC1                     _printf:	
  4665                           
  4666                           ;incstack = 0
  4667                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4668  0AC1  3068               	movlw	(low ((?_printf| (0+256)+2)))& (0+255)
  4669  0AC2  0022               	movlb	2	; select bank2
  4670  0AC3  00EC               	movwf	??_printf^(0+256)
  4671  0AC4  086C               	movf	??_printf^(0+256),w
  4672  0AC5  0023               	movlb	3	; select bank3
  4673  0AC6  00A2               	movwf	printf@ap^(0+384)
  4674  0AC7  0022               	movlb	2	; select bank2
  4675  0AC8  0867               	movf	(printf@fmt+1)^(0+256),w
  4676  0AC9  00E1               	movwf	(vfprintf@fmt+1)^(0+256)
  4677  0ACA  0866               	movf	printf@fmt^(0+256),w
  4678  0ACB  00E0               	movwf	vfprintf@fmt^(0+256)
  4679  0ACC  30A2               	movlw	(low (printf@ap| (0+256)))& (0+255)
  4680  0ACD  00EC               	movwf	??_printf^(0+256)
  4681  0ACE  086C               	movf	??_printf^(0+256),w
  4682  0ACF  00E2               	movwf	vfprintf@ap^(0+256)
  4683  0AD0  3000               	movlw	0
  4684  0AD1  318C  243E         	fcall	_vfprintf
  4685  0AD3  0008               	return
  4686  0AD4                     __end_of_printf:	
  4687                           
  4688                           	psect	text7
  4689  0C3E                     __ptext7:	
  4690 ;; *************** function _vfprintf *****************
  4691 ;; Defined at:
  4692 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4693 ;; Parameters:    Size  Location     Type
  4694 ;;  fp              1    wreg     PTR struct _IO_FILE
  4695 ;;		 -> NULL(0), 
  4696 ;;  fmt             2    0[BANK2 ] PTR const unsigned char 
  4697 ;;		 -> STR_2(10), STR_1(14), 
  4698 ;;  ap              1    2[BANK2 ] PTR PTR void 
  4699 ;;		 -> printf@ap(1), 
  4700 ;; Auto vars:     Size  Location     Type
  4701 ;;  fp              1    3[BANK2 ] PTR struct _IO_FILE
  4702 ;;		 -> NULL(0), 
  4703 ;;  cfmt            2    4[BANK2 ] PTR unsigned char 
  4704 ;;		 -> STR_2(10), STR_1(14), 
  4705 ;; Return value:  Size  Location     Type
  4706 ;;                  2    0[BANK2 ] int 
  4707 ;; Registers used:
  4708 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4709 ;; Tracked objects:
  4710 ;;		On entry : 0/0
  4711 ;;		On exit  : 0/0
  4712 ;;		Unchanged: 0/0
  4713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4714 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  4715 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  4716 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4717 ;;      Totals:         0       0       2       6       0       0       0       0       0       0       0       0       
      +0       0
  4718 ;;Total ram usage:        8 bytes
  4719 ;; Hardware stack levels used:    1
  4720 ;; Hardware stack levels required when called:   13
  4721 ;; This function calls:
  4722 ;;		_vfpfcnvrt
  4723 ;; This function is called by:
  4724 ;;		_printf
  4725 ;; This function uses a non-reentrant model
  4726 ;;
  4727                           
  4728                           
  4729                           ;psect for function _vfprintf
  4730  0C3E                     _vfprintf:	
  4731                           
  4732                           ;incstack = 0
  4733                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4734                           ;vfprintf@fp stored from wreg
  4735  0C3E  0022               	movlb	2	; select bank2
  4736  0C3F  00E3               	movwf	vfprintf@fp^(0+256)
  4737                           
  4738                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  4739  0C40  0861               	movf	(vfprintf@fmt+1)^(0+256),w
  4740  0C41  00E5               	movwf	(vfprintf@cfmt+1)^(0+256)
  4741  0C42  0860               	movf	vfprintf@fmt^(0+256),w
  4742  0C43  00E4               	movwf	vfprintf@cfmt^(0+256)
  4743                           
  4744                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  4745  0C44  0020               	movlb	0	; select bank0
  4746  0C45  01CC               	clrf	_nout
  4747  0C46  01CD               	clrf	_nout+1
  4748  0C47                     l3566:	
  4749                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  4750                           
  4751                           
  4752                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  4753  0C47  0022               	movlb	2	; select bank2
  4754  0C48  0864               	movf	vfprintf@cfmt^(0+256),w
  4755  0C49  0084               	movwf	4
  4756  0C4A  0865               	movf	(vfprintf@cfmt+1)^(0+256),w
  4757  0C4B  0085               	movwf	5
  4758  0C4C  0012               	moviw fsr0++
  4759  0C4D  1903               	btfsc	3,2
  4760  0C4E  2C68               	goto	l3568
  4761                           
  4762                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  4763  0C4F  3064               	movlw	(low (vfprintf@cfmt| (0+256)))& (0+255)
  4764  0C50  0021               	movlb	1	; select bank1
  4765  0C51  00EC               	movwf	??_vfprintf^(0+128)
  4766  0C52  086C               	movf	??_vfprintf^(0+128),w
  4767  0C53  00DA               	movwf	vfpfcnvrt@fmt^(0+128)
  4768  0C54  0022               	movlb	2	; select bank2
  4769  0C55  0862               	movf	vfprintf@ap^(0+256),w
  4770  0C56  0021               	movlb	1	; select bank1
  4771  0C57  00ED               	movwf	(??_vfprintf+1)^(0+128)
  4772  0C58  086D               	movf	(??_vfprintf+1)^(0+128),w
  4773  0C59  00DB               	movwf	vfpfcnvrt@ap^(0+128)
  4774  0C5A  0022               	movlb	2	; select bank2
  4775  0C5B  0863               	movf	vfprintf@fp^(0+256),w
  4776  0C5C  3185  259A  318C   	fcall	_vfpfcnvrt
  4777  0C5F  0021               	movlb	1	; select bank1
  4778  0C60  085A               	movf	?_vfpfcnvrt^(0+128),w
  4779  0C61  0020               	movlb	0	; select bank0
  4780  0C62  07CC               	addwf	_nout,f
  4781  0C63  0021               	movlb	1	; select bank1
  4782  0C64  085B               	movf	(?_vfpfcnvrt+1)^(0+128),w
  4783  0C65  0020               	movlb	0	; select bank0
  4784  0C66  3DCD               	addwfc	_nout+1,f
  4785  0C67  2C47               	goto	l3566
  4786  0C68                     l3568:	
  4787                           
  4788                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  4789  0C68  0020               	movlb	0	; select bank0
  4790  0C69  084D               	movf	_nout+1,w
  4791  0C6A  0022               	movlb	2	; select bank2
  4792  0C6B  00E1               	movwf	(?_vfprintf+1)^(0+256)
  4793  0C6C  0020               	movlb	0	; select bank0
  4794  0C6D  084C               	movf	_nout,w
  4795  0C6E  0022               	movlb	2	; select bank2
  4796  0C6F  00E0               	movwf	?_vfprintf^(0+256)
  4797  0C70  0008               	return
  4798  0C71                     __end_of_vfprintf:	
  4799                           
  4800                           	psect	text8
  4801  059A                     __ptext8:	
  4802 ;; *************** function _vfpfcnvrt *****************
  4803 ;; Defined at:
  4804 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4805 ;; Parameters:    Size  Location     Type
  4806 ;;  fp              1    wreg     PTR struct _IO_FILE
  4807 ;;		 -> NULL(0), 
  4808 ;;  fmt             1   58[BANK1 ] PTR PTR unsigned char 
  4809 ;;		 -> vfprintf@cfmt(2), 
  4810 ;;  ap              1   59[BANK1 ] PTR PTR void 
  4811 ;;		 -> printf@ap(1), 
  4812 ;; Auto vars:     Size  Location     Type
  4813 ;;  fp              1   75[BANK1 ] PTR struct _IO_FILE
  4814 ;;		 -> NULL(0), 
  4815 ;;  ll              8   65[BANK1 ] long long 
  4816 ;;  llu             8    0        unsigned long long 
  4817 ;;  f               4    0        unsigned long long 
  4818 ;;  ct              3    0        unsigned char [3]
  4819 ;;  vp              2   73[BANK1 ] PTR void 
  4820 ;;		 -> ?_printf(2), rpm(4), 
  4821 ;;  i               2    0        int 
  4822 ;;  done            2    0        int 
  4823 ;;  cp              2    0        PTR unsigned char 
  4824 ;;  c               1    0        unsigned char 
  4825 ;; Return value:  Size  Location     Type
  4826 ;;                  2   58[BANK1 ] int 
  4827 ;; Registers used:
  4828 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4829 ;; Tracked objects:
  4830 ;;		On entry : 0/0
  4831 ;;		On exit  : 0/0
  4832 ;;		Unchanged: 0/0
  4833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4834 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4835 ;;      Locals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0
  4836 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  4837 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0
  4838 ;;Total ram usage:       18 bytes
  4839 ;; Hardware stack levels used:    1
  4840 ;; Hardware stack levels required when called:   12
  4841 ;; This function calls:
  4842 ;;		_dtoa
  4843 ;;		_fputc
  4844 ;; This function is called by:
  4845 ;;		_vfprintf
  4846 ;; This function uses a non-reentrant model
  4847 ;;
  4848                           
  4849                           
  4850                           ;psect for function _vfpfcnvrt
  4851  059A                     _vfpfcnvrt:	
  4852                           
  4853                           ;incstack = 0
  4854                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4855                           ;vfpfcnvrt@fp stored from wreg
  4856  059A  0021               	movlb	1	; select bank1
  4857  059B  00EB               	movwf	vfpfcnvrt@fp^(0+128)
  4858                           
  4859                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  4860  059C  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  4861  059D  0086               	movwf	6
  4862  059E  3001               	movlw	1	; select bank2/3
  4863  059F  0087               	movwf	7
  4864  05A0  3F40               	moviw [0]fsr1
  4865  05A1  00DC               	movwf	??_vfpfcnvrt^(0+128)
  4866  05A2  3F41               	moviw [1]fsr1
  4867  05A3  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  4868  05A4  085C               	movf	??_vfpfcnvrt^(0+128),w
  4869  05A5  0084               	movwf	4
  4870  05A6  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4871  05A7  0085               	movwf	5
  4872  05A8  0012               	moviw fsr0++
  4873  05A9  3A25               	xorlw	37
  4874  05AA  1D03               	btfss	3,2
  4875  05AB  2E85               	goto	l3308
  4876                           
  4877                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  4878  05AC  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  4879  05AD  0086               	movwf	6
  4880  05AE  3001               	movlw	1	; select bank2/3
  4881  05AF  0087               	movwf	7
  4882  05B0  3001               	movlw	1
  4883  05B1  0781               	addwf	1,f
  4884  05B2  3141               	addfsr 1,1
  4885  05B3  1803               	skipnc
  4886  05B4  0A81               	incf	1,f
  4887                           
  4888                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  4889  05B5  0020               	movlb	0	; select bank0
  4890  05B6  01CE               	clrf	_width
  4891  05B7  01CF               	clrf	_width+1
  4892  05B8  0021               	movlb	1	; select bank1
  4893  05B9  01EE               	clrf	_flags^(0+128)
  4894  05BA  01EF               	clrf	(_flags+1)^(0+128)
  4895                           
  4896                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  4897  05BB  30FF               	movlw	255
  4898  05BC  0020               	movlb	0	; select bank0
  4899  05BD  00D0               	movwf	_prec
  4900  05BE  30FF               	movlw	255
  4901  05BF  00D1               	movwf	_prec+1
  4902                           
  4903                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  4904  05C0  0021               	movlb	1	; select bank1
  4905  05C1  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  4906  05C2  0086               	movwf	6
  4907  05C3  3001               	movlw	1	; select bank2/3
  4908  05C4  0087               	movwf	7
  4909  05C5  3F40               	moviw [0]fsr1
  4910  05C6  00DC               	movwf	??_vfpfcnvrt^(0+128)
  4911  05C7  3F41               	moviw [1]fsr1
  4912  05C8  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  4913  05C9  085C               	movf	??_vfpfcnvrt^(0+128),w
  4914  05CA  0084               	movwf	4
  4915  05CB  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4916  05CC  0085               	movwf	5
  4917  05CD  0012               	moviw fsr0++
  4918  05CE  3A64               	xorlw	100
  4919  05CF  1903               	btfsc	3,2
  4920  05D0  2DE1               	goto	l3272
  4921  05D1  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  4922  05D2  0086               	movwf	6
  4923  05D3  3001               	movlw	1	; select bank2/3
  4924  05D4  0087               	movwf	7
  4925  05D5  3F40               	moviw [0]fsr1
  4926  05D6  00DC               	movwf	??_vfpfcnvrt^(0+128)
  4927  05D7  3F41               	moviw [1]fsr1
  4928  05D8  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  4929  05D9  085C               	movf	??_vfpfcnvrt^(0+128),w
  4930  05DA  0084               	movwf	4
  4931  05DB  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4932  05DC  0085               	movwf	5
  4933  05DD  0012               	moviw fsr0++
  4934  05DE  3A69               	xorlw	105
  4935  05DF  1D03               	btfss	3,2
  4936  05E0  2E1E               	goto	l3280
  4937  05E1                     l3272:	
  4938                           
  4939                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  4940  05E1  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  4941  05E2  0086               	movwf	6
  4942  05E3  3001               	movlw	1	; select bank2/3
  4943  05E4  0087               	movwf	7
  4944  05E5  3001               	movlw	1
  4945  05E6  0781               	addwf	1,f
  4946  05E7  3141               	addfsr 1,1
  4947  05E8  1803               	skipnc
  4948  05E9  0A81               	incf	1,f
  4949                           
  4950                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4951  05EA  085B               	movf	vfpfcnvrt@ap^(0+128),w
  4952  05EB  0086               	movwf	6
  4953  05EC  3001               	movlw	1	; select bank2/3
  4954  05ED  0087               	movwf	7
  4955  05EE  0801               	movf	1,w
  4956  05EF  0084               	movwf	4
  4957  05F0  3001               	movlw	1	; select bank2/3
  4958  05F1  0085               	movwf	5
  4959  05F2  3002               	movlw	2
  4960  05F3  0781               	addwf	1,f
  4961  05F4  3F00               	moviw [0]fsr0
  4962  05F5  00DC               	movwf	??_vfpfcnvrt^(0+128)
  4963  05F6  3F01               	moviw [1]fsr0
  4964  05F7  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  4965  05F8  085C               	movf	??_vfpfcnvrt^(0+128),w
  4966  05F9  00E1               	movwf	vfpfcnvrt@ll^(0+128)
  4967  05FA  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4968  05FB  00E2               	movwf	(vfpfcnvrt@ll+1)^(0+128)
  4969  05FC  0D89               	rlf	9,f
  4970  05FD  3B89               	subwfb	9,f
  4971  05FE  0989               	comf	9,f
  4972  05FF  00E3               	movwf	(vfpfcnvrt@ll+2)^(0+128)
  4973  0600  00E4               	movwf	(vfpfcnvrt@ll+3)^(0+128)
  4974  0601  00E5               	movwf	(vfpfcnvrt@ll+4)^(0+128)
  4975  0602  00E6               	movwf	(vfpfcnvrt@ll+5)^(0+128)
  4976  0603  00E7               	movwf	(vfpfcnvrt@ll+6)^(0+128)
  4977  0604  00E8               	movwf	(vfpfcnvrt@ll+7)^(0+128)
  4978                           
  4979                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  4980  0605  0861               	movf	vfpfcnvrt@ll^(0+128),w
  4981  0606  00BC               	movwf	dtoa@d^(0+128)
  4982  0607  0862               	movf	(vfpfcnvrt@ll+1)^(0+128),w
  4983  0608  00BD               	movwf	(dtoa@d+1)^(0+128)
  4984  0609  0863               	movf	(vfpfcnvrt@ll+2)^(0+128),w
  4985  060A  00BE               	movwf	(dtoa@d+2)^(0+128)
  4986  060B  0864               	movf	(vfpfcnvrt@ll+3)^(0+128),w
  4987  060C  00BF               	movwf	(dtoa@d+3)^(0+128)
  4988  060D  0865               	movf	(vfpfcnvrt@ll+4)^(0+128),w
  4989  060E  00C0               	movwf	(dtoa@d+4)^(0+128)
  4990  060F  0866               	movf	(vfpfcnvrt@ll+5)^(0+128),w
  4991  0610  00C1               	movwf	(dtoa@d+5)^(0+128)
  4992  0611  0867               	movf	(vfpfcnvrt@ll+6)^(0+128),w
  4993  0612  00C2               	movwf	(dtoa@d+6)^(0+128)
  4994  0613  0868               	movf	(vfpfcnvrt@ll+7)^(0+128),w
  4995  0614  00C3               	movwf	(dtoa@d+7)^(0+128)
  4996  0615  086B               	movf	vfpfcnvrt@fp^(0+128),w
  4997  0616  3184  244D         	fcall	_dtoa
  4998  0618  0021               	movlb	1	; select bank1
  4999  0619  083D               	movf	(?_dtoa+1)^(0+128),w
  5000  061A  00DB               	movwf	(?_vfpfcnvrt+1)^(0+128)
  5001  061B  083C               	movf	?_dtoa^(0+128),w
  5002  061C  00DA               	movwf	?_vfpfcnvrt^(0+128)
  5003  061D  0008               	return
  5004  061E                     l3280:	
  5005                           
  5006                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1077:      
      +                             if (*fmt[0] == 'n') {
  5007  061E  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5008  061F  0086               	movwf	6
  5009  0620  3001               	movlw	1	; select bank2/3
  5010  0621  0087               	movwf	7
  5011  0622  3F40               	moviw [0]fsr1
  5012  0623  00DC               	movwf	??_vfpfcnvrt^(0+128)
  5013  0624  3F41               	moviw [1]fsr1
  5014  0625  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5015  0626  085C               	movf	??_vfpfcnvrt^(0+128),w
  5016  0627  0084               	movwf	4
  5017  0628  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5018  0629  0085               	movwf	5
  5019  062A  0012               	moviw fsr0++
  5020  062B  3A6E               	xorlw	110
  5021  062C  1D03               	btfss	3,2
  5022  062D  2E52               	goto	l3292
  5023                           
  5024                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1078:      
      +                                 ++*fmt;
  5025  062E  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5026  062F  0086               	movwf	6
  5027  0630  3001               	movlw	1	; select bank2/3
  5028  0631  0087               	movwf	7
  5029  0632  3001               	movlw	1
  5030  0633  0781               	addwf	1,f
  5031  0634  3141               	addfsr 1,1
  5032  0635  1803               	skipnc
  5033  0636  0A81               	incf	1,f
  5034                           
  5035                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1079:      
      +                                 vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
  5036  0637  085B               	movf	vfpfcnvrt@ap^(0+128),w
  5037  0638  0086               	movwf	6
  5038  0639  3001               	movlw	1	; select bank2/3
  5039  063A  0087               	movwf	7
  5040  063B  0801               	movf	1,w
  5041  063C  0084               	movwf	4
  5042  063D  3001               	movlw	1	; select bank2/3
  5043  063E  0085               	movwf	5
  5044  063F  3002               	movlw	2
  5045  0640  0781               	addwf	1,f
  5046  0641  3F00               	moviw [0]fsr0
  5047  0642  00E9               	movwf	vfpfcnvrt@vp^(0+128)
  5048  0643  3F01               	moviw [1]fsr0
  5049  0644  00EA               	movwf	(vfpfcnvrt@vp+1)^(0+128)
  5050                           
  5051                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1080:      
      +                                 *(int *)vp = nout;
  5052  0645  0869               	movf	vfpfcnvrt@vp^(0+128),w
  5053  0646  0086               	movwf	6
  5054  0647  086A               	movf	(vfpfcnvrt@vp+1)^(0+128),w
  5055  0648  0087               	movwf	7
  5056  0649  0020               	movlb	0	; select bank0
  5057  064A  084C               	movf	_nout,w
  5058  064B  3FC0               	movwi [0]fsr1
  5059  064C  084D               	movf	_nout+1,w
  5060  064D  3FC1               	movwi [1]fsr1
  5061  064E                     l3288:	
  5062                           
  5063                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1081:      
      +                                 return 0;
  5064  064E  0021               	movlb	1	; select bank1
  5065  064F  01DA               	clrf	?_vfpfcnvrt^(0+128)
  5066  0650  01DB               	clrf	(?_vfpfcnvrt+1)^(0+128)
  5067  0651  0008               	return
  5068  0652                     l3292:	
  5069                           
  5070                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  5071  0652  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5072  0653  0086               	movwf	6
  5073  0654  3001               	movlw	1	; select bank2/3
  5074  0655  0087               	movwf	7
  5075  0656  3F40               	moviw [0]fsr1
  5076  0657  00DC               	movwf	??_vfpfcnvrt^(0+128)
  5077  0658  3F41               	moviw [1]fsr1
  5078  0659  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5079  065A  085C               	movf	??_vfpfcnvrt^(0+128),w
  5080  065B  0084               	movwf	4
  5081  065C  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5082  065D  0085               	movwf	5
  5083  065E  0012               	moviw fsr0++
  5084  065F  3A25               	xorlw	37
  5085  0660  1D03               	btfss	3,2
  5086  0661  2E7B               	goto	l3302
  5087                           
  5088                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  5089  0662  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5090  0663  0086               	movwf	6
  5091  0664  3001               	movlw	1	; select bank2/3
  5092  0665  0087               	movwf	7
  5093  0666  3001               	movlw	1
  5094  0667  0781               	addwf	1,f
  5095  0668  3141               	addfsr 1,1
  5096  0669  1803               	skipnc
  5097  066A  0A81               	incf	1,f
  5098                           
  5099                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  5100  066B  3025               	movlw	37
  5101  066C  00A2               	movwf	fputc@c^(0+128)
  5102  066D  3000               	movlw	0
  5103  066E  00A3               	movwf	(fputc@c^(0+128)+1)
  5104  066F  086B               	movf	vfpfcnvrt@fp^(0+128),w
  5105  0670  00DC               	movwf	??_vfpfcnvrt^(0+128)
  5106  0671  085C               	movf	??_vfpfcnvrt^(0+128),w
  5107  0672  00A4               	movwf	fputc@fp^(0+128)
  5108  0673  318C  24AE         	fcall	_fputc
  5109  0675                     l3298:	
  5110                           
  5111                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  5112  0675  3001               	movlw	1
  5113  0676  0021               	movlb	1	; select bank1
  5114  0677  00DA               	movwf	?_vfpfcnvrt^(0+128)
  5115  0678  3000               	movlw	0
  5116  0679  00DB               	movwf	(?_vfpfcnvrt^(0+128)+1)
  5117  067A  0008               	return
  5118  067B                     l3302:	
  5119                           
  5120                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  5121  067B  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5122  067C  0086               	movwf	6
  5123  067D  3001               	movlw	1	; select bank2/3
  5124  067E  0087               	movwf	7
  5125  067F  3001               	movlw	1
  5126  0680  0781               	addwf	1,f
  5127  0681  3141               	addfsr 1,1
  5128  0682  1803               	skipnc
  5129  0683  0A81               	incf	1,f
  5130  0684  2E4E               	goto	l3288
  5131  0685                     l3308:	
  5132                           
  5133                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  5134  0685  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5135  0686  0086               	movwf	6
  5136  0687  3001               	movlw	1	; select bank2/3
  5137  0688  0087               	movwf	7
  5138  0689  3F40               	moviw [0]fsr1
  5139  068A  00DC               	movwf	??_vfpfcnvrt^(0+128)
  5140  068B  3F41               	moviw [1]fsr1
  5141  068C  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5142  068D  085C               	movf	??_vfpfcnvrt^(0+128),w
  5143  068E  0084               	movwf	4
  5144  068F  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5145  0690  0085               	movwf	5
  5146  0691  0800               	movf	0,w	;code access
  5147  0692  00DE               	movwf	(??_vfpfcnvrt+2)^(0+128)
  5148  0693  01DF               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  5149  0694  085E               	movf	(??_vfpfcnvrt+2)^(0+128),w
  5150  0695  00A2               	movwf	fputc@c^(0+128)
  5151  0696  085F               	movf	(??_vfpfcnvrt+3)^(0+128),w
  5152  0697  00A3               	movwf	(fputc@c+1)^(0+128)
  5153  0698  086B               	movf	vfpfcnvrt@fp^(0+128),w
  5154  0699  00E0               	movwf	(??_vfpfcnvrt+4)^(0+128)
  5155  069A  0860               	movf	(??_vfpfcnvrt+4)^(0+128),w
  5156  069B  00A4               	movwf	fputc@fp^(0+128)
  5157  069C  318C  24AE  3185   	fcall	_fputc
  5158                           
  5159                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  5160  069F  0021               	movlb	1	; select bank1
  5161  06A0  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5162  06A1  0086               	movwf	6
  5163  06A2  3001               	movlw	1	; select bank2/3
  5164  06A3  0087               	movwf	7
  5165  06A4  3001               	movlw	1
  5166  06A5  0781               	addwf	1,f
  5167  06A6  3141               	addfsr 1,1
  5168  06A7  1803               	skipnc
  5169  06A8  0A81               	incf	1,f
  5170  06A9  2E75               	goto	l3298
  5171  06AA                     __end_of_vfpfcnvrt:	
  5172                           
  5173                           	psect	text9
  5174  044D                     __ptext9:	
  5175 ;; *************** function _dtoa *****************
  5176 ;; Defined at:
  5177 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5178 ;; Parameters:    Size  Location     Type
  5179 ;;  fp              1    wreg     PTR struct _IO_FILE
  5180 ;;		 -> NULL(0), 
  5181 ;;  d               8   28[BANK1 ] long long 
  5182 ;; Auto vars:     Size  Location     Type
  5183 ;;  fp              1   41[BANK1 ] PTR struct _IO_FILE
  5184 ;;		 -> NULL(0), 
  5185 ;;  n               8   48[BANK1 ] long long 
  5186 ;;  i               2   56[BANK1 ] int 
  5187 ;;  s               2   46[BANK1 ] int 
  5188 ;;  w               2   44[BANK1 ] int 
  5189 ;;  p               2   42[BANK1 ] int 
  5190 ;; Return value:  Size  Location     Type
  5191 ;;                  2   28[BANK1 ] int 
  5192 ;; Registers used:
  5193 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5194 ;; Tracked objects:
  5195 ;;		On entry : 0/0
  5196 ;;		On exit  : 0/0
  5197 ;;		Unchanged: 0/0
  5198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5199 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  5200 ;;      Locals:         0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0
  5201 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5202 ;;      Totals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0
  5203 ;;Total ram usage:       30 bytes
  5204 ;; Hardware stack levels used:    1
  5205 ;; Hardware stack levels required when called:   11
  5206 ;; This function calls:
  5207 ;;		___aodiv
  5208 ;;		___aomod
  5209 ;;		_abs
  5210 ;;		_pad
  5211 ;; This function is called by:
  5212 ;;		_vfpfcnvrt
  5213 ;; This function uses a non-reentrant model
  5214 ;;
  5215                           
  5216                           
  5217                           ;psect for function _dtoa
  5218  044D                     _dtoa:	
  5219                           
  5220                           ;incstack = 0
  5221                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5222                           ;dtoa@fp stored from wreg
  5223  044D  0021               	movlb	1	; select bank1
  5224  044E  00C9               	movwf	dtoa@fp^(0+128)
  5225                           
  5226                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  5227  044F  083C               	movf	dtoa@d^(0+128),w
  5228  0450  00D0               	movwf	dtoa@n^(0+128)
  5229  0451  083D               	movf	(dtoa@d+1)^(0+128),w
  5230  0452  00D1               	movwf	(dtoa@n+1)^(0+128)
  5231  0453  083E               	movf	(dtoa@d+2)^(0+128),w
  5232  0454  00D2               	movwf	(dtoa@n+2)^(0+128)
  5233  0455  083F               	movf	(dtoa@d+3)^(0+128),w
  5234  0456  00D3               	movwf	(dtoa@n+3)^(0+128)
  5235  0457  0840               	movf	(dtoa@d+4)^(0+128),w
  5236  0458  00D4               	movwf	(dtoa@n+4)^(0+128)
  5237  0459  0841               	movf	(dtoa@d+5)^(0+128),w
  5238  045A  00D5               	movwf	(dtoa@n+5)^(0+128)
  5239  045B  0842               	movf	(dtoa@d+6)^(0+128),w
  5240  045C  00D6               	movwf	(dtoa@n+6)^(0+128)
  5241  045D  0843               	movf	(dtoa@d+7)^(0+128),w
  5242  045E  00D7               	movwf	(dtoa@n+7)^(0+128)
  5243                           
  5244                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  5245  045F  30D0               	movlw	low dtoa@n
  5246  0460  0086               	movwf	6
  5247  0461  3000               	movlw	high dtoa@n
  5248  0462  0087               	movwf	7
  5249  0463  3F47               	moviw [7]fsr1
  5250  0464  00C4               	movwf	??_dtoa^(0+128)
  5251  0465  1FC4               	btfss	??_dtoa^(0+128),7
  5252  0466  2C69               	goto	u3880
  5253  0467  3001               	movlw	1
  5254  0468  2C6A               	goto	u3890
  5255  0469                     u3880:	
  5256  0469  3000               	movlw	0
  5257  046A                     u3890:	
  5258  046A  0021               	movlb	1	; select bank1
  5259  046B  00C5               	movwf	(??_dtoa+1)^(0+128)
  5260  046C  01C6               	clrf	((??_dtoa+1)^(0+128)+1)
  5261  046D  0845               	movf	(??_dtoa+1)^(0+128),w
  5262  046E  00CE               	movwf	dtoa@s^(0+128)
  5263  046F  0846               	movf	(??_dtoa+2)^(0+128),w
  5264  0470  00CF               	movwf	(dtoa@s+1)^(0+128)
  5265                           
  5266                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  5267  0471  084E               	movf	dtoa@s^(0+128),w
  5268  0472  044F               	iorwf	(dtoa@s+1)^(0+128),w
  5269  0473  1903               	btfsc	3,2
  5270  0474  2C93               	goto	l449
  5271                           
  5272                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  5273  0475  09D0               	comf	dtoa@n^(0+128),f
  5274  0476  09D1               	comf	(dtoa@n+1)^(0+128),f
  5275  0477  09D2               	comf	(dtoa@n+2)^(0+128),f
  5276  0478  09D3               	comf	(dtoa@n+3)^(0+128),f
  5277  0479  09D4               	comf	(dtoa@n+4)^(0+128),f
  5278  047A  09D5               	comf	(dtoa@n+5)^(0+128),f
  5279  047B  09D6               	comf	(dtoa@n+6)^(0+128),f
  5280  047C  09D7               	comf	(dtoa@n+7)^(0+128),f
  5281  047D  0AD0               	incf	dtoa@n^(0+128),f
  5282  047E  1D03               	skipz
  5283  047F  2C93               	goto	l449
  5284  0480  0AD1               	incf	(dtoa@n+1)^(0+128),f
  5285  0481  1D03               	skipz
  5286  0482  2C93               	goto	l449
  5287  0483  0AD2               	incf	(dtoa@n+2)^(0+128),f
  5288  0484  1D03               	skipz
  5289  0485  2C93               	goto	l449
  5290  0486  0AD3               	incf	(dtoa@n+3)^(0+128),f
  5291  0487  1D03               	skipz
  5292  0488  2C93               	goto	l449
  5293  0489  0AD4               	incf	(dtoa@n+4)^(0+128),f
  5294  048A  1D03               	skipz
  5295  048B  2C93               	goto	l449
  5296  048C  0AD5               	incf	(dtoa@n+5)^(0+128),f
  5297  048D  1D03               	skipz
  5298  048E  2C93               	goto	l449
  5299  048F  0AD6               	incf	(dtoa@n+6)^(0+128),f
  5300  0490  1D03               	skipz
  5301  0491  2C93               	goto	l449
  5302  0492  0AD7               	incf	(dtoa@n+7)^(0+128),f
  5303  0493                     l449:	
  5304                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 284:     }
  5305                           
  5306                           
  5307                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  5308  0493  0020               	movlb	0	; select bank0
  5309  0494  1BD1               	btfsc	_prec+1,7
  5310  0495  2C9B               	goto	l450
  5311                           
  5312                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  5313  0496  30FD               	movlw	253
  5314  0497  0021               	movlb	1	; select bank1
  5315  0498  05EE               	andwf	_flags^(0+128),f
  5316  0499  30FF               	movlw	255
  5317  049A  05EF               	andwf	(_flags+1)^(0+128),f
  5318  049B                     l450:	
  5319                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 289:     }
  5320                           
  5321                           
  5322                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  5323  049B  0020               	movlb	0	; select bank0
  5324  049C  0851               	movf	_prec+1,w
  5325  049D  3A80               	xorlw	128
  5326  049E  0021               	movlb	1	; select bank1
  5327  049F  00C4               	movwf	??_dtoa^(0+128)
  5328  04A0  3080               	movlw	128
  5329  04A1  0244               	subwf	??_dtoa^(0+128),w
  5330  04A2  1D03               	skipz
  5331  04A3  2CA7               	goto	u3935
  5332  04A4  3001               	movlw	1
  5333  04A5  0020               	movlb	0	; select bank0
  5334  04A6  0250               	subwf	_prec,w
  5335  04A7                     u3935:	
  5336  04A7  1803               	skipnc
  5337  04A8  2CAF               	goto	l3204
  5338  04A9  3001               	movlw	1
  5339  04AA  0021               	movlb	1	; select bank1
  5340  04AB  00CA               	movwf	dtoa@p^(0+128)
  5341  04AC  3000               	movlw	0
  5342  04AD  00CB               	movwf	(dtoa@p^(0+128)+1)
  5343  04AE  2CB7               	goto	l454
  5344  04AF                     l3204:	
  5345  04AF  0020               	movlb	0	; select bank0
  5346  04B0  0851               	movf	_prec+1,w
  5347  04B1  0021               	movlb	1	; select bank1
  5348  04B2  00CB               	movwf	(dtoa@p+1)^(0+128)
  5349  04B3  0020               	movlb	0	; select bank0
  5350  04B4  0850               	movf	_prec,w
  5351  04B5  0021               	movlb	1	; select bank1
  5352  04B6  00CA               	movwf	dtoa@p^(0+128)
  5353  04B7                     l454:	
  5354                           
  5355                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  5356  04B7  0020               	movlb	0	; select bank0
  5357  04B8  084F               	movf	_width+1,w
  5358  04B9  0021               	movlb	1	; select bank1
  5359  04BA  00CD               	movwf	(dtoa@w+1)^(0+128)
  5360  04BB  0020               	movlb	0	; select bank0
  5361  04BC  084E               	movf	_width,w
  5362  04BD  0021               	movlb	1	; select bank1
  5363  04BE  00CC               	movwf	dtoa@w^(0+128)
  5364                           
  5365                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  5366  04BF  084E               	movf	dtoa@s^(0+128),w
  5367  04C0  044F               	iorwf	(dtoa@s+1)^(0+128),w
  5368  04C1  1D03               	btfss	3,2
  5369  04C2  2CC5               	goto	l3210
  5370  04C3  1D6E               	btfss	_flags^(0+128),2
  5371  04C4  2CC9               	goto	l455
  5372  04C5                     l3210:	
  5373                           
  5374                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  5375  04C5  30FF               	movlw	255
  5376  04C6  07CC               	addwf	dtoa@w^(0+128),f
  5377  04C7  30FF               	movlw	255
  5378  04C8  3DCD               	addwfc	(dtoa@w+1)^(0+128),f
  5379  04C9                     l455:	
  5380                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 294:     }
  5381                           
  5382                           
  5383                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  5384  04C9  301F               	movlw	31
  5385  04CA  00D8               	movwf	dtoa@i^(0+128)
  5386  04CB  3000               	movlw	0
  5387  04CC  00D9               	movwf	(dtoa@i^(0+128)+1)
  5388                           
  5389                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  5390  04CD  0022               	movlb	2	; select bank2
  5391  04CE  01BF               	clrf	(_dbuf^(0+256)+31)
  5392                           
  5393                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5394  04CF  2D5E               	goto	l458
  5395  04D0                     l3224:	
  5396  04D0  0021               	movlb	1	; select bank1
  5397  04D1  0850               	movf	dtoa@n^(0+128),w
  5398  04D2  0451               	iorwf	(dtoa@n+1)^(0+128),w
  5399  04D3  0452               	iorwf	(dtoa@n+2)^(0+128),w
  5400  04D4  0453               	iorwf	(dtoa@n+3)^(0+128),w
  5401  04D5  0454               	iorwf	(dtoa@n+4)^(0+128),w
  5402  04D6  0455               	iorwf	(dtoa@n+5)^(0+128),w
  5403  04D7  0456               	iorwf	(dtoa@n+6)^(0+128),w
  5404  04D8  0457               	iorwf	(dtoa@n+7)^(0+128),w
  5405  04D9  1D03               	skipz
  5406  04DA  2CF5               	goto	l3214
  5407  04DB  084B               	movf	(dtoa@p+1)^(0+128),w
  5408  04DC  3A80               	xorlw	128
  5409  04DD  00C4               	movwf	??_dtoa^(0+128)
  5410  04DE  3080               	movlw	128
  5411  04DF  0244               	subwf	??_dtoa^(0+128),w
  5412  04E0  1D03               	skipz
  5413  04E1  2CE4               	goto	u3985
  5414  04E2  3001               	movlw	1
  5415  04E3  024A               	subwf	dtoa@p^(0+128),w
  5416  04E4                     u3985:	
  5417  04E4  1803               	skipnc
  5418  04E5  2CF5               	goto	l3214
  5419  04E6  0021               	movlb	1	; select bank1
  5420  04E7  084D               	movf	(dtoa@w+1)^(0+128),w
  5421  04E8  3A80               	xorlw	128
  5422  04E9  00C4               	movwf	??_dtoa^(0+128)
  5423  04EA  3080               	movlw	128
  5424  04EB  0244               	subwf	??_dtoa^(0+128),w
  5425  04EC  1D03               	skipz
  5426  04ED  2CF0               	goto	u3995
  5427  04EE  3001               	movlw	1
  5428  04EF  024C               	subwf	dtoa@w^(0+128),w
  5429  04F0                     u3995:	
  5430  04F0  1C03               	skipc
  5431  04F1  2D6A               	goto	l3232
  5432  04F2  0021               	movlb	1	; select bank1
  5433  04F3  1CEE               	btfss	_flags^(0+128),1
  5434  04F4  2D6A               	goto	l3232
  5435  04F5                     l3214:	
  5436                           
  5437                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  5438  04F5  30FF               	movlw	255
  5439  04F6  0021               	movlb	1	; select bank1
  5440  04F7  07D8               	addwf	dtoa@i^(0+128),f
  5441  04F8  30FF               	movlw	255
  5442  04F9  3DD9               	addwfc	(dtoa@i+1)^(0+128),f
  5443                           
  5444                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  5445  04FA  300A               	movlw	10
  5446  04FB  00A0               	movwf	___aomod@divisor^(0+128)
  5447  04FC  01A1               	clrf	(___aomod@divisor+1)^(0+128)
  5448  04FD  01A2               	clrf	(___aomod@divisor+2)^(0+128)
  5449  04FE  01A3               	clrf	(___aomod@divisor+3)^(0+128)
  5450  04FF  01A4               	clrf	(___aomod@divisor+4)^(0+128)
  5451  0500  01A5               	clrf	(___aomod@divisor+5)^(0+128)
  5452  0501  01A6               	clrf	(___aomod@divisor+6)^(0+128)
  5453  0502  01A7               	clrf	(___aomod@divisor+7)^(0+128)
  5454  0503  0850               	movf	dtoa@n^(0+128),w
  5455  0504  00A8               	movwf	___aomod@dividend^(0+128)
  5456  0505  0851               	movf	(dtoa@n+1)^(0+128),w
  5457  0506  00A9               	movwf	(___aomod@dividend+1)^(0+128)
  5458  0507  0852               	movf	(dtoa@n+2)^(0+128),w
  5459  0508  00AA               	movwf	(___aomod@dividend+2)^(0+128)
  5460  0509  0853               	movf	(dtoa@n+3)^(0+128),w
  5461  050A  00AB               	movwf	(___aomod@dividend+3)^(0+128)
  5462  050B  0854               	movf	(dtoa@n+4)^(0+128),w
  5463  050C  00AC               	movwf	(___aomod@dividend+4)^(0+128)
  5464  050D  0855               	movf	(dtoa@n+5)^(0+128),w
  5465  050E  00AD               	movwf	(___aomod@dividend+5)^(0+128)
  5466  050F  0856               	movf	(dtoa@n+6)^(0+128),w
  5467  0510  00AE               	movwf	(___aomod@dividend+6)^(0+128)
  5468  0511  0857               	movf	(dtoa@n+7)^(0+128),w
  5469  0512  00AF               	movwf	(___aomod@dividend+7)^(0+128)
  5470  0513  318F  2721  3184   	fcall	___aomod
  5471  0516  0021               	movlb	1	; select bank1
  5472  0517  0821               	movf	(?___aomod+1)^(0+128),w
  5473  0518  00B4               	movwf	(abs@a+1)^(0+128)
  5474  0519  0820               	movf	?___aomod^(0+128),w
  5475  051A  00B3               	movwf	abs@a^(0+128)
  5476  051B  318B  2301  3184   	fcall	_abs
  5477  051E  0021               	movlb	1	; select bank1
  5478  051F  0833               	movf	?_abs^(0+128),w
  5479  0520  3E30               	addlw	48
  5480  0521  00C4               	movwf	??_dtoa^(0+128)
  5481  0522  0858               	movf	dtoa@i^(0+128),w
  5482  0523  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5483  0524  0086               	movwf	6
  5484  0525  3001               	movlw	1	; select bank2/3
  5485  0526  0087               	movwf	7
  5486  0527  0844               	movf	??_dtoa^(0+128),w
  5487  0528  0081               	movwf	1
  5488                           
  5489                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  5490  0529  30FF               	movlw	255
  5491  052A  07CA               	addwf	dtoa@p^(0+128),f
  5492  052B  30FF               	movlw	255
  5493  052C  3DCB               	addwfc	(dtoa@p+1)^(0+128),f
  5494                           
  5495                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  5496  052D  30FF               	movlw	255
  5497  052E  07CC               	addwf	dtoa@w^(0+128),f
  5498  052F  30FF               	movlw	255
  5499  0530  3DCD               	addwfc	(dtoa@w+1)^(0+128),f
  5500                           
  5501                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  5502  0531  300A               	movlw	10
  5503  0532  00A0               	movwf	___aodiv@divisor^(0+128)
  5504  0533  01A1               	clrf	(___aodiv@divisor+1)^(0+128)
  5505  0534  01A2               	clrf	(___aodiv@divisor+2)^(0+128)
  5506  0535  01A3               	clrf	(___aodiv@divisor+3)^(0+128)
  5507  0536  01A4               	clrf	(___aodiv@divisor+4)^(0+128)
  5508  0537  01A5               	clrf	(___aodiv@divisor+5)^(0+128)
  5509  0538  01A6               	clrf	(___aodiv@divisor+6)^(0+128)
  5510  0539  01A7               	clrf	(___aodiv@divisor+7)^(0+128)
  5511  053A  0850               	movf	dtoa@n^(0+128),w
  5512  053B  00A8               	movwf	___aodiv@dividend^(0+128)
  5513  053C  0851               	movf	(dtoa@n+1)^(0+128),w
  5514  053D  00A9               	movwf	(___aodiv@dividend+1)^(0+128)
  5515  053E  0852               	movf	(dtoa@n+2)^(0+128),w
  5516  053F  00AA               	movwf	(___aodiv@dividend+2)^(0+128)
  5517  0540  0853               	movf	(dtoa@n+3)^(0+128),w
  5518  0541  00AB               	movwf	(___aodiv@dividend+3)^(0+128)
  5519  0542  0854               	movf	(dtoa@n+4)^(0+128),w
  5520  0543  00AC               	movwf	(___aodiv@dividend+4)^(0+128)
  5521  0544  0855               	movf	(dtoa@n+5)^(0+128),w
  5522  0545  00AD               	movwf	(___aodiv@dividend+5)^(0+128)
  5523  0546  0856               	movf	(dtoa@n+6)^(0+128),w
  5524  0547  00AE               	movwf	(___aodiv@dividend+6)^(0+128)
  5525  0548  0857               	movf	(dtoa@n+7)^(0+128),w
  5526  0549  00AF               	movwf	(___aodiv@dividend+7)^(0+128)
  5527  054A  3186  26AA  3184   	fcall	___aodiv
  5528  054D  0021               	movlb	1	; select bank1
  5529  054E  0820               	movf	?___aodiv^(0+128),w
  5530  054F  00D0               	movwf	dtoa@n^(0+128)
  5531  0550  0821               	movf	(?___aodiv+1)^(0+128),w
  5532  0551  00D1               	movwf	(dtoa@n+1)^(0+128)
  5533  0552  0822               	movf	(?___aodiv+2)^(0+128),w
  5534  0553  00D2               	movwf	(dtoa@n+2)^(0+128)
  5535  0554  0823               	movf	(?___aodiv+3)^(0+128),w
  5536  0555  00D3               	movwf	(dtoa@n+3)^(0+128)
  5537  0556  0824               	movf	(?___aodiv+4)^(0+128),w
  5538  0557  00D4               	movwf	(dtoa@n+4)^(0+128)
  5539  0558  0825               	movf	(?___aodiv+5)^(0+128),w
  5540  0559  00D5               	movwf	(dtoa@n+5)^(0+128)
  5541  055A  0826               	movf	(?___aodiv+6)^(0+128),w
  5542  055B  00D6               	movwf	(dtoa@n+6)^(0+128)
  5543  055C  0827               	movf	(?___aodiv+7)^(0+128),w
  5544  055D  00D7               	movwf	(dtoa@n+7)^(0+128)
  5545  055E                     l458:	
  5546                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 305:     }
  5547                           
  5548                           
  5549                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5550  055E  0021               	movlb	1	; select bank1
  5551  055F  0859               	movf	(dtoa@i+1)^(0+128),w
  5552  0560  3A80               	xorlw	128
  5553  0561  00C4               	movwf	??_dtoa^(0+128)
  5554  0562  3080               	movlw	128
  5555  0563  0244               	subwf	??_dtoa^(0+128),w
  5556  0564  1D03               	skipz
  5557  0565  2D68               	goto	u3965
  5558  0566  3001               	movlw	1
  5559  0567  0258               	subwf	dtoa@i^(0+128),w
  5560  0568                     u3965:	
  5561  0568  1803               	btfsc	3,0
  5562  0569  2CD0               	goto	l3224
  5563  056A                     l3232:	
  5564                           
  5565                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  5566  056A  0021               	movlb	1	; select bank1
  5567  056B  084E               	movf	dtoa@s^(0+128),w
  5568  056C  044F               	iorwf	(dtoa@s+1)^(0+128),w
  5569  056D  1D03               	btfss	3,2
  5570  056E  2D71               	goto	l3236
  5571  056F  1D6E               	btfss	_flags^(0+128),2
  5572  0570  2D88               	goto	l3246
  5573  0571                     l3236:	
  5574                           
  5575                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  5576  0571  30FF               	movlw	255
  5577  0572  07D8               	addwf	dtoa@i^(0+128),f
  5578  0573  30FF               	movlw	255
  5579  0574  3DD9               	addwfc	(dtoa@i+1)^(0+128),f
  5580                           
  5581                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  5582  0575  084E               	movf	dtoa@s^(0+128),w
  5583  0576  044F               	iorwf	(dtoa@s+1)^(0+128),w
  5584  0577  1D03               	btfss	3,2
  5585  0578  2D7B               	goto	l3242
  5586  0579  302B               	movlw	43
  5587  057A  2D7C               	goto	L1
  5588  057B                     l3242:	
  5589  057B  302D               	movlw	45
  5590  057C                     L1:	
  5591  057C  00C7               	movwf	_dtoa$686^(0+128)
  5592  057D  3000               	movlw	0
  5593  057E  00C8               	movwf	(_dtoa$686^(0+128)+1)
  5594  057F  0847               	movf	_dtoa$686^(0+128),w
  5595  0580  00C4               	movwf	??_dtoa^(0+128)
  5596  0581  0858               	movf	dtoa@i^(0+128),w
  5597  0582  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5598  0583  0086               	movwf	6
  5599  0584  3001               	movlw	1	; select bank2/3
  5600  0585  0087               	movwf	7
  5601  0586  0844               	movf	??_dtoa^(0+128),w
  5602  0587  0081               	movwf	1
  5603  0588                     l3246:	
  5604                           
  5605                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  5606  0588  0858               	movf	dtoa@i^(0+128),w
  5607  0589  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5608  058A  00C4               	movwf	??_dtoa^(0+128)
  5609  058B  0844               	movf	??_dtoa^(0+128),w
  5610  058C  00B3               	movwf	pad@buf^(0+128)
  5611  058D  084D               	movf	(dtoa@w+1)^(0+128),w
  5612  058E  00B5               	movwf	(pad@p+1)^(0+128)
  5613  058F  084C               	movf	dtoa@w^(0+128),w
  5614  0590  00B4               	movwf	pad@p^(0+128)
  5615  0591  0849               	movf	dtoa@fp^(0+128),w
  5616  0592  3187  27A1         	fcall	_pad
  5617  0594  0021               	movlb	1	; select bank1
  5618  0595  0834               	movf	(?_pad+1)^(0+128),w
  5619  0596  00BD               	movwf	(?_dtoa+1)^(0+128)
  5620  0597  0833               	movf	?_pad^(0+128),w
  5621  0598  00BC               	movwf	?_dtoa^(0+128)
  5622  0599  0008               	return
  5623  059A                     __end_of_dtoa:	
  5624                           
  5625                           	psect	text10
  5626  07A1                     __ptext10:	
  5627 ;; *************** function _pad *****************
  5628 ;; Defined at:
  5629 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5630 ;; Parameters:    Size  Location     Type
  5631 ;;  fp              1    wreg     PTR struct _IO_FILE
  5632 ;;		 -> NULL(0), 
  5633 ;;  buf             1   19[BANK1 ] PTR unsigned char 
  5634 ;;		 -> dbuf(32), 
  5635 ;;  p               2   20[BANK1 ] int 
  5636 ;; Auto vars:     Size  Location     Type
  5637 ;;  fp              1   27[BANK1 ] PTR struct _IO_FILE
  5638 ;;		 -> NULL(0), 
  5639 ;;  w               2   25[BANK1 ] int 
  5640 ;;  i               2   23[BANK1 ] int 
  5641 ;; Return value:  Size  Location     Type
  5642 ;;                  2   19[BANK1 ] int 
  5643 ;; Registers used:
  5644 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5645 ;; Tracked objects:
  5646 ;;		On entry : 0/0
  5647 ;;		On exit  : 0/0
  5648 ;;		Unchanged: 0/0
  5649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5650 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5651 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  5652 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5653 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  5654 ;;Total ram usage:        9 bytes
  5655 ;; Hardware stack levels used:    1
  5656 ;; Hardware stack levels required when called:   10
  5657 ;; This function calls:
  5658 ;;		_fputc
  5659 ;;		_fputs
  5660 ;;		_strlen
  5661 ;; This function is called by:
  5662 ;;		_dtoa
  5663 ;; This function uses a non-reentrant model
  5664 ;;
  5665                           
  5666                           
  5667                           ;psect for function _pad
  5668  07A1                     _pad:	
  5669                           
  5670                           ;incstack = 0
  5671                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5672                           ;pad@fp stored from wreg
  5673  07A1  0021               	movlb	1	; select bank1
  5674  07A2  00BB               	movwf	pad@fp^(0+128)
  5675                           
  5676                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  5677  07A3  1C6E               	btfss	_flags^(0+128),0
  5678  07A4  2FB0               	goto	l3102
  5679                           
  5680                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  5681  07A5  0833               	movf	pad@buf^(0+128),w
  5682  07A6  00AA               	movwf	fputs@s^(0+128)
  5683  07A7  3001               	movlw	1
  5684  07A8  00AB               	movwf	(fputs@s+1)^(0+128)
  5685  07A9  083B               	movf	pad@fp^(0+128),w
  5686  07AA  00B6               	movwf	??_pad^(0+128)
  5687  07AB  0836               	movf	??_pad^(0+128),w
  5688  07AC  00AC               	movwf	fputs@fp^(0+128)
  5689  07AD  318B  23B2  3187   	fcall	_fputs
  5690  07B0                     l3102:	
  5691                           
  5692                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  5693  07B0  0021               	movlb	1	; select bank1
  5694  07B1  1BB5               	btfsc	(pad@p+1)^(0+128),7
  5695  07B2  2FB8               	goto	l3106
  5696  07B3  0835               	movf	(pad@p+1)^(0+128),w
  5697  07B4  00BA               	movwf	(pad@w+1)^(0+128)
  5698  07B5  0834               	movf	pad@p^(0+128),w
  5699  07B6  00B9               	movwf	pad@w^(0+128)
  5700  07B7  2FBA               	goto	l441
  5701  07B8                     l3106:	
  5702  07B8  01B9               	clrf	pad@w^(0+128)
  5703  07B9  01BA               	clrf	(pad@w+1)^(0+128)
  5704  07BA                     l441:	
  5705                           
  5706                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  5707  07BA  01B7               	clrf	pad@i^(0+128)
  5708  07BB  01B8               	clrf	(pad@i+1)^(0+128)
  5709  07BC                     l3112:	
  5710                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  5711                           
  5712                           
  5713                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  5714  07BC  0838               	movf	(pad@i+1)^(0+128),w
  5715  07BD  3A80               	xorlw	128
  5716  07BE  00B6               	movwf	??_pad^(0+128)
  5717  07BF  083A               	movf	(pad@w+1)^(0+128),w
  5718  07C0  3A80               	xorlw	128
  5719  07C1  0236               	subwf	??_pad^(0+128),w
  5720  07C2  1D03               	skipz
  5721  07C3  2FC6               	goto	u3645
  5722  07C4  0839               	movf	pad@w^(0+128),w
  5723  07C5  0237               	subwf	pad@i^(0+128),w
  5724  07C6                     u3645:	
  5725  07C6  1803               	btfsc	3,0
  5726  07C7  2FDA               	goto	l444
  5727                           
  5728                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  5729  07C8  3020               	movlw	32
  5730  07C9  0021               	movlb	1	; select bank1
  5731  07CA  00A2               	movwf	fputc@c^(0+128)
  5732  07CB  3000               	movlw	0
  5733  07CC  00A3               	movwf	(fputc@c^(0+128)+1)
  5734  07CD  083B               	movf	pad@fp^(0+128),w
  5735  07CE  00B6               	movwf	??_pad^(0+128)
  5736  07CF  0836               	movf	??_pad^(0+128),w
  5737  07D0  00A4               	movwf	fputc@fp^(0+128)
  5738  07D1  318C  24AE  3187   	fcall	_fputc
  5739                           
  5740                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  5741  07D4  3001               	movlw	1
  5742  07D5  0021               	movlb	1	; select bank1
  5743  07D6  07B7               	addwf	pad@i^(0+128),f
  5744  07D7  3000               	movlw	0
  5745  07D8  3DB8               	addwfc	(pad@i+1)^(0+128),f
  5746  07D9  2FBC               	goto	l3112
  5747  07DA                     l444:	
  5748                           
  5749                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  5750  07DA  0021               	movlb	1	; select bank1
  5751  07DB  186E               	btfsc	_flags^(0+128),0
  5752  07DC  2FE8               	goto	l3116
  5753                           
  5754                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  5755  07DD  0833               	movf	pad@buf^(0+128),w
  5756  07DE  00AA               	movwf	fputs@s^(0+128)
  5757  07DF  3001               	movlw	1
  5758  07E0  00AB               	movwf	(fputs@s+1)^(0+128)
  5759  07E1  083B               	movf	pad@fp^(0+128),w
  5760  07E2  00B6               	movwf	??_pad^(0+128)
  5761  07E3  0836               	movf	??_pad^(0+128),w
  5762  07E4  00AC               	movwf	fputs@fp^(0+128)
  5763  07E5  318B  23B2  3187   	fcall	_fputs
  5764  07E8                     l3116:	
  5765                           
  5766                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  5767  07E8  0021               	movlb	1	; select bank1
  5768  07E9  0833               	movf	pad@buf^(0+128),w
  5769  07EA  318B  231A         	fcall	_strlen
  5770  07EC  0021               	movlb	1	; select bank1
  5771  07ED  0839               	movf	pad@w^(0+128),w
  5772  07EE  0720               	addwf	?_strlen^(0+128),w
  5773  07EF  00B3               	movwf	?_pad^(0+128)
  5774  07F0  083A               	movf	(pad@w+1)^(0+128),w
  5775  07F1  3D21               	addwfc	(?_strlen+1)^(0+128),w
  5776  07F2  00B4               	movwf	(?_pad+1)^(0+128)
  5777  07F3  0008               	return
  5778  07F4                     __end_of_pad:	
  5779                           
  5780                           	psect	text11
  5781  0B1A                     __ptext11:	
  5782 ;; *************** function _strlen *****************
  5783 ;; Defined at:
  5784 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  5785 ;; Parameters:    Size  Location     Type
  5786 ;;  s               1    wreg     PTR const unsigned char 
  5787 ;;		 -> dbuf(32), 
  5788 ;; Auto vars:     Size  Location     Type
  5789 ;;  s               1    4[BANK1 ] PTR const unsigned char 
  5790 ;;		 -> dbuf(32), 
  5791 ;;  a               1    3[BANK1 ] PTR const unsigned char 
  5792 ;;		 -> dbuf(32), 
  5793 ;; Return value:  Size  Location     Type
  5794 ;;                  2    0[BANK1 ] unsigned int 
  5795 ;; Registers used:
  5796 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5797 ;; Tracked objects:
  5798 ;;		On entry : 0/0
  5799 ;;		On exit  : 0/0
  5800 ;;		Unchanged: 0/0
  5801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5802 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5803 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5804 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5805 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  5806 ;;Total ram usage:        5 bytes
  5807 ;; Hardware stack levels used:    1
  5808 ;; Hardware stack levels required when called:    6
  5809 ;; This function calls:
  5810 ;;		Nothing
  5811 ;; This function is called by:
  5812 ;;		_pad
  5813 ;; This function uses a non-reentrant model
  5814 ;;
  5815                           
  5816                           
  5817                           ;psect for function _strlen
  5818  0B1A                     _strlen:	
  5819                           
  5820                           ;incstack = 0
  5821                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  5822                           ;strlen@s stored from wreg
  5823  0B1A  0021               	movlb	1	; select bank1
  5824  0B1B  00A4               	movwf	strlen@s^(0+128)
  5825  0B1C  0824               	movf	strlen@s^(0+128),w
  5826  0B1D  00A2               	movwf	??_strlen^(0+128)
  5827  0B1E  0822               	movf	??_strlen^(0+128),w
  5828  0B1F  00A3               	movwf	strlen@a^(0+128)
  5829  0B20                     l3092:	
  5830  0B20  0824               	movf	strlen@s^(0+128),w
  5831  0B21  0086               	movwf	6
  5832  0B22  3001               	movlw	1	; select bank2/3
  5833  0B23  0087               	movwf	7
  5834  0B24  0801               	movf	1,w
  5835  0B25  1903               	btfsc	3,2
  5836  0B26  2B2C               	goto	l3094
  5837  0B27  3001               	movlw	1
  5838  0B28  00A2               	movwf	??_strlen^(0+128)
  5839  0B29  0822               	movf	??_strlen^(0+128),w
  5840  0B2A  07A4               	addwf	strlen@s^(0+128),f
  5841  0B2B  2B20               	goto	l3092
  5842  0B2C                     l3094:	
  5843  0B2C  0823               	movf	strlen@a^(0+128),w
  5844  0B2D  0224               	subwf	strlen@s^(0+128),w
  5845  0B2E  00A0               	movwf	?_strlen^(0+128)
  5846  0B2F  01A1               	clrf	(?_strlen+1)^(0+128)
  5847  0B30  1BA0               	btfsc	?_strlen^(0+128),7
  5848  0B31  03A1               	decf	(?_strlen+1)^(0+128),f
  5849  0B32  0008               	return
  5850  0B33                     __end_of_strlen:	
  5851                           
  5852                           	psect	text12
  5853  0BB2                     __ptext12:	
  5854 ;; *************** function _fputs *****************
  5855 ;; Defined at:
  5856 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  5857 ;; Parameters:    Size  Location     Type
  5858 ;;  s               2   10[BANK1 ] PTR const unsigned char 
  5859 ;;		 -> dbuf(32), STR_3(3), hrDisp(13), distanceDisp(11), 
  5860 ;;		 -> speedDisp(8), 
  5861 ;;  fp              1   12[BANK1 ] PTR struct _IO_FILE
  5862 ;;		 -> NULL(0), 
  5863 ;; Auto vars:     Size  Location     Type
  5864 ;;  i               2   17[BANK1 ] int 
  5865 ;;  c               1   16[BANK1 ] unsigned char 
  5866 ;; Return value:  Size  Location     Type
  5867 ;;                  2   10[BANK1 ] int 
  5868 ;; Registers used:
  5869 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5870 ;; Tracked objects:
  5871 ;;		On entry : 0/0
  5872 ;;		On exit  : 0/0
  5873 ;;		Unchanged: 0/0
  5874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5875 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5876 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5877 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5878 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  5879 ;;Total ram usage:        9 bytes
  5880 ;; Hardware stack levels used:    1
  5881 ;; Hardware stack levels required when called:    9
  5882 ;; This function calls:
  5883 ;;		_fputc
  5884 ;; This function is called by:
  5885 ;;		_pad
  5886 ;;		_puts
  5887 ;; This function uses a non-reentrant model
  5888 ;;
  5889                           
  5890                           
  5891                           ;psect for function _fputs
  5892  0BB2                     _fputs:	
  5893                           
  5894                           ;incstack = 0
  5895                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5896  0BB2  0021               	movlb	1	; select bank1
  5897  0BB3  01B1               	clrf	fputs@i^(0+128)
  5898  0BB4  01B2               	clrf	(fputs@i+1)^(0+128)
  5899  0BB5                     l3082:	
  5900  0BB5  082A               	movf	fputs@s^(0+128),w
  5901  0BB6  0731               	addwf	fputs@i^(0+128),w
  5902  0BB7  0084               	movwf	4
  5903  0BB8  082B               	movf	(fputs@s+1)^(0+128),w
  5904  0BB9  3D32               	addwfc	(fputs@i+1)^(0+128),w
  5905  0BBA  0085               	movwf	5
  5906  0BBB  0800               	movf	0,w	;code access
  5907  0BBC  00AD               	movwf	??_fputs^(0+128)
  5908  0BBD  082D               	movf	??_fputs^(0+128),w
  5909  0BBE  00B0               	movwf	fputs@c^(0+128)
  5910  0BBF  0830               	movf	fputs@c^(0+128),w
  5911  0BC0  1903               	btfsc	3,2
  5912  0BC1  2BD6               	goto	l3084
  5913  0BC2  0830               	movf	fputs@c^(0+128),w
  5914  0BC3  00AD               	movwf	??_fputs^(0+128)
  5915  0BC4  01AE               	clrf	(??_fputs^(0+128)+1)
  5916  0BC5  082D               	movf	??_fputs^(0+128),w
  5917  0BC6  00A2               	movwf	fputc@c^(0+128)
  5918  0BC7  082E               	movf	(??_fputs+1)^(0+128),w
  5919  0BC8  00A3               	movwf	(fputc@c+1)^(0+128)
  5920  0BC9  082C               	movf	fputs@fp^(0+128),w
  5921  0BCA  00AF               	movwf	(??_fputs+2)^(0+128)
  5922  0BCB  082F               	movf	(??_fputs+2)^(0+128),w
  5923  0BCC  00A4               	movwf	fputc@fp^(0+128)
  5924  0BCD  318C  24AE  318B   	fcall	_fputc
  5925  0BD0  3001               	movlw	1
  5926  0BD1  0021               	movlb	1	; select bank1
  5927  0BD2  07B1               	addwf	fputs@i^(0+128),f
  5928  0BD3  3000               	movlw	0
  5929  0BD4  3DB2               	addwfc	(fputs@i+1)^(0+128),f
  5930  0BD5  2BB5               	goto	l3082
  5931  0BD6                     l3084:	
  5932  0BD6  0832               	movf	(fputs@i+1)^(0+128),w
  5933  0BD7  00AB               	movwf	(?_fputs+1)^(0+128)
  5934  0BD8  0831               	movf	fputs@i^(0+128),w
  5935  0BD9  00AA               	movwf	?_fputs^(0+128)
  5936  0BDA  0008               	return
  5937  0BDB                     __end_of_fputs:	
  5938                           
  5939                           	psect	text13
  5940  0CAE                     __ptext13:	
  5941 ;; *************** function _fputc *****************
  5942 ;; Defined at:
  5943 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  5944 ;; Parameters:    Size  Location     Type
  5945 ;;  c               2    2[BANK1 ] int 
  5946 ;;  fp              1    4[BANK1 ] PTR struct _IO_FILE
  5947 ;;		 -> NULL(0), 
  5948 ;; Auto vars:     Size  Location     Type
  5949 ;;		None
  5950 ;; Return value:  Size  Location     Type
  5951 ;;                  2    2[BANK1 ] int 
  5952 ;; Registers used:
  5953 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5954 ;; Tracked objects:
  5955 ;;		On entry : 0/0
  5956 ;;		On exit  : 0/0
  5957 ;;		Unchanged: 0/0
  5958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5959 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5961 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  5962 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  5963 ;;Total ram usage:        8 bytes
  5964 ;; Hardware stack levels used:    1
  5965 ;; Hardware stack levels required when called:    8
  5966 ;; This function calls:
  5967 ;;		_putch
  5968 ;; This function is called by:
  5969 ;;		_pad
  5970 ;;		_vfpfcnvrt
  5971 ;;		_fputs
  5972 ;;		_puts
  5973 ;; This function uses a non-reentrant model
  5974 ;;
  5975                           
  5976                           
  5977                           ;psect for function _fputc
  5978  0CAE                     _fputc:	
  5979                           
  5980                           ;incstack = 0
  5981                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5982  0CAE  0021               	movlb	1	; select bank1
  5983  0CAF  0824               	movf	fputc@fp^(0+128),w
  5984  0CB0  1D03               	btfss	3,2
  5985  0CB1  0824               	movf	fputc@fp^(0+128),w
  5986  0CB2  1D03               	btfss	3,2
  5987  0CB3  2CB9               	goto	l3066
  5988  0CB4  0822               	movf	fputc@c^(0+128),w
  5989  0CB5  318A  2236  318C   	fcall	_putch
  5990  0CB8  2CE5               	goto	l3072
  5991  0CB9                     l3066:	
  5992  0CB9  0824               	movf	fputc@fp^(0+128),w
  5993  0CBA  3E03               	addlw	3
  5994  0CBB  0086               	movwf	6
  5995  0CBC  0187               	clrf	7
  5996  0CBD  0016               	moviw fsr1++
  5997  0CBE  0401               	iorwf	1,w
  5998  0CBF  1903               	btfsc	3,2
  5999  0CC0  2CDC               	goto	l3070
  6000  0CC1  0824               	movf	fputc@fp^(0+128),w
  6001  0CC2  3E03               	addlw	3
  6002  0CC3  0086               	movwf	6
  6003  0CC4  0187               	clrf	7
  6004  0CC5  3F40               	moviw [0]fsr1
  6005  0CC6  00A5               	movwf	??_fputc^(0+128)
  6006  0CC7  3F41               	moviw [1]fsr1
  6007  0CC8  00A6               	movwf	(??_fputc^(0+128)+1)
  6008  0CC9  0A24               	incf	fputc@fp^(0+128),w
  6009  0CCA  0086               	movwf	6
  6010  0CCB  0187               	clrf	7
  6011  0CCC  3F40               	moviw [0]fsr1
  6012  0CCD  00A7               	movwf	(??_fputc+2)^(0+128)
  6013  0CCE  3F41               	moviw [1]fsr1
  6014  0CCF  00A8               	movwf	((??_fputc+2)^(0+128)+1)
  6015  0CD0  0828               	movf	(??_fputc+3)^(0+128),w
  6016  0CD1  3A80               	xorlw	128
  6017  0CD2  00A9               	movwf	(??_fputc+4)^(0+128)
  6018  0CD3  0826               	movf	(??_fputc+1)^(0+128),w
  6019  0CD4  3A80               	xorlw	128
  6020  0CD5  0229               	subwf	(??_fputc+4)^(0+128),w
  6021  0CD6  1D03               	skipz
  6022  0CD7  2CDA               	goto	u3595
  6023  0CD8  0825               	movf	??_fputc^(0+128),w
  6024  0CD9  0227               	subwf	(??_fputc+2)^(0+128),w
  6025  0CDA                     u3595:	
  6026  0CDA  1803               	skipnc
  6027  0CDB  2CE5               	goto	l3072
  6028  0CDC                     l3070:	
  6029  0CDC  0021               	movlb	1	; select bank1
  6030  0CDD  0A24               	incf	fputc@fp^(0+128),w
  6031  0CDE  0086               	movwf	6
  6032  0CDF  0187               	clrf	7
  6033  0CE0  3001               	movlw	1
  6034  0CE1  0781               	addwf	1,f
  6035  0CE2  3141               	addfsr 1,1
  6036  0CE3  1803               	skipnc
  6037  0CE4  0A81               	incf	1,f
  6038  0CE5                     l3072:	
  6039  0CE5  0021               	movlb	1	; select bank1
  6040  0CE6  0822               	movf	fputc@c^(0+128),w
  6041  0CE7  00A5               	movwf	??_fputc^(0+128)
  6042  0CE8  01A6               	clrf	(??_fputc^(0+128)+1)
  6043  0CE9  0825               	movf	??_fputc^(0+128),w
  6044  0CEA  00A2               	movwf	?_fputc^(0+128)
  6045  0CEB  0826               	movf	(??_fputc+1)^(0+128),w
  6046  0CEC  00A3               	movwf	(?_fputc+1)^(0+128)
  6047  0CED  0008               	return
  6048  0CEE                     __end_of_fputc:	
  6049                           
  6050                           	psect	text14
  6051  0A36                     __ptext14:	
  6052 ;; *************** function _putch *****************
  6053 ;; Defined at:
  6054 ;;		line 151 in file "mcc_generated_files/eusart.c"
  6055 ;; Parameters:    Size  Location     Type
  6056 ;;  txData          1    wreg     unsigned char 
  6057 ;; Auto vars:     Size  Location     Type
  6058 ;;  txData          1    1[BANK1 ] unsigned char 
  6059 ;; Return value:  Size  Location     Type
  6060 ;;                  1    wreg      void 
  6061 ;; Registers used:
  6062 ;;		wreg, status,2, status,0, pclath, cstack
  6063 ;; Tracked objects:
  6064 ;;		On entry : 0/0
  6065 ;;		On exit  : 0/0
  6066 ;;		Unchanged: 0/0
  6067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6069 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6071 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6072 ;;Total ram usage:        1 bytes
  6073 ;; Hardware stack levels used:    1
  6074 ;; Hardware stack levels required when called:    7
  6075 ;; This function calls:
  6076 ;;		_EUSART_Write
  6077 ;; This function is called by:
  6078 ;;		_fputc
  6079 ;; This function uses a non-reentrant model
  6080 ;;
  6081                           
  6082                           
  6083                           ;psect for function _putch
  6084  0A36                     _putch:	
  6085                           
  6086                           ;incstack = 0
  6087                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  6088                           ;putch@txData stored from wreg
  6089  0A36  0021               	movlb	1	; select bank1
  6090  0A37  00A1               	movwf	putch@txData^(0+128)
  6091                           
  6092                           ;mcc_generated_files/eusart.c: 151: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 152: {;mcc_generated_files/eusart.c: 153:     EUSART_Write(txData);
  6093  0A38  0821               	movf	putch@txData^(0+128),w
  6094  0A39  318A  228E         	fcall	_EUSART_Write
  6095  0A3B  0008               	return
  6096  0A3C                     __end_of_putch:	
  6097                           
  6098                           	psect	text15
  6099  0A8E                     __ptext15:	
  6100 ;; *************** function _EUSART_Write *****************
  6101 ;; Defined at:
  6102 ;;		line 137 in file "mcc_generated_files/eusart.c"
  6103 ;; Parameters:    Size  Location     Type
  6104 ;;  txData          1    wreg     unsigned char 
  6105 ;; Auto vars:     Size  Location     Type
  6106 ;;  txData          1    0[BANK1 ] unsigned char 
  6107 ;; Return value:  Size  Location     Type
  6108 ;;                  1    wreg      void 
  6109 ;; Registers used:
  6110 ;;		wreg
  6111 ;; Tracked objects:
  6112 ;;		On entry : 0/0
  6113 ;;		On exit  : 0/0
  6114 ;;		Unchanged: 0/0
  6115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6117 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6119 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6120 ;;Total ram usage:        1 bytes
  6121 ;; Hardware stack levels used:    1
  6122 ;; Hardware stack levels required when called:    6
  6123 ;; This function calls:
  6124 ;;		Nothing
  6125 ;; This function is called by:
  6126 ;;		_putch
  6127 ;;		_setCursor
  6128 ;;		_backlightBrightness
  6129 ;; This function uses a non-reentrant model
  6130 ;;
  6131                           
  6132                           
  6133                           ;psect for function _EUSART_Write
  6134  0A8E                     _EUSART_Write:	
  6135                           
  6136                           ;incstack = 0
  6137                           ; Regs used in _EUSART_Write: [wreg]
  6138                           ;EUSART_Write@txData stored from wreg
  6139  0A8E  0021               	movlb	1	; select bank1
  6140  0A8F  00A0               	movwf	EUSART_Write@txData^(0+128)
  6141  0A90                     l69:	
  6142                           ;mcc_generated_files/eusart.c: 140:     {;mcc_generated_files/eusart.c: 141:     }
  6143                           
  6144                           
  6145                           ;mcc_generated_files/eusart.c: 139:     while(0 == PIR1bits.TXIF)
  6146  0A90  0020               	movlb	0	; select bank0
  6147  0A91  1E10               	btfss	16,4	;volatile
  6148  0A92  2A90               	goto	l69
  6149                           
  6150                           ;mcc_generated_files/eusart.c: 143:     TX1REG = txData;
  6151  0A93  0021               	movlb	1	; select bank1
  6152  0A94  0820               	movf	EUSART_Write@txData^(0+128),w
  6153  0A95  0023               	movlb	3	; select bank3
  6154  0A96  009A               	movwf	26	;volatile
  6155  0A97  0008               	return
  6156  0A98                     __end_of_EUSART_Write:	
  6157                           
  6158                           	psect	text16
  6159  0B01                     __ptext16:	
  6160 ;; *************** function _abs *****************
  6161 ;; Defined at:
  6162 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  6163 ;; Parameters:    Size  Location     Type
  6164 ;;  a               2   19[BANK1 ] int 
  6165 ;; Auto vars:     Size  Location     Type
  6166 ;;		None
  6167 ;; Return value:  Size  Location     Type
  6168 ;;                  2   19[BANK1 ] int 
  6169 ;; Registers used:
  6170 ;;		wreg, status,2, status,0
  6171 ;; Tracked objects:
  6172 ;;		On entry : 0/0
  6173 ;;		On exit  : 0/0
  6174 ;;		Unchanged: 0/0
  6175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6176 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6178 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6179 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  6180 ;;Total ram usage:        4 bytes
  6181 ;; Hardware stack levels used:    1
  6182 ;; Hardware stack levels required when called:    6
  6183 ;; This function calls:
  6184 ;;		Nothing
  6185 ;; This function is called by:
  6186 ;;		_dtoa
  6187 ;; This function uses a non-reentrant model
  6188 ;;
  6189                           
  6190                           
  6191                           ;psect for function _abs
  6192  0B01                     _abs:	
  6193                           
  6194                           ;incstack = 0
  6195                           ; Regs used in _abs: [wreg+status,2+status,0]
  6196  0B01  0021               	movlb	1	; select bank1
  6197  0B02  0834               	movf	(abs@a+1)^(0+128),w
  6198  0B03  3A80               	xorlw	128
  6199  0B04  00B5               	movwf	??_abs^(0+128)
  6200  0B05  3080               	movlw	128
  6201  0B06  0235               	subwf	??_abs^(0+128),w
  6202  0B07  1D03               	skipz
  6203  0B08  2B0B               	goto	u3665
  6204  0B09  3001               	movlw	1
  6205  0B0A  0233               	subwf	abs@a^(0+128),w
  6206  0B0B                     u3665:	
  6207  0B0B  1803               	skipnc
  6208  0B0C  0008               	return
  6209  0B0D  0021               	movlb	1	; select bank1
  6210  0B0E  0933               	comf	abs@a^(0+128),w
  6211  0B0F  00B5               	movwf	??_abs^(0+128)
  6212  0B10  0934               	comf	(abs@a+1)^(0+128),w
  6213  0B11  00B6               	movwf	(??_abs^(0+128)+1)
  6214  0B12  0AB5               	incf	??_abs^(0+128),f
  6215  0B13  1903               	skipnz
  6216  0B14  0AB6               	incf	(??_abs^(0+128)+1),f
  6217  0B15  0835               	movf	??_abs^(0+128),w
  6218  0B16  00B3               	movwf	?_abs^(0+128)
  6219  0B17  0836               	movf	(??_abs+1)^(0+128),w
  6220  0B18  00B4               	movwf	(?_abs+1)^(0+128)
  6221  0B19  0008               	return
  6222  0B1A                     __end_of_abs:	
  6223                           
  6224                           	psect	text17
  6225  0F21                     __ptext17:	
  6226 ;; *************** function ___aomod *****************
  6227 ;; Defined at:
  6228 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  6229 ;; Parameters:    Size  Location     Type
  6230 ;;  divisor         8    0[BANK1 ] long long 
  6231 ;;  dividend        8    8[BANK1 ] long long 
  6232 ;; Auto vars:     Size  Location     Type
  6233 ;;  sign            1   18[BANK1 ] unsigned char 
  6234 ;;  counter         1   17[BANK1 ] unsigned char 
  6235 ;; Return value:  Size  Location     Type
  6236 ;;                  8    0[BANK1 ] long long 
  6237 ;; Registers used:
  6238 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6239 ;; Tracked objects:
  6240 ;;		On entry : 0/0
  6241 ;;		On exit  : 0/0
  6242 ;;		Unchanged: 0/0
  6243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6244 ;;      Params:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  6245 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6246 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6247 ;;      Totals:         0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0
  6248 ;;Total ram usage:       19 bytes
  6249 ;; Hardware stack levels used:    1
  6250 ;; Hardware stack levels required when called:    6
  6251 ;; This function calls:
  6252 ;;		Nothing
  6253 ;; This function is called by:
  6254 ;;		_dtoa
  6255 ;; This function uses a non-reentrant model
  6256 ;;
  6257                           
  6258                           
  6259                           ;psect for function ___aomod
  6260  0F21                     ___aomod:	
  6261                           
  6262                           ;incstack = 0
  6263                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  6264  0F21  0021               	movlb	1	; select bank1
  6265  0F22  01B2               	clrf	___aomod@sign^(0+128)
  6266  0F23  30A8               	movlw	low ___aomod@dividend
  6267  0F24  0086               	movwf	6
  6268  0F25  3000               	movlw	high ___aomod@dividend
  6269  0F26  0087               	movwf	7
  6270  0F27  3F47               	moviw [7]fsr1
  6271  0F28  00B0               	movwf	??___aomod^(0+128)
  6272  0F29  1FB0               	btfss	??___aomod^(0+128),7
  6273  0F2A  2F4D               	goto	l3168
  6274  0F2B  0021               	movlb	1	; select bank1
  6275  0F2C  09A8               	comf	___aomod@dividend^(0+128),f
  6276  0F2D  09A9               	comf	(___aomod@dividend+1)^(0+128),f
  6277  0F2E  09AA               	comf	(___aomod@dividend+2)^(0+128),f
  6278  0F2F  09AB               	comf	(___aomod@dividend+3)^(0+128),f
  6279  0F30  09AC               	comf	(___aomod@dividend+4)^(0+128),f
  6280  0F31  09AD               	comf	(___aomod@dividend+5)^(0+128),f
  6281  0F32  09AE               	comf	(___aomod@dividend+6)^(0+128),f
  6282  0F33  09AF               	comf	(___aomod@dividend+7)^(0+128),f
  6283  0F34  0AA8               	incf	___aomod@dividend^(0+128),f
  6284  0F35  1D03               	skipz
  6285  0F36  2F4A               	goto	u379lld
  6286  0F37  0AA9               	incf	(___aomod@dividend+1)^(0+128),f
  6287  0F38  1D03               	skipz
  6288  0F39  2F4A               	goto	u379lld
  6289  0F3A  0AAA               	incf	(___aomod@dividend+2)^(0+128),f
  6290  0F3B  1D03               	skipz
  6291  0F3C  2F4A               	goto	u379lld
  6292  0F3D  0AAB               	incf	(___aomod@dividend+3)^(0+128),f
  6293  0F3E  1D03               	skipz
  6294  0F3F  2F4A               	goto	u379lld
  6295  0F40  0AAC               	incf	(___aomod@dividend+4)^(0+128),f
  6296  0F41  1D03               	skipz
  6297  0F42  2F4A               	goto	u379lld
  6298  0F43  0AAD               	incf	(___aomod@dividend+5)^(0+128),f
  6299  0F44  1D03               	skipz
  6300  0F45  2F4A               	goto	u379lld
  6301  0F46  0AAE               	incf	(___aomod@dividend+6)^(0+128),f
  6302  0F47  1D03               	skipz
  6303  0F48  2F4A               	goto	u379lld
  6304  0F49  0AAF               	incf	(___aomod@dividend+7)^(0+128),f
  6305  0F4A                     u379lld:	
  6306  0F4A  0021               	movlb	1	; select bank1
  6307  0F4B  01B2               	clrf	___aomod@sign^(0+128)
  6308  0F4C  0AB2               	incf	___aomod@sign^(0+128),f
  6309  0F4D                     l3168:	
  6310  0F4D  30A0               	movlw	low ___aomod@divisor
  6311  0F4E  0086               	movwf	6
  6312  0F4F  3000               	movlw	high ___aomod@divisor
  6313  0F50  0087               	movwf	7
  6314  0F51  3F47               	moviw [7]fsr1
  6315  0F52  0021               	movlb	1	; select bank1
  6316  0F53  00B0               	movwf	??___aomod^(0+128)
  6317  0F54  1FB0               	btfss	??___aomod^(0+128),7
  6318  0F55  2F75               	goto	l3172
  6319  0F56  0021               	movlb	1	; select bank1
  6320  0F57  09A0               	comf	___aomod@divisor^(0+128),f
  6321  0F58  09A1               	comf	(___aomod@divisor+1)^(0+128),f
  6322  0F59  09A2               	comf	(___aomod@divisor+2)^(0+128),f
  6323  0F5A  09A3               	comf	(___aomod@divisor+3)^(0+128),f
  6324  0F5B  09A4               	comf	(___aomod@divisor+4)^(0+128),f
  6325  0F5C  09A5               	comf	(___aomod@divisor+5)^(0+128),f
  6326  0F5D  09A6               	comf	(___aomod@divisor+6)^(0+128),f
  6327  0F5E  09A7               	comf	(___aomod@divisor+7)^(0+128),f
  6328  0F5F  0AA0               	incf	___aomod@divisor^(0+128),f
  6329  0F60  1D03               	skipz
  6330  0F61  2F75               	goto	l3172
  6331  0F62  0AA1               	incf	(___aomod@divisor+1)^(0+128),f
  6332  0F63  1D03               	skipz
  6333  0F64  2F75               	goto	l3172
  6334  0F65  0AA2               	incf	(___aomod@divisor+2)^(0+128),f
  6335  0F66  1D03               	skipz
  6336  0F67  2F75               	goto	l3172
  6337  0F68  0AA3               	incf	(___aomod@divisor+3)^(0+128),f
  6338  0F69  1D03               	skipz
  6339  0F6A  2F75               	goto	l3172
  6340  0F6B  0AA4               	incf	(___aomod@divisor+4)^(0+128),f
  6341  0F6C  1D03               	skipz
  6342  0F6D  2F75               	goto	l3172
  6343  0F6E  0AA5               	incf	(___aomod@divisor+5)^(0+128),f
  6344  0F6F  1D03               	skipz
  6345  0F70  2F75               	goto	l3172
  6346  0F71  0AA6               	incf	(___aomod@divisor+6)^(0+128),f
  6347  0F72  1D03               	skipz
  6348  0F73  2F75               	goto	l3172
  6349  0F74  0AA7               	incf	(___aomod@divisor+7)^(0+128),f
  6350  0F75                     l3172:	
  6351  0F75  0021               	movlb	1	; select bank1
  6352  0F76  0820               	movf	___aomod@divisor^(0+128),w
  6353  0F77  0421               	iorwf	(___aomod@divisor+1)^(0+128),w
  6354  0F78  0422               	iorwf	(___aomod@divisor+2)^(0+128),w
  6355  0F79  0423               	iorwf	(___aomod@divisor+3)^(0+128),w
  6356  0F7A  0424               	iorwf	(___aomod@divisor+4)^(0+128),w
  6357  0F7B  0425               	iorwf	(___aomod@divisor+5)^(0+128),w
  6358  0F7C  0426               	iorwf	(___aomod@divisor+6)^(0+128),w
  6359  0F7D  0427               	iorwf	(___aomod@divisor+7)^(0+128),w
  6360  0F7E  1903               	skipnz
  6361  0F7F  2FCD               	goto	l3188
  6362  0F80  01B1               	clrf	___aomod@counter^(0+128)
  6363  0F81  0AB1               	incf	___aomod@counter^(0+128),f
  6364  0F82                     l3180:	
  6365  0F82  1BA7               	btfsc	(___aomod@divisor+7)^(0+128),7
  6366  0F83  2F91               	goto	l3182
  6367  0F84  35A0               	lslf	___aomod@divisor^(0+128),f
  6368  0F85  0DA1               	rlf	(___aomod@divisor+1)^(0+128),f
  6369  0F86  0DA2               	rlf	(___aomod@divisor+2)^(0+128),f
  6370  0F87  0DA3               	rlf	(___aomod@divisor+3)^(0+128),f
  6371  0F88  0DA4               	rlf	(___aomod@divisor+4)^(0+128),f
  6372  0F89  0DA5               	rlf	(___aomod@divisor+5)^(0+128),f
  6373  0F8A  0DA6               	rlf	(___aomod@divisor+6)^(0+128),f
  6374  0F8B  0DA7               	rlf	(___aomod@divisor+7)^(0+128),f
  6375  0F8C  3001               	movlw	1
  6376  0F8D  00B0               	movwf	??___aomod^(0+128)
  6377  0F8E  0830               	movf	??___aomod^(0+128),w
  6378  0F8F  07B1               	addwf	___aomod@counter^(0+128),f
  6379  0F90  2F82               	goto	l3180
  6380  0F91                     l3182:	
  6381  0F91  0827               	movf	(___aomod@divisor+7)^(0+128),w
  6382  0F92  022F               	subwf	(___aomod@dividend+7)^(0+128),w
  6383  0F93  1D03               	skipz
  6384  0F94  2FAF               	goto	u3845
  6385  0F95  0826               	movf	(___aomod@divisor+6)^(0+128),w
  6386  0F96  022E               	subwf	(___aomod@dividend+6)^(0+128),w
  6387  0F97  1D03               	skipz
  6388  0F98  2FAF               	goto	u3845
  6389  0F99  0825               	movf	(___aomod@divisor+5)^(0+128),w
  6390  0F9A  022D               	subwf	(___aomod@dividend+5)^(0+128),w
  6391  0F9B  1D03               	skipz
  6392  0F9C  2FAF               	goto	u3845
  6393  0F9D  0824               	movf	(___aomod@divisor+4)^(0+128),w
  6394  0F9E  022C               	subwf	(___aomod@dividend+4)^(0+128),w
  6395  0F9F  1D03               	skipz
  6396  0FA0  2FAF               	goto	u3845
  6397  0FA1  0823               	movf	(___aomod@divisor+3)^(0+128),w
  6398  0FA2  022B               	subwf	(___aomod@dividend+3)^(0+128),w
  6399  0FA3  1D03               	skipz
  6400  0FA4  2FAF               	goto	u3845
  6401  0FA5  0822               	movf	(___aomod@divisor+2)^(0+128),w
  6402  0FA6  022A               	subwf	(___aomod@dividend+2)^(0+128),w
  6403  0FA7  1D03               	skipz
  6404  0FA8  2FAF               	goto	u3845
  6405  0FA9  0821               	movf	(___aomod@divisor+1)^(0+128),w
  6406  0FAA  0229               	subwf	(___aomod@dividend+1)^(0+128),w
  6407  0FAB  1D03               	skipz
  6408  0FAC  2FAF               	goto	u3845
  6409  0FAD  0820               	movf	___aomod@divisor^(0+128),w
  6410  0FAE  0228               	subwf	___aomod@dividend^(0+128),w
  6411  0FAF                     u3845:	
  6412  0FAF  1C03               	skipc
  6413  0FB0  2FC1               	goto	l3186
  6414  0FB1  0820               	movf	___aomod@divisor^(0+128),w
  6415  0FB2  02A8               	subwf	___aomod@dividend^(0+128),f
  6416  0FB3  0821               	movf	(___aomod@divisor+1)^(0+128),w
  6417  0FB4  3BA9               	subwfb	(___aomod@dividend+1)^(0+128),f
  6418  0FB5  0822               	movf	(___aomod@divisor+2)^(0+128),w
  6419  0FB6  3BAA               	subwfb	(___aomod@dividend+2)^(0+128),f
  6420  0FB7  0823               	movf	(___aomod@divisor+3)^(0+128),w
  6421  0FB8  3BAB               	subwfb	(___aomod@dividend+3)^(0+128),f
  6422  0FB9  0824               	movf	(___aomod@divisor+4)^(0+128),w
  6423  0FBA  3BAC               	subwfb	(___aomod@dividend+4)^(0+128),f
  6424  0FBB  0825               	movf	(___aomod@divisor+5)^(0+128),w
  6425  0FBC  3BAD               	subwfb	(___aomod@dividend+5)^(0+128),f
  6426  0FBD  0826               	movf	(___aomod@divisor+6)^(0+128),w
  6427  0FBE  3BAE               	subwfb	(___aomod@dividend+6)^(0+128),f
  6428  0FBF  0827               	movf	(___aomod@divisor+7)^(0+128),w
  6429  0FC0  3BAF               	subwfb	(___aomod@dividend+7)^(0+128),f
  6430  0FC1                     l3186:	
  6431  0FC1  36A7               	lsrf	(___aomod@divisor+7)^(0+128),f
  6432  0FC2  0CA6               	rrf	(___aomod@divisor+6)^(0+128),f
  6433  0FC3  0CA5               	rrf	(___aomod@divisor+5)^(0+128),f
  6434  0FC4  0CA4               	rrf	(___aomod@divisor+4)^(0+128),f
  6435  0FC5  0CA3               	rrf	(___aomod@divisor+3)^(0+128),f
  6436  0FC6  0CA2               	rrf	(___aomod@divisor+2)^(0+128),f
  6437  0FC7  0CA1               	rrf	(___aomod@divisor+1)^(0+128),f
  6438  0FC8  0CA0               	rrf	___aomod@divisor^(0+128),f
  6439  0FC9  3001               	movlw	1
  6440  0FCA  02B1               	subwf	___aomod@counter^(0+128),f
  6441  0FCB  1D03               	btfss	3,2
  6442  0FCC  2F91               	goto	l3182
  6443  0FCD                     l3188:	
  6444  0FCD  0832               	movf	___aomod@sign^(0+128),w
  6445  0FCE  1903               	btfsc	3,2
  6446  0FCF  2FEE               	goto	l604
  6447  0FD0  09A8               	comf	___aomod@dividend^(0+128),f
  6448  0FD1  09A9               	comf	(___aomod@dividend+1)^(0+128),f
  6449  0FD2  09AA               	comf	(___aomod@dividend+2)^(0+128),f
  6450  0FD3  09AB               	comf	(___aomod@dividend+3)^(0+128),f
  6451  0FD4  09AC               	comf	(___aomod@dividend+4)^(0+128),f
  6452  0FD5  09AD               	comf	(___aomod@dividend+5)^(0+128),f
  6453  0FD6  09AE               	comf	(___aomod@dividend+6)^(0+128),f
  6454  0FD7  09AF               	comf	(___aomod@dividend+7)^(0+128),f
  6455  0FD8  0AA8               	incf	___aomod@dividend^(0+128),f
  6456  0FD9  1D03               	skipz
  6457  0FDA  2FEE               	goto	l604
  6458  0FDB  0AA9               	incf	(___aomod@dividend+1)^(0+128),f
  6459  0FDC  1D03               	skipz
  6460  0FDD  2FEE               	goto	l604
  6461  0FDE  0AAA               	incf	(___aomod@dividend+2)^(0+128),f
  6462  0FDF  1D03               	skipz
  6463  0FE0  2FEE               	goto	l604
  6464  0FE1  0AAB               	incf	(___aomod@dividend+3)^(0+128),f
  6465  0FE2  1D03               	skipz
  6466  0FE3  2FEE               	goto	l604
  6467  0FE4  0AAC               	incf	(___aomod@dividend+4)^(0+128),f
  6468  0FE5  1D03               	skipz
  6469  0FE6  2FEE               	goto	l604
  6470  0FE7  0AAD               	incf	(___aomod@dividend+5)^(0+128),f
  6471  0FE8  1D03               	skipz
  6472  0FE9  2FEE               	goto	l604
  6473  0FEA  0AAE               	incf	(___aomod@dividend+6)^(0+128),f
  6474  0FEB  1D03               	skipz
  6475  0FEC  2FEE               	goto	l604
  6476  0FED  0AAF               	incf	(___aomod@dividend+7)^(0+128),f
  6477  0FEE                     l604:	
  6478  0FEE  0021               	movlb	1	; select bank1
  6479  0FEF  0828               	movf	___aomod@dividend^(0+128),w
  6480  0FF0  00A0               	movwf	?___aomod^(0+128)
  6481  0FF1  0829               	movf	(___aomod@dividend+1)^(0+128),w
  6482  0FF2  00A1               	movwf	(?___aomod+1)^(0+128)
  6483  0FF3  082A               	movf	(___aomod@dividend+2)^(0+128),w
  6484  0FF4  00A2               	movwf	(?___aomod+2)^(0+128)
  6485  0FF5  082B               	movf	(___aomod@dividend+3)^(0+128),w
  6486  0FF6  00A3               	movwf	(?___aomod+3)^(0+128)
  6487  0FF7  082C               	movf	(___aomod@dividend+4)^(0+128),w
  6488  0FF8  00A4               	movwf	(?___aomod+4)^(0+128)
  6489  0FF9  082D               	movf	(___aomod@dividend+5)^(0+128),w
  6490  0FFA  00A5               	movwf	(?___aomod+5)^(0+128)
  6491  0FFB  082E               	movf	(___aomod@dividend+6)^(0+128),w
  6492  0FFC  00A6               	movwf	(?___aomod+6)^(0+128)
  6493  0FFD  082F               	movf	(___aomod@dividend+7)^(0+128),w
  6494  0FFE  00A7               	movwf	(?___aomod+7)^(0+128)
  6495  0FFF  0008               	return
  6496  1000                     __end_of___aomod:	
  6497                           
  6498                           	psect	text18
  6499  06AA                     __ptext18:	
  6500 ;; *************** function ___aodiv *****************
  6501 ;; Defined at:
  6502 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  6503 ;; Parameters:    Size  Location     Type
  6504 ;;  divisor         8    0[BANK1 ] long long 
  6505 ;;  dividend        8    8[BANK1 ] long long 
  6506 ;; Auto vars:     Size  Location     Type
  6507 ;;  quotient        8   19[BANK1 ] long long 
  6508 ;;  sign            1   18[BANK1 ] unsigned char 
  6509 ;;  counter         1   17[BANK1 ] unsigned char 
  6510 ;; Return value:  Size  Location     Type
  6511 ;;                  8    0[BANK1 ] long long 
  6512 ;; Registers used:
  6513 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6514 ;; Tracked objects:
  6515 ;;		On entry : 0/0
  6516 ;;		On exit  : 0/0
  6517 ;;		Unchanged: 0/0
  6518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6519 ;;      Params:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  6520 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  6521 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6522 ;;      Totals:         0       0      27       0       0       0       0       0       0       0       0       0       
      +0       0
  6523 ;;Total ram usage:       27 bytes
  6524 ;; Hardware stack levels used:    1
  6525 ;; Hardware stack levels required when called:    6
  6526 ;; This function calls:
  6527 ;;		Nothing
  6528 ;; This function is called by:
  6529 ;;		_dtoa
  6530 ;; This function uses a non-reentrant model
  6531 ;;
  6532                           
  6533                           
  6534                           ;psect for function ___aodiv
  6535  06AA                     ___aodiv:	
  6536                           
  6537                           ;incstack = 0
  6538                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  6539  06AA  0021               	movlb	1	; select bank1
  6540  06AB  01B2               	clrf	___aodiv@sign^(0+128)
  6541  06AC  30A0               	movlw	low ___aodiv@divisor
  6542  06AD  0086               	movwf	6
  6543  06AE  3000               	movlw	high ___aodiv@divisor
  6544  06AF  0087               	movwf	7
  6545  06B0  3F47               	moviw [7]fsr1
  6546  06B1  00B0               	movwf	??___aodiv^(0+128)
  6547  06B2  1FB0               	btfss	??___aodiv^(0+128),7
  6548  06B3  2ED6               	goto	l3130
  6549  06B4  0021               	movlb	1	; select bank1
  6550  06B5  09A0               	comf	___aodiv@divisor^(0+128),f
  6551  06B6  09A1               	comf	(___aodiv@divisor+1)^(0+128),f
  6552  06B7  09A2               	comf	(___aodiv@divisor+2)^(0+128),f
  6553  06B8  09A3               	comf	(___aodiv@divisor+3)^(0+128),f
  6554  06B9  09A4               	comf	(___aodiv@divisor+4)^(0+128),f
  6555  06BA  09A5               	comf	(___aodiv@divisor+5)^(0+128),f
  6556  06BB  09A6               	comf	(___aodiv@divisor+6)^(0+128),f
  6557  06BC  09A7               	comf	(___aodiv@divisor+7)^(0+128),f
  6558  06BD  0AA0               	incf	___aodiv@divisor^(0+128),f
  6559  06BE  1D03               	skipz
  6560  06BF  2ED3               	goto	u368lld
  6561  06C0  0AA1               	incf	(___aodiv@divisor+1)^(0+128),f
  6562  06C1  1D03               	skipz
  6563  06C2  2ED3               	goto	u368lld
  6564  06C3  0AA2               	incf	(___aodiv@divisor+2)^(0+128),f
  6565  06C4  1D03               	skipz
  6566  06C5  2ED3               	goto	u368lld
  6567  06C6  0AA3               	incf	(___aodiv@divisor+3)^(0+128),f
  6568  06C7  1D03               	skipz
  6569  06C8  2ED3               	goto	u368lld
  6570  06C9  0AA4               	incf	(___aodiv@divisor+4)^(0+128),f
  6571  06CA  1D03               	skipz
  6572  06CB  2ED3               	goto	u368lld
  6573  06CC  0AA5               	incf	(___aodiv@divisor+5)^(0+128),f
  6574  06CD  1D03               	skipz
  6575  06CE  2ED3               	goto	u368lld
  6576  06CF  0AA6               	incf	(___aodiv@divisor+6)^(0+128),f
  6577  06D0  1D03               	skipz
  6578  06D1  2ED3               	goto	u368lld
  6579  06D2  0AA7               	incf	(___aodiv@divisor+7)^(0+128),f
  6580  06D3                     u368lld:	
  6581  06D3  0021               	movlb	1	; select bank1
  6582  06D4  01B2               	clrf	___aodiv@sign^(0+128)
  6583  06D5  0AB2               	incf	___aodiv@sign^(0+128),f
  6584  06D6                     l3130:	
  6585  06D6  30A8               	movlw	low ___aodiv@dividend
  6586  06D7  0086               	movwf	6
  6587  06D8  3000               	movlw	high ___aodiv@dividend
  6588  06D9  0087               	movwf	7
  6589  06DA  3F47               	moviw [7]fsr1
  6590  06DB  0021               	movlb	1	; select bank1
  6591  06DC  00B0               	movwf	??___aodiv^(0+128)
  6592  06DD  1FB0               	btfss	??___aodiv^(0+128),7
  6593  06DE  2F03               	goto	l3136
  6594  06DF  0021               	movlb	1	; select bank1
  6595  06E0  09A8               	comf	___aodiv@dividend^(0+128),f
  6596  06E1  09A9               	comf	(___aodiv@dividend+1)^(0+128),f
  6597  06E2  09AA               	comf	(___aodiv@dividend+2)^(0+128),f
  6598  06E3  09AB               	comf	(___aodiv@dividend+3)^(0+128),f
  6599  06E4  09AC               	comf	(___aodiv@dividend+4)^(0+128),f
  6600  06E5  09AD               	comf	(___aodiv@dividend+5)^(0+128),f
  6601  06E6  09AE               	comf	(___aodiv@dividend+6)^(0+128),f
  6602  06E7  09AF               	comf	(___aodiv@dividend+7)^(0+128),f
  6603  06E8  0AA8               	incf	___aodiv@dividend^(0+128),f
  6604  06E9  1D03               	skipz
  6605  06EA  2EFE               	goto	l3134
  6606  06EB  0AA9               	incf	(___aodiv@dividend+1)^(0+128),f
  6607  06EC  1D03               	skipz
  6608  06ED  2EFE               	goto	l3134
  6609  06EE  0AAA               	incf	(___aodiv@dividend+2)^(0+128),f
  6610  06EF  1D03               	skipz
  6611  06F0  2EFE               	goto	l3134
  6612  06F1  0AAB               	incf	(___aodiv@dividend+3)^(0+128),f
  6613  06F2  1D03               	skipz
  6614  06F3  2EFE               	goto	l3134
  6615  06F4  0AAC               	incf	(___aodiv@dividend+4)^(0+128),f
  6616  06F5  1D03               	skipz
  6617  06F6  2EFE               	goto	l3134
  6618  06F7  0AAD               	incf	(___aodiv@dividend+5)^(0+128),f
  6619  06F8  1D03               	skipz
  6620  06F9  2EFE               	goto	l3134
  6621  06FA  0AAE               	incf	(___aodiv@dividend+6)^(0+128),f
  6622  06FB  1D03               	skipz
  6623  06FC  2EFE               	goto	l3134
  6624  06FD  0AAF               	incf	(___aodiv@dividend+7)^(0+128),f
  6625  06FE                     l3134:	
  6626  06FE  3001               	movlw	1
  6627  06FF  0021               	movlb	1	; select bank1
  6628  0700  00B0               	movwf	??___aodiv^(0+128)
  6629  0701  0830               	movf	??___aodiv^(0+128),w
  6630  0702  06B2               	xorwf	___aodiv@sign^(0+128),f
  6631  0703                     l3136:	
  6632  0703  30B3               	movlw	low ___aodiv@quotient
  6633  0704  0086               	movwf	6
  6634  0705  3000               	movlw	high ___aodiv@quotient
  6635  0706  0087               	movwf	7
  6636  0707  3008               	movlw	8
  6637  0708  0021               	movlb	1	; select bank1
  6638  0709  00B0               	movwf	??___aodiv^(0+128)
  6639  070A  3000               	movlw	0
  6640  070B                     u3710:	
  6641  070B  001E               	movwi fsr1++
  6642  070C  0BB0               	decfsz	??___aodiv^(0+128),f
  6643  070D  2F0B               	goto	u3710
  6644  070E  0820               	movf	___aodiv@divisor^(0+128),w
  6645  070F  0421               	iorwf	(___aodiv@divisor+1)^(0+128),w
  6646  0710  0422               	iorwf	(___aodiv@divisor+2)^(0+128),w
  6647  0711  0423               	iorwf	(___aodiv@divisor+3)^(0+128),w
  6648  0712  0424               	iorwf	(___aodiv@divisor+4)^(0+128),w
  6649  0713  0425               	iorwf	(___aodiv@divisor+5)^(0+128),w
  6650  0714  0426               	iorwf	(___aodiv@divisor+6)^(0+128),w
  6651  0715  0427               	iorwf	(___aodiv@divisor+7)^(0+128),w
  6652  0716  1903               	skipnz
  6653  0717  2F6E               	goto	l3158
  6654  0718  01B1               	clrf	___aodiv@counter^(0+128)
  6655  0719  0AB1               	incf	___aodiv@counter^(0+128),f
  6656  071A                     l3146:	
  6657  071A  1BA7               	btfsc	(___aodiv@divisor+7)^(0+128),7
  6658  071B  2F29               	goto	l3148
  6659  071C  35A0               	lslf	___aodiv@divisor^(0+128),f
  6660  071D  0DA1               	rlf	(___aodiv@divisor+1)^(0+128),f
  6661  071E  0DA2               	rlf	(___aodiv@divisor+2)^(0+128),f
  6662  071F  0DA3               	rlf	(___aodiv@divisor+3)^(0+128),f
  6663  0720  0DA4               	rlf	(___aodiv@divisor+4)^(0+128),f
  6664  0721  0DA5               	rlf	(___aodiv@divisor+5)^(0+128),f
  6665  0722  0DA6               	rlf	(___aodiv@divisor+6)^(0+128),f
  6666  0723  0DA7               	rlf	(___aodiv@divisor+7)^(0+128),f
  6667  0724  3001               	movlw	1
  6668  0725  00B0               	movwf	??___aodiv^(0+128)
  6669  0726  0830               	movf	??___aodiv^(0+128),w
  6670  0727  07B1               	addwf	___aodiv@counter^(0+128),f
  6671  0728  2F1A               	goto	l3146
  6672  0729                     l3148:	
  6673  0729  35B3               	lslf	___aodiv@quotient^(0+128),f
  6674  072A  0DB4               	rlf	(___aodiv@quotient+1)^(0+128),f
  6675  072B  0DB5               	rlf	(___aodiv@quotient+2)^(0+128),f
  6676  072C  0DB6               	rlf	(___aodiv@quotient+3)^(0+128),f
  6677  072D  0DB7               	rlf	(___aodiv@quotient+4)^(0+128),f
  6678  072E  0DB8               	rlf	(___aodiv@quotient+5)^(0+128),f
  6679  072F  0DB9               	rlf	(___aodiv@quotient+6)^(0+128),f
  6680  0730  0DBA               	rlf	(___aodiv@quotient+7)^(0+128),f
  6681  0731  0827               	movf	(___aodiv@divisor+7)^(0+128),w
  6682  0732  022F               	subwf	(___aodiv@dividend+7)^(0+128),w
  6683  0733  1D03               	skipz
  6684  0734  2F4F               	goto	u3745
  6685  0735  0826               	movf	(___aodiv@divisor+6)^(0+128),w
  6686  0736  022E               	subwf	(___aodiv@dividend+6)^(0+128),w
  6687  0737  1D03               	skipz
  6688  0738  2F4F               	goto	u3745
  6689  0739  0825               	movf	(___aodiv@divisor+5)^(0+128),w
  6690  073A  022D               	subwf	(___aodiv@dividend+5)^(0+128),w
  6691  073B  1D03               	skipz
  6692  073C  2F4F               	goto	u3745
  6693  073D  0824               	movf	(___aodiv@divisor+4)^(0+128),w
  6694  073E  022C               	subwf	(___aodiv@dividend+4)^(0+128),w
  6695  073F  1D03               	skipz
  6696  0740  2F4F               	goto	u3745
  6697  0741  0823               	movf	(___aodiv@divisor+3)^(0+128),w
  6698  0742  022B               	subwf	(___aodiv@dividend+3)^(0+128),w
  6699  0743  1D03               	skipz
  6700  0744  2F4F               	goto	u3745
  6701  0745  0822               	movf	(___aodiv@divisor+2)^(0+128),w
  6702  0746  022A               	subwf	(___aodiv@dividend+2)^(0+128),w
  6703  0747  1D03               	skipz
  6704  0748  2F4F               	goto	u3745
  6705  0749  0821               	movf	(___aodiv@divisor+1)^(0+128),w
  6706  074A  0229               	subwf	(___aodiv@dividend+1)^(0+128),w
  6707  074B  1D03               	skipz
  6708  074C  2F4F               	goto	u3745
  6709  074D  0820               	movf	___aodiv@divisor^(0+128),w
  6710  074E  0228               	subwf	___aodiv@dividend^(0+128),w
  6711  074F                     u3745:	
  6712  074F  1C03               	skipc
  6713  0750  2F62               	goto	l3156
  6714  0751  0820               	movf	___aodiv@divisor^(0+128),w
  6715  0752  02A8               	subwf	___aodiv@dividend^(0+128),f
  6716  0753  0821               	movf	(___aodiv@divisor+1)^(0+128),w
  6717  0754  3BA9               	subwfb	(___aodiv@dividend+1)^(0+128),f
  6718  0755  0822               	movf	(___aodiv@divisor+2)^(0+128),w
  6719  0756  3BAA               	subwfb	(___aodiv@dividend+2)^(0+128),f
  6720  0757  0823               	movf	(___aodiv@divisor+3)^(0+128),w
  6721  0758  3BAB               	subwfb	(___aodiv@dividend+3)^(0+128),f
  6722  0759  0824               	movf	(___aodiv@divisor+4)^(0+128),w
  6723  075A  3BAC               	subwfb	(___aodiv@dividend+4)^(0+128),f
  6724  075B  0825               	movf	(___aodiv@divisor+5)^(0+128),w
  6725  075C  3BAD               	subwfb	(___aodiv@dividend+5)^(0+128),f
  6726  075D  0826               	movf	(___aodiv@divisor+6)^(0+128),w
  6727  075E  3BAE               	subwfb	(___aodiv@dividend+6)^(0+128),f
  6728  075F  0827               	movf	(___aodiv@divisor+7)^(0+128),w
  6729  0760  3BAF               	subwfb	(___aodiv@dividend+7)^(0+128),f
  6730  0761  1433               	bsf	___aodiv@quotient^(0+128),0
  6731  0762                     l3156:	
  6732  0762  36A7               	lsrf	(___aodiv@divisor+7)^(0+128),f
  6733  0763  0CA6               	rrf	(___aodiv@divisor+6)^(0+128),f
  6734  0764  0CA5               	rrf	(___aodiv@divisor+5)^(0+128),f
  6735  0765  0CA4               	rrf	(___aodiv@divisor+4)^(0+128),f
  6736  0766  0CA3               	rrf	(___aodiv@divisor+3)^(0+128),f
  6737  0767  0CA2               	rrf	(___aodiv@divisor+2)^(0+128),f
  6738  0768  0CA1               	rrf	(___aodiv@divisor+1)^(0+128),f
  6739  0769  0CA0               	rrf	___aodiv@divisor^(0+128),f
  6740  076A  3001               	movlw	1
  6741  076B  02B1               	subwf	___aodiv@counter^(0+128),f
  6742  076C  1D03               	btfss	3,2
  6743  076D  2F29               	goto	l3148
  6744  076E                     l3158:	
  6745  076E  0832               	movf	___aodiv@sign^(0+128),w
  6746  076F  1903               	btfsc	3,2
  6747  0770  2F8F               	goto	l591
  6748  0771  09B3               	comf	___aodiv@quotient^(0+128),f
  6749  0772  09B4               	comf	(___aodiv@quotient+1)^(0+128),f
  6750  0773  09B5               	comf	(___aodiv@quotient+2)^(0+128),f
  6751  0774  09B6               	comf	(___aodiv@quotient+3)^(0+128),f
  6752  0775  09B7               	comf	(___aodiv@quotient+4)^(0+128),f
  6753  0776  09B8               	comf	(___aodiv@quotient+5)^(0+128),f
  6754  0777  09B9               	comf	(___aodiv@quotient+6)^(0+128),f
  6755  0778  09BA               	comf	(___aodiv@quotient+7)^(0+128),f
  6756  0779  0AB3               	incf	___aodiv@quotient^(0+128),f
  6757  077A  1D03               	skipz
  6758  077B  2F8F               	goto	l591
  6759  077C  0AB4               	incf	(___aodiv@quotient+1)^(0+128),f
  6760  077D  1D03               	skipz
  6761  077E  2F8F               	goto	l591
  6762  077F  0AB5               	incf	(___aodiv@quotient+2)^(0+128),f
  6763  0780  1D03               	skipz
  6764  0781  2F8F               	goto	l591
  6765  0782  0AB6               	incf	(___aodiv@quotient+3)^(0+128),f
  6766  0783  1D03               	skipz
  6767  0784  2F8F               	goto	l591
  6768  0785  0AB7               	incf	(___aodiv@quotient+4)^(0+128),f
  6769  0786  1D03               	skipz
  6770  0787  2F8F               	goto	l591
  6771  0788  0AB8               	incf	(___aodiv@quotient+5)^(0+128),f
  6772  0789  1D03               	skipz
  6773  078A  2F8F               	goto	l591
  6774  078B  0AB9               	incf	(___aodiv@quotient+6)^(0+128),f
  6775  078C  1D03               	skipz
  6776  078D  2F8F               	goto	l591
  6777  078E  0ABA               	incf	(___aodiv@quotient+7)^(0+128),f
  6778  078F                     l591:	
  6779  078F  0021               	movlb	1	; select bank1
  6780  0790  0833               	movf	___aodiv@quotient^(0+128),w
  6781  0791  00A0               	movwf	?___aodiv^(0+128)
  6782  0792  0834               	movf	(___aodiv@quotient+1)^(0+128),w
  6783  0793  00A1               	movwf	(?___aodiv+1)^(0+128)
  6784  0794  0835               	movf	(___aodiv@quotient+2)^(0+128),w
  6785  0795  00A2               	movwf	(?___aodiv+2)^(0+128)
  6786  0796  0836               	movf	(___aodiv@quotient+3)^(0+128),w
  6787  0797  00A3               	movwf	(?___aodiv+3)^(0+128)
  6788  0798  0837               	movf	(___aodiv@quotient+4)^(0+128),w
  6789  0799  00A4               	movwf	(?___aodiv+4)^(0+128)
  6790  079A  0838               	movf	(___aodiv@quotient+5)^(0+128),w
  6791  079B  00A5               	movwf	(?___aodiv+5)^(0+128)
  6792  079C  0839               	movf	(___aodiv@quotient+6)^(0+128),w
  6793  079D  00A6               	movwf	(?___aodiv+6)^(0+128)
  6794  079E  083A               	movf	(___aodiv@quotient+7)^(0+128),w
  6795  079F  00A7               	movwf	(?___aodiv+7)^(0+128)
  6796  07A0  0008               	return
  6797  07A1                     __end_of___aodiv:	
  6798                           
  6799                           	psect	text19
  6800  07F4                     __ptext19:	
  6801 ;; *************** function _SYSTEM_Initialize *****************
  6802 ;; Defined at:
  6803 ;;		line 4 in file "mcc_generated_files/mcc.c"
  6804 ;; Parameters:    Size  Location     Type
  6805 ;;		None
  6806 ;; Auto vars:     Size  Location     Type
  6807 ;;		None
  6808 ;; Return value:  Size  Location     Type
  6809 ;;                  1    wreg      void 
  6810 ;; Registers used:
  6811 ;;		wreg, status,2, status,0, pclath, cstack
  6812 ;; Tracked objects:
  6813 ;;		On entry : 0/0
  6814 ;;		On exit  : 0/0
  6815 ;;		Unchanged: 0/0
  6816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6820 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6821 ;;Total ram usage:        0 bytes
  6822 ;; Hardware stack levels used:    1
  6823 ;; Hardware stack levels required when called:    8
  6824 ;; This function calls:
  6825 ;;		_EUSART_Initialize
  6826 ;;		_OSCILLATOR_Initialize
  6827 ;;		_PIN_MANAGER_Initialize
  6828 ;;		_TMR0_Initialize
  6829 ;; This function is called by:
  6830 ;;		_main
  6831 ;; This function uses a non-reentrant model
  6832 ;;
  6833                           
  6834                           
  6835                           ;psect for function _SYSTEM_Initialize
  6836  07F4                     _SYSTEM_Initialize:	
  6837                           
  6838                           ;mcc_generated_files/mcc.c: 6:     PIN_MANAGER_Initialize();
  6839                           
  6840                           ;incstack = 0
  6841                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6842  07F4  318C  240B  3187   	fcall	_PIN_MANAGER_Initialize
  6843                           
  6844                           ;mcc_generated_files/mcc.c: 7:     OSCILLATOR_Initialize();
  6845  07F7  318A  2248  3187   	fcall	_OSCILLATOR_Initialize
  6846                           
  6847                           ;mcc_generated_files/mcc.c: 8:     TMR0_Initialize();
  6848  07FA  318A  22E9  3187   	fcall	_TMR0_Initialize
  6849                           
  6850                           ;mcc_generated_files/mcc.c: 9:     EUSART_Initialize();
  6851  07FD  318B  238D         	fcall	_EUSART_Initialize
  6852  07FF  0008               	return
  6853  0800                     __end_of_SYSTEM_Initialize:	
  6854                           
  6855                           	psect	text20
  6856  0AE9                     __ptext20:	
  6857 ;; *************** function _TMR0_Initialize *****************
  6858 ;; Defined at:
  6859 ;;		line 18 in file "mcc_generated_files/tmr0.c"
  6860 ;; Parameters:    Size  Location     Type
  6861 ;;		None
  6862 ;; Auto vars:     Size  Location     Type
  6863 ;;		None
  6864 ;; Return value:  Size  Location     Type
  6865 ;;                  1    wreg      void 
  6866 ;; Registers used:
  6867 ;;		wreg, status,2, status,0, pclath, cstack
  6868 ;; Tracked objects:
  6869 ;;		On entry : 0/0
  6870 ;;		On exit  : 0/0
  6871 ;;		Unchanged: 0/0
  6872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6875 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6876 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6877 ;;Total ram usage:        1 bytes
  6878 ;; Hardware stack levels used:    1
  6879 ;; Hardware stack levels required when called:    7
  6880 ;; This function calls:
  6881 ;;		_TMR0_SetInterruptHandler
  6882 ;; This function is called by:
  6883 ;;		_SYSTEM_Initialize
  6884 ;; This function uses a non-reentrant model
  6885 ;;
  6886                           
  6887                           
  6888                           ;psect for function _TMR0_Initialize
  6889  0AE9                     _TMR0_Initialize:	
  6890                           
  6891                           ;mcc_generated_files/tmr0.c: 23:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD4 
      +                          & 0x3F));
  6892                           
  6893                           ;incstack = 0
  6894                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6895  0AE9  0021               	movlb	1	; select bank1
  6896  0AEA  0815               	movf	21,w	;volatile
  6897  0AEB  39C0               	andlw	192
  6898  0AEC  3814               	iorlw	20
  6899  0AED  0095               	movwf	21	;volatile
  6900                           
  6901                           ;mcc_generated_files/tmr0.c: 26:     TMR0 = 0x83;
  6902  0AEE  3083               	movlw	131
  6903  0AEF  0020               	movlb	0	; select bank0
  6904  0AF0  0095               	movwf	21	;volatile
  6905                           
  6906                           ;mcc_generated_files/tmr0.c: 29:     timer0ReloadVal= 131;
  6907  0AF1  3083               	movlw	131
  6908  0AF2  0021               	movlb	1	; select bank1
  6909  0AF3  00A2               	movwf	??_TMR0_Initialize^(0+128)
  6910  0AF4  0822               	movf	??_TMR0_Initialize^(0+128),w
  6911  0AF5  0020               	movlb	0	; select bank0
  6912  0AF6  00DF               	movwf	_timer0ReloadVal	;volatile
  6913                           
  6914                           ;mcc_generated_files/tmr0.c: 32:     INTCONbits.TMR0IF = 0;
  6915  0AF7  110B               	bcf	11,2	;volatile
  6916                           
  6917                           ;mcc_generated_files/tmr0.c: 35:     INTCONbits.TMR0IE = 1;
  6918  0AF8  168B               	bsf	11,5	;volatile
  6919                           
  6920                           ;mcc_generated_files/tmr0.c: 38:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  6921  0AF9  3003               	movlw	low _TMR0_DefaultInterruptHandler
  6922  0AFA  0021               	movlb	1	; select bank1
  6923  0AFB  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler^(0+128)
  6924  0AFC  3000               	movlw	high _TMR0_DefaultInterruptHandler
  6925  0AFD  00A1               	movwf	(TMR0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  6926  0AFE  318A  227B         	fcall	_TMR0_SetInterruptHandler
  6927  0B00  0008               	return
  6928  0B01                     __end_of_TMR0_Initialize:	
  6929                           
  6930                           	psect	text21
  6931  0A7B                     __ptext21:	
  6932 ;; *************** function _TMR0_SetInterruptHandler *****************
  6933 ;; Defined at:
  6934 ;;		line 79 in file "mcc_generated_files/tmr0.c"
  6935 ;; Parameters:    Size  Location     Type
  6936 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  6937 ;;		 -> timerISR(1), TMR0_DefaultInterruptHandler(1), 
  6938 ;; Auto vars:     Size  Location     Type
  6939 ;;		None
  6940 ;; Return value:  Size  Location     Type
  6941 ;;                  1    wreg      void 
  6942 ;; Registers used:
  6943 ;;		wreg
  6944 ;; Tracked objects:
  6945 ;;		On entry : 0/0
  6946 ;;		On exit  : 0/0
  6947 ;;		Unchanged: 0/0
  6948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6949 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6952 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6953 ;;Total ram usage:        2 bytes
  6954 ;; Hardware stack levels used:    1
  6955 ;; Hardware stack levels required when called:    6
  6956 ;; This function calls:
  6957 ;;		Nothing
  6958 ;; This function is called by:
  6959 ;;		_TMR0_Initialize
  6960 ;;		_main
  6961 ;; This function uses a non-reentrant model
  6962 ;;
  6963                           
  6964                           
  6965                           ;psect for function _TMR0_SetInterruptHandler
  6966  0A7B                     _TMR0_SetInterruptHandler:	
  6967                           
  6968                           ;mcc_generated_files/tmr0.c: 80:     TMR0_InterruptHandler = InterruptHandler;
  6969                           
  6970                           ;incstack = 0
  6971                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  6972  0A7B  0021               	movlb	1	; select bank1
  6973  0A7C  0821               	movf	(TMR0_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  6974  0A7D  0020               	movlb	0	; select bank0
  6975  0A7E  00D8               	movwf	_TMR0_InterruptHandler+1
  6976  0A7F  0021               	movlb	1	; select bank1
  6977  0A80  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler^(0+128),w
  6978  0A81  0020               	movlb	0	; select bank0
  6979  0A82  00D7               	movwf	_TMR0_InterruptHandler
  6980  0A83  0008               	return
  6981  0A84                     __end_of_TMR0_SetInterruptHandler:	
  6982                           
  6983                           	psect	text22
  6984  0C0B                     __ptext22:	
  6985 ;; *************** function _PIN_MANAGER_Initialize *****************
  6986 ;; Defined at:
  6987 ;;		line 6 in file "mcc_generated_files/pin_manager.c"
  6988 ;; Parameters:    Size  Location     Type
  6989 ;;		None
  6990 ;; Auto vars:     Size  Location     Type
  6991 ;;		None
  6992 ;; Return value:  Size  Location     Type
  6993 ;;                  1    wreg      void 
  6994 ;; Registers used:
  6995 ;;		wreg, status,2, status,0, pclath, cstack
  6996 ;; Tracked objects:
  6997 ;;		On entry : 0/0
  6998 ;;		On exit  : 0/0
  6999 ;;		Unchanged: 0/0
  7000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7005 ;;Total ram usage:        0 bytes
  7006 ;; Hardware stack levels used:    1
  7007 ;; Hardware stack levels required when called:    7
  7008 ;; This function calls:
  7009 ;;		_IOCCF7_SetInterruptHandler
  7010 ;; This function is called by:
  7011 ;;		_SYSTEM_Initialize
  7012 ;; This function uses a non-reentrant model
  7013 ;;
  7014                           
  7015                           
  7016                           ;psect for function _PIN_MANAGER_Initialize
  7017  0C0B                     _PIN_MANAGER_Initialize:	
  7018                           
  7019                           ;mcc_generated_files/pin_manager.c: 11:     LATA = 0x00;
  7020                           
  7021                           ;incstack = 0
  7022                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7023  0C0B  0022               	movlb	2	; select bank2
  7024  0C0C  018C               	clrf	12	;volatile
  7025                           
  7026                           ;mcc_generated_files/pin_manager.c: 12:     LATB = 0x00;
  7027  0C0D  018D               	clrf	13	;volatile
  7028                           
  7029                           ;mcc_generated_files/pin_manager.c: 13:     LATC = 0x00;
  7030  0C0E  018E               	clrf	14	;volatile
  7031                           
  7032                           ;mcc_generated_files/pin_manager.c: 18:     TRISA = 0x37;
  7033  0C0F  3037               	movlw	55
  7034  0C10  0021               	movlb	1	; select bank1
  7035  0C11  008C               	movwf	12	;volatile
  7036                           
  7037                           ;mcc_generated_files/pin_manager.c: 19:     TRISB = 0x70;
  7038  0C12  3070               	movlw	112
  7039  0C13  008D               	movwf	13	;volatile
  7040                           
  7041                           ;mcc_generated_files/pin_manager.c: 20:     TRISC = 0xFF;
  7042  0C14  30FF               	movlw	255
  7043  0C15  008E               	movwf	14	;volatile
  7044                           
  7045                           ;mcc_generated_files/pin_manager.c: 25:     ANSELC = 0x4F;
  7046  0C16  304F               	movlw	79
  7047  0C17  0023               	movlb	3	; select bank3
  7048  0C18  008E               	movwf	14	;volatile
  7049                           
  7050                           ;mcc_generated_files/pin_manager.c: 26:     ANSELB = 0x70;
  7051  0C19  3070               	movlw	112
  7052  0C1A  008D               	movwf	13	;volatile
  7053                           
  7054                           ;mcc_generated_files/pin_manager.c: 27:     ANSELA = 0x17;
  7055  0C1B  3017               	movlw	23
  7056  0C1C  008C               	movwf	12	;volatile
  7057                           
  7058                           ;mcc_generated_files/pin_manager.c: 32:     WPUB = 0x00;
  7059  0C1D  0024               	movlb	4	; select bank4
  7060  0C1E  018D               	clrf	13	;volatile
  7061                           
  7062                           ;mcc_generated_files/pin_manager.c: 33:     WPUA = 0x00;
  7063  0C1F  018C               	clrf	12	;volatile
  7064                           
  7065                           ;mcc_generated_files/pin_manager.c: 34:     WPUC = 0x00;
  7066  0C20  018E               	clrf	14	;volatile
  7067                           
  7068                           ;mcc_generated_files/pin_manager.c: 35:     OPTION_REGbits.nWPUEN = 1;
  7069  0C21  0021               	movlb	1	; select bank1
  7070  0C22  1795               	bsf	21,7	;volatile
  7071                           
  7072                           ;mcc_generated_files/pin_manager.c: 40:     ODCONA = 0x00;
  7073  0C23  0025               	movlb	5	; select bank5
  7074  0C24  018C               	clrf	12	;volatile
  7075                           
  7076                           ;mcc_generated_files/pin_manager.c: 41:     ODCONB = 0x00;
  7077  0C25  018D               	clrf	13	;volatile
  7078                           
  7079                           ;mcc_generated_files/pin_manager.c: 42:     ODCONC = 0x00;
  7080  0C26  018E               	clrf	14	;volatile
  7081                           
  7082                           ;mcc_generated_files/pin_manager.c: 47:     SLRCONA = 0x37;
  7083  0C27  3037               	movlw	55
  7084  0C28  0026               	movlb	6	; select bank6
  7085  0C29  008C               	movwf	12	;volatile
  7086                           
  7087                           ;mcc_generated_files/pin_manager.c: 48:     SLRCONB = 0xF0;
  7088  0C2A  30F0               	movlw	240
  7089  0C2B  008D               	movwf	13	;volatile
  7090                           
  7091                           ;mcc_generated_files/pin_manager.c: 49:     SLRCONC = 0xFF;
  7092  0C2C  30FF               	movlw	255
  7093  0C2D  008E               	movwf	14	;volatile
  7094                           
  7095                           ;mcc_generated_files/pin_manager.c: 56:     IOCCFbits.IOCCF7 = 0;
  7096  0C2E  0027               	movlb	7	; select bank7
  7097  0C2F  1399               	bcf	25,7	;volatile
  7098                           
  7099                           ;mcc_generated_files/pin_manager.c: 58:     IOCCNbits.IOCCN7 = 0;
  7100  0C30  1398               	bcf	24,7	;volatile
  7101                           
  7102                           ;mcc_generated_files/pin_manager.c: 60:     IOCCPbits.IOCCP7 = 1;
  7103  0C31  1797               	bsf	23,7	;volatile
  7104                           
  7105                           ;mcc_generated_files/pin_manager.c: 65:     IOCCF7_SetInterruptHandler(IOCCF7_DefaultInt
      +                          erruptHandler);
  7106  0C32  3002               	movlw	low _IOCCF7_DefaultInterruptHandler
  7107  0C33  0021               	movlb	1	; select bank1
  7108  0C34  00A0               	movwf	IOCCF7_SetInterruptHandler@InterruptHandler^(0+128)
  7109  0C35  3000               	movlw	high _IOCCF7_DefaultInterruptHandler
  7110  0C36  00A1               	movwf	(IOCCF7_SetInterruptHandler@InterruptHandler^(0+128)+1)
  7111  0C37  318A  2272         	fcall	_IOCCF7_SetInterruptHandler
  7112                           
  7113                           ;mcc_generated_files/pin_manager.c: 68:     INTCONbits.IOCIE = 1;
  7114  0C39  158B               	bsf	11,3	;volatile
  7115                           
  7116                           ;mcc_generated_files/pin_manager.c: 71:     RB7PPS = 0x12;
  7117  0C3A  3012               	movlw	18
  7118  0C3B  003D               	movlb	29	; select bank29
  7119  0C3C  009F               	movwf	31	;volatile
  7120  0C3D  0008               	return
  7121  0C3E                     __end_of_PIN_MANAGER_Initialize:	
  7122                           
  7123                           	psect	text23
  7124  0A72                     __ptext23:	
  7125 ;; *************** function _IOCCF7_SetInterruptHandler *****************
  7126 ;; Defined at:
  7127 ;;		line 101 in file "mcc_generated_files/pin_manager.c"
  7128 ;; Parameters:    Size  Location     Type
  7129 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  7130 ;;		 -> speedCalc(1), IOCCF7_DefaultInterruptHandler(1), 
  7131 ;; Auto vars:     Size  Location     Type
  7132 ;;		None
  7133 ;; Return value:  Size  Location     Type
  7134 ;;                  1    wreg      void 
  7135 ;; Registers used:
  7136 ;;		wreg
  7137 ;; Tracked objects:
  7138 ;;		On entry : 0/0
  7139 ;;		On exit  : 0/0
  7140 ;;		Unchanged: 0/0
  7141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7142 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7145 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7146 ;;Total ram usage:        2 bytes
  7147 ;; Hardware stack levels used:    1
  7148 ;; Hardware stack levels required when called:    6
  7149 ;; This function calls:
  7150 ;;		Nothing
  7151 ;; This function is called by:
  7152 ;;		_PIN_MANAGER_Initialize
  7153 ;;		_main
  7154 ;; This function uses a non-reentrant model
  7155 ;;
  7156                           
  7157                           
  7158                           ;psect for function _IOCCF7_SetInterruptHandler
  7159  0A72                     _IOCCF7_SetInterruptHandler:	
  7160                           
  7161                           ;mcc_generated_files/pin_manager.c: 102:     IOCCF7_InterruptHandler = InterruptHandler;
  7162                           
  7163                           ;incstack = 0
  7164                           ; Regs used in _IOCCF7_SetInterruptHandler: [wreg]
  7165  0A72  0021               	movlb	1	; select bank1
  7166  0A73  0821               	movf	(IOCCF7_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  7167  0A74  0020               	movlb	0	; select bank0
  7168  0A75  00DA               	movwf	_IOCCF7_InterruptHandler+1
  7169  0A76  0021               	movlb	1	; select bank1
  7170  0A77  0820               	movf	IOCCF7_SetInterruptHandler@InterruptHandler^(0+128),w
  7171  0A78  0020               	movlb	0	; select bank0
  7172  0A79  00D9               	movwf	_IOCCF7_InterruptHandler
  7173  0A7A  0008               	return
  7174  0A7B                     __end_of_IOCCF7_SetInterruptHandler:	
  7175                           
  7176                           	psect	text24
  7177  0A48                     __ptext24:	
  7178 ;; *************** function _OSCILLATOR_Initialize *****************
  7179 ;; Defined at:
  7180 ;;		line 12 in file "mcc_generated_files/mcc.c"
  7181 ;; Parameters:    Size  Location     Type
  7182 ;;		None
  7183 ;; Auto vars:     Size  Location     Type
  7184 ;;		None
  7185 ;; Return value:  Size  Location     Type
  7186 ;;                  1    wreg      void 
  7187 ;; Registers used:
  7188 ;;		wreg, status,2
  7189 ;; Tracked objects:
  7190 ;;		On entry : 0/0
  7191 ;;		On exit  : 0/0
  7192 ;;		Unchanged: 0/0
  7193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7197 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7198 ;;Total ram usage:        0 bytes
  7199 ;; Hardware stack levels used:    1
  7200 ;; Hardware stack levels required when called:    6
  7201 ;; This function calls:
  7202 ;;		Nothing
  7203 ;; This function is called by:
  7204 ;;		_SYSTEM_Initialize
  7205 ;; This function uses a non-reentrant model
  7206 ;;
  7207                           
  7208                           
  7209                           ;psect for function _OSCILLATOR_Initialize
  7210  0A48                     _OSCILLATOR_Initialize:	
  7211                           
  7212                           ;mcc_generated_files/mcc.c: 15:     OSCCON = 0x7A;
  7213                           
  7214                           ;incstack = 0
  7215                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  7216  0A48  307A               	movlw	122
  7217  0A49  0021               	movlb	1	; select bank1
  7218  0A4A  0099               	movwf	25	;volatile
  7219                           
  7220                           ;mcc_generated_files/mcc.c: 17:     OSCTUNE = 0x00;
  7221  0A4B  0198               	clrf	24	;volatile
  7222                           
  7223                           ;mcc_generated_files/mcc.c: 19:     BORCON = 0x00;
  7224  0A4C  0022               	movlb	2	; select bank2
  7225  0A4D  0196               	clrf	22	;volatile
  7226  0A4E  0008               	return
  7227  0A4F                     __end_of_OSCILLATOR_Initialize:	
  7228                           
  7229                           	psect	text25
  7230  0B8D                     __ptext25:	
  7231 ;; *************** function _EUSART_Initialize *****************
  7232 ;; Defined at:
  7233 ;;		line 65 in file "mcc_generated_files/eusart.c"
  7234 ;; Parameters:    Size  Location     Type
  7235 ;;		None
  7236 ;; Auto vars:     Size  Location     Type
  7237 ;;		None
  7238 ;; Return value:  Size  Location     Type
  7239 ;;                  1    wreg      void 
  7240 ;; Registers used:
  7241 ;;		wreg, status,2, status,0, pclath, cstack
  7242 ;; Tracked objects:
  7243 ;;		On entry : 0/0
  7244 ;;		On exit  : 0/0
  7245 ;;		Unchanged: 0/0
  7246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7251 ;;Total ram usage:        0 bytes
  7252 ;; Hardware stack levels used:    1
  7253 ;; Hardware stack levels required when called:    7
  7254 ;; This function calls:
  7255 ;;		_EUSART_SetErrorHandler
  7256 ;;		_EUSART_SetFramingErrorHandler
  7257 ;;		_EUSART_SetOverrunErrorHandler
  7258 ;; This function is called by:
  7259 ;;		_SYSTEM_Initialize
  7260 ;; This function uses a non-reentrant model
  7261 ;;
  7262                           
  7263                           
  7264                           ;psect for function _EUSART_Initialize
  7265  0B8D                     _EUSART_Initialize:	
  7266                           
  7267                           ;mcc_generated_files/eusart.c: 70:     BAUD1CON = 0x08;
  7268                           
  7269                           ;incstack = 0
  7270                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7271  0B8D  3008               	movlw	8
  7272  0B8E  0023               	movlb	3	; select bank3
  7273  0B8F  009F               	movwf	31	;volatile
  7274                           
  7275                           ;mcc_generated_files/eusart.c: 73:     RC1STA = 0x80;
  7276  0B90  3080               	movlw	128
  7277  0B91  009D               	movwf	29	;volatile
  7278                           
  7279                           ;mcc_generated_files/eusart.c: 76:     TX1STA = 0x24;
  7280  0B92  3024               	movlw	36
  7281  0B93  009E               	movwf	30	;volatile
  7282                           
  7283                           ;mcc_generated_files/eusart.c: 79:     SPBRGL = 0xA0;
  7284  0B94  30A0               	movlw	160
  7285  0B95  009B               	movwf	27	;volatile
  7286                           
  7287                           ;mcc_generated_files/eusart.c: 82:     SPBRGH = 0x01;
  7288  0B96  3001               	movlw	1
  7289  0B97  009C               	movwf	28	;volatile
  7290                           
  7291                           ;mcc_generated_files/eusart.c: 85:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  7292  0B98  3000               	movlw	0
  7293  0B99  0021               	movlb	1	; select bank1
  7294  0B9A  00A0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128)
  7295  0B9B  3000               	movlw	0
  7296  0B9C  00A1               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler^(0+128)+1)
  7297  0B9D  318A  2260  318B   	fcall	_EUSART_SetFramingErrorHandler
  7298                           
  7299                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  7300  0BA0  3000               	movlw	0
  7301  0BA1  0021               	movlb	1	; select bank1
  7302  0BA2  00A0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)
  7303  0BA3  3000               	movlw	0
  7304  0BA4  00A1               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)+1)
  7305  0BA5  318A  2269  318B   	fcall	_EUSART_SetOverrunErrorHandler
  7306                           
  7307                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  7308  0BA8  3000               	movlw	0
  7309  0BA9  0021               	movlb	1	; select bank1
  7310  0BAA  00A0               	movwf	EUSART_SetErrorHandler@interruptHandler^(0+128)
  7311  0BAB  3000               	movlw	0
  7312  0BAC  00A1               	movwf	(EUSART_SetErrorHandler@interruptHandler^(0+128)+1)
  7313  0BAD  318A  2257         	fcall	_EUSART_SetErrorHandler
  7314                           
  7315                           ;mcc_generated_files/eusart.c: 89:     eusartRxLastError.status = 0;
  7316  0BAF  0020               	movlb	0	; select bank0
  7317  0BB0  01D2               	clrf	_eusartRxLastError	;volatile
  7318  0BB1  0008               	return
  7319  0BB2                     __end_of_EUSART_Initialize:	
  7320                           
  7321                           	psect	text26
  7322  0A69                     __ptext26:	
  7323 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  7324 ;; Defined at:
  7325 ;;		line 175 in file "mcc_generated_files/eusart.c"
  7326 ;; Parameters:    Size  Location     Type
  7327 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  7328 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  7329 ;; Auto vars:     Size  Location     Type
  7330 ;;		None
  7331 ;; Return value:  Size  Location     Type
  7332 ;;                  1    wreg      void 
  7333 ;; Registers used:
  7334 ;;		wreg
  7335 ;; Tracked objects:
  7336 ;;		On entry : 0/0
  7337 ;;		On exit  : 0/0
  7338 ;;		Unchanged: 0/0
  7339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7340 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7343 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7344 ;;Total ram usage:        2 bytes
  7345 ;; Hardware stack levels used:    1
  7346 ;; Hardware stack levels required when called:    6
  7347 ;; This function calls:
  7348 ;;		Nothing
  7349 ;; This function is called by:
  7350 ;;		_EUSART_Initialize
  7351 ;; This function uses a non-reentrant model
  7352 ;;
  7353                           
  7354                           
  7355                           ;psect for function _EUSART_SetOverrunErrorHandler
  7356  0A69                     _EUSART_SetOverrunErrorHandler:	
  7357                           
  7358                           ;mcc_generated_files/eusart.c: 176:     EUSART_OverrunErrorHandler = interruptHandler;
  7359                           
  7360                           ;incstack = 0
  7361                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  7362  0A69  0021               	movlb	1	; select bank1
  7363  0A6A  0821               	movf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^(0+128),w
  7364  0A6B  0020               	movlb	0	; select bank0
  7365  0A6C  00DC               	movwf	_EUSART_OverrunErrorHandler+1
  7366  0A6D  0021               	movlb	1	; select bank1
  7367  0A6E  0820               	movf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128),w
  7368  0A6F  0020               	movlb	0	; select bank0
  7369  0A70  00DB               	movwf	_EUSART_OverrunErrorHandler
  7370  0A71  0008               	return
  7371  0A72                     __end_of_EUSART_SetOverrunErrorHandler:	
  7372                           
  7373                           	psect	text27
  7374  0A60                     __ptext27:	
  7375 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  7376 ;; Defined at:
  7377 ;;		line 171 in file "mcc_generated_files/eusart.c"
  7378 ;; Parameters:    Size  Location     Type
  7379 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  7380 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  7381 ;; Auto vars:     Size  Location     Type
  7382 ;;		None
  7383 ;; Return value:  Size  Location     Type
  7384 ;;                  1    wreg      void 
  7385 ;; Registers used:
  7386 ;;		wreg
  7387 ;; Tracked objects:
  7388 ;;		On entry : 0/0
  7389 ;;		On exit  : 0/0
  7390 ;;		Unchanged: 0/0
  7391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7392 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7395 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7396 ;;Total ram usage:        2 bytes
  7397 ;; Hardware stack levels used:    1
  7398 ;; Hardware stack levels required when called:    6
  7399 ;; This function calls:
  7400 ;;		Nothing
  7401 ;; This function is called by:
  7402 ;;		_EUSART_Initialize
  7403 ;; This function uses a non-reentrant model
  7404 ;;
  7405                           
  7406                           
  7407                           ;psect for function _EUSART_SetFramingErrorHandler
  7408  0A60                     _EUSART_SetFramingErrorHandler:	
  7409                           
  7410                           ;mcc_generated_files/eusart.c: 172:     EUSART_FramingErrorHandler = interruptHandler;
  7411                           
  7412                           ;incstack = 0
  7413                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  7414  0A60  0021               	movlb	1	; select bank1
  7415  0A61  0821               	movf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^(0+128),w
  7416  0A62  0020               	movlb	0	; select bank0
  7417  0A63  00DE               	movwf	_EUSART_FramingErrorHandler+1
  7418  0A64  0021               	movlb	1	; select bank1
  7419  0A65  0820               	movf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128),w
  7420  0A66  0020               	movlb	0	; select bank0
  7421  0A67  00DD               	movwf	_EUSART_FramingErrorHandler
  7422  0A68  0008               	return
  7423  0A69                     __end_of_EUSART_SetFramingErrorHandler:	
  7424                           
  7425                           	psect	text28
  7426  0A57                     __ptext28:	
  7427 ;; *************** function _EUSART_SetErrorHandler *****************
  7428 ;; Defined at:
  7429 ;;		line 179 in file "mcc_generated_files/eusart.c"
  7430 ;; Parameters:    Size  Location     Type
  7431 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  7432 ;;		 -> EUSART_DefaultErrorHandler(1), 
  7433 ;; Auto vars:     Size  Location     Type
  7434 ;;		None
  7435 ;; Return value:  Size  Location     Type
  7436 ;;                  1    wreg      void 
  7437 ;; Registers used:
  7438 ;;		wreg
  7439 ;; Tracked objects:
  7440 ;;		On entry : 0/0
  7441 ;;		On exit  : 0/0
  7442 ;;		Unchanged: 0/0
  7443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7444 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7447 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7448 ;;Total ram usage:        2 bytes
  7449 ;; Hardware stack levels used:    1
  7450 ;; Hardware stack levels required when called:    6
  7451 ;; This function calls:
  7452 ;;		Nothing
  7453 ;; This function is called by:
  7454 ;;		_EUSART_Initialize
  7455 ;; This function uses a non-reentrant model
  7456 ;;
  7457                           
  7458                           
  7459                           ;psect for function _EUSART_SetErrorHandler
  7460  0A57                     _EUSART_SetErrorHandler:	
  7461                           
  7462                           ;mcc_generated_files/eusart.c: 180:     EUSART_ErrorHandler = interruptHandler;
  7463                           
  7464                           ;incstack = 0
  7465                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  7466  0A57  0021               	movlb	1	; select bank1
  7467  0A58  0821               	movf	(EUSART_SetErrorHandler@interruptHandler+1)^(0+128),w
  7468  0A59  0022               	movlb	2	; select bank2
  7469  0A5A  00EF               	movwf	(_EUSART_ErrorHandler+1)^(0+256)
  7470  0A5B  0021               	movlb	1	; select bank1
  7471  0A5C  0820               	movf	EUSART_SetErrorHandler@interruptHandler^(0+128),w
  7472  0A5D  0022               	movlb	2	; select bank2
  7473  0A5E  00EE               	movwf	_EUSART_ErrorHandler^(0+256)
  7474  0A5F  0008               	return
  7475  0A60                     __end_of_EUSART_SetErrorHandler:	
  7476                           
  7477                           	psect	intentry
  7478  0004                     __pintentry:	
  7479 ;; *************** function _INTERRUPT_InterruptManager *****************
  7480 ;; Defined at:
  7481 ;;		line 4 in file "mcc_generated_files/interrupt_manager.c"
  7482 ;; Parameters:    Size  Location     Type
  7483 ;;		None
  7484 ;; Auto vars:     Size  Location     Type
  7485 ;;		None
  7486 ;; Return value:  Size  Location     Type
  7487 ;;                  1    wreg      void 
  7488 ;; Registers used:
  7489 ;;		wreg, status,2, status,0, pclath, cstack
  7490 ;; Tracked objects:
  7491 ;;		On entry : 0/0
  7492 ;;		On exit  : 0/0
  7493 ;;		Unchanged: 0/0
  7494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7499 ;;Total ram usage:        0 bytes
  7500 ;; Hardware stack levels used:    1
  7501 ;; Hardware stack levels required when called:    5
  7502 ;; This function calls:
  7503 ;;		_PIN_MANAGER_IOC
  7504 ;;		_TMR0_ISR
  7505 ;; This function is called by:
  7506 ;;		Interrupt level 1
  7507 ;; This function uses a non-reentrant model
  7508 ;;
  7509                           
  7510  0004                     _INTERRUPT_InterruptManager:	
  7511                           
  7512                           ;incstack = 0
  7513  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  7514                           
  7515                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  7516  0005  3180               	pagesel	$
  7517                           
  7518                           ;mcc_generated_files/interrupt_manager.c: 7:     if(INTCONbits.TMR0IE == 1 && INTCONbits
      +                          .TMR0IF == 1)
  7519  0006  1A8B               	btfsc	11,5	;volatile
  7520  0007  1D0B               	btfss	11,2	;volatile
  7521  0008  280D               	goto	i1l236
  7522                           
  7523                           ;mcc_generated_files/interrupt_manager.c: 8:     {;mcc_generated_files/interrupt_manager
      +                          .c: 9:         TMR0_ISR();
  7524  0009  318A  22A5  3180   	fcall	_TMR0_ISR
  7525                           
  7526                           ;mcc_generated_files/interrupt_manager.c: 10:     }
  7527  000C  2812               	goto	i1l240
  7528  000D                     i1l236:	
  7529                           ;mcc_generated_files/interrupt_manager.c: 11:     else if(INTCONbits.IOCIE == 1 && INTCO
      +                          Nbits.IOCIF == 1)
  7530                           
  7531  000D  198B               	btfsc	11,3	;volatile
  7532  000E  1C0B               	btfss	11,0	;volatile
  7533  000F  2812               	goto	i1l240
  7534                           
  7535                           ;mcc_generated_files/interrupt_manager.c: 12:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 13:         PIN_MANAGER_IOC();
  7536  0010  318A  2230         	fcall	_PIN_MANAGER_IOC
  7537  0012                     i1l240:	
  7538                           ;mcc_generated_files/interrupt_manager.c: 14:     }
  7539                           
  7540  0012  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  7541  0013  0009               	retfie
  7542  0014                     __end_of_INTERRUPT_InterruptManager:	
  7543                           
  7544                           	psect	text30
  7545  0AA5                     __ptext30:	
  7546 ;; *************** function _TMR0_ISR *****************
  7547 ;; Defined at:
  7548 ;;		line 62 in file "mcc_generated_files/tmr0.c"
  7549 ;; Parameters:    Size  Location     Type
  7550 ;;		None
  7551 ;; Auto vars:     Size  Location     Type
  7552 ;;		None
  7553 ;; Return value:  Size  Location     Type
  7554 ;;                  1    wreg      void 
  7555 ;; Registers used:
  7556 ;;		wreg, status,2, status,0, pclath, cstack
  7557 ;; Tracked objects:
  7558 ;;		On entry : 0/0
  7559 ;;		On exit  : 0/0
  7560 ;;		Unchanged: 0/0
  7561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7566 ;;Total ram usage:        0 bytes
  7567 ;; Hardware stack levels used:    1
  7568 ;; Hardware stack levels required when called:    1
  7569 ;; This function calls:
  7570 ;;		Absolute function
  7571 ;;		_TMR0_DefaultInterruptHandler
  7572 ;;		_timerISR
  7573 ;; This function is called by:
  7574 ;;		_INTERRUPT_InterruptManager
  7575 ;; This function uses a non-reentrant model
  7576 ;;
  7577                           
  7578                           
  7579                           ;psect for function _TMR0_ISR
  7580  0AA5                     _TMR0_ISR:	
  7581                           
  7582                           ;mcc_generated_files/tmr0.c: 66:     INTCONbits.TMR0IF = 0;
  7583                           
  7584                           ;incstack = 0
  7585                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  7586  0AA5  110B               	bcf	11,2	;volatile
  7587                           
  7588                           ;mcc_generated_files/tmr0.c: 68:     TMR0 = timer0ReloadVal;
  7589  0AA6  0020               	movlb	0	; select bank0
  7590  0AA7  085F               	movf	_timer0ReloadVal,w	;volatile
  7591  0AA8  0095               	movwf	21	;volatile
  7592                           
  7593                           ;mcc_generated_files/tmr0.c: 70:     if(TMR0_InterruptHandler)
  7594  0AA9  0857               	movf	_TMR0_InterruptHandler,w
  7595  0AAA  0458               	iorwf	_TMR0_InterruptHandler+1,w
  7596  0AAB  1903               	btfsc	3,2
  7597  0AAC  0008               	return
  7598                           
  7599                           ;mcc_generated_files/tmr0.c: 71:     {;mcc_generated_files/tmr0.c: 72:         TMR0_Inte
      +                          rruptHandler();
  7600  0AAD  0858               	movf	_TMR0_InterruptHandler+1,w
  7601  0AAE  008A               	movwf	10
  7602  0AAF  0857               	movf	_TMR0_InterruptHandler,w
  7603  0AB0  000A               	callw
  7604  0AB1  318A               	pagesel	$
  7605  0AB2  0008               	return
  7606  0AB3                     __end_of_TMR0_ISR:	
  7607                           
  7608                           	psect	text31
  7609  0003                     __ptext31:	
  7610 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  7611 ;; Defined at:
  7612 ;;		line 83 in file "mcc_generated_files/tmr0.c"
  7613 ;; Parameters:    Size  Location     Type
  7614 ;;		None
  7615 ;; Auto vars:     Size  Location     Type
  7616 ;;		None
  7617 ;; Return value:  Size  Location     Type
  7618 ;;                  1    wreg      void 
  7619 ;; Registers used:
  7620 ;;		None
  7621 ;; Tracked objects:
  7622 ;;		On entry : 0/0
  7623 ;;		On exit  : 0/0
  7624 ;;		Unchanged: 0/0
  7625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7630 ;;Total ram usage:        0 bytes
  7631 ;; Hardware stack levels used:    1
  7632 ;; This function calls:
  7633 ;;		Nothing
  7634 ;; This function is called by:
  7635 ;;		_TMR0_Initialize
  7636 ;;		_TMR0_ISR
  7637 ;; This function uses a non-reentrant model
  7638 ;;
  7639                           
  7640                           
  7641                           ;psect for function _TMR0_DefaultInterruptHandler
  7642  0003                     _TMR0_DefaultInterruptHandler:	
  7643                           
  7644                           ;incstack = 0
  7645                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  7646  0003  0008               	return
  7647  0004                     __end_of_TMR0_DefaultInterruptHandler:	
  7648                           
  7649                           	psect	text32
  7650  0A84                     __ptext32:	
  7651 ;; *************** function _timerISR *****************
  7652 ;; Defined at:
  7653 ;;		line 71 in file "main.c"
  7654 ;; Parameters:    Size  Location     Type
  7655 ;;		None
  7656 ;; Auto vars:     Size  Location     Type
  7657 ;;		None
  7658 ;; Return value:  Size  Location     Type
  7659 ;;                  1    wreg      void 
  7660 ;; Registers used:
  7661 ;;		wreg
  7662 ;; Tracked objects:
  7663 ;;		On entry : 0/0
  7664 ;;		On exit  : 0/0
  7665 ;;		Unchanged: 0/0
  7666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7671 ;;Total ram usage:        0 bytes
  7672 ;; Hardware stack levels used:    1
  7673 ;; This function calls:
  7674 ;;		Nothing
  7675 ;; This function is called by:
  7676 ;;		_main
  7677 ;;		_TMR0_ISR
  7678 ;; This function uses a non-reentrant model
  7679 ;;
  7680                           
  7681                           
  7682                           ;psect for function _timerISR
  7683  0A84                     _timerISR:	
  7684                           
  7685                           ;main.c: 72:     counter++ ;
  7686                           
  7687                           ;incstack = 0
  7688                           ; Regs used in _timerISR: [wreg]
  7689  0A84  3001               	movlw	1
  7690  0A85  0020               	movlb	0	; select bank0
  7691  0A86  07C8               	addwf	_counter,f	;volatile
  7692  0A87  3000               	movlw	0
  7693  0A88  3DC9               	addwfc	_counter+1,f	;volatile
  7694  0A89  3000               	movlw	0
  7695  0A8A  3DCA               	addwfc	_counter+2,f	;volatile
  7696  0A8B  3000               	movlw	0
  7697  0A8C  3DCB               	addwfc	_counter+3,f	;volatile
  7698  0A8D  0008               	return
  7699  0A8E                     __end_of_timerISR:	
  7700                           
  7701                           	psect	text33
  7702  0A30                     __ptext33:	
  7703 ;; *************** function _PIN_MANAGER_IOC *****************
  7704 ;; Defined at:
  7705 ;;		line 74 in file "mcc_generated_files/pin_manager.c"
  7706 ;; Parameters:    Size  Location     Type
  7707 ;;		None
  7708 ;; Auto vars:     Size  Location     Type
  7709 ;;		None
  7710 ;; Return value:  Size  Location     Type
  7711 ;;                  1    wreg      void 
  7712 ;; Registers used:
  7713 ;;		wreg, status,2, status,0, pclath, cstack
  7714 ;; Tracked objects:
  7715 ;;		On entry : 0/0
  7716 ;;		On exit  : 0/0
  7717 ;;		Unchanged: 0/0
  7718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7723 ;;Total ram usage:        0 bytes
  7724 ;; Hardware stack levels used:    1
  7725 ;; Hardware stack levels required when called:    4
  7726 ;; This function calls:
  7727 ;;		_IOCCF7_ISR
  7728 ;; This function is called by:
  7729 ;;		_INTERRUPT_InterruptManager
  7730 ;; This function uses a non-reentrant model
  7731 ;;
  7732                           
  7733                           
  7734                           ;psect for function _PIN_MANAGER_IOC
  7735  0A30                     _PIN_MANAGER_IOC:	
  7736                           
  7737                           ;mcc_generated_files/pin_manager.c: 77:     if(IOCCFbits.IOCCF7 == 1)
  7738                           
  7739                           ;incstack = 0
  7740                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
  7741  0A30  0027               	movlb	7	; select bank7
  7742  0A31  1F99               	btfss	25,7	;volatile
  7743  0A32  0008               	return
  7744                           
  7745                           ;mcc_generated_files/pin_manager.c: 78:     {;mcc_generated_files/pin_manager.c: 79:    
      +                               IOCCF7_ISR();
  7746  0A33  318A  2298         	fcall	_IOCCF7_ISR
  7747  0A35  0008               	return
  7748  0A36                     __end_of_PIN_MANAGER_IOC:	
  7749                           
  7750                           	psect	text34
  7751  0A98                     __ptext34:	
  7752 ;; *************** function _IOCCF7_ISR *****************
  7753 ;; Defined at:
  7754 ;;		line 86 in file "mcc_generated_files/pin_manager.c"
  7755 ;; Parameters:    Size  Location     Type
  7756 ;;		None
  7757 ;; Auto vars:     Size  Location     Type
  7758 ;;		None
  7759 ;; Return value:  Size  Location     Type
  7760 ;;                  1    wreg      void 
  7761 ;; Registers used:
  7762 ;;		wreg, status,2, status,0, pclath, cstack
  7763 ;; Tracked objects:
  7764 ;;		On entry : 0/0
  7765 ;;		On exit  : 0/0
  7766 ;;		Unchanged: 0/0
  7767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7771 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7772 ;;Total ram usage:        0 bytes
  7773 ;; Hardware stack levels used:    1
  7774 ;; Hardware stack levels required when called:    3
  7775 ;; This function calls:
  7776 ;;		Absolute function
  7777 ;;		_IOCCF7_DefaultInterruptHandler
  7778 ;;		_speedCalc
  7779 ;; This function is called by:
  7780 ;;		_PIN_MANAGER_IOC
  7781 ;; This function uses a non-reentrant model
  7782 ;;
  7783                           
  7784                           
  7785                           ;psect for function _IOCCF7_ISR
  7786  0A98                     _IOCCF7_ISR:	
  7787                           
  7788                           ;mcc_generated_files/pin_manager.c: 91:     if(IOCCF7_InterruptHandler)
  7789                           
  7790                           ;incstack = 0
  7791                           ; Regs used in _IOCCF7_ISR: [wreg+status,2+status,0+pclath+cstack]
  7792  0A98  0020               	movlb	0	; select bank0
  7793  0A99  0859               	movf	_IOCCF7_InterruptHandler,w
  7794  0A9A  045A               	iorwf	_IOCCF7_InterruptHandler+1,w
  7795  0A9B  1903               	btfsc	3,2
  7796  0A9C  2AA2               	goto	i1l2826
  7797                           
  7798                           ;mcc_generated_files/pin_manager.c: 92:     {;mcc_generated_files/pin_manager.c: 93:    
      +                               IOCCF7_InterruptHandler();
  7799  0A9D  085A               	movf	_IOCCF7_InterruptHandler+1,w
  7800  0A9E  008A               	movwf	10
  7801  0A9F  0859               	movf	_IOCCF7_InterruptHandler,w
  7802  0AA0  000A               	callw
  7803  0AA1  318A               	pagesel	$
  7804  0AA2                     i1l2826:	
  7805                           
  7806                           ;mcc_generated_files/pin_manager.c: 95:     IOCCFbits.IOCCF7 = 0;
  7807  0AA2  0027               	movlb	7	; select bank7
  7808  0AA3  1399               	bcf	25,7	;volatile
  7809  0AA4  0008               	return
  7810  0AA5                     __end_of_IOCCF7_ISR:	
  7811                           
  7812                           	psect	text35
  7813  0002                     __ptext35:	
  7814 ;; *************** function _IOCCF7_DefaultInterruptHandler *****************
  7815 ;; Defined at:
  7816 ;;		line 108 in file "mcc_generated_files/pin_manager.c"
  7817 ;; Parameters:    Size  Location     Type
  7818 ;;		None
  7819 ;; Auto vars:     Size  Location     Type
  7820 ;;		None
  7821 ;; Return value:  Size  Location     Type
  7822 ;;                  1    wreg      void 
  7823 ;; Registers used:
  7824 ;;		None
  7825 ;; Tracked objects:
  7826 ;;		On entry : 0/0
  7827 ;;		On exit  : 0/0
  7828 ;;		Unchanged: 0/0
  7829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7834 ;;Total ram usage:        0 bytes
  7835 ;; Hardware stack levels used:    1
  7836 ;; This function calls:
  7837 ;;		Nothing
  7838 ;; This function is called by:
  7839 ;;		_PIN_MANAGER_Initialize
  7840 ;;		_IOCCF7_ISR
  7841 ;; This function uses a non-reentrant model
  7842 ;;
  7843                           
  7844                           
  7845                           ;psect for function _IOCCF7_DefaultInterruptHandler
  7846  0002                     _IOCCF7_DefaultInterruptHandler:	
  7847                           
  7848                           ;incstack = 0
  7849                           ; Regs used in _IOCCF7_DefaultInterruptHandler: []
  7850  0002  0008               	return
  7851  0003                     __end_of_IOCCF7_DefaultInterruptHandler:	
  7852                           
  7853                           	psect	text36
  7854  0E87                     __ptext36:	
  7855 ;; *************** function _speedCalc *****************
  7856 ;; Defined at:
  7857 ;;		line 75 in file "main.c"
  7858 ;; Parameters:    Size  Location     Type
  7859 ;;		None
  7860 ;; Auto vars:     Size  Location     Type
  7861 ;;		None
  7862 ;; Return value:  Size  Location     Type
  7863 ;;                  1    wreg      void 
  7864 ;; Registers used:
  7865 ;;		wreg, status,2, status,0, pclath, cstack
  7866 ;; Tracked objects:
  7867 ;;		On entry : 0/0
  7868 ;;		On exit  : 0/0
  7869 ;;		Unchanged: 0/0
  7870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7872 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7874 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7875 ;;Total ram usage:        4 bytes
  7876 ;; Hardware stack levels used:    1
  7877 ;; Hardware stack levels required when called:    2
  7878 ;; This function calls:
  7879 ;;		___aldiv
  7880 ;;		___fladd
  7881 ;;		___flmul
  7882 ;;		___lmul
  7883 ;;		___xxtofl
  7884 ;; This function is called by:
  7885 ;;		_main
  7886 ;;		_IOCCF7_ISR
  7887 ;; This function uses a non-reentrant model
  7888 ;;
  7889                           
  7890                           
  7891                           ;psect for function _speedCalc
  7892  0E87                     _speedCalc:	
  7893                           
  7894                           ;main.c: 77:     rpm = ( counter / 1000 ) * 60 ;
  7895                           
  7896                           ;incstack = 0
  7897                           ; Regs used in _speedCalc: [wreg+status,2+status,0+pclath+cstack]
  7898  0E87  3000               	movlw	0
  7899  0E88  0020               	movlb	0	; select bank0
  7900  0E89  00AD               	movwf	___lmul@multiplicand+3
  7901  0E8A  3000               	movlw	0
  7902  0E8B  00AC               	movwf	___lmul@multiplicand+2
  7903  0E8C  3000               	movlw	0
  7904  0E8D  00AB               	movwf	___lmul@multiplicand+1
  7905  0E8E  303C               	movlw	60
  7906  0E8F  00AA               	movwf	___lmul@multiplicand
  7907  0E90  084B               	movf	_counter+3,w	;volatile
  7908  0E91  00F7               	movwf	___aldiv@dividend+3
  7909  0E92  084A               	movf	_counter+2,w	;volatile
  7910  0E93  00F6               	movwf	___aldiv@dividend+2
  7911  0E94  0849               	movf	_counter+1,w	;volatile
  7912  0E95  00F5               	movwf	___aldiv@dividend+1
  7913  0E96  0848               	movf	_counter,w	;volatile
  7914  0E97  00F4               	movwf	___aldiv@dividend
  7915  0E98  3000               	movlw	0
  7916  0E99  00F3               	movwf	___aldiv@divisor+3
  7917  0E9A  3000               	movlw	0
  7918  0E9B  00F2               	movwf	___aldiv@divisor+2
  7919  0E9C  3003               	movlw	3
  7920  0E9D  00F1               	movwf	___aldiv@divisor+1
  7921  0E9E  30E8               	movlw	232
  7922  0E9F  00F0               	movwf	___aldiv@divisor
  7923  0EA0  318D  256F  318E   	fcall	___aldiv
  7924  0EA3  0873               	movf	?___aldiv+3,w
  7925  0EA4  0020               	movlb	0	; select bank0
  7926  0EA5  00A9               	movwf	___lmul@multiplier+3
  7927  0EA6  0872               	movf	?___aldiv+2,w
  7928  0EA7  00A8               	movwf	___lmul@multiplier+2
  7929  0EA8  0871               	movf	?___aldiv+1,w
  7930  0EA9  00A7               	movwf	___lmul@multiplier+1
  7931  0EAA  0870               	movf	?___aldiv,w
  7932  0EAB  00A6               	movwf	___lmul@multiplier
  7933  0EAC  318B  23DB  318E   	fcall	___lmul
  7934  0EAF  0020               	movlb	0	; select bank0
  7935  0EB0  0829               	movf	?___lmul+3,w
  7936  0EB1  00B1               	movwf	___xxtofl@val+3
  7937  0EB2  0828               	movf	?___lmul+2,w
  7938  0EB3  00B0               	movwf	___xxtofl@val+2
  7939  0EB4  0827               	movf	?___lmul+1,w
  7940  0EB5  00AF               	movwf	___xxtofl@val+1
  7941  0EB6  0826               	movf	?___lmul,w
  7942  0EB7  00AE               	movwf	___xxtofl@val
  7943  0EB8  3001               	movlw	1
  7944  0EB9  318D  25F1  318E   	fcall	___xxtofl
  7945  0EBC  0020               	movlb	0	; select bank0
  7946  0EBD  0831               	movf	?___xxtofl+3,w
  7947  0EBE  00D6               	movwf	_rpm+3	;volatile
  7948  0EBF  0830               	movf	?___xxtofl+2,w
  7949  0EC0  00D5               	movwf	_rpm+2	;volatile
  7950  0EC1  082F               	movf	?___xxtofl+1,w
  7951  0EC2  00D4               	movwf	_rpm+1	;volatile
  7952  0EC3  082E               	movf	?___xxtofl,w
  7953  0EC4  00D3               	movwf	_rpm	;volatile
  7954                           
  7955                           ;main.c: 81:     speed = 2 * rpm * (0.06) ;
  7956  0EC5  3040               	movlw	64
  7957  0EC6  00A3               	movwf	___flmul@b+3
  7958  0EC7  3000               	movlw	0
  7959  0EC8  00A2               	movwf	___flmul@b+2
  7960  0EC9  3000               	movlw	0
  7961  0ECA  00A1               	movwf	___flmul@b+1
  7962  0ECB  3000               	movlw	0
  7963  0ECC  00A0               	movwf	___flmul@b
  7964  0ECD  0856               	movf	_rpm+3,w	;volatile
  7965  0ECE  00A7               	movwf	___flmul@a+3
  7966  0ECF  0855               	movf	_rpm+2,w	;volatile
  7967  0ED0  00A6               	movwf	___flmul@a+2
  7968  0ED1  0854               	movf	_rpm+1,w	;volatile
  7969  0ED2  00A5               	movwf	___flmul@a+1
  7970  0ED3  0853               	movf	_rpm,w	;volatile
  7971  0ED4  00A4               	movwf	___flmul@a
  7972  0ED5  3180  2038  318E   	fcall	___flmul
  7973  0ED8  0020               	movlb	0	; select bank0
  7974  0ED9  0823               	movf	?___flmul+3,w
  7975  0EDA  00BF               	movwf	_speedCalc$1213+3
  7976  0EDB  0822               	movf	?___flmul+2,w
  7977  0EDC  00BE               	movwf	_speedCalc$1213+2
  7978  0EDD  0821               	movf	?___flmul+1,w
  7979  0EDE  00BD               	movwf	_speedCalc$1213+1
  7980  0EDF  0820               	movf	?___flmul,w
  7981  0EE0  00BC               	movwf	_speedCalc$1213
  7982                           
  7983                           ;main.c: 81:     speed = 2 * rpm * (0.06) ;
  7984  0EE1  303D               	movlw	61
  7985  0EE2  00A3               	movwf	___flmul@b+3
  7986  0EE3  3075               	movlw	117
  7987  0EE4  00A2               	movwf	___flmul@b+2
  7988  0EE5  30C2               	movlw	194
  7989  0EE6  00A1               	movwf	___flmul@b+1
  7990  0EE7  308F               	movlw	143
  7991  0EE8  00A0               	movwf	___flmul@b
  7992  0EE9  083F               	movf	_speedCalc$1213+3,w
  7993  0EEA  00A7               	movwf	___flmul@a+3
  7994  0EEB  083E               	movf	_speedCalc$1213+2,w
  7995  0EEC  00A6               	movwf	___flmul@a+2
  7996  0EED  083D               	movf	_speedCalc$1213+1,w
  7997  0EEE  00A5               	movwf	___flmul@a+1
  7998  0EEF  083C               	movf	_speedCalc$1213,w
  7999  0EF0  00A4               	movwf	___flmul@a
  8000  0EF1  3180  2038  318E   	fcall	___flmul
  8001  0EF4  0020               	movlb	0	; select bank0
  8002  0EF5  0823               	movf	?___flmul+3,w
  8003  0EF6  00C7               	movwf	_speed+3	;volatile
  8004  0EF7  0822               	movf	?___flmul+2,w
  8005  0EF8  00C6               	movwf	_speed+2	;volatile
  8006  0EF9  0821               	movf	?___flmul+1,w
  8007  0EFA  00C5               	movwf	_speed+1	;volatile
  8008  0EFB  0820               	movf	?___flmul,w
  8009  0EFC  00C4               	movwf	_speed	;volatile
  8010                           
  8011                           ;main.c: 84:     counter = 0 ;
  8012  0EFD  3000               	movlw	0
  8013  0EFE  00CB               	movwf	_counter+3	;volatile
  8014  0EFF  3000               	movlw	0
  8015  0F00  00CA               	movwf	_counter+2	;volatile
  8016  0F01  3000               	movlw	0
  8017  0F02  00C9               	movwf	_counter+1	;volatile
  8018  0F03  3000               	movlw	0
  8019  0F04  00C8               	movwf	_counter	;volatile
  8020                           
  8021                           ;main.c: 85:     distance = distance + 2 ;
  8022  0F05  3040               	movlw	64
  8023  0F06  00F3               	movwf	___fladd@b+3
  8024  0F07  3000               	movlw	0
  8025  0F08  00F2               	movwf	___fladd@b+2
  8026  0F09  3000               	movlw	0
  8027  0F0A  00F1               	movwf	___fladd@b+1
  8028  0F0B  3000               	movlw	0
  8029  0F0C  00F0               	movwf	___fladd@b
  8030  0F0D  0843               	movf	_distance+3,w	;volatile
  8031  0F0E  00F7               	movwf	___fladd@a+3
  8032  0F0F  0842               	movf	_distance+2,w	;volatile
  8033  0F10  00F6               	movwf	___fladd@a+2
  8034  0F11  0841               	movf	_distance+1,w	;volatile
  8035  0F12  00F5               	movwf	___fladd@a+1
  8036  0F13  0840               	movf	_distance,w	;volatile
  8037  0F14  00F4               	movwf	___fladd@a
  8038  0F15  3182  2264         	fcall	___fladd
  8039  0F17  0873               	movf	?___fladd+3,w
  8040  0F18  0020               	movlb	0	; select bank0
  8041  0F19  00C3               	movwf	_distance+3	;volatile
  8042  0F1A  0872               	movf	?___fladd+2,w
  8043  0F1B  00C2               	movwf	_distance+2	;volatile
  8044  0F1C  0871               	movf	?___fladd+1,w
  8045  0F1D  00C1               	movwf	_distance+1	;volatile
  8046  0F1E  0870               	movf	?___fladd,w
  8047  0F1F  00C0               	movwf	_distance	;volatile
  8048  0F20  0008               	return
  8049  0F21                     __end_of_speedCalc:	
  8050                           
  8051                           	psect	text37
  8052  0DF1                     __ptext37:	
  8053 ;; *************** function ___xxtofl *****************
  8054 ;; Defined at:
  8055 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
  8056 ;; Parameters:    Size  Location     Type
  8057 ;;  sign            1    wreg     unsigned char 
  8058 ;;  val             4   14[BANK0 ] long 
  8059 ;; Auto vars:     Size  Location     Type
  8060 ;;  sign            1   22[BANK0 ] unsigned char 
  8061 ;;  arg             4   24[BANK0 ] unsigned long 
  8062 ;;  exp             1   23[BANK0 ] unsigned char 
  8063 ;; Return value:  Size  Location     Type
  8064 ;;                  4   14[BANK0 ] unsigned char 
  8065 ;; Registers used:
  8066 ;;		wreg, status,2, status,0
  8067 ;; Tracked objects:
  8068 ;;		On entry : 0/0
  8069 ;;		On exit  : 0/0
  8070 ;;		Unchanged: 0/0
  8071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8072 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8073 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8074 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8075 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8076 ;;Total ram usage:       14 bytes
  8077 ;; Hardware stack levels used:    1
  8078 ;; This function calls:
  8079 ;;		Nothing
  8080 ;; This function is called by:
  8081 ;;		_speedCalc
  8082 ;; This function uses a non-reentrant model
  8083 ;;
  8084                           
  8085                           
  8086                           ;psect for function ___xxtofl
  8087  0DF1                     ___xxtofl:	
  8088                           
  8089                           ;incstack = 0
  8090                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  8091                           ;___xxtofl@sign stored from wreg
  8092  0DF1  0020               	movlb	0	; select bank0
  8093  0DF2  00B6               	movwf	___xxtofl@sign
  8094  0DF3  0836               	movf	___xxtofl@sign,w
  8095  0DF4  1D03               	btfss	3,2
  8096  0DF5  1FB1               	btfss	___xxtofl@val+3,7
  8097  0DF6  2E07               	goto	i1l2638
  8098  0DF7  092E               	comf	___xxtofl@val,w
  8099  0DF8  00B8               	movwf	___xxtofl@arg
  8100  0DF9  092F               	comf	___xxtofl@val+1,w
  8101  0DFA  00B9               	movwf	___xxtofl@arg+1
  8102  0DFB  0930               	comf	___xxtofl@val+2,w
  8103  0DFC  00BA               	movwf	___xxtofl@arg+2
  8104  0DFD  0931               	comf	___xxtofl@val+3,w
  8105  0DFE  00BB               	movwf	___xxtofl@arg+3
  8106  0DFF  0AB8               	incf	___xxtofl@arg,f
  8107  0E00  1903               	skipnz
  8108  0E01  0AB9               	incf	___xxtofl@arg+1,f
  8109  0E02  1903               	skipnz
  8110  0E03  0ABA               	incf	___xxtofl@arg+2,f
  8111  0E04  1903               	skipnz
  8112  0E05  0ABB               	incf	___xxtofl@arg+3,f
  8113  0E06  2E0F               	goto	i1l926
  8114  0E07                     i1l2638:	
  8115  0E07  0831               	movf	___xxtofl@val+3,w
  8116  0E08  00BB               	movwf	___xxtofl@arg+3
  8117  0E09  0830               	movf	___xxtofl@val+2,w
  8118  0E0A  00BA               	movwf	___xxtofl@arg+2
  8119  0E0B  082F               	movf	___xxtofl@val+1,w
  8120  0E0C  00B9               	movwf	___xxtofl@arg+1
  8121  0E0D  082E               	movf	___xxtofl@val,w
  8122  0E0E  00B8               	movwf	___xxtofl@arg
  8123  0E0F                     i1l926:	
  8124  0E0F  0831               	movf	___xxtofl@val+3,w
  8125  0E10  0430               	iorwf	___xxtofl@val+2,w
  8126  0E11  042F               	iorwf	___xxtofl@val+1,w
  8127  0E12  042E               	iorwf	___xxtofl@val,w
  8128  0E13  1D03               	skipz
  8129  0E14  2E1E               	goto	i1l2644
  8130  0E15  3000               	movlw	0
  8131  0E16  00B1               	movwf	?___xxtofl+3
  8132  0E17  3000               	movlw	0
  8133  0E18  00B0               	movwf	?___xxtofl+2
  8134  0E19  3000               	movlw	0
  8135  0E1A  00AF               	movwf	?___xxtofl+1
  8136  0E1B  3000               	movlw	0
  8137  0E1C  00AE               	movwf	?___xxtofl
  8138  0E1D  0008               	return
  8139  0E1E                     i1l2644:	
  8140  0E1E  3096               	movlw	150
  8141  0E1F  00B2               	movwf	??___xxtofl
  8142  0E20  0832               	movf	??___xxtofl,w
  8143  0E21  00B7               	movwf	___xxtofl@exp
  8144  0E22                     i1l2648:	
  8145  0E22  30FE               	movlw	254
  8146  0E23  053B               	andwf	___xxtofl@arg+3,w
  8147  0E24  1903               	btfsc	3,2
  8148  0E25  2E45               	goto	i1l932
  8149  0E26  3001               	movlw	1
  8150  0E27  00B2               	movwf	??___xxtofl
  8151  0E28  0832               	movf	??___xxtofl,w
  8152  0E29  07B7               	addwf	___xxtofl@exp,f
  8153  0E2A  3001               	movlw	1
  8154  0E2B                     u316_25:	
  8155  0E2B  36BB               	lsrf	___xxtofl@arg+3,f
  8156  0E2C  0CBA               	rrf	___xxtofl@arg+2,f
  8157  0E2D  0CB9               	rrf	___xxtofl@arg+1,f
  8158  0E2E  0CB8               	rrf	___xxtofl@arg,f
  8159  0E2F  0B89               	decfsz	9,f
  8160  0E30  2E2B               	goto	u316_25
  8161  0E31  2E22               	goto	i1l2648
  8162  0E32                     i1l2650:	
  8163  0E32  3001               	movlw	1
  8164  0E33  00B2               	movwf	??___xxtofl
  8165  0E34  0832               	movf	??___xxtofl,w
  8166  0E35  07B7               	addwf	___xxtofl@exp,f
  8167  0E36  3001               	movlw	1
  8168  0E37  07B8               	addwf	___xxtofl@arg,f
  8169  0E38  3000               	movlw	0
  8170  0E39  3DB9               	addwfc	___xxtofl@arg+1,f
  8171  0E3A  3000               	movlw	0
  8172  0E3B  3DBA               	addwfc	___xxtofl@arg+2,f
  8173  0E3C  3000               	movlw	0
  8174  0E3D  3DBB               	addwfc	___xxtofl@arg+3,f
  8175  0E3E  3001               	movlw	1
  8176  0E3F                     u318_25:	
  8177  0E3F  36BB               	lsrf	___xxtofl@arg+3,f
  8178  0E40  0CBA               	rrf	___xxtofl@arg+2,f
  8179  0E41  0CB9               	rrf	___xxtofl@arg+1,f
  8180  0E42  0CB8               	rrf	___xxtofl@arg,f
  8181  0E43  0B89               	decfsz	9,f
  8182  0E44  2E3F               	goto	u318_25
  8183  0E45                     i1l932:	
  8184  0E45  30FF               	movlw	255
  8185  0E46  053B               	andwf	___xxtofl@arg+3,w
  8186  0E47  1903               	btfsc	3,2
  8187  0E48  2E57               	goto	i1l2658
  8188  0E49  2E32               	goto	i1l2650
  8189  0E4A                     i1l2660:	
  8190  0E4A  3002               	movlw	2
  8191  0E4B  0237               	subwf	___xxtofl@exp,w
  8192  0E4C  1C03               	btfss	3,0
  8193  0E4D  2E59               	goto	i1l939
  8194  0E4E  3001               	movlw	1
  8195  0E4F  02B7               	subwf	___xxtofl@exp,f
  8196  0E50  3001               	movlw	1
  8197  0E51                     u320_25:	
  8198  0E51  35B8               	lslf	___xxtofl@arg,f
  8199  0E52  0DB9               	rlf	___xxtofl@arg+1,f
  8200  0E53  0DBA               	rlf	___xxtofl@arg+2,f
  8201  0E54  0DBB               	rlf	___xxtofl@arg+3,f
  8202  0E55  0B89               	decfsz	9,f
  8203  0E56  2E51               	goto	u320_25
  8204  0E57                     i1l2658:	
  8205  0E57  1FBA               	btfss	___xxtofl@arg+2,7
  8206  0E58  2E4A               	goto	i1l2660
  8207  0E59                     i1l939:	
  8208  0E59  1837               	btfsc	___xxtofl@exp,0
  8209  0E5A  2E63               	goto	i1l940
  8210  0E5B  30FF               	movlw	255
  8211  0E5C  05B8               	andwf	___xxtofl@arg,f
  8212  0E5D  30FF               	movlw	255
  8213  0E5E  05B9               	andwf	___xxtofl@arg+1,f
  8214  0E5F  307F               	movlw	127
  8215  0E60  05BA               	andwf	___xxtofl@arg+2,f
  8216  0E61  30FF               	movlw	255
  8217  0E62  05BB               	andwf	___xxtofl@arg+3,f
  8218  0E63                     i1l940:	
  8219  0E63  1003               	clrc
  8220  0E64  0CB7               	rrf	___xxtofl@exp,f
  8221  0E65  0837               	movf	___xxtofl@exp,w
  8222  0E66  00B2               	movwf	??___xxtofl
  8223  0E67  01B3               	clrf	??___xxtofl+1
  8224  0E68  01B4               	clrf	??___xxtofl+2
  8225  0E69  01B5               	clrf	??___xxtofl+3
  8226  0E6A  3018               	movlw	24
  8227  0E6B                     u324_25:	
  8228  0E6B  35B2               	lslf	??___xxtofl,f
  8229  0E6C  0DB3               	rlf	??___xxtofl+1,f
  8230  0E6D  0DB4               	rlf	??___xxtofl+2,f
  8231  0E6E  0DB5               	rlf	??___xxtofl+3,f
  8232  0E6F  0B89               	decfsz	9,f
  8233  0E70  2E6B               	goto	u324_25
  8234  0E71  0832               	movf	??___xxtofl,w
  8235  0E72  04B8               	iorwf	___xxtofl@arg,f
  8236  0E73  0833               	movf	??___xxtofl+1,w
  8237  0E74  04B9               	iorwf	___xxtofl@arg+1,f
  8238  0E75  0834               	movf	??___xxtofl+2,w
  8239  0E76  04BA               	iorwf	___xxtofl@arg+2,f
  8240  0E77  0835               	movf	??___xxtofl+3,w
  8241  0E78  04BB               	iorwf	___xxtofl@arg+3,f
  8242  0E79  0836               	movf	___xxtofl@sign,w
  8243  0E7A  1D03               	btfss	3,2
  8244  0E7B  1FB1               	btfss	___xxtofl@val+3,7
  8245  0E7C  2E7E               	goto	i1l2672
  8246  0E7D  17BB               	bsf	___xxtofl@arg+3,7
  8247  0E7E                     i1l2672:	
  8248  0E7E  083B               	movf	___xxtofl@arg+3,w
  8249  0E7F  00B1               	movwf	?___xxtofl+3
  8250  0E80  083A               	movf	___xxtofl@arg+2,w
  8251  0E81  00B0               	movwf	?___xxtofl+2
  8252  0E82  0839               	movf	___xxtofl@arg+1,w
  8253  0E83  00AF               	movwf	?___xxtofl+1
  8254  0E84  0838               	movf	___xxtofl@arg,w
  8255  0E85  00AE               	movwf	?___xxtofl
  8256  0E86  0008               	return
  8257  0E87                     __end_of___xxtofl:	
  8258                           
  8259                           	psect	text38
  8260  0BDB                     __ptext38:	
  8261 ;; *************** function ___lmul *****************
  8262 ;; Defined at:
  8263 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul32.c"
  8264 ;; Parameters:    Size  Location     Type
  8265 ;;  multiplier      4    6[BANK0 ] unsigned long 
  8266 ;;  multiplicand    4   10[BANK0 ] unsigned long 
  8267 ;; Auto vars:     Size  Location     Type
  8268 ;;  product         4    9[COMMON] unsigned long 
  8269 ;; Return value:  Size  Location     Type
  8270 ;;                  4    6[BANK0 ] unsigned long 
  8271 ;; Registers used:
  8272 ;;		wreg, status,2, status,0
  8273 ;; Tracked objects:
  8274 ;;		On entry : 0/0
  8275 ;;		On exit  : 0/0
  8276 ;;		Unchanged: 0/0
  8277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8278 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8279 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8281 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8282 ;;Total ram usage:       12 bytes
  8283 ;; Hardware stack levels used:    1
  8284 ;; This function calls:
  8285 ;;		Nothing
  8286 ;; This function is called by:
  8287 ;;		_speedCalc
  8288 ;; This function uses a non-reentrant model
  8289 ;;
  8290                           
  8291                           
  8292                           ;psect for function ___lmul
  8293  0BDB                     ___lmul:	
  8294                           
  8295                           ;incstack = 0
  8296                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  8297  0BDB  3000               	movlw	0
  8298  0BDC  00FC               	movwf	___lmul@product+3
  8299  0BDD  3000               	movlw	0
  8300  0BDE  00FB               	movwf	___lmul@product+2
  8301  0BDF  3000               	movlw	0
  8302  0BE0  00FA               	movwf	___lmul@product+1
  8303  0BE1  3000               	movlw	0
  8304  0BE2  00F9               	movwf	___lmul@product
  8305  0BE3                     i1l2246:	
  8306  0BE3  0020               	movlb	0	; select bank0
  8307  0BE4  1C26               	btfss	___lmul@multiplier,0
  8308  0BE5  2BEE               	goto	i1l2250
  8309  0BE6  082A               	movf	___lmul@multiplicand,w
  8310  0BE7  07F9               	addwf	___lmul@product,f
  8311  0BE8  082B               	movf	___lmul@multiplicand+1,w
  8312  0BE9  3DFA               	addwfc	___lmul@product+1,f
  8313  0BEA  082C               	movf	___lmul@multiplicand+2,w
  8314  0BEB  3DFB               	addwfc	___lmul@product+2,f
  8315  0BEC  082D               	movf	___lmul@multiplicand+3,w
  8316  0BED  3DFC               	addwfc	___lmul@product+3,f
  8317  0BEE                     i1l2250:	
  8318  0BEE  3001               	movlw	1
  8319  0BEF                     u231_25:	
  8320  0BEF  35AA               	lslf	___lmul@multiplicand,f
  8321  0BF0  0DAB               	rlf	___lmul@multiplicand+1,f
  8322  0BF1  0DAC               	rlf	___lmul@multiplicand+2,f
  8323  0BF2  0DAD               	rlf	___lmul@multiplicand+3,f
  8324  0BF3  0B89               	decfsz	9,f
  8325  0BF4  2BEF               	goto	u231_25
  8326  0BF5  3001               	movlw	1
  8327  0BF6                     u232_25:	
  8328  0BF6  36A9               	lsrf	___lmul@multiplier+3,f
  8329  0BF7  0CA8               	rrf	___lmul@multiplier+2,f
  8330  0BF8  0CA7               	rrf	___lmul@multiplier+1,f
  8331  0BF9  0CA6               	rrf	___lmul@multiplier,f
  8332  0BFA  0B89               	decfsz	9,f
  8333  0BFB  2BF6               	goto	u232_25
  8334  0BFC  0829               	movf	___lmul@multiplier+3,w
  8335  0BFD  0428               	iorwf	___lmul@multiplier+2,w
  8336  0BFE  0427               	iorwf	___lmul@multiplier+1,w
  8337  0BFF  0426               	iorwf	___lmul@multiplier,w
  8338  0C00  1D03               	skipz
  8339  0C01  2BE3               	goto	i1l2246
  8340  0C02  087C               	movf	___lmul@product+3,w
  8341  0C03  00A9               	movwf	?___lmul+3
  8342  0C04  087B               	movf	___lmul@product+2,w
  8343  0C05  00A8               	movwf	?___lmul+2
  8344  0C06  087A               	movf	___lmul@product+1,w
  8345  0C07  00A7               	movwf	?___lmul+1
  8346  0C08  0879               	movf	___lmul@product,w
  8347  0C09  00A6               	movwf	?___lmul
  8348  0C0A  0008               	return
  8349  0C0B                     __end_of___lmul:	
  8350                           
  8351                           	psect	text39
  8352  0038                     __ptext39:	
  8353 ;; *************** function ___flmul *****************
  8354 ;; Defined at:
  8355 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
  8356 ;; Parameters:    Size  Location     Type
  8357 ;;  b               4    0[BANK0 ] unsigned long 
  8358 ;;  a               4    4[BANK0 ] unsigned long 
  8359 ;; Auto vars:     Size  Location     Type
  8360 ;;  prod            4   15[BANK0 ] struct .
  8361 ;;  grs             4    9[BANK0 ] unsigned long 
  8362 ;;  temp            2   19[BANK0 ] struct .
  8363 ;;  bexp            1   14[BANK0 ] unsigned char 
  8364 ;;  aexp            1   13[BANK0 ] unsigned char 
  8365 ;;  sign            1    8[BANK0 ] unsigned char 
  8366 ;; Return value:  Size  Location     Type
  8367 ;;                  4    0[BANK0 ] unsigned char 
  8368 ;; Registers used:
  8369 ;;		wreg, status,2, status,0, pclath, cstack
  8370 ;; Tracked objects:
  8371 ;;		On entry : 0/0
  8372 ;;		On exit  : 0/0
  8373 ;;		Unchanged: 0/0
  8374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8375 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8376 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8377 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8378 ;;      Totals:         5      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8379 ;;Total ram usage:       26 bytes
  8380 ;; Hardware stack levels used:    1
  8381 ;; Hardware stack levels required when called:    1
  8382 ;; This function calls:
  8383 ;;		__Umul8_16
  8384 ;; This function is called by:
  8385 ;;		_speedCalc
  8386 ;; This function uses a non-reentrant model
  8387 ;;
  8388                           
  8389                           
  8390                           ;psect for function ___flmul
  8391  0038                     ___flmul:	
  8392                           
  8393                           ;incstack = 0
  8394                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  8395  0038  0020               	movlb	0	; select bank0
  8396  0039  0823               	movf	___flmul@b+3,w
  8397  003A  3980               	andlw	128
  8398  003B  00F9               	movwf	??___flmul
  8399  003C  0879               	movf	??___flmul,w
  8400  003D  00A8               	movwf	___flmul@sign
  8401  003E  3523               	lslf	___flmul@b+3,w
  8402  003F  00F9               	movwf	??___flmul
  8403  0040  0879               	movf	??___flmul,w
  8404  0041  00AE               	movwf	___flmul@bexp
  8405  0042  1BA2               	btfsc	___flmul@b+2,7
  8406  0043  142E               	bsf	___flmul@bexp,0
  8407  0044  082E               	movf	___flmul@bexp,w
  8408  0045  1903               	btfsc	3,2
  8409  0046  2854               	goto	i1l2508
  8410  0047  0A2E               	incf	___flmul@bexp,w
  8411  0048  1D03               	btfss	3,2
  8412  0049  2852               	goto	i1l2506
  8413  004A  3000               	movlw	0
  8414  004B  00A3               	movwf	___flmul@b+3
  8415  004C  3000               	movlw	0
  8416  004D  00A2               	movwf	___flmul@b+2
  8417  004E  3000               	movlw	0
  8418  004F  00A1               	movwf	___flmul@b+1
  8419  0050  3000               	movlw	0
  8420  0051  00A0               	movwf	___flmul@b
  8421  0052                     i1l2506:	
  8422  0052  17A2               	bsf	___flmul@b+2,7
  8423  0053  285C               	goto	i1l2510
  8424  0054                     i1l2508:	
  8425  0054  3000               	movlw	0
  8426  0055  00A3               	movwf	___flmul@b+3
  8427  0056  3000               	movlw	0
  8428  0057  00A2               	movwf	___flmul@b+2
  8429  0058  3000               	movlw	0
  8430  0059  00A1               	movwf	___flmul@b+1
  8431  005A  3000               	movlw	0
  8432  005B  00A0               	movwf	___flmul@b
  8433  005C                     i1l2510:	
  8434  005C  0827               	movf	___flmul@a+3,w
  8435  005D  3980               	andlw	128
  8436  005E  00F9               	movwf	??___flmul
  8437  005F  0879               	movf	??___flmul,w
  8438  0060  06A8               	xorwf	___flmul@sign,f
  8439  0061  3527               	lslf	___flmul@a+3,w
  8440  0062  00F9               	movwf	??___flmul
  8441  0063  0879               	movf	??___flmul,w
  8442  0064  00AD               	movwf	___flmul@aexp
  8443  0065  1BA6               	btfsc	___flmul@a+2,7
  8444  0066  142D               	bsf	___flmul@aexp,0
  8445  0067  082D               	movf	___flmul@aexp,w
  8446  0068  1903               	btfsc	3,2
  8447  0069  2877               	goto	i1l2526
  8448  006A  0A2D               	incf	___flmul@aexp,w
  8449  006B  1D03               	btfss	3,2
  8450  006C  2875               	goto	i1l2524
  8451  006D  3000               	movlw	0
  8452  006E  00A7               	movwf	___flmul@a+3
  8453  006F  3000               	movlw	0
  8454  0070  00A6               	movwf	___flmul@a+2
  8455  0071  3000               	movlw	0
  8456  0072  00A5               	movwf	___flmul@a+1
  8457  0073  3000               	movlw	0
  8458  0074  00A4               	movwf	___flmul@a
  8459  0075                     i1l2524:	
  8460  0075  17A6               	bsf	___flmul@a+2,7
  8461  0076  287F               	goto	i1l2528
  8462  0077                     i1l2526:	
  8463  0077  3000               	movlw	0
  8464  0078  00A7               	movwf	___flmul@a+3
  8465  0079  3000               	movlw	0
  8466  007A  00A6               	movwf	___flmul@a+2
  8467  007B  3000               	movlw	0
  8468  007C  00A5               	movwf	___flmul@a+1
  8469  007D  3000               	movlw	0
  8470  007E  00A4               	movwf	___flmul@a
  8471  007F                     i1l2528:	
  8472  007F  082D               	movf	___flmul@aexp,w
  8473  0080  1D03               	btfss	3,2
  8474  0081  082E               	movf	___flmul@bexp,w
  8475  0082  1D03               	btfss	3,2
  8476  0083  288D               	goto	i1l2536
  8477  0084  3000               	movlw	0
  8478  0085  00A3               	movwf	?___flmul+3
  8479  0086  3000               	movlw	0
  8480  0087  00A2               	movwf	?___flmul+2
  8481  0088  3000               	movlw	0
  8482  0089  00A1               	movwf	?___flmul+1
  8483  008A  3000               	movlw	0
  8484  008B  00A0               	movwf	?___flmul
  8485  008C  0008               	return
  8486  008D                     i1l2536:	
  8487  008D  0820               	movf	___flmul@b,w
  8488  008E  00F9               	movwf	??___flmul
  8489  008F  0879               	movf	??___flmul,w
  8490  0090  00F0               	movwf	__Umul8_16@multiplicand
  8491  0091  0826               	movf	___flmul@a+2,w
  8492  0092  318B  234E  3180   	fcall	__Umul8_16
  8493  0095  0871               	movf	?__Umul8_16+1,w
  8494  0096  0020               	movlb	0	; select bank0
  8495  0097  00B4               	movwf	___flmul@temp+1
  8496  0098  0870               	movf	?__Umul8_16,w
  8497  0099  00B3               	movwf	___flmul@temp
  8498  009A  0833               	movf	___flmul@temp,w
  8499  009B  00F9               	movwf	??___flmul
  8500  009C  01FA               	clrf	??___flmul+1
  8501  009D  01FB               	clrf	??___flmul+2
  8502  009E  01FC               	clrf	??___flmul+3
  8503  009F  087C               	movf	??___flmul+3,w
  8504  00A0  00AC               	movwf	___flmul@grs+3
  8505  00A1  087B               	movf	??___flmul+2,w
  8506  00A2  00AB               	movwf	___flmul@grs+2
  8507  00A3  087A               	movf	??___flmul+1,w
  8508  00A4  00AA               	movwf	___flmul@grs+1
  8509  00A5  0879               	movf	??___flmul,w
  8510  00A6  00A9               	movwf	___flmul@grs
  8511  00A7  0834               	movf	___flmul@temp+1,w
  8512  00A8  00F9               	movwf	??___flmul
  8513  00A9  01FA               	clrf	??___flmul+1
  8514  00AA  01FB               	clrf	??___flmul+2
  8515  00AB  01FC               	clrf	??___flmul+3
  8516  00AC  087C               	movf	??___flmul+3,w
  8517  00AD  00B2               	movwf	___flmul@prod+3
  8518  00AE  087B               	movf	??___flmul+2,w
  8519  00AF  00B1               	movwf	___flmul@prod+2
  8520  00B0  087A               	movf	??___flmul+1,w
  8521  00B1  00B0               	movwf	___flmul@prod+1
  8522  00B2  0879               	movf	??___flmul,w
  8523  00B3  00AF               	movwf	___flmul@prod
  8524  00B4  0821               	movf	___flmul@b+1,w
  8525  00B5  00F9               	movwf	??___flmul
  8526  00B6  0879               	movf	??___flmul,w
  8527  00B7  00F0               	movwf	__Umul8_16@multiplicand
  8528  00B8  0825               	movf	___flmul@a+1,w
  8529  00B9  318B  234E  3180   	fcall	__Umul8_16
  8530  00BC  0871               	movf	?__Umul8_16+1,w
  8531  00BD  0020               	movlb	0	; select bank0
  8532  00BE  00B4               	movwf	___flmul@temp+1
  8533  00BF  0870               	movf	?__Umul8_16,w
  8534  00C0  00B3               	movwf	___flmul@temp
  8535  00C1  0833               	movf	___flmul@temp,w
  8536  00C2  00F9               	movwf	??___flmul
  8537  00C3  01FA               	clrf	??___flmul+1
  8538  00C4  01FB               	clrf	??___flmul+2
  8539  00C5  01FC               	clrf	??___flmul+3
  8540  00C6  0879               	movf	??___flmul,w
  8541  00C7  07A9               	addwf	___flmul@grs,f
  8542  00C8  087A               	movf	??___flmul+1,w
  8543  00C9  3DAA               	addwfc	___flmul@grs+1,f
  8544  00CA  087B               	movf	??___flmul+2,w
  8545  00CB  3DAB               	addwfc	___flmul@grs+2,f
  8546  00CC  087C               	movf	??___flmul+3,w
  8547  00CD  3DAC               	addwfc	___flmul@grs+3,f
  8548  00CE  0834               	movf	___flmul@temp+1,w
  8549  00CF  00F9               	movwf	??___flmul
  8550  00D0  01FA               	clrf	??___flmul+1
  8551  00D1  01FB               	clrf	??___flmul+2
  8552  00D2  01FC               	clrf	??___flmul+3
  8553  00D3  0879               	movf	??___flmul,w
  8554  00D4  07AF               	addwf	___flmul@prod,f
  8555  00D5  087A               	movf	??___flmul+1,w
  8556  00D6  3DB0               	addwfc	___flmul@prod+1,f
  8557  00D7  087B               	movf	??___flmul+2,w
  8558  00D8  3DB1               	addwfc	___flmul@prod+2,f
  8559  00D9  087C               	movf	??___flmul+3,w
  8560  00DA  3DB2               	addwfc	___flmul@prod+3,f
  8561  00DB  0822               	movf	___flmul@b+2,w
  8562  00DC  00F9               	movwf	??___flmul
  8563  00DD  0879               	movf	??___flmul,w
  8564  00DE  00F0               	movwf	__Umul8_16@multiplicand
  8565  00DF  0824               	movf	___flmul@a,w
  8566  00E0  318B  234E  3180   	fcall	__Umul8_16
  8567  00E3  0871               	movf	?__Umul8_16+1,w
  8568  00E4  0020               	movlb	0	; select bank0
  8569  00E5  00B4               	movwf	___flmul@temp+1
  8570  00E6  0870               	movf	?__Umul8_16,w
  8571  00E7  00B3               	movwf	___flmul@temp
  8572  00E8  0833               	movf	___flmul@temp,w
  8573  00E9  00F9               	movwf	??___flmul
  8574  00EA  01FA               	clrf	??___flmul+1
  8575  00EB  01FB               	clrf	??___flmul+2
  8576  00EC  01FC               	clrf	??___flmul+3
  8577  00ED  0879               	movf	??___flmul,w
  8578  00EE  07A9               	addwf	___flmul@grs,f
  8579  00EF  087A               	movf	??___flmul+1,w
  8580  00F0  3DAA               	addwfc	___flmul@grs+1,f
  8581  00F1  087B               	movf	??___flmul+2,w
  8582  00F2  3DAB               	addwfc	___flmul@grs+2,f
  8583  00F3  087C               	movf	??___flmul+3,w
  8584  00F4  3DAC               	addwfc	___flmul@grs+3,f
  8585  00F5  0834               	movf	___flmul@temp+1,w
  8586  00F6  00F9               	movwf	??___flmul
  8587  00F7  01FA               	clrf	??___flmul+1
  8588  00F8  01FB               	clrf	??___flmul+2
  8589  00F9  01FC               	clrf	??___flmul+3
  8590  00FA  0879               	movf	??___flmul,w
  8591  00FB  07AF               	addwf	___flmul@prod,f
  8592  00FC  087A               	movf	??___flmul+1,w
  8593  00FD  3DB0               	addwfc	___flmul@prod+1,f
  8594  00FE  087B               	movf	??___flmul+2,w
  8595  00FF  3DB1               	addwfc	___flmul@prod+2,f
  8596  0100  087C               	movf	??___flmul+3,w
  8597  0101  3DB2               	addwfc	___flmul@prod+3,f
  8598  0102  3008               	movlw	8
  8599  0103                     u295_25:	
  8600  0103  35A9               	lslf	___flmul@grs,f
  8601  0104  0DAA               	rlf	___flmul@grs+1,f
  8602  0105  0DAB               	rlf	___flmul@grs+2,f
  8603  0106  0DAC               	rlf	___flmul@grs+3,f
  8604  0107  0B89               	decfsz	9,f
  8605  0108  2903               	goto	u295_25
  8606  0109  0821               	movf	___flmul@b+1,w
  8607  010A  00F9               	movwf	??___flmul
  8608  010B  0879               	movf	??___flmul,w
  8609  010C  00F0               	movwf	__Umul8_16@multiplicand
  8610  010D  0824               	movf	___flmul@a,w
  8611  010E  318B  234E  3180   	fcall	__Umul8_16
  8612  0111  0871               	movf	?__Umul8_16+1,w
  8613  0112  0020               	movlb	0	; select bank0
  8614  0113  00B4               	movwf	___flmul@temp+1
  8615  0114  0870               	movf	?__Umul8_16,w
  8616  0115  00B3               	movwf	___flmul@temp
  8617  0116  0833               	movf	___flmul@temp,w
  8618  0117  07A9               	addwf	___flmul@grs,f
  8619  0118  0834               	movf	___flmul@temp+1,w
  8620  0119  3DAA               	addwfc	___flmul@grs+1,f
  8621  011A  3000               	movlw	0
  8622  011B  3DAB               	addwfc	___flmul@grs+2,f
  8623  011C  3DAC               	addwfc	___flmul@grs+3,f
  8624  011D  0820               	movf	___flmul@b,w
  8625  011E  00F9               	movwf	??___flmul
  8626  011F  0879               	movf	??___flmul,w
  8627  0120  00F0               	movwf	__Umul8_16@multiplicand
  8628  0121  0825               	movf	___flmul@a+1,w
  8629  0122  318B  234E  3180   	fcall	__Umul8_16
  8630  0125  0871               	movf	?__Umul8_16+1,w
  8631  0126  0020               	movlb	0	; select bank0
  8632  0127  00B4               	movwf	___flmul@temp+1
  8633  0128  0870               	movf	?__Umul8_16,w
  8634  0129  00B3               	movwf	___flmul@temp
  8635  012A  0833               	movf	___flmul@temp,w
  8636  012B  07A9               	addwf	___flmul@grs,f
  8637  012C  0834               	movf	___flmul@temp+1,w
  8638  012D  3DAA               	addwfc	___flmul@grs+1,f
  8639  012E  3000               	movlw	0
  8640  012F  3DAB               	addwfc	___flmul@grs+2,f
  8641  0130  3DAC               	addwfc	___flmul@grs+3,f
  8642  0131  3008               	movlw	8
  8643  0132                     u296_25:	
  8644  0132  35A9               	lslf	___flmul@grs,f
  8645  0133  0DAA               	rlf	___flmul@grs+1,f
  8646  0134  0DAB               	rlf	___flmul@grs+2,f
  8647  0135  0DAC               	rlf	___flmul@grs+3,f
  8648  0136  0B89               	decfsz	9,f
  8649  0137  2932               	goto	u296_25
  8650  0138  0820               	movf	___flmul@b,w
  8651  0139  00F9               	movwf	??___flmul
  8652  013A  0879               	movf	??___flmul,w
  8653  013B  00F0               	movwf	__Umul8_16@multiplicand
  8654  013C  0824               	movf	___flmul@a,w
  8655  013D  318B  234E  3180   	fcall	__Umul8_16
  8656  0140  0871               	movf	?__Umul8_16+1,w
  8657  0141  0020               	movlb	0	; select bank0
  8658  0142  00B4               	movwf	___flmul@temp+1
  8659  0143  0870               	movf	?__Umul8_16,w
  8660  0144  00B3               	movwf	___flmul@temp
  8661  0145  0833               	movf	___flmul@temp,w
  8662  0146  07A9               	addwf	___flmul@grs,f
  8663  0147  0834               	movf	___flmul@temp+1,w
  8664  0148  3DAA               	addwfc	___flmul@grs+1,f
  8665  0149  3000               	movlw	0
  8666  014A  3DAB               	addwfc	___flmul@grs+2,f
  8667  014B  3DAC               	addwfc	___flmul@grs+3,f
  8668  014C  0821               	movf	___flmul@b+1,w
  8669  014D  00F9               	movwf	??___flmul
  8670  014E  0879               	movf	??___flmul,w
  8671  014F  00F0               	movwf	__Umul8_16@multiplicand
  8672  0150  0826               	movf	___flmul@a+2,w
  8673  0151  318B  234E  3180   	fcall	__Umul8_16
  8674  0154  0871               	movf	?__Umul8_16+1,w
  8675  0155  0020               	movlb	0	; select bank0
  8676  0156  00B4               	movwf	___flmul@temp+1
  8677  0157  0870               	movf	?__Umul8_16,w
  8678  0158  00B3               	movwf	___flmul@temp
  8679  0159  0833               	movf	___flmul@temp,w
  8680  015A  07AF               	addwf	___flmul@prod,f
  8681  015B  0834               	movf	___flmul@temp+1,w
  8682  015C  3DB0               	addwfc	___flmul@prod+1,f
  8683  015D  3000               	movlw	0
  8684  015E  3DB1               	addwfc	___flmul@prod+2,f
  8685  015F  3DB2               	addwfc	___flmul@prod+3,f
  8686  0160  0822               	movf	___flmul@b+2,w
  8687  0161  00F9               	movwf	??___flmul
  8688  0162  0879               	movf	??___flmul,w
  8689  0163  00F0               	movwf	__Umul8_16@multiplicand
  8690  0164  0825               	movf	___flmul@a+1,w
  8691  0165  318B  234E  3180   	fcall	__Umul8_16
  8692  0168  0871               	movf	?__Umul8_16+1,w
  8693  0169  0020               	movlb	0	; select bank0
  8694  016A  00B4               	movwf	___flmul@temp+1
  8695  016B  0870               	movf	?__Umul8_16,w
  8696  016C  00B3               	movwf	___flmul@temp
  8697  016D  0833               	movf	___flmul@temp,w
  8698  016E  07AF               	addwf	___flmul@prod,f
  8699  016F  0834               	movf	___flmul@temp+1,w
  8700  0170  3DB0               	addwfc	___flmul@prod+1,f
  8701  0171  3000               	movlw	0
  8702  0172  3DB1               	addwfc	___flmul@prod+2,f
  8703  0173  3DB2               	addwfc	___flmul@prod+3,f
  8704  0174  0822               	movf	___flmul@b+2,w
  8705  0175  00F9               	movwf	??___flmul
  8706  0176  0879               	movf	??___flmul,w
  8707  0177  00F0               	movwf	__Umul8_16@multiplicand
  8708  0178  0826               	movf	___flmul@a+2,w
  8709  0179  318B  234E  3180   	fcall	__Umul8_16
  8710  017C  0871               	movf	?__Umul8_16+1,w
  8711  017D  0020               	movlb	0	; select bank0
  8712  017E  00B4               	movwf	___flmul@temp+1
  8713  017F  0870               	movf	?__Umul8_16,w
  8714  0180  00B3               	movwf	___flmul@temp
  8715  0181  0833               	movf	___flmul@temp,w
  8716  0182  00F9               	movwf	??___flmul
  8717  0183  0834               	movf	___flmul@temp+1,w
  8718  0184  00FA               	movwf	??___flmul+1
  8719  0185  01FB               	clrf	??___flmul+2
  8720  0186  01FC               	clrf	??___flmul+3
  8721  0187  3008               	movlw	8
  8722  0188                     u297_25:	
  8723  0188  35F9               	lslf	??___flmul,f
  8724  0189  0DFA               	rlf	??___flmul+1,f
  8725  018A  0DFB               	rlf	??___flmul+2,f
  8726  018B  0DFC               	rlf	??___flmul+3,f
  8727  018C  0B89               	decfsz	9,f
  8728  018D  2988               	goto	u297_25
  8729  018E  0879               	movf	??___flmul,w
  8730  018F  07AF               	addwf	___flmul@prod,f
  8731  0190  087A               	movf	??___flmul+1,w
  8732  0191  3DB0               	addwfc	___flmul@prod+1,f
  8733  0192  087B               	movf	??___flmul+2,w
  8734  0193  3DB1               	addwfc	___flmul@prod+2,f
  8735  0194  087C               	movf	??___flmul+3,w
  8736  0195  3DB2               	addwfc	___flmul@prod+3,f
  8737  0196  0829               	movf	___flmul@grs,w
  8738  0197  00F9               	movwf	??___flmul
  8739  0198  082A               	movf	___flmul@grs+1,w
  8740  0199  00FA               	movwf	??___flmul+1
  8741  019A  082B               	movf	___flmul@grs+2,w
  8742  019B  00FB               	movwf	??___flmul+2
  8743  019C  082C               	movf	___flmul@grs+3,w
  8744  019D  00FC               	movwf	??___flmul+3
  8745  019E  3018               	movlw	24
  8746  019F                     u298_25:	
  8747  019F  36FC               	lsrf	??___flmul+3,f
  8748  01A0  0CFB               	rrf	??___flmul+2,f
  8749  01A1  0CFA               	rrf	??___flmul+1,f
  8750  01A2  0CF9               	rrf	??___flmul,f
  8751  01A3  0B89               	decfsz	9,f
  8752  01A4  299F               	goto	u298_25
  8753  01A5  0879               	movf	??___flmul,w
  8754  01A6  07AF               	addwf	___flmul@prod,f
  8755  01A7  087A               	movf	??___flmul+1,w
  8756  01A8  3DB0               	addwfc	___flmul@prod+1,f
  8757  01A9  087B               	movf	??___flmul+2,w
  8758  01AA  3DB1               	addwfc	___flmul@prod+2,f
  8759  01AB  087C               	movf	??___flmul+3,w
  8760  01AC  3DB2               	addwfc	___flmul@prod+3,f
  8761  01AD  3008               	movlw	8
  8762  01AE                     u299_25:	
  8763  01AE  35A9               	lslf	___flmul@grs,f
  8764  01AF  0DAA               	rlf	___flmul@grs+1,f
  8765  01B0  0DAB               	rlf	___flmul@grs+2,f
  8766  01B1  0DAC               	rlf	___flmul@grs+3,f
  8767  01B2  0B89               	decfsz	9,f
  8768  01B3  29AE               	goto	u299_25
  8769  01B4  082E               	movf	___flmul@bexp,w
  8770  01B5  072D               	addwf	___flmul@aexp,w
  8771  01B6  00F9               	movwf	??___flmul
  8772  01B7  01FA               	clrf	??___flmul+1
  8773  01B8  0DFA               	rlf	??___flmul+1,f
  8774  01B9  0879               	movf	??___flmul,w
  8775  01BA  3E82               	addlw	130
  8776  01BB  00B3               	movwf	___flmul@temp
  8777  01BC  30FF               	movlw	255
  8778  01BD  3D7A               	addwfc	??___flmul+1,w
  8779  01BE  00B4               	movwf	___flmul@temp+1
  8780  01BF                     i1l2588:	
  8781  01BF  1BB1               	btfsc	___flmul@prod+2,7
  8782  01C0  29D6               	goto	i1l2590
  8783  01C1  3001               	movlw	1
  8784  01C2                     u300_25:	
  8785  01C2  35AF               	lslf	___flmul@prod,f
  8786  01C3  0DB0               	rlf	___flmul@prod+1,f
  8787  01C4  0DB1               	rlf	___flmul@prod+2,f
  8788  01C5  0DB2               	rlf	___flmul@prod+3,f
  8789  01C6  0B89               	decfsz	9,f
  8790  01C7  29C2               	goto	u300_25
  8791  01C8  1BAC               	btfsc	___flmul@grs+3,7
  8792  01C9  142F               	bsf	___flmul@prod,0
  8793  01CA  3001               	movlw	1
  8794  01CB                     u302_25:	
  8795  01CB  35A9               	lslf	___flmul@grs,f
  8796  01CC  0DAA               	rlf	___flmul@grs+1,f
  8797  01CD  0DAB               	rlf	___flmul@grs+2,f
  8798  01CE  0DAC               	rlf	___flmul@grs+3,f
  8799  01CF  0B89               	decfsz	9,f
  8800  01D0  29CB               	goto	u302_25
  8801  01D1  30FF               	movlw	255
  8802  01D2  07B3               	addwf	___flmul@temp,f
  8803  01D3  30FF               	movlw	255
  8804  01D4  3DB4               	addwfc	___flmul@temp+1,f
  8805  01D5  29BF               	goto	i1l2588
  8806  01D6                     i1l2590:	
  8807  01D6  01AD               	clrf	___flmul@aexp
  8808  01D7  1FAC               	btfss	___flmul@grs+3,7
  8809  01D8  29EF               	goto	i1l2600
  8810  01D9  30FF               	movlw	255
  8811  01DA  0529               	andwf	___flmul@grs,w
  8812  01DB  00F9               	movwf	??___flmul
  8813  01DC  30FF               	movlw	255
  8814  01DD  052A               	andwf	___flmul@grs+1,w
  8815  01DE  00FA               	movwf	??___flmul+1
  8816  01DF  30FF               	movlw	255
  8817  01E0  052B               	andwf	___flmul@grs+2,w
  8818  01E1  00FB               	movwf	??___flmul+2
  8819  01E2  307F               	movlw	127
  8820  01E3  052C               	andwf	___flmul@grs+3,w
  8821  01E4  00FC               	movwf	??___flmul+3
  8822  01E5  087C               	movf	??___flmul+3,w
  8823  01E6  047B               	iorwf	??___flmul+2,w
  8824  01E7  047A               	iorwf	??___flmul+1,w
  8825  01E8  0479               	iorwf	??___flmul,w
  8826  01E9  1903               	skipnz
  8827  01EA  182F               	btfsc	___flmul@prod,0
  8828  01EB  29ED               	goto	i1l2596
  8829  01EC  29EF               	goto	i1l2600
  8830  01ED                     i1l2596:	
  8831  01ED  01AD               	clrf	___flmul@aexp
  8832  01EE  0AAD               	incf	___flmul@aexp,f
  8833  01EF                     i1l2600:	
  8834  01EF  082D               	movf	___flmul@aexp,w
  8835  01F0  1903               	btfsc	3,2
  8836  01F1  2A18               	goto	i1l2610
  8837  01F2  3001               	movlw	1
  8838  01F3  07AF               	addwf	___flmul@prod,f
  8839  01F4  3000               	movlw	0
  8840  01F5  3DB0               	addwfc	___flmul@prod+1,f
  8841  01F6  3000               	movlw	0
  8842  01F7  3DB1               	addwfc	___flmul@prod+2,f
  8843  01F8  3000               	movlw	0
  8844  01F9  3DB2               	addwfc	___flmul@prod+3,f
  8845  01FA  1C32               	btfss	___flmul@prod+3,0
  8846  01FB  2A18               	goto	i1l2610
  8847  01FC  082F               	movf	___flmul@prod,w
  8848  01FD  00F9               	movwf	??___flmul
  8849  01FE  0830               	movf	___flmul@prod+1,w
  8850  01FF  00FA               	movwf	??___flmul+1
  8851  0200  0831               	movf	___flmul@prod+2,w
  8852  0201  00FB               	movwf	??___flmul+2
  8853  0202  0832               	movf	___flmul@prod+3,w
  8854  0203  00FC               	movwf	??___flmul+3
  8855  0204  3001               	movlw	1
  8856  0205  00FD               	movwf	??___flmul+4
  8857  0206                     u309_25:	
  8858  0206  37FC               	asrf	??___flmul+3,f
  8859  0207  0CFB               	rrf	??___flmul+2,f
  8860  0208  0CFA               	rrf	??___flmul+1,f
  8861  0209  0CF9               	rrf	??___flmul,f
  8862  020A  0BFD               	decfsz	??___flmul+4,f
  8863  020B  2A06               	goto	u309_25
  8864  020C  087C               	movf	??___flmul+3,w
  8865  020D  00B2               	movwf	___flmul@prod+3
  8866  020E  087B               	movf	??___flmul+2,w
  8867  020F  00B1               	movwf	___flmul@prod+2
  8868  0210  087A               	movf	??___flmul+1,w
  8869  0211  00B0               	movwf	___flmul@prod+1
  8870  0212  0879               	movf	??___flmul,w
  8871  0213  00AF               	movwf	___flmul@prod
  8872  0214  3001               	movlw	1
  8873  0215  07B3               	addwf	___flmul@temp,f
  8874  0216  3000               	movlw	0
  8875  0217  3DB4               	addwfc	___flmul@temp+1,f
  8876  0218                     i1l2610:	
  8877  0218  0834               	movf	___flmul@temp+1,w
  8878  0219  3A80               	xorlw	128
  8879  021A  00F9               	movwf	??___flmul
  8880  021B  3080               	movlw	128
  8881  021C  0279               	subwf	??___flmul,w
  8882  021D  1D03               	skipz
  8883  021E  2A21               	goto	u310_25
  8884  021F  30FF               	movlw	255
  8885  0220  0233               	subwf	___flmul@temp,w
  8886  0221                     u310_25:	
  8887  0221  1C03               	skipc
  8888  0222  2A2D               	goto	i1l2614
  8889  0223  307F               	movlw	127
  8890  0224  0020               	movlb	0	; select bank0
  8891  0225  00B2               	movwf	___flmul@prod+3
  8892  0226  3080               	movlw	128
  8893  0227  00B1               	movwf	___flmul@prod+2
  8894  0228  3000               	movlw	0
  8895  0229  00B0               	movwf	___flmul@prod+1
  8896  022A  3000               	movlw	0
  8897  022B  00AF               	movwf	___flmul@prod
  8898  022C  2A57               	goto	i1l900
  8899  022D                     i1l2614:	
  8900  022D  0020               	movlb	0	; select bank0
  8901  022E  0834               	movf	___flmul@temp+1,w
  8902  022F  3A80               	xorlw	128
  8903  0230  00F9               	movwf	??___flmul
  8904  0231  3080               	movlw	128
  8905  0232  0279               	subwf	??___flmul,w
  8906  0233  1D03               	skipz
  8907  0234  2A37               	goto	u311_25
  8908  0235  3001               	movlw	1
  8909  0236  0233               	subwf	___flmul@temp,w
  8910  0237                     u311_25:	
  8911  0237  1803               	skipnc
  8912  0238  2A44               	goto	i1l2620
  8913  0239  3000               	movlw	0
  8914  023A  0020               	movlb	0	; select bank0
  8915  023B  00B2               	movwf	___flmul@prod+3
  8916  023C  3000               	movlw	0
  8917  023D  00B1               	movwf	___flmul@prod+2
  8918  023E  3000               	movlw	0
  8919  023F  00B0               	movwf	___flmul@prod+1
  8920  0240  3000               	movlw	0
  8921  0241  00AF               	movwf	___flmul@prod
  8922  0242  01A8               	clrf	___flmul@sign
  8923  0243  2A57               	goto	i1l900
  8924  0244                     i1l2620:	
  8925  0244  0020               	movlb	0	; select bank0
  8926  0245  0833               	movf	___flmul@temp,w
  8927  0246  00F9               	movwf	??___flmul
  8928  0247  0879               	movf	??___flmul,w
  8929  0248  00AE               	movwf	___flmul@bexp
  8930  0249  30FF               	movlw	255
  8931  024A  05AF               	andwf	___flmul@prod,f
  8932  024B  30FF               	movlw	255
  8933  024C  05B0               	andwf	___flmul@prod+1,f
  8934  024D  307F               	movlw	127
  8935  024E  05B1               	andwf	___flmul@prod+2,f
  8936  024F  3000               	movlw	0
  8937  0250  05B2               	andwf	___flmul@prod+3,f
  8938  0251  182E               	btfsc	___flmul@bexp,0
  8939  0252  17B1               	bsf	___flmul@prod+2,7
  8940  0253  362E               	lsrf	___flmul@bexp,w
  8941  0254  00F9               	movwf	??___flmul
  8942  0255  0879               	movf	??___flmul,w
  8943  0256  00B2               	movwf	___flmul@prod+3
  8944  0257                     i1l900:	
  8945  0257  0828               	movf	___flmul@sign,w
  8946  0258  00F9               	movwf	??___flmul
  8947  0259  0879               	movf	??___flmul,w
  8948  025A  04B2               	iorwf	___flmul@prod+3,f
  8949  025B  0832               	movf	___flmul@prod+3,w
  8950  025C  00A3               	movwf	?___flmul+3
  8951  025D  0831               	movf	___flmul@prod+2,w
  8952  025E  00A2               	movwf	?___flmul+2
  8953  025F  0830               	movf	___flmul@prod+1,w
  8954  0260  00A1               	movwf	?___flmul+1
  8955  0261  082F               	movf	___flmul@prod,w
  8956  0262  00A0               	movwf	?___flmul
  8957  0263  0008               	return
  8958  0264                     __end_of___flmul:	
  8959                           
  8960                           	psect	text40
  8961  0B4E                     __ptext40:	
  8962 ;; *************** function __Umul8_16 *****************
  8963 ;; Defined at:
  8964 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul8_16.c"
  8965 ;; Parameters:    Size  Location     Type
  8966 ;;  multiplier      1    wreg     unsigned char 
  8967 ;;  multiplicand    1    0[COMMON] unsigned char 
  8968 ;; Auto vars:     Size  Location     Type
  8969 ;;  multiplier      1    8[COMMON] unsigned char 
  8970 ;;  word_mpld       2    6[COMMON] unsigned int 
  8971 ;;  product         2    4[COMMON] unsigned int 
  8972 ;; Return value:  Size  Location     Type
  8973 ;;                  2    0[COMMON] unsigned int 
  8974 ;; Registers used:
  8975 ;;		wreg, status,2, status,0
  8976 ;; Tracked objects:
  8977 ;;		On entry : 0/0
  8978 ;;		On exit  : 0/0
  8979 ;;		Unchanged: 0/0
  8980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8981 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8982 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8983 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8984 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8985 ;;Total ram usage:        9 bytes
  8986 ;; Hardware stack levels used:    1
  8987 ;; This function calls:
  8988 ;;		Nothing
  8989 ;; This function is called by:
  8990 ;;		___flmul
  8991 ;; This function uses a non-reentrant model
  8992 ;;
  8993                           
  8994                           
  8995                           ;psect for function __Umul8_16
  8996  0B4E                     __Umul8_16:	
  8997                           
  8998                           ;incstack = 0
  8999                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  9000                           ;__Umul8_16@multiplier stored from wreg
  9001  0B4E  00F8               	movwf	__Umul8_16@multiplier
  9002  0B4F  01F4               	clrf	__Umul8_16@product
  9003  0B50  01F5               	clrf	__Umul8_16@product+1
  9004  0B51  0870               	movf	__Umul8_16@multiplicand,w
  9005  0B52  00F2               	movwf	??__Umul8_16
  9006  0B53  01F3               	clrf	??__Umul8_16+1
  9007  0B54  0872               	movf	??__Umul8_16,w
  9008  0B55  00F6               	movwf	__Umul8_16@word_mpld
  9009  0B56  0873               	movf	??__Umul8_16+1,w
  9010  0B57  00F7               	movwf	__Umul8_16@word_mpld+1
  9011  0B58                     i1l2176:	
  9012  0B58  1C78               	btfss	__Umul8_16@multiplier,0
  9013  0B59  2B5E               	goto	i1l994
  9014  0B5A  0876               	movf	__Umul8_16@word_mpld,w
  9015  0B5B  07F4               	addwf	__Umul8_16@product,f
  9016  0B5C  0877               	movf	__Umul8_16@word_mpld+1,w
  9017  0B5D  3DF5               	addwfc	__Umul8_16@product+1,f
  9018  0B5E                     i1l994:	
  9019  0B5E  3001               	movlw	1
  9020  0B5F                     u212_25:	
  9021  0B5F  35F6               	lslf	__Umul8_16@word_mpld,f
  9022  0B60  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  9023  0B61  0B89               	decfsz	9,f
  9024  0B62  2B5F               	goto	u212_25
  9025  0B63  1003               	clrc
  9026  0B64  0CF8               	rrf	__Umul8_16@multiplier,f
  9027  0B65  0878               	movf	__Umul8_16@multiplier,w
  9028  0B66  1D03               	btfss	3,2
  9029  0B67  2B58               	goto	i1l2176
  9030  0B68  0875               	movf	__Umul8_16@product+1,w
  9031  0B69  00F1               	movwf	?__Umul8_16+1
  9032  0B6A  0874               	movf	__Umul8_16@product,w
  9033  0B6B  00F0               	movwf	?__Umul8_16
  9034  0B6C  0008               	return
  9035  0B6D                     __end_of__Umul8_16:	
  9036                           
  9037                           	psect	text41
  9038  0264                     __ptext41:	
  9039 ;; *************** function ___fladd *****************
  9040 ;; Defined at:
  9041 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  9042 ;; Parameters:    Size  Location     Type
  9043 ;;  b               4    0[COMMON] unsigned int 
  9044 ;;  a               4    4[COMMON] unsigned int 
  9045 ;; Auto vars:     Size  Location     Type
  9046 ;;  grs             1   11[COMMON] unsigned char 
  9047 ;;  bexp            1   10[COMMON] unsigned char 
  9048 ;;  aexp            1    9[COMMON] unsigned char 
  9049 ;;  signs           1    8[COMMON] unsigned char 
  9050 ;; Return value:  Size  Location     Type
  9051 ;;                  4    0[COMMON] unsigned char 
  9052 ;; Registers used:
  9053 ;;		wreg, status,2, status,0
  9054 ;; Tracked objects:
  9055 ;;		On entry : 0/0
  9056 ;;		On exit  : 0/0
  9057 ;;		Unchanged: 0/0
  9058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9059 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9060 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9061 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9062 ;;      Totals:        12       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9063 ;;Total ram usage:       20 bytes
  9064 ;; Hardware stack levels used:    1
  9065 ;; This function calls:
  9066 ;;		Nothing
  9067 ;; This function is called by:
  9068 ;;		_speedCalc
  9069 ;; This function uses a non-reentrant model
  9070 ;;
  9071                           
  9072                           
  9073                           ;psect for function ___fladd
  9074  0264                     ___fladd:	
  9075                           
  9076                           ;incstack = 0
  9077                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  9078  0264  0873               	movf	___fladd@b+3,w
  9079  0265  3980               	andlw	128
  9080  0266  0020               	movlb	0	; select bank0
  9081  0267  00A0               	movwf	??___fladd
  9082  0268  0820               	movf	??___fladd,w
  9083  0269  00F8               	movwf	___fladd@signs
  9084  026A  3573               	lslf	___fladd@b+3,w
  9085  026B  00A0               	movwf	??___fladd
  9086  026C  0820               	movf	??___fladd,w
  9087  026D  00FA               	movwf	___fladd@bexp
  9088  026E  1BF2               	btfsc	___fladd@b+2,7
  9089  026F  147A               	bsf	___fladd@bexp,0
  9090  0270  087A               	movf	___fladd@bexp,w
  9091  0271  1903               	btfsc	3,2
  9092  0272  2A81               	goto	i1l2316
  9093  0273  0A7A               	incf	___fladd@bexp,w
  9094  0274  1D03               	btfss	3,2
  9095  0275  2A7E               	goto	i1l2312
  9096  0276  3000               	movlw	0
  9097  0277  00F3               	movwf	___fladd@b+3
  9098  0278  3000               	movlw	0
  9099  0279  00F2               	movwf	___fladd@b+2
  9100  027A  3000               	movlw	0
  9101  027B  00F1               	movwf	___fladd@b+1
  9102  027C  3000               	movlw	0
  9103  027D  00F0               	movwf	___fladd@b
  9104  027E                     i1l2312:	
  9105  027E  17F2               	bsf	___fladd@b+2,7
  9106  027F  01F3               	clrf	___fladd@b+3
  9107  0280  2A89               	goto	i1l2318
  9108  0281                     i1l2316:	
  9109  0281  3000               	movlw	0
  9110  0282  00F3               	movwf	___fladd@b+3
  9111  0283  3000               	movlw	0
  9112  0284  00F2               	movwf	___fladd@b+2
  9113  0285  3000               	movlw	0
  9114  0286  00F1               	movwf	___fladd@b+1
  9115  0287  3000               	movlw	0
  9116  0288  00F0               	movwf	___fladd@b
  9117  0289                     i1l2318:	
  9118  0289  0877               	movf	___fladd@a+3,w
  9119  028A  3980               	andlw	128
  9120  028B  00A0               	movwf	??___fladd
  9121  028C  0820               	movf	??___fladd,w
  9122  028D  00F9               	movwf	___fladd@aexp
  9123  028E  0879               	movf	___fladd@aexp,w
  9124  028F  0678               	xorwf	___fladd@signs,w
  9125  0290  1D03               	btfss	3,2
  9126  0291  1778               	bsf	___fladd@signs,6
  9127  0292  3577               	lslf	___fladd@a+3,w
  9128  0293  00A0               	movwf	??___fladd
  9129  0294  0820               	movf	??___fladd,w
  9130  0295  00F9               	movwf	___fladd@aexp
  9131  0296  1BF6               	btfsc	___fladd@a+2,7
  9132  0297  1479               	bsf	___fladd@aexp,0
  9133  0298  0879               	movf	___fladd@aexp,w
  9134  0299  1903               	btfsc	3,2
  9135  029A  2AA9               	goto	i1l2340
  9136  029B  0A79               	incf	___fladd@aexp,w
  9137  029C  1D03               	btfss	3,2
  9138  029D  2AA6               	goto	i1l2336
  9139  029E  3000               	movlw	0
  9140  029F  00F7               	movwf	___fladd@a+3
  9141  02A0  3000               	movlw	0
  9142  02A1  00F6               	movwf	___fladd@a+2
  9143  02A2  3000               	movlw	0
  9144  02A3  00F5               	movwf	___fladd@a+1
  9145  02A4  3000               	movlw	0
  9146  02A5  00F4               	movwf	___fladd@a
  9147  02A6                     i1l2336:	
  9148  02A6  17F6               	bsf	___fladd@a+2,7
  9149  02A7  01F7               	clrf	___fladd@a+3
  9150  02A8  2AB1               	goto	i1l792
  9151  02A9                     i1l2340:	
  9152  02A9  3000               	movlw	0
  9153  02AA  00F7               	movwf	___fladd@a+3
  9154  02AB  3000               	movlw	0
  9155  02AC  00F6               	movwf	___fladd@a+2
  9156  02AD  3000               	movlw	0
  9157  02AE  00F5               	movwf	___fladd@a+1
  9158  02AF  3000               	movlw	0
  9159  02B0  00F4               	movwf	___fladd@a
  9160  02B1                     i1l792:	
  9161  02B1  087A               	movf	___fladd@bexp,w
  9162  02B2  0279               	subwf	___fladd@aexp,w
  9163  02B3  1803               	skipnc
  9164  02B4  2AF7               	goto	i1l2376
  9165  02B5  1F78               	btfss	___fladd@signs,6
  9166  02B6  2ABB               	goto	i1l2346
  9167  02B7  3080               	movlw	128
  9168  02B8  00A0               	movwf	??___fladd
  9169  02B9  0820               	movf	??___fladd,w
  9170  02BA  06F8               	xorwf	___fladd@signs,f
  9171  02BB                     i1l2346:	
  9172  02BB  087A               	movf	___fladd@bexp,w
  9173  02BC  00A0               	movwf	??___fladd
  9174  02BD  0820               	movf	??___fladd,w
  9175  02BE  00FB               	movwf	___fladd@grs
  9176  02BF  0879               	movf	___fladd@aexp,w
  9177  02C0  00A0               	movwf	??___fladd
  9178  02C1  0820               	movf	??___fladd,w
  9179  02C2  00FA               	movwf	___fladd@bexp
  9180  02C3  087B               	movf	___fladd@grs,w
  9181  02C4  00A0               	movwf	??___fladd
  9182  02C5  0820               	movf	??___fladd,w
  9183  02C6  00F9               	movwf	___fladd@aexp
  9184  02C7  0870               	movf	___fladd@b,w
  9185  02C8  00A0               	movwf	??___fladd
  9186  02C9  0820               	movf	??___fladd,w
  9187  02CA  00FB               	movwf	___fladd@grs
  9188  02CB  0874               	movf	___fladd@a,w
  9189  02CC  00A0               	movwf	??___fladd
  9190  02CD  0820               	movf	??___fladd,w
  9191  02CE  00F0               	movwf	___fladd@b
  9192  02CF  087B               	movf	___fladd@grs,w
  9193  02D0  00A0               	movwf	??___fladd
  9194  02D1  0820               	movf	??___fladd,w
  9195  02D2  00F4               	movwf	___fladd@a
  9196  02D3  0871               	movf	___fladd@b+1,w
  9197  02D4  00A0               	movwf	??___fladd
  9198  02D5  0820               	movf	??___fladd,w
  9199  02D6  00FB               	movwf	___fladd@grs
  9200  02D7  0875               	movf	___fladd@a+1,w
  9201  02D8  00A0               	movwf	??___fladd
  9202  02D9  0820               	movf	??___fladd,w
  9203  02DA  00F1               	movwf	___fladd@b+1
  9204  02DB  087B               	movf	___fladd@grs,w
  9205  02DC  00A0               	movwf	??___fladd
  9206  02DD  0820               	movf	??___fladd,w
  9207  02DE  00F5               	movwf	___fladd@a+1
  9208  02DF  0872               	movf	___fladd@b+2,w
  9209  02E0  00A0               	movwf	??___fladd
  9210  02E1  0820               	movf	??___fladd,w
  9211  02E2  00FB               	movwf	___fladd@grs
  9212  02E3  0876               	movf	___fladd@a+2,w
  9213  02E4  00A0               	movwf	??___fladd
  9214  02E5  0820               	movf	??___fladd,w
  9215  02E6  00F2               	movwf	___fladd@b+2
  9216  02E7  087B               	movf	___fladd@grs,w
  9217  02E8  00A0               	movwf	??___fladd
  9218  02E9  0820               	movf	??___fladd,w
  9219  02EA  00F6               	movwf	___fladd@a+2
  9220  02EB  0873               	movf	___fladd@b+3,w
  9221  02EC  00A0               	movwf	??___fladd
  9222  02ED  0820               	movf	??___fladd,w
  9223  02EE  00FB               	movwf	___fladd@grs
  9224  02EF  0877               	movf	___fladd@a+3,w
  9225  02F0  00A0               	movwf	??___fladd
  9226  02F1  0820               	movf	??___fladd,w
  9227  02F2  00F3               	movwf	___fladd@b+3
  9228  02F3  087B               	movf	___fladd@grs,w
  9229  02F4  00A0               	movwf	??___fladd
  9230  02F5  0820               	movf	??___fladd,w
  9231  02F6  00F7               	movwf	___fladd@a+3
  9232  02F7                     i1l2376:	
  9233  02F7  01FB               	clrf	___fladd@grs
  9234  02F8  0879               	movf	___fladd@aexp,w
  9235  02F9  00A0               	movwf	??___fladd
  9236  02FA  01A1               	clrf	??___fladd+1
  9237  02FB  0821               	movf	??___fladd+1,w
  9238  02FC  00A3               	movwf	??___fladd+3
  9239  02FD  087A               	movf	___fladd@bexp,w
  9240  02FE  0220               	subwf	??___fladd,w
  9241  02FF  00A2               	movwf	??___fladd+2
  9242  0300  1C03               	skipc
  9243  0301  03A3               	decf	??___fladd+3,f
  9244  0302  0823               	movf	??___fladd+3,w
  9245  0303  3A80               	xorlw	128
  9246  0304  00A4               	movwf	??___fladd+4
  9247  0305  3080               	movlw	128
  9248  0306  0224               	subwf	??___fladd+4,w
  9249  0307  1D03               	skipz
  9250  0308  2B0B               	goto	u253_25
  9251  0309  301A               	movlw	26
  9252  030A  0222               	subwf	??___fladd+2,w
  9253  030B                     u253_25:	
  9254  030B  1C03               	skipc
  9255  030C  2B41               	goto	i1l2394
  9256  030D  0873               	movf	___fladd@b+3,w
  9257  030E  0472               	iorwf	___fladd@b+2,w
  9258  030F  0471               	iorwf	___fladd@b+1,w
  9259  0310  0470               	iorwf	___fladd@b,w
  9260  0311  1903               	btfsc	3,2
  9261  0312  2B15               	goto	u254_20
  9262  0313  3001               	movlw	1
  9263  0314  2B16               	goto	u255_20
  9264  0315                     u254_20:	
  9265  0315  3000               	movlw	0
  9266  0316                     u255_20:	
  9267  0316  0020               	movlb	0	; select bank0
  9268  0317  00A0               	movwf	??___fladd
  9269  0318  0820               	movf	??___fladd,w
  9270  0319  00FB               	movwf	___fladd@grs
  9271  031A  3000               	movlw	0
  9272  031B  00F3               	movwf	___fladd@b+3
  9273  031C  3000               	movlw	0
  9274  031D  00F2               	movwf	___fladd@b+2
  9275  031E  3000               	movlw	0
  9276  031F  00F1               	movwf	___fladd@b+1
  9277  0320  3000               	movlw	0
  9278  0321  00F0               	movwf	___fladd@b
  9279  0322  0879               	movf	___fladd@aexp,w
  9280  0323  00A0               	movwf	??___fladd
  9281  0324  0820               	movf	??___fladd,w
  9282  0325  00FA               	movwf	___fladd@bexp
  9283  0326  2B45               	goto	i1l796
  9284  0327                     i1l798:	
  9285  0327  1C7B               	btfss	___fladd@grs,0
  9286  0328  2B30               	goto	i1l2384
  9287  0329  367B               	lsrf	___fladd@grs,w
  9288  032A  3801               	iorlw	1
  9289  032B  0020               	movlb	0	; select bank0
  9290  032C  00A0               	movwf	??___fladd
  9291  032D  0820               	movf	??___fladd,w
  9292  032E  00FB               	movwf	___fladd@grs
  9293  032F  2B32               	goto	i1l2386
  9294  0330                     i1l2384:	
  9295  0330  1003               	clrc
  9296  0331  0CFB               	rrf	___fladd@grs,f
  9297  0332                     i1l2386:	
  9298  0332  1870               	btfsc	___fladd@b,0
  9299  0333  17FB               	bsf	___fladd@grs,7
  9300  0334  3001               	movlw	1
  9301  0335  0020               	movlb	0	; select bank0
  9302  0336  00A0               	movwf	??___fladd
  9303  0337                     u258_25:	
  9304  0337  37F3               	asrf	___fladd@b+3,f
  9305  0338  0CF2               	rrf	___fladd@b+2,f
  9306  0339  0CF1               	rrf	___fladd@b+1,f
  9307  033A  0CF0               	rrf	___fladd@b,f
  9308  033B  0BA0               	decfsz	??___fladd& (0+127),f
  9309  033C  2B37               	goto	u258_25
  9310  033D  3001               	movlw	1
  9311  033E  00A0               	movwf	??___fladd
  9312  033F  0820               	movf	??___fladd,w
  9313  0340  07FA               	addwf	___fladd@bexp,f
  9314  0341                     i1l2394:	
  9315  0341  0879               	movf	___fladd@aexp,w
  9316  0342  027A               	subwf	___fladd@bexp,w
  9317  0343  1C03               	skipc
  9318  0344  2B27               	goto	i1l798
  9319  0345                     i1l796:	
  9320  0345  1B78               	btfsc	___fladd@signs,6
  9321  0346  2B78               	goto	i1l2420
  9322  0347  087A               	movf	___fladd@bexp,w
  9323  0348  1D03               	btfss	3,2
  9324  0349  2B53               	goto	i1l2402
  9325  034A  3000               	movlw	0
  9326  034B  00F3               	movwf	?___fladd+3
  9327  034C  3000               	movlw	0
  9328  034D  00F2               	movwf	?___fladd+2
  9329  034E  3000               	movlw	0
  9330  034F  00F1               	movwf	?___fladd+1
  9331  0350  3000               	movlw	0
  9332  0351  00F0               	movwf	?___fladd
  9333  0352  0008               	return
  9334  0353                     i1l2402:	
  9335  0353  0874               	movf	___fladd@a,w
  9336  0354  07F0               	addwf	___fladd@b,f
  9337  0355  0875               	movf	___fladd@a+1,w
  9338  0356  3DF1               	addwfc	___fladd@b+1,f
  9339  0357  0876               	movf	___fladd@a+2,w
  9340  0358  3DF2               	addwfc	___fladd@b+2,f
  9341  0359  0877               	movf	___fladd@a+3,w
  9342  035A  3DF3               	addwfc	___fladd@b+3,f
  9343  035B  1C73               	btfss	___fladd@b+3,0
  9344  035C  2BF3               	goto	i1l2454
  9345  035D  1C7B               	btfss	___fladd@grs,0
  9346  035E  2B66               	goto	i1l2410
  9347  035F  367B               	lsrf	___fladd@grs,w
  9348  0360  3801               	iorlw	1
  9349  0361  0020               	movlb	0	; select bank0
  9350  0362  00A0               	movwf	??___fladd
  9351  0363  0820               	movf	??___fladd,w
  9352  0364  00FB               	movwf	___fladd@grs
  9353  0365  2B68               	goto	i1l2412
  9354  0366                     i1l2410:	
  9355  0366  1003               	clrc
  9356  0367  0CFB               	rrf	___fladd@grs,f
  9357  0368                     i1l2412:	
  9358  0368  1870               	btfsc	___fladd@b,0
  9359  0369  17FB               	bsf	___fladd@grs,7
  9360  036A  3001               	movlw	1
  9361  036B  0020               	movlb	0	; select bank0
  9362  036C  00A0               	movwf	??___fladd
  9363  036D                     u265_25:	
  9364  036D  37F3               	asrf	___fladd@b+3,f
  9365  036E  0CF2               	rrf	___fladd@b+2,f
  9366  036F  0CF1               	rrf	___fladd@b+1,f
  9367  0370  0CF0               	rrf	___fladd@b,f
  9368  0371  0BA0               	decfsz	??___fladd& (0+127),f
  9369  0372  2B6D               	goto	u265_25
  9370  0373  3001               	movlw	1
  9371  0374  00A0               	movwf	??___fladd
  9372  0375  0820               	movf	??___fladd,w
  9373  0376  07FA               	addwf	___fladd@bexp,f
  9374  0377  2BF3               	goto	i1l2454
  9375  0378                     i1l2420:	
  9376  0378  0873               	movf	___fladd@b+3,w
  9377  0379  3A80               	xorlw	128
  9378  037A  0020               	movlb	0	; select bank0
  9379  037B  00A0               	movwf	??___fladd
  9380  037C  0877               	movf	___fladd@a+3,w
  9381  037D  3A80               	xorlw	128
  9382  037E  0220               	subwf	??___fladd,w
  9383  037F  1D03               	skipz
  9384  0380  2B8B               	goto	u266_23
  9385  0381  0876               	movf	___fladd@a+2,w
  9386  0382  0272               	subwf	___fladd@b+2,w
  9387  0383  1D03               	skipz
  9388  0384  2B8B               	goto	u266_23
  9389  0385  0875               	movf	___fladd@a+1,w
  9390  0386  0271               	subwf	___fladd@b+1,w
  9391  0387  1D03               	skipz
  9392  0388  2B8B               	goto	u266_23
  9393  0389  0874               	movf	___fladd@a,w
  9394  038A  0270               	subwf	___fladd@b,w
  9395  038B                     u266_23:	
  9396  038B  1803               	skipnc
  9397  038C  2BC3               	goto	i1l2430
  9398  038D  30FF               	movlw	255
  9399  038E  00A0               	movwf	??___fladd
  9400  038F  30FF               	movlw	255
  9401  0390  00A1               	movwf	??___fladd+1
  9402  0391  30FF               	movlw	255
  9403  0392  00A2               	movwf	??___fladd+2
  9404  0393  30FF               	movlw	255
  9405  0394  00A3               	movwf	??___fladd+3
  9406  0395  0870               	movf	___fladd@b,w
  9407  0396  0274               	subwf	___fladd@a,w
  9408  0397  00A4               	movwf	??___fladd+4
  9409  0398  0871               	movf	___fladd@b+1,w
  9410  0399  3B75               	subwfb	___fladd@a+1,w
  9411  039A  00A5               	movwf	??___fladd+5
  9412  039B  0872               	movf	___fladd@b+2,w
  9413  039C  3B76               	subwfb	___fladd@a+2,w
  9414  039D  00A6               	movwf	??___fladd+6
  9415  039E  0873               	movf	___fladd@b+3,w
  9416  039F  3B77               	subwfb	___fladd@a+3,w
  9417  03A0  00A7               	movwf	??___fladd+7
  9418  03A1  0824               	movf	??___fladd+4,w
  9419  03A2  07A0               	addwf	??___fladd,f
  9420  03A3  0825               	movf	??___fladd+5,w
  9421  03A4  3DA1               	addwfc	??___fladd+1,f
  9422  03A5  0826               	movf	??___fladd+6,w
  9423  03A6  3DA2               	addwfc	??___fladd+2,f
  9424  03A7  0827               	movf	??___fladd+7,w
  9425  03A8  3DA3               	addwfc	??___fladd+3,f
  9426  03A9  0823               	movf	??___fladd+3,w
  9427  03AA  00F3               	movwf	___fladd@b+3
  9428  03AB  0822               	movf	??___fladd+2,w
  9429  03AC  00F2               	movwf	___fladd@b+2
  9430  03AD  0821               	movf	??___fladd+1,w
  9431  03AE  00F1               	movwf	___fladd@b+1
  9432  03AF  0820               	movf	??___fladd,w
  9433  03B0  00F0               	movwf	___fladd@b
  9434  03B1  3080               	movlw	128
  9435  03B2  00A0               	movwf	??___fladd
  9436  03B3  0820               	movf	??___fladd,w
  9437  03B4  06F8               	xorwf	___fladd@signs,f
  9438  03B5  09FB               	comf	___fladd@grs,f
  9439  03B6  0AFB               	incf	___fladd@grs,f
  9440  03B7  087B               	movf	___fladd@grs,w
  9441  03B8  1D03               	btfss	3,2
  9442  03B9  2BCB               	goto	i1l813
  9443  03BA  3001               	movlw	1
  9444  03BB  07F0               	addwf	___fladd@b,f
  9445  03BC  3000               	movlw	0
  9446  03BD  3DF1               	addwfc	___fladd@b+1,f
  9447  03BE  3000               	movlw	0
  9448  03BF  3DF2               	addwfc	___fladd@b+2,f
  9449  03C0  3000               	movlw	0
  9450  03C1  3DF3               	addwfc	___fladd@b+3,f
  9451  03C2  2BCB               	goto	i1l813
  9452  03C3                     i1l2430:	
  9453  03C3  0874               	movf	___fladd@a,w
  9454  03C4  02F0               	subwf	___fladd@b,f
  9455  03C5  0875               	movf	___fladd@a+1,w
  9456  03C6  3BF1               	subwfb	___fladd@b+1,f
  9457  03C7  0876               	movf	___fladd@a+2,w
  9458  03C8  3BF2               	subwfb	___fladd@b+2,f
  9459  03C9  0877               	movf	___fladd@a+3,w
  9460  03CA  3BF3               	subwfb	___fladd@b+3,f
  9461  03CB                     i1l813:	
  9462  03CB  0873               	movf	___fladd@b+3,w
  9463  03CC  0472               	iorwf	___fladd@b+2,w
  9464  03CD  0471               	iorwf	___fladd@b+1,w
  9465  03CE  0470               	iorwf	___fladd@b,w
  9466  03CF  1D03               	skipz
  9467  03D0  2BF1               	goto	i1l2452
  9468  03D1  087B               	movf	___fladd@grs,w
  9469  03D2  1D03               	btfss	3,2
  9470  03D3  2BF1               	goto	i1l2452
  9471  03D4  3000               	movlw	0
  9472  03D5  00F3               	movwf	?___fladd+3
  9473  03D6  3000               	movlw	0
  9474  03D7  00F2               	movwf	?___fladd+2
  9475  03D8  3000               	movlw	0
  9476  03D9  00F1               	movwf	?___fladd+1
  9477  03DA  3000               	movlw	0
  9478  03DB  00F0               	movwf	?___fladd
  9479  03DC  0008               	return
  9480  03DD                     i1l2438:	
  9481  03DD  3001               	movlw	1
  9482  03DE                     u270_25:	
  9483  03DE  35F0               	lslf	___fladd@b,f
  9484  03DF  0DF1               	rlf	___fladd@b+1,f
  9485  03E0  0DF2               	rlf	___fladd@b+2,f
  9486  03E1  0DF3               	rlf	___fladd@b+3,f
  9487  03E2  0B89               	decfsz	9,f
  9488  03E3  2BDE               	goto	u270_25
  9489  03E4  1BFB               	btfsc	___fladd@grs,7
  9490  03E5  1470               	bsf	___fladd@b,0
  9491  03E6  1C7B               	btfss	___fladd@grs,0
  9492  03E7  2BEA               	goto	i1l2446
  9493  03E8  1403               	setc
  9494  03E9  2BEB               	goto	L2
  9495  03EA                     i1l2446:	
  9496  03EA  1003               	clrc
  9497  03EB                     L2:	
  9498  03EB  0DFB               	rlf	___fladd@grs,f
  9499  03EC  087A               	movf	___fladd@bexp,w
  9500  03ED  1903               	btfsc	3,2
  9501  03EE  2BF1               	goto	i1l2452
  9502  03EF  3001               	movlw	1
  9503  03F0  02FA               	subwf	___fladd@bexp,f
  9504  03F1                     i1l2452:	
  9505  03F1  1FF2               	btfss	___fladd@b+2,7
  9506  03F2  2BDD               	goto	i1l2438
  9507  03F3                     i1l2454:	
  9508  03F3  01F9               	clrf	___fladd@aexp
  9509  03F4  1FFB               	btfss	___fladd@grs,7
  9510  03F5  2BFE               	goto	i1l2464
  9511  03F6  087B               	movf	___fladd@grs,w
  9512  03F7  397F               	andlw	127
  9513  03F8  1903               	btfsc	3,2
  9514  03F9  1870               	btfsc	___fladd@b,0
  9515  03FA  2BFC               	goto	i1l2460
  9516  03FB  2BFE               	goto	i1l2464
  9517  03FC                     i1l2460:	
  9518  03FC  01F9               	clrf	___fladd@aexp
  9519  03FD  0AF9               	incf	___fladd@aexp,f
  9520  03FE                     i1l2464:	
  9521  03FE  0879               	movf	___fladd@aexp,w
  9522  03FF  1903               	btfsc	3,2
  9523  0400  2C2B               	goto	i1l826
  9524  0401  3001               	movlw	1
  9525  0402  07F0               	addwf	___fladd@b,f
  9526  0403  3000               	movlw	0
  9527  0404  3DF1               	addwfc	___fladd@b+1,f
  9528  0405  3000               	movlw	0
  9529  0406  3DF2               	addwfc	___fladd@b+2,f
  9530  0407  3000               	movlw	0
  9531  0408  3DF3               	addwfc	___fladd@b+3,f
  9532  0409  1C73               	btfss	___fladd@b+3,0
  9533  040A  2C2B               	goto	i1l826
  9534  040B  0870               	movf	___fladd@b,w
  9535  040C  0020               	movlb	0	; select bank0
  9536  040D  00A0               	movwf	??___fladd
  9537  040E  0871               	movf	___fladd@b+1,w
  9538  040F  00A1               	movwf	??___fladd+1
  9539  0410  0872               	movf	___fladd@b+2,w
  9540  0411  00A2               	movwf	??___fladd+2
  9541  0412  0873               	movf	___fladd@b+3,w
  9542  0413  00A3               	movwf	??___fladd+3
  9543  0414  3001               	movlw	1
  9544  0415  00A4               	movwf	??___fladd+4
  9545  0416                     u280_25:	
  9546  0416  37A3               	asrf	??___fladd+3,f
  9547  0417  0CA2               	rrf	??___fladd+2,f
  9548  0418  0CA1               	rrf	??___fladd+1,f
  9549  0419  0CA0               	rrf	??___fladd,f
  9550  041A  0BA4               	decfsz	??___fladd+4,f
  9551  041B  2C16               	goto	u280_25
  9552  041C  0823               	movf	??___fladd+3,w
  9553  041D  00F3               	movwf	___fladd@b+3
  9554  041E  0822               	movf	??___fladd+2,w
  9555  041F  00F2               	movwf	___fladd@b+2
  9556  0420  0821               	movf	??___fladd+1,w
  9557  0421  00F1               	movwf	___fladd@b+1
  9558  0422  0820               	movf	??___fladd,w
  9559  0423  00F0               	movwf	___fladd@b
  9560  0424  0A7A               	incf	___fladd@bexp,w
  9561  0425  1903               	btfsc	3,2
  9562  0426  2C2B               	goto	i1l826
  9563  0427  3001               	movlw	1
  9564  0428  00A0               	movwf	??___fladd
  9565  0429  0820               	movf	??___fladd,w
  9566  042A  07FA               	addwf	___fladd@bexp,f
  9567  042B                     i1l826:	
  9568  042B  0A7A               	incf	___fladd@bexp,w
  9569  042C  1D03               	btfss	3,2
  9570  042D  087A               	movf	___fladd@bexp,w
  9571  042E  1D03               	btfss	3,2
  9572  042F  2C3B               	goto	i1l2482
  9573  0430  3000               	movlw	0
  9574  0431  00F3               	movwf	___fladd@b+3
  9575  0432  3000               	movlw	0
  9576  0433  00F2               	movwf	___fladd@b+2
  9577  0434  3000               	movlw	0
  9578  0435  00F1               	movwf	___fladd@b+1
  9579  0436  3000               	movlw	0
  9580  0437  00F0               	movwf	___fladd@b
  9581  0438  087A               	movf	___fladd@bexp,w
  9582  0439  1903               	btfsc	3,2
  9583  043A  01F8               	clrf	___fladd@signs
  9584  043B                     i1l2482:	
  9585  043B  1C7A               	btfss	___fladd@bexp,0
  9586  043C  2C3F               	goto	i1l2486
  9587  043D  17F2               	bsf	___fladd@b+2,7
  9588  043E  2C44               	goto	i1l834
  9589  043F                     i1l2486:	
  9590  043F  307F               	movlw	127
  9591  0440  0020               	movlb	0	; select bank0
  9592  0441  00A0               	movwf	??___fladd
  9593  0442  0820               	movf	??___fladd,w
  9594  0443  05F2               	andwf	___fladd@b+2,f
  9595  0444                     i1l834:	
  9596  0444  367A               	lsrf	___fladd@bexp,w
  9597  0445  0020               	movlb	0	; select bank0
  9598  0446  00A0               	movwf	??___fladd
  9599  0447  0820               	movf	??___fladd,w
  9600  0448  00F3               	movwf	___fladd@b+3
  9601  0449  1FF8               	btfss	___fladd@signs,7
  9602  044A  0008               	return
  9603  044B  17F3               	bsf	___fladd@b+3,7
  9604  044C  0008               	return
  9605  044D                     __end_of___fladd:	
  9606                           
  9607                           	psect	text42
  9608  0D6F                     __ptext42:	
  9609 ;; *************** function ___aldiv *****************
  9610 ;; Defined at:
  9611 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aldiv.c"
  9612 ;; Parameters:    Size  Location     Type
  9613 ;;  divisor         4    0[COMMON] long 
  9614 ;;  dividend        4    4[COMMON] long 
  9615 ;; Auto vars:     Size  Location     Type
  9616 ;;  quotient        4    2[BANK0 ] long 
  9617 ;;  sign            1    1[BANK0 ] unsigned char 
  9618 ;;  counter         1    0[BANK0 ] unsigned char 
  9619 ;; Return value:  Size  Location     Type
  9620 ;;                  4    0[COMMON] long 
  9621 ;; Registers used:
  9622 ;;		wreg, status,2, status,0
  9623 ;; Tracked objects:
  9624 ;;		On entry : 0/0
  9625 ;;		On exit  : 0/0
  9626 ;;		Unchanged: 0/0
  9627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9628 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9629 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9630 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9631 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9632 ;;Total ram usage:       15 bytes
  9633 ;; Hardware stack levels used:    1
  9634 ;; This function calls:
  9635 ;;		Nothing
  9636 ;; This function is called by:
  9637 ;;		_speedCalc
  9638 ;; This function uses a non-reentrant model
  9639 ;;
  9640                           
  9641                           
  9642                           ;psect for function ___aldiv
  9643  0D6F                     ___aldiv:	
  9644                           
  9645                           ;incstack = 0
  9646                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  9647  0D6F  0020               	movlb	0	; select bank0
  9648  0D70  01A1               	clrf	___aldiv@sign
  9649  0D71  1FF3               	btfss	___aldiv@divisor+3,7
  9650  0D72  2D80               	goto	i1l556
  9651  0D73  09F0               	comf	___aldiv@divisor,f
  9652  0D74  09F1               	comf	___aldiv@divisor+1,f
  9653  0D75  09F2               	comf	___aldiv@divisor+2,f
  9654  0D76  09F3               	comf	___aldiv@divisor+3,f
  9655  0D77  0AF0               	incf	___aldiv@divisor,f
  9656  0D78  1903               	skipnz
  9657  0D79  0AF1               	incf	___aldiv@divisor+1,f
  9658  0D7A  1903               	skipnz
  9659  0D7B  0AF2               	incf	___aldiv@divisor+2,f
  9660  0D7C  1903               	skipnz
  9661  0D7D  0AF3               	incf	___aldiv@divisor+3,f
  9662  0D7E  01A1               	clrf	___aldiv@sign
  9663  0D7F  0AA1               	incf	___aldiv@sign,f
  9664  0D80                     i1l556:	
  9665  0D80  1FF7               	btfss	___aldiv@dividend+3,7
  9666  0D81  2D91               	goto	i1l2268
  9667  0D82  09F4               	comf	___aldiv@dividend,f
  9668  0D83  09F5               	comf	___aldiv@dividend+1,f
  9669  0D84  09F6               	comf	___aldiv@dividend+2,f
  9670  0D85  09F7               	comf	___aldiv@dividend+3,f
  9671  0D86  0AF4               	incf	___aldiv@dividend,f
  9672  0D87  1903               	skipnz
  9673  0D88  0AF5               	incf	___aldiv@dividend+1,f
  9674  0D89  1903               	skipnz
  9675  0D8A  0AF6               	incf	___aldiv@dividend+2,f
  9676  0D8B  1903               	skipnz
  9677  0D8C  0AF7               	incf	___aldiv@dividend+3,f
  9678  0D8D  3001               	movlw	1
  9679  0D8E  00F8               	movwf	??___aldiv
  9680  0D8F  0878               	movf	??___aldiv,w
  9681  0D90  06A1               	xorwf	___aldiv@sign,f
  9682  0D91                     i1l2268:	
  9683  0D91  3000               	movlw	0
  9684  0D92  00A5               	movwf	___aldiv@quotient+3
  9685  0D93  3000               	movlw	0
  9686  0D94  00A4               	movwf	___aldiv@quotient+2
  9687  0D95  3000               	movlw	0
  9688  0D96  00A3               	movwf	___aldiv@quotient+1
  9689  0D97  3000               	movlw	0
  9690  0D98  00A2               	movwf	___aldiv@quotient
  9691  0D99  0873               	movf	___aldiv@divisor+3,w
  9692  0D9A  0472               	iorwf	___aldiv@divisor+2,w
  9693  0D9B  0471               	iorwf	___aldiv@divisor+1,w
  9694  0D9C  0470               	iorwf	___aldiv@divisor,w
  9695  0D9D  1903               	skipnz
  9696  0D9E  2DDA               	goto	i1l2290
  9697  0D9F  01A0               	clrf	___aldiv@counter
  9698  0DA0  0AA0               	incf	___aldiv@counter,f
  9699  0DA1                     i1l2276:	
  9700  0DA1  1BF3               	btfsc	___aldiv@divisor+3,7
  9701  0DA2  2DAF               	goto	i1l2278
  9702  0DA3  3001               	movlw	1
  9703  0DA4                     u237_25:	
  9704  0DA4  35F0               	lslf	___aldiv@divisor,f
  9705  0DA5  0DF1               	rlf	___aldiv@divisor+1,f
  9706  0DA6  0DF2               	rlf	___aldiv@divisor+2,f
  9707  0DA7  0DF3               	rlf	___aldiv@divisor+3,f
  9708  0DA8  0B89               	decfsz	9,f
  9709  0DA9  2DA4               	goto	u237_25
  9710  0DAA  3001               	movlw	1
  9711  0DAB  00F8               	movwf	??___aldiv
  9712  0DAC  0878               	movf	??___aldiv,w
  9713  0DAD  07A0               	addwf	___aldiv@counter,f
  9714  0DAE  2DA1               	goto	i1l2276
  9715  0DAF                     i1l2278:	
  9716  0DAF  3001               	movlw	1
  9717  0DB0                     u239_25:	
  9718  0DB0  35A2               	lslf	___aldiv@quotient,f
  9719  0DB1  0DA3               	rlf	___aldiv@quotient+1,f
  9720  0DB2  0DA4               	rlf	___aldiv@quotient+2,f
  9721  0DB3  0DA5               	rlf	___aldiv@quotient+3,f
  9722  0DB4  0B89               	decfsz	9,f
  9723  0DB5  2DB0               	goto	u239_25
  9724  0DB6  0873               	movf	___aldiv@divisor+3,w
  9725  0DB7  0277               	subwf	___aldiv@dividend+3,w
  9726  0DB8  1D03               	skipz
  9727  0DB9  2DC4               	goto	u240_25
  9728  0DBA  0872               	movf	___aldiv@divisor+2,w
  9729  0DBB  0276               	subwf	___aldiv@dividend+2,w
  9730  0DBC  1D03               	skipz
  9731  0DBD  2DC4               	goto	u240_25
  9732  0DBE  0871               	movf	___aldiv@divisor+1,w
  9733  0DBF  0275               	subwf	___aldiv@dividend+1,w
  9734  0DC0  1D03               	skipz
  9735  0DC1  2DC4               	goto	u240_25
  9736  0DC2  0870               	movf	___aldiv@divisor,w
  9737  0DC3  0274               	subwf	___aldiv@dividend,w
  9738  0DC4                     u240_25:	
  9739  0DC4  1C03               	skipc
  9740  0DC5  2DCF               	goto	i1l2286
  9741  0DC6  0870               	movf	___aldiv@divisor,w
  9742  0DC7  02F4               	subwf	___aldiv@dividend,f
  9743  0DC8  0871               	movf	___aldiv@divisor+1,w
  9744  0DC9  3BF5               	subwfb	___aldiv@dividend+1,f
  9745  0DCA  0872               	movf	___aldiv@divisor+2,w
  9746  0DCB  3BF6               	subwfb	___aldiv@dividend+2,f
  9747  0DCC  0873               	movf	___aldiv@divisor+3,w
  9748  0DCD  3BF7               	subwfb	___aldiv@dividend+3,f
  9749  0DCE  1422               	bsf	___aldiv@quotient,0
  9750  0DCF                     i1l2286:	
  9751  0DCF  3001               	movlw	1
  9752  0DD0                     u241_25:	
  9753  0DD0  36F3               	lsrf	___aldiv@divisor+3,f
  9754  0DD1  0CF2               	rrf	___aldiv@divisor+2,f
  9755  0DD2  0CF1               	rrf	___aldiv@divisor+1,f
  9756  0DD3  0CF0               	rrf	___aldiv@divisor,f
  9757  0DD4  0B89               	decfsz	9,f
  9758  0DD5  2DD0               	goto	u241_25
  9759  0DD6  3001               	movlw	1
  9760  0DD7  02A0               	subwf	___aldiv@counter,f
  9761  0DD8  1D03               	btfss	3,2
  9762  0DD9  2DAF               	goto	i1l2278
  9763  0DDA                     i1l2290:	
  9764  0DDA  0821               	movf	___aldiv@sign,w
  9765  0DDB  1903               	btfsc	3,2
  9766  0DDC  2DE8               	goto	i1l2294
  9767  0DDD  09A2               	comf	___aldiv@quotient,f
  9768  0DDE  09A3               	comf	___aldiv@quotient+1,f
  9769  0DDF  09A4               	comf	___aldiv@quotient+2,f
  9770  0DE0  09A5               	comf	___aldiv@quotient+3,f
  9771  0DE1  0AA2               	incf	___aldiv@quotient,f
  9772  0DE2  1903               	skipnz
  9773  0DE3  0AA3               	incf	___aldiv@quotient+1,f
  9774  0DE4  1903               	skipnz
  9775  0DE5  0AA4               	incf	___aldiv@quotient+2,f
  9776  0DE6  1903               	skipnz
  9777  0DE7  0AA5               	incf	___aldiv@quotient+3,f
  9778  0DE8                     i1l2294:	
  9779  0DE8  0825               	movf	___aldiv@quotient+3,w
  9780  0DE9  00F3               	movwf	?___aldiv+3
  9781  0DEA  0824               	movf	___aldiv@quotient+2,w
  9782  0DEB  00F2               	movwf	?___aldiv+2
  9783  0DEC  0823               	movf	___aldiv@quotient+1,w
  9784  0DED  00F1               	movwf	?___aldiv+1
  9785  0DEE  0822               	movf	___aldiv@quotient,w
  9786  0DEF  00F0               	movwf	?___aldiv
  9787  0DF0  0008               	return
  9788  0DF1                     __end_of___aldiv:	
  9789  007E                     btemp	set	126	;btemp
  9790  007E                     int$flags	set	126
  9791  007E                     wtemp0	set	126


Data Sizes:
    Strings     27
    Constant    0
    Data        32
    BSS         57
    Persistent  43
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     32      64
    BANK1            80     78      80
    BANK2            80     14      80
    BANK3            80      3       3
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    puts@s	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_3(CODE[3]), hrDisp(BANK2[13]), distanceDisp(BANK2[11]), speedDisp(BANK2[8]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[10]), STR_1(CODE[14]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK2[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), STR_3(CODE[3]), hrDisp(BANK2[13]), distanceDisp(BANK2[11]), 
		 -> speedDisp(BANK2[8]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S986_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK3[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[10]), STR_1(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[10]), STR_1(CODE[14]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 4
		 -> ?_printf(BANK2[2]), rpm(BANK0[4]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK3[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK2[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    writeString@string	PTR unsigned char  size(1) Largest target is 13
		 -> hrDisp(BANK2[13]), distanceDisp(BANK2[11]), speedDisp(BANK2[8]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timerISR(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timerISR(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    IOCCF7_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> speedCalc(), IOCCF7_DefaultInterruptHandler(), 

    IOCCF7_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> speedCalc(), Absolute function(), IOCCF7_DefaultInterruptHandler(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _speedCalc->___flmul
    ___xxtofl->___lmul
    ___lmul->___aldiv
    ___flmul->__Umul8_16

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _IOCCF7_ISR->_speedCalc
    _speedCalc->___xxtofl
    ___xxtofl->___lmul
    ___lmul->___aldiv

Critical Paths under _main in BANK1

    _writeString->_puts
    _setCursor->_EUSART_Write
    _setCursor->_EUSART_is_tx_ready
    _resetCursor->_puts
    _puts->_fputs
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _abs->___aomod
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCCF7_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_printf
    _printf->_vfprintf

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    _main->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   18101
                                             13 BANK2      1     1      0
         _IOCCF7_SetInterruptHandler
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                             _printf
                        _resetCursor
                          _setCursor
                        _writeString
 ---------------------------------------------------------------------------------
 (1) _writeString                                          1     1      0    3558
                                             24 BANK1      1     1      0
                 _EUSART_is_tx_ready
                               _puts
 ---------------------------------------------------------------------------------
 (1) _setCursor                                            4     3      1     763
                                              1 BANK1      4     3      1
                       _EUSART_Write
                 _EUSART_is_tx_ready
 ---------------------------------------------------------------------------------
 (2) _EUSART_is_tx_ready                                   1     1      0      37
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _resetCursor                                          0     0      0    3382
                               _puts
 ---------------------------------------------------------------------------------
 (2) _puts                                                 5     3      2    3382
                                             19 BANK1      5     3      2
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (1) _printf                                              10     4      6    9191
                                              6 BANK2      7     1      6
                                              0 BANK3      3     3      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    8745
                                             76 BANK1      2     2      0
                                              0 BANK2      6     3      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    8149
                                             58 BANK1     18    16      2
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    6109
                                             28 BANK1     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    3878
                                             19 BANK1      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     166
                                              0 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 (3) _fputs                                                9     6      3    1914
                                             10 BANK1      9     6      3
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3    1210
                                              2 BANK1      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      62
                                              1 BANK1      1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             19 BANK1      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     613
                                              0 BANK1     19     3     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     625
                                              0 BANK1     27    11     16
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     785
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0     211
                                              2 BANK1      1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     211
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     211
         _IOCCF7_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCCF7_SetInterruptHandler                           2     0      2     211
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     363
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          0     0      0    5948
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                           _timerISR *
 ---------------------------------------------------------------------------------
 (12) _timerISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _PIN_MANAGER_IOC                                     0     0      0    5948
                         _IOCCF7_ISR
 ---------------------------------------------------------------------------------
 (12) _IOCCF7_ISR                                          0     0      0    5948
                   Absolute function *
     _IOCCF7_DefaultInterruptHandler *
                          _speedCalc *
 ---------------------------------------------------------------------------------
 (13) _speedCalc                                           4     4      0    5948
                                             28 BANK0      4     4      0
                            ___aldiv
                            ___fladd
                            ___flmul
                             ___lmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (14) ___xxtofl                                           14    10      4     398
                                             14 BANK0     14    10      4
                            ___aldiv (ARG)
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (14) ___lmul                                             12     4      8     244
                                              9 COMMON     4     4      0
                                              6 BANK0      8     0      8
                            ___aldiv (ARG)
 ---------------------------------------------------------------------------------
 (14) ___flmul                                            26    18      8    2569
                                              9 COMMON     5     5      0
                                              0 BANK0     21    13      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (15) __Umul8_16                                           9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (14) ___fladd                                            20    12      8    2262
                                              0 COMMON    12     4      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (14) ___aldiv                                            15     7      8     452
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (13) _IOCCF7_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _IOCCF7_SetInterruptHandler
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCCF7_SetInterruptHandler
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _TMR0_SetInterruptHandler
   _printf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART_Write
             _fputs
               _fputc
                 _putch
                   _EUSART_Write
             _strlen
         _fputc
           _putch
             _EUSART_Write
   _resetCursor
     _puts
       _fputc
         _putch
           _EUSART_Write
       _fputs
         _fputc
           _putch
             _EUSART_Write
   _setCursor
     _EUSART_Write
     _EUSART_is_tx_ready
   _writeString
     _EUSART_is_tx_ready
     _puts
       _fputc
         _putch
           _EUSART_Write
       _fputs
         _fputc
           _putch
             _EUSART_Write

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
     _IOCCF7_ISR
       Absolute function(Fake) *
       _IOCCF7_DefaultInterruptHandler *
       _speedCalc *
         ___aldiv
         ___fladd
         ___flmul
           __Umul8_16
         ___lmul
           ___aldiv (ARG)
         ___xxtofl
           ___aldiv (ARG)
           ___lmul (ARG)
             ___aldiv (ARG)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _timerISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     20      40       5       80.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     4E      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      E      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      3       3      11        3.8%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      F1      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      F1      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Mar 20 18:11:26 2019

                                  __CFG_CP$OFF 0000                                             l69 0A90  
                              _timer0ReloadVal 005F                            __Umul8_16@word_mpld 0076  
                                          l350 0CAD                                            l441 07BA  
                                          l450 049B                                            l604 0FEE  
                                          l444 07DA                                            l454 04B7  
                                          l455 04C9                                            l449 0493  
                                          l458 055E                                            l591 078F  
                                          _abs 0B01                                            _pad 07A1  
                                          _rpm 0053                 ?_EUSART_SetFramingErrorHandler 00A0  
                                 __CFG_BORV$LO 0000                                            wreg 0009  
                                 __CFG_IESO$ON 0000                                   ___flmul@aexp 002D  
                                 ___flmul@bexp 002E         __end_of_IOCCF7_DefaultInterruptHandler 0003  
      __size_of_IOCCF7_DefaultInterruptHandler 0001                 _IOCCF7_DefaultInterruptHandler 0002  
                                 ___flmul@sign 0028                                   ___flmul@temp 0033  
                                 ___flmul@prod 002F                                   __CFG_LVP$OFF 0000  
                                 __CFG_ZCD$OFF 0000                                           ?_abs 00B3  
                                         l3102 07B0                                           l3112 07BC  
                                         l3130 06D6                                           l3106 07B8  
                                         l3210 04C5                                           l3116 07E8  
                                         l3204 04AF                                           l3134 06FE  
                                         l3070 0CDC                                           l3214 04F5  
                                         l3302 067B                                           l3136 0703  
                                         l3072 0CE5                                           l3224 04D0  
                                         l3232 056A                                           l3146 071A  
                                         l3066 0CB9                                           l3082 0BB5  
                                         l3242 057B                                           l3156 0762  
                                         l3148 0729                                           l3180 0F82  
                                         l3172 0F75                                           l3084 0BD6  
                                         l3092 0B20                                           l3236 0571  
                                         l3308 0685                                           l3420 0C73  
                                         l3158 076E                                           l3182 0F91  
                                         l3094 0B2C                                           l3246 0588  
                                         l3334 0ABE                                           l3430 0C8C  
                                         l3168 0F4D                                           l3280 061E  
                                         l3272 05E1                                           l3432 0C91  
                                         l3600 0D2A                                           l3186 0FC1  
                                         l3426 0C82                                           l3188 0FCD  
                                         l3292 0652                                           l3428 0C87  
                                         l3436 0C96                                           l3446 0AD6  
                                         l3288 064E                                           l3298 0675  
                                         l3566 0C47                                           l3646 0C9F  
                                         ?_pad 00B3                                           l3568 0C68  
                                         STR_1 1000                                           STR_2 100E  
                                         STR_3 1018                                           _LATA 010C  
                                         _LATB 010D                                           _LATC 010E  
                                         u4237 0AE5                                           u3710 070B  
                                         u4247 0C7E                                           u3645 07C6  
                                         u3745 074F                                           u3665 0B0B  
                                         u3595 0CDA                                           u3845 0FAF  
                                         u3935 04A7                                           u3880 0469  
                                         u3890 046A                                           u3965 0568  
                                         u3985 04E4                                           u3995 04F0  
                                         _TMR0 0015                                           _WPUA 020C  
                                         _WPUB 020D                                           _WPUC 020E  
                                 __CFG_WRT$OFF 0000                                  __CFG_FCMEN$ON 0000  
                                         abs@a 00B3                                           _dbuf 0120  
                                         _main 0CEE                                           _dtoa 044D  
                                         _prec 0050                                           _nout 004C  
                                         pad@i 00B7                                           pad@p 00B4  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         pad@w 00B9                                           btemp 007E  
                                         _puts 0B33                                  __CFG_BOREN$ON 0000  
                                         start 0014                                  __CFG_MCLRE$ON 0000  
                                        ??_abs 00B5                                          ??_pad 00B6  
                      __end_of_TMR0_Initialize 0B01                 ??_TMR0_DefaultInterruptHandler 0070  
                                ?_EUSART_Write 0070                 __size_of_OSCILLATOR_Initialize 0007  
                __end_of_OSCILLATOR_Initialize 0A4F                            __size_of_IOCCF7_ISR 000D  
                              __end_of___aldiv 0DF1                                __end_of___aodiv 07A1  
                              __end_of___fladd 044D                                          ?_main 0070  
                                        ?_dtoa 00BC                                __end_of___aomod 1000  
                                __CFG_WDTE$OFF 0000                                __end_of___flmul 0264  
                                        ?_puts 00B3                                          i1l240 0012  
                                        i1l236 000D                                          i1l556 0D80  
                                        i1l900 0257                                          i1l813 03CB  
                                        i1l834 0444                                          i1l826 042B  
                                        i1l940 0E63                                          i1l932 0E45  
                                        i1l926 0E0F                                          i1l792 02B1  
                                        i1l939 0E59                                          i1l796 0345  
                                        i1l798 0327                                          i1l994 0B5E  
                                 vfpfcnvrt@fmt 00DA                                          _TRISA 008C  
                                        _TRISB 008D                                          _TRISC 008E  
                                  _writeString 0AD4              __size_of_TMR0_SetInterruptHandler 0009  
                          ___lmul@multiplicand 002A                      ?_TMR0_SetInterruptHandler 00A0  
                             __end_of_TMR0_ISR 0AB3                        __end_of_PIN_MANAGER_IOC 0A36  
                                        _flags 00EE                                          _fputc 0CAE  
                                        _fputs 0BB2                                          _speed 0044  
                                        pad@fp 00BB                                          _width 004E  
                                        _putch 0A36                                          dtoa@d 00BC  
                                        dtoa@i 00D8                                          dtoa@n 00D0  
                                        dtoa@p 00CA                                          dtoa@s 00CE  
                                        dtoa@w 00CC                                          pclath 000A  
                                        puts@s 00B3                                          status 0003  
                                        wtemp0 007E                                __initialization 0016  
                                 __end_of_main 0D6F                                   __end_of_dtoa 059A  
                                 __end_of_puts 0B4E                                 ??_EUSART_Write 00A0  
                               __CFG_LPBOR$OFF 0000                    ?_INTERRUPT_InterruptManager 0070  
                                       ??_main 016D                                         ??_dtoa 00C4  
                                       ??_puts 00B5                                 __CFG_PLLEN$OFF 0000  
            _EUSART_DefaultFramingErrorHandler 0000                     _EUSART_OverrunErrorHandler 005B  
                                       ?_fputc 00A2                                         ?_fputs 00AA  
                                       _ANSELA 018C                                         ?_putch 0070  
                                       _ANSELB 018D                                         _ANSELC 018E  
                 ??_IOCCF7_SetInterruptHandler 00A2                                         _BORCON 0116  
                                       _RC1REG 0199                                         _RC1STA 019D  
                                       _RB7PPS 0E9F                                         i1l2312 027E  
                                       _ODCONA 028C                                         i1l2410 0366  
                                       i1l2402 0353                                         i1l2250 0BEE  
                                       _ODCONB 028D                                         _ODCONC 028E  
                                       i1l2412 0368                                         i1l2420 0378  
                                       i1l2340 02A9                                         i1l2316 0281  
                                       i1l2430 03C3                                         i1l2318 0289  
                                       i1l2510 005C                                         i1l2246 0BE3  
                                       i1l2336 02A6                                         i1l2176 0B58  
                                       i1l2600 01EF                                         i1l2290 0DDA  
                                       i1l2346 02BB                                         i1l2610 0218  
                                       i1l2506 0052                                         i1l2276 0DA1  
                                       i1l2268 0D91                                         i1l2460 03FC  
                                       i1l2452 03F1                                         i1l2620 0244  
                                       i1l2524 0075                                         i1l2508 0054  
                                       i1l2294 0DE8                                         i1l2286 0DCF  
                                       i1l2278 0DAF                                         i1l2446 03EA  
                                       i1l2438 03DD                                         i1l2454 03F3  
                                       i1l2614 022D                                         i1l2526 0077  
                                       i1l2464 03FE                                         i1l2384 0330  
                                       i1l2376 02F7                                         i1l2536 008D  
                                       i1l2528 007F                                         i1l2482 043B  
                                       i1l2386 0332                                         i1l2394 0341  
                                       i1l2650 0E32                                         i1l2660 0E4A  
                                       i1l2644 0E1E                                         i1l2486 043F  
                                       i1l2590 01D6                                         i1l2638 0E07  
                                       i1l2672 0E7E                                         i1l2648 0E22  
                                       i1l2658 0E57                                         i1l2826 0AA2  
                                       i1l2596 01ED                                         i1l2588 01BF  
                                       u212_25 0B5F                                         u300_25 01C2  
                                       u310_25 0221                                         u302_25 01CB  
                                       u311_25 0237                                         u231_25 0BEF  
                                       u240_25 0DC4                                         u232_25 0BF6  
                                       u320_25 0E51                                         u241_25 0DD0  
                                       u324_25 0E6B                                         u316_25 0E2B  
                   __end_of_EUSART_is_tx_ready 0AC1                                         u237_25 0DA4  
                                       u253_25 030B                                         u309_25 0206  
                                       u254_20 0315                                         u270_25 03DE  
                                       u318_25 0E3F                                         u255_20 0316  
                                       u239_25 0DB0                                         u280_25 0416  
                                       u265_25 036D                                         u266_23 038B  
                                       u258_25 0337                                         u295_25 0103  
                                       u296_25 0132                                         u297_25 0188  
                                       _OSCCON 0099                                         u298_25 019F  
                                       u299_25 01AE                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _TX1REG 019A  
                                       _TX1STA 019E                                   ?_resetCursor 0070  
                                       u368lld 06D3                                         u379lld 0F4A  
                             __end_of___xxtofl 0E87                                 __CFG_PWRTE$OFF 0000  
                                 vfprintf@cfmt 0164                                         ___lmul 0BDB  
                                    ??___aldiv 0078                                      ??___aodiv 00B0  
                                    ??___fladd 0020                                      ??___aomod 00B0  
                               __CFG_STVREN$ON 0000                                      ??___flmul 0079  
                                       _hrDisp 0140                               ?_TMR0_Initialize 0070  
                                       _printf 0AC1                                         pad@buf 00B3  
                                       dtoa@fp 00C9                                         _strlen 0B1A  
          __size_of_IOCCF7_SetInterruptHandler 0009                                         fputc@c 00A2  
                                       fputs@c 00B0                                         fputs@i 00B1  
                                       fputs@s 00AA                             __size_of__Umul8_16 001F  
                             __end_of_timerISR 0A8E                               __end_of_vfprintf 0C71  
     TMR0_SetInterruptHandler@InterruptHandler 00A0     IOCCF7_SetInterruptHandler@InterruptHandler 00A0  
                             ?_PIN_MANAGER_IOC 0070                                   ??_IOCCF7_ISR 007E  
                                 ___xxtofl@arg 0038                                   ___xxtofl@exp 0037  
                            _SYSTEM_Initialize 07F4                                   ___xxtofl@val 002E  
                      __end_of__initialization 0034                             ?_SYSTEM_Initialize 0070  
                               __pcstackCOMMON 0070                                   __pidataBANK2 0B6D  
                          ??_SYSTEM_Initialize 00A3                                      ?_TMR0_ISR 0070  
                                __end_of_fputc 0CEE                                  __end_of_fputs 0BDB  
                                __end_of_putch 0A3C                             __end_of_IOCCF7_ISR 0AA5  
                               _OPTION_REGbits 0095                ??_EUSART_SetOverrunErrorHandler 00A2  
                                      ??_fputc 00A5                      __end_of_SYSTEM_Initialize 0800  
                                      ??_fputs 00AD                                        ??_putch 00A1  
                                   __pbssBANK0 0040                                     __pbssBANK1 00EE  
                                   __pbssBANK2 0120                           __end_of_EUSART_Write 0A98  
                            __end_of__Umul8_16 0B6D                                     __pmaintext 0CEE  
             __end_of_TMR0_SetInterruptHandler 0A84                                        ?___lmul 0026  
                                   ??_TMR0_ISR 0070                                __CFG_PPS1WAY$ON 0000  
                           __size_of_setCursor 003D                                     __pintentry 0004  
                               ___lmul@product 0079                                        ?_printf 0166  
                                      ?_strlen 00A0                             __size_of_speedCalc 009A  
                              __CFG_WDTCCS$SWC 0000                                      ?___xxtofl 002E  
                                 ?_writeString 0070                             __size_of_vfpfcnvrt 0110  
                                      _OSCTUNE 0098                                        _SLRCONA 030C  
                                      _SLRCONB 030D                                        _SLRCONC 030E  
           __end_of_IOCCF7_SetInterruptHandler 0A7B                     _IOCCF7_SetInterruptHandler 0A72  
                     ??_EUSART_SetErrorHandler 00A2                           __size_of_resetCursor 0008  
                                    ?_timerISR 0070                                        ___aldiv 0D6F  
                                      ___aodiv 06AA                                        ___fladd 0264  
                                      ___aomod 0F21                                __size_of___lmul 0030  
                                      ___flmul 0038                                      ?_vfprintf 0160  
                                      __ptext1 0AD4                                        __ptext2 0C71  
                                      __ptext3 0AB3                                        __ptext4 0A4F  
                                      __ptext5 0B33                                        __ptext6 0AC1  
                                      __ptext7 0C3E                                        __ptext8 059A  
                                      __ptext9 044D                                __size_of_printf 0013  
                              __size_of_strlen 0019                                        _counter 0048  
                        _OSCILLATOR_Initialize 0A48                                   __size_of_abs 0019  
                                 __size_of_pad 0053                                     ??___xxtofl 0032  
                             ___aldiv@dividend 0074                       ??_PIN_MANAGER_Initialize 00A2  
                                    _IOCCFbits 0399                                      _IOCCNbits 0398  
                                    _IOCCPbits 0397                     __size_of_SYSTEM_Initialize 000C  
                                      clrloop0 0A3D                           end_of_initialization 0034  
                            __end_of_setCursor 0CAE          __end_of_EUSART_SetOverrunErrorHandler 0A72  
       __size_of_EUSART_SetOverrunErrorHandler 0009                  _EUSART_SetOverrunErrorHandler 0A69  
                                      fputc@fp 00A4                                        init_ram 0A42  
                                      fputs@fp 00AC                                        initloop 0A43  
                            __end_of_speedCalc 0F21                              _EUSART_Initialize 0B8D  
                           ?_EUSART_Initialize 0070                              __end_of_vfpfcnvrt 06AA  
                                   ??_timerISR 0070                               ___aldiv@quotient 0022  
                           _EUSART_is_tx_ready 0AB3                                     ??_vfprintf 00EC  
                                      strlen@a 00A3                                        strlen@s 00A4  
                          ??_EUSART_Initialize 00A2                                   _distanceDisp 014D  
                     _TMR0_SetInterruptHandler 0A7B                            ?_EUSART_is_tx_ready 0070  
                                  ___fladd@grs 007B                               __CFG_FOSC$INTOSC 0000  
                                ___xxtofl@sign 0036                          __size_of_EUSART_Write 000A  
              __size_of_EUSART_SetErrorHandler 0009                                    ___flmul@grs 0029  
                    __end_of_EUSART_Initialize 0BB2                           ??_EUSART_is_tx_ready 00A0  
                               _speedCalc$1213 003C                                 __end_of___lmul 0C0B  
                   _EUSART_DefaultErrorHandler 0000                                    vfpfcnvrt@ap 00DB  
                                  vfpfcnvrt@fp 00EB                                    vfpfcnvrt@ll 00E1  
                                  vfpfcnvrt@vp 00E9                                   _EUSART_Write 0A8E  
                            __size_of_TMR0_ISR 000E                         ?_OSCILLATOR_Initialize 0070  
                            writeString@string 00B8                                 __end_of_printf 0AD4  
                               __end_of_strlen 0B33                            start_initialization 0016  
                     __size_of_TMR0_Initialize 0018                __size_of_PIN_MANAGER_Initialize 0033  
                                  __end_of_abs 0B1A                                    __end_of_pad 07F4  
                         __size_of_writeString 0015                         _EUSART_is_tx_ready$167 00A0  
                                  putch@txData 00A1                       __size_of_PIN_MANAGER_IOC 0006  
               ?_EUSART_SetOverrunErrorHandler 00A0                                    vfprintf@fmt 0160  
                   _EUSART_FramingErrorHandler 005D                                       ??___lmul 0079  
                       _EUSART_SetErrorHandler 0A57                                      __Umul8_16 0B4E  
                                  __pdataBANK2 0140                                       ??_printf 016C  
                                     ??_strlen 00A2                                      ___fladd@a 0074  
                                    ___fladd@b 0070                                      ___flmul@a 0024  
                                    ___flmul@b 0020                                      ___latbits 0002  
                                __pcstackBANK0 0020                                  __pcstackBANK1 00A0  
                                __pcstackBANK2 0160                                  __pcstackBANK3 01A0  
                             ___aodiv@dividend 00A8                              __size_of___xxtofl 0096  
                  ?_IOCCF7_SetInterruptHandler 00A0                     __size_of_EUSART_Initialize 0025  
                        _TMR0_InterruptHandler 0057                                      __pnvBANK0 0057  
                                    __pnvBANK2 016E                         _PIN_MANAGER_Initialize 0C0B  
                                     ?___aldiv 0070                                       ?___aodiv 00A0  
                                     ?___fladd 0070                                       ?___aomod 00A0  
                             ___aodiv@quotient 00B3                                       ?___flmul 0020  
                                   ?__Umul8_16 0070                                     setCursor@a 00A4  
                                   setCursor@b 00A1                              __size_of_timerISR 000A  
                 ??_INTERRUPT_InterruptManager 007E                              __size_of_vfprintf 0033  
                                     _BAUD1CON 019F                                 __size_of_fputc 0040  
                               __size_of_fputs 0029                                 __size_of_putch 0006  
                              ___aldiv@divisor 0070                              ??_TMR0_Initialize 00A2  
                                ??_resetCursor 00B8                                ___aldiv@counter 0020  
       EUSART_SetErrorHandler@interruptHandler 00A0                                      _setCursor 0C71  
                                    clear_ram0 0A3C                              _eusartRxLastError 0052  
          __size_of_INTERRUPT_InterruptManager 0010                     ??_TMR0_SetInterruptHandler 00A2  
                                     _PIR1bits 0010                ??_EUSART_SetFramingErrorHandler 00A2  
                                    _puts$1032 00B7                                      _speedCalc 0E87  
                                    _speedDisp 0158               ??_IOCCF7_DefaultInterruptHandler 0070  
              ?_IOCCF7_DefaultInterruptHandler 0070                           __CFG_WDTCPS$WDTCPS1F 0000  
                                     _TMR0_ISR 0AA5              _EUSART_DefaultOverrunErrorHandler 0000  
                            ??_PIN_MANAGER_IOC 007E                                      _vfpfcnvrt 059A  
                            ___lmul@multiplier 0026                                     ?_setCursor 00A1  
                                   vfprintf@ap 0162                                     vfprintf@fp 0163  
                          __end_of_resetCursor 0A57                                     ?_speedCalc 0070  
                      ??_OSCILLATOR_Initialize 00A0                                    ??__Umul8_16 0072  
                          _EUSART_ErrorHandler 016E                               __size_of___aldiv 0082  
                             __size_of___aodiv 00F7                               __size_of___fladd 01E9  
                             __size_of___aomod 00DF                               __size_of___flmul 022C  
                                   ?_vfpfcnvrt 00DA                                ___aodiv@divisor 00A0  
                              ___aodiv@counter 00B1                                       ___xxtofl 0DF1  
                                     _dtoa$686 00C7                                       __ptext10 07A1  
                                     __ptext11 0B1A                                       __ptext20 0AE9  
                                     __ptext12 0BB2                                       __ptext21 0A7B  
                                     __ptext13 0CAE                                       __ptext30 0AA5  
                                     __ptext22 0C0B                                       __ptext14 0A36  
                                     __ptext31 0003                                       __ptext23 0A72  
                                     __ptext15 0A8E                                       __ptext40 0B4E  
                                     __ptext32 0A84                                       __ptext24 0A48  
                                     __ptext16 0B01                                       __ptext41 0264  
                                     __ptext33 0A30                                       __ptext25 0B8D  
                                     __ptext17 0F21                                       __ptext42 0D6F  
                                     __ptext34 0A98                                       __ptext26 0A69  
                                     __ptext18 06AA                                       __ptext35 0002  
                                     __ptext27 0A60                                       __ptext19 07F4  
                                     __ptext36 0E87                                       __ptext28 0A57  
                                     __ptext37 0DF1                                       __ptext38 0BDB  
                                     __ptext39 0038                                       _distance 0040  
                                   _IOCCF7_ISR 0A98                                  __size_of_main 0081  
                                __size_of_dtoa 014D                                  __size_of_puts 001B  
                  __size_of_EUSART_is_tx_ready 000E           __end_of_TMR0_DefaultInterruptHandler 0004  
        __size_of_TMR0_DefaultInterruptHandler 0001                   _TMR0_DefaultInterruptHandler 0003  
                         __CFG_WDTCWS$WDTCWSSW 0000                        ?_EUSART_SetErrorHandler 00A0  
                                   _RC1STAbits 019D  EUSART_SetOverrunErrorHandler@interruptHandler 00A0  
                                     _timerISR 0A84                                       int$flags 007E  
                                     _vfprintf 0C3E             __end_of_INTERRUPT_InterruptManager 0014  
                   _INTERRUPT_InterruptManager 0004                                      printf@fmt 0166  
        __end_of_EUSART_SetFramingErrorHandler 0A69         __size_of_EUSART_SetFramingErrorHandler 0009  
                _EUSART_SetFramingErrorHandler 0A60                               ___aomod@dividend 00A8  
                                ??_writeString 00B8                                     _INTCONbits 000B  
                                     intlevel1 0000                        ?_PIN_MANAGER_Initialize 0070  
                                  _resetCursor 0A4F                 __end_of_EUSART_SetErrorHandler 0A60  
                                  ??_setCursor 00A2                              __CFG_CLKOUTEN$OFF 0000  
                ?_TMR0_DefaultInterruptHandler 0070                                    ??_speedCalc 007E  
                                     printf@ap 01A2  EUSART_SetFramingErrorHandler@interruptHandler 00A0  
                              ___aomod@divisor 00A0                                    ??_vfpfcnvrt 00DC  
                              ___aomod@counter 00B1                                  __pstringtext1 1000  
                                __pstringtext2 100E                                  __pstringtext3 1018  
                                __pstringtext4 0000                         __Umul8_16@multiplicand 0070  
                                   _OPTION_REG 0095                                _TMR0_Initialize 0AE9  
                                 ___aldiv@sign 0021                                     _TX1STAbits 019E  
                                ___fladd@signs 0078                             EUSART_Write@txData 00A0  
                          __end_of_writeString 0AE9                                   ___aodiv@sign 00B2  
               __end_of_PIN_MANAGER_Initialize 0C3E                                    ?_IOCCF7_ISR 0070  
                                 ___fladd@aexp 0079                                   ___fladd@bexp 007A  
                              _PIN_MANAGER_IOC 0A30                           __Umul8_16@multiplier 0078  
                                 ___aomod@sign 00B2                        _IOCCF7_InterruptHandler 0059  
                            __Umul8_16@product 0074  
