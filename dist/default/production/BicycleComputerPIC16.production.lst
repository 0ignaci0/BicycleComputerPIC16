

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Apr 07 22:47:29 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1619
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
     7                           	psect	stringtext1,global,class=STRCODE,delta=2
     8                           	psect	stringtext2,global,class=STRCODE,delta=2
     9                           	psect	stringtext3,global,class=STRCODE,delta=2
    10                           	psect	stringtext4,global,class=STRCODE,delta=2
    11                           	psect	stringtext5,global,class=STRCODE,delta=2
    12                           	psect	stringtext6,global,class=STRCODE,delta=2
    13                           	psect	cinit,global,class=CODE,merge=1,delta=2
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    18                           	psect	inittext,global,class=CODE,delta=2
    19                           	psect	clrtext,global,class=CODE,delta=2
    20                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    21                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    22                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    24                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    25                           	psect	text1,local,class=CODE,merge=1,delta=2
    26                           	psect	text2,local,class=CODE,merge=1,delta=2
    27                           	psect	text3,local,class=CODE,merge=1,delta=2
    28                           	psect	text4,local,class=CODE,merge=1,delta=2
    29                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text7,local,class=CODE,merge=1,delta=2
    32                           	psect	text8,local,class=CODE,merge=1,delta=2
    33                           	psect	text9,local,class=CODE,merge=1,delta=2
    34                           	psect	text10,local,class=CODE,merge=1,delta=2
    35                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text14,local,class=CODE,merge=1,delta=2
    39                           	psect	text15,local,class=CODE,merge=1,delta=2
    40                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text21,local,class=CODE,merge=1,delta=2
    46                           	psect	text22,local,class=CODE,merge=1,delta=2
    47                           	psect	text23,local,class=CODE,merge=1,delta=2
    48                           	psect	text24,local,class=CODE,merge=1,delta=2
    49                           	psect	text25,local,class=CODE,merge=1,delta=2
    50                           	psect	text26,local,class=CODE,merge=1,delta=2
    51                           	psect	text27,local,class=CODE,merge=1,delta=2
    52                           	psect	text28,local,class=CODE,merge=1,delta=2
    53                           	psect	text29,local,class=CODE,merge=1,delta=2
    54                           	psect	text30,local,class=CODE,merge=1,delta=2
    55                           	psect	intentry,global,class=CODE,delta=2
    56                           	psect	text32,local,class=CODE,merge=1,delta=2
    57                           	psect	text33,local,class=CODE,merge=1,delta=2
    58                           	psect	text34,local,class=CODE,merge=1,delta=2
    59                           	psect	text35,local,class=CODE,merge=1,delta=2,group=1
    60                           	psect	text36,local,class=CODE,merge=1,delta=2
    61                           	psect	text37,local,class=CODE,merge=1,delta=2
    62                           	psect	text38,local,class=CODE,merge=1,delta=2
    63                           	psect	text39,local,class=CODE,merge=1,delta=2
    64                           	psect	text40,local,class=CODE,merge=1,delta=2
    65                           	psect	text41,local,class=CODE,merge=1,delta=2,group=1
    66                           	psect	text42,local,class=CODE,merge=1,delta=2,group=1
    67                           	psect	text43,local,class=CODE,merge=1,delta=2,group=1
    68                           	psect	text44,local,class=CODE,merge=1,delta=2,group=1
    69                           	psect	text45,local,class=CODE,merge=1,delta=2,group=1
    70                           	dabs	1,0x7E,2
    71  0000                     
    72                           ; Version 2.05
    73                           ; Generated 20/12/2018 GMT
    74                           ; 
    75                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    76                           ; All rights reserved.
    77                           ; 
    78                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    79                           ; 
    80                           ; Redistribution and use in source and binary forms, with or without modification, are
    81                           ; permitted provided that the following conditions are met:
    82                           ; 
    83                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    84                           ;        conditions and the following disclaimer.
    85                           ; 
    86                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    87                           ;        of conditions and the following disclaimer in the documentation and/or other
    88                           ;        materials provided with the distribution.
    89                           ; 
    90                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    91                           ;        software without specific prior written permission.
    92                           ; 
    93                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    94                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    95                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    96                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    97                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    98                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    99                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   100                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   101                           ; 
   102                           ; 
   103                           ; Code-generator required, PIC16F1619 Definitions
   104                           ; 
   105                           ; SFR Addresses
   106  0000                     	;# 
   107  0001                     	;# 
   108  0002                     	;# 
   109  0003                     	;# 
   110  0004                     	;# 
   111  0005                     	;# 
   112  0006                     	;# 
   113  0007                     	;# 
   114  0008                     	;# 
   115  0009                     	;# 
   116  000A                     	;# 
   117  000B                     	;# 
   118  000C                     	;# 
   119  000D                     	;# 
   120  000E                     	;# 
   121  0010                     	;# 
   122  0011                     	;# 
   123  0012                     	;# 
   124  0013                     	;# 
   125  0014                     	;# 
   126  0015                     	;# 
   127  0016                     	;# 
   128  0016                     	;# 
   129  0017                     	;# 
   130  0018                     	;# 
   131  0019                     	;# 
   132  001A                     	;# 
   133  001A                     	;# 
   134  001B                     	;# 
   135  001B                     	;# 
   136  001C                     	;# 
   137  001D                     	;# 
   138  001E                     	;# 
   139  001F                     	;# 
   140  008C                     	;# 
   141  008D                     	;# 
   142  008E                     	;# 
   143  0090                     	;# 
   144  0091                     	;# 
   145  0092                     	;# 
   146  0093                     	;# 
   147  0094                     	;# 
   148  0095                     	;# 
   149  0096                     	;# 
   150  0098                     	;# 
   151  0099                     	;# 
   152  009A                     	;# 
   153  009B                     	;# 
   154  009B                     	;# 
   155  009C                     	;# 
   156  009D                     	;# 
   157  009E                     	;# 
   158  009F                     	;# 
   159  010C                     	;# 
   160  010D                     	;# 
   161  010E                     	;# 
   162  0111                     	;# 
   163  0112                     	;# 
   164  0113                     	;# 
   165  0114                     	;# 
   166  0115                     	;# 
   167  0116                     	;# 
   168  0117                     	;# 
   169  0118                     	;# 
   170  0119                     	;# 
   171  011C                     	;# 
   172  018C                     	;# 
   173  018D                     	;# 
   174  018E                     	;# 
   175  0191                     	;# 
   176  0191                     	;# 
   177  0192                     	;# 
   178  0193                     	;# 
   179  0193                     	;# 
   180  0194                     	;# 
   181  0195                     	;# 
   182  0196                     	;# 
   183  0197                     	;# 
   184  0199                     	;# 
   185  0199                     	;# 
   186  0199                     	;# 
   187  019A                     	;# 
   188  019A                     	;# 
   189  019A                     	;# 
   190  019B                     	;# 
   191  019B                     	;# 
   192  019B                     	;# 
   193  019B                     	;# 
   194  019B                     	;# 
   195  019C                     	;# 
   196  019C                     	;# 
   197  019C                     	;# 
   198  019D                     	;# 
   199  019D                     	;# 
   200  019D                     	;# 
   201  019E                     	;# 
   202  019E                     	;# 
   203  019E                     	;# 
   204  019F                     	;# 
   205  019F                     	;# 
   206  019F                     	;# 
   207  019F                     	;# 
   208  019F                     	;# 
   209  020C                     	;# 
   210  020D                     	;# 
   211  020E                     	;# 
   212  0211                     	;# 
   213  0211                     	;# 
   214  0212                     	;# 
   215  0212                     	;# 
   216  0213                     	;# 
   217  0213                     	;# 
   218  0214                     	;# 
   219  0214                     	;# 
   220  0215                     	;# 
   221  0215                     	;# 
   222  0215                     	;# 
   223  0215                     	;# 
   224  0216                     	;# 
   225  0216                     	;# 
   226  0217                     	;# 
   227  0217                     	;# 
   228  028C                     	;# 
   229  028D                     	;# 
   230  028E                     	;# 
   231  0291                     	;# 
   232  0291                     	;# 
   233  0292                     	;# 
   234  0293                     	;# 
   235  0294                     	;# 
   236  0298                     	;# 
   237  0298                     	;# 
   238  0299                     	;# 
   239  029A                     	;# 
   240  029B                     	;# 
   241  029E                     	;# 
   242  030C                     	;# 
   243  030D                     	;# 
   244  030E                     	;# 
   245  038C                     	;# 
   246  038D                     	;# 
   247  038E                     	;# 
   248  0391                     	;# 
   249  0392                     	;# 
   250  0393                     	;# 
   251  0394                     	;# 
   252  0395                     	;# 
   253  0396                     	;# 
   254  0397                     	;# 
   255  0398                     	;# 
   256  0399                     	;# 
   257  040E                     	;# 
   258  0413                     	;# 
   259  0413                     	;# 
   260  0414                     	;# 
   261  0414                     	;# 
   262  0415                     	;# 
   263  0416                     	;# 
   264  0417                     	;# 
   265  0418                     	;# 
   266  041A                     	;# 
   267  041A                     	;# 
   268  041B                     	;# 
   269  041B                     	;# 
   270  041C                     	;# 
   271  041D                     	;# 
   272  041E                     	;# 
   273  041F                     	;# 
   274  0493                     	;# 
   275  0494                     	;# 
   276  0495                     	;# 
   277  0496                     	;# 
   278  049A                     	;# 
   279  049B                     	;# 
   280  049C                     	;# 
   281  049D                     	;# 
   282  058C                     	;# 
   283  058C                     	;# 
   284  058D                     	;# 
   285  058E                     	;# 
   286  058E                     	;# 
   287  058F                     	;# 
   288  0590                     	;# 
   289  0590                     	;# 
   290  0591                     	;# 
   291  0592                     	;# 
   292  0592                     	;# 
   293  0593                     	;# 
   294  0594                     	;# 
   295  0594                     	;# 
   296  0595                     	;# 
   297  0596                     	;# 
   298  0596                     	;# 
   299  0597                     	;# 
   300  0598                     	;# 
   301  0599                     	;# 
   302  059A                     	;# 
   303  059B                     	;# 
   304  059B                     	;# 
   305  059C                     	;# 
   306  059D                     	;# 
   307  060C                     	;# 
   308  060C                     	;# 
   309  060D                     	;# 
   310  060E                     	;# 
   311  060F                     	;# 
   312  060F                     	;# 
   313  0610                     	;# 
   314  0611                     	;# 
   315  0612                     	;# 
   316  0613                     	;# 
   317  0614                     	;# 
   318  0617                     	;# 
   319  0617                     	;# 
   320  0618                     	;# 
   321  0619                     	;# 
   322  061A                     	;# 
   323  061A                     	;# 
   324  061B                     	;# 
   325  061C                     	;# 
   326  0691                     	;# 
   327  0692                     	;# 
   328  0693                     	;# 
   329  0694                     	;# 
   330  0695                     	;# 
   331  0696                     	;# 
   332  0697                     	;# 
   333  0699                     	;# 
   334  069A                     	;# 
   335  0711                     	;# 
   336  0712                     	;# 
   337  0713                     	;# 
   338  0714                     	;# 
   339  0715                     	;# 
   340  0718                     	;# 
   341  0718                     	;# 
   342  0719                     	;# 
   343  071A                     	;# 
   344  071A                     	;# 
   345  071B                     	;# 
   346  071C                     	;# 
   347  071D                     	;# 
   348  0791                     	;# 
   349  0791                     	;# 
   350  0792                     	;# 
   351  0793                     	;# 
   352  0793                     	;# 
   353  0794                     	;# 
   354  0795                     	;# 
   355  0795                     	;# 
   356  0796                     	;# 
   357  0797                     	;# 
   358  0797                     	;# 
   359  0798                     	;# 
   360  0799                     	;# 
   361  079A                     	;# 
   362  080C                     	;# 
   363  080C                     	;# 
   364  080D                     	;# 
   365  080E                     	;# 
   366  080E                     	;# 
   367  080F                     	;# 
   368  0810                     	;# 
   369  0810                     	;# 
   370  0811                     	;# 
   371  0812                     	;# 
   372  0812                     	;# 
   373  0813                     	;# 
   374  0814                     	;# 
   375  0815                     	;# 
   376  0816                     	;# 
   377  0817                     	;# 
   378  0818                     	;# 
   379  0819                     	;# 
   380  081A                     	;# 
   381  081A                     	;# 
   382  081B                     	;# 
   383  081C                     	;# 
   384  081C                     	;# 
   385  081D                     	;# 
   386  088C                     	;# 
   387  088D                     	;# 
   388  088E                     	;# 
   389  088F                     	;# 
   390  088F                     	;# 
   391  0890                     	;# 
   392  0891                     	;# 
   393  0892                     	;# 
   394  0893                     	;# 
   395  0893                     	;# 
   396  0894                     	;# 
   397  0895                     	;# 
   398  0896                     	;# 
   399  0897                     	;# 
   400  0897                     	;# 
   401  0898                     	;# 
   402  0899                     	;# 
   403  0D8C                     	;# 
   404  0D8C                     	;# 
   405  0D8D                     	;# 
   406  0D8E                     	;# 
   407  0D8F                     	;# 
   408  0D8F                     	;# 
   409  0D90                     	;# 
   410  0D91                     	;# 
   411  0D92                     	;# 
   412  0D92                     	;# 
   413  0D93                     	;# 
   414  0D94                     	;# 
   415  0D95                     	;# 
   416  0D95                     	;# 
   417  0D96                     	;# 
   418  0D97                     	;# 
   419  0D98                     	;# 
   420  0D99                     	;# 
   421  0D9A                     	;# 
   422  0D9B                     	;# 
   423  0D9C                     	;# 
   424  0D9D                     	;# 
   425  0D9E                     	;# 
   426  0D9E                     	;# 
   427  0D9F                     	;# 
   428  0DA0                     	;# 
   429  0DA1                     	;# 
   430  0DA1                     	;# 
   431  0DA2                     	;# 
   432  0DA3                     	;# 
   433  0DA4                     	;# 
   434  0DA4                     	;# 
   435  0DA5                     	;# 
   436  0DA6                     	;# 
   437  0DA7                     	;# 
   438  0DA7                     	;# 
   439  0DA8                     	;# 
   440  0DA9                     	;# 
   441  0DAA                     	;# 
   442  0DAB                     	;# 
   443  0DAC                     	;# 
   444  0DAD                     	;# 
   445  0DAE                     	;# 
   446  0DAF                     	;# 
   447  0E0F                     	;# 
   448  0E10                     	;# 
   449  0E11                     	;# 
   450  0E12                     	;# 
   451  0E13                     	;# 
   452  0E14                     	;# 
   453  0E15                     	;# 
   454  0E16                     	;# 
   455  0E17                     	;# 
   456  0E18                     	;# 
   457  0E19                     	;# 
   458  0E1A                     	;# 
   459  0E1B                     	;# 
   460  0E1C                     	;# 
   461  0E1D                     	;# 
   462  0E1E                     	;# 
   463  0E1F                     	;# 
   464  0E20                     	;# 
   465  0E21                     	;# 
   466  0E22                     	;# 
   467  0E23                     	;# 
   468  0E24                     	;# 
   469  0E25                     	;# 
   470  0E26                     	;# 
   471  0E27                     	;# 
   472  0E28                     	;# 
   473  0E29                     	;# 
   474  0E2A                     	;# 
   475  0E2B                     	;# 
   476  0E2C                     	;# 
   477  0E2D                     	;# 
   478  0E2E                     	;# 
   479  0E90                     	;# 
   480  0E91                     	;# 
   481  0E92                     	;# 
   482  0E94                     	;# 
   483  0E95                     	;# 
   484  0E9C                     	;# 
   485  0E9D                     	;# 
   486  0E9E                     	;# 
   487  0E9F                     	;# 
   488  0EA0                     	;# 
   489  0EA1                     	;# 
   490  0EA2                     	;# 
   491  0EA3                     	;# 
   492  0EA4                     	;# 
   493  0EA5                     	;# 
   494  0EA6                     	;# 
   495  0EA7                     	;# 
   496  0F0F                     	;# 
   497  0F10                     	;# 
   498  0F11                     	;# 
   499  0F12                     	;# 
   500  0F13                     	;# 
   501  0F14                     	;# 
   502  0F15                     	;# 
   503  0F16                     	;# 
   504  0F17                     	;# 
   505  0F18                     	;# 
   506  0F19                     	;# 
   507  0F1A                     	;# 
   508  0F1B                     	;# 
   509  0F1C                     	;# 
   510  0F1D                     	;# 
   511  0F1E                     	;# 
   512  0F1F                     	;# 
   513  0F20                     	;# 
   514  0F21                     	;# 
   515  0F22                     	;# 
   516  0F23                     	;# 
   517  0F24                     	;# 
   518  0F25                     	;# 
   519  0F26                     	;# 
   520  0F27                     	;# 
   521  0F28                     	;# 
   522  0F29                     	;# 
   523  0F2A                     	;# 
   524  0F2B                     	;# 
   525  0F2C                     	;# 
   526  0F2D                     	;# 
   527  0F2E                     	;# 
   528  0F2F                     	;# 
   529  0F30                     	;# 
   530  0F31                     	;# 
   531  0F32                     	;# 
   532  0F33                     	;# 
   533  0F34                     	;# 
   534  0F35                     	;# 
   535  0F36                     	;# 
   536  0F37                     	;# 
   537  0FE4                     	;# 
   538  0FE5                     	;# 
   539  0FE6                     	;# 
   540  0FE7                     	;# 
   541  0FE8                     	;# 
   542  0FE9                     	;# 
   543  0FEA                     	;# 
   544  0FEB                     	;# 
   545  0FED                     	;# 
   546  0FEE                     	;# 
   547  0FEF                     	;# 
   548  0000                     	;# 
   549  0001                     	;# 
   550  0002                     	;# 
   551  0003                     	;# 
   552  0004                     	;# 
   553  0005                     	;# 
   554  0006                     	;# 
   555  0007                     	;# 
   556  0008                     	;# 
   557  0009                     	;# 
   558  000A                     	;# 
   559  000B                     	;# 
   560  000C                     	;# 
   561  000D                     	;# 
   562  000E                     	;# 
   563  0010                     	;# 
   564  0011                     	;# 
   565  0012                     	;# 
   566  0013                     	;# 
   567  0014                     	;# 
   568  0015                     	;# 
   569  0016                     	;# 
   570  0016                     	;# 
   571  0017                     	;# 
   572  0018                     	;# 
   573  0019                     	;# 
   574  001A                     	;# 
   575  001A                     	;# 
   576  001B                     	;# 
   577  001B                     	;# 
   578  001C                     	;# 
   579  001D                     	;# 
   580  001E                     	;# 
   581  001F                     	;# 
   582  008C                     	;# 
   583  008D                     	;# 
   584  008E                     	;# 
   585  0090                     	;# 
   586  0091                     	;# 
   587  0092                     	;# 
   588  0093                     	;# 
   589  0094                     	;# 
   590  0095                     	;# 
   591  0096                     	;# 
   592  0098                     	;# 
   593  0099                     	;# 
   594  009A                     	;# 
   595  009B                     	;# 
   596  009B                     	;# 
   597  009C                     	;# 
   598  009D                     	;# 
   599  009E                     	;# 
   600  009F                     	;# 
   601  010C                     	;# 
   602  010D                     	;# 
   603  010E                     	;# 
   604  0111                     	;# 
   605  0112                     	;# 
   606  0113                     	;# 
   607  0114                     	;# 
   608  0115                     	;# 
   609  0116                     	;# 
   610  0117                     	;# 
   611  0118                     	;# 
   612  0119                     	;# 
   613  011C                     	;# 
   614  018C                     	;# 
   615  018D                     	;# 
   616  018E                     	;# 
   617  0191                     	;# 
   618  0191                     	;# 
   619  0192                     	;# 
   620  0193                     	;# 
   621  0193                     	;# 
   622  0194                     	;# 
   623  0195                     	;# 
   624  0196                     	;# 
   625  0197                     	;# 
   626  0199                     	;# 
   627  0199                     	;# 
   628  0199                     	;# 
   629  019A                     	;# 
   630  019A                     	;# 
   631  019A                     	;# 
   632  019B                     	;# 
   633  019B                     	;# 
   634  019B                     	;# 
   635  019B                     	;# 
   636  019B                     	;# 
   637  019C                     	;# 
   638  019C                     	;# 
   639  019C                     	;# 
   640  019D                     	;# 
   641  019D                     	;# 
   642  019D                     	;# 
   643  019E                     	;# 
   644  019E                     	;# 
   645  019E                     	;# 
   646  019F                     	;# 
   647  019F                     	;# 
   648  019F                     	;# 
   649  019F                     	;# 
   650  019F                     	;# 
   651  020C                     	;# 
   652  020D                     	;# 
   653  020E                     	;# 
   654  0211                     	;# 
   655  0211                     	;# 
   656  0212                     	;# 
   657  0212                     	;# 
   658  0213                     	;# 
   659  0213                     	;# 
   660  0214                     	;# 
   661  0214                     	;# 
   662  0215                     	;# 
   663  0215                     	;# 
   664  0215                     	;# 
   665  0215                     	;# 
   666  0216                     	;# 
   667  0216                     	;# 
   668  0217                     	;# 
   669  0217                     	;# 
   670  028C                     	;# 
   671  028D                     	;# 
   672  028E                     	;# 
   673  0291                     	;# 
   674  0291                     	;# 
   675  0292                     	;# 
   676  0293                     	;# 
   677  0294                     	;# 
   678  0298                     	;# 
   679  0298                     	;# 
   680  0299                     	;# 
   681  029A                     	;# 
   682  029B                     	;# 
   683  029E                     	;# 
   684  030C                     	;# 
   685  030D                     	;# 
   686  030E                     	;# 
   687  038C                     	;# 
   688  038D                     	;# 
   689  038E                     	;# 
   690  0391                     	;# 
   691  0392                     	;# 
   692  0393                     	;# 
   693  0394                     	;# 
   694  0395                     	;# 
   695  0396                     	;# 
   696  0397                     	;# 
   697  0398                     	;# 
   698  0399                     	;# 
   699  040E                     	;# 
   700  0413                     	;# 
   701  0413                     	;# 
   702  0414                     	;# 
   703  0414                     	;# 
   704  0415                     	;# 
   705  0416                     	;# 
   706  0417                     	;# 
   707  0418                     	;# 
   708  041A                     	;# 
   709  041A                     	;# 
   710  041B                     	;# 
   711  041B                     	;# 
   712  041C                     	;# 
   713  041D                     	;# 
   714  041E                     	;# 
   715  041F                     	;# 
   716  0493                     	;# 
   717  0494                     	;# 
   718  0495                     	;# 
   719  0496                     	;# 
   720  049A                     	;# 
   721  049B                     	;# 
   722  049C                     	;# 
   723  049D                     	;# 
   724  058C                     	;# 
   725  058C                     	;# 
   726  058D                     	;# 
   727  058E                     	;# 
   728  058E                     	;# 
   729  058F                     	;# 
   730  0590                     	;# 
   731  0590                     	;# 
   732  0591                     	;# 
   733  0592                     	;# 
   734  0592                     	;# 
   735  0593                     	;# 
   736  0594                     	;# 
   737  0594                     	;# 
   738  0595                     	;# 
   739  0596                     	;# 
   740  0596                     	;# 
   741  0597                     	;# 
   742  0598                     	;# 
   743  0599                     	;# 
   744  059A                     	;# 
   745  059B                     	;# 
   746  059B                     	;# 
   747  059C                     	;# 
   748  059D                     	;# 
   749  060C                     	;# 
   750  060C                     	;# 
   751  060D                     	;# 
   752  060E                     	;# 
   753  060F                     	;# 
   754  060F                     	;# 
   755  0610                     	;# 
   756  0611                     	;# 
   757  0612                     	;# 
   758  0613                     	;# 
   759  0614                     	;# 
   760  0617                     	;# 
   761  0617                     	;# 
   762  0618                     	;# 
   763  0619                     	;# 
   764  061A                     	;# 
   765  061A                     	;# 
   766  061B                     	;# 
   767  061C                     	;# 
   768  0691                     	;# 
   769  0692                     	;# 
   770  0693                     	;# 
   771  0694                     	;# 
   772  0695                     	;# 
   773  0696                     	;# 
   774  0697                     	;# 
   775  0699                     	;# 
   776  069A                     	;# 
   777  0711                     	;# 
   778  0712                     	;# 
   779  0713                     	;# 
   780  0714                     	;# 
   781  0715                     	;# 
   782  0718                     	;# 
   783  0718                     	;# 
   784  0719                     	;# 
   785  071A                     	;# 
   786  071A                     	;# 
   787  071B                     	;# 
   788  071C                     	;# 
   789  071D                     	;# 
   790  0791                     	;# 
   791  0791                     	;# 
   792  0792                     	;# 
   793  0793                     	;# 
   794  0793                     	;# 
   795  0794                     	;# 
   796  0795                     	;# 
   797  0795                     	;# 
   798  0796                     	;# 
   799  0797                     	;# 
   800  0797                     	;# 
   801  0798                     	;# 
   802  0799                     	;# 
   803  079A                     	;# 
   804  080C                     	;# 
   805  080C                     	;# 
   806  080D                     	;# 
   807  080E                     	;# 
   808  080E                     	;# 
   809  080F                     	;# 
   810  0810                     	;# 
   811  0810                     	;# 
   812  0811                     	;# 
   813  0812                     	;# 
   814  0812                     	;# 
   815  0813                     	;# 
   816  0814                     	;# 
   817  0815                     	;# 
   818  0816                     	;# 
   819  0817                     	;# 
   820  0818                     	;# 
   821  0819                     	;# 
   822  081A                     	;# 
   823  081A                     	;# 
   824  081B                     	;# 
   825  081C                     	;# 
   826  081C                     	;# 
   827  081D                     	;# 
   828  088C                     	;# 
   829  088D                     	;# 
   830  088E                     	;# 
   831  088F                     	;# 
   832  088F                     	;# 
   833  0890                     	;# 
   834  0891                     	;# 
   835  0892                     	;# 
   836  0893                     	;# 
   837  0893                     	;# 
   838  0894                     	;# 
   839  0895                     	;# 
   840  0896                     	;# 
   841  0897                     	;# 
   842  0897                     	;# 
   843  0898                     	;# 
   844  0899                     	;# 
   845  0D8C                     	;# 
   846  0D8C                     	;# 
   847  0D8D                     	;# 
   848  0D8E                     	;# 
   849  0D8F                     	;# 
   850  0D8F                     	;# 
   851  0D90                     	;# 
   852  0D91                     	;# 
   853  0D92                     	;# 
   854  0D92                     	;# 
   855  0D93                     	;# 
   856  0D94                     	;# 
   857  0D95                     	;# 
   858  0D95                     	;# 
   859  0D96                     	;# 
   860  0D97                     	;# 
   861  0D98                     	;# 
   862  0D99                     	;# 
   863  0D9A                     	;# 
   864  0D9B                     	;# 
   865  0D9C                     	;# 
   866  0D9D                     	;# 
   867  0D9E                     	;# 
   868  0D9E                     	;# 
   869  0D9F                     	;# 
   870  0DA0                     	;# 
   871  0DA1                     	;# 
   872  0DA1                     	;# 
   873  0DA2                     	;# 
   874  0DA3                     	;# 
   875  0DA4                     	;# 
   876  0DA4                     	;# 
   877  0DA5                     	;# 
   878  0DA6                     	;# 
   879  0DA7                     	;# 
   880  0DA7                     	;# 
   881  0DA8                     	;# 
   882  0DA9                     	;# 
   883  0DAA                     	;# 
   884  0DAB                     	;# 
   885  0DAC                     	;# 
   886  0DAD                     	;# 
   887  0DAE                     	;# 
   888  0DAF                     	;# 
   889  0E0F                     	;# 
   890  0E10                     	;# 
   891  0E11                     	;# 
   892  0E12                     	;# 
   893  0E13                     	;# 
   894  0E14                     	;# 
   895  0E15                     	;# 
   896  0E16                     	;# 
   897  0E17                     	;# 
   898  0E18                     	;# 
   899  0E19                     	;# 
   900  0E1A                     	;# 
   901  0E1B                     	;# 
   902  0E1C                     	;# 
   903  0E1D                     	;# 
   904  0E1E                     	;# 
   905  0E1F                     	;# 
   906  0E20                     	;# 
   907  0E21                     	;# 
   908  0E22                     	;# 
   909  0E23                     	;# 
   910  0E24                     	;# 
   911  0E25                     	;# 
   912  0E26                     	;# 
   913  0E27                     	;# 
   914  0E28                     	;# 
   915  0E29                     	;# 
   916  0E2A                     	;# 
   917  0E2B                     	;# 
   918  0E2C                     	;# 
   919  0E2D                     	;# 
   920  0E2E                     	;# 
   921  0E90                     	;# 
   922  0E91                     	;# 
   923  0E92                     	;# 
   924  0E94                     	;# 
   925  0E95                     	;# 
   926  0E9C                     	;# 
   927  0E9D                     	;# 
   928  0E9E                     	;# 
   929  0E9F                     	;# 
   930  0EA0                     	;# 
   931  0EA1                     	;# 
   932  0EA2                     	;# 
   933  0EA3                     	;# 
   934  0EA4                     	;# 
   935  0EA5                     	;# 
   936  0EA6                     	;# 
   937  0EA7                     	;# 
   938  0F0F                     	;# 
   939  0F10                     	;# 
   940  0F11                     	;# 
   941  0F12                     	;# 
   942  0F13                     	;# 
   943  0F14                     	;# 
   944  0F15                     	;# 
   945  0F16                     	;# 
   946  0F17                     	;# 
   947  0F18                     	;# 
   948  0F19                     	;# 
   949  0F1A                     	;# 
   950  0F1B                     	;# 
   951  0F1C                     	;# 
   952  0F1D                     	;# 
   953  0F1E                     	;# 
   954  0F1F                     	;# 
   955  0F20                     	;# 
   956  0F21                     	;# 
   957  0F22                     	;# 
   958  0F23                     	;# 
   959  0F24                     	;# 
   960  0F25                     	;# 
   961  0F26                     	;# 
   962  0F27                     	;# 
   963  0F28                     	;# 
   964  0F29                     	;# 
   965  0F2A                     	;# 
   966  0F2B                     	;# 
   967  0F2C                     	;# 
   968  0F2D                     	;# 
   969  0F2E                     	;# 
   970  0F2F                     	;# 
   971  0F30                     	;# 
   972  0F31                     	;# 
   973  0F32                     	;# 
   974  0F33                     	;# 
   975  0F34                     	;# 
   976  0F35                     	;# 
   977  0F36                     	;# 
   978  0F37                     	;# 
   979  0FE4                     	;# 
   980  0FE5                     	;# 
   981  0FE6                     	;# 
   982  0FE7                     	;# 
   983  0FE8                     	;# 
   984  0FE9                     	;# 
   985  0FEA                     	;# 
   986  0FEB                     	;# 
   987  0FED                     	;# 
   988  0FEE                     	;# 
   989  0FEF                     	;# 
   990  0000                     	;# 
   991  0001                     	;# 
   992  0002                     	;# 
   993  0003                     	;# 
   994  0004                     	;# 
   995  0005                     	;# 
   996  0006                     	;# 
   997  0007                     	;# 
   998  0008                     	;# 
   999  0009                     	;# 
  1000  000A                     	;# 
  1001  000B                     	;# 
  1002  000C                     	;# 
  1003  000D                     	;# 
  1004  000E                     	;# 
  1005  0010                     	;# 
  1006  0011                     	;# 
  1007  0012                     	;# 
  1008  0013                     	;# 
  1009  0014                     	;# 
  1010  0015                     	;# 
  1011  0016                     	;# 
  1012  0016                     	;# 
  1013  0017                     	;# 
  1014  0018                     	;# 
  1015  0019                     	;# 
  1016  001A                     	;# 
  1017  001A                     	;# 
  1018  001B                     	;# 
  1019  001B                     	;# 
  1020  001C                     	;# 
  1021  001D                     	;# 
  1022  001E                     	;# 
  1023  001F                     	;# 
  1024  008C                     	;# 
  1025  008D                     	;# 
  1026  008E                     	;# 
  1027  0090                     	;# 
  1028  0091                     	;# 
  1029  0092                     	;# 
  1030  0093                     	;# 
  1031  0094                     	;# 
  1032  0095                     	;# 
  1033  0096                     	;# 
  1034  0098                     	;# 
  1035  0099                     	;# 
  1036  009A                     	;# 
  1037  009B                     	;# 
  1038  009B                     	;# 
  1039  009C                     	;# 
  1040  009D                     	;# 
  1041  009E                     	;# 
  1042  009F                     	;# 
  1043  010C                     	;# 
  1044  010D                     	;# 
  1045  010E                     	;# 
  1046  0111                     	;# 
  1047  0112                     	;# 
  1048  0113                     	;# 
  1049  0114                     	;# 
  1050  0115                     	;# 
  1051  0116                     	;# 
  1052  0117                     	;# 
  1053  0118                     	;# 
  1054  0119                     	;# 
  1055  011C                     	;# 
  1056  018C                     	;# 
  1057  018D                     	;# 
  1058  018E                     	;# 
  1059  0191                     	;# 
  1060  0191                     	;# 
  1061  0192                     	;# 
  1062  0193                     	;# 
  1063  0193                     	;# 
  1064  0194                     	;# 
  1065  0195                     	;# 
  1066  0196                     	;# 
  1067  0197                     	;# 
  1068  0199                     	;# 
  1069  0199                     	;# 
  1070  0199                     	;# 
  1071  019A                     	;# 
  1072  019A                     	;# 
  1073  019A                     	;# 
  1074  019B                     	;# 
  1075  019B                     	;# 
  1076  019B                     	;# 
  1077  019B                     	;# 
  1078  019B                     	;# 
  1079  019C                     	;# 
  1080  019C                     	;# 
  1081  019C                     	;# 
  1082  019D                     	;# 
  1083  019D                     	;# 
  1084  019D                     	;# 
  1085  019E                     	;# 
  1086  019E                     	;# 
  1087  019E                     	;# 
  1088  019F                     	;# 
  1089  019F                     	;# 
  1090  019F                     	;# 
  1091  019F                     	;# 
  1092  019F                     	;# 
  1093  020C                     	;# 
  1094  020D                     	;# 
  1095  020E                     	;# 
  1096  0211                     	;# 
  1097  0211                     	;# 
  1098  0212                     	;# 
  1099  0212                     	;# 
  1100  0213                     	;# 
  1101  0213                     	;# 
  1102  0214                     	;# 
  1103  0214                     	;# 
  1104  0215                     	;# 
  1105  0215                     	;# 
  1106  0215                     	;# 
  1107  0215                     	;# 
  1108  0216                     	;# 
  1109  0216                     	;# 
  1110  0217                     	;# 
  1111  0217                     	;# 
  1112  028C                     	;# 
  1113  028D                     	;# 
  1114  028E                     	;# 
  1115  0291                     	;# 
  1116  0291                     	;# 
  1117  0292                     	;# 
  1118  0293                     	;# 
  1119  0294                     	;# 
  1120  0298                     	;# 
  1121  0298                     	;# 
  1122  0299                     	;# 
  1123  029A                     	;# 
  1124  029B                     	;# 
  1125  029E                     	;# 
  1126  030C                     	;# 
  1127  030D                     	;# 
  1128  030E                     	;# 
  1129  038C                     	;# 
  1130  038D                     	;# 
  1131  038E                     	;# 
  1132  0391                     	;# 
  1133  0392                     	;# 
  1134  0393                     	;# 
  1135  0394                     	;# 
  1136  0395                     	;# 
  1137  0396                     	;# 
  1138  0397                     	;# 
  1139  0398                     	;# 
  1140  0399                     	;# 
  1141  040E                     	;# 
  1142  0413                     	;# 
  1143  0413                     	;# 
  1144  0414                     	;# 
  1145  0414                     	;# 
  1146  0415                     	;# 
  1147  0416                     	;# 
  1148  0417                     	;# 
  1149  0418                     	;# 
  1150  041A                     	;# 
  1151  041A                     	;# 
  1152  041B                     	;# 
  1153  041B                     	;# 
  1154  041C                     	;# 
  1155  041D                     	;# 
  1156  041E                     	;# 
  1157  041F                     	;# 
  1158  0493                     	;# 
  1159  0494                     	;# 
  1160  0495                     	;# 
  1161  0496                     	;# 
  1162  049A                     	;# 
  1163  049B                     	;# 
  1164  049C                     	;# 
  1165  049D                     	;# 
  1166  058C                     	;# 
  1167  058C                     	;# 
  1168  058D                     	;# 
  1169  058E                     	;# 
  1170  058E                     	;# 
  1171  058F                     	;# 
  1172  0590                     	;# 
  1173  0590                     	;# 
  1174  0591                     	;# 
  1175  0592                     	;# 
  1176  0592                     	;# 
  1177  0593                     	;# 
  1178  0594                     	;# 
  1179  0594                     	;# 
  1180  0595                     	;# 
  1181  0596                     	;# 
  1182  0596                     	;# 
  1183  0597                     	;# 
  1184  0598                     	;# 
  1185  0599                     	;# 
  1186  059A                     	;# 
  1187  059B                     	;# 
  1188  059B                     	;# 
  1189  059C                     	;# 
  1190  059D                     	;# 
  1191  060C                     	;# 
  1192  060C                     	;# 
  1193  060D                     	;# 
  1194  060E                     	;# 
  1195  060F                     	;# 
  1196  060F                     	;# 
  1197  0610                     	;# 
  1198  0611                     	;# 
  1199  0612                     	;# 
  1200  0613                     	;# 
  1201  0614                     	;# 
  1202  0617                     	;# 
  1203  0617                     	;# 
  1204  0618                     	;# 
  1205  0619                     	;# 
  1206  061A                     	;# 
  1207  061A                     	;# 
  1208  061B                     	;# 
  1209  061C                     	;# 
  1210  0691                     	;# 
  1211  0692                     	;# 
  1212  0693                     	;# 
  1213  0694                     	;# 
  1214  0695                     	;# 
  1215  0696                     	;# 
  1216  0697                     	;# 
  1217  0699                     	;# 
  1218  069A                     	;# 
  1219  0711                     	;# 
  1220  0712                     	;# 
  1221  0713                     	;# 
  1222  0714                     	;# 
  1223  0715                     	;# 
  1224  0718                     	;# 
  1225  0718                     	;# 
  1226  0719                     	;# 
  1227  071A                     	;# 
  1228  071A                     	;# 
  1229  071B                     	;# 
  1230  071C                     	;# 
  1231  071D                     	;# 
  1232  0791                     	;# 
  1233  0791                     	;# 
  1234  0792                     	;# 
  1235  0793                     	;# 
  1236  0793                     	;# 
  1237  0794                     	;# 
  1238  0795                     	;# 
  1239  0795                     	;# 
  1240  0796                     	;# 
  1241  0797                     	;# 
  1242  0797                     	;# 
  1243  0798                     	;# 
  1244  0799                     	;# 
  1245  079A                     	;# 
  1246  080C                     	;# 
  1247  080C                     	;# 
  1248  080D                     	;# 
  1249  080E                     	;# 
  1250  080E                     	;# 
  1251  080F                     	;# 
  1252  0810                     	;# 
  1253  0810                     	;# 
  1254  0811                     	;# 
  1255  0812                     	;# 
  1256  0812                     	;# 
  1257  0813                     	;# 
  1258  0814                     	;# 
  1259  0815                     	;# 
  1260  0816                     	;# 
  1261  0817                     	;# 
  1262  0818                     	;# 
  1263  0819                     	;# 
  1264  081A                     	;# 
  1265  081A                     	;# 
  1266  081B                     	;# 
  1267  081C                     	;# 
  1268  081C                     	;# 
  1269  081D                     	;# 
  1270  088C                     	;# 
  1271  088D                     	;# 
  1272  088E                     	;# 
  1273  088F                     	;# 
  1274  088F                     	;# 
  1275  0890                     	;# 
  1276  0891                     	;# 
  1277  0892                     	;# 
  1278  0893                     	;# 
  1279  0893                     	;# 
  1280  0894                     	;# 
  1281  0895                     	;# 
  1282  0896                     	;# 
  1283  0897                     	;# 
  1284  0897                     	;# 
  1285  0898                     	;# 
  1286  0899                     	;# 
  1287  0D8C                     	;# 
  1288  0D8C                     	;# 
  1289  0D8D                     	;# 
  1290  0D8E                     	;# 
  1291  0D8F                     	;# 
  1292  0D8F                     	;# 
  1293  0D90                     	;# 
  1294  0D91                     	;# 
  1295  0D92                     	;# 
  1296  0D92                     	;# 
  1297  0D93                     	;# 
  1298  0D94                     	;# 
  1299  0D95                     	;# 
  1300  0D95                     	;# 
  1301  0D96                     	;# 
  1302  0D97                     	;# 
  1303  0D98                     	;# 
  1304  0D99                     	;# 
  1305  0D9A                     	;# 
  1306  0D9B                     	;# 
  1307  0D9C                     	;# 
  1308  0D9D                     	;# 
  1309  0D9E                     	;# 
  1310  0D9E                     	;# 
  1311  0D9F                     	;# 
  1312  0DA0                     	;# 
  1313  0DA1                     	;# 
  1314  0DA1                     	;# 
  1315  0DA2                     	;# 
  1316  0DA3                     	;# 
  1317  0DA4                     	;# 
  1318  0DA4                     	;# 
  1319  0DA5                     	;# 
  1320  0DA6                     	;# 
  1321  0DA7                     	;# 
  1322  0DA7                     	;# 
  1323  0DA8                     	;# 
  1324  0DA9                     	;# 
  1325  0DAA                     	;# 
  1326  0DAB                     	;# 
  1327  0DAC                     	;# 
  1328  0DAD                     	;# 
  1329  0DAE                     	;# 
  1330  0DAF                     	;# 
  1331  0E0F                     	;# 
  1332  0E10                     	;# 
  1333  0E11                     	;# 
  1334  0E12                     	;# 
  1335  0E13                     	;# 
  1336  0E14                     	;# 
  1337  0E15                     	;# 
  1338  0E16                     	;# 
  1339  0E17                     	;# 
  1340  0E18                     	;# 
  1341  0E19                     	;# 
  1342  0E1A                     	;# 
  1343  0E1B                     	;# 
  1344  0E1C                     	;# 
  1345  0E1D                     	;# 
  1346  0E1E                     	;# 
  1347  0E1F                     	;# 
  1348  0E20                     	;# 
  1349  0E21                     	;# 
  1350  0E22                     	;# 
  1351  0E23                     	;# 
  1352  0E24                     	;# 
  1353  0E25                     	;# 
  1354  0E26                     	;# 
  1355  0E27                     	;# 
  1356  0E28                     	;# 
  1357  0E29                     	;# 
  1358  0E2A                     	;# 
  1359  0E2B                     	;# 
  1360  0E2C                     	;# 
  1361  0E2D                     	;# 
  1362  0E2E                     	;# 
  1363  0E90                     	;# 
  1364  0E91                     	;# 
  1365  0E92                     	;# 
  1366  0E94                     	;# 
  1367  0E95                     	;# 
  1368  0E9C                     	;# 
  1369  0E9D                     	;# 
  1370  0E9E                     	;# 
  1371  0E9F                     	;# 
  1372  0EA0                     	;# 
  1373  0EA1                     	;# 
  1374  0EA2                     	;# 
  1375  0EA3                     	;# 
  1376  0EA4                     	;# 
  1377  0EA5                     	;# 
  1378  0EA6                     	;# 
  1379  0EA7                     	;# 
  1380  0F0F                     	;# 
  1381  0F10                     	;# 
  1382  0F11                     	;# 
  1383  0F12                     	;# 
  1384  0F13                     	;# 
  1385  0F14                     	;# 
  1386  0F15                     	;# 
  1387  0F16                     	;# 
  1388  0F17                     	;# 
  1389  0F18                     	;# 
  1390  0F19                     	;# 
  1391  0F1A                     	;# 
  1392  0F1B                     	;# 
  1393  0F1C                     	;# 
  1394  0F1D                     	;# 
  1395  0F1E                     	;# 
  1396  0F1F                     	;# 
  1397  0F20                     	;# 
  1398  0F21                     	;# 
  1399  0F22                     	;# 
  1400  0F23                     	;# 
  1401  0F24                     	;# 
  1402  0F25                     	;# 
  1403  0F26                     	;# 
  1404  0F27                     	;# 
  1405  0F28                     	;# 
  1406  0F29                     	;# 
  1407  0F2A                     	;# 
  1408  0F2B                     	;# 
  1409  0F2C                     	;# 
  1410  0F2D                     	;# 
  1411  0F2E                     	;# 
  1412  0F2F                     	;# 
  1413  0F30                     	;# 
  1414  0F31                     	;# 
  1415  0F32                     	;# 
  1416  0F33                     	;# 
  1417  0F34                     	;# 
  1418  0F35                     	;# 
  1419  0F36                     	;# 
  1420  0F37                     	;# 
  1421  0FE4                     	;# 
  1422  0FE5                     	;# 
  1423  0FE6                     	;# 
  1424  0FE7                     	;# 
  1425  0FE8                     	;# 
  1426  0FE9                     	;# 
  1427  0FEA                     	;# 
  1428  0FEB                     	;# 
  1429  0FED                     	;# 
  1430  0FEE                     	;# 
  1431  0FEF                     	;# 
  1432  0000                     	;# 
  1433  0001                     	;# 
  1434  0002                     	;# 
  1435  0003                     	;# 
  1436  0004                     	;# 
  1437  0005                     	;# 
  1438  0006                     	;# 
  1439  0007                     	;# 
  1440  0008                     	;# 
  1441  0009                     	;# 
  1442  000A                     	;# 
  1443  000B                     	;# 
  1444  000C                     	;# 
  1445  000D                     	;# 
  1446  000E                     	;# 
  1447  0010                     	;# 
  1448  0011                     	;# 
  1449  0012                     	;# 
  1450  0013                     	;# 
  1451  0014                     	;# 
  1452  0015                     	;# 
  1453  0016                     	;# 
  1454  0016                     	;# 
  1455  0017                     	;# 
  1456  0018                     	;# 
  1457  0019                     	;# 
  1458  001A                     	;# 
  1459  001A                     	;# 
  1460  001B                     	;# 
  1461  001B                     	;# 
  1462  001C                     	;# 
  1463  001D                     	;# 
  1464  001E                     	;# 
  1465  001F                     	;# 
  1466  008C                     	;# 
  1467  008D                     	;# 
  1468  008E                     	;# 
  1469  0090                     	;# 
  1470  0091                     	;# 
  1471  0092                     	;# 
  1472  0093                     	;# 
  1473  0094                     	;# 
  1474  0095                     	;# 
  1475  0096                     	;# 
  1476  0098                     	;# 
  1477  0099                     	;# 
  1478  009A                     	;# 
  1479  009B                     	;# 
  1480  009B                     	;# 
  1481  009C                     	;# 
  1482  009D                     	;# 
  1483  009E                     	;# 
  1484  009F                     	;# 
  1485  010C                     	;# 
  1486  010D                     	;# 
  1487  010E                     	;# 
  1488  0111                     	;# 
  1489  0112                     	;# 
  1490  0113                     	;# 
  1491  0114                     	;# 
  1492  0115                     	;# 
  1493  0116                     	;# 
  1494  0117                     	;# 
  1495  0118                     	;# 
  1496  0119                     	;# 
  1497  011C                     	;# 
  1498  018C                     	;# 
  1499  018D                     	;# 
  1500  018E                     	;# 
  1501  0191                     	;# 
  1502  0191                     	;# 
  1503  0192                     	;# 
  1504  0193                     	;# 
  1505  0193                     	;# 
  1506  0194                     	;# 
  1507  0195                     	;# 
  1508  0196                     	;# 
  1509  0197                     	;# 
  1510  0199                     	;# 
  1511  0199                     	;# 
  1512  0199                     	;# 
  1513  019A                     	;# 
  1514  019A                     	;# 
  1515  019A                     	;# 
  1516  019B                     	;# 
  1517  019B                     	;# 
  1518  019B                     	;# 
  1519  019B                     	;# 
  1520  019B                     	;# 
  1521  019C                     	;# 
  1522  019C                     	;# 
  1523  019C                     	;# 
  1524  019D                     	;# 
  1525  019D                     	;# 
  1526  019D                     	;# 
  1527  019E                     	;# 
  1528  019E                     	;# 
  1529  019E                     	;# 
  1530  019F                     	;# 
  1531  019F                     	;# 
  1532  019F                     	;# 
  1533  019F                     	;# 
  1534  019F                     	;# 
  1535  020C                     	;# 
  1536  020D                     	;# 
  1537  020E                     	;# 
  1538  0211                     	;# 
  1539  0211                     	;# 
  1540  0212                     	;# 
  1541  0212                     	;# 
  1542  0213                     	;# 
  1543  0213                     	;# 
  1544  0214                     	;# 
  1545  0214                     	;# 
  1546  0215                     	;# 
  1547  0215                     	;# 
  1548  0215                     	;# 
  1549  0215                     	;# 
  1550  0216                     	;# 
  1551  0216                     	;# 
  1552  0217                     	;# 
  1553  0217                     	;# 
  1554  028C                     	;# 
  1555  028D                     	;# 
  1556  028E                     	;# 
  1557  0291                     	;# 
  1558  0291                     	;# 
  1559  0292                     	;# 
  1560  0293                     	;# 
  1561  0294                     	;# 
  1562  0298                     	;# 
  1563  0298                     	;# 
  1564  0299                     	;# 
  1565  029A                     	;# 
  1566  029B                     	;# 
  1567  029E                     	;# 
  1568  030C                     	;# 
  1569  030D                     	;# 
  1570  030E                     	;# 
  1571  038C                     	;# 
  1572  038D                     	;# 
  1573  038E                     	;# 
  1574  0391                     	;# 
  1575  0392                     	;# 
  1576  0393                     	;# 
  1577  0394                     	;# 
  1578  0395                     	;# 
  1579  0396                     	;# 
  1580  0397                     	;# 
  1581  0398                     	;# 
  1582  0399                     	;# 
  1583  040E                     	;# 
  1584  0413                     	;# 
  1585  0413                     	;# 
  1586  0414                     	;# 
  1587  0414                     	;# 
  1588  0415                     	;# 
  1589  0416                     	;# 
  1590  0417                     	;# 
  1591  0418                     	;# 
  1592  041A                     	;# 
  1593  041A                     	;# 
  1594  041B                     	;# 
  1595  041B                     	;# 
  1596  041C                     	;# 
  1597  041D                     	;# 
  1598  041E                     	;# 
  1599  041F                     	;# 
  1600  0493                     	;# 
  1601  0494                     	;# 
  1602  0495                     	;# 
  1603  0496                     	;# 
  1604  049A                     	;# 
  1605  049B                     	;# 
  1606  049C                     	;# 
  1607  049D                     	;# 
  1608  058C                     	;# 
  1609  058C                     	;# 
  1610  058D                     	;# 
  1611  058E                     	;# 
  1612  058E                     	;# 
  1613  058F                     	;# 
  1614  0590                     	;# 
  1615  0590                     	;# 
  1616  0591                     	;# 
  1617  0592                     	;# 
  1618  0592                     	;# 
  1619  0593                     	;# 
  1620  0594                     	;# 
  1621  0594                     	;# 
  1622  0595                     	;# 
  1623  0596                     	;# 
  1624  0596                     	;# 
  1625  0597                     	;# 
  1626  0598                     	;# 
  1627  0599                     	;# 
  1628  059A                     	;# 
  1629  059B                     	;# 
  1630  059B                     	;# 
  1631  059C                     	;# 
  1632  059D                     	;# 
  1633  060C                     	;# 
  1634  060C                     	;# 
  1635  060D                     	;# 
  1636  060E                     	;# 
  1637  060F                     	;# 
  1638  060F                     	;# 
  1639  0610                     	;# 
  1640  0611                     	;# 
  1641  0612                     	;# 
  1642  0613                     	;# 
  1643  0614                     	;# 
  1644  0617                     	;# 
  1645  0617                     	;# 
  1646  0618                     	;# 
  1647  0619                     	;# 
  1648  061A                     	;# 
  1649  061A                     	;# 
  1650  061B                     	;# 
  1651  061C                     	;# 
  1652  0691                     	;# 
  1653  0692                     	;# 
  1654  0693                     	;# 
  1655  0694                     	;# 
  1656  0695                     	;# 
  1657  0696                     	;# 
  1658  0697                     	;# 
  1659  0699                     	;# 
  1660  069A                     	;# 
  1661  0711                     	;# 
  1662  0712                     	;# 
  1663  0713                     	;# 
  1664  0714                     	;# 
  1665  0715                     	;# 
  1666  0718                     	;# 
  1667  0718                     	;# 
  1668  0719                     	;# 
  1669  071A                     	;# 
  1670  071A                     	;# 
  1671  071B                     	;# 
  1672  071C                     	;# 
  1673  071D                     	;# 
  1674  0791                     	;# 
  1675  0791                     	;# 
  1676  0792                     	;# 
  1677  0793                     	;# 
  1678  0793                     	;# 
  1679  0794                     	;# 
  1680  0795                     	;# 
  1681  0795                     	;# 
  1682  0796                     	;# 
  1683  0797                     	;# 
  1684  0797                     	;# 
  1685  0798                     	;# 
  1686  0799                     	;# 
  1687  079A                     	;# 
  1688  080C                     	;# 
  1689  080C                     	;# 
  1690  080D                     	;# 
  1691  080E                     	;# 
  1692  080E                     	;# 
  1693  080F                     	;# 
  1694  0810                     	;# 
  1695  0810                     	;# 
  1696  0811                     	;# 
  1697  0812                     	;# 
  1698  0812                     	;# 
  1699  0813                     	;# 
  1700  0814                     	;# 
  1701  0815                     	;# 
  1702  0816                     	;# 
  1703  0817                     	;# 
  1704  0818                     	;# 
  1705  0819                     	;# 
  1706  081A                     	;# 
  1707  081A                     	;# 
  1708  081B                     	;# 
  1709  081C                     	;# 
  1710  081C                     	;# 
  1711  081D                     	;# 
  1712  088C                     	;# 
  1713  088D                     	;# 
  1714  088E                     	;# 
  1715  088F                     	;# 
  1716  088F                     	;# 
  1717  0890                     	;# 
  1718  0891                     	;# 
  1719  0892                     	;# 
  1720  0893                     	;# 
  1721  0893                     	;# 
  1722  0894                     	;# 
  1723  0895                     	;# 
  1724  0896                     	;# 
  1725  0897                     	;# 
  1726  0897                     	;# 
  1727  0898                     	;# 
  1728  0899                     	;# 
  1729  0D8C                     	;# 
  1730  0D8C                     	;# 
  1731  0D8D                     	;# 
  1732  0D8E                     	;# 
  1733  0D8F                     	;# 
  1734  0D8F                     	;# 
  1735  0D90                     	;# 
  1736  0D91                     	;# 
  1737  0D92                     	;# 
  1738  0D92                     	;# 
  1739  0D93                     	;# 
  1740  0D94                     	;# 
  1741  0D95                     	;# 
  1742  0D95                     	;# 
  1743  0D96                     	;# 
  1744  0D97                     	;# 
  1745  0D98                     	;# 
  1746  0D99                     	;# 
  1747  0D9A                     	;# 
  1748  0D9B                     	;# 
  1749  0D9C                     	;# 
  1750  0D9D                     	;# 
  1751  0D9E                     	;# 
  1752  0D9E                     	;# 
  1753  0D9F                     	;# 
  1754  0DA0                     	;# 
  1755  0DA1                     	;# 
  1756  0DA1                     	;# 
  1757  0DA2                     	;# 
  1758  0DA3                     	;# 
  1759  0DA4                     	;# 
  1760  0DA4                     	;# 
  1761  0DA5                     	;# 
  1762  0DA6                     	;# 
  1763  0DA7                     	;# 
  1764  0DA7                     	;# 
  1765  0DA8                     	;# 
  1766  0DA9                     	;# 
  1767  0DAA                     	;# 
  1768  0DAB                     	;# 
  1769  0DAC                     	;# 
  1770  0DAD                     	;# 
  1771  0DAE                     	;# 
  1772  0DAF                     	;# 
  1773  0E0F                     	;# 
  1774  0E10                     	;# 
  1775  0E11                     	;# 
  1776  0E12                     	;# 
  1777  0E13                     	;# 
  1778  0E14                     	;# 
  1779  0E15                     	;# 
  1780  0E16                     	;# 
  1781  0E17                     	;# 
  1782  0E18                     	;# 
  1783  0E19                     	;# 
  1784  0E1A                     	;# 
  1785  0E1B                     	;# 
  1786  0E1C                     	;# 
  1787  0E1D                     	;# 
  1788  0E1E                     	;# 
  1789  0E1F                     	;# 
  1790  0E20                     	;# 
  1791  0E21                     	;# 
  1792  0E22                     	;# 
  1793  0E23                     	;# 
  1794  0E24                     	;# 
  1795  0E25                     	;# 
  1796  0E26                     	;# 
  1797  0E27                     	;# 
  1798  0E28                     	;# 
  1799  0E29                     	;# 
  1800  0E2A                     	;# 
  1801  0E2B                     	;# 
  1802  0E2C                     	;# 
  1803  0E2D                     	;# 
  1804  0E2E                     	;# 
  1805  0E90                     	;# 
  1806  0E91                     	;# 
  1807  0E92                     	;# 
  1808  0E94                     	;# 
  1809  0E95                     	;# 
  1810  0E9C                     	;# 
  1811  0E9D                     	;# 
  1812  0E9E                     	;# 
  1813  0E9F                     	;# 
  1814  0EA0                     	;# 
  1815  0EA1                     	;# 
  1816  0EA2                     	;# 
  1817  0EA3                     	;# 
  1818  0EA4                     	;# 
  1819  0EA5                     	;# 
  1820  0EA6                     	;# 
  1821  0EA7                     	;# 
  1822  0F0F                     	;# 
  1823  0F10                     	;# 
  1824  0F11                     	;# 
  1825  0F12                     	;# 
  1826  0F13                     	;# 
  1827  0F14                     	;# 
  1828  0F15                     	;# 
  1829  0F16                     	;# 
  1830  0F17                     	;# 
  1831  0F18                     	;# 
  1832  0F19                     	;# 
  1833  0F1A                     	;# 
  1834  0F1B                     	;# 
  1835  0F1C                     	;# 
  1836  0F1D                     	;# 
  1837  0F1E                     	;# 
  1838  0F1F                     	;# 
  1839  0F20                     	;# 
  1840  0F21                     	;# 
  1841  0F22                     	;# 
  1842  0F23                     	;# 
  1843  0F24                     	;# 
  1844  0F25                     	;# 
  1845  0F26                     	;# 
  1846  0F27                     	;# 
  1847  0F28                     	;# 
  1848  0F29                     	;# 
  1849  0F2A                     	;# 
  1850  0F2B                     	;# 
  1851  0F2C                     	;# 
  1852  0F2D                     	;# 
  1853  0F2E                     	;# 
  1854  0F2F                     	;# 
  1855  0F30                     	;# 
  1856  0F31                     	;# 
  1857  0F32                     	;# 
  1858  0F33                     	;# 
  1859  0F34                     	;# 
  1860  0F35                     	;# 
  1861  0F36                     	;# 
  1862  0F37                     	;# 
  1863  0FE4                     	;# 
  1864  0FE5                     	;# 
  1865  0FE6                     	;# 
  1866  0FE7                     	;# 
  1867  0FE8                     	;# 
  1868  0FE9                     	;# 
  1869  0FEA                     	;# 
  1870  0FEB                     	;# 
  1871  0FED                     	;# 
  1872  0FEE                     	;# 
  1873  0FEF                     	;# 
  1874  0000                     	;# 
  1875  0001                     	;# 
  1876  0002                     	;# 
  1877  0003                     	;# 
  1878  0004                     	;# 
  1879  0005                     	;# 
  1880  0006                     	;# 
  1881  0007                     	;# 
  1882  0008                     	;# 
  1883  0009                     	;# 
  1884  000A                     	;# 
  1885  000B                     	;# 
  1886  000C                     	;# 
  1887  000D                     	;# 
  1888  000E                     	;# 
  1889  0010                     	;# 
  1890  0011                     	;# 
  1891  0012                     	;# 
  1892  0013                     	;# 
  1893  0014                     	;# 
  1894  0015                     	;# 
  1895  0016                     	;# 
  1896  0016                     	;# 
  1897  0017                     	;# 
  1898  0018                     	;# 
  1899  0019                     	;# 
  1900  001A                     	;# 
  1901  001A                     	;# 
  1902  001B                     	;# 
  1903  001B                     	;# 
  1904  001C                     	;# 
  1905  001D                     	;# 
  1906  001E                     	;# 
  1907  001F                     	;# 
  1908  008C                     	;# 
  1909  008D                     	;# 
  1910  008E                     	;# 
  1911  0090                     	;# 
  1912  0091                     	;# 
  1913  0092                     	;# 
  1914  0093                     	;# 
  1915  0094                     	;# 
  1916  0095                     	;# 
  1917  0096                     	;# 
  1918  0098                     	;# 
  1919  0099                     	;# 
  1920  009A                     	;# 
  1921  009B                     	;# 
  1922  009B                     	;# 
  1923  009C                     	;# 
  1924  009D                     	;# 
  1925  009E                     	;# 
  1926  009F                     	;# 
  1927  010C                     	;# 
  1928  010D                     	;# 
  1929  010E                     	;# 
  1930  0111                     	;# 
  1931  0112                     	;# 
  1932  0113                     	;# 
  1933  0114                     	;# 
  1934  0115                     	;# 
  1935  0116                     	;# 
  1936  0117                     	;# 
  1937  0118                     	;# 
  1938  0119                     	;# 
  1939  011C                     	;# 
  1940  018C                     	;# 
  1941  018D                     	;# 
  1942  018E                     	;# 
  1943  0191                     	;# 
  1944  0191                     	;# 
  1945  0192                     	;# 
  1946  0193                     	;# 
  1947  0193                     	;# 
  1948  0194                     	;# 
  1949  0195                     	;# 
  1950  0196                     	;# 
  1951  0197                     	;# 
  1952  0199                     	;# 
  1953  0199                     	;# 
  1954  0199                     	;# 
  1955  019A                     	;# 
  1956  019A                     	;# 
  1957  019A                     	;# 
  1958  019B                     	;# 
  1959  019B                     	;# 
  1960  019B                     	;# 
  1961  019B                     	;# 
  1962  019B                     	;# 
  1963  019C                     	;# 
  1964  019C                     	;# 
  1965  019C                     	;# 
  1966  019D                     	;# 
  1967  019D                     	;# 
  1968  019D                     	;# 
  1969  019E                     	;# 
  1970  019E                     	;# 
  1971  019E                     	;# 
  1972  019F                     	;# 
  1973  019F                     	;# 
  1974  019F                     	;# 
  1975  019F                     	;# 
  1976  019F                     	;# 
  1977  020C                     	;# 
  1978  020D                     	;# 
  1979  020E                     	;# 
  1980  0211                     	;# 
  1981  0211                     	;# 
  1982  0212                     	;# 
  1983  0212                     	;# 
  1984  0213                     	;# 
  1985  0213                     	;# 
  1986  0214                     	;# 
  1987  0214                     	;# 
  1988  0215                     	;# 
  1989  0215                     	;# 
  1990  0215                     	;# 
  1991  0215                     	;# 
  1992  0216                     	;# 
  1993  0216                     	;# 
  1994  0217                     	;# 
  1995  0217                     	;# 
  1996  028C                     	;# 
  1997  028D                     	;# 
  1998  028E                     	;# 
  1999  0291                     	;# 
  2000  0291                     	;# 
  2001  0292                     	;# 
  2002  0293                     	;# 
  2003  0294                     	;# 
  2004  0298                     	;# 
  2005  0298                     	;# 
  2006  0299                     	;# 
  2007  029A                     	;# 
  2008  029B                     	;# 
  2009  029E                     	;# 
  2010  030C                     	;# 
  2011  030D                     	;# 
  2012  030E                     	;# 
  2013  038C                     	;# 
  2014  038D                     	;# 
  2015  038E                     	;# 
  2016  0391                     	;# 
  2017  0392                     	;# 
  2018  0393                     	;# 
  2019  0394                     	;# 
  2020  0395                     	;# 
  2021  0396                     	;# 
  2022  0397                     	;# 
  2023  0398                     	;# 
  2024  0399                     	;# 
  2025  040E                     	;# 
  2026  0413                     	;# 
  2027  0413                     	;# 
  2028  0414                     	;# 
  2029  0414                     	;# 
  2030  0415                     	;# 
  2031  0416                     	;# 
  2032  0417                     	;# 
  2033  0418                     	;# 
  2034  041A                     	;# 
  2035  041A                     	;# 
  2036  041B                     	;# 
  2037  041B                     	;# 
  2038  041C                     	;# 
  2039  041D                     	;# 
  2040  041E                     	;# 
  2041  041F                     	;# 
  2042  0493                     	;# 
  2043  0494                     	;# 
  2044  0495                     	;# 
  2045  0496                     	;# 
  2046  049A                     	;# 
  2047  049B                     	;# 
  2048  049C                     	;# 
  2049  049D                     	;# 
  2050  058C                     	;# 
  2051  058C                     	;# 
  2052  058D                     	;# 
  2053  058E                     	;# 
  2054  058E                     	;# 
  2055  058F                     	;# 
  2056  0590                     	;# 
  2057  0590                     	;# 
  2058  0591                     	;# 
  2059  0592                     	;# 
  2060  0592                     	;# 
  2061  0593                     	;# 
  2062  0594                     	;# 
  2063  0594                     	;# 
  2064  0595                     	;# 
  2065  0596                     	;# 
  2066  0596                     	;# 
  2067  0597                     	;# 
  2068  0598                     	;# 
  2069  0599                     	;# 
  2070  059A                     	;# 
  2071  059B                     	;# 
  2072  059B                     	;# 
  2073  059C                     	;# 
  2074  059D                     	;# 
  2075  060C                     	;# 
  2076  060C                     	;# 
  2077  060D                     	;# 
  2078  060E                     	;# 
  2079  060F                     	;# 
  2080  060F                     	;# 
  2081  0610                     	;# 
  2082  0611                     	;# 
  2083  0612                     	;# 
  2084  0613                     	;# 
  2085  0614                     	;# 
  2086  0617                     	;# 
  2087  0617                     	;# 
  2088  0618                     	;# 
  2089  0619                     	;# 
  2090  061A                     	;# 
  2091  061A                     	;# 
  2092  061B                     	;# 
  2093  061C                     	;# 
  2094  0691                     	;# 
  2095  0692                     	;# 
  2096  0693                     	;# 
  2097  0694                     	;# 
  2098  0695                     	;# 
  2099  0696                     	;# 
  2100  0697                     	;# 
  2101  0699                     	;# 
  2102  069A                     	;# 
  2103  0711                     	;# 
  2104  0712                     	;# 
  2105  0713                     	;# 
  2106  0714                     	;# 
  2107  0715                     	;# 
  2108  0718                     	;# 
  2109  0718                     	;# 
  2110  0719                     	;# 
  2111  071A                     	;# 
  2112  071A                     	;# 
  2113  071B                     	;# 
  2114  071C                     	;# 
  2115  071D                     	;# 
  2116  0791                     	;# 
  2117  0791                     	;# 
  2118  0792                     	;# 
  2119  0793                     	;# 
  2120  0793                     	;# 
  2121  0794                     	;# 
  2122  0795                     	;# 
  2123  0795                     	;# 
  2124  0796                     	;# 
  2125  0797                     	;# 
  2126  0797                     	;# 
  2127  0798                     	;# 
  2128  0799                     	;# 
  2129  079A                     	;# 
  2130  080C                     	;# 
  2131  080C                     	;# 
  2132  080D                     	;# 
  2133  080E                     	;# 
  2134  080E                     	;# 
  2135  080F                     	;# 
  2136  0810                     	;# 
  2137  0810                     	;# 
  2138  0811                     	;# 
  2139  0812                     	;# 
  2140  0812                     	;# 
  2141  0813                     	;# 
  2142  0814                     	;# 
  2143  0815                     	;# 
  2144  0816                     	;# 
  2145  0817                     	;# 
  2146  0818                     	;# 
  2147  0819                     	;# 
  2148  081A                     	;# 
  2149  081A                     	;# 
  2150  081B                     	;# 
  2151  081C                     	;# 
  2152  081C                     	;# 
  2153  081D                     	;# 
  2154  088C                     	;# 
  2155  088D                     	;# 
  2156  088E                     	;# 
  2157  088F                     	;# 
  2158  088F                     	;# 
  2159  0890                     	;# 
  2160  0891                     	;# 
  2161  0892                     	;# 
  2162  0893                     	;# 
  2163  0893                     	;# 
  2164  0894                     	;# 
  2165  0895                     	;# 
  2166  0896                     	;# 
  2167  0897                     	;# 
  2168  0897                     	;# 
  2169  0898                     	;# 
  2170  0899                     	;# 
  2171  0D8C                     	;# 
  2172  0D8C                     	;# 
  2173  0D8D                     	;# 
  2174  0D8E                     	;# 
  2175  0D8F                     	;# 
  2176  0D8F                     	;# 
  2177  0D90                     	;# 
  2178  0D91                     	;# 
  2179  0D92                     	;# 
  2180  0D92                     	;# 
  2181  0D93                     	;# 
  2182  0D94                     	;# 
  2183  0D95                     	;# 
  2184  0D95                     	;# 
  2185  0D96                     	;# 
  2186  0D97                     	;# 
  2187  0D98                     	;# 
  2188  0D99                     	;# 
  2189  0D9A                     	;# 
  2190  0D9B                     	;# 
  2191  0D9C                     	;# 
  2192  0D9D                     	;# 
  2193  0D9E                     	;# 
  2194  0D9E                     	;# 
  2195  0D9F                     	;# 
  2196  0DA0                     	;# 
  2197  0DA1                     	;# 
  2198  0DA1                     	;# 
  2199  0DA2                     	;# 
  2200  0DA3                     	;# 
  2201  0DA4                     	;# 
  2202  0DA4                     	;# 
  2203  0DA5                     	;# 
  2204  0DA6                     	;# 
  2205  0DA7                     	;# 
  2206  0DA7                     	;# 
  2207  0DA8                     	;# 
  2208  0DA9                     	;# 
  2209  0DAA                     	;# 
  2210  0DAB                     	;# 
  2211  0DAC                     	;# 
  2212  0DAD                     	;# 
  2213  0DAE                     	;# 
  2214  0DAF                     	;# 
  2215  0E0F                     	;# 
  2216  0E10                     	;# 
  2217  0E11                     	;# 
  2218  0E12                     	;# 
  2219  0E13                     	;# 
  2220  0E14                     	;# 
  2221  0E15                     	;# 
  2222  0E16                     	;# 
  2223  0E17                     	;# 
  2224  0E18                     	;# 
  2225  0E19                     	;# 
  2226  0E1A                     	;# 
  2227  0E1B                     	;# 
  2228  0E1C                     	;# 
  2229  0E1D                     	;# 
  2230  0E1E                     	;# 
  2231  0E1F                     	;# 
  2232  0E20                     	;# 
  2233  0E21                     	;# 
  2234  0E22                     	;# 
  2235  0E23                     	;# 
  2236  0E24                     	;# 
  2237  0E25                     	;# 
  2238  0E26                     	;# 
  2239  0E27                     	;# 
  2240  0E28                     	;# 
  2241  0E29                     	;# 
  2242  0E2A                     	;# 
  2243  0E2B                     	;# 
  2244  0E2C                     	;# 
  2245  0E2D                     	;# 
  2246  0E2E                     	;# 
  2247  0E90                     	;# 
  2248  0E91                     	;# 
  2249  0E92                     	;# 
  2250  0E94                     	;# 
  2251  0E95                     	;# 
  2252  0E9C                     	;# 
  2253  0E9D                     	;# 
  2254  0E9E                     	;# 
  2255  0E9F                     	;# 
  2256  0EA0                     	;# 
  2257  0EA1                     	;# 
  2258  0EA2                     	;# 
  2259  0EA3                     	;# 
  2260  0EA4                     	;# 
  2261  0EA5                     	;# 
  2262  0EA6                     	;# 
  2263  0EA7                     	;# 
  2264  0F0F                     	;# 
  2265  0F10                     	;# 
  2266  0F11                     	;# 
  2267  0F12                     	;# 
  2268  0F13                     	;# 
  2269  0F14                     	;# 
  2270  0F15                     	;# 
  2271  0F16                     	;# 
  2272  0F17                     	;# 
  2273  0F18                     	;# 
  2274  0F19                     	;# 
  2275  0F1A                     	;# 
  2276  0F1B                     	;# 
  2277  0F1C                     	;# 
  2278  0F1D                     	;# 
  2279  0F1E                     	;# 
  2280  0F1F                     	;# 
  2281  0F20                     	;# 
  2282  0F21                     	;# 
  2283  0F22                     	;# 
  2284  0F23                     	;# 
  2285  0F24                     	;# 
  2286  0F25                     	;# 
  2287  0F26                     	;# 
  2288  0F27                     	;# 
  2289  0F28                     	;# 
  2290  0F29                     	;# 
  2291  0F2A                     	;# 
  2292  0F2B                     	;# 
  2293  0F2C                     	;# 
  2294  0F2D                     	;# 
  2295  0F2E                     	;# 
  2296  0F2F                     	;# 
  2297  0F30                     	;# 
  2298  0F31                     	;# 
  2299  0F32                     	;# 
  2300  0F33                     	;# 
  2301  0F34                     	;# 
  2302  0F35                     	;# 
  2303  0F36                     	;# 
  2304  0F37                     	;# 
  2305  0FE4                     	;# 
  2306  0FE5                     	;# 
  2307  0FE6                     	;# 
  2308  0FE7                     	;# 
  2309  0FE8                     	;# 
  2310  0FE9                     	;# 
  2311  0FEA                     	;# 
  2312  0FEB                     	;# 
  2313  0FED                     	;# 
  2314  0FEE                     	;# 
  2315  0FEF                     	;# 
  2316  0000                     	;# 
  2317  0001                     	;# 
  2318  0002                     	;# 
  2319  0003                     	;# 
  2320  0004                     	;# 
  2321  0005                     	;# 
  2322  0006                     	;# 
  2323  0007                     	;# 
  2324  0008                     	;# 
  2325  0009                     	;# 
  2326  000A                     	;# 
  2327  000B                     	;# 
  2328  000C                     	;# 
  2329  000D                     	;# 
  2330  000E                     	;# 
  2331  0010                     	;# 
  2332  0011                     	;# 
  2333  0012                     	;# 
  2334  0013                     	;# 
  2335  0014                     	;# 
  2336  0015                     	;# 
  2337  0016                     	;# 
  2338  0016                     	;# 
  2339  0017                     	;# 
  2340  0018                     	;# 
  2341  0019                     	;# 
  2342  001A                     	;# 
  2343  001A                     	;# 
  2344  001B                     	;# 
  2345  001B                     	;# 
  2346  001C                     	;# 
  2347  001D                     	;# 
  2348  001E                     	;# 
  2349  001F                     	;# 
  2350  008C                     	;# 
  2351  008D                     	;# 
  2352  008E                     	;# 
  2353  0090                     	;# 
  2354  0091                     	;# 
  2355  0092                     	;# 
  2356  0093                     	;# 
  2357  0094                     	;# 
  2358  0095                     	;# 
  2359  0096                     	;# 
  2360  0098                     	;# 
  2361  0099                     	;# 
  2362  009A                     	;# 
  2363  009B                     	;# 
  2364  009B                     	;# 
  2365  009C                     	;# 
  2366  009D                     	;# 
  2367  009E                     	;# 
  2368  009F                     	;# 
  2369  010C                     	;# 
  2370  010D                     	;# 
  2371  010E                     	;# 
  2372  0111                     	;# 
  2373  0112                     	;# 
  2374  0113                     	;# 
  2375  0114                     	;# 
  2376  0115                     	;# 
  2377  0116                     	;# 
  2378  0117                     	;# 
  2379  0118                     	;# 
  2380  0119                     	;# 
  2381  011C                     	;# 
  2382  018C                     	;# 
  2383  018D                     	;# 
  2384  018E                     	;# 
  2385  0191                     	;# 
  2386  0191                     	;# 
  2387  0192                     	;# 
  2388  0193                     	;# 
  2389  0193                     	;# 
  2390  0194                     	;# 
  2391  0195                     	;# 
  2392  0196                     	;# 
  2393  0197                     	;# 
  2394  0199                     	;# 
  2395  0199                     	;# 
  2396  0199                     	;# 
  2397  019A                     	;# 
  2398  019A                     	;# 
  2399  019A                     	;# 
  2400  019B                     	;# 
  2401  019B                     	;# 
  2402  019B                     	;# 
  2403  019B                     	;# 
  2404  019B                     	;# 
  2405  019C                     	;# 
  2406  019C                     	;# 
  2407  019C                     	;# 
  2408  019D                     	;# 
  2409  019D                     	;# 
  2410  019D                     	;# 
  2411  019E                     	;# 
  2412  019E                     	;# 
  2413  019E                     	;# 
  2414  019F                     	;# 
  2415  019F                     	;# 
  2416  019F                     	;# 
  2417  019F                     	;# 
  2418  019F                     	;# 
  2419  020C                     	;# 
  2420  020D                     	;# 
  2421  020E                     	;# 
  2422  0211                     	;# 
  2423  0211                     	;# 
  2424  0212                     	;# 
  2425  0212                     	;# 
  2426  0213                     	;# 
  2427  0213                     	;# 
  2428  0214                     	;# 
  2429  0214                     	;# 
  2430  0215                     	;# 
  2431  0215                     	;# 
  2432  0215                     	;# 
  2433  0215                     	;# 
  2434  0216                     	;# 
  2435  0216                     	;# 
  2436  0217                     	;# 
  2437  0217                     	;# 
  2438  028C                     	;# 
  2439  028D                     	;# 
  2440  028E                     	;# 
  2441  0291                     	;# 
  2442  0291                     	;# 
  2443  0292                     	;# 
  2444  0293                     	;# 
  2445  0294                     	;# 
  2446  0298                     	;# 
  2447  0298                     	;# 
  2448  0299                     	;# 
  2449  029A                     	;# 
  2450  029B                     	;# 
  2451  029E                     	;# 
  2452  030C                     	;# 
  2453  030D                     	;# 
  2454  030E                     	;# 
  2455  038C                     	;# 
  2456  038D                     	;# 
  2457  038E                     	;# 
  2458  0391                     	;# 
  2459  0392                     	;# 
  2460  0393                     	;# 
  2461  0394                     	;# 
  2462  0395                     	;# 
  2463  0396                     	;# 
  2464  0397                     	;# 
  2465  0398                     	;# 
  2466  0399                     	;# 
  2467  040E                     	;# 
  2468  0413                     	;# 
  2469  0413                     	;# 
  2470  0414                     	;# 
  2471  0414                     	;# 
  2472  0415                     	;# 
  2473  0416                     	;# 
  2474  0417                     	;# 
  2475  0418                     	;# 
  2476  041A                     	;# 
  2477  041A                     	;# 
  2478  041B                     	;# 
  2479  041B                     	;# 
  2480  041C                     	;# 
  2481  041D                     	;# 
  2482  041E                     	;# 
  2483  041F                     	;# 
  2484  0493                     	;# 
  2485  0494                     	;# 
  2486  0495                     	;# 
  2487  0496                     	;# 
  2488  049A                     	;# 
  2489  049B                     	;# 
  2490  049C                     	;# 
  2491  049D                     	;# 
  2492  058C                     	;# 
  2493  058C                     	;# 
  2494  058D                     	;# 
  2495  058E                     	;# 
  2496  058E                     	;# 
  2497  058F                     	;# 
  2498  0590                     	;# 
  2499  0590                     	;# 
  2500  0591                     	;# 
  2501  0592                     	;# 
  2502  0592                     	;# 
  2503  0593                     	;# 
  2504  0594                     	;# 
  2505  0594                     	;# 
  2506  0595                     	;# 
  2507  0596                     	;# 
  2508  0596                     	;# 
  2509  0597                     	;# 
  2510  0598                     	;# 
  2511  0599                     	;# 
  2512  059A                     	;# 
  2513  059B                     	;# 
  2514  059B                     	;# 
  2515  059C                     	;# 
  2516  059D                     	;# 
  2517  060C                     	;# 
  2518  060C                     	;# 
  2519  060D                     	;# 
  2520  060E                     	;# 
  2521  060F                     	;# 
  2522  060F                     	;# 
  2523  0610                     	;# 
  2524  0611                     	;# 
  2525  0612                     	;# 
  2526  0613                     	;# 
  2527  0614                     	;# 
  2528  0617                     	;# 
  2529  0617                     	;# 
  2530  0618                     	;# 
  2531  0619                     	;# 
  2532  061A                     	;# 
  2533  061A                     	;# 
  2534  061B                     	;# 
  2535  061C                     	;# 
  2536  0691                     	;# 
  2537  0692                     	;# 
  2538  0693                     	;# 
  2539  0694                     	;# 
  2540  0695                     	;# 
  2541  0696                     	;# 
  2542  0697                     	;# 
  2543  0699                     	;# 
  2544  069A                     	;# 
  2545  0711                     	;# 
  2546  0712                     	;# 
  2547  0713                     	;# 
  2548  0714                     	;# 
  2549  0715                     	;# 
  2550  0718                     	;# 
  2551  0718                     	;# 
  2552  0719                     	;# 
  2553  071A                     	;# 
  2554  071A                     	;# 
  2555  071B                     	;# 
  2556  071C                     	;# 
  2557  071D                     	;# 
  2558  0791                     	;# 
  2559  0791                     	;# 
  2560  0792                     	;# 
  2561  0793                     	;# 
  2562  0793                     	;# 
  2563  0794                     	;# 
  2564  0795                     	;# 
  2565  0795                     	;# 
  2566  0796                     	;# 
  2567  0797                     	;# 
  2568  0797                     	;# 
  2569  0798                     	;# 
  2570  0799                     	;# 
  2571  079A                     	;# 
  2572  080C                     	;# 
  2573  080C                     	;# 
  2574  080D                     	;# 
  2575  080E                     	;# 
  2576  080E                     	;# 
  2577  080F                     	;# 
  2578  0810                     	;# 
  2579  0810                     	;# 
  2580  0811                     	;# 
  2581  0812                     	;# 
  2582  0812                     	;# 
  2583  0813                     	;# 
  2584  0814                     	;# 
  2585  0815                     	;# 
  2586  0816                     	;# 
  2587  0817                     	;# 
  2588  0818                     	;# 
  2589  0819                     	;# 
  2590  081A                     	;# 
  2591  081A                     	;# 
  2592  081B                     	;# 
  2593  081C                     	;# 
  2594  081C                     	;# 
  2595  081D                     	;# 
  2596  088C                     	;# 
  2597  088D                     	;# 
  2598  088E                     	;# 
  2599  088F                     	;# 
  2600  088F                     	;# 
  2601  0890                     	;# 
  2602  0891                     	;# 
  2603  0892                     	;# 
  2604  0893                     	;# 
  2605  0893                     	;# 
  2606  0894                     	;# 
  2607  0895                     	;# 
  2608  0896                     	;# 
  2609  0897                     	;# 
  2610  0897                     	;# 
  2611  0898                     	;# 
  2612  0899                     	;# 
  2613  0D8C                     	;# 
  2614  0D8C                     	;# 
  2615  0D8D                     	;# 
  2616  0D8E                     	;# 
  2617  0D8F                     	;# 
  2618  0D8F                     	;# 
  2619  0D90                     	;# 
  2620  0D91                     	;# 
  2621  0D92                     	;# 
  2622  0D92                     	;# 
  2623  0D93                     	;# 
  2624  0D94                     	;# 
  2625  0D95                     	;# 
  2626  0D95                     	;# 
  2627  0D96                     	;# 
  2628  0D97                     	;# 
  2629  0D98                     	;# 
  2630  0D99                     	;# 
  2631  0D9A                     	;# 
  2632  0D9B                     	;# 
  2633  0D9C                     	;# 
  2634  0D9D                     	;# 
  2635  0D9E                     	;# 
  2636  0D9E                     	;# 
  2637  0D9F                     	;# 
  2638  0DA0                     	;# 
  2639  0DA1                     	;# 
  2640  0DA1                     	;# 
  2641  0DA2                     	;# 
  2642  0DA3                     	;# 
  2643  0DA4                     	;# 
  2644  0DA4                     	;# 
  2645  0DA5                     	;# 
  2646  0DA6                     	;# 
  2647  0DA7                     	;# 
  2648  0DA7                     	;# 
  2649  0DA8                     	;# 
  2650  0DA9                     	;# 
  2651  0DAA                     	;# 
  2652  0DAB                     	;# 
  2653  0DAC                     	;# 
  2654  0DAD                     	;# 
  2655  0DAE                     	;# 
  2656  0DAF                     	;# 
  2657  0E0F                     	;# 
  2658  0E10                     	;# 
  2659  0E11                     	;# 
  2660  0E12                     	;# 
  2661  0E13                     	;# 
  2662  0E14                     	;# 
  2663  0E15                     	;# 
  2664  0E16                     	;# 
  2665  0E17                     	;# 
  2666  0E18                     	;# 
  2667  0E19                     	;# 
  2668  0E1A                     	;# 
  2669  0E1B                     	;# 
  2670  0E1C                     	;# 
  2671  0E1D                     	;# 
  2672  0E1E                     	;# 
  2673  0E1F                     	;# 
  2674  0E20                     	;# 
  2675  0E21                     	;# 
  2676  0E22                     	;# 
  2677  0E23                     	;# 
  2678  0E24                     	;# 
  2679  0E25                     	;# 
  2680  0E26                     	;# 
  2681  0E27                     	;# 
  2682  0E28                     	;# 
  2683  0E29                     	;# 
  2684  0E2A                     	;# 
  2685  0E2B                     	;# 
  2686  0E2C                     	;# 
  2687  0E2D                     	;# 
  2688  0E2E                     	;# 
  2689  0E90                     	;# 
  2690  0E91                     	;# 
  2691  0E92                     	;# 
  2692  0E94                     	;# 
  2693  0E95                     	;# 
  2694  0E9C                     	;# 
  2695  0E9D                     	;# 
  2696  0E9E                     	;# 
  2697  0E9F                     	;# 
  2698  0EA0                     	;# 
  2699  0EA1                     	;# 
  2700  0EA2                     	;# 
  2701  0EA3                     	;# 
  2702  0EA4                     	;# 
  2703  0EA5                     	;# 
  2704  0EA6                     	;# 
  2705  0EA7                     	;# 
  2706  0F0F                     	;# 
  2707  0F10                     	;# 
  2708  0F11                     	;# 
  2709  0F12                     	;# 
  2710  0F13                     	;# 
  2711  0F14                     	;# 
  2712  0F15                     	;# 
  2713  0F16                     	;# 
  2714  0F17                     	;# 
  2715  0F18                     	;# 
  2716  0F19                     	;# 
  2717  0F1A                     	;# 
  2718  0F1B                     	;# 
  2719  0F1C                     	;# 
  2720  0F1D                     	;# 
  2721  0F1E                     	;# 
  2722  0F1F                     	;# 
  2723  0F20                     	;# 
  2724  0F21                     	;# 
  2725  0F22                     	;# 
  2726  0F23                     	;# 
  2727  0F24                     	;# 
  2728  0F25                     	;# 
  2729  0F26                     	;# 
  2730  0F27                     	;# 
  2731  0F28                     	;# 
  2732  0F29                     	;# 
  2733  0F2A                     	;# 
  2734  0F2B                     	;# 
  2735  0F2C                     	;# 
  2736  0F2D                     	;# 
  2737  0F2E                     	;# 
  2738  0F2F                     	;# 
  2739  0F30                     	;# 
  2740  0F31                     	;# 
  2741  0F32                     	;# 
  2742  0F33                     	;# 
  2743  0F34                     	;# 
  2744  0F35                     	;# 
  2745  0F36                     	;# 
  2746  0F37                     	;# 
  2747  0FE4                     	;# 
  2748  0FE5                     	;# 
  2749  0FE6                     	;# 
  2750  0FE7                     	;# 
  2751  0FE8                     	;# 
  2752  0FE9                     	;# 
  2753  0FEA                     	;# 
  2754  0FEB                     	;# 
  2755  0FED                     	;# 
  2756  0FEE                     	;# 
  2757  0FEF                     	;# 
  2758  0000                     	;# 
  2759  0001                     	;# 
  2760  0002                     	;# 
  2761  0003                     	;# 
  2762  0004                     	;# 
  2763  0005                     	;# 
  2764  0006                     	;# 
  2765  0007                     	;# 
  2766  0008                     	;# 
  2767  0009                     	;# 
  2768  000A                     	;# 
  2769  000B                     	;# 
  2770  000C                     	;# 
  2771  000D                     	;# 
  2772  000E                     	;# 
  2773  0010                     	;# 
  2774  0011                     	;# 
  2775  0012                     	;# 
  2776  0013                     	;# 
  2777  0014                     	;# 
  2778  0015                     	;# 
  2779  0016                     	;# 
  2780  0016                     	;# 
  2781  0017                     	;# 
  2782  0018                     	;# 
  2783  0019                     	;# 
  2784  001A                     	;# 
  2785  001A                     	;# 
  2786  001B                     	;# 
  2787  001B                     	;# 
  2788  001C                     	;# 
  2789  001D                     	;# 
  2790  001E                     	;# 
  2791  001F                     	;# 
  2792  008C                     	;# 
  2793  008D                     	;# 
  2794  008E                     	;# 
  2795  0090                     	;# 
  2796  0091                     	;# 
  2797  0092                     	;# 
  2798  0093                     	;# 
  2799  0094                     	;# 
  2800  0095                     	;# 
  2801  0096                     	;# 
  2802  0098                     	;# 
  2803  0099                     	;# 
  2804  009A                     	;# 
  2805  009B                     	;# 
  2806  009B                     	;# 
  2807  009C                     	;# 
  2808  009D                     	;# 
  2809  009E                     	;# 
  2810  009F                     	;# 
  2811  010C                     	;# 
  2812  010D                     	;# 
  2813  010E                     	;# 
  2814  0111                     	;# 
  2815  0112                     	;# 
  2816  0113                     	;# 
  2817  0114                     	;# 
  2818  0115                     	;# 
  2819  0116                     	;# 
  2820  0117                     	;# 
  2821  0118                     	;# 
  2822  0119                     	;# 
  2823  011C                     	;# 
  2824  018C                     	;# 
  2825  018D                     	;# 
  2826  018E                     	;# 
  2827  0191                     	;# 
  2828  0191                     	;# 
  2829  0192                     	;# 
  2830  0193                     	;# 
  2831  0193                     	;# 
  2832  0194                     	;# 
  2833  0195                     	;# 
  2834  0196                     	;# 
  2835  0197                     	;# 
  2836  0199                     	;# 
  2837  0199                     	;# 
  2838  0199                     	;# 
  2839  019A                     	;# 
  2840  019A                     	;# 
  2841  019A                     	;# 
  2842  019B                     	;# 
  2843  019B                     	;# 
  2844  019B                     	;# 
  2845  019B                     	;# 
  2846  019B                     	;# 
  2847  019C                     	;# 
  2848  019C                     	;# 
  2849  019C                     	;# 
  2850  019D                     	;# 
  2851  019D                     	;# 
  2852  019D                     	;# 
  2853  019E                     	;# 
  2854  019E                     	;# 
  2855  019E                     	;# 
  2856  019F                     	;# 
  2857  019F                     	;# 
  2858  019F                     	;# 
  2859  019F                     	;# 
  2860  019F                     	;# 
  2861  020C                     	;# 
  2862  020D                     	;# 
  2863  020E                     	;# 
  2864  0211                     	;# 
  2865  0211                     	;# 
  2866  0212                     	;# 
  2867  0212                     	;# 
  2868  0213                     	;# 
  2869  0213                     	;# 
  2870  0214                     	;# 
  2871  0214                     	;# 
  2872  0215                     	;# 
  2873  0215                     	;# 
  2874  0215                     	;# 
  2875  0215                     	;# 
  2876  0216                     	;# 
  2877  0216                     	;# 
  2878  0217                     	;# 
  2879  0217                     	;# 
  2880  028C                     	;# 
  2881  028D                     	;# 
  2882  028E                     	;# 
  2883  0291                     	;# 
  2884  0291                     	;# 
  2885  0292                     	;# 
  2886  0293                     	;# 
  2887  0294                     	;# 
  2888  0298                     	;# 
  2889  0298                     	;# 
  2890  0299                     	;# 
  2891  029A                     	;# 
  2892  029B                     	;# 
  2893  029E                     	;# 
  2894  030C                     	;# 
  2895  030D                     	;# 
  2896  030E                     	;# 
  2897  038C                     	;# 
  2898  038D                     	;# 
  2899  038E                     	;# 
  2900  0391                     	;# 
  2901  0392                     	;# 
  2902  0393                     	;# 
  2903  0394                     	;# 
  2904  0395                     	;# 
  2905  0396                     	;# 
  2906  0397                     	;# 
  2907  0398                     	;# 
  2908  0399                     	;# 
  2909  040E                     	;# 
  2910  0413                     	;# 
  2911  0413                     	;# 
  2912  0414                     	;# 
  2913  0414                     	;# 
  2914  0415                     	;# 
  2915  0416                     	;# 
  2916  0417                     	;# 
  2917  0418                     	;# 
  2918  041A                     	;# 
  2919  041A                     	;# 
  2920  041B                     	;# 
  2921  041B                     	;# 
  2922  041C                     	;# 
  2923  041D                     	;# 
  2924  041E                     	;# 
  2925  041F                     	;# 
  2926  0493                     	;# 
  2927  0494                     	;# 
  2928  0495                     	;# 
  2929  0496                     	;# 
  2930  049A                     	;# 
  2931  049B                     	;# 
  2932  049C                     	;# 
  2933  049D                     	;# 
  2934  058C                     	;# 
  2935  058C                     	;# 
  2936  058D                     	;# 
  2937  058E                     	;# 
  2938  058E                     	;# 
  2939  058F                     	;# 
  2940  0590                     	;# 
  2941  0590                     	;# 
  2942  0591                     	;# 
  2943  0592                     	;# 
  2944  0592                     	;# 
  2945  0593                     	;# 
  2946  0594                     	;# 
  2947  0594                     	;# 
  2948  0595                     	;# 
  2949  0596                     	;# 
  2950  0596                     	;# 
  2951  0597                     	;# 
  2952  0598                     	;# 
  2953  0599                     	;# 
  2954  059A                     	;# 
  2955  059B                     	;# 
  2956  059B                     	;# 
  2957  059C                     	;# 
  2958  059D                     	;# 
  2959  060C                     	;# 
  2960  060C                     	;# 
  2961  060D                     	;# 
  2962  060E                     	;# 
  2963  060F                     	;# 
  2964  060F                     	;# 
  2965  0610                     	;# 
  2966  0611                     	;# 
  2967  0612                     	;# 
  2968  0613                     	;# 
  2969  0614                     	;# 
  2970  0617                     	;# 
  2971  0617                     	;# 
  2972  0618                     	;# 
  2973  0619                     	;# 
  2974  061A                     	;# 
  2975  061A                     	;# 
  2976  061B                     	;# 
  2977  061C                     	;# 
  2978  0691                     	;# 
  2979  0692                     	;# 
  2980  0693                     	;# 
  2981  0694                     	;# 
  2982  0695                     	;# 
  2983  0696                     	;# 
  2984  0697                     	;# 
  2985  0699                     	;# 
  2986  069A                     	;# 
  2987  0711                     	;# 
  2988  0712                     	;# 
  2989  0713                     	;# 
  2990  0714                     	;# 
  2991  0715                     	;# 
  2992  0718                     	;# 
  2993  0718                     	;# 
  2994  0719                     	;# 
  2995  071A                     	;# 
  2996  071A                     	;# 
  2997  071B                     	;# 
  2998  071C                     	;# 
  2999  071D                     	;# 
  3000  0791                     	;# 
  3001  0791                     	;# 
  3002  0792                     	;# 
  3003  0793                     	;# 
  3004  0793                     	;# 
  3005  0794                     	;# 
  3006  0795                     	;# 
  3007  0795                     	;# 
  3008  0796                     	;# 
  3009  0797                     	;# 
  3010  0797                     	;# 
  3011  0798                     	;# 
  3012  0799                     	;# 
  3013  079A                     	;# 
  3014  080C                     	;# 
  3015  080C                     	;# 
  3016  080D                     	;# 
  3017  080E                     	;# 
  3018  080E                     	;# 
  3019  080F                     	;# 
  3020  0810                     	;# 
  3021  0810                     	;# 
  3022  0811                     	;# 
  3023  0812                     	;# 
  3024  0812                     	;# 
  3025  0813                     	;# 
  3026  0814                     	;# 
  3027  0815                     	;# 
  3028  0816                     	;# 
  3029  0817                     	;# 
  3030  0818                     	;# 
  3031  0819                     	;# 
  3032  081A                     	;# 
  3033  081A                     	;# 
  3034  081B                     	;# 
  3035  081C                     	;# 
  3036  081C                     	;# 
  3037  081D                     	;# 
  3038  088C                     	;# 
  3039  088D                     	;# 
  3040  088E                     	;# 
  3041  088F                     	;# 
  3042  088F                     	;# 
  3043  0890                     	;# 
  3044  0891                     	;# 
  3045  0892                     	;# 
  3046  0893                     	;# 
  3047  0893                     	;# 
  3048  0894                     	;# 
  3049  0895                     	;# 
  3050  0896                     	;# 
  3051  0897                     	;# 
  3052  0897                     	;# 
  3053  0898                     	;# 
  3054  0899                     	;# 
  3055  0D8C                     	;# 
  3056  0D8C                     	;# 
  3057  0D8D                     	;# 
  3058  0D8E                     	;# 
  3059  0D8F                     	;# 
  3060  0D8F                     	;# 
  3061  0D90                     	;# 
  3062  0D91                     	;# 
  3063  0D92                     	;# 
  3064  0D92                     	;# 
  3065  0D93                     	;# 
  3066  0D94                     	;# 
  3067  0D95                     	;# 
  3068  0D95                     	;# 
  3069  0D96                     	;# 
  3070  0D97                     	;# 
  3071  0D98                     	;# 
  3072  0D99                     	;# 
  3073  0D9A                     	;# 
  3074  0D9B                     	;# 
  3075  0D9C                     	;# 
  3076  0D9D                     	;# 
  3077  0D9E                     	;# 
  3078  0D9E                     	;# 
  3079  0D9F                     	;# 
  3080  0DA0                     	;# 
  3081  0DA1                     	;# 
  3082  0DA1                     	;# 
  3083  0DA2                     	;# 
  3084  0DA3                     	;# 
  3085  0DA4                     	;# 
  3086  0DA4                     	;# 
  3087  0DA5                     	;# 
  3088  0DA6                     	;# 
  3089  0DA7                     	;# 
  3090  0DA7                     	;# 
  3091  0DA8                     	;# 
  3092  0DA9                     	;# 
  3093  0DAA                     	;# 
  3094  0DAB                     	;# 
  3095  0DAC                     	;# 
  3096  0DAD                     	;# 
  3097  0DAE                     	;# 
  3098  0DAF                     	;# 
  3099  0E0F                     	;# 
  3100  0E10                     	;# 
  3101  0E11                     	;# 
  3102  0E12                     	;# 
  3103  0E13                     	;# 
  3104  0E14                     	;# 
  3105  0E15                     	;# 
  3106  0E16                     	;# 
  3107  0E17                     	;# 
  3108  0E18                     	;# 
  3109  0E19                     	;# 
  3110  0E1A                     	;# 
  3111  0E1B                     	;# 
  3112  0E1C                     	;# 
  3113  0E1D                     	;# 
  3114  0E1E                     	;# 
  3115  0E1F                     	;# 
  3116  0E20                     	;# 
  3117  0E21                     	;# 
  3118  0E22                     	;# 
  3119  0E23                     	;# 
  3120  0E24                     	;# 
  3121  0E25                     	;# 
  3122  0E26                     	;# 
  3123  0E27                     	;# 
  3124  0E28                     	;# 
  3125  0E29                     	;# 
  3126  0E2A                     	;# 
  3127  0E2B                     	;# 
  3128  0E2C                     	;# 
  3129  0E2D                     	;# 
  3130  0E2E                     	;# 
  3131  0E90                     	;# 
  3132  0E91                     	;# 
  3133  0E92                     	;# 
  3134  0E94                     	;# 
  3135  0E95                     	;# 
  3136  0E9C                     	;# 
  3137  0E9D                     	;# 
  3138  0E9E                     	;# 
  3139  0E9F                     	;# 
  3140  0EA0                     	;# 
  3141  0EA1                     	;# 
  3142  0EA2                     	;# 
  3143  0EA3                     	;# 
  3144  0EA4                     	;# 
  3145  0EA5                     	;# 
  3146  0EA6                     	;# 
  3147  0EA7                     	;# 
  3148  0F0F                     	;# 
  3149  0F10                     	;# 
  3150  0F11                     	;# 
  3151  0F12                     	;# 
  3152  0F13                     	;# 
  3153  0F14                     	;# 
  3154  0F15                     	;# 
  3155  0F16                     	;# 
  3156  0F17                     	;# 
  3157  0F18                     	;# 
  3158  0F19                     	;# 
  3159  0F1A                     	;# 
  3160  0F1B                     	;# 
  3161  0F1C                     	;# 
  3162  0F1D                     	;# 
  3163  0F1E                     	;# 
  3164  0F1F                     	;# 
  3165  0F20                     	;# 
  3166  0F21                     	;# 
  3167  0F22                     	;# 
  3168  0F23                     	;# 
  3169  0F24                     	;# 
  3170  0F25                     	;# 
  3171  0F26                     	;# 
  3172  0F27                     	;# 
  3173  0F28                     	;# 
  3174  0F29                     	;# 
  3175  0F2A                     	;# 
  3176  0F2B                     	;# 
  3177  0F2C                     	;# 
  3178  0F2D                     	;# 
  3179  0F2E                     	;# 
  3180  0F2F                     	;# 
  3181  0F30                     	;# 
  3182  0F31                     	;# 
  3183  0F32                     	;# 
  3184  0F33                     	;# 
  3185  0F34                     	;# 
  3186  0F35                     	;# 
  3187  0F36                     	;# 
  3188  0F37                     	;# 
  3189  0FE4                     	;# 
  3190  0FE5                     	;# 
  3191  0FE6                     	;# 
  3192  0FE7                     	;# 
  3193  0FE8                     	;# 
  3194  0FE9                     	;# 
  3195  0FEA                     	;# 
  3196  0FEB                     	;# 
  3197  0FED                     	;# 
  3198  0FEE                     	;# 
  3199  0FEF                     	;# 
  3200                           
  3201 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  3202  0000                     
  3203 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  3204  0000                     
  3205 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  3206  0000                     
  3207                           	psect	idataBANK2
  3208  08CD                     __pidataBANK2:	
  3209                           
  3210                           ;initializer for _hrDisp
  3211  08CD  3448               	retlw	72
  3212  08CE  3465               	retlw	101
  3213  08CF  3461               	retlw	97
  3214  08D0  3472               	retlw	114
  3215  08D1  3474               	retlw	116
  3216  08D2  3420               	retlw	32
  3217  08D3  3452               	retlw	82
  3218  08D4  3461               	retlw	97
  3219  08D5  3474               	retlw	116
  3220  08D6  3465               	retlw	101
  3221  08D7  343A               	retlw	58
  3222  08D8  3420               	retlw	32
  3223  08D9  3400               	retlw	0
  3224                           
  3225                           ;initializer for _distanceDisp
  3226  08DA  3444               	retlw	68
  3227  08DB  3469               	retlw	105
  3228  08DC  3473               	retlw	115
  3229  08DD  3474               	retlw	116
  3230  08DE  3461               	retlw	97
  3231  08DF  346E               	retlw	110
  3232  08E0  3463               	retlw	99
  3233  08E1  3465               	retlw	101
  3234  08E2  343A               	retlw	58
  3235  08E3  3420               	retlw	32
  3236  08E4  3400               	retlw	0
  3237                           
  3238                           ;initializer for _speedDisp
  3239  08E5  3453               	retlw	83
  3240  08E6  3470               	retlw	112
  3241  08E7  3465               	retlw	101
  3242  08E8  3465               	retlw	101
  3243  08E9  3464               	retlw	100
  3244  08EA  343A               	retlw	58
  3245  08EB  3420               	retlw	32
  3246  08EC  3400               	retlw	0
  3247                           
  3248                           	psect	nvBANK0
  3249  006D                     __pnvBANK0:	
  3250  006D                     _IOCCF7_InterruptHandler:	
  3251  006D                     	ds	2
  3252  006F                     _timer0ReloadVal:	
  3253  006F                     	ds	1
  3254                           
  3255                           	psect	nvBANK2
  3256  0166                     __pnvBANK2:	
  3257  0166                     _TMR0_InterruptHandler:	
  3258  0166                     	ds	2
  3259  0168                     _EUSART_ErrorHandler:	
  3260  0168                     	ds	2
  3261  016A                     _EUSART_OverrunErrorHandler:	
  3262  016A                     	ds	2
  3263  016C                     _EUSART_FramingErrorHandler:	
  3264  016C                     	ds	2
  3265  0015                     _TMR0	set	21
  3266  000B                     _INTCONbits	set	11
  3267  0010                     _PIR1bits	set	16
  3268  0095                     _OPTION_REG	set	149
  3269  0095                     _OPTION_REGbits	set	149
  3270  008E                     _TRISC	set	142
  3271  008D                     _TRISB	set	141
  3272  008C                     _TRISA	set	140
  3273  0098                     _OSCTUNE	set	152
  3274  0099                     _OSCCON	set	153
  3275  010E                     _LATC	set	270
  3276  010D                     _LATB	set	269
  3277  010C                     _LATA	set	268
  3278  0116                     _BORCON	set	278
  3279  018C                     _ANSELA	set	396
  3280  018D                     _ANSELB	set	397
  3281  018E                     _ANSELC	set	398
  3282  019A                     _TX1REG	set	410
  3283  0199                     _RC1REG	set	409
  3284  019D                     _RC1STAbits	set	413
  3285  019E                     _TX1STAbits	set	414
  3286  019C                     _SPBRGH	set	412
  3287  019B                     _SPBRGL	set	411
  3288  019E                     _TX1STA	set	414
  3289  019D                     _RC1STA	set	413
  3290  019F                     _BAUD1CON	set	415
  3291  020E                     _WPUC	set	526
  3292  020C                     _WPUA	set	524
  3293  020D                     _WPUB	set	525
  3294  028E                     _ODCONC	set	654
  3295  028D                     _ODCONB	set	653
  3296  028C                     _ODCONA	set	652
  3297  030E                     _SLRCONC	set	782
  3298  030D                     _SLRCONB	set	781
  3299  030C                     _SLRCONA	set	780
  3300  0397                     _IOCCPbits	set	919
  3301  0398                     _IOCCNbits	set	920
  3302  0399                     _IOCCFbits	set	921
  3303  0E9F                     _RB7PPS	set	3743
  3304                           
  3305                           	psect	stringtext1
  3306  1000                     __pstringtext1:	
  3307  1000                     STR_1:	
  3308  1000  3425               	retlw	37	;'%'
  3309  1001  3464               	retlw	100	;'d'
  3310  1002  342E               	retlw	46	;'.'
  3311  1003  3425               	retlw	37	;'%'
  3312  1004  3464               	retlw	100	;'d'
  3313  1005  3420               	retlw	32	;' '
  3314  1006  346B               	retlw	107	;'k'
  3315  1007  3470               	retlw	112	;'p'
  3316  1008  3468               	retlw	104	;'h'
  3317  1009  3420               	retlw	32	;' '
  3318  100A  3420               	retlw	32	;' '
  3319  100B  3420               	retlw	32	;' '
  3320  100C  3420               	retlw	32	;' '
  3321  100D  3420               	retlw	32	;' '
  3322  100E  3400               	retlw	0
  3323                           
  3324                           	psect	stringtext2
  3325  100F                     __pstringtext2:	
  3326  100F                     STR_2:	
  3327  100F  3430               	retlw	48	;'0'
  3328  1010  3420               	retlw	32	;' '
  3329  1011  346B               	retlw	107	;'k'
  3330  1012  3470               	retlw	112	;'p'
  3331  1013  3468               	retlw	104	;'h'
  3332  1014  3420               	retlw	32	;' '
  3333  1015  3420               	retlw	32	;' '
  3334  1016  3420               	retlw	32	;' '
  3335  1017  3420               	retlw	32	;' '
  3336  1018  3420               	retlw	32	;' '
  3337  1019  3420               	retlw	32	;' '
  3338  101A  3420               	retlw	32	;' '
  3339  101B  3420               	retlw	32	;' '
  3340  101C  3400               	retlw	0
  3341                           
  3342                           	psect	stringtext3
  3343  1800                     __pstringtext3:	
  3344  1800                     STR_4:	
  3345  1800  3425               	retlw	37	;'%'
  3346  1801  3464               	retlw	100	;'d'
  3347  1802  3420               	retlw	32	;' '
  3348  1803  3462               	retlw	98	;'b'
  3349  1804  3470               	retlw	112	;'p'
  3350  1805  346D               	retlw	109	;'m'
  3351  1806  3420               	retlw	32	;' '
  3352  1807  3420               	retlw	32	;' '
  3353  1808  3420               	retlw	32	;' '
  3354  1809  3400               	retlw	0
  3355                           
  3356                           	psect	stringtext4
  3357  180A                     __pstringtext4:	
  3358  180A                     STR_3:	
  3359  180A  3425               	retlw	37	;'%'
  3360  180B  3464               	retlw	100	;'d'
  3361  180C  342E               	retlw	46	;'.'
  3362  180D  3425               	retlw	37	;'%'
  3363  180E  3464               	retlw	100	;'d'
  3364  180F  3420               	retlw	32	;' '
  3365  1810  346B               	retlw	107	;'k'
  3366  1811  346D               	retlw	109	;'m'
  3367  1812  3400               	retlw	0
  3368                           
  3369                           	psect	stringtext5
  3370  1813                     __pstringtext5:	
  3371  1813                     STR_5:	
  3372  1813  347C               	retlw	124	;'|'
  3373  1814  342D               	retlw	45	;'-'
  3374  1815  3400               	retlw	0
  3375                           
  3376                           	psect	stringtext6
  3377  0000                     __pstringtext6:	
  3378                           
  3379                           ; #config settings
  3380  0000                     
  3381                           	psect	cinit
  3382  0016                     start_initialization:	
  3383  0016                     __initialization:	
  3384                           
  3385                           ; Initialize objects allocated to BANK2
  3386  0016  30CD               	movlw	low __pidataBANK2
  3387  0017  0084               	movwf	4
  3388  0018  3088               	movlw	(high __pidataBANK2)| (0+128)
  3389  0019  0085               	movwf	5
  3390  001A  3020               	movlw	low __pdataBANK2
  3391  001B  0086               	movwf	6
  3392  001C  3001               	movlw	high __pdataBANK2
  3393  001D  0087               	movwf	7
  3394  001E  3020               	movlw	32
  3395  001F  3197  279B  3180   	fcall	init_ram
  3396                           
  3397                           ; Clear objects allocated to BANK0
  3398  0022  305C               	movlw	low __pbssBANK0
  3399  0023  0084               	movwf	4
  3400  0024  3000               	movlw	high __pbssBANK0
  3401  0025  0085               	movwf	5
  3402  0026  3011               	movlw	17
  3403  0027  3197  2795  3180   	fcall	clear_ram0
  3404                           
  3405                           ; Clear objects allocated to BANK2
  3406  002A  3040               	movlw	low __pbssBANK2
  3407  002B  0084               	movwf	4
  3408  002C  3001               	movlw	high __pbssBANK2
  3409  002D  0085               	movwf	5
  3410  002E  3018               	movlw	24
  3411  002F  3197  2795  3180   	fcall	clear_ram0
  3412                           
  3413                           ; Clear objects allocated to BANK3
  3414  0032  30A0               	movlw	low __pbssBANK3
  3415  0033  0084               	movwf	4
  3416  0034  3001               	movlw	high __pbssBANK3
  3417  0035  0085               	movwf	5
  3418  0036  3020               	movlw	32
  3419  0037  3197  2795         	fcall	clear_ram0
  3420  0039                     end_of_initialization:	
  3421                           ;End of C runtime variable initialization code
  3422                           
  3423  0039                     __end_of__initialization:	
  3424  0039  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3425  003A  0020               	movlb	0
  3426  003B  318C  2C77         	ljmp	_main	;jump to C main() function
  3427                           
  3428                           	psect	bssBANK0
  3429  005C                     __pbssBANK0:	
  3430  005C                     _speed:	
  3431  005C                     	ds	4
  3432  0060                     _width:	
  3433  0060                     	ds	2
  3434  0062                     _prec:	
  3435  0062                     	ds	2
  3436  0064                     _flags:	
  3437  0064                     	ds	2
  3438  0066                     _distance:	
  3439  0066                     	ds	2
  3440  0068                     _eusartRxLastError:	
  3441  0068                     	ds	1
  3442  0069                     _rpm:	
  3443  0069                     	ds	4
  3444                           
  3445                           	psect	bssBANK2
  3446  0140                     __pbssBANK2:	
  3447  0140                     _adcCounter:	
  3448  0140                     	ds	4
  3449  0144                     _heartRate:	
  3450  0144                     	ds	4
  3451  0148                     _nout:	
  3452  0148                     	ds	2
  3453  014A                     _hrInt:	
  3454  014A                     	ds	2
  3455  014C                     _speedHi:	
  3456  014C                     	ds	2
  3457  014E                     _speedLo:	
  3458  014E                     	ds	2
  3459  0150                     _distLo:	
  3460  0150                     	ds	2
  3461  0152                     _distHi:	
  3462  0152                     	ds	2
  3463  0154                     _counter:	
  3464  0154                     	ds	4
  3465                           
  3466                           	psect	dataBANK2
  3467  0120                     __pdataBANK2:	
  3468  0120                     _hrDisp:	
  3469  0120                     	ds	13
  3470  012D                     _distanceDisp:	
  3471  012D                     	ds	11
  3472  0138                     _speedDisp:	
  3473  0138                     	ds	8
  3474                           
  3475                           	psect	bssBANK3
  3476  01A0                     __pbssBANK3:	
  3477  01A0                     _dbuf:	
  3478  01A0                     	ds	32
  3479                           
  3480                           	psect	inittext
  3481  179B                     init_ram:	
  3482  179B  00FE               	movwf	126
  3483  179C                     initloop:	
  3484  179C  0012               	moviw fsr0++
  3485  179D  001E               	movwi fsr1++
  3486  179E  0BFE               	decfsz	126,f
  3487  179F  2F9C               	goto	initloop
  3488  17A0  3400               	retlw	0
  3489                           
  3490                           	psect	clrtext
  3491  1795                     clear_ram0:	
  3492                           ;	Called with FSR0 containing the base address, and
  3493                           ;	WREG with the size to clear
  3494                           
  3495  1795  0064               	clrwdt	;clear the watchdog before getting into this loop
  3496  1796                     clrloop0:	
  3497  1796  0180               	clrf	0	;clear RAM location pointed to by FSR
  3498  1797  3101               	addfsr 0,1
  3499  1798  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3500  1799  2F96               	goto	clrloop0	;have we reached the end yet?
  3501  179A  3400               	retlw	0	;all done for this memory range, return
  3502                           
  3503                           	psect	cstackBANK2
  3504  0158                     __pcstackBANK2:	
  3505  0158                     vfprintf@fp:	
  3506                           
  3507                           ; 1 bytes @ 0x0
  3508  0158                     	ds	1
  3509  0159                     vfprintf@cfmt:	
  3510                           
  3511                           ; 2 bytes @ 0x1
  3512  0159                     	ds	2
  3513  015B                     ?_printf:	
  3514  015B                     printf@fmt:	
  3515                           ; 2 bytes @ 0x3
  3516                           
  3517                           
  3518                           ; 2 bytes @ 0x3
  3519  015B                     	ds	8
  3520  0163                     printf@ap:	
  3521                           
  3522                           ; 1 bytes @ 0xB
  3523  0163                     	ds	1
  3524  0164                     ??_main:	
  3525                           
  3526                           ; 1 bytes @ 0xC
  3527  0164                     	ds	2
  3528                           
  3529                           	psect	cstackBANK1
  3530  00A0                     __pcstackBANK1:	
  3531  00A0                     ?___flge:	
  3532  00A0                     ?_EUSART_SetFramingErrorHandler:	
  3533                           ; 1 bit 
  3534                           
  3535  00A0                     ?_EUSART_SetOverrunErrorHandler:	
  3536                           ; 1 bytes @ 0x0
  3537                           
  3538  00A0                     ?_EUSART_SetErrorHandler:	
  3539                           ; 1 bytes @ 0x0
  3540                           
  3541  00A0                     ??_OSCILLATOR_Initialize:	
  3542                           ; 1 bytes @ 0x0
  3543                           
  3544  00A0                     ?_IOCCF7_SetInterruptHandler:	
  3545                           ; 1 bytes @ 0x0
  3546                           
  3547  00A0                     ?_TMR0_SetInterruptHandler:	
  3548                           ; 1 bytes @ 0x0
  3549                           
  3550  00A0                     ??_EUSART_is_tx_ready:	
  3551                           ; 1 bytes @ 0x0
  3552                           
  3553  00A0                     ??_EUSART_Write:	
  3554                           ; 1 bytes @ 0x0
  3555                           
  3556  00A0                     ?_strlen:	
  3557                           ; 1 bytes @ 0x0
  3558                           
  3559  00A0                     ?___fltol:	
  3560                           ; 2 bytes @ 0x0
  3561                           
  3562  00A0                     ?___aodiv:	
  3563                           ; 4 bytes @ 0x0
  3564                           
  3565  00A0                     ?___aomod:	
  3566                           ; 8 bytes @ 0x0
  3567                           
  3568  00A0                     _EUSART_is_tx_ready$167:	
  3569                           ; 8 bytes @ 0x0
  3570                           
  3571  00A0                     EUSART_Write@txData:	
  3572                           ; 1 bytes @ 0x0
  3573                           
  3574  00A0                     EUSART_SetFramingErrorHandler@interruptHandler:	
  3575                           ; 1 bytes @ 0x0
  3576                           
  3577  00A0                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  3578                           ; 2 bytes @ 0x0
  3579                           
  3580  00A0                     EUSART_SetErrorHandler@interruptHandler:	
  3581                           ; 2 bytes @ 0x0
  3582                           
  3583  00A0                     IOCCF7_SetInterruptHandler@InterruptHandler:	
  3584                           ; 2 bytes @ 0x0
  3585                           
  3586  00A0                     TMR0_SetInterruptHandler@InterruptHandler:	
  3587                           ; 2 bytes @ 0x0
  3588                           
  3589  00A0                     ___flge@ff1:	
  3590                           ; 2 bytes @ 0x0
  3591                           
  3592  00A0                     ___fltol@f1:	
  3593                           ; 4 bytes @ 0x0
  3594                           
  3595  00A0                     ___aodiv@divisor:	
  3596                           ; 4 bytes @ 0x0
  3597                           
  3598  00A0                     ___aomod@divisor:	
  3599                           ; 8 bytes @ 0x0
  3600                           
  3601                           
  3602                           ; 8 bytes @ 0x0
  3603  00A0                     	ds	1
  3604  00A1                     ?_setCursor:	
  3605  00A1                     ??_putch:	
  3606                           ; 1 bytes @ 0x1
  3607                           
  3608  00A1                     putch@txData:	
  3609                           ; 1 bytes @ 0x1
  3610                           
  3611  00A1                     setCursor@b:	
  3612                           ; 1 bytes @ 0x1
  3613                           
  3614                           
  3615                           ; 1 bytes @ 0x1
  3616  00A1                     	ds	1
  3617  00A2                     ??_EUSART_SetFramingErrorHandler:	
  3618  00A2                     ??_EUSART_SetOverrunErrorHandler:	
  3619                           ; 1 bytes @ 0x2
  3620                           
  3621  00A2                     ??_EUSART_SetErrorHandler:	
  3622                           ; 1 bytes @ 0x2
  3623                           
  3624  00A2                     ??_PIN_MANAGER_Initialize:	
  3625                           ; 1 bytes @ 0x2
  3626                           
  3627  00A2                     ??_TMR0_Initialize:	
  3628                           ; 1 bytes @ 0x2
  3629                           
  3630  00A2                     ??_IOCCF7_SetInterruptHandler:	
  3631                           ; 1 bytes @ 0x2
  3632                           
  3633  00A2                     ??_TMR0_SetInterruptHandler:	
  3634                           ; 1 bytes @ 0x2
  3635                           
  3636  00A2                     ??_setCursor:	
  3637                           ; 1 bytes @ 0x2
  3638                           
  3639  00A2                     ??_strlen:	
  3640                           ; 1 bytes @ 0x2
  3641                           
  3642  00A2                     ??_EUSART_Initialize:	
  3643                           ; 1 bytes @ 0x2
  3644                           
  3645  00A2                     ?_fputc:	
  3646                           ; 1 bytes @ 0x2
  3647                           
  3648  00A2                     fputc@c:	
  3649                           ; 2 bytes @ 0x2
  3650                           
  3651                           
  3652                           ; 2 bytes @ 0x2
  3653  00A2                     	ds	1
  3654  00A3                     ??_SYSTEM_Initialize:	
  3655  00A3                     strlen@a:	
  3656                           ; 1 bytes @ 0x3
  3657                           
  3658                           
  3659                           ; 1 bytes @ 0x3
  3660  00A3                     	ds	1
  3661  00A4                     ??___fltol:	
  3662  00A4                     setCursor@a:	
  3663                           ; 1 bytes @ 0x4
  3664                           
  3665  00A4                     fputc@fp:	
  3666                           ; 1 bytes @ 0x4
  3667                           
  3668  00A4                     strlen@s:	
  3669                           ; 1 bytes @ 0x4
  3670                           
  3671  00A4                     ___flge@ff2:	
  3672                           ; 1 bytes @ 0x4
  3673                           
  3674                           
  3675                           ; 4 bytes @ 0x4
  3676  00A4                     	ds	1
  3677  00A5                     ??_fputc:	
  3678                           
  3679                           ; 1 bytes @ 0x5
  3680  00A5                     	ds	3
  3681  00A8                     ??___flge:	
  3682  00A8                     ___aodiv@dividend:	
  3683                           ; 1 bytes @ 0x8
  3684                           
  3685  00A8                     ___aomod@dividend:	
  3686                           ; 8 bytes @ 0x8
  3687                           
  3688                           
  3689                           ; 8 bytes @ 0x8
  3690  00A8                     	ds	1
  3691  00A9                     ___fltol@sign1:	
  3692                           
  3693                           ; 1 bytes @ 0x9
  3694  00A9                     	ds	1
  3695  00AA                     ?_fputs:	
  3696  00AA                     ___fltol@exp1:	
  3697                           ; 2 bytes @ 0xA
  3698                           
  3699  00AA                     fputs@s:	
  3700                           ; 1 bytes @ 0xA
  3701                           
  3702                           
  3703                           ; 2 bytes @ 0xA
  3704  00AA                     	ds	2
  3705  00AC                     fputs@fp:	
  3706                           
  3707                           ; 1 bytes @ 0xC
  3708  00AC                     	ds	1
  3709  00AD                     ??_fputs:	
  3710                           
  3711                           ; 1 bytes @ 0xD
  3712  00AD                     	ds	3
  3713  00B0                     ??___aodiv:	
  3714  00B0                     ??___aomod:	
  3715                           ; 1 bytes @ 0x10
  3716                           
  3717  00B0                     fputs@c:	
  3718                           ; 1 bytes @ 0x10
  3719                           
  3720                           
  3721                           ; 1 bytes @ 0x10
  3722  00B0                     	ds	1
  3723  00B1                     ___aodiv@counter:	
  3724  00B1                     ___aomod@counter:	
  3725                           ; 1 bytes @ 0x11
  3726                           
  3727  00B1                     fputs@i:	
  3728                           ; 1 bytes @ 0x11
  3729                           
  3730                           
  3731                           ; 2 bytes @ 0x11
  3732  00B1                     	ds	1
  3733  00B2                     ___aodiv@sign:	
  3734  00B2                     ___aomod@sign:	
  3735                           ; 1 bytes @ 0x12
  3736                           
  3737                           
  3738                           ; 1 bytes @ 0x12
  3739  00B2                     	ds	1
  3740  00B3                     ?_puts:	
  3741  00B3                     ?_abs:	
  3742                           ; 2 bytes @ 0x13
  3743                           
  3744  00B3                     ?_pad:	
  3745                           ; 2 bytes @ 0x13
  3746                           
  3747  00B3                     pad@buf:	
  3748                           ; 2 bytes @ 0x13
  3749                           
  3750  00B3                     abs@a:	
  3751                           ; 1 bytes @ 0x13
  3752                           
  3753  00B3                     puts@s:	
  3754                           ; 2 bytes @ 0x13
  3755                           
  3756  00B3                     ___aodiv@quotient:	
  3757                           ; 2 bytes @ 0x13
  3758                           
  3759                           
  3760                           ; 8 bytes @ 0x13
  3761  00B3                     	ds	1
  3762  00B4                     pad@p:	
  3763                           
  3764                           ; 2 bytes @ 0x14
  3765  00B4                     	ds	1
  3766  00B5                     ??_puts:	
  3767  00B5                     ??_abs:	
  3768                           ; 1 bytes @ 0x15
  3769                           
  3770                           
  3771                           ; 1 bytes @ 0x15
  3772  00B5                     	ds	1
  3773  00B6                     ??_pad:	
  3774                           
  3775                           ; 1 bytes @ 0x16
  3776  00B6                     	ds	1
  3777  00B7                     _puts$1041:	
  3778  00B7                     pad@i:	
  3779                           ; 1 bytes @ 0x17
  3780                           
  3781                           
  3782                           ; 2 bytes @ 0x17
  3783  00B7                     	ds	1
  3784  00B8                     ??_resetCursor:	
  3785  00B8                     ??_writeString:	
  3786                           ; 1 bytes @ 0x18
  3787                           
  3788  00B8                     writeString@string:	
  3789                           ; 1 bytes @ 0x18
  3790                           
  3791                           
  3792                           ; 1 bytes @ 0x18
  3793  00B8                     	ds	1
  3794  00B9                     pad@w:	
  3795                           
  3796                           ; 2 bytes @ 0x19
  3797  00B9                     	ds	2
  3798  00BB                     pad@fp:	
  3799                           
  3800                           ; 1 bytes @ 0x1B
  3801  00BB                     	ds	1
  3802  00BC                     ?_dtoa:	
  3803  00BC                     dtoa@d:	
  3804                           ; 2 bytes @ 0x1C
  3805                           
  3806                           
  3807                           ; 8 bytes @ 0x1C
  3808  00BC                     	ds	8
  3809  00C4                     ??_dtoa:	
  3810                           
  3811                           ; 1 bytes @ 0x24
  3812  00C4                     	ds	3
  3813  00C7                     _dtoa$695:	
  3814                           
  3815                           ; 2 bytes @ 0x27
  3816  00C7                     	ds	2
  3817  00C9                     dtoa@p:	
  3818                           
  3819                           ; 2 bytes @ 0x29
  3820  00C9                     	ds	2
  3821  00CB                     dtoa@fp:	
  3822                           
  3823                           ; 1 bytes @ 0x2B
  3824  00CB                     	ds	1
  3825  00CC                     dtoa@w:	
  3826                           
  3827                           ; 2 bytes @ 0x2C
  3828  00CC                     	ds	2
  3829  00CE                     dtoa@s:	
  3830                           
  3831                           ; 2 bytes @ 0x2E
  3832  00CE                     	ds	2
  3833  00D0                     dtoa@n:	
  3834                           
  3835                           ; 8 bytes @ 0x30
  3836  00D0                     	ds	8
  3837  00D8                     dtoa@i:	
  3838                           
  3839                           ; 2 bytes @ 0x38
  3840  00D8                     	ds	2
  3841  00DA                     ?_vfpfcnvrt:	
  3842  00DA                     vfpfcnvrt@fmt:	
  3843                           ; 2 bytes @ 0x3A
  3844                           
  3845                           
  3846                           ; 1 bytes @ 0x3A
  3847  00DA                     	ds	1
  3848  00DB                     vfpfcnvrt@ap:	
  3849                           
  3850                           ; 1 bytes @ 0x3B
  3851  00DB                     	ds	1
  3852  00DC                     ??_vfpfcnvrt:	
  3853                           
  3854                           ; 1 bytes @ 0x3C
  3855  00DC                     	ds	5
  3856  00E1                     vfpfcnvrt@ll:	
  3857                           
  3858                           ; 8 bytes @ 0x41
  3859  00E1                     	ds	8
  3860  00E9                     vfpfcnvrt@fp:	
  3861                           
  3862                           ; 1 bytes @ 0x49
  3863  00E9                     	ds	1
  3864  00EA                     ?_vfprintf:	
  3865  00EA                     vfprintf@fmt:	
  3866                           ; 2 bytes @ 0x4A
  3867                           
  3868                           
  3869                           ; 2 bytes @ 0x4A
  3870  00EA                     	ds	2
  3871  00EC                     vfprintf@ap:	
  3872                           
  3873                           ; 1 bytes @ 0x4C
  3874  00EC                     	ds	1
  3875  00ED                     ??_vfprintf:	
  3876                           
  3877                           ; 1 bytes @ 0x4D
  3878  00ED                     	ds	2
  3879  00EF                     ??_printf:	
  3880                           
  3881                           ; 1 bytes @ 0x4F
  3882  00EF                     	ds	1
  3883                           
  3884                           	psect	cstackCOMMON
  3885  0070                     __pcstackCOMMON:	
  3886  0070                     ?_PIN_MANAGER_Initialize:	
  3887  0070                     ?_OSCILLATOR_Initialize:	
  3888                           ; 1 bytes @ 0x0
  3889                           
  3890  0070                     ?_TMR0_Initialize:	
  3891                           ; 1 bytes @ 0x0
  3892                           
  3893  0070                     ?_IOCCF7_DefaultInterruptHandler:	
  3894                           ; 1 bytes @ 0x0
  3895                           
  3896  0070                     ??_IOCCF7_DefaultInterruptHandler:	
  3897                           ; 1 bytes @ 0x0
  3898                           
  3899  0070                     ?_IOCCF7_ISR:	
  3900                           ; 1 bytes @ 0x0
  3901                           
  3902  0070                     ?_TMR0_DefaultInterruptHandler:	
  3903                           ; 1 bytes @ 0x0
  3904                           
  3905  0070                     ??_TMR0_DefaultInterruptHandler:	
  3906                           ; 1 bytes @ 0x0
  3907                           
  3908  0070                     ?_timerISR:	
  3909                           ; 1 bytes @ 0x0
  3910                           
  3911  0070                     ?_speedCalc:	
  3912                           ; 1 bytes @ 0x0
  3913                           
  3914  0070                     ?_resetCursor:	
  3915                           ; 1 bytes @ 0x0
  3916                           
  3917  0070                     ?_writeString:	
  3918                           ; 1 bytes @ 0x0
  3919                           
  3920  0070                     ?_EUSART_Initialize:	
  3921                           ; 1 bytes @ 0x0
  3922                           
  3923  0070                     ?_EUSART_is_tx_ready:	
  3924                           ; 1 bytes @ 0x0
  3925                           
  3926  0070                     ?_EUSART_Write:	
  3927                           ; 1 bytes @ 0x0
  3928                           
  3929  0070                     ?_putch:	
  3930                           ; 1 bytes @ 0x0
  3931                           
  3932  0070                     ?_SYSTEM_Initialize:	
  3933                           ; 1 bytes @ 0x0
  3934                           
  3935  0070                     ?_PIN_MANAGER_IOC:	
  3936                           ; 1 bytes @ 0x0
  3937                           
  3938  0070                     ?_TMR0_ISR:	
  3939                           ; 1 bytes @ 0x0
  3940                           
  3941  0070                     ?_INTERRUPT_InterruptManager:	
  3942                           ; 1 bytes @ 0x0
  3943                           
  3944  0070                     ?_main:	
  3945                           ; 1 bytes @ 0x0
  3946                           
  3947  0070                     ?__Umul8_16:	
  3948                           ; 1 bytes @ 0x0
  3949                           
  3950  0070                     ?___awdiv:	
  3951                           ; 2 bytes @ 0x0
  3952                           
  3953  0070                     ?___fladd:	
  3954                           ; 2 bytes @ 0x0
  3955                           
  3956  0070                     ?___fldiv:	
  3957                           ; 4 bytes @ 0x0
  3958                           
  3959  0070                     __Umul8_16@multiplicand:	
  3960                           ; 4 bytes @ 0x0
  3961                           
  3962  0070                     ___awdiv@divisor:	
  3963                           ; 1 bytes @ 0x0
  3964                           
  3965  0070                     ___fladd@b:	
  3966                           ; 2 bytes @ 0x0
  3967                           
  3968  0070                     ___fldiv@a:	
  3969                           ; 4 bytes @ 0x0
  3970                           
  3971                           
  3972                           ; 4 bytes @ 0x0
  3973  0070                     	ds	2
  3974  0072                     ??__Umul8_16:	
  3975  0072                     ___awdiv@dividend:	
  3976                           ; 1 bytes @ 0x2
  3977                           
  3978                           
  3979                           ; 2 bytes @ 0x2
  3980  0072                     	ds	2
  3981  0074                     ??___awdiv:	
  3982  0074                     __Umul8_16@product:	
  3983                           ; 1 bytes @ 0x4
  3984                           
  3985  0074                     ___fladd@a:	
  3986                           ; 2 bytes @ 0x4
  3987                           
  3988  0074                     ___fldiv@b:	
  3989                           ; 4 bytes @ 0x4
  3990                           
  3991                           
  3992                           ; 4 bytes @ 0x4
  3993  0074                     	ds	1
  3994  0075                     ___awdiv@counter:	
  3995                           
  3996                           ; 1 bytes @ 0x5
  3997  0075                     	ds	1
  3998  0076                     ___awdiv@sign:	
  3999  0076                     __Umul8_16@word_mpld:	
  4000                           ; 1 bytes @ 0x6
  4001                           
  4002                           
  4003                           ; 2 bytes @ 0x6
  4004  0076                     	ds	1
  4005  0077                     ___awdiv@quotient:	
  4006                           
  4007                           ; 2 bytes @ 0x7
  4008  0077                     	ds	1
  4009  0078                     ??___fldiv:	
  4010  0078                     ___fladd@signs:	
  4011                           ; 1 bytes @ 0x8
  4012                           
  4013  0078                     __Umul8_16@multiplier:	
  4014                           ; 1 bytes @ 0x8
  4015                           
  4016                           
  4017                           ; 1 bytes @ 0x8
  4018  0078                     	ds	1
  4019  0079                     ___fladd@aexp:	
  4020                           
  4021                           ; 1 bytes @ 0x9
  4022  0079                     	ds	1
  4023  007A                     ___fladd@bexp:	
  4024                           
  4025                           ; 1 bytes @ 0xA
  4026  007A                     	ds	1
  4027  007B                     ___fladd@grs:	
  4028                           
  4029                           ; 1 bytes @ 0xB
  4030  007B                     	ds	1
  4031  007C                     ??_timerISR:	
  4032  007C                     ??_TMR0_ISR:	
  4033                           ; 1 bytes @ 0xC
  4034                           
  4035                           
  4036                           ; 1 bytes @ 0xC
  4037  007C                     	ds	1
  4038  007D                     ??___awmod:	
  4039                           
  4040                           ; 1 bytes @ 0xD
  4041  007D                     	ds	1
  4042  007E                     ??_IOCCF7_ISR:	
  4043  007E                     ??_speedCalc:	
  4044                           ; 1 bytes @ 0xE
  4045                           
  4046  007E                     ??_PIN_MANAGER_IOC:	
  4047                           ; 1 bytes @ 0xE
  4048                           
  4049  007E                     ??_INTERRUPT_InterruptManager:	
  4050                           ; 1 bytes @ 0xE
  4051                           
  4052                           
  4053                           	psect	cstackBANK0
  4054  0020                     __pcstackBANK0:	
  4055                           ; 1 bytes @ 0xE
  4056                           
  4057  0020                     ??___fladd:	
  4058  0020                     ___fldiv@rem:	
  4059                           ; 1 bytes @ 0x0
  4060                           
  4061                           
  4062                           ; 4 bytes @ 0x0
  4063  0020                     	ds	4
  4064  0024                     ___fldiv@sign:	
  4065                           
  4066                           ; 1 bytes @ 0x4
  4067  0024                     	ds	1
  4068  0025                     ___fldiv@new_exp:	
  4069                           
  4070                           ; 2 bytes @ 0x5
  4071  0025                     	ds	2
  4072  0027                     ___fldiv@grs:	
  4073                           
  4074                           ; 4 bytes @ 0x7
  4075  0027                     	ds	4
  4076  002B                     ___fldiv@bexp:	
  4077                           
  4078                           ; 1 bytes @ 0xB
  4079  002B                     	ds	1
  4080  002C                     ___fldiv@aexp:	
  4081                           
  4082                           ; 1 bytes @ 0xC
  4083  002C                     	ds	1
  4084  002D                     ?___flmul:	
  4085  002D                     ___flmul@b:	
  4086                           ; 4 bytes @ 0xD
  4087                           
  4088                           
  4089                           ; 4 bytes @ 0xD
  4090  002D                     	ds	4
  4091  0031                     ___flmul@a:	
  4092                           
  4093                           ; 4 bytes @ 0x11
  4094  0031                     	ds	4
  4095  0035                     ??___flmul:	
  4096                           
  4097                           ; 1 bytes @ 0x15
  4098  0035                     	ds	5
  4099  003A                     ___flmul@sign:	
  4100                           
  4101                           ; 1 bytes @ 0x1A
  4102  003A                     	ds	1
  4103  003B                     ___flmul@grs:	
  4104                           
  4105                           ; 4 bytes @ 0x1B
  4106  003B                     	ds	4
  4107  003F                     ___flmul@aexp:	
  4108                           
  4109                           ; 1 bytes @ 0x1F
  4110  003F                     	ds	1
  4111  0040                     ___flmul@bexp:	
  4112                           
  4113                           ; 1 bytes @ 0x20
  4114  0040                     	ds	1
  4115  0041                     ___flmul@prod:	
  4116                           
  4117                           ; 4 bytes @ 0x21
  4118  0041                     	ds	4
  4119  0045                     ___flmul@temp:	
  4120                           
  4121                           ; 2 bytes @ 0x25
  4122  0045                     	ds	2
  4123  0047                     ?i1___fltol:	
  4124  0047                     i1___fltol@f1:	
  4125                           ; 4 bytes @ 0x27
  4126                           
  4127                           
  4128                           ; 4 bytes @ 0x27
  4129  0047                     	ds	4
  4130  004B                     ??i1___fltol:	
  4131                           
  4132                           ; 1 bytes @ 0x2B
  4133  004B                     	ds	5
  4134  0050                     i1___fltol@sign1:	
  4135                           
  4136                           ; 1 bytes @ 0x30
  4137  0050                     	ds	1
  4138  0051                     i1___fltol@exp1:	
  4139                           
  4140                           ; 1 bytes @ 0x31
  4141  0051                     	ds	1
  4142  0052                     ?___awmod:	
  4143  0052                     ___awmod@divisor:	
  4144                           ; 2 bytes @ 0x32
  4145                           
  4146                           
  4147                           ; 2 bytes @ 0x32
  4148  0052                     	ds	2
  4149  0054                     ___awmod@dividend:	
  4150                           
  4151                           ; 2 bytes @ 0x34
  4152  0054                     	ds	2
  4153  0056                     ___awmod@counter:	
  4154                           
  4155                           ; 1 bytes @ 0x36
  4156  0056                     	ds	1
  4157  0057                     ___awmod@sign:	
  4158                           
  4159                           ; 1 bytes @ 0x37
  4160  0057                     	ds	1
  4161  0058                     _speedCalc$1219:	
  4162                           
  4163                           ; 4 bytes @ 0x38
  4164  0058                     	ds	4
  4165                           
  4166                           	psect	maintext
  4167  0C77                     __pmaintext:	
  4168 ;;
  4169 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  4170 ;;
  4171 ;; *************** function _main *****************
  4172 ;; Defined at:
  4173 ;;		line 36 in file "main.c"
  4174 ;; Parameters:    Size  Location     Type
  4175 ;;		None
  4176 ;; Auto vars:     Size  Location     Type
  4177 ;;		None
  4178 ;; Return value:  Size  Location     Type
  4179 ;;                  1    wreg      void 
  4180 ;; Registers used:
  4181 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4182 ;; Tracked objects:
  4183 ;;		On entry : B1F/0
  4184 ;;		On exit  : 0/0
  4185 ;;		Unchanged: 0/0
  4186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4189 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  4190 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  4191 ;;Total ram usage:        2 bytes
  4192 ;; Hardware stack levels required when called:   15
  4193 ;; This function calls:
  4194 ;;		_IOCCF7_SetInterruptHandler
  4195 ;;		_SYSTEM_Initialize
  4196 ;;		_TMR0_SetInterruptHandler
  4197 ;;		___flge
  4198 ;;		___fltol
  4199 ;;		_printf
  4200 ;;		_resetCursor
  4201 ;;		_setCursor
  4202 ;;		_writeString
  4203 ;; This function is called by:
  4204 ;;		Startup code after reset
  4205 ;; This function uses a non-reentrant model
  4206 ;;
  4207                           
  4208                           
  4209                           ;psect for function _main
  4210  0C77                     _main:	
  4211                           
  4212                           ;main.c: 39:     SYSTEM_Initialize();
  4213                           
  4214                           ;incstack = 0
  4215                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4216  0C77  3197  27E7  318C   	fcall	_SYSTEM_Initialize
  4217                           
  4218                           ;main.c: 42:     TMR0_SetInterruptHandler( timerISR ) ;
  4219  0C7A  30ED               	movlw	low _timerISR
  4220  0C7B  0021               	movlb	1	; select bank1
  4221  0C7C  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler^(0+128)
  4222  0C7D  3008               	movlw	high _timerISR
  4223  0C7E  00A1               	movwf	(TMR0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  4224  0C7F  3197  27D4  318C   	fcall	_TMR0_SetInterruptHandler
  4225                           
  4226                           ;main.c: 43:     IOCCF7_SetInterruptHandler( speedCalc ) ;
  4227  0C82  3025               	movlw	low _speedCalc
  4228  0C83  0021               	movlb	1	; select bank1
  4229  0C84  00A0               	movwf	IOCCF7_SetInterruptHandler@InterruptHandler^(0+128)
  4230  0C85  300E               	movlw	high _speedCalc
  4231  0C86  00A1               	movwf	(IOCCF7_SetInterruptHandler@InterruptHandler^(0+128)+1)
  4232  0C87  3197  27CB  318C   	fcall	_IOCCF7_SetInterruptHandler
  4233                           
  4234                           ;main.c: 46:     _delay((unsigned long)((1000)*(16000000/4000.0))) ;
  4235  0C8A  3015               	movlw	21
  4236  0C8B  0022               	movlb	2	; select bank2
  4237  0C8C  00E5               	movwf	(??_main^(0+256)+1)
  4238  0C8D  304B               	movlw	75
  4239  0C8E  00E4               	movwf	??_main^(0+256)
  4240  0C8F  30BE               	movlw	190
  4241  0C90                     u4437:	
  4242  0C90  0B89               	decfsz	9,f
  4243  0C91  2C90               	goto	u4437
  4244  0C92  0BE4               	decfsz	??_main^(0+256),f
  4245  0C93  2C90               	goto	u4437
  4246  0C94  0BE5               	decfsz	(??_main^(0+256)+1),f
  4247  0C95  2C90               	goto	u4437
  4248  0C96  0000               	nop
  4249                           
  4250                           ;main.c: 48:     resetCursor() ;
  4251  0C97  3197  27A8  318C   	fcall	_resetCursor
  4252                           
  4253                           ;main.c: 50:     (INTCONbits.GIE = 1);
  4254  0C9A  178B               	bsf	11,7	;volatile
  4255                           
  4256                           ;main.c: 51:     (INTCONbits.PEIE = 1);
  4257  0C9B  170B               	bsf	11,6	;volatile
  4258  0C9C                     l3426:	
  4259                           
  4260                           ;main.c: 56:         setCursor(1,0) ;
  4261  0C9C  0021               	movlb	1	; select bank1
  4262  0C9D  01A1               	clrf	setCursor@b^(0+128)
  4263  0C9E  3001               	movlw	1
  4264  0C9F  3189  21C5  318C   	fcall	_setCursor
  4265                           
  4266                           ;main.c: 57:         writeString(speedDisp);
  4267  0CA2  3038               	movlw	(low (_speedDisp| (0+256)))& (0+255)
  4268  0CA3  3188  2034  318C   	fcall	_writeString
  4269                           
  4270                           ;main.c: 58:         setCursor(2,0) ;
  4271  0CA6  0021               	movlb	1	; select bank1
  4272  0CA7  01A1               	clrf	setCursor@b^(0+128)
  4273  0CA8  3002               	movlw	2
  4274  0CA9  3189  21C5  318C   	fcall	_setCursor
  4275                           
  4276                           ;main.c: 59:         writeString(distanceDisp);
  4277  0CAC  302D               	movlw	(low (_distanceDisp| (0+256)))& (0+255)
  4278  0CAD  3188  2034  318C   	fcall	_writeString
  4279                           
  4280                           ;main.c: 60:         setCursor(3,0) ;
  4281  0CB0  0021               	movlb	1	; select bank1
  4282  0CB1  01A1               	clrf	setCursor@b^(0+128)
  4283  0CB2  3003               	movlw	3
  4284  0CB3  3189  21C5  318C   	fcall	_setCursor
  4285                           
  4286                           ;main.c: 61:         writeString(hrDisp);
  4287  0CB6  3020               	movlw	(low (_hrDisp| (0+256)))& (0+255)
  4288  0CB7  3188  2034  318C   	fcall	_writeString
  4289                           
  4290                           ;main.c: 62:         setCursor(4,0) ;
  4291  0CBA  0021               	movlb	1	; select bank1
  4292  0CBB  01A1               	clrf	setCursor@b^(0+128)
  4293  0CBC  3004               	movlw	4
  4294  0CBD  3189  21C5  318C   	fcall	_setCursor
  4295                           
  4296                           ;main.c: 73:         setCursor(1,7) ;
  4297  0CC0  3007               	movlw	7
  4298  0CC1  0022               	movlb	2	; select bank2
  4299  0CC2  00E4               	movwf	??_main^(0+256)
  4300  0CC3  0864               	movf	??_main^(0+256),w
  4301  0CC4  0021               	movlb	1	; select bank1
  4302  0CC5  00A1               	movwf	setCursor@b^(0+128)
  4303  0CC6  3001               	movlw	1
  4304  0CC7  3189  21C5  318C   	fcall	_setCursor
  4305                           
  4306                           ;main.c: 74:         if( counter <= 15000 ) {
  4307  0CCA  3046               	movlw	70
  4308  0CCB  0021               	movlb	1	; select bank1
  4309  0CCC  00A3               	movwf	(___flge@ff1+3)^(0+128)
  4310  0CCD  306A               	movlw	106
  4311  0CCE  00A2               	movwf	(___flge@ff1+2)^(0+128)
  4312  0CCF  3060               	movlw	96
  4313  0CD0  00A1               	movwf	(___flge@ff1+1)^(0+128)
  4314  0CD1  3000               	movlw	0
  4315  0CD2  00A0               	movwf	___flge@ff1^(0+128)
  4316  0CD3  0022               	movlb	2	; select bank2
  4317  0CD4  0857               	movf	(_counter+3)^(0+256),w	;volatile
  4318  0CD5  0021               	movlb	1	; select bank1
  4319  0CD6  00A7               	movwf	(___flge@ff2+3)^(0+128)
  4320  0CD7  0022               	movlb	2	; select bank2
  4321  0CD8  0856               	movf	(_counter+2)^(0+256),w	;volatile
  4322  0CD9  0021               	movlb	1	; select bank1
  4323  0CDA  00A6               	movwf	(___flge@ff2+2)^(0+128)
  4324  0CDB  0022               	movlb	2	; select bank2
  4325  0CDC  0855               	movf	(_counter+1)^(0+256),w	;volatile
  4326  0CDD  0021               	movlb	1	; select bank1
  4327  0CDE  00A5               	movwf	(___flge@ff2+1)^(0+128)
  4328  0CDF  0022               	movlb	2	; select bank2
  4329  0CE0  0854               	movf	_counter^(0+256),w	;volatile
  4330  0CE1  0021               	movlb	1	; select bank1
  4331  0CE2  00A4               	movwf	___flge@ff2^(0+128)
  4332  0CE3  318B  23FB  318C   	fcall	___flge
  4333  0CE6  1C03               	btfss	3,0
  4334  0CE7  2CF6               	goto	l3448
  4335                           
  4336                           ;main.c: 75:             printf( "%d.%d kph     ", speedHi, speedLo ) ;
  4337  0CE8  3000               	movlw	low (STR_1| (0+32768))
  4338  0CE9  0022               	movlb	2	; select bank2
  4339  0CEA  00DB               	movwf	printf@fmt^(0+256)
  4340  0CEB  3090               	movlw	high (STR_1| (0+32768))
  4341  0CEC  00DC               	movwf	(printf@fmt^(0+256)+1)
  4342  0CED  084D               	movf	(_speedHi+1)^(0+256),w	;volatile
  4343  0CEE  00DE               	movwf	((?_printf+1)^(0+256)+2)
  4344  0CEF  084C               	movf	_speedHi^(0+256),w	;volatile
  4345  0CF0  00DD               	movwf	(?_printf^(0+256)+2)
  4346  0CF1  084F               	movf	(_speedLo+1)^(0+256),w	;volatile
  4347  0CF2  00E0               	movwf	((?_printf+1)^(0+256)+4)
  4348  0CF3  084E               	movf	_speedLo^(0+256),w	;volatile
  4349  0CF4  00DF               	movwf	(?_printf^(0+256)+4)
  4350  0CF5  2CFB               	goto	L1
  4351  0CF6                     l3448:	
  4352                           ;main.c: 76:         }
  4353                           
  4354                           
  4355                           ;main.c: 78:             printf( "0 kph        " ) ;
  4356  0CF6  300F               	movlw	low (STR_2| (0+32768))
  4357  0CF7  0022               	movlb	2	; select bank2
  4358  0CF8  00DB               	movwf	printf@fmt^(0+256)
  4359  0CF9  3090               	movlw	high (STR_2| (0+32768))
  4360  0CFA  00DC               	movwf	(printf@fmt^(0+256)+1)
  4361  0CFB                     L1:	
  4362  0CFB  3188  201F  318C   	fcall	_printf
  4363                           
  4364                           ;main.c: 82:         setCursor(2,10) ;
  4365  0CFE  300A               	movlw	10
  4366  0CFF  0022               	movlb	2	; select bank2
  4367  0D00  00E4               	movwf	??_main^(0+256)
  4368  0D01  0864               	movf	??_main^(0+256),w
  4369  0D02  0021               	movlb	1	; select bank1
  4370  0D03  00A1               	movwf	setCursor@b^(0+128)
  4371  0D04  3002               	movlw	2
  4372  0D05  3189  21C5  318C   	fcall	_setCursor
  4373                           
  4374                           ;main.c: 83:         printf( "%d.%d km" , distHi, distLo );
  4375  0D08  300A               	movlw	low (STR_3| (0+32768))
  4376  0D09  0022               	movlb	2	; select bank2
  4377  0D0A  00DB               	movwf	printf@fmt^(0+256)
  4378  0D0B  3098               	movlw	high (STR_3| (0+32768))
  4379  0D0C  00DC               	movwf	(printf@fmt^(0+256)+1)
  4380  0D0D  0853               	movf	(_distHi+1)^(0+256),w	;volatile
  4381  0D0E  00DE               	movwf	((?_printf+1)^(0+256)+2)
  4382  0D0F  0852               	movf	_distHi^(0+256),w	;volatile
  4383  0D10  00DD               	movwf	(?_printf^(0+256)+2)
  4384  0D11  0851               	movf	(_distLo+1)^(0+256),w	;volatile
  4385  0D12  00E0               	movwf	((?_printf+1)^(0+256)+4)
  4386  0D13  0850               	movf	_distLo^(0+256),w	;volatile
  4387  0D14  00DF               	movwf	(?_printf^(0+256)+4)
  4388  0D15  3188  201F  318C   	fcall	_printf
  4389                           
  4390                           ;main.c: 86:         setCursor(3,13) ;
  4391  0D18  300D               	movlw	13
  4392  0D19  0022               	movlb	2	; select bank2
  4393  0D1A  00E4               	movwf	??_main^(0+256)
  4394  0D1B  0864               	movf	??_main^(0+256),w
  4395  0D1C  0021               	movlb	1	; select bank1
  4396  0D1D  00A1               	movwf	setCursor@b^(0+128)
  4397  0D1E  3003               	movlw	3
  4398  0D1F  3189  21C5  318C   	fcall	_setCursor
  4399                           
  4400                           ;main.c: 87:         hrInt = heartRate ;
  4401  0D22  0022               	movlb	2	; select bank2
  4402  0D23  0847               	movf	(_heartRate+3)^(0+256),w	;volatile
  4403  0D24  0021               	movlb	1	; select bank1
  4404  0D25  00A3               	movwf	(___fltol@f1+3)^(0+128)
  4405  0D26  0022               	movlb	2	; select bank2
  4406  0D27  0846               	movf	(_heartRate+2)^(0+256),w	;volatile
  4407  0D28  0021               	movlb	1	; select bank1
  4408  0D29  00A2               	movwf	(___fltol@f1+2)^(0+128)
  4409  0D2A  0022               	movlb	2	; select bank2
  4410  0D2B  0845               	movf	(_heartRate+1)^(0+256),w	;volatile
  4411  0D2C  0021               	movlb	1	; select bank1
  4412  0D2D  00A1               	movwf	(___fltol@f1+1)^(0+128)
  4413  0D2E  0022               	movlb	2	; select bank2
  4414  0D2F  0844               	movf	_heartRate^(0+256),w	;volatile
  4415  0D30  0021               	movlb	1	; select bank1
  4416  0D31  00A0               	movwf	___fltol@f1^(0+128)
  4417  0D32  318B  2395  318C   	fcall	___fltol
  4418  0D35  0021               	movlb	1	; select bank1
  4419  0D36  0821               	movf	(?___fltol+1)^(0+128),w
  4420  0D37  0022               	movlb	2	; select bank2
  4421  0D38  00CB               	movwf	(_hrInt+1)^(0+256)	;volatile
  4422  0D39  0021               	movlb	1	; select bank1
  4423  0D3A  0820               	movf	?___fltol^(0+128),w
  4424  0D3B  0022               	movlb	2	; select bank2
  4425  0D3C  00CA               	movwf	_hrInt^(0+256)	;volatile
  4426                           
  4427                           ;main.c: 88:         printf( "%d bpm   " , hrInt ) ;
  4428  0D3D  3000               	movlw	low (STR_4| (0+32768))
  4429  0D3E  00DB               	movwf	printf@fmt^(0+256)
  4430  0D3F  3098               	movlw	high (STR_4| (0+32768))
  4431  0D40  00DC               	movwf	(printf@fmt^(0+256)+1)
  4432  0D41  084B               	movf	(_hrInt+1)^(0+256),w	;volatile
  4433  0D42  00DE               	movwf	((?_printf+1)^(0+256)+2)
  4434  0D43  084A               	movf	_hrInt^(0+256),w	;volatile
  4435  0D44  00DD               	movwf	(?_printf^(0+256)+2)
  4436  0D45  3188  201F  318C   	fcall	_printf
  4437  0D48  2C9C               	goto	l3426
  4438  0D49                     __end_of_main:	
  4439                           
  4440                           	psect	text1
  4441  0834                     __ptext1:	
  4442 ;; *************** function _writeString *****************
  4443 ;; Defined at:
  4444 ;;		line 11 in file "displayOptions.c"
  4445 ;; Parameters:    Size  Location     Type
  4446 ;;  string          1    wreg     PTR unsigned char 
  4447 ;;		 -> hrDisp(13), distanceDisp(11), speedDisp(8), 
  4448 ;; Auto vars:     Size  Location     Type
  4449 ;;  string          1   24[BANK1 ] PTR unsigned char 
  4450 ;;		 -> hrDisp(13), distanceDisp(11), speedDisp(8), 
  4451 ;; Return value:  Size  Location     Type
  4452 ;;                  1    wreg      void 
  4453 ;; Registers used:
  4454 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4455 ;; Tracked objects:
  4456 ;;		On entry : 0/0
  4457 ;;		On exit  : 0/0
  4458 ;;		Unchanged: 0/0
  4459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4461 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4463 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4464 ;;Total ram usage:        1 bytes
  4465 ;; Hardware stack levels used:    1
  4466 ;; Hardware stack levels required when called:   11
  4467 ;; This function calls:
  4468 ;;		_EUSART_is_tx_ready
  4469 ;;		_puts
  4470 ;; This function is called by:
  4471 ;;		_main
  4472 ;; This function uses a non-reentrant model
  4473 ;;
  4474                           
  4475                           
  4476                           ;psect for function _writeString
  4477  0834                     _writeString:	
  4478                           
  4479                           ;incstack = 0
  4480                           ; Regs used in _writeString: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4481                           ;writeString@string stored from wreg
  4482  0834  0021               	movlb	1	; select bank1
  4483  0835  00B8               	movwf	writeString@string^(0+128)
  4484  0836                     l3300:	
  4485                           ;displayOptions.c: 12:     while( !EUSART_is_tx_ready() ) ;
  4486                           
  4487  0836  3188  2002  3188   	fcall	_EUSART_is_tx_ready
  4488  0839  3A00               	xorlw	0
  4489  083A  1903               	skipnz
  4490  083B  2836               	goto	l3300
  4491                           
  4492                           ;displayOptions.c: 13:     puts( string );
  4493  083C  0021               	movlb	1	; select bank1
  4494  083D  0838               	movf	writeString@string^(0+128),w
  4495  083E  00B3               	movwf	puts@s^(0+128)
  4496  083F  3001               	movlw	1
  4497  0840  00B4               	movwf	(puts@s+1)^(0+128)
  4498  0841  3188  2093  3188   	fcall	_puts
  4499                           
  4500                           ;displayOptions.c: 14:     _delay((unsigned long)((200)*(16000000/4000000.0)));
  4501  0844  30A0               	movlw	160
  4502  0845                     u4447:	
  4503  0845  3200               	nop2
  4504  0846  0B89               	decfsz	9,f
  4505  0847  2845               	goto	u4447
  4506  0848  0008               	return
  4507  0849                     __end_of_writeString:	
  4508                           
  4509                           	psect	text2
  4510  09C5                     __ptext2:	
  4511 ;; *************** function _setCursor *****************
  4512 ;; Defined at:
  4513 ;;		line 17 in file "displayOptions.c"
  4514 ;; Parameters:    Size  Location     Type
  4515 ;;  a               1    wreg     unsigned char 
  4516 ;;  b               1    1[BANK1 ] unsigned char 
  4517 ;; Auto vars:     Size  Location     Type
  4518 ;;  a               1    4[BANK1 ] unsigned char 
  4519 ;; Return value:  Size  Location     Type
  4520 ;;                  1    wreg      void 
  4521 ;; Registers used:
  4522 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4523 ;; Tracked objects:
  4524 ;;		On entry : 0/0
  4525 ;;		On exit  : 0/0
  4526 ;;		Unchanged: 0/0
  4527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4528 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4529 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4530 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4531 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4532 ;;Total ram usage:        4 bytes
  4533 ;; Hardware stack levels used:    1
  4534 ;; Hardware stack levels required when called:    7
  4535 ;; This function calls:
  4536 ;;		_EUSART_Write
  4537 ;;		_EUSART_is_tx_ready
  4538 ;; This function is called by:
  4539 ;;		_main
  4540 ;; This function uses a non-reentrant model
  4541 ;;
  4542                           
  4543                           
  4544                           ;psect for function _setCursor
  4545  09C5                     _setCursor:	
  4546                           
  4547                           ;incstack = 0
  4548                           ; Regs used in _setCursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4549                           ;setCursor@a stored from wreg
  4550  09C5  0021               	movlb	1	; select bank1
  4551  09C6  00A4               	movwf	setCursor@a^(0+128)
  4552  09C7                     l3274:	
  4553                           ;displayOptions.c: 18:     while( !EUSART_is_tx_ready() ) ;
  4554                           
  4555  09C7  3188  2002  3189   	fcall	_EUSART_is_tx_ready
  4556  09CA  3A00               	xorlw	0
  4557  09CB  1903               	skipnz
  4558  09CC  29C7               	goto	l3274
  4559                           
  4560                           ;displayOptions.c: 19:     EUSART_Write( 254 );
  4561  09CD  30FE               	movlw	254
  4562  09CE  3197  27DD  3189   	fcall	_EUSART_Write
  4563                           
  4564                           ;displayOptions.c: 20:     _delay((unsigned long)((200)*(16000000/4000000.0)));
  4565  09D1  30A0               	movlw	160
  4566  09D2                     u4457:	
  4567  09D2  3200               	nop2
  4568  09D3  0B89               	decfsz	9,f
  4569  09D4  29D2               	goto	u4457
  4570                           
  4571                           ;displayOptions.c: 21:     switch ( a ){
  4572  09D5  29EA               	goto	l3290
  4573  09D6                     l3280:	
  4574                           
  4575                           ;displayOptions.c: 23:         {;displayOptions.c: 24:             EUSART_Write(128 + 0 
      +                          + b) ;
  4576  09D6  0821               	movf	setCursor@b^(0+128),w
  4577  09D7  3E80               	addlw	128
  4578  09D8  3197  27DD         	fcall	_EUSART_Write
  4579                           
  4580                           ;displayOptions.c: 25:             break ;
  4581  09DA  0008               	return
  4582  09DB                     l3282:	
  4583                           
  4584                           ;displayOptions.c: 28:         {;displayOptions.c: 29:            EUSART_Write(128 + 64 
      +                          + b) ;
  4585  09DB  0821               	movf	setCursor@b^(0+128),w
  4586  09DC  3EC0               	addlw	192
  4587  09DD  3197  27DD         	fcall	_EUSART_Write
  4588                           
  4589                           ;displayOptions.c: 30:            break ;
  4590  09DF  0008               	return
  4591  09E0                     l3284:	
  4592                           
  4593                           ;displayOptions.c: 33:         {;displayOptions.c: 34:             EUSART_Write(128 + 20
      +                           + b) ;
  4594  09E0  0821               	movf	setCursor@b^(0+128),w
  4595  09E1  3E94               	addlw	148
  4596  09E2  3197  27DD         	fcall	_EUSART_Write
  4597                           
  4598                           ;displayOptions.c: 35:             break ;
  4599  09E4  0008               	return
  4600  09E5                     l3286:	
  4601                           
  4602                           ;displayOptions.c: 38:         {;displayOptions.c: 39:             EUSART_Write(128 + 84
      +                           + b) ;
  4603  09E5  0821               	movf	setCursor@b^(0+128),w
  4604  09E6  3ED4               	addlw	212
  4605  09E7  3197  27DD         	fcall	_EUSART_Write
  4606                           
  4607                           ;displayOptions.c: 40:             break ;
  4608  09E9  0008               	return
  4609  09EA                     l3290:	
  4610  09EA  0021               	movlb	1	; select bank1
  4611  09EB  0824               	movf	setCursor@a^(0+128),w
  4612  09EC  00A2               	movwf	??_setCursor^(0+128)
  4613  09ED  01A3               	clrf	(??_setCursor^(0+128)+1)
  4614                           
  4615                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4616                           ; Switch size 1, requested type "simple"
  4617                           ; Number of cases is 1, Range of values is 0 to 0
  4618                           ; switch strategies available:
  4619                           ; Name         Instructions Cycles
  4620                           ; simple_byte            4     3 (average)
  4621                           ; direct_byte            8     6 (fixed)
  4622                           ; jumptable            260     6 (fixed)
  4623                           ;	Chosen strategy is simple_byte
  4624  09EE  0823               	movf	(??_setCursor+1)^(0+128),w
  4625  09EF  3A00               	xorlw	0	; case 0
  4626  09F0  1903               	skipnz
  4627  09F1  29F3               	goto	l3492
  4628  09F2  2A01               	goto	l333
  4629  09F3                     l3492:	
  4630                           
  4631                           ; Switch size 1, requested type "simple"
  4632                           ; Number of cases is 4, Range of values is 1 to 4
  4633                           ; switch strategies available:
  4634                           ; Name         Instructions Cycles
  4635                           ; simple_byte           13     7 (average)
  4636                           ; direct_byte           17     9 (fixed)
  4637                           ; jumptable            263     9 (fixed)
  4638                           ;	Chosen strategy is simple_byte
  4639  09F3  0822               	movf	??_setCursor^(0+128),w
  4640  09F4  3A01               	xorlw	1	; case 1
  4641  09F5  1903               	skipnz
  4642  09F6  29D6               	goto	l3280
  4643  09F7  3A03               	xorlw	3	; case 2
  4644  09F8  1903               	skipnz
  4645  09F9  29DB               	goto	l3282
  4646  09FA  3A01               	xorlw	1	; case 3
  4647  09FB  1903               	skipnz
  4648  09FC  29E0               	goto	l3284
  4649  09FD  3A07               	xorlw	7	; case 4
  4650  09FE  1903               	skipnz
  4651  09FF  29E5               	goto	l3286
  4652  0A00  2A01               	goto	l333
  4653  0A01                     l333:	
  4654  0A01  0008               	return
  4655  0A02                     __end_of_setCursor:	
  4656                           
  4657                           	psect	text3
  4658  0802                     __ptext3:	
  4659 ;; *************** function _EUSART_is_tx_ready *****************
  4660 ;; Defined at:
  4661 ;;		line 93 in file "mcc_generated_files/eusart.c"
  4662 ;; Parameters:    Size  Location     Type
  4663 ;;		None
  4664 ;; Auto vars:     Size  Location     Type
  4665 ;;		None
  4666 ;; Return value:  Size  Location     Type
  4667 ;;                  1    wreg      _Bool 
  4668 ;; Registers used:
  4669 ;;		wreg, status,2
  4670 ;; Tracked objects:
  4671 ;;		On entry : 0/0
  4672 ;;		On exit  : 0/0
  4673 ;;		Unchanged: 0/0
  4674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4676 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4678 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4679 ;;Total ram usage:        1 bytes
  4680 ;; Hardware stack levels used:    1
  4681 ;; Hardware stack levels required when called:    6
  4682 ;; This function calls:
  4683 ;;		Nothing
  4684 ;; This function is called by:
  4685 ;;		_writeString
  4686 ;;		_setCursor
  4687 ;;		_backlightBrightness
  4688 ;; This function uses a non-reentrant model
  4689 ;;
  4690                           
  4691                           
  4692                           ;psect for function _EUSART_is_tx_ready
  4693  0802                     _EUSART_is_tx_ready:	
  4694                           
  4695                           ;mcc_generated_files/eusart.c: 95:     return (_Bool)(PIR1bits.TXIF && TX1STAbits.TXEN);
  4696                           
  4697                           ;incstack = 0
  4698                           ; Regs used in _EUSART_is_tx_ready: [wreg+status,2]
  4699  0802  0021               	movlb	1	; select bank1
  4700  0803  01A0               	clrf	_EUSART_is_tx_ready$167^(0+128)
  4701  0804  0020               	movlb	0	; select bank0
  4702  0805  1E10               	btfss	16,4	;volatile
  4703  0806  280D               	goto	l3142
  4704  0807  0023               	movlb	3	; select bank3
  4705  0808  1E9E               	btfss	30,5	;volatile
  4706  0809  280D               	goto	l3142
  4707  080A  0021               	movlb	1	; select bank1
  4708  080B  01A0               	clrf	_EUSART_is_tx_ready$167^(0+128)
  4709  080C  0AA0               	incf	_EUSART_is_tx_ready$167^(0+128),f
  4710  080D                     l3142:	
  4711  080D  0021               	movlb	1	; select bank1
  4712  080E  0820               	movf	_EUSART_is_tx_ready$167^(0+128),w
  4713  080F  0008               	return
  4714  0810                     __end_of_EUSART_is_tx_ready:	
  4715                           
  4716                           	psect	text4
  4717  17A8                     __ptext4:	
  4718 ;; *************** function _resetCursor *****************
  4719 ;; Defined at:
  4720 ;;		line 91 in file "displayOptions.c"
  4721 ;; Parameters:    Size  Location     Type
  4722 ;;		None
  4723 ;; Auto vars:     Size  Location     Type
  4724 ;;		None
  4725 ;; Return value:  Size  Location     Type
  4726 ;;                  1    wreg      void 
  4727 ;; Registers used:
  4728 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4729 ;; Tracked objects:
  4730 ;;		On entry : 0/0
  4731 ;;		On exit  : 0/0
  4732 ;;		Unchanged: 0/0
  4733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4737 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4738 ;;Total ram usage:        0 bytes
  4739 ;; Hardware stack levels used:    1
  4740 ;; Hardware stack levels required when called:   11
  4741 ;; This function calls:
  4742 ;;		_puts
  4743 ;; This function is called by:
  4744 ;;		_main
  4745 ;; This function uses a non-reentrant model
  4746 ;;
  4747                           
  4748                           
  4749                           ;psect for function _resetCursor
  4750  17A8                     _resetCursor:	
  4751                           
  4752                           ;displayOptions.c: 92:     puts("|-");
  4753                           
  4754                           ;incstack = 0
  4755                           ; Regs used in _resetCursor: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4756  17A8  3013               	movlw	low (STR_5| (0+32768))
  4757  17A9  0021               	movlb	1	; select bank1
  4758  17AA  00B3               	movwf	puts@s^(0+128)
  4759  17AB  3098               	movlw	high (STR_5| (0+32768))
  4760  17AC  00B4               	movwf	(puts@s^(0+128)+1)
  4761  17AD  3188  2093         	fcall	_puts
  4762  17AF  0008               	return
  4763  17B0                     __end_of_resetCursor:	
  4764                           
  4765                           	psect	text5
  4766  0893                     __ptext5:	
  4767 ;; *************** function _puts *****************
  4768 ;; Defined at:
  4769 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\puts.c"
  4770 ;; Parameters:    Size  Location     Type
  4771 ;;  s               2   19[BANK1 ] PTR const unsigned char 
  4772 ;;		 -> STR_5(3), hrDisp(13), distanceDisp(11), speedDisp(8), 
  4773 ;; Auto vars:     Size  Location     Type
  4774 ;;  r               2    0        int 
  4775 ;; Return value:  Size  Location     Type
  4776 ;;                  2   19[BANK1 ] int 
  4777 ;; Registers used:
  4778 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4779 ;; Tracked objects:
  4780 ;;		On entry : 0/0
  4781 ;;		On exit  : 0/0
  4782 ;;		Unchanged: 0/0
  4783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4784 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4785 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4787 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  4788 ;;Total ram usage:        5 bytes
  4789 ;; Hardware stack levels used:    1
  4790 ;; Hardware stack levels required when called:   10
  4791 ;; This function calls:
  4792 ;;		_fputc
  4793 ;;		_fputs
  4794 ;; This function is called by:
  4795 ;;		_writeString
  4796 ;;		_resetCursor
  4797 ;; This function uses a non-reentrant model
  4798 ;;
  4799                           
  4800                           
  4801                           ;psect for function _puts
  4802  0893                     _puts:	
  4803                           
  4804                           ;incstack = 0
  4805                           ; Regs used in _puts: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4806  0893  0021               	movlb	1	; select bank1
  4807  0894  01B7               	clrf	_puts$1041^(0+128)
  4808  0895  0AB7               	incf	_puts$1041^(0+128),f
  4809  0896  0834               	movf	(puts@s+1)^(0+128),w
  4810  0897  00AB               	movwf	(fputs@s+1)^(0+128)
  4811  0898  0833               	movf	puts@s^(0+128),w
  4812  0899  00AA               	movwf	fputs@s^(0+128)
  4813  089A  01AC               	clrf	fputs@fp^(0+128)
  4814  089B  3189  2137  3188   	fcall	_fputs
  4815  089E  0021               	movlb	1	; select bank1
  4816  089F  1BAB               	btfsc	(?_fputs+1)^(0+128),7
  4817  08A0  0008               	return
  4818  08A1  300A               	movlw	10
  4819  08A2  00A2               	movwf	fputc@c^(0+128)
  4820  08A3  3000               	movlw	0
  4821  08A4  00A3               	movwf	(fputc@c^(0+128)+1)
  4822  08A5  01A4               	clrf	fputc@fp^(0+128)
  4823  08A6  318A  2202  3188   	fcall	_fputc
  4824  08A9  0021               	movlb	1	; select bank1
  4825  08AA  1BA3               	btfsc	(?_fputc+1)^(0+128),7
  4826  08AB  0008               	return
  4827  08AC  01B7               	clrf	_puts$1041^(0+128)
  4828  08AD  0008               	return
  4829  08AE                     __end_of_puts:	
  4830                           
  4831                           	psect	text6
  4832  081F                     __ptext6:	
  4833 ;; *************** function _printf *****************
  4834 ;; Defined at:
  4835 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  4836 ;; Parameters:    Size  Location     Type
  4837 ;;  fmt             2    3[BANK2 ] PTR const unsigned char 
  4838 ;;		 -> STR_4(10), STR_3(9), STR_2(14), STR_1(15), 
  4839 ;; Auto vars:     Size  Location     Type
  4840 ;;  ret             2    0        int 
  4841 ;;  ap              1   11[BANK2 ] PTR void [1]
  4842 ;;		 -> ?_printf(2), 
  4843 ;; Return value:  Size  Location     Type
  4844 ;;                  2    3[BANK2 ] int 
  4845 ;; Registers used:
  4846 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4847 ;; Tracked objects:
  4848 ;;		On entry : 0/0
  4849 ;;		On exit  : 0/0
  4850 ;;		Unchanged: 0/0
  4851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4852 ;;      Params:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0
  4853 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  4854 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4855 ;;      Totals:         0       0       1       9       0       0       0       0       0       0       0       0       
      +0       0
  4856 ;;Total ram usage:       10 bytes
  4857 ;; Hardware stack levels used:    1
  4858 ;; Hardware stack levels required when called:   14
  4859 ;; This function calls:
  4860 ;;		_vfprintf
  4861 ;; This function is called by:
  4862 ;;		_main
  4863 ;; This function uses a non-reentrant model
  4864 ;;
  4865                           
  4866                           
  4867                           ;psect for function _printf
  4868  081F                     _printf:	
  4869                           
  4870                           ;incstack = 0
  4871                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4872  081F  305D               	movlw	(low ((?_printf| (0+256)+2)))& (0+255)
  4873  0820  0021               	movlb	1	; select bank1
  4874  0821  00EF               	movwf	??_printf^(0+128)
  4875  0822  086F               	movf	??_printf^(0+128),w
  4876  0823  0022               	movlb	2	; select bank2
  4877  0824  00E3               	movwf	printf@ap^(0+256)
  4878  0825  085C               	movf	(printf@fmt+1)^(0+256),w
  4879  0826  0021               	movlb	1	; select bank1
  4880  0827  00EB               	movwf	(vfprintf@fmt+1)^(0+128)
  4881  0828  0022               	movlb	2	; select bank2
  4882  0829  085B               	movf	printf@fmt^(0+256),w
  4883  082A  0021               	movlb	1	; select bank1
  4884  082B  00EA               	movwf	vfprintf@fmt^(0+128)
  4885  082C  3063               	movlw	(low (printf@ap| (0+256)))& (0+255)
  4886  082D  00EF               	movwf	??_printf^(0+128)
  4887  082E  086F               	movf	??_printf^(0+128),w
  4888  082F  00EC               	movwf	vfprintf@ap^(0+128)
  4889  0830  3000               	movlw	0
  4890  0831  3189  2160         	fcall	_vfprintf
  4891  0833  0008               	return
  4892  0834                     __end_of_printf:	
  4893                           
  4894                           	psect	text7
  4895  0960                     __ptext7:	
  4896 ;; *************** function _vfprintf *****************
  4897 ;; Defined at:
  4898 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4899 ;; Parameters:    Size  Location     Type
  4900 ;;  fp              1    wreg     PTR struct _IO_FILE
  4901 ;;		 -> NULL(0), 
  4902 ;;  fmt             2   74[BANK1 ] PTR const unsigned char 
  4903 ;;		 -> STR_4(10), STR_3(9), STR_2(14), STR_1(15), 
  4904 ;;  ap              1   76[BANK1 ] PTR PTR void 
  4905 ;;		 -> printf@ap(1), 
  4906 ;; Auto vars:     Size  Location     Type
  4907 ;;  fp              1    0[BANK2 ] PTR struct _IO_FILE
  4908 ;;		 -> NULL(0), 
  4909 ;;  cfmt            2    1[BANK2 ] PTR unsigned char 
  4910 ;;		 -> STR_4(10), STR_3(9), STR_2(14), STR_1(15), 
  4911 ;; Return value:  Size  Location     Type
  4912 ;;                  2   74[BANK1 ] int 
  4913 ;; Registers used:
  4914 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4915 ;; Tracked objects:
  4916 ;;		On entry : 0/0
  4917 ;;		On exit  : 0/0
  4918 ;;		Unchanged: 0/0
  4919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4920 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4921 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  4922 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4923 ;;      Totals:         0       0       5       3       0       0       0       0       0       0       0       0       
      +0       0
  4924 ;;Total ram usage:        8 bytes
  4925 ;; Hardware stack levels used:    1
  4926 ;; Hardware stack levels required when called:   13
  4927 ;; This function calls:
  4928 ;;		_vfpfcnvrt
  4929 ;; This function is called by:
  4930 ;;		_printf
  4931 ;; This function uses a non-reentrant model
  4932 ;;
  4933                           
  4934                           
  4935                           ;psect for function _vfprintf
  4936  0960                     _vfprintf:	
  4937                           
  4938                           ;incstack = 0
  4939                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4940                           ;vfprintf@fp stored from wreg
  4941  0960  0022               	movlb	2	; select bank2
  4942  0961  00D8               	movwf	vfprintf@fp^(0+256)
  4943                           
  4944                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  4945  0962  0021               	movlb	1	; select bank1
  4946  0963  086B               	movf	(vfprintf@fmt+1)^(0+128),w
  4947  0964  0022               	movlb	2	; select bank2
  4948  0965  00DA               	movwf	(vfprintf@cfmt+1)^(0+256)
  4949  0966  0021               	movlb	1	; select bank1
  4950  0967  086A               	movf	vfprintf@fmt^(0+128),w
  4951  0968  0022               	movlb	2	; select bank2
  4952  0969  00D9               	movwf	vfprintf@cfmt^(0+256)
  4953                           
  4954                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  4955  096A  01C8               	clrf	_nout^(0+256)
  4956  096B  01C9               	clrf	(_nout+1)^(0+256)
  4957  096C                     l3226:	
  4958                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  4959                           
  4960                           
  4961                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  4962  096C  0859               	movf	vfprintf@cfmt^(0+256),w
  4963  096D  0084               	movwf	4
  4964  096E  085A               	movf	(vfprintf@cfmt+1)^(0+256),w
  4965  096F  0085               	movwf	5
  4966  0970  0012               	moviw fsr0++
  4967  0971  1903               	btfsc	3,2
  4968  0972  298A               	goto	l3228
  4969                           
  4970                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  4971  0973  3059               	movlw	(low (vfprintf@cfmt| (0+256)))& (0+255)
  4972  0974  0021               	movlb	1	; select bank1
  4973  0975  00ED               	movwf	??_vfprintf^(0+128)
  4974  0976  086D               	movf	??_vfprintf^(0+128),w
  4975  0977  00DA               	movwf	vfpfcnvrt@fmt^(0+128)
  4976  0978  086C               	movf	vfprintf@ap^(0+128),w
  4977  0979  00EE               	movwf	(??_vfprintf+1)^(0+128)
  4978  097A  086E               	movf	(??_vfprintf+1)^(0+128),w
  4979  097B  00DB               	movwf	vfpfcnvrt@ap^(0+128)
  4980  097C  0022               	movlb	2	; select bank2
  4981  097D  0858               	movf	vfprintf@fp^(0+256),w
  4982  097E  318D  2549  3189   	fcall	_vfpfcnvrt
  4983  0981  0021               	movlb	1	; select bank1
  4984  0982  085A               	movf	?_vfpfcnvrt^(0+128),w
  4985  0983  0022               	movlb	2	; select bank2
  4986  0984  07C8               	addwf	_nout^(0+256),f
  4987  0985  0021               	movlb	1	; select bank1
  4988  0986  085B               	movf	(?_vfpfcnvrt+1)^(0+128),w
  4989  0987  0022               	movlb	2	; select bank2
  4990  0988  3DC9               	addwfc	(_nout+1)^(0+256),f
  4991  0989  296C               	goto	l3226
  4992  098A                     l3228:	
  4993                           
  4994                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  4995  098A  0849               	movf	(_nout+1)^(0+256),w
  4996  098B  0021               	movlb	1	; select bank1
  4997  098C  00EB               	movwf	(?_vfprintf+1)^(0+128)
  4998  098D  0022               	movlb	2	; select bank2
  4999  098E  0848               	movf	_nout^(0+256),w
  5000  098F  0021               	movlb	1	; select bank1
  5001  0990  00EA               	movwf	?_vfprintf^(0+128)
  5002  0991  0008               	return
  5003  0992                     __end_of_vfprintf:	
  5004                           
  5005                           	psect	text8
  5006  0D49                     __ptext8:	
  5007 ;; *************** function _vfpfcnvrt *****************
  5008 ;; Defined at:
  5009 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5010 ;; Parameters:    Size  Location     Type
  5011 ;;  fp              1    wreg     PTR struct _IO_FILE
  5012 ;;		 -> NULL(0), 
  5013 ;;  fmt             1   58[BANK1 ] PTR PTR unsigned char 
  5014 ;;		 -> vfprintf@cfmt(2), 
  5015 ;;  ap              1   59[BANK1 ] PTR PTR void 
  5016 ;;		 -> printf@ap(1), 
  5017 ;; Auto vars:     Size  Location     Type
  5018 ;;  fp              1   73[BANK1 ] PTR struct _IO_FILE
  5019 ;;		 -> NULL(0), 
  5020 ;;  ll              8   65[BANK1 ] long long 
  5021 ;;  llu             8    0        unsigned long long 
  5022 ;;  f               4    0        unsigned long long 
  5023 ;;  ct              3    0        unsigned char [3]
  5024 ;;  vp              2    0        PTR void 
  5025 ;;  i               2    0        int 
  5026 ;;  done            2    0        int 
  5027 ;;  cp              2    0        PTR unsigned char 
  5028 ;;  c               1    0        unsigned char 
  5029 ;; Return value:  Size  Location     Type
  5030 ;;                  2   58[BANK1 ] int 
  5031 ;; Registers used:
  5032 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5033 ;; Tracked objects:
  5034 ;;		On entry : 0/0
  5035 ;;		On exit  : 0/0
  5036 ;;		Unchanged: 0/0
  5037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5038 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5039 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  5040 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  5041 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  5042 ;;Total ram usage:       16 bytes
  5043 ;; Hardware stack levels used:    1
  5044 ;; Hardware stack levels required when called:   12
  5045 ;; This function calls:
  5046 ;;		_dtoa
  5047 ;;		_fputc
  5048 ;; This function is called by:
  5049 ;;		_vfprintf
  5050 ;; This function uses a non-reentrant model
  5051 ;;
  5052                           
  5053                           
  5054                           ;psect for function _vfpfcnvrt
  5055  0D49                     _vfpfcnvrt:	
  5056                           
  5057                           ;incstack = 0
  5058                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5059                           ;vfpfcnvrt@fp stored from wreg
  5060  0D49  0021               	movlb	1	; select bank1
  5061  0D4A  00E9               	movwf	vfpfcnvrt@fp^(0+128)
  5062                           
  5063                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  5064  0D4B  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5065  0D4C  0086               	movwf	6
  5066  0D4D  3001               	movlw	1	; select bank2/3
  5067  0D4E  0087               	movwf	7
  5068  0D4F  3F40               	moviw [0]fsr1
  5069  0D50  00DC               	movwf	??_vfpfcnvrt^(0+128)
  5070  0D51  3F41               	moviw [1]fsr1
  5071  0D52  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5072  0D53  085C               	movf	??_vfpfcnvrt^(0+128),w
  5073  0D54  0084               	movwf	4
  5074  0D55  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5075  0D56  0085               	movwf	5
  5076  0D57  0012               	moviw fsr0++
  5077  0D58  3A25               	xorlw	37
  5078  0D59  1D03               	btfss	3,2
  5079  0D5A  2E00               	goto	l2922
  5080                           
  5081                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  5082  0D5B  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5083  0D5C  0086               	movwf	6
  5084  0D5D  3001               	movlw	1	; select bank2/3
  5085  0D5E  0087               	movwf	7
  5086  0D5F  3001               	movlw	1
  5087  0D60  0781               	addwf	1,f
  5088  0D61  3141               	addfsr 1,1
  5089  0D62  1803               	skipnc
  5090  0D63  0A81               	incf	1,f
  5091                           
  5092                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  5093  0D64  0020               	movlb	0	; select bank0
  5094  0D65  01E0               	clrf	_width
  5095  0D66  01E1               	clrf	_width+1
  5096  0D67  01E4               	clrf	_flags
  5097  0D68  01E5               	clrf	_flags+1
  5098                           
  5099                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  5100  0D69  30FF               	movlw	255
  5101  0D6A  00E2               	movwf	_prec
  5102  0D6B  30FF               	movlw	255
  5103  0D6C  00E3               	movwf	_prec+1
  5104                           
  5105                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  5106  0D6D  0021               	movlb	1	; select bank1
  5107  0D6E  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5108  0D6F  0086               	movwf	6
  5109  0D70  3001               	movlw	1	; select bank2/3
  5110  0D71  0087               	movwf	7
  5111  0D72  3F40               	moviw [0]fsr1
  5112  0D73  00DC               	movwf	??_vfpfcnvrt^(0+128)
  5113  0D74  3F41               	moviw [1]fsr1
  5114  0D75  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5115  0D76  085C               	movf	??_vfpfcnvrt^(0+128),w
  5116  0D77  0084               	movwf	4
  5117  0D78  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5118  0D79  0085               	movwf	5
  5119  0D7A  0012               	moviw fsr0++
  5120  0D7B  3A64               	xorlw	100
  5121  0D7C  1903               	btfsc	3,2
  5122  0D7D  2D8E               	goto	l2898
  5123  0D7E  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5124  0D7F  0086               	movwf	6
  5125  0D80  3001               	movlw	1	; select bank2/3
  5126  0D81  0087               	movwf	7
  5127  0D82  3F40               	moviw [0]fsr1
  5128  0D83  00DC               	movwf	??_vfpfcnvrt^(0+128)
  5129  0D84  3F41               	moviw [1]fsr1
  5130  0D85  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5131  0D86  085C               	movf	??_vfpfcnvrt^(0+128),w
  5132  0D87  0084               	movwf	4
  5133  0D88  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5134  0D89  0085               	movwf	5
  5135  0D8A  0012               	moviw fsr0++
  5136  0D8B  3A69               	xorlw	105
  5137  0D8C  1D03               	btfss	3,2
  5138  0D8D  2DCB               	goto	l2906
  5139  0D8E                     l2898:	
  5140                           
  5141                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  5142  0D8E  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5143  0D8F  0086               	movwf	6
  5144  0D90  3001               	movlw	1	; select bank2/3
  5145  0D91  0087               	movwf	7
  5146  0D92  3001               	movlw	1
  5147  0D93  0781               	addwf	1,f
  5148  0D94  3141               	addfsr 1,1
  5149  0D95  1803               	skipnc
  5150  0D96  0A81               	incf	1,f
  5151                           
  5152                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  5153  0D97  085B               	movf	vfpfcnvrt@ap^(0+128),w
  5154  0D98  0086               	movwf	6
  5155  0D99  3001               	movlw	1	; select bank2/3
  5156  0D9A  0087               	movwf	7
  5157  0D9B  0801               	movf	1,w
  5158  0D9C  0084               	movwf	4
  5159  0D9D  3001               	movlw	1	; select bank2/3
  5160  0D9E  0085               	movwf	5
  5161  0D9F  3002               	movlw	2
  5162  0DA0  0781               	addwf	1,f
  5163  0DA1  3F00               	moviw [0]fsr0
  5164  0DA2  00DC               	movwf	??_vfpfcnvrt^(0+128)
  5165  0DA3  3F01               	moviw [1]fsr0
  5166  0DA4  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5167  0DA5  085C               	movf	??_vfpfcnvrt^(0+128),w
  5168  0DA6  00E1               	movwf	vfpfcnvrt@ll^(0+128)
  5169  0DA7  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5170  0DA8  00E2               	movwf	(vfpfcnvrt@ll+1)^(0+128)
  5171  0DA9  0D89               	rlf	9,f
  5172  0DAA  3B89               	subwfb	9,f
  5173  0DAB  0989               	comf	9,f
  5174  0DAC  00E3               	movwf	(vfpfcnvrt@ll+2)^(0+128)
  5175  0DAD  00E4               	movwf	(vfpfcnvrt@ll+3)^(0+128)
  5176  0DAE  00E5               	movwf	(vfpfcnvrt@ll+4)^(0+128)
  5177  0DAF  00E6               	movwf	(vfpfcnvrt@ll+5)^(0+128)
  5178  0DB0  00E7               	movwf	(vfpfcnvrt@ll+6)^(0+128)
  5179  0DB1  00E8               	movwf	(vfpfcnvrt@ll+7)^(0+128)
  5180                           
  5181                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  5182  0DB2  0861               	movf	vfpfcnvrt@ll^(0+128),w
  5183  0DB3  00BC               	movwf	dtoa@d^(0+128)
  5184  0DB4  0862               	movf	(vfpfcnvrt@ll+1)^(0+128),w
  5185  0DB5  00BD               	movwf	(dtoa@d+1)^(0+128)
  5186  0DB6  0863               	movf	(vfpfcnvrt@ll+2)^(0+128),w
  5187  0DB7  00BE               	movwf	(dtoa@d+2)^(0+128)
  5188  0DB8  0864               	movf	(vfpfcnvrt@ll+3)^(0+128),w
  5189  0DB9  00BF               	movwf	(dtoa@d+3)^(0+128)
  5190  0DBA  0865               	movf	(vfpfcnvrt@ll+4)^(0+128),w
  5191  0DBB  00C0               	movwf	(dtoa@d+4)^(0+128)
  5192  0DBC  0866               	movf	(vfpfcnvrt@ll+5)^(0+128),w
  5193  0DBD  00C1               	movwf	(dtoa@d+5)^(0+128)
  5194  0DBE  0867               	movf	(vfpfcnvrt@ll+6)^(0+128),w
  5195  0DBF  00C2               	movwf	(dtoa@d+6)^(0+128)
  5196  0DC0  0868               	movf	(vfpfcnvrt@ll+7)^(0+128),w
  5197  0DC1  00C3               	movwf	(dtoa@d+7)^(0+128)
  5198  0DC2  0869               	movf	vfpfcnvrt@fp^(0+128),w
  5199  0DC3  3185  25CC         	fcall	_dtoa
  5200  0DC5  0021               	movlb	1	; select bank1
  5201  0DC6  083D               	movf	(?_dtoa+1)^(0+128),w
  5202  0DC7  00DB               	movwf	(?_vfpfcnvrt+1)^(0+128)
  5203  0DC8  083C               	movf	?_dtoa^(0+128),w
  5204  0DC9  00DA               	movwf	?_vfpfcnvrt^(0+128)
  5205  0DCA  0008               	return
  5206  0DCB                     l2906:	
  5207                           
  5208                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  5209  0DCB  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5210  0DCC  0086               	movwf	6
  5211  0DCD  3001               	movlw	1	; select bank2/3
  5212  0DCE  0087               	movwf	7
  5213  0DCF  3F40               	moviw [0]fsr1
  5214  0DD0  00DC               	movwf	??_vfpfcnvrt^(0+128)
  5215  0DD1  3F41               	moviw [1]fsr1
  5216  0DD2  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5217  0DD3  085C               	movf	??_vfpfcnvrt^(0+128),w
  5218  0DD4  0084               	movwf	4
  5219  0DD5  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5220  0DD6  0085               	movwf	5
  5221  0DD7  0012               	moviw fsr0++
  5222  0DD8  3A25               	xorlw	37
  5223  0DD9  1D03               	btfss	3,2
  5224  0DDA  2DF4               	goto	l2916
  5225                           
  5226                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  5227  0DDB  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5228  0DDC  0086               	movwf	6
  5229  0DDD  3001               	movlw	1	; select bank2/3
  5230  0DDE  0087               	movwf	7
  5231  0DDF  3001               	movlw	1
  5232  0DE0  0781               	addwf	1,f
  5233  0DE1  3141               	addfsr 1,1
  5234  0DE2  1803               	skipnc
  5235  0DE3  0A81               	incf	1,f
  5236                           
  5237                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  5238  0DE4  3025               	movlw	37
  5239  0DE5  00A2               	movwf	fputc@c^(0+128)
  5240  0DE6  3000               	movlw	0
  5241  0DE7  00A3               	movwf	(fputc@c^(0+128)+1)
  5242  0DE8  0869               	movf	vfpfcnvrt@fp^(0+128),w
  5243  0DE9  00DC               	movwf	??_vfpfcnvrt^(0+128)
  5244  0DEA  085C               	movf	??_vfpfcnvrt^(0+128),w
  5245  0DEB  00A4               	movwf	fputc@fp^(0+128)
  5246  0DEC  318A  2202         	fcall	_fputc
  5247  0DEE                     l2912:	
  5248                           
  5249                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  5250  0DEE  3001               	movlw	1
  5251  0DEF  0021               	movlb	1	; select bank1
  5252  0DF0  00DA               	movwf	?_vfpfcnvrt^(0+128)
  5253  0DF1  3000               	movlw	0
  5254  0DF2  00DB               	movwf	(?_vfpfcnvrt^(0+128)+1)
  5255  0DF3  0008               	return
  5256  0DF4                     l2916:	
  5257                           
  5258                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  5259  0DF4  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5260  0DF5  0086               	movwf	6
  5261  0DF6  3001               	movlw	1	; select bank2/3
  5262  0DF7  0087               	movwf	7
  5263  0DF8  3001               	movlw	1
  5264  0DF9  0781               	addwf	1,f
  5265  0DFA  3141               	addfsr 1,1
  5266  0DFB  1803               	skipnc
  5267  0DFC  0A81               	incf	1,f
  5268                           
  5269                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  5270  0DFD  01DA               	clrf	?_vfpfcnvrt^(0+128)
  5271  0DFE  01DB               	clrf	(?_vfpfcnvrt+1)^(0+128)
  5272  0DFF  0008               	return
  5273  0E00                     l2922:	
  5274                           
  5275                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  5276  0E00  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5277  0E01  0086               	movwf	6
  5278  0E02  3001               	movlw	1	; select bank2/3
  5279  0E03  0087               	movwf	7
  5280  0E04  3F40               	moviw [0]fsr1
  5281  0E05  00DC               	movwf	??_vfpfcnvrt^(0+128)
  5282  0E06  3F41               	moviw [1]fsr1
  5283  0E07  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5284  0E08  085C               	movf	??_vfpfcnvrt^(0+128),w
  5285  0E09  0084               	movwf	4
  5286  0E0A  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5287  0E0B  0085               	movwf	5
  5288  0E0C  0800               	movf	0,w	;code access
  5289  0E0D  00DE               	movwf	(??_vfpfcnvrt+2)^(0+128)
  5290  0E0E  01DF               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  5291  0E0F  085E               	movf	(??_vfpfcnvrt+2)^(0+128),w
  5292  0E10  00A2               	movwf	fputc@c^(0+128)
  5293  0E11  085F               	movf	(??_vfpfcnvrt+3)^(0+128),w
  5294  0E12  00A3               	movwf	(fputc@c+1)^(0+128)
  5295  0E13  0869               	movf	vfpfcnvrt@fp^(0+128),w
  5296  0E14  00E0               	movwf	(??_vfpfcnvrt+4)^(0+128)
  5297  0E15  0860               	movf	(??_vfpfcnvrt+4)^(0+128),w
  5298  0E16  00A4               	movwf	fputc@fp^(0+128)
  5299  0E17  318A  2202  318D   	fcall	_fputc
  5300                           
  5301                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  5302  0E1A  0021               	movlb	1	; select bank1
  5303  0E1B  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5304  0E1C  0086               	movwf	6
  5305  0E1D  3001               	movlw	1	; select bank2/3
  5306  0E1E  0087               	movwf	7
  5307  0E1F  3001               	movlw	1
  5308  0E20  0781               	addwf	1,f
  5309  0E21  3141               	addfsr 1,1
  5310  0E22  1803               	skipnc
  5311  0E23  0A81               	incf	1,f
  5312  0E24  2DEE               	goto	l2912
  5313  0E25                     __end_of_vfpfcnvrt:	
  5314                           
  5315                           	psect	text9
  5316  05CC                     __ptext9:	
  5317 ;; *************** function _dtoa *****************
  5318 ;; Defined at:
  5319 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5320 ;; Parameters:    Size  Location     Type
  5321 ;;  fp              1    wreg     PTR struct _IO_FILE
  5322 ;;		 -> NULL(0), 
  5323 ;;  d               8   28[BANK1 ] long long 
  5324 ;; Auto vars:     Size  Location     Type
  5325 ;;  fp              1   43[BANK1 ] PTR struct _IO_FILE
  5326 ;;		 -> NULL(0), 
  5327 ;;  n               8   48[BANK1 ] long long 
  5328 ;;  i               2   56[BANK1 ] int 
  5329 ;;  s               2   46[BANK1 ] int 
  5330 ;;  w               2   44[BANK1 ] int 
  5331 ;;  p               2   41[BANK1 ] int 
  5332 ;; Return value:  Size  Location     Type
  5333 ;;                  2   28[BANK1 ] int 
  5334 ;; Registers used:
  5335 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5336 ;; Tracked objects:
  5337 ;;		On entry : 0/0
  5338 ;;		On exit  : 0/0
  5339 ;;		Unchanged: 0/0
  5340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5341 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  5342 ;;      Locals:         0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0
  5343 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5344 ;;      Totals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0
  5345 ;;Total ram usage:       30 bytes
  5346 ;; Hardware stack levels used:    1
  5347 ;; Hardware stack levels required when called:   11
  5348 ;; This function calls:
  5349 ;;		___aodiv
  5350 ;;		___aomod
  5351 ;;		_abs
  5352 ;;		_pad
  5353 ;; This function is called by:
  5354 ;;		_vfpfcnvrt
  5355 ;; This function uses a non-reentrant model
  5356 ;;
  5357                           
  5358                           
  5359                           ;psect for function _dtoa
  5360  05CC                     _dtoa:	
  5361                           
  5362                           ;incstack = 0
  5363                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5364                           ;dtoa@fp stored from wreg
  5365  05CC  0021               	movlb	1	; select bank1
  5366  05CD  00CB               	movwf	dtoa@fp^(0+128)
  5367                           
  5368                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  5369  05CE  083C               	movf	dtoa@d^(0+128),w
  5370  05CF  00D0               	movwf	dtoa@n^(0+128)
  5371  05D0  083D               	movf	(dtoa@d+1)^(0+128),w
  5372  05D1  00D1               	movwf	(dtoa@n+1)^(0+128)
  5373  05D2  083E               	movf	(dtoa@d+2)^(0+128),w
  5374  05D3  00D2               	movwf	(dtoa@n+2)^(0+128)
  5375  05D4  083F               	movf	(dtoa@d+3)^(0+128),w
  5376  05D5  00D3               	movwf	(dtoa@n+3)^(0+128)
  5377  05D6  0840               	movf	(dtoa@d+4)^(0+128),w
  5378  05D7  00D4               	movwf	(dtoa@n+4)^(0+128)
  5379  05D8  0841               	movf	(dtoa@d+5)^(0+128),w
  5380  05D9  00D5               	movwf	(dtoa@n+5)^(0+128)
  5381  05DA  0842               	movf	(dtoa@d+6)^(0+128),w
  5382  05DB  00D6               	movwf	(dtoa@n+6)^(0+128)
  5383  05DC  0843               	movf	(dtoa@d+7)^(0+128),w
  5384  05DD  00D7               	movwf	(dtoa@n+7)^(0+128)
  5385                           
  5386                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  5387  05DE  30D0               	movlw	low dtoa@n
  5388  05DF  0086               	movwf	6
  5389  05E0  3000               	movlw	high dtoa@n
  5390  05E1  0087               	movwf	7
  5391  05E2  3F47               	moviw [7]fsr1
  5392  05E3  00C4               	movwf	??_dtoa^(0+128)
  5393  05E4  1FC4               	btfss	??_dtoa^(0+128),7
  5394  05E5  2DE8               	goto	u2580
  5395  05E6  3001               	movlw	1
  5396  05E7  2DE9               	goto	u2590
  5397  05E8                     u2580:	
  5398  05E8  3000               	movlw	0
  5399  05E9                     u2590:	
  5400  05E9  0021               	movlb	1	; select bank1
  5401  05EA  00C5               	movwf	(??_dtoa+1)^(0+128)
  5402  05EB  01C6               	clrf	((??_dtoa+1)^(0+128)+1)
  5403  05EC  0845               	movf	(??_dtoa+1)^(0+128),w
  5404  05ED  00CE               	movwf	dtoa@s^(0+128)
  5405  05EE  0846               	movf	(??_dtoa+2)^(0+128),w
  5406  05EF  00CF               	movwf	(dtoa@s+1)^(0+128)
  5407                           
  5408                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  5409  05F0  084E               	movf	dtoa@s^(0+128),w
  5410  05F1  044F               	iorwf	(dtoa@s+1)^(0+128),w
  5411  05F2  1903               	btfsc	3,2
  5412  05F3  2E12               	goto	l460
  5413                           
  5414                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  5415  05F4  09D0               	comf	dtoa@n^(0+128),f
  5416  05F5  09D1               	comf	(dtoa@n+1)^(0+128),f
  5417  05F6  09D2               	comf	(dtoa@n+2)^(0+128),f
  5418  05F7  09D3               	comf	(dtoa@n+3)^(0+128),f
  5419  05F8  09D4               	comf	(dtoa@n+4)^(0+128),f
  5420  05F9  09D5               	comf	(dtoa@n+5)^(0+128),f
  5421  05FA  09D6               	comf	(dtoa@n+6)^(0+128),f
  5422  05FB  09D7               	comf	(dtoa@n+7)^(0+128),f
  5423  05FC  0AD0               	incf	dtoa@n^(0+128),f
  5424  05FD  1D03               	skipz
  5425  05FE  2E12               	goto	l460
  5426  05FF  0AD1               	incf	(dtoa@n+1)^(0+128),f
  5427  0600  1D03               	skipz
  5428  0601  2E12               	goto	l460
  5429  0602  0AD2               	incf	(dtoa@n+2)^(0+128),f
  5430  0603  1D03               	skipz
  5431  0604  2E12               	goto	l460
  5432  0605  0AD3               	incf	(dtoa@n+3)^(0+128),f
  5433  0606  1D03               	skipz
  5434  0607  2E12               	goto	l460
  5435  0608  0AD4               	incf	(dtoa@n+4)^(0+128),f
  5436  0609  1D03               	skipz
  5437  060A  2E12               	goto	l460
  5438  060B  0AD5               	incf	(dtoa@n+5)^(0+128),f
  5439  060C  1D03               	skipz
  5440  060D  2E12               	goto	l460
  5441  060E  0AD6               	incf	(dtoa@n+6)^(0+128),f
  5442  060F  1D03               	skipz
  5443  0610  2E12               	goto	l460
  5444  0611  0AD7               	incf	(dtoa@n+7)^(0+128),f
  5445  0612                     l460:	
  5446                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 284:     }
  5447                           
  5448                           
  5449                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  5450  0612  0020               	movlb	0	; select bank0
  5451  0613  1BE3               	btfsc	_prec+1,7
  5452  0614  2E19               	goto	l461
  5453                           
  5454                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  5455  0615  30FD               	movlw	253
  5456  0616  05E4               	andwf	_flags,f
  5457  0617  30FF               	movlw	255
  5458  0618  05E5               	andwf	_flags+1,f
  5459  0619                     l461:	
  5460                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 289:     }
  5461                           
  5462                           
  5463                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  5464  0619  0863               	movf	_prec+1,w
  5465  061A  3A80               	xorlw	128
  5466  061B  0021               	movlb	1	; select bank1
  5467  061C  00C4               	movwf	??_dtoa^(0+128)
  5468  061D  3080               	movlw	128
  5469  061E  0244               	subwf	??_dtoa^(0+128),w
  5470  061F  1D03               	skipz
  5471  0620  2E24               	goto	u2635
  5472  0621  3001               	movlw	1
  5473  0622  0020               	movlb	0	; select bank0
  5474  0623  0262               	subwf	_prec,w
  5475  0624                     u2635:	
  5476  0624  1803               	skipnc
  5477  0625  2E2C               	goto	l2422
  5478  0626  3001               	movlw	1
  5479  0627  0021               	movlb	1	; select bank1
  5480  0628  00C9               	movwf	dtoa@p^(0+128)
  5481  0629  3000               	movlw	0
  5482  062A  00CA               	movwf	(dtoa@p^(0+128)+1)
  5483  062B  2E34               	goto	l465
  5484  062C                     l2422:	
  5485  062C  0020               	movlb	0	; select bank0
  5486  062D  0863               	movf	_prec+1,w
  5487  062E  0021               	movlb	1	; select bank1
  5488  062F  00CA               	movwf	(dtoa@p+1)^(0+128)
  5489  0630  0020               	movlb	0	; select bank0
  5490  0631  0862               	movf	_prec,w
  5491  0632  0021               	movlb	1	; select bank1
  5492  0633  00C9               	movwf	dtoa@p^(0+128)
  5493  0634                     l465:	
  5494                           
  5495                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  5496  0634  0020               	movlb	0	; select bank0
  5497  0635  0861               	movf	_width+1,w
  5498  0636  0021               	movlb	1	; select bank1
  5499  0637  00CD               	movwf	(dtoa@w+1)^(0+128)
  5500  0638  0020               	movlb	0	; select bank0
  5501  0639  0860               	movf	_width,w
  5502  063A  0021               	movlb	1	; select bank1
  5503  063B  00CC               	movwf	dtoa@w^(0+128)
  5504                           
  5505                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  5506  063C  084E               	movf	dtoa@s^(0+128),w
  5507  063D  044F               	iorwf	(dtoa@s+1)^(0+128),w
  5508  063E  1D03               	btfss	3,2
  5509  063F  2E43               	goto	l2428
  5510  0640  0020               	movlb	0	; select bank0
  5511  0641  1D64               	btfss	_flags,2
  5512  0642  2E48               	goto	l466
  5513  0643                     l2428:	
  5514                           
  5515                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  5516  0643  30FF               	movlw	255
  5517  0644  0021               	movlb	1	; select bank1
  5518  0645  07CC               	addwf	dtoa@w^(0+128),f
  5519  0646  30FF               	movlw	255
  5520  0647  3DCD               	addwfc	(dtoa@w+1)^(0+128),f
  5521  0648                     l466:	
  5522                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 294:     }
  5523                           
  5524                           
  5525                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  5526  0648  301F               	movlw	31
  5527  0649  0021               	movlb	1	; select bank1
  5528  064A  00D8               	movwf	dtoa@i^(0+128)
  5529  064B  3000               	movlw	0
  5530  064C  00D9               	movwf	(dtoa@i^(0+128)+1)
  5531                           
  5532                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  5533  064D  0023               	movlb	3	; select bank3
  5534  064E  01BF               	clrf	(_dbuf^(0+384)+31)
  5535                           
  5536                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5537  064F  2EDE               	goto	l469
  5538  0650                     l2442:	
  5539  0650  0021               	movlb	1	; select bank1
  5540  0651  0850               	movf	dtoa@n^(0+128),w
  5541  0652  0451               	iorwf	(dtoa@n+1)^(0+128),w
  5542  0653  0452               	iorwf	(dtoa@n+2)^(0+128),w
  5543  0654  0453               	iorwf	(dtoa@n+3)^(0+128),w
  5544  0655  0454               	iorwf	(dtoa@n+4)^(0+128),w
  5545  0656  0455               	iorwf	(dtoa@n+5)^(0+128),w
  5546  0657  0456               	iorwf	(dtoa@n+6)^(0+128),w
  5547  0658  0457               	iorwf	(dtoa@n+7)^(0+128),w
  5548  0659  1D03               	skipz
  5549  065A  2E75               	goto	l2432
  5550  065B  084A               	movf	(dtoa@p+1)^(0+128),w
  5551  065C  3A80               	xorlw	128
  5552  065D  00C4               	movwf	??_dtoa^(0+128)
  5553  065E  3080               	movlw	128
  5554  065F  0244               	subwf	??_dtoa^(0+128),w
  5555  0660  1D03               	skipz
  5556  0661  2E64               	goto	u2685
  5557  0662  3001               	movlw	1
  5558  0663  0249               	subwf	dtoa@p^(0+128),w
  5559  0664                     u2685:	
  5560  0664  1803               	skipnc
  5561  0665  2E75               	goto	l2432
  5562  0666  0021               	movlb	1	; select bank1
  5563  0667  084D               	movf	(dtoa@w+1)^(0+128),w
  5564  0668  3A80               	xorlw	128
  5565  0669  00C4               	movwf	??_dtoa^(0+128)
  5566  066A  3080               	movlw	128
  5567  066B  0244               	subwf	??_dtoa^(0+128),w
  5568  066C  1D03               	skipz
  5569  066D  2E70               	goto	u2695
  5570  066E  3001               	movlw	1
  5571  066F  024C               	subwf	dtoa@w^(0+128),w
  5572  0670                     u2695:	
  5573  0670  1C03               	skipc
  5574  0671  2EEA               	goto	l2450
  5575  0672  0020               	movlb	0	; select bank0
  5576  0673  1CE4               	btfss	_flags,1
  5577  0674  2EEA               	goto	l2450
  5578  0675                     l2432:	
  5579                           
  5580                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  5581  0675  30FF               	movlw	255
  5582  0676  0021               	movlb	1	; select bank1
  5583  0677  07D8               	addwf	dtoa@i^(0+128),f
  5584  0678  30FF               	movlw	255
  5585  0679  3DD9               	addwfc	(dtoa@i+1)^(0+128),f
  5586                           
  5587                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  5588  067A  300A               	movlw	10
  5589  067B  00A0               	movwf	___aomod@divisor^(0+128)
  5590  067C  01A1               	clrf	(___aomod@divisor+1)^(0+128)
  5591  067D  01A2               	clrf	(___aomod@divisor+2)^(0+128)
  5592  067E  01A3               	clrf	(___aomod@divisor+3)^(0+128)
  5593  067F  01A4               	clrf	(___aomod@divisor+4)^(0+128)
  5594  0680  01A5               	clrf	(___aomod@divisor+5)^(0+128)
  5595  0681  01A6               	clrf	(___aomod@divisor+6)^(0+128)
  5596  0682  01A7               	clrf	(___aomod@divisor+7)^(0+128)
  5597  0683  0850               	movf	dtoa@n^(0+128),w
  5598  0684  00A8               	movwf	___aomod@dividend^(0+128)
  5599  0685  0851               	movf	(dtoa@n+1)^(0+128),w
  5600  0686  00A9               	movwf	(___aomod@dividend+1)^(0+128)
  5601  0687  0852               	movf	(dtoa@n+2)^(0+128),w
  5602  0688  00AA               	movwf	(___aomod@dividend+2)^(0+128)
  5603  0689  0853               	movf	(dtoa@n+3)^(0+128),w
  5604  068A  00AB               	movwf	(___aomod@dividend+3)^(0+128)
  5605  068B  0854               	movf	(dtoa@n+4)^(0+128),w
  5606  068C  00AC               	movwf	(___aomod@dividend+4)^(0+128)
  5607  068D  0855               	movf	(dtoa@n+5)^(0+128),w
  5608  068E  00AD               	movwf	(___aomod@dividend+5)^(0+128)
  5609  068F  0856               	movf	(dtoa@n+6)^(0+128),w
  5610  0690  00AE               	movwf	(___aomod@dividend+6)^(0+128)
  5611  0691  0857               	movf	(dtoa@n+7)^(0+128),w
  5612  0692  00AF               	movwf	(___aomod@dividend+7)^(0+128)
  5613  0693  3187  271D  3185   	fcall	___aomod
  5614  0696  0021               	movlb	1	; select bank1
  5615  0697  0821               	movf	(?___aomod+1)^(0+128),w
  5616  0698  00B4               	movwf	(abs@a+1)^(0+128)
  5617  0699  0820               	movf	?___aomod^(0+128),w
  5618  069A  00B3               	movwf	abs@a^(0+128)
  5619  069B  3188  2061  3185   	fcall	_abs
  5620  069E  0021               	movlb	1	; select bank1
  5621  069F  0833               	movf	?_abs^(0+128),w
  5622  06A0  3E30               	addlw	48
  5623  06A1  00C4               	movwf	??_dtoa^(0+128)
  5624  06A2  0858               	movf	dtoa@i^(0+128),w
  5625  06A3  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5626  06A4  0086               	movwf	6
  5627  06A5  3001               	movlw	1	; select bank3/4
  5628  06A6  0087               	movwf	7
  5629  06A7  0844               	movf	??_dtoa^(0+128),w
  5630  06A8  0081               	movwf	1
  5631                           
  5632                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  5633  06A9  30FF               	movlw	255
  5634  06AA  07C9               	addwf	dtoa@p^(0+128),f
  5635  06AB  30FF               	movlw	255
  5636  06AC  3DCA               	addwfc	(dtoa@p+1)^(0+128),f
  5637                           
  5638                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  5639  06AD  30FF               	movlw	255
  5640  06AE  07CC               	addwf	dtoa@w^(0+128),f
  5641  06AF  30FF               	movlw	255
  5642  06B0  3DCD               	addwfc	(dtoa@w+1)^(0+128),f
  5643                           
  5644                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  5645  06B1  300A               	movlw	10
  5646  06B2  00A0               	movwf	___aodiv@divisor^(0+128)
  5647  06B3  01A1               	clrf	(___aodiv@divisor+1)^(0+128)
  5648  06B4  01A2               	clrf	(___aodiv@divisor+2)^(0+128)
  5649  06B5  01A3               	clrf	(___aodiv@divisor+3)^(0+128)
  5650  06B6  01A4               	clrf	(___aodiv@divisor+4)^(0+128)
  5651  06B7  01A5               	clrf	(___aodiv@divisor+5)^(0+128)
  5652  06B8  01A6               	clrf	(___aodiv@divisor+6)^(0+128)
  5653  06B9  01A7               	clrf	(___aodiv@divisor+7)^(0+128)
  5654  06BA  0850               	movf	dtoa@n^(0+128),w
  5655  06BB  00A8               	movwf	___aodiv@dividend^(0+128)
  5656  06BC  0851               	movf	(dtoa@n+1)^(0+128),w
  5657  06BD  00A9               	movwf	(___aodiv@dividend+1)^(0+128)
  5658  06BE  0852               	movf	(dtoa@n+2)^(0+128),w
  5659  06BF  00AA               	movwf	(___aodiv@dividend+2)^(0+128)
  5660  06C0  0853               	movf	(dtoa@n+3)^(0+128),w
  5661  06C1  00AB               	movwf	(___aodiv@dividend+3)^(0+128)
  5662  06C2  0854               	movf	(dtoa@n+4)^(0+128),w
  5663  06C3  00AC               	movwf	(___aodiv@dividend+4)^(0+128)
  5664  06C4  0855               	movf	(dtoa@n+5)^(0+128),w
  5665  06C5  00AD               	movwf	(___aodiv@dividend+5)^(0+128)
  5666  06C6  0856               	movf	(dtoa@n+6)^(0+128),w
  5667  06C7  00AE               	movwf	(___aodiv@dividend+6)^(0+128)
  5668  06C8  0857               	movf	(dtoa@n+7)^(0+128),w
  5669  06C9  00AF               	movwf	(___aodiv@dividend+7)^(0+128)
  5670  06CA  318F  2709  3185   	fcall	___aodiv
  5671  06CD  0021               	movlb	1	; select bank1
  5672  06CE  0820               	movf	?___aodiv^(0+128),w
  5673  06CF  00D0               	movwf	dtoa@n^(0+128)
  5674  06D0  0821               	movf	(?___aodiv+1)^(0+128),w
  5675  06D1  00D1               	movwf	(dtoa@n+1)^(0+128)
  5676  06D2  0822               	movf	(?___aodiv+2)^(0+128),w
  5677  06D3  00D2               	movwf	(dtoa@n+2)^(0+128)
  5678  06D4  0823               	movf	(?___aodiv+3)^(0+128),w
  5679  06D5  00D3               	movwf	(dtoa@n+3)^(0+128)
  5680  06D6  0824               	movf	(?___aodiv+4)^(0+128),w
  5681  06D7  00D4               	movwf	(dtoa@n+4)^(0+128)
  5682  06D8  0825               	movf	(?___aodiv+5)^(0+128),w
  5683  06D9  00D5               	movwf	(dtoa@n+5)^(0+128)
  5684  06DA  0826               	movf	(?___aodiv+6)^(0+128),w
  5685  06DB  00D6               	movwf	(dtoa@n+6)^(0+128)
  5686  06DC  0827               	movf	(?___aodiv+7)^(0+128),w
  5687  06DD  00D7               	movwf	(dtoa@n+7)^(0+128)
  5688  06DE                     l469:	
  5689                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 305:     }
  5690                           
  5691                           
  5692                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5693  06DE  0021               	movlb	1	; select bank1
  5694  06DF  0859               	movf	(dtoa@i+1)^(0+128),w
  5695  06E0  3A80               	xorlw	128
  5696  06E1  00C4               	movwf	??_dtoa^(0+128)
  5697  06E2  3080               	movlw	128
  5698  06E3  0244               	subwf	??_dtoa^(0+128),w
  5699  06E4  1D03               	skipz
  5700  06E5  2EE8               	goto	u2665
  5701  06E6  3001               	movlw	1
  5702  06E7  0258               	subwf	dtoa@i^(0+128),w
  5703  06E8                     u2665:	
  5704  06E8  1803               	btfsc	3,0
  5705  06E9  2E50               	goto	l2442
  5706  06EA                     l2450:	
  5707                           
  5708                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  5709  06EA  0021               	movlb	1	; select bank1
  5710  06EB  084E               	movf	dtoa@s^(0+128),w
  5711  06EC  044F               	iorwf	(dtoa@s+1)^(0+128),w
  5712  06ED  1D03               	btfss	3,2
  5713  06EE  2EF2               	goto	l2454
  5714  06EF  0020               	movlb	0	; select bank0
  5715  06F0  1D64               	btfss	_flags,2
  5716  06F1  2F0A               	goto	l2464
  5717  06F2                     l2454:	
  5718                           
  5719                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  5720  06F2  30FF               	movlw	255
  5721  06F3  0021               	movlb	1	; select bank1
  5722  06F4  07D8               	addwf	dtoa@i^(0+128),f
  5723  06F5  30FF               	movlw	255
  5724  06F6  3DD9               	addwfc	(dtoa@i+1)^(0+128),f
  5725                           
  5726                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  5727  06F7  084E               	movf	dtoa@s^(0+128),w
  5728  06F8  044F               	iorwf	(dtoa@s+1)^(0+128),w
  5729  06F9  1D03               	btfss	3,2
  5730  06FA  2EFD               	goto	l2460
  5731  06FB  302B               	movlw	43
  5732  06FC  2EFE               	goto	L2
  5733  06FD                     l2460:	
  5734  06FD  302D               	movlw	45
  5735  06FE                     L2:	
  5736  06FE  00C7               	movwf	_dtoa$695^(0+128)
  5737  06FF  3000               	movlw	0
  5738  0700  00C8               	movwf	(_dtoa$695^(0+128)+1)
  5739  0701  0847               	movf	_dtoa$695^(0+128),w
  5740  0702  00C4               	movwf	??_dtoa^(0+128)
  5741  0703  0858               	movf	dtoa@i^(0+128),w
  5742  0704  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5743  0705  0086               	movwf	6
  5744  0706  3001               	movlw	1	; select bank3/4
  5745  0707  0087               	movwf	7
  5746  0708  0844               	movf	??_dtoa^(0+128),w
  5747  0709  0081               	movwf	1
  5748  070A                     l2464:	
  5749                           
  5750                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  5751  070A  0021               	movlb	1	; select bank1
  5752  070B  0858               	movf	dtoa@i^(0+128),w
  5753  070C  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5754  070D  00C4               	movwf	??_dtoa^(0+128)
  5755  070E  0844               	movf	??_dtoa^(0+128),w
  5756  070F  00B3               	movwf	pad@buf^(0+128)
  5757  0710  084D               	movf	(dtoa@w+1)^(0+128),w
  5758  0711  00B5               	movwf	(pad@p+1)^(0+128)
  5759  0712  084C               	movf	dtoa@w^(0+128),w
  5760  0713  00B4               	movwf	pad@p^(0+128)
  5761  0714  084B               	movf	dtoa@fp^(0+128),w
  5762  0715  318A  22D9         	fcall	_pad
  5763  0717  0021               	movlb	1	; select bank1
  5764  0718  0834               	movf	(?_pad+1)^(0+128),w
  5765  0719  00BD               	movwf	(?_dtoa+1)^(0+128)
  5766  071A  0833               	movf	?_pad^(0+128),w
  5767  071B  00BC               	movwf	?_dtoa^(0+128)
  5768  071C  0008               	return
  5769  071D                     __end_of_dtoa:	
  5770                           
  5771                           	psect	text10
  5772  0AD9                     __ptext10:	
  5773 ;; *************** function _pad *****************
  5774 ;; Defined at:
  5775 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5776 ;; Parameters:    Size  Location     Type
  5777 ;;  fp              1    wreg     PTR struct _IO_FILE
  5778 ;;		 -> NULL(0), 
  5779 ;;  buf             1   19[BANK1 ] PTR unsigned char 
  5780 ;;		 -> dbuf(32), 
  5781 ;;  p               2   20[BANK1 ] int 
  5782 ;; Auto vars:     Size  Location     Type
  5783 ;;  fp              1   27[BANK1 ] PTR struct _IO_FILE
  5784 ;;		 -> NULL(0), 
  5785 ;;  w               2   25[BANK1 ] int 
  5786 ;;  i               2   23[BANK1 ] int 
  5787 ;; Return value:  Size  Location     Type
  5788 ;;                  2   19[BANK1 ] int 
  5789 ;; Registers used:
  5790 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5791 ;; Tracked objects:
  5792 ;;		On entry : 0/0
  5793 ;;		On exit  : 0/0
  5794 ;;		Unchanged: 0/0
  5795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5796 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5797 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  5798 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5799 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  5800 ;;Total ram usage:        9 bytes
  5801 ;; Hardware stack levels used:    1
  5802 ;; Hardware stack levels required when called:   10
  5803 ;; This function calls:
  5804 ;;		_fputc
  5805 ;;		_fputs
  5806 ;;		_strlen
  5807 ;; This function is called by:
  5808 ;;		_dtoa
  5809 ;; This function uses a non-reentrant model
  5810 ;;
  5811                           
  5812                           
  5813                           ;psect for function _pad
  5814  0AD9                     _pad:	
  5815                           
  5816                           ;incstack = 0
  5817                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5818                           ;pad@fp stored from wreg
  5819  0AD9  0021               	movlb	1	; select bank1
  5820  0ADA  00BB               	movwf	pad@fp^(0+128)
  5821                           
  5822                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  5823  0ADB  0020               	movlb	0	; select bank0
  5824  0ADC  1C64               	btfss	_flags,0
  5825  0ADD  2AEA               	goto	l2306
  5826                           
  5827                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  5828  0ADE  0021               	movlb	1	; select bank1
  5829  0ADF  0833               	movf	pad@buf^(0+128),w
  5830  0AE0  00AA               	movwf	fputs@s^(0+128)
  5831  0AE1  3001               	movlw	1
  5832  0AE2  00AB               	movwf	(fputs@s+1)^(0+128)
  5833  0AE3  083B               	movf	pad@fp^(0+128),w
  5834  0AE4  00B6               	movwf	??_pad^(0+128)
  5835  0AE5  0836               	movf	??_pad^(0+128),w
  5836  0AE6  00AC               	movwf	fputs@fp^(0+128)
  5837  0AE7  3189  2137  318A   	fcall	_fputs
  5838  0AEA                     l2306:	
  5839                           
  5840                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  5841  0AEA  0021               	movlb	1	; select bank1
  5842  0AEB  1BB5               	btfsc	(pad@p+1)^(0+128),7
  5843  0AEC  2AF2               	goto	l2310
  5844  0AED  0835               	movf	(pad@p+1)^(0+128),w
  5845  0AEE  00BA               	movwf	(pad@w+1)^(0+128)
  5846  0AEF  0834               	movf	pad@p^(0+128),w
  5847  0AF0  00B9               	movwf	pad@w^(0+128)
  5848  0AF1  2AF4               	goto	l452
  5849  0AF2                     l2310:	
  5850  0AF2  01B9               	clrf	pad@w^(0+128)
  5851  0AF3  01BA               	clrf	(pad@w+1)^(0+128)
  5852  0AF4                     l452:	
  5853                           
  5854                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  5855  0AF4  01B7               	clrf	pad@i^(0+128)
  5856  0AF5  01B8               	clrf	(pad@i+1)^(0+128)
  5857  0AF6                     l2316:	
  5858                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  5859                           
  5860                           
  5861                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  5862  0AF6  0838               	movf	(pad@i+1)^(0+128),w
  5863  0AF7  3A80               	xorlw	128
  5864  0AF8  00B6               	movwf	??_pad^(0+128)
  5865  0AF9  083A               	movf	(pad@w+1)^(0+128),w
  5866  0AFA  3A80               	xorlw	128
  5867  0AFB  0236               	subwf	??_pad^(0+128),w
  5868  0AFC  1D03               	skipz
  5869  0AFD  2B00               	goto	u2315
  5870  0AFE  0839               	movf	pad@w^(0+128),w
  5871  0AFF  0237               	subwf	pad@i^(0+128),w
  5872  0B00                     u2315:	
  5873  0B00  1803               	btfsc	3,0
  5874  0B01  2B14               	goto	l455
  5875                           
  5876                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  5877  0B02  3020               	movlw	32
  5878  0B03  0021               	movlb	1	; select bank1
  5879  0B04  00A2               	movwf	fputc@c^(0+128)
  5880  0B05  3000               	movlw	0
  5881  0B06  00A3               	movwf	(fputc@c^(0+128)+1)
  5882  0B07  083B               	movf	pad@fp^(0+128),w
  5883  0B08  00B6               	movwf	??_pad^(0+128)
  5884  0B09  0836               	movf	??_pad^(0+128),w
  5885  0B0A  00A4               	movwf	fputc@fp^(0+128)
  5886  0B0B  318A  2202  318A   	fcall	_fputc
  5887                           
  5888                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  5889  0B0E  3001               	movlw	1
  5890  0B0F  0021               	movlb	1	; select bank1
  5891  0B10  07B7               	addwf	pad@i^(0+128),f
  5892  0B11  3000               	movlw	0
  5893  0B12  3DB8               	addwfc	(pad@i+1)^(0+128),f
  5894  0B13  2AF6               	goto	l2316
  5895  0B14                     l455:	
  5896                           
  5897                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  5898  0B14  0020               	movlb	0	; select bank0
  5899  0B15  1864               	btfsc	_flags,0
  5900  0B16  2B23               	goto	l2320
  5901                           
  5902                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  5903  0B17  0021               	movlb	1	; select bank1
  5904  0B18  0833               	movf	pad@buf^(0+128),w
  5905  0B19  00AA               	movwf	fputs@s^(0+128)
  5906  0B1A  3001               	movlw	1
  5907  0B1B  00AB               	movwf	(fputs@s+1)^(0+128)
  5908  0B1C  083B               	movf	pad@fp^(0+128),w
  5909  0B1D  00B6               	movwf	??_pad^(0+128)
  5910  0B1E  0836               	movf	??_pad^(0+128),w
  5911  0B1F  00AC               	movwf	fputs@fp^(0+128)
  5912  0B20  3189  2137  318A   	fcall	_fputs
  5913  0B23                     l2320:	
  5914                           
  5915                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  5916  0B23  0021               	movlb	1	; select bank1
  5917  0B24  0833               	movf	pad@buf^(0+128),w
  5918  0B25  3188  207A         	fcall	_strlen
  5919  0B27  0021               	movlb	1	; select bank1
  5920  0B28  0839               	movf	pad@w^(0+128),w
  5921  0B29  0720               	addwf	?_strlen^(0+128),w
  5922  0B2A  00B3               	movwf	?_pad^(0+128)
  5923  0B2B  083A               	movf	(pad@w+1)^(0+128),w
  5924  0B2C  3D21               	addwfc	(?_strlen+1)^(0+128),w
  5925  0B2D  00B4               	movwf	(?_pad+1)^(0+128)
  5926  0B2E  0008               	return
  5927  0B2F                     __end_of_pad:	
  5928                           
  5929                           	psect	text11
  5930  087A                     __ptext11:	
  5931 ;; *************** function _strlen *****************
  5932 ;; Defined at:
  5933 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  5934 ;; Parameters:    Size  Location     Type
  5935 ;;  s               1    wreg     PTR const unsigned char 
  5936 ;;		 -> dbuf(32), 
  5937 ;; Auto vars:     Size  Location     Type
  5938 ;;  s               1    4[BANK1 ] PTR const unsigned char 
  5939 ;;		 -> dbuf(32), 
  5940 ;;  a               1    3[BANK1 ] PTR const unsigned char 
  5941 ;;		 -> dbuf(32), 
  5942 ;; Return value:  Size  Location     Type
  5943 ;;                  2    0[BANK1 ] unsigned int 
  5944 ;; Registers used:
  5945 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5946 ;; Tracked objects:
  5947 ;;		On entry : 0/0
  5948 ;;		On exit  : 0/0
  5949 ;;		Unchanged: 0/0
  5950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5951 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5952 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5953 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5954 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  5955 ;;Total ram usage:        5 bytes
  5956 ;; Hardware stack levels used:    1
  5957 ;; Hardware stack levels required when called:    6
  5958 ;; This function calls:
  5959 ;;		Nothing
  5960 ;; This function is called by:
  5961 ;;		_pad
  5962 ;; This function uses a non-reentrant model
  5963 ;;
  5964                           
  5965                           
  5966                           ;psect for function _strlen
  5967  087A                     _strlen:	
  5968                           
  5969                           ;incstack = 0
  5970                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  5971                           ;strlen@s stored from wreg
  5972  087A  0021               	movlb	1	; select bank1
  5973  087B  00A4               	movwf	strlen@s^(0+128)
  5974  087C  0824               	movf	strlen@s^(0+128),w
  5975  087D  00A2               	movwf	??_strlen^(0+128)
  5976  087E  0822               	movf	??_strlen^(0+128),w
  5977  087F  00A3               	movwf	strlen@a^(0+128)
  5978  0880                     l2296:	
  5979  0880  0824               	movf	strlen@s^(0+128),w
  5980  0881  0086               	movwf	6
  5981  0882  3001               	movlw	1	; select bank2/3
  5982  0883  0087               	movwf	7
  5983  0884  0801               	movf	1,w
  5984  0885  1903               	btfsc	3,2
  5985  0886  288C               	goto	l2298
  5986  0887  3001               	movlw	1
  5987  0888  00A2               	movwf	??_strlen^(0+128)
  5988  0889  0822               	movf	??_strlen^(0+128),w
  5989  088A  07A4               	addwf	strlen@s^(0+128),f
  5990  088B  2880               	goto	l2296
  5991  088C                     l2298:	
  5992  088C  0823               	movf	strlen@a^(0+128),w
  5993  088D  0224               	subwf	strlen@s^(0+128),w
  5994  088E  00A0               	movwf	?_strlen^(0+128)
  5995  088F  01A1               	clrf	(?_strlen+1)^(0+128)
  5996  0890  1BA0               	btfsc	?_strlen^(0+128),7
  5997  0891  03A1               	decf	(?_strlen+1)^(0+128),f
  5998  0892  0008               	return
  5999  0893                     __end_of_strlen:	
  6000                           
  6001                           	psect	text12
  6002  0937                     __ptext12:	
  6003 ;; *************** function _fputs *****************
  6004 ;; Defined at:
  6005 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  6006 ;; Parameters:    Size  Location     Type
  6007 ;;  s               2   10[BANK1 ] PTR const unsigned char 
  6008 ;;		 -> dbuf(32), STR_5(3), hrDisp(13), distanceDisp(11), 
  6009 ;;		 -> speedDisp(8), 
  6010 ;;  fp              1   12[BANK1 ] PTR struct _IO_FILE
  6011 ;;		 -> NULL(0), 
  6012 ;; Auto vars:     Size  Location     Type
  6013 ;;  i               2   17[BANK1 ] int 
  6014 ;;  c               1   16[BANK1 ] unsigned char 
  6015 ;; Return value:  Size  Location     Type
  6016 ;;                  2   10[BANK1 ] int 
  6017 ;; Registers used:
  6018 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6019 ;; Tracked objects:
  6020 ;;		On entry : 0/0
  6021 ;;		On exit  : 0/0
  6022 ;;		Unchanged: 0/0
  6023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6024 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6025 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6026 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6027 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  6028 ;;Total ram usage:        9 bytes
  6029 ;; Hardware stack levels used:    1
  6030 ;; Hardware stack levels required when called:    9
  6031 ;; This function calls:
  6032 ;;		_fputc
  6033 ;; This function is called by:
  6034 ;;		_pad
  6035 ;;		_puts
  6036 ;; This function uses a non-reentrant model
  6037 ;;
  6038                           
  6039                           
  6040                           ;psect for function _fputs
  6041  0937                     _fputs:	
  6042                           
  6043                           ;incstack = 0
  6044                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6045  0937  0021               	movlb	1	; select bank1
  6046  0938  01B1               	clrf	fputs@i^(0+128)
  6047  0939  01B2               	clrf	(fputs@i+1)^(0+128)
  6048  093A                     l2286:	
  6049  093A  082A               	movf	fputs@s^(0+128),w
  6050  093B  0731               	addwf	fputs@i^(0+128),w
  6051  093C  0084               	movwf	4
  6052  093D  082B               	movf	(fputs@s+1)^(0+128),w
  6053  093E  3D32               	addwfc	(fputs@i+1)^(0+128),w
  6054  093F  0085               	movwf	5
  6055  0940  0800               	movf	0,w	;code access
  6056  0941  00AD               	movwf	??_fputs^(0+128)
  6057  0942  082D               	movf	??_fputs^(0+128),w
  6058  0943  00B0               	movwf	fputs@c^(0+128)
  6059  0944  0830               	movf	fputs@c^(0+128),w
  6060  0945  1903               	btfsc	3,2
  6061  0946  295B               	goto	l2288
  6062  0947  0830               	movf	fputs@c^(0+128),w
  6063  0948  00AD               	movwf	??_fputs^(0+128)
  6064  0949  01AE               	clrf	(??_fputs^(0+128)+1)
  6065  094A  082D               	movf	??_fputs^(0+128),w
  6066  094B  00A2               	movwf	fputc@c^(0+128)
  6067  094C  082E               	movf	(??_fputs+1)^(0+128),w
  6068  094D  00A3               	movwf	(fputc@c+1)^(0+128)
  6069  094E  082C               	movf	fputs@fp^(0+128),w
  6070  094F  00AF               	movwf	(??_fputs+2)^(0+128)
  6071  0950  082F               	movf	(??_fputs+2)^(0+128),w
  6072  0951  00A4               	movwf	fputc@fp^(0+128)
  6073  0952  318A  2202  3189   	fcall	_fputc
  6074  0955  3001               	movlw	1
  6075  0956  0021               	movlb	1	; select bank1
  6076  0957  07B1               	addwf	fputs@i^(0+128),f
  6077  0958  3000               	movlw	0
  6078  0959  3DB2               	addwfc	(fputs@i+1)^(0+128),f
  6079  095A  293A               	goto	l2286
  6080  095B                     l2288:	
  6081  095B  0832               	movf	(fputs@i+1)^(0+128),w
  6082  095C  00AB               	movwf	(?_fputs+1)^(0+128)
  6083  095D  0831               	movf	fputs@i^(0+128),w
  6084  095E  00AA               	movwf	?_fputs^(0+128)
  6085  095F  0008               	return
  6086  0960                     __end_of_fputs:	
  6087                           
  6088                           	psect	text13
  6089  0A02                     __ptext13:	
  6090 ;; *************** function _fputc *****************
  6091 ;; Defined at:
  6092 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  6093 ;; Parameters:    Size  Location     Type
  6094 ;;  c               2    2[BANK1 ] int 
  6095 ;;  fp              1    4[BANK1 ] PTR struct _IO_FILE
  6096 ;;		 -> NULL(0), 
  6097 ;; Auto vars:     Size  Location     Type
  6098 ;;		None
  6099 ;; Return value:  Size  Location     Type
  6100 ;;                  2    2[BANK1 ] int 
  6101 ;; Registers used:
  6102 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6103 ;; Tracked objects:
  6104 ;;		On entry : 0/0
  6105 ;;		On exit  : 0/0
  6106 ;;		Unchanged: 0/0
  6107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6108 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6110 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  6111 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  6112 ;;Total ram usage:        8 bytes
  6113 ;; Hardware stack levels used:    1
  6114 ;; Hardware stack levels required when called:    8
  6115 ;; This function calls:
  6116 ;;		_putch
  6117 ;; This function is called by:
  6118 ;;		_pad
  6119 ;;		_vfpfcnvrt
  6120 ;;		_fputs
  6121 ;;		_puts
  6122 ;; This function uses a non-reentrant model
  6123 ;;
  6124                           
  6125                           
  6126                           ;psect for function _fputc
  6127  0A02                     _fputc:	
  6128                           
  6129                           ;incstack = 0
  6130                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6131  0A02  0021               	movlb	1	; select bank1
  6132  0A03  0824               	movf	fputc@fp^(0+128),w
  6133  0A04  1D03               	btfss	3,2
  6134  0A05  0824               	movf	fputc@fp^(0+128),w
  6135  0A06  1D03               	btfss	3,2
  6136  0A07  2A0D               	goto	l2270
  6137  0A08  0822               	movf	fputc@c^(0+128),w
  6138  0A09  3197  278F  318A   	fcall	_putch
  6139  0A0C  2A39               	goto	l2276
  6140  0A0D                     l2270:	
  6141  0A0D  0824               	movf	fputc@fp^(0+128),w
  6142  0A0E  3E03               	addlw	3
  6143  0A0F  0086               	movwf	6
  6144  0A10  0187               	clrf	7
  6145  0A11  0016               	moviw fsr1++
  6146  0A12  0401               	iorwf	1,w
  6147  0A13  1903               	btfsc	3,2
  6148  0A14  2A30               	goto	l2274
  6149  0A15  0824               	movf	fputc@fp^(0+128),w
  6150  0A16  3E03               	addlw	3
  6151  0A17  0086               	movwf	6
  6152  0A18  0187               	clrf	7
  6153  0A19  3F40               	moviw [0]fsr1
  6154  0A1A  00A5               	movwf	??_fputc^(0+128)
  6155  0A1B  3F41               	moviw [1]fsr1
  6156  0A1C  00A6               	movwf	(??_fputc^(0+128)+1)
  6157  0A1D  0A24               	incf	fputc@fp^(0+128),w
  6158  0A1E  0086               	movwf	6
  6159  0A1F  0187               	clrf	7
  6160  0A20  3F40               	moviw [0]fsr1
  6161  0A21  00A7               	movwf	(??_fputc+2)^(0+128)
  6162  0A22  3F41               	moviw [1]fsr1
  6163  0A23  00A8               	movwf	((??_fputc+2)^(0+128)+1)
  6164  0A24  0828               	movf	(??_fputc+3)^(0+128),w
  6165  0A25  3A80               	xorlw	128
  6166  0A26  00A9               	movwf	(??_fputc+4)^(0+128)
  6167  0A27  0826               	movf	(??_fputc+1)^(0+128),w
  6168  0A28  3A80               	xorlw	128
  6169  0A29  0229               	subwf	(??_fputc+4)^(0+128),w
  6170  0A2A  1D03               	skipz
  6171  0A2B  2A2E               	goto	u2265
  6172  0A2C  0825               	movf	??_fputc^(0+128),w
  6173  0A2D  0227               	subwf	(??_fputc+2)^(0+128),w
  6174  0A2E                     u2265:	
  6175  0A2E  1803               	skipnc
  6176  0A2F  2A39               	goto	l2276
  6177  0A30                     l2274:	
  6178  0A30  0021               	movlb	1	; select bank1
  6179  0A31  0A24               	incf	fputc@fp^(0+128),w
  6180  0A32  0086               	movwf	6
  6181  0A33  0187               	clrf	7
  6182  0A34  3001               	movlw	1
  6183  0A35  0781               	addwf	1,f
  6184  0A36  3141               	addfsr 1,1
  6185  0A37  1803               	skipnc
  6186  0A38  0A81               	incf	1,f
  6187  0A39                     l2276:	
  6188  0A39  0021               	movlb	1	; select bank1
  6189  0A3A  0822               	movf	fputc@c^(0+128),w
  6190  0A3B  00A5               	movwf	??_fputc^(0+128)
  6191  0A3C  01A6               	clrf	(??_fputc^(0+128)+1)
  6192  0A3D  0825               	movf	??_fputc^(0+128),w
  6193  0A3E  00A2               	movwf	?_fputc^(0+128)
  6194  0A3F  0826               	movf	(??_fputc+1)^(0+128),w
  6195  0A40  00A3               	movwf	(?_fputc+1)^(0+128)
  6196  0A41  0008               	return
  6197  0A42                     __end_of_fputc:	
  6198                           
  6199                           	psect	text14
  6200  178F                     __ptext14:	
  6201 ;; *************** function _putch *****************
  6202 ;; Defined at:
  6203 ;;		line 151 in file "mcc_generated_files/eusart.c"
  6204 ;; Parameters:    Size  Location     Type
  6205 ;;  txData          1    wreg     unsigned char 
  6206 ;; Auto vars:     Size  Location     Type
  6207 ;;  txData          1    1[BANK1 ] unsigned char 
  6208 ;; Return value:  Size  Location     Type
  6209 ;;                  1    wreg      void 
  6210 ;; Registers used:
  6211 ;;		wreg, status,2, status,0, pclath, cstack
  6212 ;; Tracked objects:
  6213 ;;		On entry : 0/0
  6214 ;;		On exit  : 0/0
  6215 ;;		Unchanged: 0/0
  6216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6218 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6220 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6221 ;;Total ram usage:        1 bytes
  6222 ;; Hardware stack levels used:    1
  6223 ;; Hardware stack levels required when called:    7
  6224 ;; This function calls:
  6225 ;;		_EUSART_Write
  6226 ;; This function is called by:
  6227 ;;		_fputc
  6228 ;; This function uses a non-reentrant model
  6229 ;;
  6230                           
  6231                           
  6232                           ;psect for function _putch
  6233  178F                     _putch:	
  6234                           
  6235                           ;incstack = 0
  6236                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  6237                           ;putch@txData stored from wreg
  6238  178F  0021               	movlb	1	; select bank1
  6239  1790  00A1               	movwf	putch@txData^(0+128)
  6240                           
  6241                           ;mcc_generated_files/eusart.c: 151: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 152: {;mcc_generated_files/eusart.c: 153:     EUSART_Write(txData);
  6242  1791  0821               	movf	putch@txData^(0+128),w
  6243  1792  3197  27DD         	fcall	_EUSART_Write
  6244  1794  0008               	return
  6245  1795                     __end_of_putch:	
  6246                           
  6247                           	psect	text15
  6248  17DD                     __ptext15:	
  6249 ;; *************** function _EUSART_Write *****************
  6250 ;; Defined at:
  6251 ;;		line 137 in file "mcc_generated_files/eusart.c"
  6252 ;; Parameters:    Size  Location     Type
  6253 ;;  txData          1    wreg     unsigned char 
  6254 ;; Auto vars:     Size  Location     Type
  6255 ;;  txData          1    0[BANK1 ] unsigned char 
  6256 ;; Return value:  Size  Location     Type
  6257 ;;                  1    wreg      void 
  6258 ;; Registers used:
  6259 ;;		wreg
  6260 ;; Tracked objects:
  6261 ;;		On entry : 0/0
  6262 ;;		On exit  : 0/0
  6263 ;;		Unchanged: 0/0
  6264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6266 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6268 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6269 ;;Total ram usage:        1 bytes
  6270 ;; Hardware stack levels used:    1
  6271 ;; Hardware stack levels required when called:    6
  6272 ;; This function calls:
  6273 ;;		Nothing
  6274 ;; This function is called by:
  6275 ;;		_putch
  6276 ;;		_setCursor
  6277 ;;		_backlightBrightness
  6278 ;; This function uses a non-reentrant model
  6279 ;;
  6280                           
  6281                           
  6282                           ;psect for function _EUSART_Write
  6283  17DD                     _EUSART_Write:	
  6284                           
  6285                           ;incstack = 0
  6286                           ; Regs used in _EUSART_Write: [wreg]
  6287                           ;EUSART_Write@txData stored from wreg
  6288  17DD  0021               	movlb	1	; select bank1
  6289  17DE  00A0               	movwf	EUSART_Write@txData^(0+128)
  6290  17DF                     l69:	
  6291                           ;mcc_generated_files/eusart.c: 140:     {;mcc_generated_files/eusart.c: 141:     }
  6292                           
  6293                           
  6294                           ;mcc_generated_files/eusart.c: 139:     while(0 == PIR1bits.TXIF)
  6295  17DF  0020               	movlb	0	; select bank0
  6296  17E0  1E10               	btfss	16,4	;volatile
  6297  17E1  2FDF               	goto	l69
  6298                           
  6299                           ;mcc_generated_files/eusart.c: 143:     TX1REG = txData;
  6300  17E2  0021               	movlb	1	; select bank1
  6301  17E3  0820               	movf	EUSART_Write@txData^(0+128),w
  6302  17E4  0023               	movlb	3	; select bank3
  6303  17E5  009A               	movwf	26	;volatile
  6304  17E6  0008               	return
  6305  17E7                     __end_of_EUSART_Write:	
  6306                           
  6307                           	psect	text16
  6308  0861                     __ptext16:	
  6309 ;; *************** function _abs *****************
  6310 ;; Defined at:
  6311 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  6312 ;; Parameters:    Size  Location     Type
  6313 ;;  a               2   19[BANK1 ] int 
  6314 ;; Auto vars:     Size  Location     Type
  6315 ;;		None
  6316 ;; Return value:  Size  Location     Type
  6317 ;;                  2   19[BANK1 ] int 
  6318 ;; Registers used:
  6319 ;;		wreg, status,2, status,0
  6320 ;; Tracked objects:
  6321 ;;		On entry : 0/0
  6322 ;;		On exit  : 0/0
  6323 ;;		Unchanged: 0/0
  6324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6325 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6327 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6328 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  6329 ;;Total ram usage:        4 bytes
  6330 ;; Hardware stack levels used:    1
  6331 ;; Hardware stack levels required when called:    6
  6332 ;; This function calls:
  6333 ;;		Nothing
  6334 ;; This function is called by:
  6335 ;;		_dtoa
  6336 ;; This function uses a non-reentrant model
  6337 ;;
  6338                           
  6339                           
  6340                           ;psect for function _abs
  6341  0861                     _abs:	
  6342                           
  6343                           ;incstack = 0
  6344                           ; Regs used in _abs: [wreg+status,2+status,0]
  6345  0861  0021               	movlb	1	; select bank1
  6346  0862  0834               	movf	(abs@a+1)^(0+128),w
  6347  0863  3A80               	xorlw	128
  6348  0864  00B5               	movwf	??_abs^(0+128)
  6349  0865  3080               	movlw	128
  6350  0866  0235               	subwf	??_abs^(0+128),w
  6351  0867  1D03               	skipz
  6352  0868  286B               	goto	u2335
  6353  0869  3001               	movlw	1
  6354  086A  0233               	subwf	abs@a^(0+128),w
  6355  086B                     u2335:	
  6356  086B  1803               	skipnc
  6357  086C  0008               	return
  6358  086D  0021               	movlb	1	; select bank1
  6359  086E  0933               	comf	abs@a^(0+128),w
  6360  086F  00B5               	movwf	??_abs^(0+128)
  6361  0870  0934               	comf	(abs@a+1)^(0+128),w
  6362  0871  00B6               	movwf	(??_abs^(0+128)+1)
  6363  0872  0AB5               	incf	??_abs^(0+128),f
  6364  0873  1903               	skipnz
  6365  0874  0AB6               	incf	(??_abs^(0+128)+1),f
  6366  0875  0835               	movf	??_abs^(0+128),w
  6367  0876  00B3               	movwf	?_abs^(0+128)
  6368  0877  0836               	movf	(??_abs+1)^(0+128),w
  6369  0878  00B4               	movwf	(?_abs+1)^(0+128)
  6370  0879  0008               	return
  6371  087A                     __end_of_abs:	
  6372                           
  6373                           	psect	text17
  6374  071D                     __ptext17:	
  6375 ;; *************** function ___aomod *****************
  6376 ;; Defined at:
  6377 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  6378 ;; Parameters:    Size  Location     Type
  6379 ;;  divisor         8    0[BANK1 ] long long 
  6380 ;;  dividend        8    8[BANK1 ] long long 
  6381 ;; Auto vars:     Size  Location     Type
  6382 ;;  sign            1   18[BANK1 ] unsigned char 
  6383 ;;  counter         1   17[BANK1 ] unsigned char 
  6384 ;; Return value:  Size  Location     Type
  6385 ;;                  8    0[BANK1 ] long long 
  6386 ;; Registers used:
  6387 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6388 ;; Tracked objects:
  6389 ;;		On entry : 0/0
  6390 ;;		On exit  : 0/0
  6391 ;;		Unchanged: 0/0
  6392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6393 ;;      Params:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  6394 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6395 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6396 ;;      Totals:         0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0
  6397 ;;Total ram usage:       19 bytes
  6398 ;; Hardware stack levels used:    1
  6399 ;; Hardware stack levels required when called:    6
  6400 ;; This function calls:
  6401 ;;		Nothing
  6402 ;; This function is called by:
  6403 ;;		_dtoa
  6404 ;; This function uses a non-reentrant model
  6405 ;;
  6406                           
  6407                           
  6408                           ;psect for function ___aomod
  6409  071D                     ___aomod:	
  6410                           
  6411                           ;incstack = 0
  6412                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  6413  071D  0021               	movlb	1	; select bank1
  6414  071E  01B2               	clrf	___aomod@sign^(0+128)
  6415  071F  30A8               	movlw	low ___aomod@dividend
  6416  0720  0086               	movwf	6
  6417  0721  3000               	movlw	high ___aomod@dividend
  6418  0722  0087               	movwf	7
  6419  0723  3F47               	moviw [7]fsr1
  6420  0724  00B0               	movwf	??___aomod^(0+128)
  6421  0725  1FB0               	btfss	??___aomod^(0+128),7
  6422  0726  2F49               	goto	l2372
  6423  0727  0021               	movlb	1	; select bank1
  6424  0728  09A8               	comf	___aomod@dividend^(0+128),f
  6425  0729  09A9               	comf	(___aomod@dividend+1)^(0+128),f
  6426  072A  09AA               	comf	(___aomod@dividend+2)^(0+128),f
  6427  072B  09AB               	comf	(___aomod@dividend+3)^(0+128),f
  6428  072C  09AC               	comf	(___aomod@dividend+4)^(0+128),f
  6429  072D  09AD               	comf	(___aomod@dividend+5)^(0+128),f
  6430  072E  09AE               	comf	(___aomod@dividend+6)^(0+128),f
  6431  072F  09AF               	comf	(___aomod@dividend+7)^(0+128),f
  6432  0730  0AA8               	incf	___aomod@dividend^(0+128),f
  6433  0731  1D03               	skipz
  6434  0732  2F46               	goto	u246lld
  6435  0733  0AA9               	incf	(___aomod@dividend+1)^(0+128),f
  6436  0734  1D03               	skipz
  6437  0735  2F46               	goto	u246lld
  6438  0736  0AAA               	incf	(___aomod@dividend+2)^(0+128),f
  6439  0737  1D03               	skipz
  6440  0738  2F46               	goto	u246lld
  6441  0739  0AAB               	incf	(___aomod@dividend+3)^(0+128),f
  6442  073A  1D03               	skipz
  6443  073B  2F46               	goto	u246lld
  6444  073C  0AAC               	incf	(___aomod@dividend+4)^(0+128),f
  6445  073D  1D03               	skipz
  6446  073E  2F46               	goto	u246lld
  6447  073F  0AAD               	incf	(___aomod@dividend+5)^(0+128),f
  6448  0740  1D03               	skipz
  6449  0741  2F46               	goto	u246lld
  6450  0742  0AAE               	incf	(___aomod@dividend+6)^(0+128),f
  6451  0743  1D03               	skipz
  6452  0744  2F46               	goto	u246lld
  6453  0745  0AAF               	incf	(___aomod@dividend+7)^(0+128),f
  6454  0746                     u246lld:	
  6455  0746  0021               	movlb	1	; select bank1
  6456  0747  01B2               	clrf	___aomod@sign^(0+128)
  6457  0748  0AB2               	incf	___aomod@sign^(0+128),f
  6458  0749                     l2372:	
  6459  0749  30A0               	movlw	low ___aomod@divisor
  6460  074A  0086               	movwf	6
  6461  074B  3000               	movlw	high ___aomod@divisor
  6462  074C  0087               	movwf	7
  6463  074D  3F47               	moviw [7]fsr1
  6464  074E  0021               	movlb	1	; select bank1
  6465  074F  00B0               	movwf	??___aomod^(0+128)
  6466  0750  1FB0               	btfss	??___aomod^(0+128),7
  6467  0751  2F71               	goto	l2376
  6468  0752  0021               	movlb	1	; select bank1
  6469  0753  09A0               	comf	___aomod@divisor^(0+128),f
  6470  0754  09A1               	comf	(___aomod@divisor+1)^(0+128),f
  6471  0755  09A2               	comf	(___aomod@divisor+2)^(0+128),f
  6472  0756  09A3               	comf	(___aomod@divisor+3)^(0+128),f
  6473  0757  09A4               	comf	(___aomod@divisor+4)^(0+128),f
  6474  0758  09A5               	comf	(___aomod@divisor+5)^(0+128),f
  6475  0759  09A6               	comf	(___aomod@divisor+6)^(0+128),f
  6476  075A  09A7               	comf	(___aomod@divisor+7)^(0+128),f
  6477  075B  0AA0               	incf	___aomod@divisor^(0+128),f
  6478  075C  1D03               	skipz
  6479  075D  2F71               	goto	l2376
  6480  075E  0AA1               	incf	(___aomod@divisor+1)^(0+128),f
  6481  075F  1D03               	skipz
  6482  0760  2F71               	goto	l2376
  6483  0761  0AA2               	incf	(___aomod@divisor+2)^(0+128),f
  6484  0762  1D03               	skipz
  6485  0763  2F71               	goto	l2376
  6486  0764  0AA3               	incf	(___aomod@divisor+3)^(0+128),f
  6487  0765  1D03               	skipz
  6488  0766  2F71               	goto	l2376
  6489  0767  0AA4               	incf	(___aomod@divisor+4)^(0+128),f
  6490  0768  1D03               	skipz
  6491  0769  2F71               	goto	l2376
  6492  076A  0AA5               	incf	(___aomod@divisor+5)^(0+128),f
  6493  076B  1D03               	skipz
  6494  076C  2F71               	goto	l2376
  6495  076D  0AA6               	incf	(___aomod@divisor+6)^(0+128),f
  6496  076E  1D03               	skipz
  6497  076F  2F71               	goto	l2376
  6498  0770  0AA7               	incf	(___aomod@divisor+7)^(0+128),f
  6499  0771                     l2376:	
  6500  0771  0021               	movlb	1	; select bank1
  6501  0772  0820               	movf	___aomod@divisor^(0+128),w
  6502  0773  0421               	iorwf	(___aomod@divisor+1)^(0+128),w
  6503  0774  0422               	iorwf	(___aomod@divisor+2)^(0+128),w
  6504  0775  0423               	iorwf	(___aomod@divisor+3)^(0+128),w
  6505  0776  0424               	iorwf	(___aomod@divisor+4)^(0+128),w
  6506  0777  0425               	iorwf	(___aomod@divisor+5)^(0+128),w
  6507  0778  0426               	iorwf	(___aomod@divisor+6)^(0+128),w
  6508  0779  0427               	iorwf	(___aomod@divisor+7)^(0+128),w
  6509  077A  1903               	skipnz
  6510  077B  2FC9               	goto	l2392
  6511  077C  01B1               	clrf	___aomod@counter^(0+128)
  6512  077D  0AB1               	incf	___aomod@counter^(0+128),f
  6513  077E                     l2384:	
  6514  077E  1BA7               	btfsc	(___aomod@divisor+7)^(0+128),7
  6515  077F  2F8D               	goto	l2386
  6516  0780  35A0               	lslf	___aomod@divisor^(0+128),f
  6517  0781  0DA1               	rlf	(___aomod@divisor+1)^(0+128),f
  6518  0782  0DA2               	rlf	(___aomod@divisor+2)^(0+128),f
  6519  0783  0DA3               	rlf	(___aomod@divisor+3)^(0+128),f
  6520  0784  0DA4               	rlf	(___aomod@divisor+4)^(0+128),f
  6521  0785  0DA5               	rlf	(___aomod@divisor+5)^(0+128),f
  6522  0786  0DA6               	rlf	(___aomod@divisor+6)^(0+128),f
  6523  0787  0DA7               	rlf	(___aomod@divisor+7)^(0+128),f
  6524  0788  3001               	movlw	1
  6525  0789  00B0               	movwf	??___aomod^(0+128)
  6526  078A  0830               	movf	??___aomod^(0+128),w
  6527  078B  07B1               	addwf	___aomod@counter^(0+128),f
  6528  078C  2F7E               	goto	l2384
  6529  078D                     l2386:	
  6530  078D  0827               	movf	(___aomod@divisor+7)^(0+128),w
  6531  078E  022F               	subwf	(___aomod@dividend+7)^(0+128),w
  6532  078F  1D03               	skipz
  6533  0790  2FAB               	goto	u2515
  6534  0791  0826               	movf	(___aomod@divisor+6)^(0+128),w
  6535  0792  022E               	subwf	(___aomod@dividend+6)^(0+128),w
  6536  0793  1D03               	skipz
  6537  0794  2FAB               	goto	u2515
  6538  0795  0825               	movf	(___aomod@divisor+5)^(0+128),w
  6539  0796  022D               	subwf	(___aomod@dividend+5)^(0+128),w
  6540  0797  1D03               	skipz
  6541  0798  2FAB               	goto	u2515
  6542  0799  0824               	movf	(___aomod@divisor+4)^(0+128),w
  6543  079A  022C               	subwf	(___aomod@dividend+4)^(0+128),w
  6544  079B  1D03               	skipz
  6545  079C  2FAB               	goto	u2515
  6546  079D  0823               	movf	(___aomod@divisor+3)^(0+128),w
  6547  079E  022B               	subwf	(___aomod@dividend+3)^(0+128),w
  6548  079F  1D03               	skipz
  6549  07A0  2FAB               	goto	u2515
  6550  07A1  0822               	movf	(___aomod@divisor+2)^(0+128),w
  6551  07A2  022A               	subwf	(___aomod@dividend+2)^(0+128),w
  6552  07A3  1D03               	skipz
  6553  07A4  2FAB               	goto	u2515
  6554  07A5  0821               	movf	(___aomod@divisor+1)^(0+128),w
  6555  07A6  0229               	subwf	(___aomod@dividend+1)^(0+128),w
  6556  07A7  1D03               	skipz
  6557  07A8  2FAB               	goto	u2515
  6558  07A9  0820               	movf	___aomod@divisor^(0+128),w
  6559  07AA  0228               	subwf	___aomod@dividend^(0+128),w
  6560  07AB                     u2515:	
  6561  07AB  1C03               	skipc
  6562  07AC  2FBD               	goto	l2390
  6563  07AD  0820               	movf	___aomod@divisor^(0+128),w
  6564  07AE  02A8               	subwf	___aomod@dividend^(0+128),f
  6565  07AF  0821               	movf	(___aomod@divisor+1)^(0+128),w
  6566  07B0  3BA9               	subwfb	(___aomod@dividend+1)^(0+128),f
  6567  07B1  0822               	movf	(___aomod@divisor+2)^(0+128),w
  6568  07B2  3BAA               	subwfb	(___aomod@dividend+2)^(0+128),f
  6569  07B3  0823               	movf	(___aomod@divisor+3)^(0+128),w
  6570  07B4  3BAB               	subwfb	(___aomod@dividend+3)^(0+128),f
  6571  07B5  0824               	movf	(___aomod@divisor+4)^(0+128),w
  6572  07B6  3BAC               	subwfb	(___aomod@dividend+4)^(0+128),f
  6573  07B7  0825               	movf	(___aomod@divisor+5)^(0+128),w
  6574  07B8  3BAD               	subwfb	(___aomod@dividend+5)^(0+128),f
  6575  07B9  0826               	movf	(___aomod@divisor+6)^(0+128),w
  6576  07BA  3BAE               	subwfb	(___aomod@dividend+6)^(0+128),f
  6577  07BB  0827               	movf	(___aomod@divisor+7)^(0+128),w
  6578  07BC  3BAF               	subwfb	(___aomod@dividend+7)^(0+128),f
  6579  07BD                     l2390:	
  6580  07BD  36A7               	lsrf	(___aomod@divisor+7)^(0+128),f
  6581  07BE  0CA6               	rrf	(___aomod@divisor+6)^(0+128),f
  6582  07BF  0CA5               	rrf	(___aomod@divisor+5)^(0+128),f
  6583  07C0  0CA4               	rrf	(___aomod@divisor+4)^(0+128),f
  6584  07C1  0CA3               	rrf	(___aomod@divisor+3)^(0+128),f
  6585  07C2  0CA2               	rrf	(___aomod@divisor+2)^(0+128),f
  6586  07C3  0CA1               	rrf	(___aomod@divisor+1)^(0+128),f
  6587  07C4  0CA0               	rrf	___aomod@divisor^(0+128),f
  6588  07C5  3001               	movlw	1
  6589  07C6  02B1               	subwf	___aomod@counter^(0+128),f
  6590  07C7  1D03               	btfss	3,2
  6591  07C8  2F8D               	goto	l2386
  6592  07C9                     l2392:	
  6593  07C9  0832               	movf	___aomod@sign^(0+128),w
  6594  07CA  1903               	btfsc	3,2
  6595  07CB  2FEA               	goto	l614
  6596  07CC  09A8               	comf	___aomod@dividend^(0+128),f
  6597  07CD  09A9               	comf	(___aomod@dividend+1)^(0+128),f
  6598  07CE  09AA               	comf	(___aomod@dividend+2)^(0+128),f
  6599  07CF  09AB               	comf	(___aomod@dividend+3)^(0+128),f
  6600  07D0  09AC               	comf	(___aomod@dividend+4)^(0+128),f
  6601  07D1  09AD               	comf	(___aomod@dividend+5)^(0+128),f
  6602  07D2  09AE               	comf	(___aomod@dividend+6)^(0+128),f
  6603  07D3  09AF               	comf	(___aomod@dividend+7)^(0+128),f
  6604  07D4  0AA8               	incf	___aomod@dividend^(0+128),f
  6605  07D5  1D03               	skipz
  6606  07D6  2FEA               	goto	l614
  6607  07D7  0AA9               	incf	(___aomod@dividend+1)^(0+128),f
  6608  07D8  1D03               	skipz
  6609  07D9  2FEA               	goto	l614
  6610  07DA  0AAA               	incf	(___aomod@dividend+2)^(0+128),f
  6611  07DB  1D03               	skipz
  6612  07DC  2FEA               	goto	l614
  6613  07DD  0AAB               	incf	(___aomod@dividend+3)^(0+128),f
  6614  07DE  1D03               	skipz
  6615  07DF  2FEA               	goto	l614
  6616  07E0  0AAC               	incf	(___aomod@dividend+4)^(0+128),f
  6617  07E1  1D03               	skipz
  6618  07E2  2FEA               	goto	l614
  6619  07E3  0AAD               	incf	(___aomod@dividend+5)^(0+128),f
  6620  07E4  1D03               	skipz
  6621  07E5  2FEA               	goto	l614
  6622  07E6  0AAE               	incf	(___aomod@dividend+6)^(0+128),f
  6623  07E7  1D03               	skipz
  6624  07E8  2FEA               	goto	l614
  6625  07E9  0AAF               	incf	(___aomod@dividend+7)^(0+128),f
  6626  07EA                     l614:	
  6627  07EA  0021               	movlb	1	; select bank1
  6628  07EB  0828               	movf	___aomod@dividend^(0+128),w
  6629  07EC  00A0               	movwf	?___aomod^(0+128)
  6630  07ED  0829               	movf	(___aomod@dividend+1)^(0+128),w
  6631  07EE  00A1               	movwf	(?___aomod+1)^(0+128)
  6632  07EF  082A               	movf	(___aomod@dividend+2)^(0+128),w
  6633  07F0  00A2               	movwf	(?___aomod+2)^(0+128)
  6634  07F1  082B               	movf	(___aomod@dividend+3)^(0+128),w
  6635  07F2  00A3               	movwf	(?___aomod+3)^(0+128)
  6636  07F3  082C               	movf	(___aomod@dividend+4)^(0+128),w
  6637  07F4  00A4               	movwf	(?___aomod+4)^(0+128)
  6638  07F5  082D               	movf	(___aomod@dividend+5)^(0+128),w
  6639  07F6  00A5               	movwf	(?___aomod+5)^(0+128)
  6640  07F7  082E               	movf	(___aomod@dividend+6)^(0+128),w
  6641  07F8  00A6               	movwf	(?___aomod+6)^(0+128)
  6642  07F9  082F               	movf	(___aomod@dividend+7)^(0+128),w
  6643  07FA  00A7               	movwf	(?___aomod+7)^(0+128)
  6644  07FB  0008               	return
  6645  07FC                     __end_of___aomod:	
  6646                           
  6647                           	psect	text18
  6648  0F09                     __ptext18:	
  6649 ;; *************** function ___aodiv *****************
  6650 ;; Defined at:
  6651 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  6652 ;; Parameters:    Size  Location     Type
  6653 ;;  divisor         8    0[BANK1 ] long long 
  6654 ;;  dividend        8    8[BANK1 ] long long 
  6655 ;; Auto vars:     Size  Location     Type
  6656 ;;  quotient        8   19[BANK1 ] long long 
  6657 ;;  sign            1   18[BANK1 ] unsigned char 
  6658 ;;  counter         1   17[BANK1 ] unsigned char 
  6659 ;; Return value:  Size  Location     Type
  6660 ;;                  8    0[BANK1 ] long long 
  6661 ;; Registers used:
  6662 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6663 ;; Tracked objects:
  6664 ;;		On entry : 0/0
  6665 ;;		On exit  : 0/0
  6666 ;;		Unchanged: 0/0
  6667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6668 ;;      Params:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  6669 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  6670 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6671 ;;      Totals:         0       0      27       0       0       0       0       0       0       0       0       0       
      +0       0
  6672 ;;Total ram usage:       27 bytes
  6673 ;; Hardware stack levels used:    1
  6674 ;; Hardware stack levels required when called:    6
  6675 ;; This function calls:
  6676 ;;		Nothing
  6677 ;; This function is called by:
  6678 ;;		_dtoa
  6679 ;; This function uses a non-reentrant model
  6680 ;;
  6681                           
  6682                           
  6683                           ;psect for function ___aodiv
  6684  0F09                     ___aodiv:	
  6685                           
  6686                           ;incstack = 0
  6687                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  6688  0F09  0021               	movlb	1	; select bank1
  6689  0F0A  01B2               	clrf	___aodiv@sign^(0+128)
  6690  0F0B  30A0               	movlw	low ___aodiv@divisor
  6691  0F0C  0086               	movwf	6
  6692  0F0D  3000               	movlw	high ___aodiv@divisor
  6693  0F0E  0087               	movwf	7
  6694  0F0F  3F47               	moviw [7]fsr1
  6695  0F10  00B0               	movwf	??___aodiv^(0+128)
  6696  0F11  1FB0               	btfss	??___aodiv^(0+128),7
  6697  0F12  2F35               	goto	l2334
  6698  0F13  0021               	movlb	1	; select bank1
  6699  0F14  09A0               	comf	___aodiv@divisor^(0+128),f
  6700  0F15  09A1               	comf	(___aodiv@divisor+1)^(0+128),f
  6701  0F16  09A2               	comf	(___aodiv@divisor+2)^(0+128),f
  6702  0F17  09A3               	comf	(___aodiv@divisor+3)^(0+128),f
  6703  0F18  09A4               	comf	(___aodiv@divisor+4)^(0+128),f
  6704  0F19  09A5               	comf	(___aodiv@divisor+5)^(0+128),f
  6705  0F1A  09A6               	comf	(___aodiv@divisor+6)^(0+128),f
  6706  0F1B  09A7               	comf	(___aodiv@divisor+7)^(0+128),f
  6707  0F1C  0AA0               	incf	___aodiv@divisor^(0+128),f
  6708  0F1D  1D03               	skipz
  6709  0F1E  2F32               	goto	u235lld
  6710  0F1F  0AA1               	incf	(___aodiv@divisor+1)^(0+128),f
  6711  0F20  1D03               	skipz
  6712  0F21  2F32               	goto	u235lld
  6713  0F22  0AA2               	incf	(___aodiv@divisor+2)^(0+128),f
  6714  0F23  1D03               	skipz
  6715  0F24  2F32               	goto	u235lld
  6716  0F25  0AA3               	incf	(___aodiv@divisor+3)^(0+128),f
  6717  0F26  1D03               	skipz
  6718  0F27  2F32               	goto	u235lld
  6719  0F28  0AA4               	incf	(___aodiv@divisor+4)^(0+128),f
  6720  0F29  1D03               	skipz
  6721  0F2A  2F32               	goto	u235lld
  6722  0F2B  0AA5               	incf	(___aodiv@divisor+5)^(0+128),f
  6723  0F2C  1D03               	skipz
  6724  0F2D  2F32               	goto	u235lld
  6725  0F2E  0AA6               	incf	(___aodiv@divisor+6)^(0+128),f
  6726  0F2F  1D03               	skipz
  6727  0F30  2F32               	goto	u235lld
  6728  0F31  0AA7               	incf	(___aodiv@divisor+7)^(0+128),f
  6729  0F32                     u235lld:	
  6730  0F32  0021               	movlb	1	; select bank1
  6731  0F33  01B2               	clrf	___aodiv@sign^(0+128)
  6732  0F34  0AB2               	incf	___aodiv@sign^(0+128),f
  6733  0F35                     l2334:	
  6734  0F35  30A8               	movlw	low ___aodiv@dividend
  6735  0F36  0086               	movwf	6
  6736  0F37  3000               	movlw	high ___aodiv@dividend
  6737  0F38  0087               	movwf	7
  6738  0F39  3F47               	moviw [7]fsr1
  6739  0F3A  0021               	movlb	1	; select bank1
  6740  0F3B  00B0               	movwf	??___aodiv^(0+128)
  6741  0F3C  1FB0               	btfss	??___aodiv^(0+128),7
  6742  0F3D  2F62               	goto	l2340
  6743  0F3E  0021               	movlb	1	; select bank1
  6744  0F3F  09A8               	comf	___aodiv@dividend^(0+128),f
  6745  0F40  09A9               	comf	(___aodiv@dividend+1)^(0+128),f
  6746  0F41  09AA               	comf	(___aodiv@dividend+2)^(0+128),f
  6747  0F42  09AB               	comf	(___aodiv@dividend+3)^(0+128),f
  6748  0F43  09AC               	comf	(___aodiv@dividend+4)^(0+128),f
  6749  0F44  09AD               	comf	(___aodiv@dividend+5)^(0+128),f
  6750  0F45  09AE               	comf	(___aodiv@dividend+6)^(0+128),f
  6751  0F46  09AF               	comf	(___aodiv@dividend+7)^(0+128),f
  6752  0F47  0AA8               	incf	___aodiv@dividend^(0+128),f
  6753  0F48  1D03               	skipz
  6754  0F49  2F5D               	goto	l2338
  6755  0F4A  0AA9               	incf	(___aodiv@dividend+1)^(0+128),f
  6756  0F4B  1D03               	skipz
  6757  0F4C  2F5D               	goto	l2338
  6758  0F4D  0AAA               	incf	(___aodiv@dividend+2)^(0+128),f
  6759  0F4E  1D03               	skipz
  6760  0F4F  2F5D               	goto	l2338
  6761  0F50  0AAB               	incf	(___aodiv@dividend+3)^(0+128),f
  6762  0F51  1D03               	skipz
  6763  0F52  2F5D               	goto	l2338
  6764  0F53  0AAC               	incf	(___aodiv@dividend+4)^(0+128),f
  6765  0F54  1D03               	skipz
  6766  0F55  2F5D               	goto	l2338
  6767  0F56  0AAD               	incf	(___aodiv@dividend+5)^(0+128),f
  6768  0F57  1D03               	skipz
  6769  0F58  2F5D               	goto	l2338
  6770  0F59  0AAE               	incf	(___aodiv@dividend+6)^(0+128),f
  6771  0F5A  1D03               	skipz
  6772  0F5B  2F5D               	goto	l2338
  6773  0F5C  0AAF               	incf	(___aodiv@dividend+7)^(0+128),f
  6774  0F5D                     l2338:	
  6775  0F5D  3001               	movlw	1
  6776  0F5E  0021               	movlb	1	; select bank1
  6777  0F5F  00B0               	movwf	??___aodiv^(0+128)
  6778  0F60  0830               	movf	??___aodiv^(0+128),w
  6779  0F61  06B2               	xorwf	___aodiv@sign^(0+128),f
  6780  0F62                     l2340:	
  6781  0F62  30B3               	movlw	low ___aodiv@quotient
  6782  0F63  0086               	movwf	6
  6783  0F64  3000               	movlw	high ___aodiv@quotient
  6784  0F65  0087               	movwf	7
  6785  0F66  3008               	movlw	8
  6786  0F67  0021               	movlb	1	; select bank1
  6787  0F68  00B0               	movwf	??___aodiv^(0+128)
  6788  0F69  3000               	movlw	0
  6789  0F6A                     u2380:	
  6790  0F6A  001E               	movwi fsr1++
  6791  0F6B  0BB0               	decfsz	??___aodiv^(0+128),f
  6792  0F6C  2F6A               	goto	u2380
  6793  0F6D  0820               	movf	___aodiv@divisor^(0+128),w
  6794  0F6E  0421               	iorwf	(___aodiv@divisor+1)^(0+128),w
  6795  0F6F  0422               	iorwf	(___aodiv@divisor+2)^(0+128),w
  6796  0F70  0423               	iorwf	(___aodiv@divisor+3)^(0+128),w
  6797  0F71  0424               	iorwf	(___aodiv@divisor+4)^(0+128),w
  6798  0F72  0425               	iorwf	(___aodiv@divisor+5)^(0+128),w
  6799  0F73  0426               	iorwf	(___aodiv@divisor+6)^(0+128),w
  6800  0F74  0427               	iorwf	(___aodiv@divisor+7)^(0+128),w
  6801  0F75  1903               	skipnz
  6802  0F76  2FCD               	goto	l2362
  6803  0F77  01B1               	clrf	___aodiv@counter^(0+128)
  6804  0F78  0AB1               	incf	___aodiv@counter^(0+128),f
  6805  0F79                     l2350:	
  6806  0F79  1BA7               	btfsc	(___aodiv@divisor+7)^(0+128),7
  6807  0F7A  2F88               	goto	l2352
  6808  0F7B  35A0               	lslf	___aodiv@divisor^(0+128),f
  6809  0F7C  0DA1               	rlf	(___aodiv@divisor+1)^(0+128),f
  6810  0F7D  0DA2               	rlf	(___aodiv@divisor+2)^(0+128),f
  6811  0F7E  0DA3               	rlf	(___aodiv@divisor+3)^(0+128),f
  6812  0F7F  0DA4               	rlf	(___aodiv@divisor+4)^(0+128),f
  6813  0F80  0DA5               	rlf	(___aodiv@divisor+5)^(0+128),f
  6814  0F81  0DA6               	rlf	(___aodiv@divisor+6)^(0+128),f
  6815  0F82  0DA7               	rlf	(___aodiv@divisor+7)^(0+128),f
  6816  0F83  3001               	movlw	1
  6817  0F84  00B0               	movwf	??___aodiv^(0+128)
  6818  0F85  0830               	movf	??___aodiv^(0+128),w
  6819  0F86  07B1               	addwf	___aodiv@counter^(0+128),f
  6820  0F87  2F79               	goto	l2350
  6821  0F88                     l2352:	
  6822  0F88  35B3               	lslf	___aodiv@quotient^(0+128),f
  6823  0F89  0DB4               	rlf	(___aodiv@quotient+1)^(0+128),f
  6824  0F8A  0DB5               	rlf	(___aodiv@quotient+2)^(0+128),f
  6825  0F8B  0DB6               	rlf	(___aodiv@quotient+3)^(0+128),f
  6826  0F8C  0DB7               	rlf	(___aodiv@quotient+4)^(0+128),f
  6827  0F8D  0DB8               	rlf	(___aodiv@quotient+5)^(0+128),f
  6828  0F8E  0DB9               	rlf	(___aodiv@quotient+6)^(0+128),f
  6829  0F8F  0DBA               	rlf	(___aodiv@quotient+7)^(0+128),f
  6830  0F90  0827               	movf	(___aodiv@divisor+7)^(0+128),w
  6831  0F91  022F               	subwf	(___aodiv@dividend+7)^(0+128),w
  6832  0F92  1D03               	skipz
  6833  0F93  2FAE               	goto	u2415
  6834  0F94  0826               	movf	(___aodiv@divisor+6)^(0+128),w
  6835  0F95  022E               	subwf	(___aodiv@dividend+6)^(0+128),w
  6836  0F96  1D03               	skipz
  6837  0F97  2FAE               	goto	u2415
  6838  0F98  0825               	movf	(___aodiv@divisor+5)^(0+128),w
  6839  0F99  022D               	subwf	(___aodiv@dividend+5)^(0+128),w
  6840  0F9A  1D03               	skipz
  6841  0F9B  2FAE               	goto	u2415
  6842  0F9C  0824               	movf	(___aodiv@divisor+4)^(0+128),w
  6843  0F9D  022C               	subwf	(___aodiv@dividend+4)^(0+128),w
  6844  0F9E  1D03               	skipz
  6845  0F9F  2FAE               	goto	u2415
  6846  0FA0  0823               	movf	(___aodiv@divisor+3)^(0+128),w
  6847  0FA1  022B               	subwf	(___aodiv@dividend+3)^(0+128),w
  6848  0FA2  1D03               	skipz
  6849  0FA3  2FAE               	goto	u2415
  6850  0FA4  0822               	movf	(___aodiv@divisor+2)^(0+128),w
  6851  0FA5  022A               	subwf	(___aodiv@dividend+2)^(0+128),w
  6852  0FA6  1D03               	skipz
  6853  0FA7  2FAE               	goto	u2415
  6854  0FA8  0821               	movf	(___aodiv@divisor+1)^(0+128),w
  6855  0FA9  0229               	subwf	(___aodiv@dividend+1)^(0+128),w
  6856  0FAA  1D03               	skipz
  6857  0FAB  2FAE               	goto	u2415
  6858  0FAC  0820               	movf	___aodiv@divisor^(0+128),w
  6859  0FAD  0228               	subwf	___aodiv@dividend^(0+128),w
  6860  0FAE                     u2415:	
  6861  0FAE  1C03               	skipc
  6862  0FAF  2FC1               	goto	l2360
  6863  0FB0  0820               	movf	___aodiv@divisor^(0+128),w
  6864  0FB1  02A8               	subwf	___aodiv@dividend^(0+128),f
  6865  0FB2  0821               	movf	(___aodiv@divisor+1)^(0+128),w
  6866  0FB3  3BA9               	subwfb	(___aodiv@dividend+1)^(0+128),f
  6867  0FB4  0822               	movf	(___aodiv@divisor+2)^(0+128),w
  6868  0FB5  3BAA               	subwfb	(___aodiv@dividend+2)^(0+128),f
  6869  0FB6  0823               	movf	(___aodiv@divisor+3)^(0+128),w
  6870  0FB7  3BAB               	subwfb	(___aodiv@dividend+3)^(0+128),f
  6871  0FB8  0824               	movf	(___aodiv@divisor+4)^(0+128),w
  6872  0FB9  3BAC               	subwfb	(___aodiv@dividend+4)^(0+128),f
  6873  0FBA  0825               	movf	(___aodiv@divisor+5)^(0+128),w
  6874  0FBB  3BAD               	subwfb	(___aodiv@dividend+5)^(0+128),f
  6875  0FBC  0826               	movf	(___aodiv@divisor+6)^(0+128),w
  6876  0FBD  3BAE               	subwfb	(___aodiv@dividend+6)^(0+128),f
  6877  0FBE  0827               	movf	(___aodiv@divisor+7)^(0+128),w
  6878  0FBF  3BAF               	subwfb	(___aodiv@dividend+7)^(0+128),f
  6879  0FC0  1433               	bsf	___aodiv@quotient^(0+128),0
  6880  0FC1                     l2360:	
  6881  0FC1  36A7               	lsrf	(___aodiv@divisor+7)^(0+128),f
  6882  0FC2  0CA6               	rrf	(___aodiv@divisor+6)^(0+128),f
  6883  0FC3  0CA5               	rrf	(___aodiv@divisor+5)^(0+128),f
  6884  0FC4  0CA4               	rrf	(___aodiv@divisor+4)^(0+128),f
  6885  0FC5  0CA3               	rrf	(___aodiv@divisor+3)^(0+128),f
  6886  0FC6  0CA2               	rrf	(___aodiv@divisor+2)^(0+128),f
  6887  0FC7  0CA1               	rrf	(___aodiv@divisor+1)^(0+128),f
  6888  0FC8  0CA0               	rrf	___aodiv@divisor^(0+128),f
  6889  0FC9  3001               	movlw	1
  6890  0FCA  02B1               	subwf	___aodiv@counter^(0+128),f
  6891  0FCB  1D03               	btfss	3,2
  6892  0FCC  2F88               	goto	l2352
  6893  0FCD                     l2362:	
  6894  0FCD  0832               	movf	___aodiv@sign^(0+128),w
  6895  0FCE  1903               	btfsc	3,2
  6896  0FCF  2FEE               	goto	l601
  6897  0FD0  09B3               	comf	___aodiv@quotient^(0+128),f
  6898  0FD1  09B4               	comf	(___aodiv@quotient+1)^(0+128),f
  6899  0FD2  09B5               	comf	(___aodiv@quotient+2)^(0+128),f
  6900  0FD3  09B6               	comf	(___aodiv@quotient+3)^(0+128),f
  6901  0FD4  09B7               	comf	(___aodiv@quotient+4)^(0+128),f
  6902  0FD5  09B8               	comf	(___aodiv@quotient+5)^(0+128),f
  6903  0FD6  09B9               	comf	(___aodiv@quotient+6)^(0+128),f
  6904  0FD7  09BA               	comf	(___aodiv@quotient+7)^(0+128),f
  6905  0FD8  0AB3               	incf	___aodiv@quotient^(0+128),f
  6906  0FD9  1D03               	skipz
  6907  0FDA  2FEE               	goto	l601
  6908  0FDB  0AB4               	incf	(___aodiv@quotient+1)^(0+128),f
  6909  0FDC  1D03               	skipz
  6910  0FDD  2FEE               	goto	l601
  6911  0FDE  0AB5               	incf	(___aodiv@quotient+2)^(0+128),f
  6912  0FDF  1D03               	skipz
  6913  0FE0  2FEE               	goto	l601
  6914  0FE1  0AB6               	incf	(___aodiv@quotient+3)^(0+128),f
  6915  0FE2  1D03               	skipz
  6916  0FE3  2FEE               	goto	l601
  6917  0FE4  0AB7               	incf	(___aodiv@quotient+4)^(0+128),f
  6918  0FE5  1D03               	skipz
  6919  0FE6  2FEE               	goto	l601
  6920  0FE7  0AB8               	incf	(___aodiv@quotient+5)^(0+128),f
  6921  0FE8  1D03               	skipz
  6922  0FE9  2FEE               	goto	l601
  6923  0FEA  0AB9               	incf	(___aodiv@quotient+6)^(0+128),f
  6924  0FEB  1D03               	skipz
  6925  0FEC  2FEE               	goto	l601
  6926  0FED  0ABA               	incf	(___aodiv@quotient+7)^(0+128),f
  6927  0FEE                     l601:	
  6928  0FEE  0021               	movlb	1	; select bank1
  6929  0FEF  0833               	movf	___aodiv@quotient^(0+128),w
  6930  0FF0  00A0               	movwf	?___aodiv^(0+128)
  6931  0FF1  0834               	movf	(___aodiv@quotient+1)^(0+128),w
  6932  0FF2  00A1               	movwf	(?___aodiv+1)^(0+128)
  6933  0FF3  0835               	movf	(___aodiv@quotient+2)^(0+128),w
  6934  0FF4  00A2               	movwf	(?___aodiv+2)^(0+128)
  6935  0FF5  0836               	movf	(___aodiv@quotient+3)^(0+128),w
  6936  0FF6  00A3               	movwf	(?___aodiv+3)^(0+128)
  6937  0FF7  0837               	movf	(___aodiv@quotient+4)^(0+128),w
  6938  0FF8  00A4               	movwf	(?___aodiv+4)^(0+128)
  6939  0FF9  0838               	movf	(___aodiv@quotient+5)^(0+128),w
  6940  0FFA  00A5               	movwf	(?___aodiv+5)^(0+128)
  6941  0FFB  0839               	movf	(___aodiv@quotient+6)^(0+128),w
  6942  0FFC  00A6               	movwf	(?___aodiv+6)^(0+128)
  6943  0FFD  083A               	movf	(___aodiv@quotient+7)^(0+128),w
  6944  0FFE  00A7               	movwf	(?___aodiv+7)^(0+128)
  6945  0FFF  0008               	return
  6946  1000                     __end_of___aodiv:	
  6947                           
  6948                           	psect	text19
  6949  0B95                     __ptext19:	
  6950 ;; *************** function ___fltol *****************
  6951 ;; Defined at:
  6952 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
  6953 ;; Parameters:    Size  Location     Type
  6954 ;;  f1              4    0[BANK1 ] long long 
  6955 ;; Auto vars:     Size  Location     Type
  6956 ;;  exp1            1   10[BANK1 ] unsigned char 
  6957 ;;  sign1           1    9[BANK1 ] unsigned char 
  6958 ;; Return value:  Size  Location     Type
  6959 ;;                  4    0[BANK1 ] long 
  6960 ;; Registers used:
  6961 ;;		wreg, status,2, status,0
  6962 ;; Tracked objects:
  6963 ;;		On entry : 0/0
  6964 ;;		On exit  : 0/0
  6965 ;;		Unchanged: 0/0
  6966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6967 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  6968 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6969 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  6970 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0
  6971 ;;Total ram usage:       11 bytes
  6972 ;; Hardware stack levels used:    1
  6973 ;; Hardware stack levels required when called:    6
  6974 ;; This function calls:
  6975 ;;		Nothing
  6976 ;; This function is called by:
  6977 ;;		_main
  6978 ;; This function uses a non-reentrant model
  6979 ;;
  6980                           
  6981                           
  6982                           ;psect for function ___fltol
  6983  0B95                     ___fltol:	
  6984                           
  6985                           ;incstack = 0
  6986                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6987  0B95  1003               	clrc
  6988  0B96  0021               	movlb	1	; select bank1
  6989  0B97  0D22               	rlf	(___fltol@f1+2)^(0+128),w
  6990  0B98  0D23               	rlf	(___fltol@f1+3)^(0+128),w
  6991  0B99  00A4               	movwf	??___fltol^(0+128)
  6992  0B9A  0824               	movf	??___fltol^(0+128),w
  6993  0B9B  00AA               	movwf	___fltol@exp1^(0+128)
  6994  0B9C  082A               	movf	___fltol@exp1^(0+128),w
  6995  0B9D  1D03               	btfss	3,2
  6996  0B9E  2BA8               	goto	l3368
  6997  0B9F                     l3364:	
  6998  0B9F  3000               	movlw	0
  6999  0BA0  00A3               	movwf	(?___fltol+3)^(0+128)
  7000  0BA1  3000               	movlw	0
  7001  0BA2  00A2               	movwf	(?___fltol+2)^(0+128)
  7002  0BA3  3000               	movlw	0
  7003  0BA4  00A1               	movwf	(?___fltol+1)^(0+128)
  7004  0BA5  3000               	movlw	0
  7005  0BA6  00A0               	movwf	?___fltol^(0+128)
  7006  0BA7  0008               	return
  7007  0BA8                     l3368:	
  7008  0BA8  0820               	movf	___fltol@f1^(0+128),w
  7009  0BA9  00A4               	movwf	??___fltol^(0+128)
  7010  0BAA  0821               	movf	(___fltol@f1+1)^(0+128),w
  7011  0BAB  00A5               	movwf	(??___fltol^(0+128)+1)
  7012  0BAC  0822               	movf	(___fltol@f1+2)^(0+128),w
  7013  0BAD  00A6               	movwf	(??___fltol^(0+128)+2)
  7014  0BAE  0823               	movf	(___fltol@f1+3)^(0+128),w
  7015  0BAF  00A7               	movwf	(??___fltol^(0+128)+3)
  7016  0BB0  301F               	movlw	31
  7017  0BB1                     u4295:	
  7018  0BB1  36A7               	lsrf	(??___fltol^(0+128)+3),f
  7019  0BB2  0CA6               	rrf	(??___fltol^(0+128)+2),f
  7020  0BB3  0CA5               	rrf	(??___fltol^(0+128)+1),f
  7021  0BB4  0CA4               	rrf	??___fltol^(0+128),f
  7022  0BB5  0B89               	decfsz	9,f
  7023  0BB6  2BB1               	goto	u4295
  7024  0BB7  0824               	movf	??___fltol^(0+128),w
  7025  0BB8  00A8               	movwf	(??___fltol+4)^(0+128)
  7026  0BB9  0828               	movf	(??___fltol+4)^(0+128),w
  7027  0BBA  00A9               	movwf	___fltol@sign1^(0+128)
  7028  0BBB  17A2               	bsf	(___fltol@f1^(0+128)+2),7
  7029  0BBC  30FF               	movlw	255
  7030  0BBD  05A0               	andwf	___fltol@f1^(0+128),f
  7031  0BBE  30FF               	movlw	255
  7032  0BBF  05A1               	andwf	(___fltol@f1+1)^(0+128),f
  7033  0BC0  30FF               	movlw	255
  7034  0BC1  05A2               	andwf	(___fltol@f1+2)^(0+128),f
  7035  0BC2  3000               	movlw	0
  7036  0BC3  05A3               	andwf	(___fltol@f1+3)^(0+128),f
  7037  0BC4  3096               	movlw	150
  7038  0BC5  02AA               	subwf	___fltol@exp1^(0+128),f
  7039  0BC6  1FAA               	btfss	___fltol@exp1^(0+128),7
  7040  0BC7  2BDB               	goto	l3386
  7041  0BC8  082A               	movf	___fltol@exp1^(0+128),w
  7042  0BC9  3A80               	xorlw	128
  7043  0BCA  3E97               	addlw	151
  7044  0BCB  1C03               	btfss	3,0
  7045  0BCC  2B9F               	goto	l3364
  7046  0BCD                     l3384:	
  7047  0BCD  3001               	movlw	1
  7048  0BCE                     u4325:	
  7049  0BCE  36A3               	lsrf	(___fltol@f1+3)^(0+128),f
  7050  0BCF  0CA2               	rrf	(___fltol@f1+2)^(0+128),f
  7051  0BD0  0CA1               	rrf	(___fltol@f1+1)^(0+128),f
  7052  0BD1  0CA0               	rrf	___fltol@f1^(0+128),f
  7053  0BD2  0B89               	decfsz	9,f
  7054  0BD3  2BCE               	goto	u4325
  7055  0BD4  3001               	movlw	1
  7056  0BD5  00A4               	movwf	??___fltol^(0+128)
  7057  0BD6  0824               	movf	??___fltol^(0+128),w
  7058  0BD7  07AA               	addwf	___fltol@exp1^(0+128),f
  7059  0BD8  1903               	btfsc	3,2
  7060  0BD9  2BEC               	goto	l3394
  7061  0BDA  2BCD               	goto	l3384
  7062  0BDB                     l3386:	
  7063  0BDB  3020               	movlw	32
  7064  0BDC  022A               	subwf	___fltol@exp1^(0+128),w
  7065  0BDD  1803               	btfsc	3,0
  7066  0BDE  2B9F               	goto	l3364
  7067  0BDF                     l702:	
  7068  0BDF  082A               	movf	___fltol@exp1^(0+128),w
  7069  0BE0  1903               	btfsc	3,2
  7070  0BE1  2BEC               	goto	l3394
  7071  0BE2  3001               	movlw	1
  7072  0BE3                     u4355:	
  7073  0BE3  35A0               	lslf	___fltol@f1^(0+128),f
  7074  0BE4  0DA1               	rlf	(___fltol@f1+1)^(0+128),f
  7075  0BE5  0DA2               	rlf	(___fltol@f1+2)^(0+128),f
  7076  0BE6  0DA3               	rlf	(___fltol@f1+3)^(0+128),f
  7077  0BE7  0B89               	decfsz	9,f
  7078  0BE8  2BE3               	goto	u4355
  7079  0BE9  3001               	movlw	1
  7080  0BEA  02AA               	subwf	___fltol@exp1^(0+128),f
  7081  0BEB  2BDF               	goto	l702
  7082  0BEC                     l3394:	
  7083  0BEC  0829               	movf	___fltol@sign1^(0+128),w
  7084  0BED  1903               	btfsc	3,2
  7085  0BEE  0008               	return
  7086  0BEF  09A0               	comf	___fltol@f1^(0+128),f
  7087  0BF0  09A1               	comf	(___fltol@f1+1)^(0+128),f
  7088  0BF1  09A2               	comf	(___fltol@f1+2)^(0+128),f
  7089  0BF2  09A3               	comf	(___fltol@f1+3)^(0+128),f
  7090  0BF3  0AA0               	incf	___fltol@f1^(0+128),f
  7091  0BF4  1903               	skipnz
  7092  0BF5  0AA1               	incf	(___fltol@f1+1)^(0+128),f
  7093  0BF6  1903               	skipnz
  7094  0BF7  0AA2               	incf	(___fltol@f1+2)^(0+128),f
  7095  0BF8  1903               	skipnz
  7096  0BF9  0AA3               	incf	(___fltol@f1+3)^(0+128),f
  7097  0BFA  0008               	return
  7098  0BFB                     __end_of___fltol:	
  7099                           
  7100                           	psect	text20
  7101  0BFB                     __ptext20:	
  7102 ;; *************** function ___flge *****************
  7103 ;; Defined at:
  7104 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
  7105 ;; Parameters:    Size  Location     Type
  7106 ;;  ff1             4    0[BANK1 ] long 
  7107 ;;  ff2             4    4[BANK1 ] long 
  7108 ;; Auto vars:     Size  Location     Type
  7109 ;;		None
  7110 ;; Return value:  Size  Location     Type
  7111 ;;		None               void
  7112 ;; Registers used:
  7113 ;;		wreg, status,2, status,0
  7114 ;; Tracked objects:
  7115 ;;		On entry : 0/0
  7116 ;;		On exit  : 0/0
  7117 ;;		Unchanged: 0/0
  7118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7119 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  7120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7121 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  7122 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  7123 ;;Total ram usage:       12 bytes
  7124 ;; Hardware stack levels used:    1
  7125 ;; Hardware stack levels required when called:    6
  7126 ;; This function calls:
  7127 ;;		Nothing
  7128 ;; This function is called by:
  7129 ;;		_main
  7130 ;; This function uses a non-reentrant model
  7131 ;;
  7132                           
  7133                           
  7134                           ;psect for function ___flge
  7135  0BFB                     ___flge:	
  7136                           
  7137                           ;incstack = 0
  7138                           ; Regs used in ___flge: [wreg+status,2+status,0]
  7139  0BFB  3000               	movlw	0
  7140  0BFC  0021               	movlb	1	; select bank1
  7141  0BFD  0520               	andwf	___flge@ff1^(0+128),w
  7142  0BFE  00A8               	movwf	??___flge^(0+128)
  7143  0BFF  3000               	movlw	0
  7144  0C00  0521               	andwf	(___flge@ff1+1)^(0+128),w
  7145  0C01  00A9               	movwf	(??___flge^(0+128)+1)
  7146  0C02  3080               	movlw	128
  7147  0C03  0522               	andwf	(___flge@ff1+2)^(0+128),w
  7148  0C04  00AA               	movwf	(??___flge^(0+128)+2)
  7149  0C05  307F               	movlw	127
  7150  0C06  0523               	andwf	(___flge@ff1+3)^(0+128),w
  7151  0C07  00AB               	movwf	(??___flge^(0+128)+3)
  7152  0C08  082B               	movf	(??___flge+3)^(0+128),w
  7153  0C09  042A               	iorwf	(??___flge+2)^(0+128),w
  7154  0C0A  0429               	iorwf	(??___flge+1)^(0+128),w
  7155  0C0B  0428               	iorwf	??___flge^(0+128),w
  7156  0C0C  1D03               	skipz
  7157  0C0D  2C16               	goto	l679
  7158  0C0E  3000               	movlw	0
  7159  0C0F  00A3               	movwf	(___flge@ff1+3)^(0+128)
  7160  0C10  3000               	movlw	0
  7161  0C11  00A2               	movwf	(___flge@ff1+2)^(0+128)
  7162  0C12  3000               	movlw	0
  7163  0C13  00A1               	movwf	(___flge@ff1+1)^(0+128)
  7164  0C14  3000               	movlw	0
  7165  0C15  00A0               	movwf	___flge@ff1^(0+128)
  7166  0C16                     l679:	
  7167  0C16  3000               	movlw	0
  7168  0C17  0524               	andwf	___flge@ff2^(0+128),w
  7169  0C18  00A8               	movwf	??___flge^(0+128)
  7170  0C19  3000               	movlw	0
  7171  0C1A  0525               	andwf	(___flge@ff2+1)^(0+128),w
  7172  0C1B  00A9               	movwf	(??___flge^(0+128)+1)
  7173  0C1C  3080               	movlw	128
  7174  0C1D  0526               	andwf	(___flge@ff2+2)^(0+128),w
  7175  0C1E  00AA               	movwf	(??___flge^(0+128)+2)
  7176  0C1F  307F               	movlw	127
  7177  0C20  0527               	andwf	(___flge@ff2+3)^(0+128),w
  7178  0C21  00AB               	movwf	(??___flge^(0+128)+3)
  7179  0C22  082B               	movf	(??___flge+3)^(0+128),w
  7180  0C23  042A               	iorwf	(??___flge+2)^(0+128),w
  7181  0C24  0429               	iorwf	(??___flge+1)^(0+128),w
  7182  0C25  0428               	iorwf	??___flge^(0+128),w
  7183  0C26  1D03               	skipz
  7184  0C27  2C30               	goto	l3348
  7185  0C28  3000               	movlw	0
  7186  0C29  00A7               	movwf	(___flge@ff2+3)^(0+128)
  7187  0C2A  3000               	movlw	0
  7188  0C2B  00A6               	movwf	(___flge@ff2+2)^(0+128)
  7189  0C2C  3000               	movlw	0
  7190  0C2D  00A5               	movwf	(___flge@ff2+1)^(0+128)
  7191  0C2E  3000               	movlw	0
  7192  0C2F  00A4               	movwf	___flge@ff2^(0+128)
  7193  0C30                     l3348:	
  7194  0C30  1FA3               	btfss	(___flge@ff1+3)^(0+128),7
  7195  0C31  2C4A               	goto	l3352
  7196  0C32  3000               	movlw	0
  7197  0C33  00A8               	movwf	??___flge^(0+128)
  7198  0C34  3000               	movlw	0
  7199  0C35  00A9               	movwf	(??___flge^(0+128)+1)
  7200  0C36  3000               	movlw	0
  7201  0C37  00AA               	movwf	(??___flge^(0+128)+2)
  7202  0C38  3080               	movlw	128
  7203  0C39  00AB               	movwf	(??___flge^(0+128)+3)
  7204  0C3A  0820               	movf	___flge@ff1^(0+128),w
  7205  0C3B  02A8               	subwf	??___flge^(0+128),f
  7206  0C3C  0821               	movf	(___flge@ff1+1)^(0+128),w
  7207  0C3D  3BA9               	subwfb	(??___flge^(0+128)+1),f
  7208  0C3E  0822               	movf	(___flge@ff1+2)^(0+128),w
  7209  0C3F  3BAA               	subwfb	(??___flge^(0+128)+2),f
  7210  0C40  0823               	movf	(___flge@ff1+3)^(0+128),w
  7211  0C41  3BAB               	subwfb	(??___flge^(0+128)+3),f
  7212  0C42  082B               	movf	(??___flge+3)^(0+128),w
  7213  0C43  00A3               	movwf	(___flge@ff1+3)^(0+128)
  7214  0C44  082A               	movf	(??___flge+2)^(0+128),w
  7215  0C45  00A2               	movwf	(___flge@ff1+2)^(0+128)
  7216  0C46  0829               	movf	(??___flge+1)^(0+128),w
  7217  0C47  00A1               	movwf	(___flge@ff1+1)^(0+128)
  7218  0C48  0828               	movf	??___flge^(0+128),w
  7219  0C49  00A0               	movwf	___flge@ff1^(0+128)
  7220  0C4A                     l3352:	
  7221  0C4A  1FA7               	btfss	(___flge@ff2+3)^(0+128),7
  7222  0C4B  2C64               	goto	l682
  7223  0C4C  3000               	movlw	0
  7224  0C4D  00A8               	movwf	??___flge^(0+128)
  7225  0C4E  3000               	movlw	0
  7226  0C4F  00A9               	movwf	(??___flge^(0+128)+1)
  7227  0C50  3000               	movlw	0
  7228  0C51  00AA               	movwf	(??___flge^(0+128)+2)
  7229  0C52  3080               	movlw	128
  7230  0C53  00AB               	movwf	(??___flge^(0+128)+3)
  7231  0C54  0824               	movf	___flge@ff2^(0+128),w
  7232  0C55  02A8               	subwf	??___flge^(0+128),f
  7233  0C56  0825               	movf	(___flge@ff2+1)^(0+128),w
  7234  0C57  3BA9               	subwfb	(??___flge^(0+128)+1),f
  7235  0C58  0826               	movf	(___flge@ff2+2)^(0+128),w
  7236  0C59  3BAA               	subwfb	(??___flge^(0+128)+2),f
  7237  0C5A  0827               	movf	(___flge@ff2+3)^(0+128),w
  7238  0C5B  3BAB               	subwfb	(??___flge^(0+128)+3),f
  7239  0C5C  082B               	movf	(??___flge+3)^(0+128),w
  7240  0C5D  00A7               	movwf	(___flge@ff2+3)^(0+128)
  7241  0C5E  082A               	movf	(??___flge+2)^(0+128),w
  7242  0C5F  00A6               	movwf	(___flge@ff2+2)^(0+128)
  7243  0C60  0829               	movf	(??___flge+1)^(0+128),w
  7244  0C61  00A5               	movwf	(___flge@ff2+1)^(0+128)
  7245  0C62  0828               	movf	??___flge^(0+128),w
  7246  0C63  00A4               	movwf	___flge@ff2^(0+128)
  7247  0C64                     l682:	
  7248  0C64  3080               	movlw	128
  7249  0C65  06A3               	xorwf	(___flge@ff1+3)^(0+128),f
  7250  0C66  3080               	movlw	128
  7251  0C67  06A7               	xorwf	(___flge@ff2+3)^(0+128),f
  7252  0C68  0827               	movf	(___flge@ff2+3)^(0+128),w
  7253  0C69  0223               	subwf	(___flge@ff1+3)^(0+128),w
  7254  0C6A  1D03               	skipz
  7255  0C6B  0008               	return
  7256  0C6C  0826               	movf	(___flge@ff2+2)^(0+128),w
  7257  0C6D  0222               	subwf	(___flge@ff1+2)^(0+128),w
  7258  0C6E  1D03               	skipz
  7259  0C6F  0008               	return
  7260  0C70  0825               	movf	(___flge@ff2+1)^(0+128),w
  7261  0C71  0221               	subwf	(___flge@ff1+1)^(0+128),w
  7262  0C72  1D03               	skipz
  7263  0C73  0008               	return
  7264  0C74  0824               	movf	___flge@ff2^(0+128),w
  7265  0C75  0220               	subwf	___flge@ff1^(0+128),w
  7266  0C76  0008               	return
  7267  0C77                     __end_of___flge:	
  7268                           
  7269                           	psect	text21
  7270  17E7                     __ptext21:	
  7271 ;; *************** function _SYSTEM_Initialize *****************
  7272 ;; Defined at:
  7273 ;;		line 4 in file "mcc_generated_files/mcc.c"
  7274 ;; Parameters:    Size  Location     Type
  7275 ;;		None
  7276 ;; Auto vars:     Size  Location     Type
  7277 ;;		None
  7278 ;; Return value:  Size  Location     Type
  7279 ;;                  1    wreg      void 
  7280 ;; Registers used:
  7281 ;;		wreg, status,2, status,0, pclath, cstack
  7282 ;; Tracked objects:
  7283 ;;		On entry : 0/0
  7284 ;;		On exit  : 0/0
  7285 ;;		Unchanged: 0/0
  7286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7291 ;;Total ram usage:        0 bytes
  7292 ;; Hardware stack levels used:    1
  7293 ;; Hardware stack levels required when called:    8
  7294 ;; This function calls:
  7295 ;;		_EUSART_Initialize
  7296 ;;		_OSCILLATOR_Initialize
  7297 ;;		_PIN_MANAGER_Initialize
  7298 ;;		_TMR0_Initialize
  7299 ;; This function is called by:
  7300 ;;		_main
  7301 ;; This function uses a non-reentrant model
  7302 ;;
  7303                           
  7304                           
  7305                           ;psect for function _SYSTEM_Initialize
  7306  17E7                     _SYSTEM_Initialize:	
  7307                           
  7308                           ;mcc_generated_files/mcc.c: 6:     PIN_MANAGER_Initialize();
  7309                           
  7310                           ;incstack = 0
  7311                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7312  17E7  3189  2192  3197   	fcall	_PIN_MANAGER_Initialize
  7313                           
  7314                           ;mcc_generated_files/mcc.c: 7:     OSCILLATOR_Initialize();
  7315  17EA  3197  27A1  3197   	fcall	_OSCILLATOR_Initialize
  7316                           
  7317                           ;mcc_generated_files/mcc.c: 8:     TMR0_Initialize();
  7318  17ED  3188  2049  3197   	fcall	_TMR0_Initialize
  7319                           
  7320                           ;mcc_generated_files/mcc.c: 9:     EUSART_Initialize();
  7321  17F0  3189  2112         	fcall	_EUSART_Initialize
  7322  17F2  0008               	return
  7323  17F3                     __end_of_SYSTEM_Initialize:	
  7324                           
  7325                           	psect	text22
  7326  0849                     __ptext22:	
  7327 ;; *************** function _TMR0_Initialize *****************
  7328 ;; Defined at:
  7329 ;;		line 18 in file "mcc_generated_files/tmr0.c"
  7330 ;; Parameters:    Size  Location     Type
  7331 ;;		None
  7332 ;; Auto vars:     Size  Location     Type
  7333 ;;		None
  7334 ;; Return value:  Size  Location     Type
  7335 ;;                  1    wreg      void 
  7336 ;; Registers used:
  7337 ;;		wreg, status,2, status,0, pclath, cstack
  7338 ;; Tracked objects:
  7339 ;;		On entry : 0/0
  7340 ;;		On exit  : 0/0
  7341 ;;		Unchanged: 0/0
  7342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7345 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7346 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7347 ;;Total ram usage:        1 bytes
  7348 ;; Hardware stack levels used:    1
  7349 ;; Hardware stack levels required when called:    7
  7350 ;; This function calls:
  7351 ;;		_TMR0_SetInterruptHandler
  7352 ;; This function is called by:
  7353 ;;		_SYSTEM_Initialize
  7354 ;; This function uses a non-reentrant model
  7355 ;;
  7356                           
  7357                           
  7358                           ;psect for function _TMR0_Initialize
  7359  0849                     _TMR0_Initialize:	
  7360                           
  7361                           ;mcc_generated_files/tmr0.c: 23:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD4 
      +                          & 0x3F));
  7362                           
  7363                           ;incstack = 0
  7364                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7365  0849  0021               	movlb	1	; select bank1
  7366  084A  0815               	movf	21,w	;volatile
  7367  084B  39C0               	andlw	192
  7368  084C  3814               	iorlw	20
  7369  084D  0095               	movwf	21	;volatile
  7370                           
  7371                           ;mcc_generated_files/tmr0.c: 26:     TMR0 = 0x83;
  7372  084E  3083               	movlw	131
  7373  084F  0020               	movlb	0	; select bank0
  7374  0850  0095               	movwf	21	;volatile
  7375                           
  7376                           ;mcc_generated_files/tmr0.c: 29:     timer0ReloadVal= 131;
  7377  0851  3083               	movlw	131
  7378  0852  0021               	movlb	1	; select bank1
  7379  0853  00A2               	movwf	??_TMR0_Initialize^(0+128)
  7380  0854  0822               	movf	??_TMR0_Initialize^(0+128),w
  7381  0855  0020               	movlb	0	; select bank0
  7382  0856  00EF               	movwf	_timer0ReloadVal	;volatile
  7383                           
  7384                           ;mcc_generated_files/tmr0.c: 32:     INTCONbits.TMR0IF = 0;
  7385  0857  110B               	bcf	11,2	;volatile
  7386                           
  7387                           ;mcc_generated_files/tmr0.c: 35:     INTCONbits.TMR0IE = 1;
  7388  0858  168B               	bsf	11,5	;volatile
  7389                           
  7390                           ;mcc_generated_files/tmr0.c: 38:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  7391  0859  30FC               	movlw	low _TMR0_DefaultInterruptHandler
  7392  085A  0021               	movlb	1	; select bank1
  7393  085B  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler^(0+128)
  7394  085C  3007               	movlw	high _TMR0_DefaultInterruptHandler
  7395  085D  00A1               	movwf	(TMR0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  7396  085E  3197  27D4         	fcall	_TMR0_SetInterruptHandler
  7397  0860  0008               	return
  7398  0861                     __end_of_TMR0_Initialize:	
  7399                           
  7400                           	psect	text23
  7401  17D4                     __ptext23:	
  7402 ;; *************** function _TMR0_SetInterruptHandler *****************
  7403 ;; Defined at:
  7404 ;;		line 79 in file "mcc_generated_files/tmr0.c"
  7405 ;; Parameters:    Size  Location     Type
  7406 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  7407 ;;		 -> timerISR(1), TMR0_DefaultInterruptHandler(1), 
  7408 ;; Auto vars:     Size  Location     Type
  7409 ;;		None
  7410 ;; Return value:  Size  Location     Type
  7411 ;;                  1    wreg      void 
  7412 ;; Registers used:
  7413 ;;		wreg
  7414 ;; Tracked objects:
  7415 ;;		On entry : 0/0
  7416 ;;		On exit  : 0/0
  7417 ;;		Unchanged: 0/0
  7418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7419 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7422 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7423 ;;Total ram usage:        2 bytes
  7424 ;; Hardware stack levels used:    1
  7425 ;; Hardware stack levels required when called:    6
  7426 ;; This function calls:
  7427 ;;		Nothing
  7428 ;; This function is called by:
  7429 ;;		_TMR0_Initialize
  7430 ;;		_main
  7431 ;; This function uses a non-reentrant model
  7432 ;;
  7433                           
  7434                           
  7435                           ;psect for function _TMR0_SetInterruptHandler
  7436  17D4                     _TMR0_SetInterruptHandler:	
  7437                           
  7438                           ;mcc_generated_files/tmr0.c: 80:     TMR0_InterruptHandler = InterruptHandler;
  7439                           
  7440                           ;incstack = 0
  7441                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  7442  17D4  0021               	movlb	1	; select bank1
  7443  17D5  0821               	movf	(TMR0_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  7444  17D6  0022               	movlb	2	; select bank2
  7445  17D7  00E7               	movwf	(_TMR0_InterruptHandler+1)^(0+256)
  7446  17D8  0021               	movlb	1	; select bank1
  7447  17D9  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler^(0+128),w
  7448  17DA  0022               	movlb	2	; select bank2
  7449  17DB  00E6               	movwf	_TMR0_InterruptHandler^(0+256)
  7450  17DC  0008               	return
  7451  17DD                     __end_of_TMR0_SetInterruptHandler:	
  7452                           
  7453                           	psect	text24
  7454  0992                     __ptext24:	
  7455 ;; *************** function _PIN_MANAGER_Initialize *****************
  7456 ;; Defined at:
  7457 ;;		line 6 in file "mcc_generated_files/pin_manager.c"
  7458 ;; Parameters:    Size  Location     Type
  7459 ;;		None
  7460 ;; Auto vars:     Size  Location     Type
  7461 ;;		None
  7462 ;; Return value:  Size  Location     Type
  7463 ;;                  1    wreg      void 
  7464 ;; Registers used:
  7465 ;;		wreg, status,2, status,0, pclath, cstack
  7466 ;; Tracked objects:
  7467 ;;		On entry : 0/0
  7468 ;;		On exit  : 0/0
  7469 ;;		Unchanged: 0/0
  7470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7474 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7475 ;;Total ram usage:        0 bytes
  7476 ;; Hardware stack levels used:    1
  7477 ;; Hardware stack levels required when called:    7
  7478 ;; This function calls:
  7479 ;;		_IOCCF7_SetInterruptHandler
  7480 ;; This function is called by:
  7481 ;;		_SYSTEM_Initialize
  7482 ;; This function uses a non-reentrant model
  7483 ;;
  7484                           
  7485                           
  7486                           ;psect for function _PIN_MANAGER_Initialize
  7487  0992                     _PIN_MANAGER_Initialize:	
  7488                           
  7489                           ;mcc_generated_files/pin_manager.c: 11:     LATA = 0x00;
  7490                           
  7491                           ;incstack = 0
  7492                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7493  0992  0022               	movlb	2	; select bank2
  7494  0993  018C               	clrf	12	;volatile
  7495                           
  7496                           ;mcc_generated_files/pin_manager.c: 12:     LATB = 0x00;
  7497  0994  018D               	clrf	13	;volatile
  7498                           
  7499                           ;mcc_generated_files/pin_manager.c: 13:     LATC = 0x00;
  7500  0995  018E               	clrf	14	;volatile
  7501                           
  7502                           ;mcc_generated_files/pin_manager.c: 18:     TRISA = 0x37;
  7503  0996  3037               	movlw	55
  7504  0997  0021               	movlb	1	; select bank1
  7505  0998  008C               	movwf	12	;volatile
  7506                           
  7507                           ;mcc_generated_files/pin_manager.c: 19:     TRISB = 0x70;
  7508  0999  3070               	movlw	112
  7509  099A  008D               	movwf	13	;volatile
  7510                           
  7511                           ;mcc_generated_files/pin_manager.c: 20:     TRISC = 0xFF;
  7512  099B  30FF               	movlw	255
  7513  099C  008E               	movwf	14	;volatile
  7514                           
  7515                           ;mcc_generated_files/pin_manager.c: 25:     ANSELC = 0x4F;
  7516  099D  304F               	movlw	79
  7517  099E  0023               	movlb	3	; select bank3
  7518  099F  008E               	movwf	14	;volatile
  7519                           
  7520                           ;mcc_generated_files/pin_manager.c: 26:     ANSELB = 0x70;
  7521  09A0  3070               	movlw	112
  7522  09A1  008D               	movwf	13	;volatile
  7523                           
  7524                           ;mcc_generated_files/pin_manager.c: 27:     ANSELA = 0x17;
  7525  09A2  3017               	movlw	23
  7526  09A3  008C               	movwf	12	;volatile
  7527                           
  7528                           ;mcc_generated_files/pin_manager.c: 32:     WPUB = 0x00;
  7529  09A4  0024               	movlb	4	; select bank4
  7530  09A5  018D               	clrf	13	;volatile
  7531                           
  7532                           ;mcc_generated_files/pin_manager.c: 33:     WPUA = 0x00;
  7533  09A6  018C               	clrf	12	;volatile
  7534                           
  7535                           ;mcc_generated_files/pin_manager.c: 34:     WPUC = 0x00;
  7536  09A7  018E               	clrf	14	;volatile
  7537                           
  7538                           ;mcc_generated_files/pin_manager.c: 35:     OPTION_REGbits.nWPUEN = 1;
  7539  09A8  0021               	movlb	1	; select bank1
  7540  09A9  1795               	bsf	21,7	;volatile
  7541                           
  7542                           ;mcc_generated_files/pin_manager.c: 40:     ODCONA = 0x00;
  7543  09AA  0025               	movlb	5	; select bank5
  7544  09AB  018C               	clrf	12	;volatile
  7545                           
  7546                           ;mcc_generated_files/pin_manager.c: 41:     ODCONB = 0x00;
  7547  09AC  018D               	clrf	13	;volatile
  7548                           
  7549                           ;mcc_generated_files/pin_manager.c: 42:     ODCONC = 0x00;
  7550  09AD  018E               	clrf	14	;volatile
  7551                           
  7552                           ;mcc_generated_files/pin_manager.c: 47:     SLRCONA = 0x37;
  7553  09AE  3037               	movlw	55
  7554  09AF  0026               	movlb	6	; select bank6
  7555  09B0  008C               	movwf	12	;volatile
  7556                           
  7557                           ;mcc_generated_files/pin_manager.c: 48:     SLRCONB = 0xF0;
  7558  09B1  30F0               	movlw	240
  7559  09B2  008D               	movwf	13	;volatile
  7560                           
  7561                           ;mcc_generated_files/pin_manager.c: 49:     SLRCONC = 0xFF;
  7562  09B3  30FF               	movlw	255
  7563  09B4  008E               	movwf	14	;volatile
  7564                           
  7565                           ;mcc_generated_files/pin_manager.c: 56:     IOCCFbits.IOCCF7 = 0;
  7566  09B5  0027               	movlb	7	; select bank7
  7567  09B6  1399               	bcf	25,7	;volatile
  7568                           
  7569                           ;mcc_generated_files/pin_manager.c: 58:     IOCCNbits.IOCCN7 = 0;
  7570  09B7  1398               	bcf	24,7	;volatile
  7571                           
  7572                           ;mcc_generated_files/pin_manager.c: 60:     IOCCPbits.IOCCP7 = 1;
  7573  09B8  1797               	bsf	23,7	;volatile
  7574                           
  7575                           ;mcc_generated_files/pin_manager.c: 65:     IOCCF7_SetInterruptHandler(IOCCF7_DefaultInt
      +                          erruptHandler);
  7576  09B9  30FD               	movlw	low _IOCCF7_DefaultInterruptHandler
  7577  09BA  0021               	movlb	1	; select bank1
  7578  09BB  00A0               	movwf	IOCCF7_SetInterruptHandler@InterruptHandler^(0+128)
  7579  09BC  3007               	movlw	high _IOCCF7_DefaultInterruptHandler
  7580  09BD  00A1               	movwf	(IOCCF7_SetInterruptHandler@InterruptHandler^(0+128)+1)
  7581  09BE  3197  27CB         	fcall	_IOCCF7_SetInterruptHandler
  7582                           
  7583                           ;mcc_generated_files/pin_manager.c: 68:     INTCONbits.IOCIE = 1;
  7584  09C0  158B               	bsf	11,3	;volatile
  7585                           
  7586                           ;mcc_generated_files/pin_manager.c: 71:     RB7PPS = 0x12;
  7587  09C1  3012               	movlw	18
  7588  09C2  003D               	movlb	29	; select bank29
  7589  09C3  009F               	movwf	31	;volatile
  7590  09C4  0008               	return
  7591  09C5                     __end_of_PIN_MANAGER_Initialize:	
  7592                           
  7593                           	psect	text25
  7594  17CB                     __ptext25:	
  7595 ;; *************** function _IOCCF7_SetInterruptHandler *****************
  7596 ;; Defined at:
  7597 ;;		line 101 in file "mcc_generated_files/pin_manager.c"
  7598 ;; Parameters:    Size  Location     Type
  7599 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  7600 ;;		 -> speedCalc(1), IOCCF7_DefaultInterruptHandler(1), 
  7601 ;; Auto vars:     Size  Location     Type
  7602 ;;		None
  7603 ;; Return value:  Size  Location     Type
  7604 ;;                  1    wreg      void 
  7605 ;; Registers used:
  7606 ;;		wreg
  7607 ;; Tracked objects:
  7608 ;;		On entry : 0/0
  7609 ;;		On exit  : 0/0
  7610 ;;		Unchanged: 0/0
  7611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7612 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7615 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7616 ;;Total ram usage:        2 bytes
  7617 ;; Hardware stack levels used:    1
  7618 ;; Hardware stack levels required when called:    6
  7619 ;; This function calls:
  7620 ;;		Nothing
  7621 ;; This function is called by:
  7622 ;;		_PIN_MANAGER_Initialize
  7623 ;;		_main
  7624 ;; This function uses a non-reentrant model
  7625 ;;
  7626                           
  7627                           
  7628                           ;psect for function _IOCCF7_SetInterruptHandler
  7629  17CB                     _IOCCF7_SetInterruptHandler:	
  7630                           
  7631                           ;mcc_generated_files/pin_manager.c: 102:     IOCCF7_InterruptHandler = InterruptHandler;
  7632                           
  7633                           ;incstack = 0
  7634                           ; Regs used in _IOCCF7_SetInterruptHandler: [wreg]
  7635  17CB  0021               	movlb	1	; select bank1
  7636  17CC  0821               	movf	(IOCCF7_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  7637  17CD  0020               	movlb	0	; select bank0
  7638  17CE  00EE               	movwf	_IOCCF7_InterruptHandler+1
  7639  17CF  0021               	movlb	1	; select bank1
  7640  17D0  0820               	movf	IOCCF7_SetInterruptHandler@InterruptHandler^(0+128),w
  7641  17D1  0020               	movlb	0	; select bank0
  7642  17D2  00ED               	movwf	_IOCCF7_InterruptHandler
  7643  17D3  0008               	return
  7644  17D4                     __end_of_IOCCF7_SetInterruptHandler:	
  7645                           
  7646                           	psect	text26
  7647  17A1                     __ptext26:	
  7648 ;; *************** function _OSCILLATOR_Initialize *****************
  7649 ;; Defined at:
  7650 ;;		line 12 in file "mcc_generated_files/mcc.c"
  7651 ;; Parameters:    Size  Location     Type
  7652 ;;		None
  7653 ;; Auto vars:     Size  Location     Type
  7654 ;;		None
  7655 ;; Return value:  Size  Location     Type
  7656 ;;                  1    wreg      void 
  7657 ;; Registers used:
  7658 ;;		wreg, status,2
  7659 ;; Tracked objects:
  7660 ;;		On entry : 0/0
  7661 ;;		On exit  : 0/0
  7662 ;;		Unchanged: 0/0
  7663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7668 ;;Total ram usage:        0 bytes
  7669 ;; Hardware stack levels used:    1
  7670 ;; Hardware stack levels required when called:    6
  7671 ;; This function calls:
  7672 ;;		Nothing
  7673 ;; This function is called by:
  7674 ;;		_SYSTEM_Initialize
  7675 ;; This function uses a non-reentrant model
  7676 ;;
  7677                           
  7678                           
  7679                           ;psect for function _OSCILLATOR_Initialize
  7680  17A1                     _OSCILLATOR_Initialize:	
  7681                           
  7682                           ;mcc_generated_files/mcc.c: 15:     OSCCON = 0x7A;
  7683                           
  7684                           ;incstack = 0
  7685                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  7686  17A1  307A               	movlw	122
  7687  17A2  0021               	movlb	1	; select bank1
  7688  17A3  0099               	movwf	25	;volatile
  7689                           
  7690                           ;mcc_generated_files/mcc.c: 17:     OSCTUNE = 0x00;
  7691  17A4  0198               	clrf	24	;volatile
  7692                           
  7693                           ;mcc_generated_files/mcc.c: 19:     BORCON = 0x00;
  7694  17A5  0022               	movlb	2	; select bank2
  7695  17A6  0196               	clrf	22	;volatile
  7696  17A7  0008               	return
  7697  17A8                     __end_of_OSCILLATOR_Initialize:	
  7698                           
  7699                           	psect	text27
  7700  0912                     __ptext27:	
  7701 ;; *************** function _EUSART_Initialize *****************
  7702 ;; Defined at:
  7703 ;;		line 65 in file "mcc_generated_files/eusart.c"
  7704 ;; Parameters:    Size  Location     Type
  7705 ;;		None
  7706 ;; Auto vars:     Size  Location     Type
  7707 ;;		None
  7708 ;; Return value:  Size  Location     Type
  7709 ;;                  1    wreg      void 
  7710 ;; Registers used:
  7711 ;;		wreg, status,2, status,0, pclath, cstack
  7712 ;; Tracked objects:
  7713 ;;		On entry : 0/0
  7714 ;;		On exit  : 0/0
  7715 ;;		Unchanged: 0/0
  7716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7720 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7721 ;;Total ram usage:        0 bytes
  7722 ;; Hardware stack levels used:    1
  7723 ;; Hardware stack levels required when called:    7
  7724 ;; This function calls:
  7725 ;;		_EUSART_SetErrorHandler
  7726 ;;		_EUSART_SetFramingErrorHandler
  7727 ;;		_EUSART_SetOverrunErrorHandler
  7728 ;; This function is called by:
  7729 ;;		_SYSTEM_Initialize
  7730 ;; This function uses a non-reentrant model
  7731 ;;
  7732                           
  7733                           
  7734                           ;psect for function _EUSART_Initialize
  7735  0912                     _EUSART_Initialize:	
  7736                           
  7737                           ;mcc_generated_files/eusart.c: 70:     BAUD1CON = 0x08;
  7738                           
  7739                           ;incstack = 0
  7740                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7741  0912  3008               	movlw	8
  7742  0913  0023               	movlb	3	; select bank3
  7743  0914  009F               	movwf	31	;volatile
  7744                           
  7745                           ;mcc_generated_files/eusart.c: 73:     RC1STA = 0x80;
  7746  0915  3080               	movlw	128
  7747  0916  009D               	movwf	29	;volatile
  7748                           
  7749                           ;mcc_generated_files/eusart.c: 76:     TX1STA = 0x24;
  7750  0917  3024               	movlw	36
  7751  0918  009E               	movwf	30	;volatile
  7752                           
  7753                           ;mcc_generated_files/eusart.c: 79:     SPBRGL = 0xA0;
  7754  0919  30A0               	movlw	160
  7755  091A  009B               	movwf	27	;volatile
  7756                           
  7757                           ;mcc_generated_files/eusart.c: 82:     SPBRGH = 0x01;
  7758  091B  3001               	movlw	1
  7759  091C  009C               	movwf	28	;volatile
  7760                           
  7761                           ;mcc_generated_files/eusart.c: 85:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  7762  091D  3000               	movlw	0
  7763  091E  0021               	movlb	1	; select bank1
  7764  091F  00A0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128)
  7765  0920  3000               	movlw	0
  7766  0921  00A1               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler^(0+128)+1)
  7767  0922  3197  27B9  3189   	fcall	_EUSART_SetFramingErrorHandler
  7768                           
  7769                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  7770  0925  3000               	movlw	0
  7771  0926  0021               	movlb	1	; select bank1
  7772  0927  00A0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)
  7773  0928  3000               	movlw	0
  7774  0929  00A1               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)+1)
  7775  092A  3197  27C2  3189   	fcall	_EUSART_SetOverrunErrorHandler
  7776                           
  7777                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  7778  092D  3000               	movlw	0
  7779  092E  0021               	movlb	1	; select bank1
  7780  092F  00A0               	movwf	EUSART_SetErrorHandler@interruptHandler^(0+128)
  7781  0930  3000               	movlw	0
  7782  0931  00A1               	movwf	(EUSART_SetErrorHandler@interruptHandler^(0+128)+1)
  7783  0932  3197  27B0         	fcall	_EUSART_SetErrorHandler
  7784                           
  7785                           ;mcc_generated_files/eusart.c: 89:     eusartRxLastError.status = 0;
  7786  0934  0020               	movlb	0	; select bank0
  7787  0935  01E8               	clrf	_eusartRxLastError	;volatile
  7788  0936  0008               	return
  7789  0937                     __end_of_EUSART_Initialize:	
  7790                           
  7791                           	psect	text28
  7792  17C2                     __ptext28:	
  7793 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  7794 ;; Defined at:
  7795 ;;		line 175 in file "mcc_generated_files/eusart.c"
  7796 ;; Parameters:    Size  Location     Type
  7797 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  7798 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  7799 ;; Auto vars:     Size  Location     Type
  7800 ;;		None
  7801 ;; Return value:  Size  Location     Type
  7802 ;;                  1    wreg      void 
  7803 ;; Registers used:
  7804 ;;		wreg
  7805 ;; Tracked objects:
  7806 ;;		On entry : 0/0
  7807 ;;		On exit  : 0/0
  7808 ;;		Unchanged: 0/0
  7809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7810 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7813 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7814 ;;Total ram usage:        2 bytes
  7815 ;; Hardware stack levels used:    1
  7816 ;; Hardware stack levels required when called:    6
  7817 ;; This function calls:
  7818 ;;		Nothing
  7819 ;; This function is called by:
  7820 ;;		_EUSART_Initialize
  7821 ;; This function uses a non-reentrant model
  7822 ;;
  7823                           
  7824                           
  7825                           ;psect for function _EUSART_SetOverrunErrorHandler
  7826  17C2                     _EUSART_SetOverrunErrorHandler:	
  7827                           
  7828                           ;mcc_generated_files/eusart.c: 176:     EUSART_OverrunErrorHandler = interruptHandler;
  7829                           
  7830                           ;incstack = 0
  7831                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  7832  17C2  0021               	movlb	1	; select bank1
  7833  17C3  0821               	movf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^(0+128),w
  7834  17C4  0022               	movlb	2	; select bank2
  7835  17C5  00EB               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+256)
  7836  17C6  0021               	movlb	1	; select bank1
  7837  17C7  0820               	movf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128),w
  7838  17C8  0022               	movlb	2	; select bank2
  7839  17C9  00EA               	movwf	_EUSART_OverrunErrorHandler^(0+256)
  7840  17CA  0008               	return
  7841  17CB                     __end_of_EUSART_SetOverrunErrorHandler:	
  7842                           
  7843                           	psect	text29
  7844  17B9                     __ptext29:	
  7845 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  7846 ;; Defined at:
  7847 ;;		line 171 in file "mcc_generated_files/eusart.c"
  7848 ;; Parameters:    Size  Location     Type
  7849 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  7850 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  7851 ;; Auto vars:     Size  Location     Type
  7852 ;;		None
  7853 ;; Return value:  Size  Location     Type
  7854 ;;                  1    wreg      void 
  7855 ;; Registers used:
  7856 ;;		wreg
  7857 ;; Tracked objects:
  7858 ;;		On entry : 0/0
  7859 ;;		On exit  : 0/0
  7860 ;;		Unchanged: 0/0
  7861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7862 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7865 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7866 ;;Total ram usage:        2 bytes
  7867 ;; Hardware stack levels used:    1
  7868 ;; Hardware stack levels required when called:    6
  7869 ;; This function calls:
  7870 ;;		Nothing
  7871 ;; This function is called by:
  7872 ;;		_EUSART_Initialize
  7873 ;; This function uses a non-reentrant model
  7874 ;;
  7875                           
  7876                           
  7877                           ;psect for function _EUSART_SetFramingErrorHandler
  7878  17B9                     _EUSART_SetFramingErrorHandler:	
  7879                           
  7880                           ;mcc_generated_files/eusart.c: 172:     EUSART_FramingErrorHandler = interruptHandler;
  7881                           
  7882                           ;incstack = 0
  7883                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  7884  17B9  0021               	movlb	1	; select bank1
  7885  17BA  0821               	movf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^(0+128),w
  7886  17BB  0022               	movlb	2	; select bank2
  7887  17BC  00ED               	movwf	(_EUSART_FramingErrorHandler+1)^(0+256)
  7888  17BD  0021               	movlb	1	; select bank1
  7889  17BE  0820               	movf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128),w
  7890  17BF  0022               	movlb	2	; select bank2
  7891  17C0  00EC               	movwf	_EUSART_FramingErrorHandler^(0+256)
  7892  17C1  0008               	return
  7893  17C2                     __end_of_EUSART_SetFramingErrorHandler:	
  7894                           
  7895                           	psect	text30
  7896  17B0                     __ptext30:	
  7897 ;; *************** function _EUSART_SetErrorHandler *****************
  7898 ;; Defined at:
  7899 ;;		line 179 in file "mcc_generated_files/eusart.c"
  7900 ;; Parameters:    Size  Location     Type
  7901 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  7902 ;;		 -> EUSART_DefaultErrorHandler(1), 
  7903 ;; Auto vars:     Size  Location     Type
  7904 ;;		None
  7905 ;; Return value:  Size  Location     Type
  7906 ;;                  1    wreg      void 
  7907 ;; Registers used:
  7908 ;;		wreg
  7909 ;; Tracked objects:
  7910 ;;		On entry : 0/0
  7911 ;;		On exit  : 0/0
  7912 ;;		Unchanged: 0/0
  7913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7914 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7917 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7918 ;;Total ram usage:        2 bytes
  7919 ;; Hardware stack levels used:    1
  7920 ;; Hardware stack levels required when called:    6
  7921 ;; This function calls:
  7922 ;;		Nothing
  7923 ;; This function is called by:
  7924 ;;		_EUSART_Initialize
  7925 ;; This function uses a non-reentrant model
  7926 ;;
  7927                           
  7928                           
  7929                           ;psect for function _EUSART_SetErrorHandler
  7930  17B0                     _EUSART_SetErrorHandler:	
  7931                           
  7932                           ;mcc_generated_files/eusart.c: 180:     EUSART_ErrorHandler = interruptHandler;
  7933                           
  7934                           ;incstack = 0
  7935                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  7936  17B0  0021               	movlb	1	; select bank1
  7937  17B1  0821               	movf	(EUSART_SetErrorHandler@interruptHandler+1)^(0+128),w
  7938  17B2  0022               	movlb	2	; select bank2
  7939  17B3  00E9               	movwf	(_EUSART_ErrorHandler+1)^(0+256)
  7940  17B4  0021               	movlb	1	; select bank1
  7941  17B5  0820               	movf	EUSART_SetErrorHandler@interruptHandler^(0+128),w
  7942  17B6  0022               	movlb	2	; select bank2
  7943  17B7  00E8               	movwf	_EUSART_ErrorHandler^(0+256)
  7944  17B8  0008               	return
  7945  17B9                     __end_of_EUSART_SetErrorHandler:	
  7946                           
  7947                           	psect	intentry
  7948  0004                     __pintentry:	
  7949 ;; *************** function _INTERRUPT_InterruptManager *****************
  7950 ;; Defined at:
  7951 ;;		line 4 in file "mcc_generated_files/interrupt_manager.c"
  7952 ;; Parameters:    Size  Location     Type
  7953 ;;		None
  7954 ;; Auto vars:     Size  Location     Type
  7955 ;;		None
  7956 ;; Return value:  Size  Location     Type
  7957 ;;                  1    wreg      void 
  7958 ;; Registers used:
  7959 ;;		wreg, status,2, status,0, pclath, cstack
  7960 ;; Tracked objects:
  7961 ;;		On entry : 0/0
  7962 ;;		On exit  : 0/0
  7963 ;;		Unchanged: 0/0
  7964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7968 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7969 ;;Total ram usage:        0 bytes
  7970 ;; Hardware stack levels used:    1
  7971 ;; Hardware stack levels required when called:    5
  7972 ;; This function calls:
  7973 ;;		_PIN_MANAGER_IOC
  7974 ;;		_TMR0_ISR
  7975 ;; This function is called by:
  7976 ;;		Interrupt level 1
  7977 ;; This function uses a non-reentrant model
  7978 ;;
  7979                           
  7980  0004                     _INTERRUPT_InterruptManager:	
  7981                           
  7982                           ;incstack = 0
  7983  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  7984                           
  7985                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  7986  0005  3180               	pagesel	$
  7987                           
  7988                           ;mcc_generated_files/interrupt_manager.c: 7:     if(INTCONbits.TMR0IE == 1 && INTCONbits
      +                          .TMR0IF == 1)
  7989  0006  1A8B               	btfsc	11,5	;volatile
  7990  0007  1D0B               	btfss	11,2	;volatile
  7991  0008  280D               	goto	i1l236
  7992                           
  7993                           ;mcc_generated_files/interrupt_manager.c: 8:     {;mcc_generated_files/interrupt_manager
      +                          .c: 9:         TMR0_ISR();
  7994  0009  3188  2010  3180   	fcall	_TMR0_ISR
  7995                           
  7996                           ;mcc_generated_files/interrupt_manager.c: 10:     }
  7997  000C  2812               	goto	i1l240
  7998  000D                     i1l236:	
  7999                           ;mcc_generated_files/interrupt_manager.c: 11:     else if(INTCONbits.IOCIE == 1 && INTCO
      +                          Nbits.IOCIF == 1)
  8000                           
  8001  000D  198B               	btfsc	11,3	;volatile
  8002  000E  1C0B               	btfss	11,0	;volatile
  8003  000F  2812               	goto	i1l240
  8004                           
  8005                           ;mcc_generated_files/interrupt_manager.c: 12:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 13:         PIN_MANAGER_IOC();
  8006  0010  3197  2789         	fcall	_PIN_MANAGER_IOC
  8007  0012                     i1l240:	
  8008                           ;mcc_generated_files/interrupt_manager.c: 14:     }
  8009                           
  8010  0012  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  8011  0013  0009               	retfie
  8012  0014                     __end_of_INTERRUPT_InterruptManager:	
  8013                           
  8014                           	psect	text32
  8015  0810                     __ptext32:	
  8016 ;; *************** function _TMR0_ISR *****************
  8017 ;; Defined at:
  8018 ;;		line 62 in file "mcc_generated_files/tmr0.c"
  8019 ;; Parameters:    Size  Location     Type
  8020 ;;		None
  8021 ;; Auto vars:     Size  Location     Type
  8022 ;;		None
  8023 ;; Return value:  Size  Location     Type
  8024 ;;                  1    wreg      void 
  8025 ;; Registers used:
  8026 ;;		wreg, status,2, status,0, pclath, cstack
  8027 ;; Tracked objects:
  8028 ;;		On entry : 0/0
  8029 ;;		On exit  : 0/0
  8030 ;;		Unchanged: 0/0
  8031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8036 ;;Total ram usage:        0 bytes
  8037 ;; Hardware stack levels used:    1
  8038 ;; Hardware stack levels required when called:    2
  8039 ;; This function calls:
  8040 ;;		Absolute function
  8041 ;;		_TMR0_DefaultInterruptHandler
  8042 ;;		_timerISR
  8043 ;; This function is called by:
  8044 ;;		_INTERRUPT_InterruptManager
  8045 ;; This function uses a non-reentrant model
  8046 ;;
  8047                           
  8048                           
  8049                           ;psect for function _TMR0_ISR
  8050  0810                     _TMR0_ISR:	
  8051                           
  8052                           ;mcc_generated_files/tmr0.c: 66:     INTCONbits.TMR0IF = 0;
  8053                           
  8054                           ;incstack = 0
  8055                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  8056  0810  110B               	bcf	11,2	;volatile
  8057                           
  8058                           ;mcc_generated_files/tmr0.c: 68:     TMR0 = timer0ReloadVal;
  8059  0811  0020               	movlb	0	; select bank0
  8060  0812  086F               	movf	_timer0ReloadVal,w	;volatile
  8061  0813  0095               	movwf	21	;volatile
  8062                           
  8063                           ;mcc_generated_files/tmr0.c: 70:     if(TMR0_InterruptHandler)
  8064  0814  0022               	movlb	2	; select bank2
  8065  0815  0866               	movf	_TMR0_InterruptHandler^(0+256),w
  8066  0816  0467               	iorwf	(_TMR0_InterruptHandler+1)^(0+256),w
  8067  0817  1903               	btfsc	3,2
  8068  0818  0008               	return
  8069                           
  8070                           ;mcc_generated_files/tmr0.c: 71:     {;mcc_generated_files/tmr0.c: 72:         TMR0_Inte
      +                          rruptHandler();
  8071  0819  0867               	movf	(_TMR0_InterruptHandler+1)^(0+256),w
  8072  081A  008A               	movwf	10
  8073  081B  0866               	movf	_TMR0_InterruptHandler^(0+256),w
  8074  081C  000A               	callw
  8075  081D  3188               	pagesel	$
  8076  081E  0008               	return
  8077  081F                     __end_of_TMR0_ISR:	
  8078                           
  8079                           	psect	text33
  8080  07FC                     __ptext33:	
  8081 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  8082 ;; Defined at:
  8083 ;;		line 83 in file "mcc_generated_files/tmr0.c"
  8084 ;; Parameters:    Size  Location     Type
  8085 ;;		None
  8086 ;; Auto vars:     Size  Location     Type
  8087 ;;		None
  8088 ;; Return value:  Size  Location     Type
  8089 ;;                  1    wreg      void 
  8090 ;; Registers used:
  8091 ;;		None
  8092 ;; Tracked objects:
  8093 ;;		On entry : 0/0
  8094 ;;		On exit  : 0/0
  8095 ;;		Unchanged: 0/0
  8096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8101 ;;Total ram usage:        0 bytes
  8102 ;; Hardware stack levels used:    1
  8103 ;; This function calls:
  8104 ;;		Nothing
  8105 ;; This function is called by:
  8106 ;;		_TMR0_Initialize
  8107 ;;		_TMR0_ISR
  8108 ;; This function uses a non-reentrant model
  8109 ;;
  8110                           
  8111                           
  8112                           ;psect for function _TMR0_DefaultInterruptHandler
  8113  07FC                     _TMR0_DefaultInterruptHandler:	
  8114                           
  8115                           ;incstack = 0
  8116                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  8117  07FC  0008               	return
  8118  07FD                     __end_of_TMR0_DefaultInterruptHandler:	
  8119                           
  8120                           	psect	text34
  8121  08ED                     __ptext34:	
  8122 ;; *************** function _timerISR *****************
  8123 ;; Defined at:
  8124 ;;		line 93 in file "main.c"
  8125 ;; Parameters:    Size  Location     Type
  8126 ;;		None
  8127 ;; Auto vars:     Size  Location     Type
  8128 ;;		None
  8129 ;; Return value:  Size  Location     Type
  8130 ;;                  1    wreg      void 
  8131 ;; Registers used:
  8132 ;;		wreg, status,2, status,0, pclath, cstack
  8133 ;; Tracked objects:
  8134 ;;		On entry : 0/0
  8135 ;;		On exit  : 0/0
  8136 ;;		Unchanged: 0/0
  8137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8142 ;;Total ram usage:        0 bytes
  8143 ;; Hardware stack levels used:    1
  8144 ;; Hardware stack levels required when called:    1
  8145 ;; This function calls:
  8146 ;;		___fladd
  8147 ;; This function is called by:
  8148 ;;		_main
  8149 ;;		_TMR0_ISR
  8150 ;; This function uses a non-reentrant model
  8151 ;;
  8152                           
  8153                           
  8154                           ;psect for function _timerISR
  8155  08ED                     _timerISR:	
  8156                           
  8157                           ;main.c: 95:     counter++ ;
  8158                           
  8159                           ;incstack = 0
  8160                           ; Regs used in _timerISR: [wreg+status,2+status,0+pclath+cstack]
  8161  08ED  303F               	movlw	63
  8162  08EE  00F3               	movwf	___fladd@b+3
  8163  08EF  3080               	movlw	128
  8164  08F0  00F2               	movwf	___fladd@b+2
  8165  08F1  3000               	movlw	0
  8166  08F2  00F1               	movwf	___fladd@b+1
  8167  08F3  3000               	movlw	0
  8168  08F4  00F0               	movwf	___fladd@b
  8169  08F5  0022               	movlb	2	; select bank2
  8170  08F6  0857               	movf	(_counter+3)^(0+256),w	;volatile
  8171  08F7  00F7               	movwf	___fladd@a+3
  8172  08F8  0856               	movf	(_counter+2)^(0+256),w	;volatile
  8173  08F9  00F6               	movwf	___fladd@a+2
  8174  08FA  0855               	movf	(_counter+1)^(0+256),w	;volatile
  8175  08FB  00F5               	movwf	___fladd@a+1
  8176  08FC  0854               	movf	_counter^(0+256),w	;volatile
  8177  08FD  00F4               	movwf	___fladd@a
  8178  08FE  3182  2269         	fcall	___fladd
  8179  0900  0873               	movf	?___fladd+3,w
  8180  0901  0022               	movlb	2	; select bank2
  8181  0902  00D7               	movwf	(_counter+3)^(0+256)	;volatile
  8182  0903  0872               	movf	?___fladd+2,w
  8183  0904  00D6               	movwf	(_counter+2)^(0+256)	;volatile
  8184  0905  0871               	movf	?___fladd+1,w
  8185  0906  00D5               	movwf	(_counter+1)^(0+256)	;volatile
  8186  0907  0870               	movf	?___fladd,w
  8187  0908  00D4               	movwf	_counter^(0+256)	;volatile
  8188                           
  8189                           ;main.c: 96:     adcCounter++ ;
  8190  0909  3001               	movlw	1
  8191  090A  07C0               	addwf	_adcCounter^(0+256),f	;volatile
  8192  090B  3000               	movlw	0
  8193  090C  3DC1               	addwfc	(_adcCounter+1)^(0+256),f	;volatile
  8194  090D  3000               	movlw	0
  8195  090E  3DC2               	addwfc	(_adcCounter+2)^(0+256),f	;volatile
  8196  090F  3000               	movlw	0
  8197  0910  3DC3               	addwfc	(_adcCounter+3)^(0+256),f	;volatile
  8198  0911  0008               	return
  8199  0912                     __end_of_timerISR:	
  8200                           
  8201                           	psect	text35
  8202  0269                     __ptext35:	
  8203 ;; *************** function ___fladd *****************
  8204 ;; Defined at:
  8205 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  8206 ;; Parameters:    Size  Location     Type
  8207 ;;  b               4    0[COMMON] void 
  8208 ;;  a               4    4[COMMON] void 
  8209 ;; Auto vars:     Size  Location     Type
  8210 ;;  grs             1   11[COMMON] unsigned char 
  8211 ;;  bexp            1   10[COMMON] unsigned char 
  8212 ;;  aexp            1    9[COMMON] unsigned char 
  8213 ;;  signs           1    8[COMMON] unsigned char 
  8214 ;; Return value:  Size  Location     Type
  8215 ;;                  4    0[COMMON] unsigned char 
  8216 ;; Registers used:
  8217 ;;		wreg, status,2, status,0
  8218 ;; Tracked objects:
  8219 ;;		On entry : 0/0
  8220 ;;		On exit  : 0/0
  8221 ;;		Unchanged: 0/0
  8222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8223 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8224 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8225 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8226 ;;      Totals:        12       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8227 ;;Total ram usage:       20 bytes
  8228 ;; Hardware stack levels used:    1
  8229 ;; This function calls:
  8230 ;;		Nothing
  8231 ;; This function is called by:
  8232 ;;		_timerISR
  8233 ;; This function uses a non-reentrant model
  8234 ;;
  8235                           
  8236                           
  8237                           ;psect for function ___fladd
  8238  0269                     ___fladd:	
  8239                           
  8240                           ;incstack = 0
  8241                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  8242  0269  0873               	movf	___fladd@b+3,w
  8243  026A  3980               	andlw	128
  8244  026B  0020               	movlb	0	; select bank0
  8245  026C  00A0               	movwf	??___fladd
  8246  026D  0820               	movf	??___fladd,w
  8247  026E  00F8               	movwf	___fladd@signs
  8248  026F  3573               	lslf	___fladd@b+3,w
  8249  0270  00A0               	movwf	??___fladd
  8250  0271  0820               	movf	??___fladd,w
  8251  0272  00FA               	movwf	___fladd@bexp
  8252  0273  1BF2               	btfsc	___fladd@b+2,7
  8253  0274  147A               	bsf	___fladd@bexp,0
  8254  0275  087A               	movf	___fladd@bexp,w
  8255  0276  1903               	btfsc	3,2
  8256  0277  2A86               	goto	i1l2948
  8257  0278  0A7A               	incf	___fladd@bexp,w
  8258  0279  1D03               	btfss	3,2
  8259  027A  2A83               	goto	i1l2944
  8260  027B  3000               	movlw	0
  8261  027C  00F3               	movwf	___fladd@b+3
  8262  027D  3000               	movlw	0
  8263  027E  00F2               	movwf	___fladd@b+2
  8264  027F  3000               	movlw	0
  8265  0280  00F1               	movwf	___fladd@b+1
  8266  0281  3000               	movlw	0
  8267  0282  00F0               	movwf	___fladd@b
  8268  0283                     i1l2944:	
  8269  0283  17F2               	bsf	___fladd@b+2,7
  8270  0284  01F3               	clrf	___fladd@b+3
  8271  0285  2A8E               	goto	i1l2950
  8272  0286                     i1l2948:	
  8273  0286  3000               	movlw	0
  8274  0287  00F3               	movwf	___fladd@b+3
  8275  0288  3000               	movlw	0
  8276  0289  00F2               	movwf	___fladd@b+2
  8277  028A  3000               	movlw	0
  8278  028B  00F1               	movwf	___fladd@b+1
  8279  028C  3000               	movlw	0
  8280  028D  00F0               	movwf	___fladd@b
  8281  028E                     i1l2950:	
  8282  028E  0877               	movf	___fladd@a+3,w
  8283  028F  3980               	andlw	128
  8284  0290  00A0               	movwf	??___fladd
  8285  0291  0820               	movf	??___fladd,w
  8286  0292  00F9               	movwf	___fladd@aexp
  8287  0293  0879               	movf	___fladd@aexp,w
  8288  0294  0678               	xorwf	___fladd@signs,w
  8289  0295  1D03               	btfss	3,2
  8290  0296  1778               	bsf	___fladd@signs,6
  8291  0297  3577               	lslf	___fladd@a+3,w
  8292  0298  00A0               	movwf	??___fladd
  8293  0299  0820               	movf	??___fladd,w
  8294  029A  00F9               	movwf	___fladd@aexp
  8295  029B  1BF6               	btfsc	___fladd@a+2,7
  8296  029C  1479               	bsf	___fladd@aexp,0
  8297  029D  0879               	movf	___fladd@aexp,w
  8298  029E  1903               	btfsc	3,2
  8299  029F  2AAE               	goto	i1l2972
  8300  02A0  0A79               	incf	___fladd@aexp,w
  8301  02A1  1D03               	btfss	3,2
  8302  02A2  2AAB               	goto	i1l2968
  8303  02A3  3000               	movlw	0
  8304  02A4  00F7               	movwf	___fladd@a+3
  8305  02A5  3000               	movlw	0
  8306  02A6  00F6               	movwf	___fladd@a+2
  8307  02A7  3000               	movlw	0
  8308  02A8  00F5               	movwf	___fladd@a+1
  8309  02A9  3000               	movlw	0
  8310  02AA  00F4               	movwf	___fladd@a
  8311  02AB                     i1l2968:	
  8312  02AB  17F6               	bsf	___fladd@a+2,7
  8313  02AC  01F7               	clrf	___fladd@a+3
  8314  02AD  2AB6               	goto	i1l802
  8315  02AE                     i1l2972:	
  8316  02AE  3000               	movlw	0
  8317  02AF  00F7               	movwf	___fladd@a+3
  8318  02B0  3000               	movlw	0
  8319  02B1  00F6               	movwf	___fladd@a+2
  8320  02B2  3000               	movlw	0
  8321  02B3  00F5               	movwf	___fladd@a+1
  8322  02B4  3000               	movlw	0
  8323  02B5  00F4               	movwf	___fladd@a
  8324  02B6                     i1l802:	
  8325  02B6  087A               	movf	___fladd@bexp,w
  8326  02B7  0279               	subwf	___fladd@aexp,w
  8327  02B8  1803               	skipnc
  8328  02B9  2AFC               	goto	i1l3008
  8329  02BA  1F78               	btfss	___fladd@signs,6
  8330  02BB  2AC0               	goto	i1l2978
  8331  02BC  3080               	movlw	128
  8332  02BD  00A0               	movwf	??___fladd
  8333  02BE  0820               	movf	??___fladd,w
  8334  02BF  06F8               	xorwf	___fladd@signs,f
  8335  02C0                     i1l2978:	
  8336  02C0  087A               	movf	___fladd@bexp,w
  8337  02C1  00A0               	movwf	??___fladd
  8338  02C2  0820               	movf	??___fladd,w
  8339  02C3  00FB               	movwf	___fladd@grs
  8340  02C4  0879               	movf	___fladd@aexp,w
  8341  02C5  00A0               	movwf	??___fladd
  8342  02C6  0820               	movf	??___fladd,w
  8343  02C7  00FA               	movwf	___fladd@bexp
  8344  02C8  087B               	movf	___fladd@grs,w
  8345  02C9  00A0               	movwf	??___fladd
  8346  02CA  0820               	movf	??___fladd,w
  8347  02CB  00F9               	movwf	___fladd@aexp
  8348  02CC  0870               	movf	___fladd@b,w
  8349  02CD  00A0               	movwf	??___fladd
  8350  02CE  0820               	movf	??___fladd,w
  8351  02CF  00FB               	movwf	___fladd@grs
  8352  02D0  0874               	movf	___fladd@a,w
  8353  02D1  00A0               	movwf	??___fladd
  8354  02D2  0820               	movf	??___fladd,w
  8355  02D3  00F0               	movwf	___fladd@b
  8356  02D4  087B               	movf	___fladd@grs,w
  8357  02D5  00A0               	movwf	??___fladd
  8358  02D6  0820               	movf	??___fladd,w
  8359  02D7  00F4               	movwf	___fladd@a
  8360  02D8  0871               	movf	___fladd@b+1,w
  8361  02D9  00A0               	movwf	??___fladd
  8362  02DA  0820               	movf	??___fladd,w
  8363  02DB  00FB               	movwf	___fladd@grs
  8364  02DC  0875               	movf	___fladd@a+1,w
  8365  02DD  00A0               	movwf	??___fladd
  8366  02DE  0820               	movf	??___fladd,w
  8367  02DF  00F1               	movwf	___fladd@b+1
  8368  02E0  087B               	movf	___fladd@grs,w
  8369  02E1  00A0               	movwf	??___fladd
  8370  02E2  0820               	movf	??___fladd,w
  8371  02E3  00F5               	movwf	___fladd@a+1
  8372  02E4  0872               	movf	___fladd@b+2,w
  8373  02E5  00A0               	movwf	??___fladd
  8374  02E6  0820               	movf	??___fladd,w
  8375  02E7  00FB               	movwf	___fladd@grs
  8376  02E8  0876               	movf	___fladd@a+2,w
  8377  02E9  00A0               	movwf	??___fladd
  8378  02EA  0820               	movf	??___fladd,w
  8379  02EB  00F2               	movwf	___fladd@b+2
  8380  02EC  087B               	movf	___fladd@grs,w
  8381  02ED  00A0               	movwf	??___fladd
  8382  02EE  0820               	movf	??___fladd,w
  8383  02EF  00F6               	movwf	___fladd@a+2
  8384  02F0  0873               	movf	___fladd@b+3,w
  8385  02F1  00A0               	movwf	??___fladd
  8386  02F2  0820               	movf	??___fladd,w
  8387  02F3  00FB               	movwf	___fladd@grs
  8388  02F4  0877               	movf	___fladd@a+3,w
  8389  02F5  00A0               	movwf	??___fladd
  8390  02F6  0820               	movf	??___fladd,w
  8391  02F7  00F3               	movwf	___fladd@b+3
  8392  02F8  087B               	movf	___fladd@grs,w
  8393  02F9  00A0               	movwf	??___fladd
  8394  02FA  0820               	movf	??___fladd,w
  8395  02FB  00F7               	movwf	___fladd@a+3
  8396  02FC                     i1l3008:	
  8397  02FC  01FB               	clrf	___fladd@grs
  8398  02FD  0879               	movf	___fladd@aexp,w
  8399  02FE  00A0               	movwf	??___fladd
  8400  02FF  01A1               	clrf	??___fladd+1
  8401  0300  0821               	movf	??___fladd+1,w
  8402  0301  00A3               	movwf	??___fladd+3
  8403  0302  087A               	movf	___fladd@bexp,w
  8404  0303  0220               	subwf	??___fladd,w
  8405  0304  00A2               	movwf	??___fladd+2
  8406  0305  1C03               	skipc
  8407  0306  03A3               	decf	??___fladd+3,f
  8408  0307  0823               	movf	??___fladd+3,w
  8409  0308  3A80               	xorlw	128
  8410  0309  00A4               	movwf	??___fladd+4
  8411  030A  3080               	movlw	128
  8412  030B  0224               	subwf	??___fladd+4,w
  8413  030C  1D03               	skipz
  8414  030D  2B10               	goto	u371_25
  8415  030E  301A               	movlw	26
  8416  030F  0222               	subwf	??___fladd+2,w
  8417  0310                     u371_25:	
  8418  0310  1C03               	skipc
  8419  0311  2B46               	goto	i1l3026
  8420  0312  0873               	movf	___fladd@b+3,w
  8421  0313  0472               	iorwf	___fladd@b+2,w
  8422  0314  0471               	iorwf	___fladd@b+1,w
  8423  0315  0470               	iorwf	___fladd@b,w
  8424  0316  1903               	btfsc	3,2
  8425  0317  2B1A               	goto	u372_20
  8426  0318  3001               	movlw	1
  8427  0319  2B1B               	goto	u373_20
  8428  031A                     u372_20:	
  8429  031A  3000               	movlw	0
  8430  031B                     u373_20:	
  8431  031B  0020               	movlb	0	; select bank0
  8432  031C  00A0               	movwf	??___fladd
  8433  031D  0820               	movf	??___fladd,w
  8434  031E  00FB               	movwf	___fladd@grs
  8435  031F  3000               	movlw	0
  8436  0320  00F3               	movwf	___fladd@b+3
  8437  0321  3000               	movlw	0
  8438  0322  00F2               	movwf	___fladd@b+2
  8439  0323  3000               	movlw	0
  8440  0324  00F1               	movwf	___fladd@b+1
  8441  0325  3000               	movlw	0
  8442  0326  00F0               	movwf	___fladd@b
  8443  0327  0879               	movf	___fladd@aexp,w
  8444  0328  00A0               	movwf	??___fladd
  8445  0329  0820               	movf	??___fladd,w
  8446  032A  00FA               	movwf	___fladd@bexp
  8447  032B  2B4A               	goto	i1l806
  8448  032C                     i1l808:	
  8449  032C  1C7B               	btfss	___fladd@grs,0
  8450  032D  2B35               	goto	i1l3016
  8451  032E  367B               	lsrf	___fladd@grs,w
  8452  032F  3801               	iorlw	1
  8453  0330  0020               	movlb	0	; select bank0
  8454  0331  00A0               	movwf	??___fladd
  8455  0332  0820               	movf	??___fladd,w
  8456  0333  00FB               	movwf	___fladd@grs
  8457  0334  2B37               	goto	i1l3018
  8458  0335                     i1l3016:	
  8459  0335  1003               	clrc
  8460  0336  0CFB               	rrf	___fladd@grs,f
  8461  0337                     i1l3018:	
  8462  0337  1870               	btfsc	___fladd@b,0
  8463  0338  17FB               	bsf	___fladd@grs,7
  8464  0339  3001               	movlw	1
  8465  033A  0020               	movlb	0	; select bank0
  8466  033B  00A0               	movwf	??___fladd
  8467  033C                     u376_25:	
  8468  033C  37F3               	asrf	___fladd@b+3,f
  8469  033D  0CF2               	rrf	___fladd@b+2,f
  8470  033E  0CF1               	rrf	___fladd@b+1,f
  8471  033F  0CF0               	rrf	___fladd@b,f
  8472  0340  0BA0               	decfsz	??___fladd& (0+127),f
  8473  0341  2B3C               	goto	u376_25
  8474  0342  3001               	movlw	1
  8475  0343  00A0               	movwf	??___fladd
  8476  0344  0820               	movf	??___fladd,w
  8477  0345  07FA               	addwf	___fladd@bexp,f
  8478  0346                     i1l3026:	
  8479  0346  0879               	movf	___fladd@aexp,w
  8480  0347  027A               	subwf	___fladd@bexp,w
  8481  0348  1C03               	skipc
  8482  0349  2B2C               	goto	i1l808
  8483  034A                     i1l806:	
  8484  034A  1B78               	btfsc	___fladd@signs,6
  8485  034B  2B7D               	goto	i1l3052
  8486  034C  087A               	movf	___fladd@bexp,w
  8487  034D  1D03               	btfss	3,2
  8488  034E  2B58               	goto	i1l3034
  8489  034F  3000               	movlw	0
  8490  0350  00F3               	movwf	?___fladd+3
  8491  0351  3000               	movlw	0
  8492  0352  00F2               	movwf	?___fladd+2
  8493  0353  3000               	movlw	0
  8494  0354  00F1               	movwf	?___fladd+1
  8495  0355  3000               	movlw	0
  8496  0356  00F0               	movwf	?___fladd
  8497  0357  0008               	return
  8498  0358                     i1l3034:	
  8499  0358  0874               	movf	___fladd@a,w
  8500  0359  07F0               	addwf	___fladd@b,f
  8501  035A  0875               	movf	___fladd@a+1,w
  8502  035B  3DF1               	addwfc	___fladd@b+1,f
  8503  035C  0876               	movf	___fladd@a+2,w
  8504  035D  3DF2               	addwfc	___fladd@b+2,f
  8505  035E  0877               	movf	___fladd@a+3,w
  8506  035F  3DF3               	addwfc	___fladd@b+3,f
  8507  0360  1C73               	btfss	___fladd@b+3,0
  8508  0361  2BF8               	goto	i1l3086
  8509  0362  1C7B               	btfss	___fladd@grs,0
  8510  0363  2B6B               	goto	i1l3042
  8511  0364  367B               	lsrf	___fladd@grs,w
  8512  0365  3801               	iorlw	1
  8513  0366  0020               	movlb	0	; select bank0
  8514  0367  00A0               	movwf	??___fladd
  8515  0368  0820               	movf	??___fladd,w
  8516  0369  00FB               	movwf	___fladd@grs
  8517  036A  2B6D               	goto	i1l3044
  8518  036B                     i1l3042:	
  8519  036B  1003               	clrc
  8520  036C  0CFB               	rrf	___fladd@grs,f
  8521  036D                     i1l3044:	
  8522  036D  1870               	btfsc	___fladd@b,0
  8523  036E  17FB               	bsf	___fladd@grs,7
  8524  036F  3001               	movlw	1
  8525  0370  0020               	movlb	0	; select bank0
  8526  0371  00A0               	movwf	??___fladd
  8527  0372                     u383_25:	
  8528  0372  37F3               	asrf	___fladd@b+3,f
  8529  0373  0CF2               	rrf	___fladd@b+2,f
  8530  0374  0CF1               	rrf	___fladd@b+1,f
  8531  0375  0CF0               	rrf	___fladd@b,f
  8532  0376  0BA0               	decfsz	??___fladd& (0+127),f
  8533  0377  2B72               	goto	u383_25
  8534  0378  3001               	movlw	1
  8535  0379  00A0               	movwf	??___fladd
  8536  037A  0820               	movf	??___fladd,w
  8537  037B  07FA               	addwf	___fladd@bexp,f
  8538  037C  2BF8               	goto	i1l3086
  8539  037D                     i1l3052:	
  8540  037D  0873               	movf	___fladd@b+3,w
  8541  037E  3A80               	xorlw	128
  8542  037F  0020               	movlb	0	; select bank0
  8543  0380  00A0               	movwf	??___fladd
  8544  0381  0877               	movf	___fladd@a+3,w
  8545  0382  3A80               	xorlw	128
  8546  0383  0220               	subwf	??___fladd,w
  8547  0384  1D03               	skipz
  8548  0385  2B90               	goto	u384_23
  8549  0386  0876               	movf	___fladd@a+2,w
  8550  0387  0272               	subwf	___fladd@b+2,w
  8551  0388  1D03               	skipz
  8552  0389  2B90               	goto	u384_23
  8553  038A  0875               	movf	___fladd@a+1,w
  8554  038B  0271               	subwf	___fladd@b+1,w
  8555  038C  1D03               	skipz
  8556  038D  2B90               	goto	u384_23
  8557  038E  0874               	movf	___fladd@a,w
  8558  038F  0270               	subwf	___fladd@b,w
  8559  0390                     u384_23:	
  8560  0390  1803               	skipnc
  8561  0391  2BC8               	goto	i1l3062
  8562  0392  30FF               	movlw	255
  8563  0393  00A0               	movwf	??___fladd
  8564  0394  30FF               	movlw	255
  8565  0395  00A1               	movwf	??___fladd+1
  8566  0396  30FF               	movlw	255
  8567  0397  00A2               	movwf	??___fladd+2
  8568  0398  30FF               	movlw	255
  8569  0399  00A3               	movwf	??___fladd+3
  8570  039A  0870               	movf	___fladd@b,w
  8571  039B  0274               	subwf	___fladd@a,w
  8572  039C  00A4               	movwf	??___fladd+4
  8573  039D  0871               	movf	___fladd@b+1,w
  8574  039E  3B75               	subwfb	___fladd@a+1,w
  8575  039F  00A5               	movwf	??___fladd+5
  8576  03A0  0872               	movf	___fladd@b+2,w
  8577  03A1  3B76               	subwfb	___fladd@a+2,w
  8578  03A2  00A6               	movwf	??___fladd+6
  8579  03A3  0873               	movf	___fladd@b+3,w
  8580  03A4  3B77               	subwfb	___fladd@a+3,w
  8581  03A5  00A7               	movwf	??___fladd+7
  8582  03A6  0824               	movf	??___fladd+4,w
  8583  03A7  07A0               	addwf	??___fladd,f
  8584  03A8  0825               	movf	??___fladd+5,w
  8585  03A9  3DA1               	addwfc	??___fladd+1,f
  8586  03AA  0826               	movf	??___fladd+6,w
  8587  03AB  3DA2               	addwfc	??___fladd+2,f
  8588  03AC  0827               	movf	??___fladd+7,w
  8589  03AD  3DA3               	addwfc	??___fladd+3,f
  8590  03AE  0823               	movf	??___fladd+3,w
  8591  03AF  00F3               	movwf	___fladd@b+3
  8592  03B0  0822               	movf	??___fladd+2,w
  8593  03B1  00F2               	movwf	___fladd@b+2
  8594  03B2  0821               	movf	??___fladd+1,w
  8595  03B3  00F1               	movwf	___fladd@b+1
  8596  03B4  0820               	movf	??___fladd,w
  8597  03B5  00F0               	movwf	___fladd@b
  8598  03B6  3080               	movlw	128
  8599  03B7  00A0               	movwf	??___fladd
  8600  03B8  0820               	movf	??___fladd,w
  8601  03B9  06F8               	xorwf	___fladd@signs,f
  8602  03BA  09FB               	comf	___fladd@grs,f
  8603  03BB  0AFB               	incf	___fladd@grs,f
  8604  03BC  087B               	movf	___fladd@grs,w
  8605  03BD  1D03               	btfss	3,2
  8606  03BE  2BD0               	goto	i1l823
  8607  03BF  3001               	movlw	1
  8608  03C0  07F0               	addwf	___fladd@b,f
  8609  03C1  3000               	movlw	0
  8610  03C2  3DF1               	addwfc	___fladd@b+1,f
  8611  03C3  3000               	movlw	0
  8612  03C4  3DF2               	addwfc	___fladd@b+2,f
  8613  03C5  3000               	movlw	0
  8614  03C6  3DF3               	addwfc	___fladd@b+3,f
  8615  03C7  2BD0               	goto	i1l823
  8616  03C8                     i1l3062:	
  8617  03C8  0874               	movf	___fladd@a,w
  8618  03C9  02F0               	subwf	___fladd@b,f
  8619  03CA  0875               	movf	___fladd@a+1,w
  8620  03CB  3BF1               	subwfb	___fladd@b+1,f
  8621  03CC  0876               	movf	___fladd@a+2,w
  8622  03CD  3BF2               	subwfb	___fladd@b+2,f
  8623  03CE  0877               	movf	___fladd@a+3,w
  8624  03CF  3BF3               	subwfb	___fladd@b+3,f
  8625  03D0                     i1l823:	
  8626  03D0  0873               	movf	___fladd@b+3,w
  8627  03D1  0472               	iorwf	___fladd@b+2,w
  8628  03D2  0471               	iorwf	___fladd@b+1,w
  8629  03D3  0470               	iorwf	___fladd@b,w
  8630  03D4  1D03               	skipz
  8631  03D5  2BF6               	goto	i1l3084
  8632  03D6  087B               	movf	___fladd@grs,w
  8633  03D7  1D03               	btfss	3,2
  8634  03D8  2BF6               	goto	i1l3084
  8635  03D9  3000               	movlw	0
  8636  03DA  00F3               	movwf	?___fladd+3
  8637  03DB  3000               	movlw	0
  8638  03DC  00F2               	movwf	?___fladd+2
  8639  03DD  3000               	movlw	0
  8640  03DE  00F1               	movwf	?___fladd+1
  8641  03DF  3000               	movlw	0
  8642  03E0  00F0               	movwf	?___fladd
  8643  03E1  0008               	return
  8644  03E2                     i1l3070:	
  8645  03E2  3001               	movlw	1
  8646  03E3                     u388_25:	
  8647  03E3  35F0               	lslf	___fladd@b,f
  8648  03E4  0DF1               	rlf	___fladd@b+1,f
  8649  03E5  0DF2               	rlf	___fladd@b+2,f
  8650  03E6  0DF3               	rlf	___fladd@b+3,f
  8651  03E7  0B89               	decfsz	9,f
  8652  03E8  2BE3               	goto	u388_25
  8653  03E9  1BFB               	btfsc	___fladd@grs,7
  8654  03EA  1470               	bsf	___fladd@b,0
  8655  03EB  1C7B               	btfss	___fladd@grs,0
  8656  03EC  2BEF               	goto	i1l3078
  8657  03ED  1403               	setc
  8658  03EE  2BF0               	goto	L4
  8659  03EF                     i1l3078:	
  8660  03EF  1003               	clrc
  8661  03F0                     L4:	
  8662  03F0  0DFB               	rlf	___fladd@grs,f
  8663  03F1  087A               	movf	___fladd@bexp,w
  8664  03F2  1903               	btfsc	3,2
  8665  03F3  2BF6               	goto	i1l3084
  8666  03F4  3001               	movlw	1
  8667  03F5  02FA               	subwf	___fladd@bexp,f
  8668  03F6                     i1l3084:	
  8669  03F6  1FF2               	btfss	___fladd@b+2,7
  8670  03F7  2BE2               	goto	i1l3070
  8671  03F8                     i1l3086:	
  8672  03F8  01F9               	clrf	___fladd@aexp
  8673  03F9  1FFB               	btfss	___fladd@grs,7
  8674  03FA  2C03               	goto	i1l3096
  8675  03FB  087B               	movf	___fladd@grs,w
  8676  03FC  397F               	andlw	127
  8677  03FD  1903               	btfsc	3,2
  8678  03FE  1870               	btfsc	___fladd@b,0
  8679  03FF  2C01               	goto	i1l3092
  8680  0400  2C03               	goto	i1l3096
  8681  0401                     i1l3092:	
  8682  0401  01F9               	clrf	___fladd@aexp
  8683  0402  0AF9               	incf	___fladd@aexp,f
  8684  0403                     i1l3096:	
  8685  0403  0879               	movf	___fladd@aexp,w
  8686  0404  1903               	btfsc	3,2
  8687  0405  2C30               	goto	i1l836
  8688  0406  3001               	movlw	1
  8689  0407  07F0               	addwf	___fladd@b,f
  8690  0408  3000               	movlw	0
  8691  0409  3DF1               	addwfc	___fladd@b+1,f
  8692  040A  3000               	movlw	0
  8693  040B  3DF2               	addwfc	___fladd@b+2,f
  8694  040C  3000               	movlw	0
  8695  040D  3DF3               	addwfc	___fladd@b+3,f
  8696  040E  1C73               	btfss	___fladd@b+3,0
  8697  040F  2C30               	goto	i1l836
  8698  0410  0870               	movf	___fladd@b,w
  8699  0411  0020               	movlb	0	; select bank0
  8700  0412  00A0               	movwf	??___fladd
  8701  0413  0871               	movf	___fladd@b+1,w
  8702  0414  00A1               	movwf	??___fladd+1
  8703  0415  0872               	movf	___fladd@b+2,w
  8704  0416  00A2               	movwf	??___fladd+2
  8705  0417  0873               	movf	___fladd@b+3,w
  8706  0418  00A3               	movwf	??___fladd+3
  8707  0419  3001               	movlw	1
  8708  041A  00A4               	movwf	??___fladd+4
  8709  041B                     u398_25:	
  8710  041B  37A3               	asrf	??___fladd+3,f
  8711  041C  0CA2               	rrf	??___fladd+2,f
  8712  041D  0CA1               	rrf	??___fladd+1,f
  8713  041E  0CA0               	rrf	??___fladd,f
  8714  041F  0BA4               	decfsz	??___fladd+4,f
  8715  0420  2C1B               	goto	u398_25
  8716  0421  0823               	movf	??___fladd+3,w
  8717  0422  00F3               	movwf	___fladd@b+3
  8718  0423  0822               	movf	??___fladd+2,w
  8719  0424  00F2               	movwf	___fladd@b+2
  8720  0425  0821               	movf	??___fladd+1,w
  8721  0426  00F1               	movwf	___fladd@b+1
  8722  0427  0820               	movf	??___fladd,w
  8723  0428  00F0               	movwf	___fladd@b
  8724  0429  0A7A               	incf	___fladd@bexp,w
  8725  042A  1903               	btfsc	3,2
  8726  042B  2C30               	goto	i1l836
  8727  042C  3001               	movlw	1
  8728  042D  00A0               	movwf	??___fladd
  8729  042E  0820               	movf	??___fladd,w
  8730  042F  07FA               	addwf	___fladd@bexp,f
  8731  0430                     i1l836:	
  8732  0430  0A7A               	incf	___fladd@bexp,w
  8733  0431  1D03               	btfss	3,2
  8734  0432  087A               	movf	___fladd@bexp,w
  8735  0433  1D03               	btfss	3,2
  8736  0434  2C40               	goto	i1l3114
  8737  0435  3000               	movlw	0
  8738  0436  00F3               	movwf	___fladd@b+3
  8739  0437  3000               	movlw	0
  8740  0438  00F2               	movwf	___fladd@b+2
  8741  0439  3000               	movlw	0
  8742  043A  00F1               	movwf	___fladd@b+1
  8743  043B  3000               	movlw	0
  8744  043C  00F0               	movwf	___fladd@b
  8745  043D  087A               	movf	___fladd@bexp,w
  8746  043E  1903               	btfsc	3,2
  8747  043F  01F8               	clrf	___fladd@signs
  8748  0440                     i1l3114:	
  8749  0440  1C7A               	btfss	___fladd@bexp,0
  8750  0441  2C44               	goto	i1l3118
  8751  0442  17F2               	bsf	___fladd@b+2,7
  8752  0443  2C49               	goto	i1l844
  8753  0444                     i1l3118:	
  8754  0444  307F               	movlw	127
  8755  0445  0020               	movlb	0	; select bank0
  8756  0446  00A0               	movwf	??___fladd
  8757  0447  0820               	movf	??___fladd,w
  8758  0448  05F2               	andwf	___fladd@b+2,f
  8759  0449                     i1l844:	
  8760  0449  367A               	lsrf	___fladd@bexp,w
  8761  044A  0020               	movlb	0	; select bank0
  8762  044B  00A0               	movwf	??___fladd
  8763  044C  0820               	movf	??___fladd,w
  8764  044D  00F3               	movwf	___fladd@b+3
  8765  044E  1FF8               	btfss	___fladd@signs,7
  8766  044F  0008               	return
  8767  0450  17F3               	bsf	___fladd@b+3,7
  8768  0451  0008               	return
  8769  0452                     __end_of___fladd:	
  8770                           
  8771                           	psect	text36
  8772  1789                     __ptext36:	
  8773 ;; *************** function _PIN_MANAGER_IOC *****************
  8774 ;; Defined at:
  8775 ;;		line 74 in file "mcc_generated_files/pin_manager.c"
  8776 ;; Parameters:    Size  Location     Type
  8777 ;;		None
  8778 ;; Auto vars:     Size  Location     Type
  8779 ;;		None
  8780 ;; Return value:  Size  Location     Type
  8781 ;;                  1    wreg      void 
  8782 ;; Registers used:
  8783 ;;		wreg, status,2, status,0, pclath, cstack
  8784 ;; Tracked objects:
  8785 ;;		On entry : 0/0
  8786 ;;		On exit  : 0/0
  8787 ;;		Unchanged: 0/0
  8788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8793 ;;Total ram usage:        0 bytes
  8794 ;; Hardware stack levels used:    1
  8795 ;; Hardware stack levels required when called:    4
  8796 ;; This function calls:
  8797 ;;		_IOCCF7_ISR
  8798 ;; This function is called by:
  8799 ;;		_INTERRUPT_InterruptManager
  8800 ;; This function uses a non-reentrant model
  8801 ;;
  8802                           
  8803                           
  8804                           ;psect for function _PIN_MANAGER_IOC
  8805  1789                     _PIN_MANAGER_IOC:	
  8806                           
  8807                           ;mcc_generated_files/pin_manager.c: 77:     if(IOCCFbits.IOCCF7 == 1)
  8808                           
  8809                           ;incstack = 0
  8810                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
  8811  1789  0027               	movlb	7	; select bank7
  8812  178A  1F99               	btfss	25,7	;volatile
  8813  178B  0008               	return
  8814                           
  8815                           ;mcc_generated_files/pin_manager.c: 78:     {;mcc_generated_files/pin_manager.c: 79:    
      +                               IOCCF7_ISR();
  8816  178C  3197  27F3         	fcall	_IOCCF7_ISR
  8817  178E  0008               	return
  8818  178F                     __end_of_PIN_MANAGER_IOC:	
  8819                           
  8820                           	psect	text37
  8821  17F3                     __ptext37:	
  8822 ;; *************** function _IOCCF7_ISR *****************
  8823 ;; Defined at:
  8824 ;;		line 86 in file "mcc_generated_files/pin_manager.c"
  8825 ;; Parameters:    Size  Location     Type
  8826 ;;		None
  8827 ;; Auto vars:     Size  Location     Type
  8828 ;;		None
  8829 ;; Return value:  Size  Location     Type
  8830 ;;                  1    wreg      void 
  8831 ;; Registers used:
  8832 ;;		wreg, status,2, status,0, pclath, cstack
  8833 ;; Tracked objects:
  8834 ;;		On entry : 0/0
  8835 ;;		On exit  : 0/0
  8836 ;;		Unchanged: 0/0
  8837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8842 ;;Total ram usage:        0 bytes
  8843 ;; Hardware stack levels used:    1
  8844 ;; Hardware stack levels required when called:    3
  8845 ;; This function calls:
  8846 ;;		Absolute function
  8847 ;;		_IOCCF7_DefaultInterruptHandler
  8848 ;;		_speedCalc
  8849 ;; This function is called by:
  8850 ;;		_PIN_MANAGER_IOC
  8851 ;; This function uses a non-reentrant model
  8852 ;;
  8853                           
  8854                           
  8855                           ;psect for function _IOCCF7_ISR
  8856  17F3                     _IOCCF7_ISR:	
  8857                           
  8858                           ;mcc_generated_files/pin_manager.c: 91:     if(IOCCF7_InterruptHandler)
  8859                           
  8860                           ;incstack = 0
  8861                           ; Regs used in _IOCCF7_ISR: [wreg+status,2+status,0+pclath+cstack]
  8862  17F3  0020               	movlb	0	; select bank0
  8863  17F4  086D               	movf	_IOCCF7_InterruptHandler,w
  8864  17F5  046E               	iorwf	_IOCCF7_InterruptHandler+1,w
  8865  17F6  1903               	btfsc	3,2
  8866  17F7  2FFD               	goto	i1l3202
  8867                           
  8868                           ;mcc_generated_files/pin_manager.c: 92:     {;mcc_generated_files/pin_manager.c: 93:    
      +                               IOCCF7_InterruptHandler();
  8869  17F8  086E               	movf	_IOCCF7_InterruptHandler+1,w
  8870  17F9  008A               	movwf	10
  8871  17FA  086D               	movf	_IOCCF7_InterruptHandler,w
  8872  17FB  000A               	callw
  8873  17FC  3197               	pagesel	$
  8874  17FD                     i1l3202:	
  8875                           
  8876                           ;mcc_generated_files/pin_manager.c: 95:     IOCCFbits.IOCCF7 = 0;
  8877  17FD  0027               	movlb	7	; select bank7
  8878  17FE  1399               	bcf	25,7	;volatile
  8879  17FF  0008               	return
  8880  1800                     __end_of_IOCCF7_ISR:	
  8881                           
  8882                           	psect	text38
  8883  07FD                     __ptext38:	
  8884 ;; *************** function _IOCCF7_DefaultInterruptHandler *****************
  8885 ;; Defined at:
  8886 ;;		line 108 in file "mcc_generated_files/pin_manager.c"
  8887 ;; Parameters:    Size  Location     Type
  8888 ;;		None
  8889 ;; Auto vars:     Size  Location     Type
  8890 ;;		None
  8891 ;; Return value:  Size  Location     Type
  8892 ;;                  1    wreg      void 
  8893 ;; Registers used:
  8894 ;;		None
  8895 ;; Tracked objects:
  8896 ;;		On entry : 0/0
  8897 ;;		On exit  : 0/0
  8898 ;;		Unchanged: 0/0
  8899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8904 ;;Total ram usage:        0 bytes
  8905 ;; Hardware stack levels used:    1
  8906 ;; This function calls:
  8907 ;;		Nothing
  8908 ;; This function is called by:
  8909 ;;		_PIN_MANAGER_Initialize
  8910 ;;		_IOCCF7_ISR
  8911 ;; This function uses a non-reentrant model
  8912 ;;
  8913                           
  8914                           
  8915                           ;psect for function _IOCCF7_DefaultInterruptHandler
  8916  07FD                     _IOCCF7_DefaultInterruptHandler:	
  8917                           
  8918                           ;incstack = 0
  8919                           ; Regs used in _IOCCF7_DefaultInterruptHandler: []
  8920  07FD  0008               	return
  8921  07FE                     __end_of_IOCCF7_DefaultInterruptHandler:	
  8922                           
  8923                           	psect	text39
  8924  0E25                     __ptext39:	
  8925 ;; *************** function _speedCalc *****************
  8926 ;; Defined at:
  8927 ;;		line 100 in file "main.c"
  8928 ;; Parameters:    Size  Location     Type
  8929 ;;		None
  8930 ;; Auto vars:     Size  Location     Type
  8931 ;;		None
  8932 ;; Return value:  Size  Location     Type
  8933 ;;                  1    wreg      void 
  8934 ;; Registers used:
  8935 ;;		wreg, status,2, status,0, pclath, cstack
  8936 ;; Tracked objects:
  8937 ;;		On entry : 0/0
  8938 ;;		On exit  : 0/0
  8939 ;;		Unchanged: 0/0
  8940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8942 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8944 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8945 ;;Total ram usage:        4 bytes
  8946 ;; Hardware stack levels used:    1
  8947 ;; Hardware stack levels required when called:    2
  8948 ;; This function calls:
  8949 ;;		___awdiv
  8950 ;;		___awmod
  8951 ;;		___fldiv
  8952 ;;		___flmul
  8953 ;;		i1___fltol
  8954 ;; This function is called by:
  8955 ;;		_main
  8956 ;;		_IOCCF7_ISR
  8957 ;; This function uses a non-reentrant model
  8958 ;;
  8959                           
  8960                           
  8961                           ;psect for function _speedCalc
  8962  0E25                     _speedCalc:	
  8963                           
  8964                           ;main.c: 103:     rpm = ( ( 1000 / counter ) * 60 ) ;
  8965                           
  8966                           ;incstack = 0
  8967                           ; Regs used in _speedCalc: [wreg+status,2+status,0+pclath+cstack]
  8968  0E25  3042               	movlw	66
  8969  0E26  0020               	movlb	0	; select bank0
  8970  0E27  00B0               	movwf	___flmul@b+3
  8971  0E28  3070               	movlw	112
  8972  0E29  00AF               	movwf	___flmul@b+2
  8973  0E2A  3000               	movlw	0
  8974  0E2B  00AE               	movwf	___flmul@b+1
  8975  0E2C  3000               	movlw	0
  8976  0E2D  00AD               	movwf	___flmul@b
  8977  0E2E  0022               	movlb	2	; select bank2
  8978  0E2F  0857               	movf	(_counter+3)^(0+256),w	;volatile
  8979  0E30  00F3               	movwf	___fldiv@a+3
  8980  0E31  0856               	movf	(_counter+2)^(0+256),w	;volatile
  8981  0E32  00F2               	movwf	___fldiv@a+2
  8982  0E33  0855               	movf	(_counter+1)^(0+256),w	;volatile
  8983  0E34  00F1               	movwf	___fldiv@a+1
  8984  0E35  0854               	movf	_counter^(0+256),w	;volatile
  8985  0E36  00F0               	movwf	___fldiv@a
  8986  0E37  3044               	movlw	68
  8987  0E38  00F7               	movwf	___fldiv@b+3
  8988  0E39  307A               	movlw	122
  8989  0E3A  00F6               	movwf	___fldiv@b+2
  8990  0E3B  3000               	movlw	0
  8991  0E3C  00F5               	movwf	___fldiv@b+1
  8992  0E3D  3000               	movlw	0
  8993  0E3E  00F4               	movwf	___fldiv@b
  8994  0E3F  3184  2452  318E   	fcall	___fldiv
  8995  0E42  0873               	movf	?___fldiv+3,w
  8996  0E43  0020               	movlb	0	; select bank0
  8997  0E44  00B4               	movwf	___flmul@a+3
  8998  0E45  0872               	movf	?___fldiv+2,w
  8999  0E46  00B3               	movwf	___flmul@a+2
  9000  0E47  0871               	movf	?___fldiv+1,w
  9001  0E48  00B2               	movwf	___flmul@a+1
  9002  0E49  0870               	movf	?___fldiv,w
  9003  0E4A  00B1               	movwf	___flmul@a
  9004  0E4B  3180  203D  318E   	fcall	___flmul
  9005  0E4E  0020               	movlb	0	; select bank0
  9006  0E4F  0830               	movf	?___flmul+3,w
  9007  0E50  00EC               	movwf	_rpm+3	;volatile
  9008  0E51  082F               	movf	?___flmul+2,w
  9009  0E52  00EB               	movwf	_rpm+2	;volatile
  9010  0E53  082E               	movf	?___flmul+1,w
  9011  0E54  00EA               	movwf	_rpm+1	;volatile
  9012  0E55  082D               	movf	?___flmul,w
  9013  0E56  00E9               	movwf	_rpm	;volatile
  9014                           
  9015                           ;main.c: 105:     speed = 2 * rpm * (0.06) ;
  9016  0E57  3040               	movlw	64
  9017  0E58  00B0               	movwf	___flmul@b+3
  9018  0E59  3000               	movlw	0
  9019  0E5A  00AF               	movwf	___flmul@b+2
  9020  0E5B  3000               	movlw	0
  9021  0E5C  00AE               	movwf	___flmul@b+1
  9022  0E5D  3000               	movlw	0
  9023  0E5E  00AD               	movwf	___flmul@b
  9024  0E5F  086C               	movf	_rpm+3,w	;volatile
  9025  0E60  00B4               	movwf	___flmul@a+3
  9026  0E61  086B               	movf	_rpm+2,w	;volatile
  9027  0E62  00B3               	movwf	___flmul@a+2
  9028  0E63  086A               	movf	_rpm+1,w	;volatile
  9029  0E64  00B2               	movwf	___flmul@a+1
  9030  0E65  0869               	movf	_rpm,w	;volatile
  9031  0E66  00B1               	movwf	___flmul@a
  9032  0E67  3180  203D  318E   	fcall	___flmul
  9033  0E6A  0020               	movlb	0	; select bank0
  9034  0E6B  0830               	movf	?___flmul+3,w
  9035  0E6C  00DB               	movwf	_speedCalc$1219+3
  9036  0E6D  082F               	movf	?___flmul+2,w
  9037  0E6E  00DA               	movwf	_speedCalc$1219+2
  9038  0E6F  082E               	movf	?___flmul+1,w
  9039  0E70  00D9               	movwf	_speedCalc$1219+1
  9040  0E71  082D               	movf	?___flmul,w
  9041  0E72  00D8               	movwf	_speedCalc$1219
  9042                           
  9043                           ;main.c: 105:     speed = 2 * rpm * (0.06) ;
  9044  0E73  303D               	movlw	61
  9045  0E74  00B0               	movwf	___flmul@b+3
  9046  0E75  3075               	movlw	117
  9047  0E76  00AF               	movwf	___flmul@b+2
  9048  0E77  30C2               	movlw	194
  9049  0E78  00AE               	movwf	___flmul@b+1
  9050  0E79  308F               	movlw	143
  9051  0E7A  00AD               	movwf	___flmul@b
  9052  0E7B  085B               	movf	_speedCalc$1219+3,w
  9053  0E7C  00B4               	movwf	___flmul@a+3
  9054  0E7D  085A               	movf	_speedCalc$1219+2,w
  9055  0E7E  00B3               	movwf	___flmul@a+2
  9056  0E7F  0859               	movf	_speedCalc$1219+1,w
  9057  0E80  00B2               	movwf	___flmul@a+1
  9058  0E81  0858               	movf	_speedCalc$1219,w
  9059  0E82  00B1               	movwf	___flmul@a
  9060  0E83  3180  203D  318E   	fcall	___flmul
  9061  0E86  0020               	movlb	0	; select bank0
  9062  0E87  0830               	movf	?___flmul+3,w
  9063  0E88  00DF               	movwf	_speed+3	;volatile
  9064  0E89  082F               	movf	?___flmul+2,w
  9065  0E8A  00DE               	movwf	_speed+2	;volatile
  9066  0E8B  082E               	movf	?___flmul+1,w
  9067  0E8C  00DD               	movwf	_speed+1	;volatile
  9068  0E8D  082D               	movf	?___flmul,w
  9069  0E8E  00DC               	movwf	_speed	;volatile
  9070                           
  9071                           ;main.c: 108:     speedHi = speed ;
  9072  0E8F  085F               	movf	_speed+3,w	;volatile
  9073  0E90  00CA               	movwf	i1___fltol@f1+3
  9074  0E91  085E               	movf	_speed+2,w	;volatile
  9075  0E92  00C9               	movwf	i1___fltol@f1+2
  9076  0E93  085D               	movf	_speed+1,w	;volatile
  9077  0E94  00C8               	movwf	i1___fltol@f1+1
  9078  0E95  085C               	movf	_speed,w	;volatile
  9079  0E96  00C7               	movwf	i1___fltol@f1
  9080  0E97  318B  232F  318E   	fcall	i1___fltol
  9081  0E9A  0020               	movlb	0	; select bank0
  9082  0E9B  0848               	movf	?i1___fltol+1,w
  9083  0E9C  0022               	movlb	2	; select bank2
  9084  0E9D  00CD               	movwf	(_speedHi+1)^(0+256)	;volatile
  9085  0E9E  0020               	movlb	0	; select bank0
  9086  0E9F  0847               	movf	?i1___fltol,w
  9087  0EA0  0022               	movlb	2	; select bank2
  9088  0EA1  00CC               	movwf	_speedHi^(0+256)	;volatile
  9089                           
  9090                           ;main.c: 109:     speedLo = ( (int)(speed*10.0) % 10 ) ;
  9091  0EA2  300A               	movlw	10
  9092  0EA3  0020               	movlb	0	; select bank0
  9093  0EA4  00D2               	movwf	___awmod@divisor
  9094  0EA5  3000               	movlw	0
  9095  0EA6  00D3               	movwf	___awmod@divisor+1
  9096  0EA7  085F               	movf	_speed+3,w	;volatile
  9097  0EA8  00B4               	movwf	___flmul@a+3
  9098  0EA9  085E               	movf	_speed+2,w	;volatile
  9099  0EAA  00B3               	movwf	___flmul@a+2
  9100  0EAB  085D               	movf	_speed+1,w	;volatile
  9101  0EAC  00B2               	movwf	___flmul@a+1
  9102  0EAD  085C               	movf	_speed,w	;volatile
  9103  0EAE  00B1               	movwf	___flmul@a
  9104  0EAF  3041               	movlw	65
  9105  0EB0  00B0               	movwf	___flmul@b+3
  9106  0EB1  3020               	movlw	32
  9107  0EB2  00AF               	movwf	___flmul@b+2
  9108  0EB3  3000               	movlw	0
  9109  0EB4  00AE               	movwf	___flmul@b+1
  9110  0EB5  3000               	movlw	0
  9111  0EB6  00AD               	movwf	___flmul@b
  9112  0EB7  3180  203D  318E   	fcall	___flmul
  9113  0EBA  0020               	movlb	0	; select bank0
  9114  0EBB  0830               	movf	?___flmul+3,w
  9115  0EBC  00CA               	movwf	i1___fltol@f1+3
  9116  0EBD  082F               	movf	?___flmul+2,w
  9117  0EBE  00C9               	movwf	i1___fltol@f1+2
  9118  0EBF  082E               	movf	?___flmul+1,w
  9119  0EC0  00C8               	movwf	i1___fltol@f1+1
  9120  0EC1  082D               	movf	?___flmul,w
  9121  0EC2  00C7               	movwf	i1___fltol@f1
  9122  0EC3  318B  232F  318E   	fcall	i1___fltol
  9123  0EC6  0020               	movlb	0	; select bank0
  9124  0EC7  0848               	movf	?i1___fltol+1,w
  9125  0EC8  00D5               	movwf	___awmod@dividend+1
  9126  0EC9  0847               	movf	?i1___fltol,w
  9127  0ECA  00D4               	movwf	___awmod@dividend
  9128  0ECB  318A  2242  318E   	fcall	___awmod
  9129  0ECE  0020               	movlb	0	; select bank0
  9130  0ECF  0853               	movf	?___awmod+1,w
  9131  0ED0  0022               	movlb	2	; select bank2
  9132  0ED1  00CF               	movwf	(_speedLo+1)^(0+256)	;volatile
  9133  0ED2  0020               	movlb	0	; select bank0
  9134  0ED3  0852               	movf	?___awmod,w
  9135  0ED4  0022               	movlb	2	; select bank2
  9136  0ED5  00CE               	movwf	_speedLo^(0+256)	;volatile
  9137                           
  9138                           ;main.c: 112:     counter = 0 ;
  9139  0ED6  3000               	movlw	0
  9140  0ED7  00D7               	movwf	(_counter+3)^(0+256)	;volatile
  9141  0ED8  3000               	movlw	0
  9142  0ED9  00D6               	movwf	(_counter+2)^(0+256)	;volatile
  9143  0EDA  3000               	movlw	0
  9144  0EDB  00D5               	movwf	(_counter+1)^(0+256)	;volatile
  9145  0EDC  3000               	movlw	0
  9146  0EDD  00D4               	movwf	_counter^(0+256)	;volatile
  9147                           
  9148                           ;main.c: 113:     distance = distance + 2 ;
  9149  0EDE  0020               	movlb	0	; select bank0
  9150  0EDF  0866               	movf	_distance,w	;volatile
  9151  0EE0  3E02               	addlw	2
  9152  0EE1  00E6               	movwf	_distance	;volatile
  9153  0EE2  3000               	movlw	0
  9154  0EE3  3D67               	addwfc	_distance+1,w	;volatile
  9155  0EE4  00E7               	movwf	_distance+1	;volatile
  9156                           
  9157                           ;main.c: 115:     distLo = distance % 1000 ;
  9158  0EE5  30E8               	movlw	232
  9159  0EE6  00D2               	movwf	___awmod@divisor
  9160  0EE7  3003               	movlw	3
  9161  0EE8  00D3               	movwf	___awmod@divisor+1
  9162  0EE9  0867               	movf	_distance+1,w	;volatile
  9163  0EEA  00D5               	movwf	___awmod@dividend+1
  9164  0EEB  0866               	movf	_distance,w	;volatile
  9165  0EEC  00D4               	movwf	___awmod@dividend
  9166  0EED  318A  2242  318E   	fcall	___awmod
  9167  0EF0  0020               	movlb	0	; select bank0
  9168  0EF1  0853               	movf	?___awmod+1,w
  9169  0EF2  0022               	movlb	2	; select bank2
  9170  0EF3  00D1               	movwf	(_distLo+1)^(0+256)	;volatile
  9171  0EF4  0020               	movlb	0	; select bank0
  9172  0EF5  0852               	movf	?___awmod,w
  9173  0EF6  0022               	movlb	2	; select bank2
  9174  0EF7  00D0               	movwf	_distLo^(0+256)	;volatile
  9175                           
  9176                           ;main.c: 116:     distHi = distance / 1000 ;
  9177  0EF8  30E8               	movlw	232
  9178  0EF9  00F0               	movwf	___awdiv@divisor
  9179  0EFA  3003               	movlw	3
  9180  0EFB  00F1               	movwf	___awdiv@divisor+1
  9181  0EFC  0020               	movlb	0	; select bank0
  9182  0EFD  0867               	movf	_distance+1,w	;volatile
  9183  0EFE  00F3               	movwf	___awdiv@dividend+1
  9184  0EFF  0866               	movf	_distance,w	;volatile
  9185  0F00  00F2               	movwf	___awdiv@dividend
  9186  0F01  318A  2288         	fcall	___awdiv
  9187  0F03  0871               	movf	?___awdiv+1,w
  9188  0F04  0022               	movlb	2	; select bank2
  9189  0F05  00D3               	movwf	(_distHi+1)^(0+256)	;volatile
  9190  0F06  0870               	movf	?___awdiv,w
  9191  0F07  00D2               	movwf	_distHi^(0+256)	;volatile
  9192  0F08  0008               	return
  9193  0F09                     __end_of_speedCalc:	
  9194                           
  9195                           	psect	text40
  9196  0B2F                     __ptext40:	
  9197 ;; *************** function i1___fltol *****************
  9198 ;; Defined at:
  9199 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
  9200 ;; Parameters:    Size  Location     Type
  9201 ;;  f1              4   39[BANK0 ] void 
  9202 ;; Auto vars:     Size  Location     Type
  9203 ;;  __fltol         1   49[BANK0 ] unsigned char 
  9204 ;;  __fltol         1   48[BANK0 ] unsigned char 
  9205 ;; Return value:  Size  Location     Type
  9206 ;;                  4   39[BANK0 ] long 
  9207 ;; Registers used:
  9208 ;;		wreg, status,2, status,0
  9209 ;; Tracked objects:
  9210 ;;		On entry : 0/0
  9211 ;;		On exit  : 0/0
  9212 ;;		Unchanged: 0/0
  9213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9214 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9215 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9216 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9217 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9218 ;;Total ram usage:       11 bytes
  9219 ;; Hardware stack levels used:    1
  9220 ;; This function calls:
  9221 ;;		Nothing
  9222 ;; This function is called by:
  9223 ;;		_speedCalc
  9224 ;; This function uses a non-reentrant model
  9225 ;;
  9226                           
  9227                           
  9228                           ;psect for function i1___fltol
  9229  0B2F                     i1___fltol:	
  9230                           
  9231                           ;incstack = 0
  9232                           ; Regs used in i1___fltol: [wreg+status,2+status,0]
  9233  0B2F  1003               	clrc
  9234  0B30  0020               	movlb	0	; select bank0
  9235  0B31  0D49               	rlf	i1___fltol@f1+2,w
  9236  0B32  0D4A               	rlf	i1___fltol@f1+3,w
  9237  0B33  00CB               	movwf	??i1___fltol
  9238  0B34  084B               	movf	??i1___fltol,w
  9239  0B35  00D1               	movwf	i1___fltol@exp1
  9240  0B36  0851               	movf	i1___fltol@exp1,w
  9241  0B37  1D03               	btfss	3,2
  9242  0B38  2B42               	goto	i1l2836
  9243  0B39                     i1l2832:	
  9244  0B39  3000               	movlw	0
  9245  0B3A  00CA               	movwf	?i1___fltol+3
  9246  0B3B  3000               	movlw	0
  9247  0B3C  00C9               	movwf	?i1___fltol+2
  9248  0B3D  3000               	movlw	0
  9249  0B3E  00C8               	movwf	?i1___fltol+1
  9250  0B3F  3000               	movlw	0
  9251  0B40  00C7               	movwf	?i1___fltol
  9252  0B41  0008               	return
  9253  0B42                     i1l2836:	
  9254  0B42  0847               	movf	i1___fltol@f1,w
  9255  0B43  00CB               	movwf	??i1___fltol
  9256  0B44  0848               	movf	i1___fltol@f1+1,w
  9257  0B45  00CC               	movwf	??i1___fltol+1
  9258  0B46  0849               	movf	i1___fltol@f1+2,w
  9259  0B47  00CD               	movwf	??i1___fltol+2
  9260  0B48  084A               	movf	i1___fltol@f1+3,w
  9261  0B49  00CE               	movwf	??i1___fltol+3
  9262  0B4A  301F               	movlw	31
  9263  0B4B                     u349_25:	
  9264  0B4B  36CE               	lsrf	??i1___fltol+3,f
  9265  0B4C  0CCD               	rrf	??i1___fltol+2,f
  9266  0B4D  0CCC               	rrf	??i1___fltol+1,f
  9267  0B4E  0CCB               	rrf	??i1___fltol,f
  9268  0B4F  0B89               	decfsz	9,f
  9269  0B50  2B4B               	goto	u349_25
  9270  0B51  084B               	movf	??i1___fltol,w
  9271  0B52  00CF               	movwf	??i1___fltol+4
  9272  0B53  084F               	movf	??i1___fltol+4,w
  9273  0B54  00D0               	movwf	i1___fltol@sign1
  9274  0B55  17C9               	bsf	i1___fltol@f1+2,7
  9275  0B56  30FF               	movlw	255
  9276  0B57  05C7               	andwf	i1___fltol@f1,f
  9277  0B58  30FF               	movlw	255
  9278  0B59  05C8               	andwf	i1___fltol@f1+1,f
  9279  0B5A  30FF               	movlw	255
  9280  0B5B  05C9               	andwf	i1___fltol@f1+2,f
  9281  0B5C  3000               	movlw	0
  9282  0B5D  05CA               	andwf	i1___fltol@f1+3,f
  9283  0B5E  3096               	movlw	150
  9284  0B5F  02D1               	subwf	i1___fltol@exp1,f
  9285  0B60  1FD1               	btfss	i1___fltol@exp1,7
  9286  0B61  2B75               	goto	i1l2854
  9287  0B62  0851               	movf	i1___fltol@exp1,w
  9288  0B63  3A80               	xorlw	128
  9289  0B64  3E97               	addlw	151
  9290  0B65  1C03               	btfss	3,0
  9291  0B66  2B39               	goto	i1l2832
  9292  0B67                     i1l2852:	
  9293  0B67  3001               	movlw	1
  9294  0B68                     u352_25:	
  9295  0B68  36CA               	lsrf	i1___fltol@f1+3,f
  9296  0B69  0CC9               	rrf	i1___fltol@f1+2,f
  9297  0B6A  0CC8               	rrf	i1___fltol@f1+1,f
  9298  0B6B  0CC7               	rrf	i1___fltol@f1,f
  9299  0B6C  0B89               	decfsz	9,f
  9300  0B6D  2B68               	goto	u352_25
  9301  0B6E  3001               	movlw	1
  9302  0B6F  00CB               	movwf	??i1___fltol
  9303  0B70  084B               	movf	??i1___fltol,w
  9304  0B71  07D1               	addwf	i1___fltol@exp1,f
  9305  0B72  1903               	btfsc	3,2
  9306  0B73  2B86               	goto	i1l2862
  9307  0B74  2B67               	goto	i1l2852
  9308  0B75                     i1l2854:	
  9309  0B75  3020               	movlw	32
  9310  0B76  0251               	subwf	i1___fltol@exp1,w
  9311  0B77  1803               	btfsc	3,0
  9312  0B78  2B39               	goto	i1l2832
  9313  0B79                     i1l702:	
  9314  0B79  0851               	movf	i1___fltol@exp1,w
  9315  0B7A  1903               	btfsc	3,2
  9316  0B7B  2B86               	goto	i1l2862
  9317  0B7C  3001               	movlw	1
  9318  0B7D                     u355_25:	
  9319  0B7D  35C7               	lslf	i1___fltol@f1,f
  9320  0B7E  0DC8               	rlf	i1___fltol@f1+1,f
  9321  0B7F  0DC9               	rlf	i1___fltol@f1+2,f
  9322  0B80  0DCA               	rlf	i1___fltol@f1+3,f
  9323  0B81  0B89               	decfsz	9,f
  9324  0B82  2B7D               	goto	u355_25
  9325  0B83  3001               	movlw	1
  9326  0B84  02D1               	subwf	i1___fltol@exp1,f
  9327  0B85  2B79               	goto	i1l702
  9328  0B86                     i1l2862:	
  9329  0B86  0850               	movf	i1___fltol@sign1,w
  9330  0B87  1903               	btfsc	3,2
  9331  0B88  0008               	return
  9332  0B89  09C7               	comf	i1___fltol@f1,f
  9333  0B8A  09C8               	comf	i1___fltol@f1+1,f
  9334  0B8B  09C9               	comf	i1___fltol@f1+2,f
  9335  0B8C  09CA               	comf	i1___fltol@f1+3,f
  9336  0B8D  0AC7               	incf	i1___fltol@f1,f
  9337  0B8E  1903               	skipnz
  9338  0B8F  0AC8               	incf	i1___fltol@f1+1,f
  9339  0B90  1903               	skipnz
  9340  0B91  0AC9               	incf	i1___fltol@f1+2,f
  9341  0B92  1903               	skipnz
  9342  0B93  0ACA               	incf	i1___fltol@f1+3,f
  9343  0B94  0008               	return
  9344  0B95                     __end_ofi1___fltol:	
  9345                           
  9346                           	psect	text41
  9347  003D                     __ptext41:	
  9348 ;; *************** function ___flmul *****************
  9349 ;; Defined at:
  9350 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
  9351 ;; Parameters:    Size  Location     Type
  9352 ;;  b               4   13[BANK0 ] long 
  9353 ;;  a               4   17[BANK0 ] long 
  9354 ;; Auto vars:     Size  Location     Type
  9355 ;;  prod            4   33[BANK0 ] struct .
  9356 ;;  grs             4   27[BANK0 ] unsigned long 
  9357 ;;  temp            2   37[BANK0 ] struct .
  9358 ;;  bexp            1   32[BANK0 ] unsigned char 
  9359 ;;  aexp            1   31[BANK0 ] unsigned char 
  9360 ;;  sign            1   26[BANK0 ] unsigned char 
  9361 ;; Return value:  Size  Location     Type
  9362 ;;                  4   13[BANK0 ] unsigned char 
  9363 ;; Registers used:
  9364 ;;		wreg, status,2, status,0, pclath, cstack
  9365 ;; Tracked objects:
  9366 ;;		On entry : 0/0
  9367 ;;		On exit  : 0/0
  9368 ;;		Unchanged: 0/0
  9369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9370 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9371 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9372 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9373 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9374 ;;Total ram usage:       26 bytes
  9375 ;; Hardware stack levels used:    1
  9376 ;; Hardware stack levels required when called:    1
  9377 ;; This function calls:
  9378 ;;		__Umul8_16
  9379 ;; This function is called by:
  9380 ;;		_speedCalc
  9381 ;; This function uses a non-reentrant model
  9382 ;;
  9383                           
  9384                           
  9385                           ;psect for function ___flmul
  9386  003D                     ___flmul:	
  9387                           
  9388                           ;incstack = 0
  9389                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  9390  003D  0020               	movlb	0	; select bank0
  9391  003E  0830               	movf	___flmul@b+3,w
  9392  003F  3980               	andlw	128
  9393  0040  00B5               	movwf	??___flmul
  9394  0041  0835               	movf	??___flmul,w
  9395  0042  00BA               	movwf	___flmul@sign
  9396  0043  3530               	lslf	___flmul@b+3,w
  9397  0044  00B5               	movwf	??___flmul
  9398  0045  0835               	movf	??___flmul,w
  9399  0046  00C0               	movwf	___flmul@bexp
  9400  0047  1BAF               	btfsc	___flmul@b+2,7
  9401  0048  1440               	bsf	___flmul@bexp,0
  9402  0049  0840               	movf	___flmul@bexp,w
  9403  004A  1903               	btfsc	3,2
  9404  004B  2859               	goto	i1l2706
  9405  004C  0A40               	incf	___flmul@bexp,w
  9406  004D  1D03               	btfss	3,2
  9407  004E  2857               	goto	i1l2704
  9408  004F  3000               	movlw	0
  9409  0050  00B0               	movwf	___flmul@b+3
  9410  0051  3000               	movlw	0
  9411  0052  00AF               	movwf	___flmul@b+2
  9412  0053  3000               	movlw	0
  9413  0054  00AE               	movwf	___flmul@b+1
  9414  0055  3000               	movlw	0
  9415  0056  00AD               	movwf	___flmul@b
  9416  0057                     i1l2704:	
  9417  0057  17AF               	bsf	___flmul@b+2,7
  9418  0058  2861               	goto	i1l2708
  9419  0059                     i1l2706:	
  9420  0059  3000               	movlw	0
  9421  005A  00B0               	movwf	___flmul@b+3
  9422  005B  3000               	movlw	0
  9423  005C  00AF               	movwf	___flmul@b+2
  9424  005D  3000               	movlw	0
  9425  005E  00AE               	movwf	___flmul@b+1
  9426  005F  3000               	movlw	0
  9427  0060  00AD               	movwf	___flmul@b
  9428  0061                     i1l2708:	
  9429  0061  0834               	movf	___flmul@a+3,w
  9430  0062  3980               	andlw	128
  9431  0063  00B5               	movwf	??___flmul
  9432  0064  0835               	movf	??___flmul,w
  9433  0065  06BA               	xorwf	___flmul@sign,f
  9434  0066  3534               	lslf	___flmul@a+3,w
  9435  0067  00B5               	movwf	??___flmul
  9436  0068  0835               	movf	??___flmul,w
  9437  0069  00BF               	movwf	___flmul@aexp
  9438  006A  1BB3               	btfsc	___flmul@a+2,7
  9439  006B  143F               	bsf	___flmul@aexp,0
  9440  006C  083F               	movf	___flmul@aexp,w
  9441  006D  1903               	btfsc	3,2
  9442  006E  287C               	goto	i1l2724
  9443  006F  0A3F               	incf	___flmul@aexp,w
  9444  0070  1D03               	btfss	3,2
  9445  0071  287A               	goto	i1l2722
  9446  0072  3000               	movlw	0
  9447  0073  00B4               	movwf	___flmul@a+3
  9448  0074  3000               	movlw	0
  9449  0075  00B3               	movwf	___flmul@a+2
  9450  0076  3000               	movlw	0
  9451  0077  00B2               	movwf	___flmul@a+1
  9452  0078  3000               	movlw	0
  9453  0079  00B1               	movwf	___flmul@a
  9454  007A                     i1l2722:	
  9455  007A  17B3               	bsf	___flmul@a+2,7
  9456  007B  2884               	goto	i1l2726
  9457  007C                     i1l2724:	
  9458  007C  3000               	movlw	0
  9459  007D  00B4               	movwf	___flmul@a+3
  9460  007E  3000               	movlw	0
  9461  007F  00B3               	movwf	___flmul@a+2
  9462  0080  3000               	movlw	0
  9463  0081  00B2               	movwf	___flmul@a+1
  9464  0082  3000               	movlw	0
  9465  0083  00B1               	movwf	___flmul@a
  9466  0084                     i1l2726:	
  9467  0084  083F               	movf	___flmul@aexp,w
  9468  0085  1D03               	btfss	3,2
  9469  0086  0840               	movf	___flmul@bexp,w
  9470  0087  1D03               	btfss	3,2
  9471  0088  2892               	goto	i1l2734
  9472  0089  3000               	movlw	0
  9473  008A  00B0               	movwf	?___flmul+3
  9474  008B  3000               	movlw	0
  9475  008C  00AF               	movwf	?___flmul+2
  9476  008D  3000               	movlw	0
  9477  008E  00AE               	movwf	?___flmul+1
  9478  008F  3000               	movlw	0
  9479  0090  00AD               	movwf	?___flmul
  9480  0091  0008               	return
  9481  0092                     i1l2734:	
  9482  0092  082D               	movf	___flmul@b,w
  9483  0093  00B5               	movwf	??___flmul
  9484  0094  0835               	movf	??___flmul,w
  9485  0095  00F0               	movwf	__Umul8_16@multiplicand
  9486  0096  0833               	movf	___flmul@a+2,w
  9487  0097  3188  20AE  3180   	fcall	__Umul8_16
  9488  009A  0871               	movf	?__Umul8_16+1,w
  9489  009B  0020               	movlb	0	; select bank0
  9490  009C  00C6               	movwf	___flmul@temp+1
  9491  009D  0870               	movf	?__Umul8_16,w
  9492  009E  00C5               	movwf	___flmul@temp
  9493  009F  0845               	movf	___flmul@temp,w
  9494  00A0  00B5               	movwf	??___flmul
  9495  00A1  01B6               	clrf	??___flmul+1
  9496  00A2  01B7               	clrf	??___flmul+2
  9497  00A3  01B8               	clrf	??___flmul+3
  9498  00A4  0838               	movf	??___flmul+3,w
  9499  00A5  00BE               	movwf	___flmul@grs+3
  9500  00A6  0837               	movf	??___flmul+2,w
  9501  00A7  00BD               	movwf	___flmul@grs+2
  9502  00A8  0836               	movf	??___flmul+1,w
  9503  00A9  00BC               	movwf	___flmul@grs+1
  9504  00AA  0835               	movf	??___flmul,w
  9505  00AB  00BB               	movwf	___flmul@grs
  9506  00AC  0846               	movf	___flmul@temp+1,w
  9507  00AD  00B5               	movwf	??___flmul
  9508  00AE  01B6               	clrf	??___flmul+1
  9509  00AF  01B7               	clrf	??___flmul+2
  9510  00B0  01B8               	clrf	??___flmul+3
  9511  00B1  0838               	movf	??___flmul+3,w
  9512  00B2  00C4               	movwf	___flmul@prod+3
  9513  00B3  0837               	movf	??___flmul+2,w
  9514  00B4  00C3               	movwf	___flmul@prod+2
  9515  00B5  0836               	movf	??___flmul+1,w
  9516  00B6  00C2               	movwf	___flmul@prod+1
  9517  00B7  0835               	movf	??___flmul,w
  9518  00B8  00C1               	movwf	___flmul@prod
  9519  00B9  082E               	movf	___flmul@b+1,w
  9520  00BA  00B5               	movwf	??___flmul
  9521  00BB  0835               	movf	??___flmul,w
  9522  00BC  00F0               	movwf	__Umul8_16@multiplicand
  9523  00BD  0832               	movf	___flmul@a+1,w
  9524  00BE  3188  20AE  3180   	fcall	__Umul8_16
  9525  00C1  0871               	movf	?__Umul8_16+1,w
  9526  00C2  0020               	movlb	0	; select bank0
  9527  00C3  00C6               	movwf	___flmul@temp+1
  9528  00C4  0870               	movf	?__Umul8_16,w
  9529  00C5  00C5               	movwf	___flmul@temp
  9530  00C6  0845               	movf	___flmul@temp,w
  9531  00C7  00B5               	movwf	??___flmul
  9532  00C8  01B6               	clrf	??___flmul+1
  9533  00C9  01B7               	clrf	??___flmul+2
  9534  00CA  01B8               	clrf	??___flmul+3
  9535  00CB  0835               	movf	??___flmul,w
  9536  00CC  07BB               	addwf	___flmul@grs,f
  9537  00CD  0836               	movf	??___flmul+1,w
  9538  00CE  3DBC               	addwfc	___flmul@grs+1,f
  9539  00CF  0837               	movf	??___flmul+2,w
  9540  00D0  3DBD               	addwfc	___flmul@grs+2,f
  9541  00D1  0838               	movf	??___flmul+3,w
  9542  00D2  3DBE               	addwfc	___flmul@grs+3,f
  9543  00D3  0846               	movf	___flmul@temp+1,w
  9544  00D4  00B5               	movwf	??___flmul
  9545  00D5  01B6               	clrf	??___flmul+1
  9546  00D6  01B7               	clrf	??___flmul+2
  9547  00D7  01B8               	clrf	??___flmul+3
  9548  00D8  0835               	movf	??___flmul,w
  9549  00D9  07C1               	addwf	___flmul@prod,f
  9550  00DA  0836               	movf	??___flmul+1,w
  9551  00DB  3DC2               	addwfc	___flmul@prod+1,f
  9552  00DC  0837               	movf	??___flmul+2,w
  9553  00DD  3DC3               	addwfc	___flmul@prod+2,f
  9554  00DE  0838               	movf	??___flmul+3,w
  9555  00DF  3DC4               	addwfc	___flmul@prod+3,f
  9556  00E0  082F               	movf	___flmul@b+2,w
  9557  00E1  00B5               	movwf	??___flmul
  9558  00E2  0835               	movf	??___flmul,w
  9559  00E3  00F0               	movwf	__Umul8_16@multiplicand
  9560  00E4  0831               	movf	___flmul@a,w
  9561  00E5  3188  20AE  3180   	fcall	__Umul8_16
  9562  00E8  0871               	movf	?__Umul8_16+1,w
  9563  00E9  0020               	movlb	0	; select bank0
  9564  00EA  00C6               	movwf	___flmul@temp+1
  9565  00EB  0870               	movf	?__Umul8_16,w
  9566  00EC  00C5               	movwf	___flmul@temp
  9567  00ED  0845               	movf	___flmul@temp,w
  9568  00EE  00B5               	movwf	??___flmul
  9569  00EF  01B6               	clrf	??___flmul+1
  9570  00F0  01B7               	clrf	??___flmul+2
  9571  00F1  01B8               	clrf	??___flmul+3
  9572  00F2  0835               	movf	??___flmul,w
  9573  00F3  07BB               	addwf	___flmul@grs,f
  9574  00F4  0836               	movf	??___flmul+1,w
  9575  00F5  3DBC               	addwfc	___flmul@grs+1,f
  9576  00F6  0837               	movf	??___flmul+2,w
  9577  00F7  3DBD               	addwfc	___flmul@grs+2,f
  9578  00F8  0838               	movf	??___flmul+3,w
  9579  00F9  3DBE               	addwfc	___flmul@grs+3,f
  9580  00FA  0846               	movf	___flmul@temp+1,w
  9581  00FB  00B5               	movwf	??___flmul
  9582  00FC  01B6               	clrf	??___flmul+1
  9583  00FD  01B7               	clrf	??___flmul+2
  9584  00FE  01B8               	clrf	??___flmul+3
  9585  00FF  0835               	movf	??___flmul,w
  9586  0100  07C1               	addwf	___flmul@prod,f
  9587  0101  0836               	movf	??___flmul+1,w
  9588  0102  3DC2               	addwfc	___flmul@prod+1,f
  9589  0103  0837               	movf	??___flmul+2,w
  9590  0104  3DC3               	addwfc	___flmul@prod+2,f
  9591  0105  0838               	movf	??___flmul+3,w
  9592  0106  3DC4               	addwfc	___flmul@prod+3,f
  9593  0107  3008               	movlw	8
  9594  0108                     u330_25:	
  9595  0108  35BB               	lslf	___flmul@grs,f
  9596  0109  0DBC               	rlf	___flmul@grs+1,f
  9597  010A  0DBD               	rlf	___flmul@grs+2,f
  9598  010B  0DBE               	rlf	___flmul@grs+3,f
  9599  010C  0B89               	decfsz	9,f
  9600  010D  2908               	goto	u330_25
  9601  010E  082E               	movf	___flmul@b+1,w
  9602  010F  00B5               	movwf	??___flmul
  9603  0110  0835               	movf	??___flmul,w
  9604  0111  00F0               	movwf	__Umul8_16@multiplicand
  9605  0112  0831               	movf	___flmul@a,w
  9606  0113  3188  20AE  3180   	fcall	__Umul8_16
  9607  0116  0871               	movf	?__Umul8_16+1,w
  9608  0117  0020               	movlb	0	; select bank0
  9609  0118  00C6               	movwf	___flmul@temp+1
  9610  0119  0870               	movf	?__Umul8_16,w
  9611  011A  00C5               	movwf	___flmul@temp
  9612  011B  0845               	movf	___flmul@temp,w
  9613  011C  07BB               	addwf	___flmul@grs,f
  9614  011D  0846               	movf	___flmul@temp+1,w
  9615  011E  3DBC               	addwfc	___flmul@grs+1,f
  9616  011F  3000               	movlw	0
  9617  0120  3DBD               	addwfc	___flmul@grs+2,f
  9618  0121  3DBE               	addwfc	___flmul@grs+3,f
  9619  0122  082D               	movf	___flmul@b,w
  9620  0123  00B5               	movwf	??___flmul
  9621  0124  0835               	movf	??___flmul,w
  9622  0125  00F0               	movwf	__Umul8_16@multiplicand
  9623  0126  0832               	movf	___flmul@a+1,w
  9624  0127  3188  20AE  3180   	fcall	__Umul8_16
  9625  012A  0871               	movf	?__Umul8_16+1,w
  9626  012B  0020               	movlb	0	; select bank0
  9627  012C  00C6               	movwf	___flmul@temp+1
  9628  012D  0870               	movf	?__Umul8_16,w
  9629  012E  00C5               	movwf	___flmul@temp
  9630  012F  0845               	movf	___flmul@temp,w
  9631  0130  07BB               	addwf	___flmul@grs,f
  9632  0131  0846               	movf	___flmul@temp+1,w
  9633  0132  3DBC               	addwfc	___flmul@grs+1,f
  9634  0133  3000               	movlw	0
  9635  0134  3DBD               	addwfc	___flmul@grs+2,f
  9636  0135  3DBE               	addwfc	___flmul@grs+3,f
  9637  0136  3008               	movlw	8
  9638  0137                     u331_25:	
  9639  0137  35BB               	lslf	___flmul@grs,f
  9640  0138  0DBC               	rlf	___flmul@grs+1,f
  9641  0139  0DBD               	rlf	___flmul@grs+2,f
  9642  013A  0DBE               	rlf	___flmul@grs+3,f
  9643  013B  0B89               	decfsz	9,f
  9644  013C  2937               	goto	u331_25
  9645  013D  082D               	movf	___flmul@b,w
  9646  013E  00B5               	movwf	??___flmul
  9647  013F  0835               	movf	??___flmul,w
  9648  0140  00F0               	movwf	__Umul8_16@multiplicand
  9649  0141  0831               	movf	___flmul@a,w
  9650  0142  3188  20AE  3180   	fcall	__Umul8_16
  9651  0145  0871               	movf	?__Umul8_16+1,w
  9652  0146  0020               	movlb	0	; select bank0
  9653  0147  00C6               	movwf	___flmul@temp+1
  9654  0148  0870               	movf	?__Umul8_16,w
  9655  0149  00C5               	movwf	___flmul@temp
  9656  014A  0845               	movf	___flmul@temp,w
  9657  014B  07BB               	addwf	___flmul@grs,f
  9658  014C  0846               	movf	___flmul@temp+1,w
  9659  014D  3DBC               	addwfc	___flmul@grs+1,f
  9660  014E  3000               	movlw	0
  9661  014F  3DBD               	addwfc	___flmul@grs+2,f
  9662  0150  3DBE               	addwfc	___flmul@grs+3,f
  9663  0151  082E               	movf	___flmul@b+1,w
  9664  0152  00B5               	movwf	??___flmul
  9665  0153  0835               	movf	??___flmul,w
  9666  0154  00F0               	movwf	__Umul8_16@multiplicand
  9667  0155  0833               	movf	___flmul@a+2,w
  9668  0156  3188  20AE  3180   	fcall	__Umul8_16
  9669  0159  0871               	movf	?__Umul8_16+1,w
  9670  015A  0020               	movlb	0	; select bank0
  9671  015B  00C6               	movwf	___flmul@temp+1
  9672  015C  0870               	movf	?__Umul8_16,w
  9673  015D  00C5               	movwf	___flmul@temp
  9674  015E  0845               	movf	___flmul@temp,w
  9675  015F  07C1               	addwf	___flmul@prod,f
  9676  0160  0846               	movf	___flmul@temp+1,w
  9677  0161  3DC2               	addwfc	___flmul@prod+1,f
  9678  0162  3000               	movlw	0
  9679  0163  3DC3               	addwfc	___flmul@prod+2,f
  9680  0164  3DC4               	addwfc	___flmul@prod+3,f
  9681  0165  082F               	movf	___flmul@b+2,w
  9682  0166  00B5               	movwf	??___flmul
  9683  0167  0835               	movf	??___flmul,w
  9684  0168  00F0               	movwf	__Umul8_16@multiplicand
  9685  0169  0832               	movf	___flmul@a+1,w
  9686  016A  3188  20AE  3180   	fcall	__Umul8_16
  9687  016D  0871               	movf	?__Umul8_16+1,w
  9688  016E  0020               	movlb	0	; select bank0
  9689  016F  00C6               	movwf	___flmul@temp+1
  9690  0170  0870               	movf	?__Umul8_16,w
  9691  0171  00C5               	movwf	___flmul@temp
  9692  0172  0845               	movf	___flmul@temp,w
  9693  0173  07C1               	addwf	___flmul@prod,f
  9694  0174  0846               	movf	___flmul@temp+1,w
  9695  0175  3DC2               	addwfc	___flmul@prod+1,f
  9696  0176  3000               	movlw	0
  9697  0177  3DC3               	addwfc	___flmul@prod+2,f
  9698  0178  3DC4               	addwfc	___flmul@prod+3,f
  9699  0179  082F               	movf	___flmul@b+2,w
  9700  017A  00B5               	movwf	??___flmul
  9701  017B  0835               	movf	??___flmul,w
  9702  017C  00F0               	movwf	__Umul8_16@multiplicand
  9703  017D  0833               	movf	___flmul@a+2,w
  9704  017E  3188  20AE  3180   	fcall	__Umul8_16
  9705  0181  0871               	movf	?__Umul8_16+1,w
  9706  0182  0020               	movlb	0	; select bank0
  9707  0183  00C6               	movwf	___flmul@temp+1
  9708  0184  0870               	movf	?__Umul8_16,w
  9709  0185  00C5               	movwf	___flmul@temp
  9710  0186  0845               	movf	___flmul@temp,w
  9711  0187  00B5               	movwf	??___flmul
  9712  0188  0846               	movf	___flmul@temp+1,w
  9713  0189  00B6               	movwf	??___flmul+1
  9714  018A  01B7               	clrf	??___flmul+2
  9715  018B  01B8               	clrf	??___flmul+3
  9716  018C  3008               	movlw	8
  9717  018D                     u332_25:	
  9718  018D  35B5               	lslf	??___flmul,f
  9719  018E  0DB6               	rlf	??___flmul+1,f
  9720  018F  0DB7               	rlf	??___flmul+2,f
  9721  0190  0DB8               	rlf	??___flmul+3,f
  9722  0191  0B89               	decfsz	9,f
  9723  0192  298D               	goto	u332_25
  9724  0193  0835               	movf	??___flmul,w
  9725  0194  07C1               	addwf	___flmul@prod,f
  9726  0195  0836               	movf	??___flmul+1,w
  9727  0196  3DC2               	addwfc	___flmul@prod+1,f
  9728  0197  0837               	movf	??___flmul+2,w
  9729  0198  3DC3               	addwfc	___flmul@prod+2,f
  9730  0199  0838               	movf	??___flmul+3,w
  9731  019A  3DC4               	addwfc	___flmul@prod+3,f
  9732  019B  083B               	movf	___flmul@grs,w
  9733  019C  00B5               	movwf	??___flmul
  9734  019D  083C               	movf	___flmul@grs+1,w
  9735  019E  00B6               	movwf	??___flmul+1
  9736  019F  083D               	movf	___flmul@grs+2,w
  9737  01A0  00B7               	movwf	??___flmul+2
  9738  01A1  083E               	movf	___flmul@grs+3,w
  9739  01A2  00B8               	movwf	??___flmul+3
  9740  01A3  3018               	movlw	24
  9741  01A4                     u333_25:	
  9742  01A4  36B8               	lsrf	??___flmul+3,f
  9743  01A5  0CB7               	rrf	??___flmul+2,f
  9744  01A6  0CB6               	rrf	??___flmul+1,f
  9745  01A7  0CB5               	rrf	??___flmul,f
  9746  01A8  0B89               	decfsz	9,f
  9747  01A9  29A4               	goto	u333_25
  9748  01AA  0835               	movf	??___flmul,w
  9749  01AB  07C1               	addwf	___flmul@prod,f
  9750  01AC  0836               	movf	??___flmul+1,w
  9751  01AD  3DC2               	addwfc	___flmul@prod+1,f
  9752  01AE  0837               	movf	??___flmul+2,w
  9753  01AF  3DC3               	addwfc	___flmul@prod+2,f
  9754  01B0  0838               	movf	??___flmul+3,w
  9755  01B1  3DC4               	addwfc	___flmul@prod+3,f
  9756  01B2  3008               	movlw	8
  9757  01B3                     u334_25:	
  9758  01B3  35BB               	lslf	___flmul@grs,f
  9759  01B4  0DBC               	rlf	___flmul@grs+1,f
  9760  01B5  0DBD               	rlf	___flmul@grs+2,f
  9761  01B6  0DBE               	rlf	___flmul@grs+3,f
  9762  01B7  0B89               	decfsz	9,f
  9763  01B8  29B3               	goto	u334_25
  9764  01B9  0840               	movf	___flmul@bexp,w
  9765  01BA  073F               	addwf	___flmul@aexp,w
  9766  01BB  00B5               	movwf	??___flmul
  9767  01BC  01B6               	clrf	??___flmul+1
  9768  01BD  0DB6               	rlf	??___flmul+1,f
  9769  01BE  0835               	movf	??___flmul,w
  9770  01BF  3E82               	addlw	130
  9771  01C0  00C5               	movwf	___flmul@temp
  9772  01C1  30FF               	movlw	255
  9773  01C2  3D36               	addwfc	??___flmul+1,w
  9774  01C3  00C6               	movwf	___flmul@temp+1
  9775  01C4                     i1l2786:	
  9776  01C4  1BC3               	btfsc	___flmul@prod+2,7
  9777  01C5  29DB               	goto	i1l2788
  9778  01C6  3001               	movlw	1
  9779  01C7                     u335_25:	
  9780  01C7  35C1               	lslf	___flmul@prod,f
  9781  01C8  0DC2               	rlf	___flmul@prod+1,f
  9782  01C9  0DC3               	rlf	___flmul@prod+2,f
  9783  01CA  0DC4               	rlf	___flmul@prod+3,f
  9784  01CB  0B89               	decfsz	9,f
  9785  01CC  29C7               	goto	u335_25
  9786  01CD  1BBE               	btfsc	___flmul@grs+3,7
  9787  01CE  1441               	bsf	___flmul@prod,0
  9788  01CF  3001               	movlw	1
  9789  01D0                     u337_25:	
  9790  01D0  35BB               	lslf	___flmul@grs,f
  9791  01D1  0DBC               	rlf	___flmul@grs+1,f
  9792  01D2  0DBD               	rlf	___flmul@grs+2,f
  9793  01D3  0DBE               	rlf	___flmul@grs+3,f
  9794  01D4  0B89               	decfsz	9,f
  9795  01D5  29D0               	goto	u337_25
  9796  01D6  30FF               	movlw	255
  9797  01D7  07C5               	addwf	___flmul@temp,f
  9798  01D8  30FF               	movlw	255
  9799  01D9  3DC6               	addwfc	___flmul@temp+1,f
  9800  01DA  29C4               	goto	i1l2786
  9801  01DB                     i1l2788:	
  9802  01DB  01BF               	clrf	___flmul@aexp
  9803  01DC  1FBE               	btfss	___flmul@grs+3,7
  9804  01DD  29F4               	goto	i1l2798
  9805  01DE  30FF               	movlw	255
  9806  01DF  053B               	andwf	___flmul@grs,w
  9807  01E0  00B5               	movwf	??___flmul
  9808  01E1  30FF               	movlw	255
  9809  01E2  053C               	andwf	___flmul@grs+1,w
  9810  01E3  00B6               	movwf	??___flmul+1
  9811  01E4  30FF               	movlw	255
  9812  01E5  053D               	andwf	___flmul@grs+2,w
  9813  01E6  00B7               	movwf	??___flmul+2
  9814  01E7  307F               	movlw	127
  9815  01E8  053E               	andwf	___flmul@grs+3,w
  9816  01E9  00B8               	movwf	??___flmul+3
  9817  01EA  0838               	movf	??___flmul+3,w
  9818  01EB  0437               	iorwf	??___flmul+2,w
  9819  01EC  0436               	iorwf	??___flmul+1,w
  9820  01ED  0435               	iorwf	??___flmul,w
  9821  01EE  1903               	skipnz
  9822  01EF  1841               	btfsc	___flmul@prod,0
  9823  01F0  29F2               	goto	i1l2794
  9824  01F1  29F4               	goto	i1l2798
  9825  01F2                     i1l2794:	
  9826  01F2  01BF               	clrf	___flmul@aexp
  9827  01F3  0ABF               	incf	___flmul@aexp,f
  9828  01F4                     i1l2798:	
  9829  01F4  083F               	movf	___flmul@aexp,w
  9830  01F5  1903               	btfsc	3,2
  9831  01F6  2A1D               	goto	i1l2808
  9832  01F7  3001               	movlw	1
  9833  01F8  07C1               	addwf	___flmul@prod,f
  9834  01F9  3000               	movlw	0
  9835  01FA  3DC2               	addwfc	___flmul@prod+1,f
  9836  01FB  3000               	movlw	0
  9837  01FC  3DC3               	addwfc	___flmul@prod+2,f
  9838  01FD  3000               	movlw	0
  9839  01FE  3DC4               	addwfc	___flmul@prod+3,f
  9840  01FF  1C44               	btfss	___flmul@prod+3,0
  9841  0200  2A1D               	goto	i1l2808
  9842  0201  0841               	movf	___flmul@prod,w
  9843  0202  00B5               	movwf	??___flmul
  9844  0203  0842               	movf	___flmul@prod+1,w
  9845  0204  00B6               	movwf	??___flmul+1
  9846  0205  0843               	movf	___flmul@prod+2,w
  9847  0206  00B7               	movwf	??___flmul+2
  9848  0207  0844               	movf	___flmul@prod+3,w
  9849  0208  00B8               	movwf	??___flmul+3
  9850  0209  3001               	movlw	1
  9851  020A  00B9               	movwf	??___flmul+4
  9852  020B                     u344_25:	
  9853  020B  37B8               	asrf	??___flmul+3,f
  9854  020C  0CB7               	rrf	??___flmul+2,f
  9855  020D  0CB6               	rrf	??___flmul+1,f
  9856  020E  0CB5               	rrf	??___flmul,f
  9857  020F  0BB9               	decfsz	??___flmul+4,f
  9858  0210  2A0B               	goto	u344_25
  9859  0211  0838               	movf	??___flmul+3,w
  9860  0212  00C4               	movwf	___flmul@prod+3
  9861  0213  0837               	movf	??___flmul+2,w
  9862  0214  00C3               	movwf	___flmul@prod+2
  9863  0215  0836               	movf	??___flmul+1,w
  9864  0216  00C2               	movwf	___flmul@prod+1
  9865  0217  0835               	movf	??___flmul,w
  9866  0218  00C1               	movwf	___flmul@prod
  9867  0219  3001               	movlw	1
  9868  021A  07C5               	addwf	___flmul@temp,f
  9869  021B  3000               	movlw	0
  9870  021C  3DC6               	addwfc	___flmul@temp+1,f
  9871  021D                     i1l2808:	
  9872  021D  0846               	movf	___flmul@temp+1,w
  9873  021E  3A80               	xorlw	128
  9874  021F  00B5               	movwf	??___flmul
  9875  0220  3080               	movlw	128
  9876  0221  0235               	subwf	??___flmul,w
  9877  0222  1D03               	skipz
  9878  0223  2A26               	goto	u345_25
  9879  0224  30FF               	movlw	255
  9880  0225  0245               	subwf	___flmul@temp,w
  9881  0226                     u345_25:	
  9882  0226  1C03               	skipc
  9883  0227  2A32               	goto	i1l2812
  9884  0228  307F               	movlw	127
  9885  0229  0020               	movlb	0	; select bank0
  9886  022A  00C4               	movwf	___flmul@prod+3
  9887  022B  3080               	movlw	128
  9888  022C  00C3               	movwf	___flmul@prod+2
  9889  022D  3000               	movlw	0
  9890  022E  00C2               	movwf	___flmul@prod+1
  9891  022F  3000               	movlw	0
  9892  0230  00C1               	movwf	___flmul@prod
  9893  0231  2A5C               	goto	i1l910
  9894  0232                     i1l2812:	
  9895  0232  0020               	movlb	0	; select bank0
  9896  0233  0846               	movf	___flmul@temp+1,w
  9897  0234  3A80               	xorlw	128
  9898  0235  00B5               	movwf	??___flmul
  9899  0236  3080               	movlw	128
  9900  0237  0235               	subwf	??___flmul,w
  9901  0238  1D03               	skipz
  9902  0239  2A3C               	goto	u346_25
  9903  023A  3001               	movlw	1
  9904  023B  0245               	subwf	___flmul@temp,w
  9905  023C                     u346_25:	
  9906  023C  1803               	skipnc
  9907  023D  2A49               	goto	i1l2818
  9908  023E  3000               	movlw	0
  9909  023F  0020               	movlb	0	; select bank0
  9910  0240  00C4               	movwf	___flmul@prod+3
  9911  0241  3000               	movlw	0
  9912  0242  00C3               	movwf	___flmul@prod+2
  9913  0243  3000               	movlw	0
  9914  0244  00C2               	movwf	___flmul@prod+1
  9915  0245  3000               	movlw	0
  9916  0246  00C1               	movwf	___flmul@prod
  9917  0247  01BA               	clrf	___flmul@sign
  9918  0248  2A5C               	goto	i1l910
  9919  0249                     i1l2818:	
  9920  0249  0020               	movlb	0	; select bank0
  9921  024A  0845               	movf	___flmul@temp,w
  9922  024B  00B5               	movwf	??___flmul
  9923  024C  0835               	movf	??___flmul,w
  9924  024D  00C0               	movwf	___flmul@bexp
  9925  024E  30FF               	movlw	255
  9926  024F  05C1               	andwf	___flmul@prod,f
  9927  0250  30FF               	movlw	255
  9928  0251  05C2               	andwf	___flmul@prod+1,f
  9929  0252  307F               	movlw	127
  9930  0253  05C3               	andwf	___flmul@prod+2,f
  9931  0254  3000               	movlw	0
  9932  0255  05C4               	andwf	___flmul@prod+3,f
  9933  0256  1840               	btfsc	___flmul@bexp,0
  9934  0257  17C3               	bsf	___flmul@prod+2,7
  9935  0258  3640               	lsrf	___flmul@bexp,w
  9936  0259  00B5               	movwf	??___flmul
  9937  025A  0835               	movf	??___flmul,w
  9938  025B  00C4               	movwf	___flmul@prod+3
  9939  025C                     i1l910:	
  9940  025C  083A               	movf	___flmul@sign,w
  9941  025D  00B5               	movwf	??___flmul
  9942  025E  0835               	movf	??___flmul,w
  9943  025F  04C4               	iorwf	___flmul@prod+3,f
  9944  0260  0844               	movf	___flmul@prod+3,w
  9945  0261  00B0               	movwf	?___flmul+3
  9946  0262  0843               	movf	___flmul@prod+2,w
  9947  0263  00AF               	movwf	?___flmul+2
  9948  0264  0842               	movf	___flmul@prod+1,w
  9949  0265  00AE               	movwf	?___flmul+1
  9950  0266  0841               	movf	___flmul@prod,w
  9951  0267  00AD               	movwf	?___flmul
  9952  0268  0008               	return
  9953  0269                     __end_of___flmul:	
  9954                           
  9955                           	psect	text42
  9956  08AE                     __ptext42:	
  9957 ;; *************** function __Umul8_16 *****************
  9958 ;; Defined at:
  9959 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul8_16.c"
  9960 ;; Parameters:    Size  Location     Type
  9961 ;;  multiplier      1    wreg     unsigned char 
  9962 ;;  multiplicand    1    0[COMMON] unsigned char 
  9963 ;; Auto vars:     Size  Location     Type
  9964 ;;  multiplier      1    8[COMMON] unsigned char 
  9965 ;;  word_mpld       2    6[COMMON] unsigned int 
  9966 ;;  product         2    4[COMMON] unsigned int 
  9967 ;; Return value:  Size  Location     Type
  9968 ;;                  2    0[COMMON] unsigned int 
  9969 ;; Registers used:
  9970 ;;		wreg, status,2, status,0
  9971 ;; Tracked objects:
  9972 ;;		On entry : 0/0
  9973 ;;		On exit  : 0/0
  9974 ;;		Unchanged: 0/0
  9975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9976 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9977 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9978 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9979 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9980 ;;Total ram usage:        9 bytes
  9981 ;; Hardware stack levels used:    1
  9982 ;; This function calls:
  9983 ;;		Nothing
  9984 ;; This function is called by:
  9985 ;;		___flmul
  9986 ;; This function uses a non-reentrant model
  9987 ;;
  9988                           
  9989                           
  9990                           ;psect for function __Umul8_16
  9991  08AE                     __Umul8_16:	
  9992                           
  9993                           ;incstack = 0
  9994                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  9995                           ;__Umul8_16@multiplier stored from wreg
  9996  08AE  00F8               	movwf	__Umul8_16@multiplier
  9997  08AF  01F4               	clrf	__Umul8_16@product
  9998  08B0  01F5               	clrf	__Umul8_16@product+1
  9999  08B1  0870               	movf	__Umul8_16@multiplicand,w
 10000  08B2  00F2               	movwf	??__Umul8_16
 10001  08B3  01F3               	clrf	??__Umul8_16+1
 10002  08B4  0872               	movf	??__Umul8_16,w
 10003  08B5  00F6               	movwf	__Umul8_16@word_mpld
 10004  08B6  0873               	movf	??__Umul8_16+1,w
 10005  08B7  00F7               	movwf	__Umul8_16@word_mpld+1
 10006  08B8                     i1l2400:	
 10007  08B8  1C78               	btfss	__Umul8_16@multiplier,0
 10008  08B9  28BE               	goto	i1l1004
 10009  08BA  0876               	movf	__Umul8_16@word_mpld,w
 10010  08BB  07F4               	addwf	__Umul8_16@product,f
 10011  08BC  0877               	movf	__Umul8_16@word_mpld+1,w
 10012  08BD  3DF5               	addwfc	__Umul8_16@product+1,f
 10013  08BE                     i1l1004:	
 10014  08BE  3001               	movlw	1
 10015  08BF                     u256_25:	
 10016  08BF  35F6               	lslf	__Umul8_16@word_mpld,f
 10017  08C0  0DF7               	rlf	__Umul8_16@word_mpld+1,f
 10018  08C1  0B89               	decfsz	9,f
 10019  08C2  28BF               	goto	u256_25
 10020  08C3  1003               	clrc
 10021  08C4  0CF8               	rrf	__Umul8_16@multiplier,f
 10022  08C5  0878               	movf	__Umul8_16@multiplier,w
 10023  08C6  1D03               	btfss	3,2
 10024  08C7  28B8               	goto	i1l2400
 10025  08C8  0875               	movf	__Umul8_16@product+1,w
 10026  08C9  00F1               	movwf	?__Umul8_16+1
 10027  08CA  0874               	movf	__Umul8_16@product,w
 10028  08CB  00F0               	movwf	?__Umul8_16
 10029  08CC  0008               	return
 10030  08CD                     __end_of__Umul8_16:	
 10031                           
 10032                           	psect	text43
 10033  0452                     __ptext43:	
 10034 ;; *************** function ___fldiv *****************
 10035 ;; Defined at:
 10036 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
 10037 ;; Parameters:    Size  Location     Type
 10038 ;;  a               4    0[COMMON] unsigned int 
 10039 ;;  b               4    4[COMMON] unsigned int 
 10040 ;; Auto vars:     Size  Location     Type
 10041 ;;  grs             4    7[BANK0 ] unsigned long 
 10042 ;;  rem             4    0[BANK0 ] unsigned long 
 10043 ;;  new_exp         2    5[BANK0 ] int 
 10044 ;;  aexp            1   12[BANK0 ] unsigned char 
 10045 ;;  bexp            1   11[BANK0 ] unsigned char 
 10046 ;;  sign            1    4[BANK0 ] unsigned char 
 10047 ;; Return value:  Size  Location     Type
 10048 ;;                  4    0[COMMON] unsigned char 
 10049 ;; Registers used:
 10050 ;;		wreg, status,2, status,0
 10051 ;; Tracked objects:
 10052 ;;		On entry : 0/0
 10053 ;;		On exit  : 0/0
 10054 ;;		Unchanged: 0/0
 10055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10056 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10057 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10058 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10059 ;;      Totals:        13      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10060 ;;Total ram usage:       26 bytes
 10061 ;; Hardware stack levels used:    1
 10062 ;; This function calls:
 10063 ;;		Nothing
 10064 ;; This function is called by:
 10065 ;;		_speedCalc
 10066 ;; This function uses a non-reentrant model
 10067 ;;
 10068                           
 10069                           
 10070                           ;psect for function ___fldiv
 10071  0452                     ___fldiv:	
 10072                           
 10073                           ;incstack = 0
 10074                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 10075  0452  0877               	movf	___fldiv@b+3,w
 10076  0453  3980               	andlw	128
 10077  0454  00F8               	movwf	??___fldiv
 10078  0455  0878               	movf	??___fldiv,w
 10079  0456  0020               	movlb	0	; select bank0
 10080  0457  00A4               	movwf	___fldiv@sign
 10081  0458  3577               	lslf	___fldiv@b+3,w
 10082  0459  00F8               	movwf	??___fldiv
 10083  045A  0878               	movf	??___fldiv,w
 10084  045B  00AB               	movwf	___fldiv@bexp
 10085  045C  1BF6               	btfsc	___fldiv@b+2,7
 10086  045D  142B               	bsf	___fldiv@bexp,0
 10087  045E  082B               	movf	___fldiv@bexp,w
 10088  045F  1903               	btfsc	3,2
 10089  0460  2C6F               	goto	i1l2568
 10090  0461  0A2B               	incf	___fldiv@bexp,w
 10091  0462  1D03               	btfss	3,2
 10092  0463  2C6C               	goto	i1l2564
 10093  0464  3000               	movlw	0
 10094  0465  00F7               	movwf	___fldiv@b+3
 10095  0466  3000               	movlw	0
 10096  0467  00F6               	movwf	___fldiv@b+2
 10097  0468  3000               	movlw	0
 10098  0469  00F5               	movwf	___fldiv@b+1
 10099  046A  3000               	movlw	0
 10100  046B  00F4               	movwf	___fldiv@b
 10101  046C                     i1l2564:	
 10102  046C  17F6               	bsf	___fldiv@b+2,7
 10103  046D  01F7               	clrf	___fldiv@b+3
 10104  046E  2C77               	goto	i1l2570
 10105  046F                     i1l2568:	
 10106  046F  3000               	movlw	0
 10107  0470  00F7               	movwf	___fldiv@b+3
 10108  0471  3000               	movlw	0
 10109  0472  00F6               	movwf	___fldiv@b+2
 10110  0473  3000               	movlw	0
 10111  0474  00F5               	movwf	___fldiv@b+1
 10112  0475  3000               	movlw	0
 10113  0476  00F4               	movwf	___fldiv@b
 10114  0477                     i1l2570:	
 10115  0477  0873               	movf	___fldiv@a+3,w
 10116  0478  3980               	andlw	128
 10117  0479  00F8               	movwf	??___fldiv
 10118  047A  0878               	movf	??___fldiv,w
 10119  047B  06A4               	xorwf	___fldiv@sign,f
 10120  047C  3573               	lslf	___fldiv@a+3,w
 10121  047D  00F8               	movwf	??___fldiv
 10122  047E  0878               	movf	??___fldiv,w
 10123  047F  00AC               	movwf	___fldiv@aexp
 10124  0480  1BF2               	btfsc	___fldiv@a+2,7
 10125  0481  142C               	bsf	___fldiv@aexp,0
 10126  0482  082C               	movf	___fldiv@aexp,w
 10127  0483  1903               	btfsc	3,2
 10128  0484  2C93               	goto	i1l2588
 10129  0485  0A2C               	incf	___fldiv@aexp,w
 10130  0486  1D03               	btfss	3,2
 10131  0487  2C90               	goto	i1l2584
 10132  0488  3000               	movlw	0
 10133  0489  00F3               	movwf	___fldiv@a+3
 10134  048A  3000               	movlw	0
 10135  048B  00F2               	movwf	___fldiv@a+2
 10136  048C  3000               	movlw	0
 10137  048D  00F1               	movwf	___fldiv@a+1
 10138  048E  3000               	movlw	0
 10139  048F  00F0               	movwf	___fldiv@a
 10140  0490                     i1l2584:	
 10141  0490  17F2               	bsf	___fldiv@a+2,7
 10142  0491  01F3               	clrf	___fldiv@a+3
 10143  0492  2C9B               	goto	i1l858
 10144  0493                     i1l2588:	
 10145  0493  3000               	movlw	0
 10146  0494  00F3               	movwf	___fldiv@a+3
 10147  0495  3000               	movlw	0
 10148  0496  00F2               	movwf	___fldiv@a+2
 10149  0497  3000               	movlw	0
 10150  0498  00F1               	movwf	___fldiv@a+1
 10151  0499  3000               	movlw	0
 10152  049A  00F0               	movwf	___fldiv@a
 10153  049B                     i1l858:	
 10154  049B  0873               	movf	___fldiv@a+3,w
 10155  049C  0472               	iorwf	___fldiv@a+2,w
 10156  049D  0471               	iorwf	___fldiv@a+1,w
 10157  049E  0470               	iorwf	___fldiv@a,w
 10158  049F  1D03               	skipz
 10159  04A0  2CBA               	goto	i1l2598
 10160  04A1  3000               	movlw	0
 10161  04A2  00F7               	movwf	___fldiv@b+3
 10162  04A3  3000               	movlw	0
 10163  04A4  00F6               	movwf	___fldiv@b+2
 10164  04A5  3000               	movlw	0
 10165  04A6  00F5               	movwf	___fldiv@b+1
 10166  04A7  3000               	movlw	0
 10167  04A8  00F4               	movwf	___fldiv@b
 10168  04A9  3080               	movlw	128
 10169  04AA  04F6               	iorwf	___fldiv@b+2,f
 10170  04AB  307F               	movlw	127
 10171  04AC  04F7               	iorwf	___fldiv@b+3,f
 10172  04AD                     L5:	
 10173  04AD  0824               	movf	___fldiv@sign,w
 10174  04AE  00F8               	movwf	??___fldiv
 10175  04AF  0878               	movf	??___fldiv,w
 10176  04B0  04F7               	iorwf	___fldiv@b+3,f
 10177  04B1  0877               	movf	___fldiv@b+3,w
 10178  04B2  00F3               	movwf	?___fldiv+3
 10179  04B3  0876               	movf	___fldiv@b+2,w
 10180  04B4  00F2               	movwf	?___fldiv+2
 10181  04B5  0875               	movf	___fldiv@b+1,w
 10182  04B6  00F1               	movwf	?___fldiv+1
 10183  04B7  0874               	movf	___fldiv@b,w
 10184  04B8  00F0               	movwf	?___fldiv
 10185  04B9  0008               	return
 10186  04BA                     i1l2598:	
 10187  04BA  082B               	movf	___fldiv@bexp,w
 10188  04BB  1D03               	btfss	3,2
 10189  04BC  2CC6               	goto	i1l2604
 10190  04BD  3000               	movlw	0
 10191  04BE  00F3               	movwf	?___fldiv+3
 10192  04BF  3000               	movlw	0
 10193  04C0  00F2               	movwf	?___fldiv+2
 10194  04C1  3000               	movlw	0
 10195  04C2  00F1               	movwf	?___fldiv+1
 10196  04C3  3000               	movlw	0
 10197  04C4  00F0               	movwf	?___fldiv
 10198  04C5  0008               	return
 10199  04C6                     i1l2604:	
 10200  04C6  082B               	movf	___fldiv@bexp,w
 10201  04C7  00F8               	movwf	??___fldiv
 10202  04C8  01F9               	clrf	??___fldiv+1
 10203  04C9  0879               	movf	??___fldiv+1,w
 10204  04CA  00FB               	movwf	??___fldiv+3
 10205  04CB  082C               	movf	___fldiv@aexp,w
 10206  04CC  0278               	subwf	??___fldiv,w
 10207  04CD  00FA               	movwf	??___fldiv+2
 10208  04CE  1C03               	skipc
 10209  04CF  03FB               	decf	??___fldiv+3,f
 10210  04D0  087A               	movf	??___fldiv+2,w
 10211  04D1  3E7F               	addlw	127
 10212  04D2  00A5               	movwf	___fldiv@new_exp
 10213  04D3  3000               	movlw	0
 10214  04D4  3D7B               	addwfc	??___fldiv+3,w
 10215  04D5  00A6               	movwf	___fldiv@new_exp+1
 10216  04D6  0877               	movf	___fldiv@b+3,w
 10217  04D7  00A3               	movwf	___fldiv@rem+3
 10218  04D8  0876               	movf	___fldiv@b+2,w
 10219  04D9  00A2               	movwf	___fldiv@rem+2
 10220  04DA  0875               	movf	___fldiv@b+1,w
 10221  04DB  00A1               	movwf	___fldiv@rem+1
 10222  04DC  0874               	movf	___fldiv@b,w
 10223  04DD  00A0               	movwf	___fldiv@rem
 10224  04DE  3000               	movlw	0
 10225  04DF  00F7               	movwf	___fldiv@b+3
 10226  04E0  3000               	movlw	0
 10227  04E1  00F6               	movwf	___fldiv@b+2
 10228  04E2  3000               	movlw	0
 10229  04E3  00F5               	movwf	___fldiv@b+1
 10230  04E4  3000               	movlw	0
 10231  04E5  00F4               	movwf	___fldiv@b
 10232  04E6  3000               	movlw	0
 10233  04E7  00AA               	movwf	___fldiv@grs+3
 10234  04E8  3000               	movlw	0
 10235  04E9  00A9               	movwf	___fldiv@grs+2
 10236  04EA  3000               	movlw	0
 10237  04EB  00A8               	movwf	___fldiv@grs+1
 10238  04EC  3000               	movlw	0
 10239  04ED  00A7               	movwf	___fldiv@grs
 10240  04EE  01AC               	clrf	___fldiv@aexp
 10241  04EF                     i1l2632:	
 10242  04EF  301A               	movlw	26
 10243  04F0  022C               	subwf	___fldiv@aexp,w
 10244  04F1  1803               	btfsc	3,0
 10245  04F2  2D2B               	goto	i1l2634
 10246  04F3  082C               	movf	___fldiv@aexp,w
 10247  04F4  1903               	btfsc	3,2
 10248  04F5  2D0D               	goto	i1l2624
 10249  04F6  3001               	movlw	1
 10250  04F7                     u302_25:	
 10251  04F7  35A0               	lslf	___fldiv@rem,f
 10252  04F8  0DA1               	rlf	___fldiv@rem+1,f
 10253  04F9  0DA2               	rlf	___fldiv@rem+2,f
 10254  04FA  0DA3               	rlf	___fldiv@rem+3,f
 10255  04FB  0B89               	decfsz	9,f
 10256  04FC  2CF7               	goto	u302_25
 10257  04FD  3001               	movlw	1
 10258  04FE                     u303_25:	
 10259  04FE  35F4               	lslf	___fldiv@b,f
 10260  04FF  0DF5               	rlf	___fldiv@b+1,f
 10261  0500  0DF6               	rlf	___fldiv@b+2,f
 10262  0501  0DF7               	rlf	___fldiv@b+3,f
 10263  0502  0B89               	decfsz	9,f
 10264  0503  2CFE               	goto	u303_25
 10265  0504  1BAA               	btfsc	___fldiv@grs+3,7
 10266  0505  1474               	bsf	___fldiv@b,0
 10267  0506  3001               	movlw	1
 10268  0507                     u305_25:	
 10269  0507  35A7               	lslf	___fldiv@grs,f
 10270  0508  0DA8               	rlf	___fldiv@grs+1,f
 10271  0509  0DA9               	rlf	___fldiv@grs+2,f
 10272  050A  0DAA               	rlf	___fldiv@grs+3,f
 10273  050B  0B89               	decfsz	9,f
 10274  050C  2D07               	goto	u305_25
 10275  050D                     i1l2624:	
 10276  050D  0873               	movf	___fldiv@a+3,w
 10277  050E  0223               	subwf	___fldiv@rem+3,w
 10278  050F  1D03               	skipz
 10279  0510  2D1B               	goto	u306_25
 10280  0511  0872               	movf	___fldiv@a+2,w
 10281  0512  0222               	subwf	___fldiv@rem+2,w
 10282  0513  1D03               	skipz
 10283  0514  2D1B               	goto	u306_25
 10284  0515  0871               	movf	___fldiv@a+1,w
 10285  0516  0221               	subwf	___fldiv@rem+1,w
 10286  0517  1D03               	skipz
 10287  0518  2D1B               	goto	u306_25
 10288  0519  0870               	movf	___fldiv@a,w
 10289  051A  0220               	subwf	___fldiv@rem,w
 10290  051B                     u306_25:	
 10291  051B  1C03               	skipc
 10292  051C  2D26               	goto	i1l2630
 10293  051D  172A               	bsf	___fldiv@grs+3,6
 10294  051E  0870               	movf	___fldiv@a,w
 10295  051F  02A0               	subwf	___fldiv@rem,f
 10296  0520  0871               	movf	___fldiv@a+1,w
 10297  0521  3BA1               	subwfb	___fldiv@rem+1,f
 10298  0522  0872               	movf	___fldiv@a+2,w
 10299  0523  3BA2               	subwfb	___fldiv@rem+2,f
 10300  0524  0873               	movf	___fldiv@a+3,w
 10301  0525  3BA3               	subwfb	___fldiv@rem+3,f
 10302  0526                     i1l2630:	
 10303  0526  3001               	movlw	1
 10304  0527  00F8               	movwf	??___fldiv
 10305  0528  0878               	movf	??___fldiv,w
 10306  0529  07AC               	addwf	___fldiv@aexp,f
 10307  052A  2CEF               	goto	i1l2632
 10308  052B                     i1l2634:	
 10309  052B  0823               	movf	___fldiv@rem+3,w
 10310  052C  0422               	iorwf	___fldiv@rem+2,w
 10311  052D  0421               	iorwf	___fldiv@rem+1,w
 10312  052E  0420               	iorwf	___fldiv@rem,w
 10313  052F  1D03               	btfss	3,2
 10314  0530  1427               	bsf	___fldiv@grs,0
 10315  0531                     i1l2648:	
 10316  0531  1BF6               	btfsc	___fldiv@b+2,7
 10317  0532  2D48               	goto	i1l2650
 10318  0533  3001               	movlw	1
 10319  0534                     u309_25:	
 10320  0534  35F4               	lslf	___fldiv@b,f
 10321  0535  0DF5               	rlf	___fldiv@b+1,f
 10322  0536  0DF6               	rlf	___fldiv@b+2,f
 10323  0537  0DF7               	rlf	___fldiv@b+3,f
 10324  0538  0B89               	decfsz	9,f
 10325  0539  2D34               	goto	u309_25
 10326  053A  1BAA               	btfsc	___fldiv@grs+3,7
 10327  053B  1474               	bsf	___fldiv@b,0
 10328  053C  3001               	movlw	1
 10329  053D                     u311_25:	
 10330  053D  35A7               	lslf	___fldiv@grs,f
 10331  053E  0DA8               	rlf	___fldiv@grs+1,f
 10332  053F  0DA9               	rlf	___fldiv@grs+2,f
 10333  0540  0DAA               	rlf	___fldiv@grs+3,f
 10334  0541  0B89               	decfsz	9,f
 10335  0542  2D3D               	goto	u311_25
 10336  0543  30FF               	movlw	255
 10337  0544  07A5               	addwf	___fldiv@new_exp,f
 10338  0545  30FF               	movlw	255
 10339  0546  3DA6               	addwfc	___fldiv@new_exp+1,f
 10340  0547  2D31               	goto	i1l2648
 10341  0548                     i1l2650:	
 10342  0548  01AC               	clrf	___fldiv@aexp
 10343  0549  1FAA               	btfss	___fldiv@grs+3,7
 10344  054A  2D61               	goto	i1l2660
 10345  054B  30FF               	movlw	255
 10346  054C  0527               	andwf	___fldiv@grs,w
 10347  054D  00F8               	movwf	??___fldiv
 10348  054E  30FF               	movlw	255
 10349  054F  0528               	andwf	___fldiv@grs+1,w
 10350  0550  00F9               	movwf	??___fldiv+1
 10351  0551  30FF               	movlw	255
 10352  0552  0529               	andwf	___fldiv@grs+2,w
 10353  0553  00FA               	movwf	??___fldiv+2
 10354  0554  307F               	movlw	127
 10355  0555  052A               	andwf	___fldiv@grs+3,w
 10356  0556  00FB               	movwf	??___fldiv+3
 10357  0557  087B               	movf	??___fldiv+3,w
 10358  0558  047A               	iorwf	??___fldiv+2,w
 10359  0559  0479               	iorwf	??___fldiv+1,w
 10360  055A  0478               	iorwf	??___fldiv,w
 10361  055B  1903               	skipnz
 10362  055C  1874               	btfsc	___fldiv@b,0
 10363  055D  2D5F               	goto	i1l2656
 10364  055E  2D61               	goto	i1l2660
 10365  055F                     i1l2656:	
 10366  055F  01AC               	clrf	___fldiv@aexp
 10367  0560  0AAC               	incf	___fldiv@aexp,f
 10368  0561                     i1l2660:	
 10369  0561  082C               	movf	___fldiv@aexp,w
 10370  0562  1903               	btfsc	3,2
 10371  0563  2D8A               	goto	i1l2670
 10372  0564  3001               	movlw	1
 10373  0565  07F4               	addwf	___fldiv@b,f
 10374  0566  3000               	movlw	0
 10375  0567  3DF5               	addwfc	___fldiv@b+1,f
 10376  0568  3000               	movlw	0
 10377  0569  3DF6               	addwfc	___fldiv@b+2,f
 10378  056A  3000               	movlw	0
 10379  056B  3DF7               	addwfc	___fldiv@b+3,f
 10380  056C  1C77               	btfss	___fldiv@b+3,0
 10381  056D  2D8A               	goto	i1l2670
 10382  056E  0874               	movf	___fldiv@b,w
 10383  056F  00F8               	movwf	??___fldiv
 10384  0570  0875               	movf	___fldiv@b+1,w
 10385  0571  00F9               	movwf	??___fldiv+1
 10386  0572  0876               	movf	___fldiv@b+2,w
 10387  0573  00FA               	movwf	??___fldiv+2
 10388  0574  0877               	movf	___fldiv@b+3,w
 10389  0575  00FB               	movwf	??___fldiv+3
 10390  0576  3001               	movlw	1
 10391  0577  00FC               	movwf	??___fldiv+4
 10392  0578                     u318_25:	
 10393  0578  37FB               	asrf	??___fldiv+3,f
 10394  0579  0CFA               	rrf	??___fldiv+2,f
 10395  057A  0CF9               	rrf	??___fldiv+1,f
 10396  057B  0CF8               	rrf	??___fldiv,f
 10397  057C  0BFC               	decfsz	??___fldiv+4,f
 10398  057D  2D78               	goto	u318_25
 10399  057E  087B               	movf	??___fldiv+3,w
 10400  057F  00F7               	movwf	___fldiv@b+3
 10401  0580  087A               	movf	??___fldiv+2,w
 10402  0581  00F6               	movwf	___fldiv@b+2
 10403  0582  0879               	movf	??___fldiv+1,w
 10404  0583  00F5               	movwf	___fldiv@b+1
 10405  0584  0878               	movf	??___fldiv,w
 10406  0585  00F4               	movwf	___fldiv@b
 10407  0586  3001               	movlw	1
 10408  0587  07A5               	addwf	___fldiv@new_exp,f
 10409  0588  3000               	movlw	0
 10410  0589  3DA6               	addwfc	___fldiv@new_exp+1,f
 10411  058A                     i1l2670:	
 10412  058A  0826               	movf	___fldiv@new_exp+1,w
 10413  058B  3A80               	xorlw	128
 10414  058C  00F8               	movwf	??___fldiv
 10415  058D  3080               	movlw	128
 10416  058E  0278               	subwf	??___fldiv,w
 10417  058F  1D03               	skipz
 10418  0590  2D93               	goto	u319_25
 10419  0591  30FF               	movlw	255
 10420  0592  0225               	subwf	___fldiv@new_exp,w
 10421  0593                     u319_25:	
 10422  0593  1C03               	skipc
 10423  0594  2DA2               	goto	i1l879
 10424  0595  30FF               	movlw	255
 10425  0596  0020               	movlb	0	; select bank0
 10426  0597  00A5               	movwf	___fldiv@new_exp
 10427  0598  3000               	movlw	0
 10428  0599  00A6               	movwf	___fldiv@new_exp+1
 10429  059A  3000               	movlw	0
 10430  059B  00F7               	movwf	___fldiv@b+3
 10431  059C  3000               	movlw	0
 10432  059D  00F6               	movwf	___fldiv@b+2
 10433  059E  3000               	movlw	0
 10434  059F  00F5               	movwf	___fldiv@b+1
 10435  05A0  3000               	movlw	0
 10436  05A1  00F4               	movwf	___fldiv@b
 10437  05A2                     i1l879:	
 10438  05A2  0020               	movlb	0	; select bank0
 10439  05A3  0826               	movf	___fldiv@new_exp+1,w
 10440  05A4  3A80               	xorlw	128
 10441  05A5  00F8               	movwf	??___fldiv
 10442  05A6  3080               	movlw	128
 10443  05A7  0278               	subwf	??___fldiv,w
 10444  05A8  1D03               	skipz
 10445  05A9  2DAC               	goto	u320_25
 10446  05AA  3001               	movlw	1
 10447  05AB  0225               	subwf	___fldiv@new_exp,w
 10448  05AC                     u320_25:	
 10449  05AC  1803               	skipnc
 10450  05AD  2DBA               	goto	i1l880
 10451  05AE  0020               	movlb	0	; select bank0
 10452  05AF  01A5               	clrf	___fldiv@new_exp
 10453  05B0  01A6               	clrf	___fldiv@new_exp+1
 10454  05B1  3000               	movlw	0
 10455  05B2  00F7               	movwf	___fldiv@b+3
 10456  05B3  3000               	movlw	0
 10457  05B4  00F6               	movwf	___fldiv@b+2
 10458  05B5  3000               	movlw	0
 10459  05B6  00F5               	movwf	___fldiv@b+1
 10460  05B7  3000               	movlw	0
 10461  05B8  00F4               	movwf	___fldiv@b
 10462  05B9  01A4               	clrf	___fldiv@sign
 10463  05BA                     i1l880:	
 10464  05BA  0020               	movlb	0	; select bank0
 10465  05BB  0825               	movf	___fldiv@new_exp,w
 10466  05BC  00F8               	movwf	??___fldiv
 10467  05BD  0878               	movf	??___fldiv,w
 10468  05BE  00AB               	movwf	___fldiv@bexp
 10469  05BF  1C2B               	btfss	___fldiv@bexp,0
 10470  05C0  2DC3               	goto	i1l2684
 10471  05C1  17F6               	bsf	___fldiv@b+2,7
 10472  05C2  2DC7               	goto	i1l882
 10473  05C3                     i1l2684:	
 10474  05C3  307F               	movlw	127
 10475  05C4  00F8               	movwf	??___fldiv
 10476  05C5  0878               	movf	??___fldiv,w
 10477  05C6  05F6               	andwf	___fldiv@b+2,f
 10478  05C7                     i1l882:	
 10479  05C7  362B               	lsrf	___fldiv@bexp,w
 10480  05C8  00F8               	movwf	??___fldiv
 10481  05C9  0878               	movf	??___fldiv,w
 10482  05CA  00F7               	movwf	___fldiv@b+3
 10483  05CB  2CAD               	goto	L5
 10484  05CC                     __end_of___fldiv:	
 10485                           
 10486                           	psect	text44
 10487  0A42                     __ptext44:	
 10488 ;; *************** function ___awmod *****************
 10489 ;; Defined at:
 10490 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
 10491 ;; Parameters:    Size  Location     Type
 10492 ;;  divisor         2   50[BANK0 ] int 
 10493 ;;  dividend        2   52[BANK0 ] int 
 10494 ;; Auto vars:     Size  Location     Type
 10495 ;;  sign            1   55[BANK0 ] unsigned char 
 10496 ;;  counter         1   54[BANK0 ] unsigned char 
 10497 ;; Return value:  Size  Location     Type
 10498 ;;                  2   50[BANK0 ] int 
 10499 ;; Registers used:
 10500 ;;		wreg, status,2, status,0
 10501 ;; Tracked objects:
 10502 ;;		On entry : 0/0
 10503 ;;		On exit  : 0/0
 10504 ;;		Unchanged: 0/0
 10505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10506 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10507 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10508 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10509 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10510 ;;Total ram usage:        7 bytes
 10511 ;; Hardware stack levels used:    1
 10512 ;; This function calls:
 10513 ;;		Nothing
 10514 ;; This function is called by:
 10515 ;;		_speedCalc
 10516 ;; This function uses a non-reentrant model
 10517 ;;
 10518                           
 10519                           
 10520                           ;psect for function ___awmod
 10521  0A42                     ___awmod:	
 10522                           
 10523                           ;incstack = 0
 10524                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 10525  0A42  0020               	movlb	0	; select bank0
 10526  0A43  01D7               	clrf	___awmod@sign
 10527  0A44  1FD5               	btfss	___awmod@dividend+1,7
 10528  0A45  2A4D               	goto	i1l2520
 10529  0A46  09D4               	comf	___awmod@dividend,f
 10530  0A47  09D5               	comf	___awmod@dividend+1,f
 10531  0A48  0AD4               	incf	___awmod@dividend,f
 10532  0A49  1903               	skipnz
 10533  0A4A  0AD5               	incf	___awmod@dividend+1,f
 10534  0A4B  01D7               	clrf	___awmod@sign
 10535  0A4C  0AD7               	incf	___awmod@sign,f
 10536  0A4D                     i1l2520:	
 10537  0A4D  1FD3               	btfss	___awmod@divisor+1,7
 10538  0A4E  2A54               	goto	i1l2524
 10539  0A4F  09D2               	comf	___awmod@divisor,f
 10540  0A50  09D3               	comf	___awmod@divisor+1,f
 10541  0A51  0AD2               	incf	___awmod@divisor,f
 10542  0A52  1903               	skipnz
 10543  0A53  0AD3               	incf	___awmod@divisor+1,f
 10544  0A54                     i1l2524:	
 10545  0A54  0852               	movf	___awmod@divisor,w
 10546  0A55  0453               	iorwf	___awmod@divisor+1,w
 10547  0A56  1903               	btfsc	3,2
 10548  0A57  2A7B               	goto	i1l2542
 10549  0A58  01D6               	clrf	___awmod@counter
 10550  0A59  0AD6               	incf	___awmod@counter,f
 10551  0A5A                     i1l2532:	
 10552  0A5A  1BD3               	btfsc	___awmod@divisor+1,7
 10553  0A5B  2A66               	goto	i1l2534
 10554  0A5C  3001               	movlw	1
 10555  0A5D                     u287_25:	
 10556  0A5D  35D2               	lslf	___awmod@divisor,f
 10557  0A5E  0DD3               	rlf	___awmod@divisor+1,f
 10558  0A5F  0B89               	decfsz	9,f
 10559  0A60  2A5D               	goto	u287_25
 10560  0A61  3001               	movlw	1
 10561  0A62  00FD               	movwf	??___awmod
 10562  0A63  087D               	movf	??___awmod,w
 10563  0A64  07D6               	addwf	___awmod@counter,f
 10564  0A65  2A5A               	goto	i1l2532
 10565  0A66                     i1l2534:	
 10566  0A66  0853               	movf	___awmod@divisor+1,w
 10567  0A67  0255               	subwf	___awmod@dividend+1,w
 10568  0A68  1D03               	skipz
 10569  0A69  2A6C               	goto	u289_25
 10570  0A6A  0852               	movf	___awmod@divisor,w
 10571  0A6B  0254               	subwf	___awmod@dividend,w
 10572  0A6C                     u289_25:	
 10573  0A6C  1C03               	skipc
 10574  0A6D  2A72               	goto	i1l2538
 10575  0A6E  0852               	movf	___awmod@divisor,w
 10576  0A6F  02D4               	subwf	___awmod@dividend,f
 10577  0A70  0853               	movf	___awmod@divisor+1,w
 10578  0A71  3BD5               	subwfb	___awmod@dividend+1,f
 10579  0A72                     i1l2538:	
 10580  0A72  3001               	movlw	1
 10581  0A73                     u290_25:	
 10582  0A73  36D3               	lsrf	___awmod@divisor+1,f
 10583  0A74  0CD2               	rrf	___awmod@divisor,f
 10584  0A75  0B89               	decfsz	9,f
 10585  0A76  2A73               	goto	u290_25
 10586  0A77  3001               	movlw	1
 10587  0A78  02D6               	subwf	___awmod@counter,f
 10588  0A79  1D03               	btfss	3,2
 10589  0A7A  2A66               	goto	i1l2534
 10590  0A7B                     i1l2542:	
 10591  0A7B  0857               	movf	___awmod@sign,w
 10592  0A7C  1903               	btfsc	3,2
 10593  0A7D  2A83               	goto	i1l2546
 10594  0A7E  09D4               	comf	___awmod@dividend,f
 10595  0A7F  09D5               	comf	___awmod@dividend+1,f
 10596  0A80  0AD4               	incf	___awmod@dividend,f
 10597  0A81  1903               	skipnz
 10598  0A82  0AD5               	incf	___awmod@dividend+1,f
 10599  0A83                     i1l2546:	
 10600  0A83  0855               	movf	___awmod@dividend+1,w
 10601  0A84  00D3               	movwf	?___awmod+1
 10602  0A85  0854               	movf	___awmod@dividend,w
 10603  0A86  00D2               	movwf	?___awmod
 10604  0A87  0008               	return
 10605  0A88                     __end_of___awmod:	
 10606                           
 10607                           	psect	text45
 10608  0A88                     __ptext45:	
 10609 ;; *************** function ___awdiv *****************
 10610 ;; Defined at:
 10611 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
 10612 ;; Parameters:    Size  Location     Type
 10613 ;;  divisor         2    0[COMMON] int 
 10614 ;;  dividend        2    2[COMMON] int 
 10615 ;; Auto vars:     Size  Location     Type
 10616 ;;  quotient        2    7[COMMON] int 
 10617 ;;  sign            1    6[COMMON] unsigned char 
 10618 ;;  counter         1    5[COMMON] unsigned char 
 10619 ;; Return value:  Size  Location     Type
 10620 ;;                  2    0[COMMON] int 
 10621 ;; Registers used:
 10622 ;;		wreg, status,2, status,0
 10623 ;; Tracked objects:
 10624 ;;		On entry : 0/0
 10625 ;;		On exit  : 0/0
 10626 ;;		Unchanged: 0/0
 10627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10628 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10629 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10630 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10631 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10632 ;;Total ram usage:        9 bytes
 10633 ;; Hardware stack levels used:    1
 10634 ;; This function calls:
 10635 ;;		Nothing
 10636 ;; This function is called by:
 10637 ;;		_speedCalc
 10638 ;; This function uses a non-reentrant model
 10639 ;;
 10640                           
 10641                           
 10642                           ;psect for function ___awdiv
 10643  0A88                     ___awdiv:	
 10644                           
 10645                           ;incstack = 0
 10646                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 10647  0A88  01F6               	clrf	___awdiv@sign
 10648  0A89  1FF1               	btfss	___awdiv@divisor+1,7
 10649  0A8A  2A92               	goto	i1l2476
 10650  0A8B  09F0               	comf	___awdiv@divisor,f
 10651  0A8C  09F1               	comf	___awdiv@divisor+1,f
 10652  0A8D  0AF0               	incf	___awdiv@divisor,f
 10653  0A8E  1903               	skipnz
 10654  0A8F  0AF1               	incf	___awdiv@divisor+1,f
 10655  0A90  01F6               	clrf	___awdiv@sign
 10656  0A91  0AF6               	incf	___awdiv@sign,f
 10657  0A92                     i1l2476:	
 10658  0A92  1FF3               	btfss	___awdiv@dividend+1,7
 10659  0A93  2A9D               	goto	i1l2482
 10660  0A94  09F2               	comf	___awdiv@dividend,f
 10661  0A95  09F3               	comf	___awdiv@dividend+1,f
 10662  0A96  0AF2               	incf	___awdiv@dividend,f
 10663  0A97  1903               	skipnz
 10664  0A98  0AF3               	incf	___awdiv@dividend+1,f
 10665  0A99  3001               	movlw	1
 10666  0A9A  00F4               	movwf	??___awdiv
 10667  0A9B  0874               	movf	??___awdiv,w
 10668  0A9C  06F6               	xorwf	___awdiv@sign,f
 10669  0A9D                     i1l2482:	
 10670  0A9D  01F7               	clrf	___awdiv@quotient
 10671  0A9E  01F8               	clrf	___awdiv@quotient+1
 10672  0A9F  0870               	movf	___awdiv@divisor,w
 10673  0AA0  0471               	iorwf	___awdiv@divisor+1,w
 10674  0AA1  1903               	btfsc	3,2
 10675  0AA2  2ACC               	goto	i1l2504
 10676  0AA3  01F5               	clrf	___awdiv@counter
 10677  0AA4  0AF5               	incf	___awdiv@counter,f
 10678  0AA5                     i1l2492:	
 10679  0AA5  1BF1               	btfsc	___awdiv@divisor+1,7
 10680  0AA6  2AB1               	goto	i1l2494
 10681  0AA7  3001               	movlw	1
 10682  0AA8                     u277_25:	
 10683  0AA8  35F0               	lslf	___awdiv@divisor,f
 10684  0AA9  0DF1               	rlf	___awdiv@divisor+1,f
 10685  0AAA  0B89               	decfsz	9,f
 10686  0AAB  2AA8               	goto	u277_25
 10687  0AAC  3001               	movlw	1
 10688  0AAD  00F4               	movwf	??___awdiv
 10689  0AAE  0874               	movf	??___awdiv,w
 10690  0AAF  07F5               	addwf	___awdiv@counter,f
 10691  0AB0  2AA5               	goto	i1l2492
 10692  0AB1                     i1l2494:	
 10693  0AB1  3001               	movlw	1
 10694  0AB2                     u279_25:	
 10695  0AB2  35F7               	lslf	___awdiv@quotient,f
 10696  0AB3  0DF8               	rlf	___awdiv@quotient+1,f
 10697  0AB4  0B89               	decfsz	9,f
 10698  0AB5  2AB2               	goto	u279_25
 10699  0AB6  0871               	movf	___awdiv@divisor+1,w
 10700  0AB7  0273               	subwf	___awdiv@dividend+1,w
 10701  0AB8  1D03               	skipz
 10702  0AB9  2ABC               	goto	u280_25
 10703  0ABA  0870               	movf	___awdiv@divisor,w
 10704  0ABB  0272               	subwf	___awdiv@dividend,w
 10705  0ABC                     u280_25:	
 10706  0ABC  1C03               	skipc
 10707  0ABD  2AC3               	goto	i1l2500
 10708  0ABE  0870               	movf	___awdiv@divisor,w
 10709  0ABF  02F2               	subwf	___awdiv@dividend,f
 10710  0AC0  0871               	movf	___awdiv@divisor+1,w
 10711  0AC1  3BF3               	subwfb	___awdiv@dividend+1,f
 10712  0AC2  1477               	bsf	___awdiv@quotient,0
 10713  0AC3                     i1l2500:	
 10714  0AC3  3001               	movlw	1
 10715  0AC4                     u281_25:	
 10716  0AC4  36F1               	lsrf	___awdiv@divisor+1,f
 10717  0AC5  0CF0               	rrf	___awdiv@divisor,f
 10718  0AC6  0B89               	decfsz	9,f
 10719  0AC7  2AC4               	goto	u281_25
 10720  0AC8  3001               	movlw	1
 10721  0AC9  02F5               	subwf	___awdiv@counter,f
 10722  0ACA  1D03               	btfss	3,2
 10723  0ACB  2AB1               	goto	i1l2494
 10724  0ACC                     i1l2504:	
 10725  0ACC  0876               	movf	___awdiv@sign,w
 10726  0ACD  1903               	btfsc	3,2
 10727  0ACE  2AD4               	goto	i1l2508
 10728  0ACF  09F7               	comf	___awdiv@quotient,f
 10729  0AD0  09F8               	comf	___awdiv@quotient+1,f
 10730  0AD1  0AF7               	incf	___awdiv@quotient,f
 10731  0AD2  1903               	skipnz
 10732  0AD3  0AF8               	incf	___awdiv@quotient+1,f
 10733  0AD4                     i1l2508:	
 10734  0AD4  0878               	movf	___awdiv@quotient+1,w
 10735  0AD5  00F1               	movwf	?___awdiv+1
 10736  0AD6  0877               	movf	___awdiv@quotient,w
 10737  0AD7  00F0               	movwf	?___awdiv
 10738  0AD8  0008               	return
 10739  0AD9                     __end_of___awdiv:	
 10740  007E                     btemp	set	126	;btemp
 10741  007E                     int$flags	set	126
 10742  007E                     wtemp0	set	126


Data Sizes:
    Strings     51
    Constant    0
    Data        32
    BSS         73
    Persistent  43
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     60      80
    BANK1            80     80      80
    BANK2            80     14      78
    BANK3            80      0      32
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    puts@s	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_5(CODE[3]), hrDisp(BANK2[13]), distanceDisp(BANK2[11]), speedDisp(BANK2[8]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_4(CODE[10]), STR_3(CODE[9]), STR_2(CODE[14]), STR_1(CODE[15]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK2[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK3[32]), STR_5(CODE[3]), hrDisp(BANK2[13]), distanceDisp(BANK2[11]), 
		 -> speedDisp(BANK2[8]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S994_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK2[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_4(CODE[10]), STR_3(CODE[9]), STR_2(CODE[14]), STR_1(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 15
		 -> STR_4(CODE[10]), STR_3(CODE[9]), STR_2(CODE[14]), STR_1(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK2[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK2[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    writeString@string	PTR unsigned char  size(1) Largest target is 13
		 -> hrDisp(BANK2[13]), distanceDisp(BANK2[11]), speedDisp(BANK2[8]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timerISR(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timerISR(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    IOCCF7_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> speedCalc(), IOCCF7_DefaultInterruptHandler(), 

    IOCCF7_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> speedCalc(), Absolute function(), IOCCF7_DefaultInterruptHandler(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _timerISR->___fladd
    _speedCalc->___awmod
    ___flmul->___fldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _timerISR->___fladd
    _IOCCF7_ISR->_speedCalc
    _speedCalc->___awmod
    i1___fltol->___flmul
    ___flmul->___fldiv
    ___awmod->i1___fltol

Critical Paths under _main in BANK1

    _main->_printf
    _writeString->_puts
    _setCursor->_EUSART_Write
    _setCursor->_EUSART_is_tx_ready
    _resetCursor->_puts
    _puts->_fputs
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _abs->___aomod
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCCF7_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_printf
    _printf->_vfprintf

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   14952
                                             12 BANK2      2     2      0
         _IOCCF7_SetInterruptHandler
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                             ___flge
                            ___fltol
                             _printf
                        _resetCursor
                          _setCursor
                        _writeString
 ---------------------------------------------------------------------------------
 (1) _writeString                                          1     1      0    2879
                                             24 BANK1      1     1      0
                 _EUSART_is_tx_ready
                               _puts
 ---------------------------------------------------------------------------------
 (1) _setCursor                                            4     3      1     688
                                              1 BANK1      4     3      1
                       _EUSART_Write
                 _EUSART_is_tx_ready
 ---------------------------------------------------------------------------------
 (2) _EUSART_is_tx_ready                                   1     1      0      24
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _resetCursor                                          0     0      0    2734
                               _puts
 ---------------------------------------------------------------------------------
 (2) _puts                                                 5     3      2    2734
                                             19 BANK1      5     3      2
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (1) _printf                                              10     4      6    6922
                                             79 BANK1      1     1      0
                                              3 BANK2      9     3      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    6564
                                             74 BANK1      5     2      3
                                              0 BANK2      3     3      0
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    6236
                                             58 BANK1     16    14      2
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    4723
                                             28 BANK1     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    3100
                                             19 BANK1      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     123
                                              0 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 (3) _fputs                                                9     6      3    1549
                                             10 BANK1      9     6      3
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     980
                                              2 BANK1      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      44
                                              1 BANK1      1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             19 BANK1      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     448
                                              0 BANK1     19     3     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     452
                                              0 BANK1     27    11     16
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             11     7      4     405
                                              0 BANK1     11     7      4
 ---------------------------------------------------------------------------------
 (1) ___flge                                              12     4      8     334
                                              0 BANK1     12     4      8
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     642
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0     174
                                              2 BANK1      1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     174
         _IOCCF7_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCCF7_SetInterruptHandler                           2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          0     0      0    7764
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR0_ISR                                            0     0      0    2262
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                           _timerISR *
 ---------------------------------------------------------------------------------
 (12) _timerISR                                            0     0      0    2262
                            ___fladd
 ---------------------------------------------------------------------------------
 (13) ___fladd                                            20    12      8    2262
                                              0 COMMON    12     4      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (12) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _PIN_MANAGER_IOC                                     0     0      0    5502
                         _IOCCF7_ISR
 ---------------------------------------------------------------------------------
 (12) _IOCCF7_ISR                                          0     0      0    5502
                   Absolute function *
     _IOCCF7_DefaultInterruptHandler *
                          _speedCalc *
 ---------------------------------------------------------------------------------
 (13) _speedCalc                                           4     4      0    5502
                                             56 BANK0      4     4      0
                            ___awdiv
                            ___awmod
                            ___fldiv
                            ___flmul
                          i1___fltol
 ---------------------------------------------------------------------------------
 (14) i1___fltol                                          11     7      4     281
                                             39 BANK0     11     7      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (14) ___flmul                                            26    18      8    2873
                                             13 BANK0     26    18      8
                          __Umul8_16
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (15) __Umul8_16                                           9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (14) ___fldiv                                            26    18      8    1273
                                              0 COMMON    13     5      8
                                              0 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 (14) ___awmod                                             7     3      4     600
                                             13 COMMON     1     1      0
                                             50 BANK0      6     2      4
                            ___flmul (ARG)
                          i1___fltol (ARG)
 ---------------------------------------------------------------------------------
 (14) ___awdiv                                             9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (13) _IOCCF7_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _IOCCF7_SetInterruptHandler
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCCF7_SetInterruptHandler
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _TMR0_SetInterruptHandler
   ___flge
   ___fltol
   _printf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART_Write
             _fputs
               _fputc
                 _putch
                   _EUSART_Write
             _strlen
         _fputc
           _putch
             _EUSART_Write
   _resetCursor
     _puts
       _fputc
         _putch
           _EUSART_Write
       _fputs
         _fputc
           _putch
             _EUSART_Write
   _setCursor
     _EUSART_Write
     _EUSART_is_tx_ready
   _writeString
     _EUSART_is_tx_ready
     _puts
       _fputc
         _putch
           _EUSART_Write
       _fputs
         _fputc
           _putch
             _EUSART_Write

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
     _IOCCF7_ISR
       Absolute function(Fake) *
       _IOCCF7_DefaultInterruptHandler *
       _speedCalc *
         ___awdiv
         ___awmod
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
           i1___fltol (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
         ___fldiv
         ___flmul
           __Umul8_16
           ___fldiv (ARG)
         i1___fltol
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _timerISR *
       ___fladd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3C      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     50      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      E      4E       9       97.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      20      11       40.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     11C      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     11C      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Apr 07 22:47:29 2019

                                 ___fldiv@aexp 002C                                   ___fldiv@bexp 002B  
                                 ___fldiv@sign 0024                                    __CFG_CP$OFF 0000  
                                           l69 17DF                                   ___awdiv@sign 0076  
                              _timer0ReloadVal 006F                            __Umul8_16@word_mpld 0076  
                                          l333 0A01                                            l601 0FEE  
                                          l452 0AF4                                            l460 0612  
                                          l461 0619                                            l702 0BDF  
                                          l614 07EA                                            l455 0B14  
                                          l465 0634                                            l466 0648  
                                          l469 06DE                                            l682 0C64  
                                          l679 0C16                                            _abs 0861  
                                          _pad 0AD9                                            _rpm 0069  
               ?_EUSART_SetFramingErrorHandler 00A0                                   i1___fltol@f1 0047  
                                 ___awmod@sign 0057                                   __CFG_BORV$LO 0000  
                                          wreg 0009                                   __CFG_IESO$ON 0000  
                                 ___flmul@aexp 003F                                   ___flmul@bexp 0040  
       __end_of_IOCCF7_DefaultInterruptHandler 07FE        __size_of_IOCCF7_DefaultInterruptHandler 0001  
               _IOCCF7_DefaultInterruptHandler 07FD                                   ___flmul@sign 003A  
                                 ___flmul@temp 0045                                   ___flmul@prod 0041  
                                 __CFG_LVP$OFF 0000                                   __CFG_ZCD$OFF 0000  
                                 ___fltol@exp1 00AA                                           ?_abs 00B3  
                                         l2310 0AF2                                           l2320 0B23  
                                         l2306 0AEA                                           l2340 0F62  
                                         l2316 0AF6                                           l3300 0836  
                                         l2350 0F79                                           l2334 0F35  
                                         l2270 0A0D                                           l2422 062C  
                                         l3142 080D                                           l2360 0FC1  
                                         l2352 0F88                                           l2432 0675  
                                         l2362 0FCD                                           l2338 0F5D  
                                         l2274 0A30                                           l2442 0650  
                                         l2450 06EA                                           l3226 096C  
                                         l2372 0749                                           l2276 0A39  
                                         l2460 06FD                                           l2428 0643  
                                         l3228 098A                                           l2390 07BD  
                                         l2286 093A                                           l2454 06F2  
                                         l3352 0C4A                                           l2384 077E  
                                         l2392 07C9                                           l2376 0771  
                                         l2288 095B                                           l2296 0880  
                                         l2464 070A                                           l3280 09D6  
                                         l2386 078D                                           l2298 088C  
                                         l3282 09DB                                           l3290 09EA  
                                         l3274 09C7                                           l3426 0C9C  
                                         l3348 0C30                                           l3364 0B9F  
                                         l3284 09E0                                           l3286 09E5  
                                         l3384 0BCD                                           l3368 0BA8  
                                         l2912 0DEE                                           l3448 0CF6  
                                         l3394 0BEC                                           l3386 0BDB  
                                         l2906 0DCB                                           l2922 0E00  
                                         l2916 0DF4                                           l3492 09F3  
                                         ?_pad 00B3                                           l2898 0D8E  
                                         STR_1 1000                                           STR_2 100F  
                                         STR_3 180A                                           STR_4 1800  
                                         STR_5 1813                                           _LATA 010C  
                                         _LATB 010D                                           _LATC 010E  
                                         u2315 0B00                                           u2415 0FAE  
                                         u2335 086B                                           u2265 0A2E  
                                         u2515 07AB                                           u2380 0F6A  
                                         u2635 0624                                           u2580 05E8  
                                         u4325 0BCE                                           u2590 05E9  
                                         u2665 06E8                                           u4355 0BE3  
                                         u2685 0664                                           u4437 0C90  
                                         u4295 0BB1                                           u2695 0670  
                                         u4447 0845                                           u4457 09D2  
                                         _TMR0 0015                                           _WPUA 020C  
                                         _WPUB 020D                                           _WPUC 020E  
                                 __CFG_WRT$OFF 0000                                  __CFG_FCMEN$ON 0000  
                                         abs@a 00B3                                           _dbuf 01A0  
                                         _main 0C77                                           _dtoa 05CC  
                                         _prec 0062                                           _nout 0148  
                                         pad@i 00B7                                           pad@p 00B4  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         pad@w 00B9                                           btemp 007E  
                                         _puts 0893                                  __CFG_BOREN$ON 0000  
                                         start 0014                                ___fldiv@new_exp 0025  
                                __CFG_MCLRE$ON 0000                                          ??_abs 00B5  
                                        ??_pad 00B6                        __end_of_TMR0_Initialize 0861  
               ??_TMR0_DefaultInterruptHandler 0070                                  ?_EUSART_Write 0070  
               __size_of_OSCILLATOR_Initialize 0007                  __end_of_OSCILLATOR_Initialize 17A8  
                          __size_of_IOCCF7_ISR 000D                                  ___fltol@sign1 00A9  
                              __end_of___aodiv 1000                                __end_of___fladd 0452  
                                        ?_main 0070                                          ?_dtoa 00BC  
                              __end_of___aomod 07FC                                __end_of___fldiv 05CC  
                              __end_of___awdiv 0AD9                                  __CFG_WDTE$OFF 0000  
                              __end_of___awmod 0A88                                __end_of___flmul 0269  
                              __end_of___fltol 0BFB                                          ?_puts 00B3  
                              ___awdiv@divisor 0070                                          i1l240 0012  
                                        i1l236 000D                                          i1l702 0B79  
                                        i1l802 02B6                                          i1l910 025C  
                                        i1l806 034A                                          i1l823 03D0  
                                        i1l808 032C                                          i1l844 0449  
                                        i1l836 0430                                          i1l880 05BA  
                                        i1l882 05C7                                          i1l858 049B  
                                        i1l879 05A2                                ___awdiv@counter 0075  
                                 vfpfcnvrt@fmt 00DA                                          _TRISA 008C  
                                        _TRISB 008D                                          _TRISC 008E  
                                  _writeString 0834              __size_of_TMR0_SetInterruptHandler 0009  
                    ?_TMR0_SetInterruptHandler 00A0                               __end_of_TMR0_ISR 081F  
                      __end_of_PIN_MANAGER_IOC 178F                                          _hrInt 014A  
                                        _flags 0064                                          _fputc 0A02  
                                        _fputs 0937                                          _speed 005C  
                                        pad@fp 00BB                                          _width 0060  
                                        _putch 178F                                          dtoa@d 00BC  
                                        dtoa@i 00D8                                          dtoa@n 00D0  
                                        dtoa@p 00C9                                          dtoa@s 00CE  
                                        dtoa@w 00CC                                          pclath 000A  
                               i1___fltol@exp1 0051                                          puts@s 00B3  
                                        status 0003                                          wtemp0 007E  
                           __size_ofi1___fltol 0066                                __initialization 0016  
                                 __end_of_main 0D49                                   __end_of_dtoa 071D  
                                 __end_of_puts 08AE                                 ??_EUSART_Write 00A0  
                               __CFG_LPBOR$OFF 0000                    ?_INTERRUPT_InterruptManager 0070  
                                       ??_main 0164                                         ??_dtoa 00C4  
                                       ??_puts 00B5                                 __CFG_PLLEN$OFF 0000  
            _EUSART_DefaultFramingErrorHandler 0000                     _EUSART_OverrunErrorHandler 016A  
                                       ?_fputc 00A2                                         ?_fputs 00AA  
                             ___awdiv@dividend 0072                                         _ANSELA 018C  
                                       ?_putch 0070                                         _ANSELB 018D  
                                       _ANSELC 018E                   ??_IOCCF7_SetInterruptHandler 00A2  
                                       _BORCON 0116                                         _RC1REG 0199  
                                       _RC1STA 019D                                         i1l1004 08BE  
                                       _RB7PPS 0E9F                                         i1l2400 08B8  
                                       i1l3016 0335                                         i1l3008 02FC  
                                       _ODCONA 028C                                         i1l3202 17FD  
                                       i1l3114 0440                                         i1l3042 036B  
                                       i1l3034 0358                                         i1l3018 0337  
                                       i1l3026 0346                                         _ODCONB 028D  
                                       _ODCONC 028E                                         i1l2500 0AC3  
                                       i1l3044 036D                                         i1l3052 037D  
                                       i1l3118 0444                                         i1l3070 03E2  
                                       i1l3062 03C8                                         i1l2504 0ACC  
                                       i1l2520 0A4D                                         i1l2508 0AD4  
                                       i1l2532 0A5A                                         i1l2524 0A54  
                                       i1l2604 04C6                                         i1l3092 0401  
                                       i1l3084 03F6                                         i1l2534 0A66  
                                       i1l2542 0A7B                                         i1l2630 0526  
                                       i1l3078 03EF                                         i1l3086 03F8  
                                       i1l2624 050D                                         i1l2632 04EF  
                                       i1l2704 0057                                         i1l3096 0403  
                                       i1l2482 0A9D                                         i1l2546 0A83  
                                       i1l2538 0A72                                         i1l2650 0548  
                                       i1l2634 052B                                         i1l2570 0477  
                                       i1l2722 007A                                         i1l2706 0059  
                                       i1l2492 0AA5                                         i1l2476 0A92  
                                       i1l2660 0561                                         i1l2564 046C  
                                       i1l2812 0232                                         i1l2724 007C  
                                       i1l2708 0061                                         i1l2494 0AB1  
                                       i1l2670 058A                                         i1l2734 0092  
                                       i1l2726 0084                                         i1l2656 055F  
                                       i1l2648 0531                                         i1l2584 0490  
                                       i1l2568 046F                                         i1l2808 021D  
                                       i1l2832 0B39                                         i1l2818 0249  
                                       i1l2684 05C3                                         i1l2588 0493  
                                       i1l2852 0B67                                         i1l2836 0B42  
                                       i1l2598 04BA                                         i1l2862 0B86  
                                       i1l2854 0B75                                         i1l2950 028E  
                                       i1l2944 0283                                         i1l2794 01F2  
                                       i1l2786 01C4                                         i1l2788 01DB  
                                       i1l2972 02AE                                         i1l2948 0286  
                                       i1l2798 01F4                                         i1l2968 02AB  
                                       i1l2978 02C0                                         u302_25 04F7  
                                       u311_25 053D                                         u303_25 04FE  
                                       u320_25 05AC                                         u305_25 0507  
                                       u306_25 051B                                         u330_25 0108  
                                       u331_25 0137                                         u332_25 018D  
                   __end_of_EUSART_is_tx_ready 0810                                         u309_25 0534  
                                       u333_25 01A4                                         u318_25 0578  
                                       u334_25 01B3                                         u319_25 0593  
                                       u335_25 01C7                                         u280_25 0ABC  
                                       u256_25 08BF                                         u344_25 020B  
                                       u352_25 0B68                                         u281_25 0AC4  
                                       u345_25 0226                                         u337_25 01D0  
                                       u290_25 0A73                                         u346_25 023C  
                                       u355_25 0B7D                                         u371_25 0310  
                                       u372_20 031A                                         u373_20 031B  
                                       u277_25 0AA8                                         u349_25 0B4B  
                                       u279_25 0AB2                                         u287_25 0A5D  
                                       u383_25 0372                                         u384_23 0390  
                                       u376_25 033C                                         u289_25 0A6C  
                                       _OSCCON 0099                                         u388_25 03E3  
                                       u398_25 041B                                         u235lld 0F32  
                                       _SPBRGH 019C                                         _SPBRGL 019B  
                                       u246lld 0746                                         _TX1REG 019A  
                                       _TX1STA 019E                                   ?_resetCursor 0070  
                               __CFG_PWRTE$OFF 0000                                   vfprintf@cfmt 0159  
                                       ___flge 0BFB                                      ??___aodiv 00B0  
                                    ??___fladd 0020                                      ??___aomod 00B0  
                                    ??___fldiv 0078                                      ??___awdiv 0074  
                               __CFG_STVREN$ON 0000                                      ??___awmod 007D  
                                    ??___flmul 0035                                      ??___fltol 00A4  
                                       _hrDisp 0120                                         _distHi 0152  
                                       _distLo 0150                               ?_TMR0_Initialize 0070  
                             ___awdiv@quotient 0077                                ___awmod@divisor 0052  
                              ___awmod@counter 0056                                         _printf 081F  
                                       pad@buf 00B3                                         dtoa@fp 00CB  
                                       _strlen 087A            __size_of_IOCCF7_SetInterruptHandler 0009  
                            __end_ofi1___fltol 0B95                                         fputc@c 00A2  
                                       fputs@c 00B0                                         fputs@i 00B1  
                                       fputs@s 00AA                             __size_of__Umul8_16 001F  
                             __end_of_timerISR 0912                                i1___fltol@sign1 0050  
                             __end_of_vfprintf 0992       TMR0_SetInterruptHandler@InterruptHandler 00A0  
   IOCCF7_SetInterruptHandler@InterruptHandler 00A0                               ?_PIN_MANAGER_IOC 0070  
                                 ??_IOCCF7_ISR 007E                                     ___flge@ff1 00A0  
                                   ___flge@ff2 00A4                              _SYSTEM_Initialize 17E7  
                      __end_of__initialization 0039                                     _adcCounter 0140  
                           ?_SYSTEM_Initialize 0070                                     ___fltol@f1 00A0  
                               __pcstackCOMMON 0070                                   __pidataBANK2 08CD  
                          ??_SYSTEM_Initialize 00A3                                      ?_TMR0_ISR 0070  
                                __end_of_fputc 0A42                                  __end_of_fputs 0960  
                                __end_of_putch 1795                             __end_of_IOCCF7_ISR 1800  
                               _OPTION_REGbits 0095                ??_EUSART_SetOverrunErrorHandler 00A2  
                                      ??_fputc 00A5                      __end_of_SYSTEM_Initialize 17F3  
                                      ??_fputs 00AD                                        ??_putch 00A1  
                                   __pbssBANK0 005C                                     __pbssBANK2 0140  
                                   __pbssBANK3 01A0                           __end_of_EUSART_Write 17E7  
                            __end_of__Umul8_16 08CD                                     __pmaintext 0C77  
                                      ?___flge 00A0               __end_of_TMR0_SetInterruptHandler 17DD  
                                   ??_TMR0_ISR 007C                                __CFG_PPS1WAY$ON 0000  
                           __size_of_setCursor 003D                                     __pintentry 0004  
                                      ?_printf 015B                                        ?_strlen 00A0  
                           __size_of_speedCalc 00E4                                __CFG_WDTCCS$SWC 0000  
                                 ?_writeString 0070                             __size_of_vfpfcnvrt 00DC  
                                      _OSCTUNE 0098                                        _SLRCONA 030C  
                                      _SLRCONB 030D                                        _SLRCONC 030E  
           __end_of_IOCCF7_SetInterruptHandler 17D4                     _IOCCF7_SetInterruptHandler 17CB  
                     ??_EUSART_SetErrorHandler 00A2                           __size_of_resetCursor 0008  
                                    ?_timerISR 0070                                __size_of___flge 007C  
                                      ___aodiv 0F09                                        ___fladd 0269  
                                      ___aomod 071D                                        ___fldiv 0452  
                                      ___awdiv 0A88                                        ___awmod 0A42  
                                      ___flmul 003D                                        ___fltol 0B95  
                                    ?_vfprintf 00EA                                        __ptext1 0834  
                                      __ptext2 09C5                                        __ptext3 0802  
                                      __ptext4 17A8                                        __ptext5 0893  
                                      __ptext6 081F                                        __ptext7 0960  
                                      __ptext8 0D49                                        __ptext9 05CC  
                              __size_of_printf 0015                                __size_of_strlen 0019  
                                      _counter 0154                          _OSCILLATOR_Initialize 17A1  
                                 __size_of_abs 0019                                   __size_of_pad 0056  
                             ___awmod@dividend 0054                       ??_PIN_MANAGER_Initialize 00A2  
                                    _IOCCFbits 0399                                        _speedHi 014C  
                                    _IOCCNbits 0398                                        _speedLo 014E  
                                    _IOCCPbits 0397                     __size_of_SYSTEM_Initialize 000C  
                                      clrloop0 1796                           end_of_initialization 0039  
                            __end_of_setCursor 0A02          __end_of_EUSART_SetOverrunErrorHandler 17CB  
       __size_of_EUSART_SetOverrunErrorHandler 0009                  _EUSART_SetOverrunErrorHandler 17C2  
                                      fputc@fp 00A4                                        init_ram 179B  
                                      fputs@fp 00AC                                        initloop 179C  
                            __end_of_speedCalc 0F09                              _EUSART_Initialize 0912  
                           ?_EUSART_Initialize 0070                              __end_of_vfpfcnvrt 0E25  
                                   ??_timerISR 007C                             _EUSART_is_tx_ready 0802  
                                   ??_vfprintf 00ED                                        strlen@a 00A3  
                                      strlen@s 00A4                            ??_EUSART_Initialize 00A2  
                                 _distanceDisp 012D                       _TMR0_SetInterruptHandler 17D4  
                          ?_EUSART_is_tx_ready 0070                                    ___fladd@grs 007B  
                             __CFG_FOSC$INTOSC 0000                          __size_of_EUSART_Write 000A  
                                  ___fldiv@grs 0027                                      i1___fltol 0B2F  
                                  ___fldiv@rem 0020                __size_of_EUSART_SetErrorHandler 0009  
                                  ___flmul@grs 003B                      __end_of_EUSART_Initialize 0937  
                         ??_EUSART_is_tx_ready 00A0                                 _speedCalc$1219 0058  
                               __end_of___flge 0C77                     _EUSART_DefaultErrorHandler 0000  
                                  vfpfcnvrt@ap 00DB                                    vfpfcnvrt@fp 00E9  
                                  vfpfcnvrt@ll 00E1                                   _EUSART_Write 17DD  
                            __size_of_TMR0_ISR 000F                         ?_OSCILLATOR_Initialize 0070  
                            writeString@string 00B8                                 __end_of_printf 0834  
                               __end_of_strlen 0893                            start_initialization 0016  
                     __size_of_TMR0_Initialize 0018                __size_of_PIN_MANAGER_Initialize 0033  
                                  __end_of_abs 087A                                    __end_of_pad 0B2F  
                                   ?i1___fltol 0047                           __size_of_writeString 0015  
                       _EUSART_is_tx_ready$167 00A0                                    putch@txData 00A1  
                     __size_of_PIN_MANAGER_IOC 0006                 ?_EUSART_SetOverrunErrorHandler 00A0  
                                  vfprintf@fmt 00EA                     _EUSART_FramingErrorHandler 016C  
                                     ??___flge 00A8                         _EUSART_SetErrorHandler 17B0  
                                    __Umul8_16 08AE                                    __pdataBANK2 0120  
                                     ??_printf 00EF                                       ??_strlen 00A2  
                                    ___fladd@a 0074                                      ___fladd@b 0070  
                                    ___fldiv@a 0070                                      ___fldiv@b 0074  
                                    ___flmul@a 0031                                      ___flmul@b 002D  
                                    ___latbits 0002                                  __pcstackBANK0 0020  
                                __pcstackBANK1 00A0                                  __pcstackBANK2 0158  
                             ___aodiv@dividend 00A8                    ?_IOCCF7_SetInterruptHandler 00A0  
                   __size_of_EUSART_Initialize 0025                          _TMR0_InterruptHandler 0166  
                                    __pnvBANK0 006D                                      __pnvBANK2 0166  
                       _PIN_MANAGER_Initialize 0992                                       ?___aodiv 00A0  
                                     ?___fladd 0070                                       ?___aomod 00A0  
                                     ?___fldiv 0070                                       ?___awdiv 0070  
                             ___aodiv@quotient 00B3                                       ?___awmod 0052  
                                     ?___flmul 002D                                       ?___fltol 00A0  
                                    _heartRate 0144                                     ?__Umul8_16 0070  
                                   setCursor@a 00A4                                     setCursor@b 00A1  
                            __size_of_timerISR 0025                   ??_INTERRUPT_InterruptManager 007E  
                            __size_of_vfprintf 0032                                       _BAUD1CON 019F  
                                  ??i1___fltol 004B                                 __size_of_fputc 0040  
                               __size_of_fputs 0029                                 __size_of_putch 0006  
                            ??_TMR0_Initialize 00A2                                  ??_resetCursor 00B8  
       EUSART_SetErrorHandler@interruptHandler 00A0                                      _setCursor 09C5  
                                    clear_ram0 1795                              _eusartRxLastError 0068  
          __size_of_INTERRUPT_InterruptManager 0010                     ??_TMR0_SetInterruptHandler 00A2  
                                     _PIR1bits 0010                ??_EUSART_SetFramingErrorHandler 00A2  
                                    _puts$1041 00B7                                      _speedCalc 0E25  
                                    _speedDisp 0138               ??_IOCCF7_DefaultInterruptHandler 0070  
              ?_IOCCF7_DefaultInterruptHandler 0070                           __CFG_WDTCPS$WDTCPS1F 0000  
                                     _TMR0_ISR 0810              _EUSART_DefaultOverrunErrorHandler 0000  
                            ??_PIN_MANAGER_IOC 007E                                      _vfpfcnvrt 0D49  
                                   ?_setCursor 00A1                                     vfprintf@ap 00EC  
                                   vfprintf@fp 0158                            __end_of_resetCursor 17B0  
                                   ?_speedCalc 0070                        ??_OSCILLATOR_Initialize 00A0  
                                  ??__Umul8_16 0072                            _EUSART_ErrorHandler 0168  
                             __size_of___aodiv 00F7                               __size_of___fladd 01E9  
                             __size_of___aomod 00DF                               __size_of___fldiv 017A  
                             __size_of___awdiv 0051                               __size_of___awmod 0046  
                             __size_of___flmul 022C                               __size_of___fltol 0066  
                                   ?_vfpfcnvrt 00DA                                ___aodiv@divisor 00A0  
                              ___aodiv@counter 00B1                                       _dtoa$695 00C7  
                                     __ptext10 0AD9                                       __ptext11 087A  
                                     __ptext20 0BFB                                       __ptext12 0937  
                                     __ptext21 17E7                                       __ptext13 0A02  
                                     __ptext30 17B0                                       __ptext22 0849  
                                     __ptext14 178F                                       __ptext23 17D4  
                                     __ptext15 17DD                                       __ptext40 0B2F  
                                     __ptext32 0810                                       __ptext24 0992  
                                     __ptext16 0861                                       __ptext41 003D  
                                     __ptext33 07FC                                       __ptext25 17CB  
                                     __ptext17 071D                                       __ptext42 08AE  
                                     __ptext34 08ED                                       __ptext26 17A1  
                                     __ptext18 0F09                                       __ptext43 0452  
                                     __ptext35 0269                                       __ptext27 0912  
                                     __ptext19 0B95                                       __ptext44 0A42  
                                     __ptext36 1789                                       __ptext28 17C2  
                                     __ptext45 0A88                                       __ptext37 17F3  
                                     __ptext29 17B9                                       __ptext38 07FD  
                                     __ptext39 0E25                                       _distance 0066  
                                   _IOCCF7_ISR 17F3                                  __size_of_main 00D2  
                                __size_of_dtoa 0151                                  __size_of_puts 001B  
                  __size_of_EUSART_is_tx_ready 000E           __end_of_TMR0_DefaultInterruptHandler 07FD  
        __size_of_TMR0_DefaultInterruptHandler 0001                   _TMR0_DefaultInterruptHandler 07FC  
                         __CFG_WDTCWS$WDTCWSSW 0000                        ?_EUSART_SetErrorHandler 00A0  
                                   _RC1STAbits 019D  EUSART_SetOverrunErrorHandler@interruptHandler 00A0  
                                     _timerISR 08ED                                       int$flags 007E  
                                     _vfprintf 0960             __end_of_INTERRUPT_InterruptManager 0014  
                   _INTERRUPT_InterruptManager 0004                                      printf@fmt 015B  
        __end_of_EUSART_SetFramingErrorHandler 17C2         __size_of_EUSART_SetFramingErrorHandler 0009  
                _EUSART_SetFramingErrorHandler 17B9                               ___aomod@dividend 00A8  
                                ??_writeString 00B8                                     _INTCONbits 000B  
                                     intlevel1 0000                        ?_PIN_MANAGER_Initialize 0070  
                                  _resetCursor 17A8                 __end_of_EUSART_SetErrorHandler 17B9  
                                  ??_setCursor 00A2                              __CFG_CLKOUTEN$OFF 0000  
                ?_TMR0_DefaultInterruptHandler 0070                                    ??_speedCalc 007E  
                                     printf@ap 0163  EUSART_SetFramingErrorHandler@interruptHandler 00A0  
                              ___aomod@divisor 00A0                                    ??_vfpfcnvrt 00DC  
                              ___aomod@counter 00B1                                  __pstringtext1 1000  
                                __pstringtext2 100F                                  __pstringtext3 1800  
                                __pstringtext4 180A                                  __pstringtext5 1813  
                                __pstringtext6 0000                         __Umul8_16@multiplicand 0070  
                                   _OPTION_REG 0095                                _TMR0_Initialize 0849  
                                   _TX1STAbits 019E                                  ___fladd@signs 0078  
                           EUSART_Write@txData 00A0                            __end_of_writeString 0849  
                                 ___aodiv@sign 00B2                 __end_of_PIN_MANAGER_Initialize 09C5  
                                  ?_IOCCF7_ISR 0070                                   ___fladd@aexp 0079  
                                 ___fladd@bexp 007A                                _PIN_MANAGER_IOC 1789  
                         __Umul8_16@multiplier 0078                                   ___aomod@sign 00B2  
                      _IOCCF7_InterruptHandler 006D                              __Umul8_16@product 0074  
