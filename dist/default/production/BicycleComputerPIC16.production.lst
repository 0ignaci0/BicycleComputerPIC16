

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Apr 02 12:31:48 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1619
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
    10                           	psect	stringtext4,global,class=STRCODE,delta=2
    11                           	psect	stringtext5,global,class=STRCODE,delta=2
    12                           	psect	stringtext6,global,class=STRCODE,delta=2
    13                           	psect	stringtext7,global,class=STRCODE,delta=2
    14                           	psect	cinit,global,class=CODE,merge=1,delta=2
    15                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    18                           	psect	clrtext,global,class=CODE,delta=2
    19                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    21                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    23                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    24                           	psect	text1,local,class=CODE,merge=1,delta=2
    25                           	psect	text2,local,class=CODE,merge=1,delta=2
    26                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text5,local,class=CODE,merge=1,delta=2
    29                           	psect	text6,local,class=CODE,merge=1,delta=2
    30                           	psect	text7,local,class=CODE,merge=1,delta=2
    31                           	psect	text8,local,class=CODE,merge=1,delta=2
    32                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text12,local,class=CODE,merge=1,delta=2
    36                           	psect	text13,local,class=CODE,merge=1,delta=2
    37                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text18,local,class=CODE,merge=1,delta=2
    42                           	psect	text19,local,class=CODE,merge=1,delta=2
    43                           	psect	text20,local,class=CODE,merge=1,delta=2
    44                           	psect	text21,local,class=CODE,merge=1,delta=2
    45                           	psect	text22,local,class=CODE,merge=1,delta=2
    46                           	psect	text23,local,class=CODE,merge=1,delta=2
    47                           	psect	text24,local,class=CODE,merge=1,delta=2
    48                           	psect	text25,local,class=CODE,merge=1,delta=2
    49                           	psect	text26,local,class=CODE,merge=1,delta=2
    50                           	psect	text27,local,class=CODE,merge=1,delta=2
    51                           	psect	text28,local,class=CODE,merge=1,delta=2
    52                           	psect	intentry,global,class=CODE,delta=2
    53                           	psect	text30,local,class=CODE,merge=1,delta=2
    54                           	psect	text31,local,class=CODE,merge=1,delta=2
    55                           	psect	text32,local,class=CODE,merge=1,delta=2
    56                           	psect	text33,local,class=CODE,merge=1,delta=2
    57                           	psect	text34,local,class=CODE,merge=1,delta=2
    58                           	psect	text35,local,class=CODE,merge=1,delta=2
    59                           	psect	text36,local,class=CODE,merge=1,delta=2
    60                           	psect	text37,local,class=CODE,merge=1,delta=2,group=1
    61                           	psect	text38,local,class=CODE,merge=1,delta=2,group=1
    62                           	psect	text39,local,class=CODE,merge=1,delta=2,group=1
    63                           	dabs	1,0x7E,2
    64  0000                     
    65                           ; Version 2.05
    66                           ; Generated 20/12/2018 GMT
    67                           ; 
    68                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    69                           ; All rights reserved.
    70                           ; 
    71                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    72                           ; 
    73                           ; Redistribution and use in source and binary forms, with or without modification, are
    74                           ; permitted provided that the following conditions are met:
    75                           ; 
    76                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    77                           ;        conditions and the following disclaimer.
    78                           ; 
    79                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    80                           ;        of conditions and the following disclaimer in the documentation and/or other
    81                           ;        materials provided with the distribution.
    82                           ; 
    83                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    84                           ;        software without specific prior written permission.
    85                           ; 
    86                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    87                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    88                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    89                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    90                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    91                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    92                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    93                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    94                           ; 
    95                           ; 
    96                           ; Code-generator required, PIC16F1619 Definitions
    97                           ; 
    98                           ; SFR Addresses
    99  0000                     	;# 
   100  0001                     	;# 
   101  0002                     	;# 
   102  0003                     	;# 
   103  0004                     	;# 
   104  0005                     	;# 
   105  0006                     	;# 
   106  0007                     	;# 
   107  0008                     	;# 
   108  0009                     	;# 
   109  000A                     	;# 
   110  000B                     	;# 
   111  000C                     	;# 
   112  000D                     	;# 
   113  000E                     	;# 
   114  0010                     	;# 
   115  0011                     	;# 
   116  0012                     	;# 
   117  0013                     	;# 
   118  0014                     	;# 
   119  0015                     	;# 
   120  0016                     	;# 
   121  0016                     	;# 
   122  0017                     	;# 
   123  0018                     	;# 
   124  0019                     	;# 
   125  001A                     	;# 
   126  001A                     	;# 
   127  001B                     	;# 
   128  001B                     	;# 
   129  001C                     	;# 
   130  001D                     	;# 
   131  001E                     	;# 
   132  001F                     	;# 
   133  008C                     	;# 
   134  008D                     	;# 
   135  008E                     	;# 
   136  0090                     	;# 
   137  0091                     	;# 
   138  0092                     	;# 
   139  0093                     	;# 
   140  0094                     	;# 
   141  0095                     	;# 
   142  0096                     	;# 
   143  0098                     	;# 
   144  0099                     	;# 
   145  009A                     	;# 
   146  009B                     	;# 
   147  009B                     	;# 
   148  009C                     	;# 
   149  009D                     	;# 
   150  009E                     	;# 
   151  009F                     	;# 
   152  010C                     	;# 
   153  010D                     	;# 
   154  010E                     	;# 
   155  0111                     	;# 
   156  0112                     	;# 
   157  0113                     	;# 
   158  0114                     	;# 
   159  0115                     	;# 
   160  0116                     	;# 
   161  0117                     	;# 
   162  0118                     	;# 
   163  0119                     	;# 
   164  011C                     	;# 
   165  018C                     	;# 
   166  018D                     	;# 
   167  018E                     	;# 
   168  0191                     	;# 
   169  0191                     	;# 
   170  0192                     	;# 
   171  0193                     	;# 
   172  0193                     	;# 
   173  0194                     	;# 
   174  0195                     	;# 
   175  0196                     	;# 
   176  0197                     	;# 
   177  0199                     	;# 
   178  0199                     	;# 
   179  0199                     	;# 
   180  019A                     	;# 
   181  019A                     	;# 
   182  019A                     	;# 
   183  019B                     	;# 
   184  019B                     	;# 
   185  019B                     	;# 
   186  019B                     	;# 
   187  019B                     	;# 
   188  019C                     	;# 
   189  019C                     	;# 
   190  019C                     	;# 
   191  019D                     	;# 
   192  019D                     	;# 
   193  019D                     	;# 
   194  019E                     	;# 
   195  019E                     	;# 
   196  019E                     	;# 
   197  019F                     	;# 
   198  019F                     	;# 
   199  019F                     	;# 
   200  019F                     	;# 
   201  019F                     	;# 
   202  020C                     	;# 
   203  020D                     	;# 
   204  020E                     	;# 
   205  0211                     	;# 
   206  0211                     	;# 
   207  0212                     	;# 
   208  0212                     	;# 
   209  0213                     	;# 
   210  0213                     	;# 
   211  0214                     	;# 
   212  0214                     	;# 
   213  0215                     	;# 
   214  0215                     	;# 
   215  0215                     	;# 
   216  0215                     	;# 
   217  0216                     	;# 
   218  0216                     	;# 
   219  0217                     	;# 
   220  0217                     	;# 
   221  028C                     	;# 
   222  028D                     	;# 
   223  028E                     	;# 
   224  0291                     	;# 
   225  0291                     	;# 
   226  0292                     	;# 
   227  0293                     	;# 
   228  0294                     	;# 
   229  0298                     	;# 
   230  0298                     	;# 
   231  0299                     	;# 
   232  029A                     	;# 
   233  029B                     	;# 
   234  029E                     	;# 
   235  030C                     	;# 
   236  030D                     	;# 
   237  030E                     	;# 
   238  038C                     	;# 
   239  038D                     	;# 
   240  038E                     	;# 
   241  0391                     	;# 
   242  0392                     	;# 
   243  0393                     	;# 
   244  0394                     	;# 
   245  0395                     	;# 
   246  0396                     	;# 
   247  0397                     	;# 
   248  0398                     	;# 
   249  0399                     	;# 
   250  040E                     	;# 
   251  0413                     	;# 
   252  0413                     	;# 
   253  0414                     	;# 
   254  0414                     	;# 
   255  0415                     	;# 
   256  0416                     	;# 
   257  0417                     	;# 
   258  0418                     	;# 
   259  041A                     	;# 
   260  041A                     	;# 
   261  041B                     	;# 
   262  041B                     	;# 
   263  041C                     	;# 
   264  041D                     	;# 
   265  041E                     	;# 
   266  041F                     	;# 
   267  0493                     	;# 
   268  0494                     	;# 
   269  0495                     	;# 
   270  0496                     	;# 
   271  049A                     	;# 
   272  049B                     	;# 
   273  049C                     	;# 
   274  049D                     	;# 
   275  058C                     	;# 
   276  058C                     	;# 
   277  058D                     	;# 
   278  058E                     	;# 
   279  058E                     	;# 
   280  058F                     	;# 
   281  0590                     	;# 
   282  0590                     	;# 
   283  0591                     	;# 
   284  0592                     	;# 
   285  0592                     	;# 
   286  0593                     	;# 
   287  0594                     	;# 
   288  0594                     	;# 
   289  0595                     	;# 
   290  0596                     	;# 
   291  0596                     	;# 
   292  0597                     	;# 
   293  0598                     	;# 
   294  0599                     	;# 
   295  059A                     	;# 
   296  059B                     	;# 
   297  059B                     	;# 
   298  059C                     	;# 
   299  059D                     	;# 
   300  060C                     	;# 
   301  060C                     	;# 
   302  060D                     	;# 
   303  060E                     	;# 
   304  060F                     	;# 
   305  060F                     	;# 
   306  0610                     	;# 
   307  0611                     	;# 
   308  0612                     	;# 
   309  0613                     	;# 
   310  0614                     	;# 
   311  0617                     	;# 
   312  0617                     	;# 
   313  0618                     	;# 
   314  0619                     	;# 
   315  061A                     	;# 
   316  061A                     	;# 
   317  061B                     	;# 
   318  061C                     	;# 
   319  0691                     	;# 
   320  0692                     	;# 
   321  0693                     	;# 
   322  0694                     	;# 
   323  0695                     	;# 
   324  0696                     	;# 
   325  0697                     	;# 
   326  0699                     	;# 
   327  069A                     	;# 
   328  0711                     	;# 
   329  0712                     	;# 
   330  0713                     	;# 
   331  0714                     	;# 
   332  0715                     	;# 
   333  0718                     	;# 
   334  0718                     	;# 
   335  0719                     	;# 
   336  071A                     	;# 
   337  071A                     	;# 
   338  071B                     	;# 
   339  071C                     	;# 
   340  071D                     	;# 
   341  0791                     	;# 
   342  0791                     	;# 
   343  0792                     	;# 
   344  0793                     	;# 
   345  0793                     	;# 
   346  0794                     	;# 
   347  0795                     	;# 
   348  0795                     	;# 
   349  0796                     	;# 
   350  0797                     	;# 
   351  0797                     	;# 
   352  0798                     	;# 
   353  0799                     	;# 
   354  079A                     	;# 
   355  080C                     	;# 
   356  080C                     	;# 
   357  080D                     	;# 
   358  080E                     	;# 
   359  080E                     	;# 
   360  080F                     	;# 
   361  0810                     	;# 
   362  0810                     	;# 
   363  0811                     	;# 
   364  0812                     	;# 
   365  0812                     	;# 
   366  0813                     	;# 
   367  0814                     	;# 
   368  0815                     	;# 
   369  0816                     	;# 
   370  0817                     	;# 
   371  0818                     	;# 
   372  0819                     	;# 
   373  081A                     	;# 
   374  081A                     	;# 
   375  081B                     	;# 
   376  081C                     	;# 
   377  081C                     	;# 
   378  081D                     	;# 
   379  088C                     	;# 
   380  088D                     	;# 
   381  088E                     	;# 
   382  088F                     	;# 
   383  088F                     	;# 
   384  0890                     	;# 
   385  0891                     	;# 
   386  0892                     	;# 
   387  0893                     	;# 
   388  0893                     	;# 
   389  0894                     	;# 
   390  0895                     	;# 
   391  0896                     	;# 
   392  0897                     	;# 
   393  0897                     	;# 
   394  0898                     	;# 
   395  0899                     	;# 
   396  0D8C                     	;# 
   397  0D8C                     	;# 
   398  0D8D                     	;# 
   399  0D8E                     	;# 
   400  0D8F                     	;# 
   401  0D8F                     	;# 
   402  0D90                     	;# 
   403  0D91                     	;# 
   404  0D92                     	;# 
   405  0D92                     	;# 
   406  0D93                     	;# 
   407  0D94                     	;# 
   408  0D95                     	;# 
   409  0D95                     	;# 
   410  0D96                     	;# 
   411  0D97                     	;# 
   412  0D98                     	;# 
   413  0D99                     	;# 
   414  0D9A                     	;# 
   415  0D9B                     	;# 
   416  0D9C                     	;# 
   417  0D9D                     	;# 
   418  0D9E                     	;# 
   419  0D9E                     	;# 
   420  0D9F                     	;# 
   421  0DA0                     	;# 
   422  0DA1                     	;# 
   423  0DA1                     	;# 
   424  0DA2                     	;# 
   425  0DA3                     	;# 
   426  0DA4                     	;# 
   427  0DA4                     	;# 
   428  0DA5                     	;# 
   429  0DA6                     	;# 
   430  0DA7                     	;# 
   431  0DA7                     	;# 
   432  0DA8                     	;# 
   433  0DA9                     	;# 
   434  0DAA                     	;# 
   435  0DAB                     	;# 
   436  0DAC                     	;# 
   437  0DAD                     	;# 
   438  0DAE                     	;# 
   439  0DAF                     	;# 
   440  0E0F                     	;# 
   441  0E10                     	;# 
   442  0E11                     	;# 
   443  0E12                     	;# 
   444  0E13                     	;# 
   445  0E14                     	;# 
   446  0E15                     	;# 
   447  0E16                     	;# 
   448  0E17                     	;# 
   449  0E18                     	;# 
   450  0E19                     	;# 
   451  0E1A                     	;# 
   452  0E1B                     	;# 
   453  0E1C                     	;# 
   454  0E1D                     	;# 
   455  0E1E                     	;# 
   456  0E1F                     	;# 
   457  0E20                     	;# 
   458  0E21                     	;# 
   459  0E22                     	;# 
   460  0E23                     	;# 
   461  0E24                     	;# 
   462  0E25                     	;# 
   463  0E26                     	;# 
   464  0E27                     	;# 
   465  0E28                     	;# 
   466  0E29                     	;# 
   467  0E2A                     	;# 
   468  0E2B                     	;# 
   469  0E2C                     	;# 
   470  0E2D                     	;# 
   471  0E2E                     	;# 
   472  0E90                     	;# 
   473  0E91                     	;# 
   474  0E92                     	;# 
   475  0E94                     	;# 
   476  0E95                     	;# 
   477  0E9C                     	;# 
   478  0E9D                     	;# 
   479  0E9E                     	;# 
   480  0E9F                     	;# 
   481  0EA0                     	;# 
   482  0EA1                     	;# 
   483  0EA2                     	;# 
   484  0EA3                     	;# 
   485  0EA4                     	;# 
   486  0EA5                     	;# 
   487  0EA6                     	;# 
   488  0EA7                     	;# 
   489  0F0F                     	;# 
   490  0F10                     	;# 
   491  0F11                     	;# 
   492  0F12                     	;# 
   493  0F13                     	;# 
   494  0F14                     	;# 
   495  0F15                     	;# 
   496  0F16                     	;# 
   497  0F17                     	;# 
   498  0F18                     	;# 
   499  0F19                     	;# 
   500  0F1A                     	;# 
   501  0F1B                     	;# 
   502  0F1C                     	;# 
   503  0F1D                     	;# 
   504  0F1E                     	;# 
   505  0F1F                     	;# 
   506  0F20                     	;# 
   507  0F21                     	;# 
   508  0F22                     	;# 
   509  0F23                     	;# 
   510  0F24                     	;# 
   511  0F25                     	;# 
   512  0F26                     	;# 
   513  0F27                     	;# 
   514  0F28                     	;# 
   515  0F29                     	;# 
   516  0F2A                     	;# 
   517  0F2B                     	;# 
   518  0F2C                     	;# 
   519  0F2D                     	;# 
   520  0F2E                     	;# 
   521  0F2F                     	;# 
   522  0F30                     	;# 
   523  0F31                     	;# 
   524  0F32                     	;# 
   525  0F33                     	;# 
   526  0F34                     	;# 
   527  0F35                     	;# 
   528  0F36                     	;# 
   529  0F37                     	;# 
   530  0FE4                     	;# 
   531  0FE5                     	;# 
   532  0FE6                     	;# 
   533  0FE7                     	;# 
   534  0FE8                     	;# 
   535  0FE9                     	;# 
   536  0FEA                     	;# 
   537  0FEB                     	;# 
   538  0FED                     	;# 
   539  0FEE                     	;# 
   540  0FEF                     	;# 
   541  0000                     	;# 
   542  0001                     	;# 
   543  0002                     	;# 
   544  0003                     	;# 
   545  0004                     	;# 
   546  0005                     	;# 
   547  0006                     	;# 
   548  0007                     	;# 
   549  0008                     	;# 
   550  0009                     	;# 
   551  000A                     	;# 
   552  000B                     	;# 
   553  000C                     	;# 
   554  000D                     	;# 
   555  000E                     	;# 
   556  0010                     	;# 
   557  0011                     	;# 
   558  0012                     	;# 
   559  0013                     	;# 
   560  0014                     	;# 
   561  0015                     	;# 
   562  0016                     	;# 
   563  0016                     	;# 
   564  0017                     	;# 
   565  0018                     	;# 
   566  0019                     	;# 
   567  001A                     	;# 
   568  001A                     	;# 
   569  001B                     	;# 
   570  001B                     	;# 
   571  001C                     	;# 
   572  001D                     	;# 
   573  001E                     	;# 
   574  001F                     	;# 
   575  008C                     	;# 
   576  008D                     	;# 
   577  008E                     	;# 
   578  0090                     	;# 
   579  0091                     	;# 
   580  0092                     	;# 
   581  0093                     	;# 
   582  0094                     	;# 
   583  0095                     	;# 
   584  0096                     	;# 
   585  0098                     	;# 
   586  0099                     	;# 
   587  009A                     	;# 
   588  009B                     	;# 
   589  009B                     	;# 
   590  009C                     	;# 
   591  009D                     	;# 
   592  009E                     	;# 
   593  009F                     	;# 
   594  010C                     	;# 
   595  010D                     	;# 
   596  010E                     	;# 
   597  0111                     	;# 
   598  0112                     	;# 
   599  0113                     	;# 
   600  0114                     	;# 
   601  0115                     	;# 
   602  0116                     	;# 
   603  0117                     	;# 
   604  0118                     	;# 
   605  0119                     	;# 
   606  011C                     	;# 
   607  018C                     	;# 
   608  018D                     	;# 
   609  018E                     	;# 
   610  0191                     	;# 
   611  0191                     	;# 
   612  0192                     	;# 
   613  0193                     	;# 
   614  0193                     	;# 
   615  0194                     	;# 
   616  0195                     	;# 
   617  0196                     	;# 
   618  0197                     	;# 
   619  0199                     	;# 
   620  0199                     	;# 
   621  0199                     	;# 
   622  019A                     	;# 
   623  019A                     	;# 
   624  019A                     	;# 
   625  019B                     	;# 
   626  019B                     	;# 
   627  019B                     	;# 
   628  019B                     	;# 
   629  019B                     	;# 
   630  019C                     	;# 
   631  019C                     	;# 
   632  019C                     	;# 
   633  019D                     	;# 
   634  019D                     	;# 
   635  019D                     	;# 
   636  019E                     	;# 
   637  019E                     	;# 
   638  019E                     	;# 
   639  019F                     	;# 
   640  019F                     	;# 
   641  019F                     	;# 
   642  019F                     	;# 
   643  019F                     	;# 
   644  020C                     	;# 
   645  020D                     	;# 
   646  020E                     	;# 
   647  0211                     	;# 
   648  0211                     	;# 
   649  0212                     	;# 
   650  0212                     	;# 
   651  0213                     	;# 
   652  0213                     	;# 
   653  0214                     	;# 
   654  0214                     	;# 
   655  0215                     	;# 
   656  0215                     	;# 
   657  0215                     	;# 
   658  0215                     	;# 
   659  0216                     	;# 
   660  0216                     	;# 
   661  0217                     	;# 
   662  0217                     	;# 
   663  028C                     	;# 
   664  028D                     	;# 
   665  028E                     	;# 
   666  0291                     	;# 
   667  0291                     	;# 
   668  0292                     	;# 
   669  0293                     	;# 
   670  0294                     	;# 
   671  0298                     	;# 
   672  0298                     	;# 
   673  0299                     	;# 
   674  029A                     	;# 
   675  029B                     	;# 
   676  029E                     	;# 
   677  030C                     	;# 
   678  030D                     	;# 
   679  030E                     	;# 
   680  038C                     	;# 
   681  038D                     	;# 
   682  038E                     	;# 
   683  0391                     	;# 
   684  0392                     	;# 
   685  0393                     	;# 
   686  0394                     	;# 
   687  0395                     	;# 
   688  0396                     	;# 
   689  0397                     	;# 
   690  0398                     	;# 
   691  0399                     	;# 
   692  040E                     	;# 
   693  0413                     	;# 
   694  0413                     	;# 
   695  0414                     	;# 
   696  0414                     	;# 
   697  0415                     	;# 
   698  0416                     	;# 
   699  0417                     	;# 
   700  0418                     	;# 
   701  041A                     	;# 
   702  041A                     	;# 
   703  041B                     	;# 
   704  041B                     	;# 
   705  041C                     	;# 
   706  041D                     	;# 
   707  041E                     	;# 
   708  041F                     	;# 
   709  0493                     	;# 
   710  0494                     	;# 
   711  0495                     	;# 
   712  0496                     	;# 
   713  049A                     	;# 
   714  049B                     	;# 
   715  049C                     	;# 
   716  049D                     	;# 
   717  058C                     	;# 
   718  058C                     	;# 
   719  058D                     	;# 
   720  058E                     	;# 
   721  058E                     	;# 
   722  058F                     	;# 
   723  0590                     	;# 
   724  0590                     	;# 
   725  0591                     	;# 
   726  0592                     	;# 
   727  0592                     	;# 
   728  0593                     	;# 
   729  0594                     	;# 
   730  0594                     	;# 
   731  0595                     	;# 
   732  0596                     	;# 
   733  0596                     	;# 
   734  0597                     	;# 
   735  0598                     	;# 
   736  0599                     	;# 
   737  059A                     	;# 
   738  059B                     	;# 
   739  059B                     	;# 
   740  059C                     	;# 
   741  059D                     	;# 
   742  060C                     	;# 
   743  060C                     	;# 
   744  060D                     	;# 
   745  060E                     	;# 
   746  060F                     	;# 
   747  060F                     	;# 
   748  0610                     	;# 
   749  0611                     	;# 
   750  0612                     	;# 
   751  0613                     	;# 
   752  0614                     	;# 
   753  0617                     	;# 
   754  0617                     	;# 
   755  0618                     	;# 
   756  0619                     	;# 
   757  061A                     	;# 
   758  061A                     	;# 
   759  061B                     	;# 
   760  061C                     	;# 
   761  0691                     	;# 
   762  0692                     	;# 
   763  0693                     	;# 
   764  0694                     	;# 
   765  0695                     	;# 
   766  0696                     	;# 
   767  0697                     	;# 
   768  0699                     	;# 
   769  069A                     	;# 
   770  0711                     	;# 
   771  0712                     	;# 
   772  0713                     	;# 
   773  0714                     	;# 
   774  0715                     	;# 
   775  0718                     	;# 
   776  0718                     	;# 
   777  0719                     	;# 
   778  071A                     	;# 
   779  071A                     	;# 
   780  071B                     	;# 
   781  071C                     	;# 
   782  071D                     	;# 
   783  0791                     	;# 
   784  0791                     	;# 
   785  0792                     	;# 
   786  0793                     	;# 
   787  0793                     	;# 
   788  0794                     	;# 
   789  0795                     	;# 
   790  0795                     	;# 
   791  0796                     	;# 
   792  0797                     	;# 
   793  0797                     	;# 
   794  0798                     	;# 
   795  0799                     	;# 
   796  079A                     	;# 
   797  080C                     	;# 
   798  080C                     	;# 
   799  080D                     	;# 
   800  080E                     	;# 
   801  080E                     	;# 
   802  080F                     	;# 
   803  0810                     	;# 
   804  0810                     	;# 
   805  0811                     	;# 
   806  0812                     	;# 
   807  0812                     	;# 
   808  0813                     	;# 
   809  0814                     	;# 
   810  0815                     	;# 
   811  0816                     	;# 
   812  0817                     	;# 
   813  0818                     	;# 
   814  0819                     	;# 
   815  081A                     	;# 
   816  081A                     	;# 
   817  081B                     	;# 
   818  081C                     	;# 
   819  081C                     	;# 
   820  081D                     	;# 
   821  088C                     	;# 
   822  088D                     	;# 
   823  088E                     	;# 
   824  088F                     	;# 
   825  088F                     	;# 
   826  0890                     	;# 
   827  0891                     	;# 
   828  0892                     	;# 
   829  0893                     	;# 
   830  0893                     	;# 
   831  0894                     	;# 
   832  0895                     	;# 
   833  0896                     	;# 
   834  0897                     	;# 
   835  0897                     	;# 
   836  0898                     	;# 
   837  0899                     	;# 
   838  0D8C                     	;# 
   839  0D8C                     	;# 
   840  0D8D                     	;# 
   841  0D8E                     	;# 
   842  0D8F                     	;# 
   843  0D8F                     	;# 
   844  0D90                     	;# 
   845  0D91                     	;# 
   846  0D92                     	;# 
   847  0D92                     	;# 
   848  0D93                     	;# 
   849  0D94                     	;# 
   850  0D95                     	;# 
   851  0D95                     	;# 
   852  0D96                     	;# 
   853  0D97                     	;# 
   854  0D98                     	;# 
   855  0D99                     	;# 
   856  0D9A                     	;# 
   857  0D9B                     	;# 
   858  0D9C                     	;# 
   859  0D9D                     	;# 
   860  0D9E                     	;# 
   861  0D9E                     	;# 
   862  0D9F                     	;# 
   863  0DA0                     	;# 
   864  0DA1                     	;# 
   865  0DA1                     	;# 
   866  0DA2                     	;# 
   867  0DA3                     	;# 
   868  0DA4                     	;# 
   869  0DA4                     	;# 
   870  0DA5                     	;# 
   871  0DA6                     	;# 
   872  0DA7                     	;# 
   873  0DA7                     	;# 
   874  0DA8                     	;# 
   875  0DA9                     	;# 
   876  0DAA                     	;# 
   877  0DAB                     	;# 
   878  0DAC                     	;# 
   879  0DAD                     	;# 
   880  0DAE                     	;# 
   881  0DAF                     	;# 
   882  0E0F                     	;# 
   883  0E10                     	;# 
   884  0E11                     	;# 
   885  0E12                     	;# 
   886  0E13                     	;# 
   887  0E14                     	;# 
   888  0E15                     	;# 
   889  0E16                     	;# 
   890  0E17                     	;# 
   891  0E18                     	;# 
   892  0E19                     	;# 
   893  0E1A                     	;# 
   894  0E1B                     	;# 
   895  0E1C                     	;# 
   896  0E1D                     	;# 
   897  0E1E                     	;# 
   898  0E1F                     	;# 
   899  0E20                     	;# 
   900  0E21                     	;# 
   901  0E22                     	;# 
   902  0E23                     	;# 
   903  0E24                     	;# 
   904  0E25                     	;# 
   905  0E26                     	;# 
   906  0E27                     	;# 
   907  0E28                     	;# 
   908  0E29                     	;# 
   909  0E2A                     	;# 
   910  0E2B                     	;# 
   911  0E2C                     	;# 
   912  0E2D                     	;# 
   913  0E2E                     	;# 
   914  0E90                     	;# 
   915  0E91                     	;# 
   916  0E92                     	;# 
   917  0E94                     	;# 
   918  0E95                     	;# 
   919  0E9C                     	;# 
   920  0E9D                     	;# 
   921  0E9E                     	;# 
   922  0E9F                     	;# 
   923  0EA0                     	;# 
   924  0EA1                     	;# 
   925  0EA2                     	;# 
   926  0EA3                     	;# 
   927  0EA4                     	;# 
   928  0EA5                     	;# 
   929  0EA6                     	;# 
   930  0EA7                     	;# 
   931  0F0F                     	;# 
   932  0F10                     	;# 
   933  0F11                     	;# 
   934  0F12                     	;# 
   935  0F13                     	;# 
   936  0F14                     	;# 
   937  0F15                     	;# 
   938  0F16                     	;# 
   939  0F17                     	;# 
   940  0F18                     	;# 
   941  0F19                     	;# 
   942  0F1A                     	;# 
   943  0F1B                     	;# 
   944  0F1C                     	;# 
   945  0F1D                     	;# 
   946  0F1E                     	;# 
   947  0F1F                     	;# 
   948  0F20                     	;# 
   949  0F21                     	;# 
   950  0F22                     	;# 
   951  0F23                     	;# 
   952  0F24                     	;# 
   953  0F25                     	;# 
   954  0F26                     	;# 
   955  0F27                     	;# 
   956  0F28                     	;# 
   957  0F29                     	;# 
   958  0F2A                     	;# 
   959  0F2B                     	;# 
   960  0F2C                     	;# 
   961  0F2D                     	;# 
   962  0F2E                     	;# 
   963  0F2F                     	;# 
   964  0F30                     	;# 
   965  0F31                     	;# 
   966  0F32                     	;# 
   967  0F33                     	;# 
   968  0F34                     	;# 
   969  0F35                     	;# 
   970  0F36                     	;# 
   971  0F37                     	;# 
   972  0FE4                     	;# 
   973  0FE5                     	;# 
   974  0FE6                     	;# 
   975  0FE7                     	;# 
   976  0FE8                     	;# 
   977  0FE9                     	;# 
   978  0FEA                     	;# 
   979  0FEB                     	;# 
   980  0FED                     	;# 
   981  0FEE                     	;# 
   982  0FEF                     	;# 
   983  0000                     	;# 
   984  0001                     	;# 
   985  0002                     	;# 
   986  0003                     	;# 
   987  0004                     	;# 
   988  0005                     	;# 
   989  0006                     	;# 
   990  0007                     	;# 
   991  0008                     	;# 
   992  0009                     	;# 
   993  000A                     	;# 
   994  000B                     	;# 
   995  000C                     	;# 
   996  000D                     	;# 
   997  000E                     	;# 
   998  0010                     	;# 
   999  0011                     	;# 
  1000  0012                     	;# 
  1001  0013                     	;# 
  1002  0014                     	;# 
  1003  0015                     	;# 
  1004  0016                     	;# 
  1005  0016                     	;# 
  1006  0017                     	;# 
  1007  0018                     	;# 
  1008  0019                     	;# 
  1009  001A                     	;# 
  1010  001A                     	;# 
  1011  001B                     	;# 
  1012  001B                     	;# 
  1013  001C                     	;# 
  1014  001D                     	;# 
  1015  001E                     	;# 
  1016  001F                     	;# 
  1017  008C                     	;# 
  1018  008D                     	;# 
  1019  008E                     	;# 
  1020  0090                     	;# 
  1021  0091                     	;# 
  1022  0092                     	;# 
  1023  0093                     	;# 
  1024  0094                     	;# 
  1025  0095                     	;# 
  1026  0096                     	;# 
  1027  0098                     	;# 
  1028  0099                     	;# 
  1029  009A                     	;# 
  1030  009B                     	;# 
  1031  009B                     	;# 
  1032  009C                     	;# 
  1033  009D                     	;# 
  1034  009E                     	;# 
  1035  009F                     	;# 
  1036  010C                     	;# 
  1037  010D                     	;# 
  1038  010E                     	;# 
  1039  0111                     	;# 
  1040  0112                     	;# 
  1041  0113                     	;# 
  1042  0114                     	;# 
  1043  0115                     	;# 
  1044  0116                     	;# 
  1045  0117                     	;# 
  1046  0118                     	;# 
  1047  0119                     	;# 
  1048  011C                     	;# 
  1049  018C                     	;# 
  1050  018D                     	;# 
  1051  018E                     	;# 
  1052  0191                     	;# 
  1053  0191                     	;# 
  1054  0192                     	;# 
  1055  0193                     	;# 
  1056  0193                     	;# 
  1057  0194                     	;# 
  1058  0195                     	;# 
  1059  0196                     	;# 
  1060  0197                     	;# 
  1061  0199                     	;# 
  1062  0199                     	;# 
  1063  0199                     	;# 
  1064  019A                     	;# 
  1065  019A                     	;# 
  1066  019A                     	;# 
  1067  019B                     	;# 
  1068  019B                     	;# 
  1069  019B                     	;# 
  1070  019B                     	;# 
  1071  019B                     	;# 
  1072  019C                     	;# 
  1073  019C                     	;# 
  1074  019C                     	;# 
  1075  019D                     	;# 
  1076  019D                     	;# 
  1077  019D                     	;# 
  1078  019E                     	;# 
  1079  019E                     	;# 
  1080  019E                     	;# 
  1081  019F                     	;# 
  1082  019F                     	;# 
  1083  019F                     	;# 
  1084  019F                     	;# 
  1085  019F                     	;# 
  1086  020C                     	;# 
  1087  020D                     	;# 
  1088  020E                     	;# 
  1089  0211                     	;# 
  1090  0211                     	;# 
  1091  0212                     	;# 
  1092  0212                     	;# 
  1093  0213                     	;# 
  1094  0213                     	;# 
  1095  0214                     	;# 
  1096  0214                     	;# 
  1097  0215                     	;# 
  1098  0215                     	;# 
  1099  0215                     	;# 
  1100  0215                     	;# 
  1101  0216                     	;# 
  1102  0216                     	;# 
  1103  0217                     	;# 
  1104  0217                     	;# 
  1105  028C                     	;# 
  1106  028D                     	;# 
  1107  028E                     	;# 
  1108  0291                     	;# 
  1109  0291                     	;# 
  1110  0292                     	;# 
  1111  0293                     	;# 
  1112  0294                     	;# 
  1113  0298                     	;# 
  1114  0298                     	;# 
  1115  0299                     	;# 
  1116  029A                     	;# 
  1117  029B                     	;# 
  1118  029E                     	;# 
  1119  030C                     	;# 
  1120  030D                     	;# 
  1121  030E                     	;# 
  1122  038C                     	;# 
  1123  038D                     	;# 
  1124  038E                     	;# 
  1125  0391                     	;# 
  1126  0392                     	;# 
  1127  0393                     	;# 
  1128  0394                     	;# 
  1129  0395                     	;# 
  1130  0396                     	;# 
  1131  0397                     	;# 
  1132  0398                     	;# 
  1133  0399                     	;# 
  1134  040E                     	;# 
  1135  0413                     	;# 
  1136  0413                     	;# 
  1137  0414                     	;# 
  1138  0414                     	;# 
  1139  0415                     	;# 
  1140  0416                     	;# 
  1141  0417                     	;# 
  1142  0418                     	;# 
  1143  041A                     	;# 
  1144  041A                     	;# 
  1145  041B                     	;# 
  1146  041B                     	;# 
  1147  041C                     	;# 
  1148  041D                     	;# 
  1149  041E                     	;# 
  1150  041F                     	;# 
  1151  0493                     	;# 
  1152  0494                     	;# 
  1153  0495                     	;# 
  1154  0496                     	;# 
  1155  049A                     	;# 
  1156  049B                     	;# 
  1157  049C                     	;# 
  1158  049D                     	;# 
  1159  058C                     	;# 
  1160  058C                     	;# 
  1161  058D                     	;# 
  1162  058E                     	;# 
  1163  058E                     	;# 
  1164  058F                     	;# 
  1165  0590                     	;# 
  1166  0590                     	;# 
  1167  0591                     	;# 
  1168  0592                     	;# 
  1169  0592                     	;# 
  1170  0593                     	;# 
  1171  0594                     	;# 
  1172  0594                     	;# 
  1173  0595                     	;# 
  1174  0596                     	;# 
  1175  0596                     	;# 
  1176  0597                     	;# 
  1177  0598                     	;# 
  1178  0599                     	;# 
  1179  059A                     	;# 
  1180  059B                     	;# 
  1181  059B                     	;# 
  1182  059C                     	;# 
  1183  059D                     	;# 
  1184  060C                     	;# 
  1185  060C                     	;# 
  1186  060D                     	;# 
  1187  060E                     	;# 
  1188  060F                     	;# 
  1189  060F                     	;# 
  1190  0610                     	;# 
  1191  0611                     	;# 
  1192  0612                     	;# 
  1193  0613                     	;# 
  1194  0614                     	;# 
  1195  0617                     	;# 
  1196  0617                     	;# 
  1197  0618                     	;# 
  1198  0619                     	;# 
  1199  061A                     	;# 
  1200  061A                     	;# 
  1201  061B                     	;# 
  1202  061C                     	;# 
  1203  0691                     	;# 
  1204  0692                     	;# 
  1205  0693                     	;# 
  1206  0694                     	;# 
  1207  0695                     	;# 
  1208  0696                     	;# 
  1209  0697                     	;# 
  1210  0699                     	;# 
  1211  069A                     	;# 
  1212  0711                     	;# 
  1213  0712                     	;# 
  1214  0713                     	;# 
  1215  0714                     	;# 
  1216  0715                     	;# 
  1217  0718                     	;# 
  1218  0718                     	;# 
  1219  0719                     	;# 
  1220  071A                     	;# 
  1221  071A                     	;# 
  1222  071B                     	;# 
  1223  071C                     	;# 
  1224  071D                     	;# 
  1225  0791                     	;# 
  1226  0791                     	;# 
  1227  0792                     	;# 
  1228  0793                     	;# 
  1229  0793                     	;# 
  1230  0794                     	;# 
  1231  0795                     	;# 
  1232  0795                     	;# 
  1233  0796                     	;# 
  1234  0797                     	;# 
  1235  0797                     	;# 
  1236  0798                     	;# 
  1237  0799                     	;# 
  1238  079A                     	;# 
  1239  080C                     	;# 
  1240  080C                     	;# 
  1241  080D                     	;# 
  1242  080E                     	;# 
  1243  080E                     	;# 
  1244  080F                     	;# 
  1245  0810                     	;# 
  1246  0810                     	;# 
  1247  0811                     	;# 
  1248  0812                     	;# 
  1249  0812                     	;# 
  1250  0813                     	;# 
  1251  0814                     	;# 
  1252  0815                     	;# 
  1253  0816                     	;# 
  1254  0817                     	;# 
  1255  0818                     	;# 
  1256  0819                     	;# 
  1257  081A                     	;# 
  1258  081A                     	;# 
  1259  081B                     	;# 
  1260  081C                     	;# 
  1261  081C                     	;# 
  1262  081D                     	;# 
  1263  088C                     	;# 
  1264  088D                     	;# 
  1265  088E                     	;# 
  1266  088F                     	;# 
  1267  088F                     	;# 
  1268  0890                     	;# 
  1269  0891                     	;# 
  1270  0892                     	;# 
  1271  0893                     	;# 
  1272  0893                     	;# 
  1273  0894                     	;# 
  1274  0895                     	;# 
  1275  0896                     	;# 
  1276  0897                     	;# 
  1277  0897                     	;# 
  1278  0898                     	;# 
  1279  0899                     	;# 
  1280  0D8C                     	;# 
  1281  0D8C                     	;# 
  1282  0D8D                     	;# 
  1283  0D8E                     	;# 
  1284  0D8F                     	;# 
  1285  0D8F                     	;# 
  1286  0D90                     	;# 
  1287  0D91                     	;# 
  1288  0D92                     	;# 
  1289  0D92                     	;# 
  1290  0D93                     	;# 
  1291  0D94                     	;# 
  1292  0D95                     	;# 
  1293  0D95                     	;# 
  1294  0D96                     	;# 
  1295  0D97                     	;# 
  1296  0D98                     	;# 
  1297  0D99                     	;# 
  1298  0D9A                     	;# 
  1299  0D9B                     	;# 
  1300  0D9C                     	;# 
  1301  0D9D                     	;# 
  1302  0D9E                     	;# 
  1303  0D9E                     	;# 
  1304  0D9F                     	;# 
  1305  0DA0                     	;# 
  1306  0DA1                     	;# 
  1307  0DA1                     	;# 
  1308  0DA2                     	;# 
  1309  0DA3                     	;# 
  1310  0DA4                     	;# 
  1311  0DA4                     	;# 
  1312  0DA5                     	;# 
  1313  0DA6                     	;# 
  1314  0DA7                     	;# 
  1315  0DA7                     	;# 
  1316  0DA8                     	;# 
  1317  0DA9                     	;# 
  1318  0DAA                     	;# 
  1319  0DAB                     	;# 
  1320  0DAC                     	;# 
  1321  0DAD                     	;# 
  1322  0DAE                     	;# 
  1323  0DAF                     	;# 
  1324  0E0F                     	;# 
  1325  0E10                     	;# 
  1326  0E11                     	;# 
  1327  0E12                     	;# 
  1328  0E13                     	;# 
  1329  0E14                     	;# 
  1330  0E15                     	;# 
  1331  0E16                     	;# 
  1332  0E17                     	;# 
  1333  0E18                     	;# 
  1334  0E19                     	;# 
  1335  0E1A                     	;# 
  1336  0E1B                     	;# 
  1337  0E1C                     	;# 
  1338  0E1D                     	;# 
  1339  0E1E                     	;# 
  1340  0E1F                     	;# 
  1341  0E20                     	;# 
  1342  0E21                     	;# 
  1343  0E22                     	;# 
  1344  0E23                     	;# 
  1345  0E24                     	;# 
  1346  0E25                     	;# 
  1347  0E26                     	;# 
  1348  0E27                     	;# 
  1349  0E28                     	;# 
  1350  0E29                     	;# 
  1351  0E2A                     	;# 
  1352  0E2B                     	;# 
  1353  0E2C                     	;# 
  1354  0E2D                     	;# 
  1355  0E2E                     	;# 
  1356  0E90                     	;# 
  1357  0E91                     	;# 
  1358  0E92                     	;# 
  1359  0E94                     	;# 
  1360  0E95                     	;# 
  1361  0E9C                     	;# 
  1362  0E9D                     	;# 
  1363  0E9E                     	;# 
  1364  0E9F                     	;# 
  1365  0EA0                     	;# 
  1366  0EA1                     	;# 
  1367  0EA2                     	;# 
  1368  0EA3                     	;# 
  1369  0EA4                     	;# 
  1370  0EA5                     	;# 
  1371  0EA6                     	;# 
  1372  0EA7                     	;# 
  1373  0F0F                     	;# 
  1374  0F10                     	;# 
  1375  0F11                     	;# 
  1376  0F12                     	;# 
  1377  0F13                     	;# 
  1378  0F14                     	;# 
  1379  0F15                     	;# 
  1380  0F16                     	;# 
  1381  0F17                     	;# 
  1382  0F18                     	;# 
  1383  0F19                     	;# 
  1384  0F1A                     	;# 
  1385  0F1B                     	;# 
  1386  0F1C                     	;# 
  1387  0F1D                     	;# 
  1388  0F1E                     	;# 
  1389  0F1F                     	;# 
  1390  0F20                     	;# 
  1391  0F21                     	;# 
  1392  0F22                     	;# 
  1393  0F23                     	;# 
  1394  0F24                     	;# 
  1395  0F25                     	;# 
  1396  0F26                     	;# 
  1397  0F27                     	;# 
  1398  0F28                     	;# 
  1399  0F29                     	;# 
  1400  0F2A                     	;# 
  1401  0F2B                     	;# 
  1402  0F2C                     	;# 
  1403  0F2D                     	;# 
  1404  0F2E                     	;# 
  1405  0F2F                     	;# 
  1406  0F30                     	;# 
  1407  0F31                     	;# 
  1408  0F32                     	;# 
  1409  0F33                     	;# 
  1410  0F34                     	;# 
  1411  0F35                     	;# 
  1412  0F36                     	;# 
  1413  0F37                     	;# 
  1414  0FE4                     	;# 
  1415  0FE5                     	;# 
  1416  0FE6                     	;# 
  1417  0FE7                     	;# 
  1418  0FE8                     	;# 
  1419  0FE9                     	;# 
  1420  0FEA                     	;# 
  1421  0FEB                     	;# 
  1422  0FED                     	;# 
  1423  0FEE                     	;# 
  1424  0FEF                     	;# 
  1425  0000                     	;# 
  1426  0001                     	;# 
  1427  0002                     	;# 
  1428  0003                     	;# 
  1429  0004                     	;# 
  1430  0005                     	;# 
  1431  0006                     	;# 
  1432  0007                     	;# 
  1433  0008                     	;# 
  1434  0009                     	;# 
  1435  000A                     	;# 
  1436  000B                     	;# 
  1437  000C                     	;# 
  1438  000D                     	;# 
  1439  000E                     	;# 
  1440  0010                     	;# 
  1441  0011                     	;# 
  1442  0012                     	;# 
  1443  0013                     	;# 
  1444  0014                     	;# 
  1445  0015                     	;# 
  1446  0016                     	;# 
  1447  0016                     	;# 
  1448  0017                     	;# 
  1449  0018                     	;# 
  1450  0019                     	;# 
  1451  001A                     	;# 
  1452  001A                     	;# 
  1453  001B                     	;# 
  1454  001B                     	;# 
  1455  001C                     	;# 
  1456  001D                     	;# 
  1457  001E                     	;# 
  1458  001F                     	;# 
  1459  008C                     	;# 
  1460  008D                     	;# 
  1461  008E                     	;# 
  1462  0090                     	;# 
  1463  0091                     	;# 
  1464  0092                     	;# 
  1465  0093                     	;# 
  1466  0094                     	;# 
  1467  0095                     	;# 
  1468  0096                     	;# 
  1469  0098                     	;# 
  1470  0099                     	;# 
  1471  009A                     	;# 
  1472  009B                     	;# 
  1473  009B                     	;# 
  1474  009C                     	;# 
  1475  009D                     	;# 
  1476  009E                     	;# 
  1477  009F                     	;# 
  1478  010C                     	;# 
  1479  010D                     	;# 
  1480  010E                     	;# 
  1481  0111                     	;# 
  1482  0112                     	;# 
  1483  0113                     	;# 
  1484  0114                     	;# 
  1485  0115                     	;# 
  1486  0116                     	;# 
  1487  0117                     	;# 
  1488  0118                     	;# 
  1489  0119                     	;# 
  1490  011C                     	;# 
  1491  018C                     	;# 
  1492  018D                     	;# 
  1493  018E                     	;# 
  1494  0191                     	;# 
  1495  0191                     	;# 
  1496  0192                     	;# 
  1497  0193                     	;# 
  1498  0193                     	;# 
  1499  0194                     	;# 
  1500  0195                     	;# 
  1501  0196                     	;# 
  1502  0197                     	;# 
  1503  0199                     	;# 
  1504  0199                     	;# 
  1505  0199                     	;# 
  1506  019A                     	;# 
  1507  019A                     	;# 
  1508  019A                     	;# 
  1509  019B                     	;# 
  1510  019B                     	;# 
  1511  019B                     	;# 
  1512  019B                     	;# 
  1513  019B                     	;# 
  1514  019C                     	;# 
  1515  019C                     	;# 
  1516  019C                     	;# 
  1517  019D                     	;# 
  1518  019D                     	;# 
  1519  019D                     	;# 
  1520  019E                     	;# 
  1521  019E                     	;# 
  1522  019E                     	;# 
  1523  019F                     	;# 
  1524  019F                     	;# 
  1525  019F                     	;# 
  1526  019F                     	;# 
  1527  019F                     	;# 
  1528  020C                     	;# 
  1529  020D                     	;# 
  1530  020E                     	;# 
  1531  0211                     	;# 
  1532  0211                     	;# 
  1533  0212                     	;# 
  1534  0212                     	;# 
  1535  0213                     	;# 
  1536  0213                     	;# 
  1537  0214                     	;# 
  1538  0214                     	;# 
  1539  0215                     	;# 
  1540  0215                     	;# 
  1541  0215                     	;# 
  1542  0215                     	;# 
  1543  0216                     	;# 
  1544  0216                     	;# 
  1545  0217                     	;# 
  1546  0217                     	;# 
  1547  028C                     	;# 
  1548  028D                     	;# 
  1549  028E                     	;# 
  1550  0291                     	;# 
  1551  0291                     	;# 
  1552  0292                     	;# 
  1553  0293                     	;# 
  1554  0294                     	;# 
  1555  0298                     	;# 
  1556  0298                     	;# 
  1557  0299                     	;# 
  1558  029A                     	;# 
  1559  029B                     	;# 
  1560  029E                     	;# 
  1561  030C                     	;# 
  1562  030D                     	;# 
  1563  030E                     	;# 
  1564  038C                     	;# 
  1565  038D                     	;# 
  1566  038E                     	;# 
  1567  0391                     	;# 
  1568  0392                     	;# 
  1569  0393                     	;# 
  1570  0394                     	;# 
  1571  0395                     	;# 
  1572  0396                     	;# 
  1573  0397                     	;# 
  1574  0398                     	;# 
  1575  0399                     	;# 
  1576  040E                     	;# 
  1577  0413                     	;# 
  1578  0413                     	;# 
  1579  0414                     	;# 
  1580  0414                     	;# 
  1581  0415                     	;# 
  1582  0416                     	;# 
  1583  0417                     	;# 
  1584  0418                     	;# 
  1585  041A                     	;# 
  1586  041A                     	;# 
  1587  041B                     	;# 
  1588  041B                     	;# 
  1589  041C                     	;# 
  1590  041D                     	;# 
  1591  041E                     	;# 
  1592  041F                     	;# 
  1593  0493                     	;# 
  1594  0494                     	;# 
  1595  0495                     	;# 
  1596  0496                     	;# 
  1597  049A                     	;# 
  1598  049B                     	;# 
  1599  049C                     	;# 
  1600  049D                     	;# 
  1601  058C                     	;# 
  1602  058C                     	;# 
  1603  058D                     	;# 
  1604  058E                     	;# 
  1605  058E                     	;# 
  1606  058F                     	;# 
  1607  0590                     	;# 
  1608  0590                     	;# 
  1609  0591                     	;# 
  1610  0592                     	;# 
  1611  0592                     	;# 
  1612  0593                     	;# 
  1613  0594                     	;# 
  1614  0594                     	;# 
  1615  0595                     	;# 
  1616  0596                     	;# 
  1617  0596                     	;# 
  1618  0597                     	;# 
  1619  0598                     	;# 
  1620  0599                     	;# 
  1621  059A                     	;# 
  1622  059B                     	;# 
  1623  059B                     	;# 
  1624  059C                     	;# 
  1625  059D                     	;# 
  1626  060C                     	;# 
  1627  060C                     	;# 
  1628  060D                     	;# 
  1629  060E                     	;# 
  1630  060F                     	;# 
  1631  060F                     	;# 
  1632  0610                     	;# 
  1633  0611                     	;# 
  1634  0612                     	;# 
  1635  0613                     	;# 
  1636  0614                     	;# 
  1637  0617                     	;# 
  1638  0617                     	;# 
  1639  0618                     	;# 
  1640  0619                     	;# 
  1641  061A                     	;# 
  1642  061A                     	;# 
  1643  061B                     	;# 
  1644  061C                     	;# 
  1645  0691                     	;# 
  1646  0692                     	;# 
  1647  0693                     	;# 
  1648  0694                     	;# 
  1649  0695                     	;# 
  1650  0696                     	;# 
  1651  0697                     	;# 
  1652  0699                     	;# 
  1653  069A                     	;# 
  1654  0711                     	;# 
  1655  0712                     	;# 
  1656  0713                     	;# 
  1657  0714                     	;# 
  1658  0715                     	;# 
  1659  0718                     	;# 
  1660  0718                     	;# 
  1661  0719                     	;# 
  1662  071A                     	;# 
  1663  071A                     	;# 
  1664  071B                     	;# 
  1665  071C                     	;# 
  1666  071D                     	;# 
  1667  0791                     	;# 
  1668  0791                     	;# 
  1669  0792                     	;# 
  1670  0793                     	;# 
  1671  0793                     	;# 
  1672  0794                     	;# 
  1673  0795                     	;# 
  1674  0795                     	;# 
  1675  0796                     	;# 
  1676  0797                     	;# 
  1677  0797                     	;# 
  1678  0798                     	;# 
  1679  0799                     	;# 
  1680  079A                     	;# 
  1681  080C                     	;# 
  1682  080C                     	;# 
  1683  080D                     	;# 
  1684  080E                     	;# 
  1685  080E                     	;# 
  1686  080F                     	;# 
  1687  0810                     	;# 
  1688  0810                     	;# 
  1689  0811                     	;# 
  1690  0812                     	;# 
  1691  0812                     	;# 
  1692  0813                     	;# 
  1693  0814                     	;# 
  1694  0815                     	;# 
  1695  0816                     	;# 
  1696  0817                     	;# 
  1697  0818                     	;# 
  1698  0819                     	;# 
  1699  081A                     	;# 
  1700  081A                     	;# 
  1701  081B                     	;# 
  1702  081C                     	;# 
  1703  081C                     	;# 
  1704  081D                     	;# 
  1705  088C                     	;# 
  1706  088D                     	;# 
  1707  088E                     	;# 
  1708  088F                     	;# 
  1709  088F                     	;# 
  1710  0890                     	;# 
  1711  0891                     	;# 
  1712  0892                     	;# 
  1713  0893                     	;# 
  1714  0893                     	;# 
  1715  0894                     	;# 
  1716  0895                     	;# 
  1717  0896                     	;# 
  1718  0897                     	;# 
  1719  0897                     	;# 
  1720  0898                     	;# 
  1721  0899                     	;# 
  1722  0D8C                     	;# 
  1723  0D8C                     	;# 
  1724  0D8D                     	;# 
  1725  0D8E                     	;# 
  1726  0D8F                     	;# 
  1727  0D8F                     	;# 
  1728  0D90                     	;# 
  1729  0D91                     	;# 
  1730  0D92                     	;# 
  1731  0D92                     	;# 
  1732  0D93                     	;# 
  1733  0D94                     	;# 
  1734  0D95                     	;# 
  1735  0D95                     	;# 
  1736  0D96                     	;# 
  1737  0D97                     	;# 
  1738  0D98                     	;# 
  1739  0D99                     	;# 
  1740  0D9A                     	;# 
  1741  0D9B                     	;# 
  1742  0D9C                     	;# 
  1743  0D9D                     	;# 
  1744  0D9E                     	;# 
  1745  0D9E                     	;# 
  1746  0D9F                     	;# 
  1747  0DA0                     	;# 
  1748  0DA1                     	;# 
  1749  0DA1                     	;# 
  1750  0DA2                     	;# 
  1751  0DA3                     	;# 
  1752  0DA4                     	;# 
  1753  0DA4                     	;# 
  1754  0DA5                     	;# 
  1755  0DA6                     	;# 
  1756  0DA7                     	;# 
  1757  0DA7                     	;# 
  1758  0DA8                     	;# 
  1759  0DA9                     	;# 
  1760  0DAA                     	;# 
  1761  0DAB                     	;# 
  1762  0DAC                     	;# 
  1763  0DAD                     	;# 
  1764  0DAE                     	;# 
  1765  0DAF                     	;# 
  1766  0E0F                     	;# 
  1767  0E10                     	;# 
  1768  0E11                     	;# 
  1769  0E12                     	;# 
  1770  0E13                     	;# 
  1771  0E14                     	;# 
  1772  0E15                     	;# 
  1773  0E16                     	;# 
  1774  0E17                     	;# 
  1775  0E18                     	;# 
  1776  0E19                     	;# 
  1777  0E1A                     	;# 
  1778  0E1B                     	;# 
  1779  0E1C                     	;# 
  1780  0E1D                     	;# 
  1781  0E1E                     	;# 
  1782  0E1F                     	;# 
  1783  0E20                     	;# 
  1784  0E21                     	;# 
  1785  0E22                     	;# 
  1786  0E23                     	;# 
  1787  0E24                     	;# 
  1788  0E25                     	;# 
  1789  0E26                     	;# 
  1790  0E27                     	;# 
  1791  0E28                     	;# 
  1792  0E29                     	;# 
  1793  0E2A                     	;# 
  1794  0E2B                     	;# 
  1795  0E2C                     	;# 
  1796  0E2D                     	;# 
  1797  0E2E                     	;# 
  1798  0E90                     	;# 
  1799  0E91                     	;# 
  1800  0E92                     	;# 
  1801  0E94                     	;# 
  1802  0E95                     	;# 
  1803  0E9C                     	;# 
  1804  0E9D                     	;# 
  1805  0E9E                     	;# 
  1806  0E9F                     	;# 
  1807  0EA0                     	;# 
  1808  0EA1                     	;# 
  1809  0EA2                     	;# 
  1810  0EA3                     	;# 
  1811  0EA4                     	;# 
  1812  0EA5                     	;# 
  1813  0EA6                     	;# 
  1814  0EA7                     	;# 
  1815  0F0F                     	;# 
  1816  0F10                     	;# 
  1817  0F11                     	;# 
  1818  0F12                     	;# 
  1819  0F13                     	;# 
  1820  0F14                     	;# 
  1821  0F15                     	;# 
  1822  0F16                     	;# 
  1823  0F17                     	;# 
  1824  0F18                     	;# 
  1825  0F19                     	;# 
  1826  0F1A                     	;# 
  1827  0F1B                     	;# 
  1828  0F1C                     	;# 
  1829  0F1D                     	;# 
  1830  0F1E                     	;# 
  1831  0F1F                     	;# 
  1832  0F20                     	;# 
  1833  0F21                     	;# 
  1834  0F22                     	;# 
  1835  0F23                     	;# 
  1836  0F24                     	;# 
  1837  0F25                     	;# 
  1838  0F26                     	;# 
  1839  0F27                     	;# 
  1840  0F28                     	;# 
  1841  0F29                     	;# 
  1842  0F2A                     	;# 
  1843  0F2B                     	;# 
  1844  0F2C                     	;# 
  1845  0F2D                     	;# 
  1846  0F2E                     	;# 
  1847  0F2F                     	;# 
  1848  0F30                     	;# 
  1849  0F31                     	;# 
  1850  0F32                     	;# 
  1851  0F33                     	;# 
  1852  0F34                     	;# 
  1853  0F35                     	;# 
  1854  0F36                     	;# 
  1855  0F37                     	;# 
  1856  0FE4                     	;# 
  1857  0FE5                     	;# 
  1858  0FE6                     	;# 
  1859  0FE7                     	;# 
  1860  0FE8                     	;# 
  1861  0FE9                     	;# 
  1862  0FEA                     	;# 
  1863  0FEB                     	;# 
  1864  0FED                     	;# 
  1865  0FEE                     	;# 
  1866  0FEF                     	;# 
  1867  0000                     	;# 
  1868  0001                     	;# 
  1869  0002                     	;# 
  1870  0003                     	;# 
  1871  0004                     	;# 
  1872  0005                     	;# 
  1873  0006                     	;# 
  1874  0007                     	;# 
  1875  0008                     	;# 
  1876  0009                     	;# 
  1877  000A                     	;# 
  1878  000B                     	;# 
  1879  000C                     	;# 
  1880  000D                     	;# 
  1881  000E                     	;# 
  1882  0010                     	;# 
  1883  0011                     	;# 
  1884  0012                     	;# 
  1885  0013                     	;# 
  1886  0014                     	;# 
  1887  0015                     	;# 
  1888  0016                     	;# 
  1889  0016                     	;# 
  1890  0017                     	;# 
  1891  0018                     	;# 
  1892  0019                     	;# 
  1893  001A                     	;# 
  1894  001A                     	;# 
  1895  001B                     	;# 
  1896  001B                     	;# 
  1897  001C                     	;# 
  1898  001D                     	;# 
  1899  001E                     	;# 
  1900  001F                     	;# 
  1901  008C                     	;# 
  1902  008D                     	;# 
  1903  008E                     	;# 
  1904  0090                     	;# 
  1905  0091                     	;# 
  1906  0092                     	;# 
  1907  0093                     	;# 
  1908  0094                     	;# 
  1909  0095                     	;# 
  1910  0096                     	;# 
  1911  0098                     	;# 
  1912  0099                     	;# 
  1913  009A                     	;# 
  1914  009B                     	;# 
  1915  009B                     	;# 
  1916  009C                     	;# 
  1917  009D                     	;# 
  1918  009E                     	;# 
  1919  009F                     	;# 
  1920  010C                     	;# 
  1921  010D                     	;# 
  1922  010E                     	;# 
  1923  0111                     	;# 
  1924  0112                     	;# 
  1925  0113                     	;# 
  1926  0114                     	;# 
  1927  0115                     	;# 
  1928  0116                     	;# 
  1929  0117                     	;# 
  1930  0118                     	;# 
  1931  0119                     	;# 
  1932  011C                     	;# 
  1933  018C                     	;# 
  1934  018D                     	;# 
  1935  018E                     	;# 
  1936  0191                     	;# 
  1937  0191                     	;# 
  1938  0192                     	;# 
  1939  0193                     	;# 
  1940  0193                     	;# 
  1941  0194                     	;# 
  1942  0195                     	;# 
  1943  0196                     	;# 
  1944  0197                     	;# 
  1945  0199                     	;# 
  1946  0199                     	;# 
  1947  0199                     	;# 
  1948  019A                     	;# 
  1949  019A                     	;# 
  1950  019A                     	;# 
  1951  019B                     	;# 
  1952  019B                     	;# 
  1953  019B                     	;# 
  1954  019B                     	;# 
  1955  019B                     	;# 
  1956  019C                     	;# 
  1957  019C                     	;# 
  1958  019C                     	;# 
  1959  019D                     	;# 
  1960  019D                     	;# 
  1961  019D                     	;# 
  1962  019E                     	;# 
  1963  019E                     	;# 
  1964  019E                     	;# 
  1965  019F                     	;# 
  1966  019F                     	;# 
  1967  019F                     	;# 
  1968  019F                     	;# 
  1969  019F                     	;# 
  1970  020C                     	;# 
  1971  020D                     	;# 
  1972  020E                     	;# 
  1973  0211                     	;# 
  1974  0211                     	;# 
  1975  0212                     	;# 
  1976  0212                     	;# 
  1977  0213                     	;# 
  1978  0213                     	;# 
  1979  0214                     	;# 
  1980  0214                     	;# 
  1981  0215                     	;# 
  1982  0215                     	;# 
  1983  0215                     	;# 
  1984  0215                     	;# 
  1985  0216                     	;# 
  1986  0216                     	;# 
  1987  0217                     	;# 
  1988  0217                     	;# 
  1989  028C                     	;# 
  1990  028D                     	;# 
  1991  028E                     	;# 
  1992  0291                     	;# 
  1993  0291                     	;# 
  1994  0292                     	;# 
  1995  0293                     	;# 
  1996  0294                     	;# 
  1997  0298                     	;# 
  1998  0298                     	;# 
  1999  0299                     	;# 
  2000  029A                     	;# 
  2001  029B                     	;# 
  2002  029E                     	;# 
  2003  030C                     	;# 
  2004  030D                     	;# 
  2005  030E                     	;# 
  2006  038C                     	;# 
  2007  038D                     	;# 
  2008  038E                     	;# 
  2009  0391                     	;# 
  2010  0392                     	;# 
  2011  0393                     	;# 
  2012  0394                     	;# 
  2013  0395                     	;# 
  2014  0396                     	;# 
  2015  0397                     	;# 
  2016  0398                     	;# 
  2017  0399                     	;# 
  2018  040E                     	;# 
  2019  0413                     	;# 
  2020  0413                     	;# 
  2021  0414                     	;# 
  2022  0414                     	;# 
  2023  0415                     	;# 
  2024  0416                     	;# 
  2025  0417                     	;# 
  2026  0418                     	;# 
  2027  041A                     	;# 
  2028  041A                     	;# 
  2029  041B                     	;# 
  2030  041B                     	;# 
  2031  041C                     	;# 
  2032  041D                     	;# 
  2033  041E                     	;# 
  2034  041F                     	;# 
  2035  0493                     	;# 
  2036  0494                     	;# 
  2037  0495                     	;# 
  2038  0496                     	;# 
  2039  049A                     	;# 
  2040  049B                     	;# 
  2041  049C                     	;# 
  2042  049D                     	;# 
  2043  058C                     	;# 
  2044  058C                     	;# 
  2045  058D                     	;# 
  2046  058E                     	;# 
  2047  058E                     	;# 
  2048  058F                     	;# 
  2049  0590                     	;# 
  2050  0590                     	;# 
  2051  0591                     	;# 
  2052  0592                     	;# 
  2053  0592                     	;# 
  2054  0593                     	;# 
  2055  0594                     	;# 
  2056  0594                     	;# 
  2057  0595                     	;# 
  2058  0596                     	;# 
  2059  0596                     	;# 
  2060  0597                     	;# 
  2061  0598                     	;# 
  2062  0599                     	;# 
  2063  059A                     	;# 
  2064  059B                     	;# 
  2065  059B                     	;# 
  2066  059C                     	;# 
  2067  059D                     	;# 
  2068  060C                     	;# 
  2069  060C                     	;# 
  2070  060D                     	;# 
  2071  060E                     	;# 
  2072  060F                     	;# 
  2073  060F                     	;# 
  2074  0610                     	;# 
  2075  0611                     	;# 
  2076  0612                     	;# 
  2077  0613                     	;# 
  2078  0614                     	;# 
  2079  0617                     	;# 
  2080  0617                     	;# 
  2081  0618                     	;# 
  2082  0619                     	;# 
  2083  061A                     	;# 
  2084  061A                     	;# 
  2085  061B                     	;# 
  2086  061C                     	;# 
  2087  0691                     	;# 
  2088  0692                     	;# 
  2089  0693                     	;# 
  2090  0694                     	;# 
  2091  0695                     	;# 
  2092  0696                     	;# 
  2093  0697                     	;# 
  2094  0699                     	;# 
  2095  069A                     	;# 
  2096  0711                     	;# 
  2097  0712                     	;# 
  2098  0713                     	;# 
  2099  0714                     	;# 
  2100  0715                     	;# 
  2101  0718                     	;# 
  2102  0718                     	;# 
  2103  0719                     	;# 
  2104  071A                     	;# 
  2105  071A                     	;# 
  2106  071B                     	;# 
  2107  071C                     	;# 
  2108  071D                     	;# 
  2109  0791                     	;# 
  2110  0791                     	;# 
  2111  0792                     	;# 
  2112  0793                     	;# 
  2113  0793                     	;# 
  2114  0794                     	;# 
  2115  0795                     	;# 
  2116  0795                     	;# 
  2117  0796                     	;# 
  2118  0797                     	;# 
  2119  0797                     	;# 
  2120  0798                     	;# 
  2121  0799                     	;# 
  2122  079A                     	;# 
  2123  080C                     	;# 
  2124  080C                     	;# 
  2125  080D                     	;# 
  2126  080E                     	;# 
  2127  080E                     	;# 
  2128  080F                     	;# 
  2129  0810                     	;# 
  2130  0810                     	;# 
  2131  0811                     	;# 
  2132  0812                     	;# 
  2133  0812                     	;# 
  2134  0813                     	;# 
  2135  0814                     	;# 
  2136  0815                     	;# 
  2137  0816                     	;# 
  2138  0817                     	;# 
  2139  0818                     	;# 
  2140  0819                     	;# 
  2141  081A                     	;# 
  2142  081A                     	;# 
  2143  081B                     	;# 
  2144  081C                     	;# 
  2145  081C                     	;# 
  2146  081D                     	;# 
  2147  088C                     	;# 
  2148  088D                     	;# 
  2149  088E                     	;# 
  2150  088F                     	;# 
  2151  088F                     	;# 
  2152  0890                     	;# 
  2153  0891                     	;# 
  2154  0892                     	;# 
  2155  0893                     	;# 
  2156  0893                     	;# 
  2157  0894                     	;# 
  2158  0895                     	;# 
  2159  0896                     	;# 
  2160  0897                     	;# 
  2161  0897                     	;# 
  2162  0898                     	;# 
  2163  0899                     	;# 
  2164  0D8C                     	;# 
  2165  0D8C                     	;# 
  2166  0D8D                     	;# 
  2167  0D8E                     	;# 
  2168  0D8F                     	;# 
  2169  0D8F                     	;# 
  2170  0D90                     	;# 
  2171  0D91                     	;# 
  2172  0D92                     	;# 
  2173  0D92                     	;# 
  2174  0D93                     	;# 
  2175  0D94                     	;# 
  2176  0D95                     	;# 
  2177  0D95                     	;# 
  2178  0D96                     	;# 
  2179  0D97                     	;# 
  2180  0D98                     	;# 
  2181  0D99                     	;# 
  2182  0D9A                     	;# 
  2183  0D9B                     	;# 
  2184  0D9C                     	;# 
  2185  0D9D                     	;# 
  2186  0D9E                     	;# 
  2187  0D9E                     	;# 
  2188  0D9F                     	;# 
  2189  0DA0                     	;# 
  2190  0DA1                     	;# 
  2191  0DA1                     	;# 
  2192  0DA2                     	;# 
  2193  0DA3                     	;# 
  2194  0DA4                     	;# 
  2195  0DA4                     	;# 
  2196  0DA5                     	;# 
  2197  0DA6                     	;# 
  2198  0DA7                     	;# 
  2199  0DA7                     	;# 
  2200  0DA8                     	;# 
  2201  0DA9                     	;# 
  2202  0DAA                     	;# 
  2203  0DAB                     	;# 
  2204  0DAC                     	;# 
  2205  0DAD                     	;# 
  2206  0DAE                     	;# 
  2207  0DAF                     	;# 
  2208  0E0F                     	;# 
  2209  0E10                     	;# 
  2210  0E11                     	;# 
  2211  0E12                     	;# 
  2212  0E13                     	;# 
  2213  0E14                     	;# 
  2214  0E15                     	;# 
  2215  0E16                     	;# 
  2216  0E17                     	;# 
  2217  0E18                     	;# 
  2218  0E19                     	;# 
  2219  0E1A                     	;# 
  2220  0E1B                     	;# 
  2221  0E1C                     	;# 
  2222  0E1D                     	;# 
  2223  0E1E                     	;# 
  2224  0E1F                     	;# 
  2225  0E20                     	;# 
  2226  0E21                     	;# 
  2227  0E22                     	;# 
  2228  0E23                     	;# 
  2229  0E24                     	;# 
  2230  0E25                     	;# 
  2231  0E26                     	;# 
  2232  0E27                     	;# 
  2233  0E28                     	;# 
  2234  0E29                     	;# 
  2235  0E2A                     	;# 
  2236  0E2B                     	;# 
  2237  0E2C                     	;# 
  2238  0E2D                     	;# 
  2239  0E2E                     	;# 
  2240  0E90                     	;# 
  2241  0E91                     	;# 
  2242  0E92                     	;# 
  2243  0E94                     	;# 
  2244  0E95                     	;# 
  2245  0E9C                     	;# 
  2246  0E9D                     	;# 
  2247  0E9E                     	;# 
  2248  0E9F                     	;# 
  2249  0EA0                     	;# 
  2250  0EA1                     	;# 
  2251  0EA2                     	;# 
  2252  0EA3                     	;# 
  2253  0EA4                     	;# 
  2254  0EA5                     	;# 
  2255  0EA6                     	;# 
  2256  0EA7                     	;# 
  2257  0F0F                     	;# 
  2258  0F10                     	;# 
  2259  0F11                     	;# 
  2260  0F12                     	;# 
  2261  0F13                     	;# 
  2262  0F14                     	;# 
  2263  0F15                     	;# 
  2264  0F16                     	;# 
  2265  0F17                     	;# 
  2266  0F18                     	;# 
  2267  0F19                     	;# 
  2268  0F1A                     	;# 
  2269  0F1B                     	;# 
  2270  0F1C                     	;# 
  2271  0F1D                     	;# 
  2272  0F1E                     	;# 
  2273  0F1F                     	;# 
  2274  0F20                     	;# 
  2275  0F21                     	;# 
  2276  0F22                     	;# 
  2277  0F23                     	;# 
  2278  0F24                     	;# 
  2279  0F25                     	;# 
  2280  0F26                     	;# 
  2281  0F27                     	;# 
  2282  0F28                     	;# 
  2283  0F29                     	;# 
  2284  0F2A                     	;# 
  2285  0F2B                     	;# 
  2286  0F2C                     	;# 
  2287  0F2D                     	;# 
  2288  0F2E                     	;# 
  2289  0F2F                     	;# 
  2290  0F30                     	;# 
  2291  0F31                     	;# 
  2292  0F32                     	;# 
  2293  0F33                     	;# 
  2294  0F34                     	;# 
  2295  0F35                     	;# 
  2296  0F36                     	;# 
  2297  0F37                     	;# 
  2298  0FE4                     	;# 
  2299  0FE5                     	;# 
  2300  0FE6                     	;# 
  2301  0FE7                     	;# 
  2302  0FE8                     	;# 
  2303  0FE9                     	;# 
  2304  0FEA                     	;# 
  2305  0FEB                     	;# 
  2306  0FED                     	;# 
  2307  0FEE                     	;# 
  2308  0FEF                     	;# 
  2309  0000                     	;# 
  2310  0001                     	;# 
  2311  0002                     	;# 
  2312  0003                     	;# 
  2313  0004                     	;# 
  2314  0005                     	;# 
  2315  0006                     	;# 
  2316  0007                     	;# 
  2317  0008                     	;# 
  2318  0009                     	;# 
  2319  000A                     	;# 
  2320  000B                     	;# 
  2321  000C                     	;# 
  2322  000D                     	;# 
  2323  000E                     	;# 
  2324  0010                     	;# 
  2325  0011                     	;# 
  2326  0012                     	;# 
  2327  0013                     	;# 
  2328  0014                     	;# 
  2329  0015                     	;# 
  2330  0016                     	;# 
  2331  0016                     	;# 
  2332  0017                     	;# 
  2333  0018                     	;# 
  2334  0019                     	;# 
  2335  001A                     	;# 
  2336  001A                     	;# 
  2337  001B                     	;# 
  2338  001B                     	;# 
  2339  001C                     	;# 
  2340  001D                     	;# 
  2341  001E                     	;# 
  2342  001F                     	;# 
  2343  008C                     	;# 
  2344  008D                     	;# 
  2345  008E                     	;# 
  2346  0090                     	;# 
  2347  0091                     	;# 
  2348  0092                     	;# 
  2349  0093                     	;# 
  2350  0094                     	;# 
  2351  0095                     	;# 
  2352  0096                     	;# 
  2353  0098                     	;# 
  2354  0099                     	;# 
  2355  009A                     	;# 
  2356  009B                     	;# 
  2357  009B                     	;# 
  2358  009C                     	;# 
  2359  009D                     	;# 
  2360  009E                     	;# 
  2361  009F                     	;# 
  2362  010C                     	;# 
  2363  010D                     	;# 
  2364  010E                     	;# 
  2365  0111                     	;# 
  2366  0112                     	;# 
  2367  0113                     	;# 
  2368  0114                     	;# 
  2369  0115                     	;# 
  2370  0116                     	;# 
  2371  0117                     	;# 
  2372  0118                     	;# 
  2373  0119                     	;# 
  2374  011C                     	;# 
  2375  018C                     	;# 
  2376  018D                     	;# 
  2377  018E                     	;# 
  2378  0191                     	;# 
  2379  0191                     	;# 
  2380  0192                     	;# 
  2381  0193                     	;# 
  2382  0193                     	;# 
  2383  0194                     	;# 
  2384  0195                     	;# 
  2385  0196                     	;# 
  2386  0197                     	;# 
  2387  0199                     	;# 
  2388  0199                     	;# 
  2389  0199                     	;# 
  2390  019A                     	;# 
  2391  019A                     	;# 
  2392  019A                     	;# 
  2393  019B                     	;# 
  2394  019B                     	;# 
  2395  019B                     	;# 
  2396  019B                     	;# 
  2397  019B                     	;# 
  2398  019C                     	;# 
  2399  019C                     	;# 
  2400  019C                     	;# 
  2401  019D                     	;# 
  2402  019D                     	;# 
  2403  019D                     	;# 
  2404  019E                     	;# 
  2405  019E                     	;# 
  2406  019E                     	;# 
  2407  019F                     	;# 
  2408  019F                     	;# 
  2409  019F                     	;# 
  2410  019F                     	;# 
  2411  019F                     	;# 
  2412  020C                     	;# 
  2413  020D                     	;# 
  2414  020E                     	;# 
  2415  0211                     	;# 
  2416  0211                     	;# 
  2417  0212                     	;# 
  2418  0212                     	;# 
  2419  0213                     	;# 
  2420  0213                     	;# 
  2421  0214                     	;# 
  2422  0214                     	;# 
  2423  0215                     	;# 
  2424  0215                     	;# 
  2425  0215                     	;# 
  2426  0215                     	;# 
  2427  0216                     	;# 
  2428  0216                     	;# 
  2429  0217                     	;# 
  2430  0217                     	;# 
  2431  028C                     	;# 
  2432  028D                     	;# 
  2433  028E                     	;# 
  2434  0291                     	;# 
  2435  0291                     	;# 
  2436  0292                     	;# 
  2437  0293                     	;# 
  2438  0294                     	;# 
  2439  0298                     	;# 
  2440  0298                     	;# 
  2441  0299                     	;# 
  2442  029A                     	;# 
  2443  029B                     	;# 
  2444  029E                     	;# 
  2445  030C                     	;# 
  2446  030D                     	;# 
  2447  030E                     	;# 
  2448  038C                     	;# 
  2449  038D                     	;# 
  2450  038E                     	;# 
  2451  0391                     	;# 
  2452  0392                     	;# 
  2453  0393                     	;# 
  2454  0394                     	;# 
  2455  0395                     	;# 
  2456  0396                     	;# 
  2457  0397                     	;# 
  2458  0398                     	;# 
  2459  0399                     	;# 
  2460  040E                     	;# 
  2461  0413                     	;# 
  2462  0413                     	;# 
  2463  0414                     	;# 
  2464  0414                     	;# 
  2465  0415                     	;# 
  2466  0416                     	;# 
  2467  0417                     	;# 
  2468  0418                     	;# 
  2469  041A                     	;# 
  2470  041A                     	;# 
  2471  041B                     	;# 
  2472  041B                     	;# 
  2473  041C                     	;# 
  2474  041D                     	;# 
  2475  041E                     	;# 
  2476  041F                     	;# 
  2477  0493                     	;# 
  2478  0494                     	;# 
  2479  0495                     	;# 
  2480  0496                     	;# 
  2481  049A                     	;# 
  2482  049B                     	;# 
  2483  049C                     	;# 
  2484  049D                     	;# 
  2485  058C                     	;# 
  2486  058C                     	;# 
  2487  058D                     	;# 
  2488  058E                     	;# 
  2489  058E                     	;# 
  2490  058F                     	;# 
  2491  0590                     	;# 
  2492  0590                     	;# 
  2493  0591                     	;# 
  2494  0592                     	;# 
  2495  0592                     	;# 
  2496  0593                     	;# 
  2497  0594                     	;# 
  2498  0594                     	;# 
  2499  0595                     	;# 
  2500  0596                     	;# 
  2501  0596                     	;# 
  2502  0597                     	;# 
  2503  0598                     	;# 
  2504  0599                     	;# 
  2505  059A                     	;# 
  2506  059B                     	;# 
  2507  059B                     	;# 
  2508  059C                     	;# 
  2509  059D                     	;# 
  2510  060C                     	;# 
  2511  060C                     	;# 
  2512  060D                     	;# 
  2513  060E                     	;# 
  2514  060F                     	;# 
  2515  060F                     	;# 
  2516  0610                     	;# 
  2517  0611                     	;# 
  2518  0612                     	;# 
  2519  0613                     	;# 
  2520  0614                     	;# 
  2521  0617                     	;# 
  2522  0617                     	;# 
  2523  0618                     	;# 
  2524  0619                     	;# 
  2525  061A                     	;# 
  2526  061A                     	;# 
  2527  061B                     	;# 
  2528  061C                     	;# 
  2529  0691                     	;# 
  2530  0692                     	;# 
  2531  0693                     	;# 
  2532  0694                     	;# 
  2533  0695                     	;# 
  2534  0696                     	;# 
  2535  0697                     	;# 
  2536  0699                     	;# 
  2537  069A                     	;# 
  2538  0711                     	;# 
  2539  0712                     	;# 
  2540  0713                     	;# 
  2541  0714                     	;# 
  2542  0715                     	;# 
  2543  0718                     	;# 
  2544  0718                     	;# 
  2545  0719                     	;# 
  2546  071A                     	;# 
  2547  071A                     	;# 
  2548  071B                     	;# 
  2549  071C                     	;# 
  2550  071D                     	;# 
  2551  0791                     	;# 
  2552  0791                     	;# 
  2553  0792                     	;# 
  2554  0793                     	;# 
  2555  0793                     	;# 
  2556  0794                     	;# 
  2557  0795                     	;# 
  2558  0795                     	;# 
  2559  0796                     	;# 
  2560  0797                     	;# 
  2561  0797                     	;# 
  2562  0798                     	;# 
  2563  0799                     	;# 
  2564  079A                     	;# 
  2565  080C                     	;# 
  2566  080C                     	;# 
  2567  080D                     	;# 
  2568  080E                     	;# 
  2569  080E                     	;# 
  2570  080F                     	;# 
  2571  0810                     	;# 
  2572  0810                     	;# 
  2573  0811                     	;# 
  2574  0812                     	;# 
  2575  0812                     	;# 
  2576  0813                     	;# 
  2577  0814                     	;# 
  2578  0815                     	;# 
  2579  0816                     	;# 
  2580  0817                     	;# 
  2581  0818                     	;# 
  2582  0819                     	;# 
  2583  081A                     	;# 
  2584  081A                     	;# 
  2585  081B                     	;# 
  2586  081C                     	;# 
  2587  081C                     	;# 
  2588  081D                     	;# 
  2589  088C                     	;# 
  2590  088D                     	;# 
  2591  088E                     	;# 
  2592  088F                     	;# 
  2593  088F                     	;# 
  2594  0890                     	;# 
  2595  0891                     	;# 
  2596  0892                     	;# 
  2597  0893                     	;# 
  2598  0893                     	;# 
  2599  0894                     	;# 
  2600  0895                     	;# 
  2601  0896                     	;# 
  2602  0897                     	;# 
  2603  0897                     	;# 
  2604  0898                     	;# 
  2605  0899                     	;# 
  2606  0D8C                     	;# 
  2607  0D8C                     	;# 
  2608  0D8D                     	;# 
  2609  0D8E                     	;# 
  2610  0D8F                     	;# 
  2611  0D8F                     	;# 
  2612  0D90                     	;# 
  2613  0D91                     	;# 
  2614  0D92                     	;# 
  2615  0D92                     	;# 
  2616  0D93                     	;# 
  2617  0D94                     	;# 
  2618  0D95                     	;# 
  2619  0D95                     	;# 
  2620  0D96                     	;# 
  2621  0D97                     	;# 
  2622  0D98                     	;# 
  2623  0D99                     	;# 
  2624  0D9A                     	;# 
  2625  0D9B                     	;# 
  2626  0D9C                     	;# 
  2627  0D9D                     	;# 
  2628  0D9E                     	;# 
  2629  0D9E                     	;# 
  2630  0D9F                     	;# 
  2631  0DA0                     	;# 
  2632  0DA1                     	;# 
  2633  0DA1                     	;# 
  2634  0DA2                     	;# 
  2635  0DA3                     	;# 
  2636  0DA4                     	;# 
  2637  0DA4                     	;# 
  2638  0DA5                     	;# 
  2639  0DA6                     	;# 
  2640  0DA7                     	;# 
  2641  0DA7                     	;# 
  2642  0DA8                     	;# 
  2643  0DA9                     	;# 
  2644  0DAA                     	;# 
  2645  0DAB                     	;# 
  2646  0DAC                     	;# 
  2647  0DAD                     	;# 
  2648  0DAE                     	;# 
  2649  0DAF                     	;# 
  2650  0E0F                     	;# 
  2651  0E10                     	;# 
  2652  0E11                     	;# 
  2653  0E12                     	;# 
  2654  0E13                     	;# 
  2655  0E14                     	;# 
  2656  0E15                     	;# 
  2657  0E16                     	;# 
  2658  0E17                     	;# 
  2659  0E18                     	;# 
  2660  0E19                     	;# 
  2661  0E1A                     	;# 
  2662  0E1B                     	;# 
  2663  0E1C                     	;# 
  2664  0E1D                     	;# 
  2665  0E1E                     	;# 
  2666  0E1F                     	;# 
  2667  0E20                     	;# 
  2668  0E21                     	;# 
  2669  0E22                     	;# 
  2670  0E23                     	;# 
  2671  0E24                     	;# 
  2672  0E25                     	;# 
  2673  0E26                     	;# 
  2674  0E27                     	;# 
  2675  0E28                     	;# 
  2676  0E29                     	;# 
  2677  0E2A                     	;# 
  2678  0E2B                     	;# 
  2679  0E2C                     	;# 
  2680  0E2D                     	;# 
  2681  0E2E                     	;# 
  2682  0E90                     	;# 
  2683  0E91                     	;# 
  2684  0E92                     	;# 
  2685  0E94                     	;# 
  2686  0E95                     	;# 
  2687  0E9C                     	;# 
  2688  0E9D                     	;# 
  2689  0E9E                     	;# 
  2690  0E9F                     	;# 
  2691  0EA0                     	;# 
  2692  0EA1                     	;# 
  2693  0EA2                     	;# 
  2694  0EA3                     	;# 
  2695  0EA4                     	;# 
  2696  0EA5                     	;# 
  2697  0EA6                     	;# 
  2698  0EA7                     	;# 
  2699  0F0F                     	;# 
  2700  0F10                     	;# 
  2701  0F11                     	;# 
  2702  0F12                     	;# 
  2703  0F13                     	;# 
  2704  0F14                     	;# 
  2705  0F15                     	;# 
  2706  0F16                     	;# 
  2707  0F17                     	;# 
  2708  0F18                     	;# 
  2709  0F19                     	;# 
  2710  0F1A                     	;# 
  2711  0F1B                     	;# 
  2712  0F1C                     	;# 
  2713  0F1D                     	;# 
  2714  0F1E                     	;# 
  2715  0F1F                     	;# 
  2716  0F20                     	;# 
  2717  0F21                     	;# 
  2718  0F22                     	;# 
  2719  0F23                     	;# 
  2720  0F24                     	;# 
  2721  0F25                     	;# 
  2722  0F26                     	;# 
  2723  0F27                     	;# 
  2724  0F28                     	;# 
  2725  0F29                     	;# 
  2726  0F2A                     	;# 
  2727  0F2B                     	;# 
  2728  0F2C                     	;# 
  2729  0F2D                     	;# 
  2730  0F2E                     	;# 
  2731  0F2F                     	;# 
  2732  0F30                     	;# 
  2733  0F31                     	;# 
  2734  0F32                     	;# 
  2735  0F33                     	;# 
  2736  0F34                     	;# 
  2737  0F35                     	;# 
  2738  0F36                     	;# 
  2739  0F37                     	;# 
  2740  0FE4                     	;# 
  2741  0FE5                     	;# 
  2742  0FE6                     	;# 
  2743  0FE7                     	;# 
  2744  0FE8                     	;# 
  2745  0FE9                     	;# 
  2746  0FEA                     	;# 
  2747  0FEB                     	;# 
  2748  0FED                     	;# 
  2749  0FEE                     	;# 
  2750  0FEF                     	;# 
  2751  0000                     	;# 
  2752  0001                     	;# 
  2753  0002                     	;# 
  2754  0003                     	;# 
  2755  0004                     	;# 
  2756  0005                     	;# 
  2757  0006                     	;# 
  2758  0007                     	;# 
  2759  0008                     	;# 
  2760  0009                     	;# 
  2761  000A                     	;# 
  2762  000B                     	;# 
  2763  000C                     	;# 
  2764  000D                     	;# 
  2765  000E                     	;# 
  2766  0010                     	;# 
  2767  0011                     	;# 
  2768  0012                     	;# 
  2769  0013                     	;# 
  2770  0014                     	;# 
  2771  0015                     	;# 
  2772  0016                     	;# 
  2773  0016                     	;# 
  2774  0017                     	;# 
  2775  0018                     	;# 
  2776  0019                     	;# 
  2777  001A                     	;# 
  2778  001A                     	;# 
  2779  001B                     	;# 
  2780  001B                     	;# 
  2781  001C                     	;# 
  2782  001D                     	;# 
  2783  001E                     	;# 
  2784  001F                     	;# 
  2785  008C                     	;# 
  2786  008D                     	;# 
  2787  008E                     	;# 
  2788  0090                     	;# 
  2789  0091                     	;# 
  2790  0092                     	;# 
  2791  0093                     	;# 
  2792  0094                     	;# 
  2793  0095                     	;# 
  2794  0096                     	;# 
  2795  0098                     	;# 
  2796  0099                     	;# 
  2797  009A                     	;# 
  2798  009B                     	;# 
  2799  009B                     	;# 
  2800  009C                     	;# 
  2801  009D                     	;# 
  2802  009E                     	;# 
  2803  009F                     	;# 
  2804  010C                     	;# 
  2805  010D                     	;# 
  2806  010E                     	;# 
  2807  0111                     	;# 
  2808  0112                     	;# 
  2809  0113                     	;# 
  2810  0114                     	;# 
  2811  0115                     	;# 
  2812  0116                     	;# 
  2813  0117                     	;# 
  2814  0118                     	;# 
  2815  0119                     	;# 
  2816  011C                     	;# 
  2817  018C                     	;# 
  2818  018D                     	;# 
  2819  018E                     	;# 
  2820  0191                     	;# 
  2821  0191                     	;# 
  2822  0192                     	;# 
  2823  0193                     	;# 
  2824  0193                     	;# 
  2825  0194                     	;# 
  2826  0195                     	;# 
  2827  0196                     	;# 
  2828  0197                     	;# 
  2829  0199                     	;# 
  2830  0199                     	;# 
  2831  0199                     	;# 
  2832  019A                     	;# 
  2833  019A                     	;# 
  2834  019A                     	;# 
  2835  019B                     	;# 
  2836  019B                     	;# 
  2837  019B                     	;# 
  2838  019B                     	;# 
  2839  019B                     	;# 
  2840  019C                     	;# 
  2841  019C                     	;# 
  2842  019C                     	;# 
  2843  019D                     	;# 
  2844  019D                     	;# 
  2845  019D                     	;# 
  2846  019E                     	;# 
  2847  019E                     	;# 
  2848  019E                     	;# 
  2849  019F                     	;# 
  2850  019F                     	;# 
  2851  019F                     	;# 
  2852  019F                     	;# 
  2853  019F                     	;# 
  2854  020C                     	;# 
  2855  020D                     	;# 
  2856  020E                     	;# 
  2857  0211                     	;# 
  2858  0211                     	;# 
  2859  0212                     	;# 
  2860  0212                     	;# 
  2861  0213                     	;# 
  2862  0213                     	;# 
  2863  0214                     	;# 
  2864  0214                     	;# 
  2865  0215                     	;# 
  2866  0215                     	;# 
  2867  0215                     	;# 
  2868  0215                     	;# 
  2869  0216                     	;# 
  2870  0216                     	;# 
  2871  0217                     	;# 
  2872  0217                     	;# 
  2873  028C                     	;# 
  2874  028D                     	;# 
  2875  028E                     	;# 
  2876  0291                     	;# 
  2877  0291                     	;# 
  2878  0292                     	;# 
  2879  0293                     	;# 
  2880  0294                     	;# 
  2881  0298                     	;# 
  2882  0298                     	;# 
  2883  0299                     	;# 
  2884  029A                     	;# 
  2885  029B                     	;# 
  2886  029E                     	;# 
  2887  030C                     	;# 
  2888  030D                     	;# 
  2889  030E                     	;# 
  2890  038C                     	;# 
  2891  038D                     	;# 
  2892  038E                     	;# 
  2893  0391                     	;# 
  2894  0392                     	;# 
  2895  0393                     	;# 
  2896  0394                     	;# 
  2897  0395                     	;# 
  2898  0396                     	;# 
  2899  0397                     	;# 
  2900  0398                     	;# 
  2901  0399                     	;# 
  2902  040E                     	;# 
  2903  0413                     	;# 
  2904  0413                     	;# 
  2905  0414                     	;# 
  2906  0414                     	;# 
  2907  0415                     	;# 
  2908  0416                     	;# 
  2909  0417                     	;# 
  2910  0418                     	;# 
  2911  041A                     	;# 
  2912  041A                     	;# 
  2913  041B                     	;# 
  2914  041B                     	;# 
  2915  041C                     	;# 
  2916  041D                     	;# 
  2917  041E                     	;# 
  2918  041F                     	;# 
  2919  0493                     	;# 
  2920  0494                     	;# 
  2921  0495                     	;# 
  2922  0496                     	;# 
  2923  049A                     	;# 
  2924  049B                     	;# 
  2925  049C                     	;# 
  2926  049D                     	;# 
  2927  058C                     	;# 
  2928  058C                     	;# 
  2929  058D                     	;# 
  2930  058E                     	;# 
  2931  058E                     	;# 
  2932  058F                     	;# 
  2933  0590                     	;# 
  2934  0590                     	;# 
  2935  0591                     	;# 
  2936  0592                     	;# 
  2937  0592                     	;# 
  2938  0593                     	;# 
  2939  0594                     	;# 
  2940  0594                     	;# 
  2941  0595                     	;# 
  2942  0596                     	;# 
  2943  0596                     	;# 
  2944  0597                     	;# 
  2945  0598                     	;# 
  2946  0599                     	;# 
  2947  059A                     	;# 
  2948  059B                     	;# 
  2949  059B                     	;# 
  2950  059C                     	;# 
  2951  059D                     	;# 
  2952  060C                     	;# 
  2953  060C                     	;# 
  2954  060D                     	;# 
  2955  060E                     	;# 
  2956  060F                     	;# 
  2957  060F                     	;# 
  2958  0610                     	;# 
  2959  0611                     	;# 
  2960  0612                     	;# 
  2961  0613                     	;# 
  2962  0614                     	;# 
  2963  0617                     	;# 
  2964  0617                     	;# 
  2965  0618                     	;# 
  2966  0619                     	;# 
  2967  061A                     	;# 
  2968  061A                     	;# 
  2969  061B                     	;# 
  2970  061C                     	;# 
  2971  0691                     	;# 
  2972  0692                     	;# 
  2973  0693                     	;# 
  2974  0694                     	;# 
  2975  0695                     	;# 
  2976  0696                     	;# 
  2977  0697                     	;# 
  2978  0699                     	;# 
  2979  069A                     	;# 
  2980  0711                     	;# 
  2981  0712                     	;# 
  2982  0713                     	;# 
  2983  0714                     	;# 
  2984  0715                     	;# 
  2985  0718                     	;# 
  2986  0718                     	;# 
  2987  0719                     	;# 
  2988  071A                     	;# 
  2989  071A                     	;# 
  2990  071B                     	;# 
  2991  071C                     	;# 
  2992  071D                     	;# 
  2993  0791                     	;# 
  2994  0791                     	;# 
  2995  0792                     	;# 
  2996  0793                     	;# 
  2997  0793                     	;# 
  2998  0794                     	;# 
  2999  0795                     	;# 
  3000  0795                     	;# 
  3001  0796                     	;# 
  3002  0797                     	;# 
  3003  0797                     	;# 
  3004  0798                     	;# 
  3005  0799                     	;# 
  3006  079A                     	;# 
  3007  080C                     	;# 
  3008  080C                     	;# 
  3009  080D                     	;# 
  3010  080E                     	;# 
  3011  080E                     	;# 
  3012  080F                     	;# 
  3013  0810                     	;# 
  3014  0810                     	;# 
  3015  0811                     	;# 
  3016  0812                     	;# 
  3017  0812                     	;# 
  3018  0813                     	;# 
  3019  0814                     	;# 
  3020  0815                     	;# 
  3021  0816                     	;# 
  3022  0817                     	;# 
  3023  0818                     	;# 
  3024  0819                     	;# 
  3025  081A                     	;# 
  3026  081A                     	;# 
  3027  081B                     	;# 
  3028  081C                     	;# 
  3029  081C                     	;# 
  3030  081D                     	;# 
  3031  088C                     	;# 
  3032  088D                     	;# 
  3033  088E                     	;# 
  3034  088F                     	;# 
  3035  088F                     	;# 
  3036  0890                     	;# 
  3037  0891                     	;# 
  3038  0892                     	;# 
  3039  0893                     	;# 
  3040  0893                     	;# 
  3041  0894                     	;# 
  3042  0895                     	;# 
  3043  0896                     	;# 
  3044  0897                     	;# 
  3045  0897                     	;# 
  3046  0898                     	;# 
  3047  0899                     	;# 
  3048  0D8C                     	;# 
  3049  0D8C                     	;# 
  3050  0D8D                     	;# 
  3051  0D8E                     	;# 
  3052  0D8F                     	;# 
  3053  0D8F                     	;# 
  3054  0D90                     	;# 
  3055  0D91                     	;# 
  3056  0D92                     	;# 
  3057  0D92                     	;# 
  3058  0D93                     	;# 
  3059  0D94                     	;# 
  3060  0D95                     	;# 
  3061  0D95                     	;# 
  3062  0D96                     	;# 
  3063  0D97                     	;# 
  3064  0D98                     	;# 
  3065  0D99                     	;# 
  3066  0D9A                     	;# 
  3067  0D9B                     	;# 
  3068  0D9C                     	;# 
  3069  0D9D                     	;# 
  3070  0D9E                     	;# 
  3071  0D9E                     	;# 
  3072  0D9F                     	;# 
  3073  0DA0                     	;# 
  3074  0DA1                     	;# 
  3075  0DA1                     	;# 
  3076  0DA2                     	;# 
  3077  0DA3                     	;# 
  3078  0DA4                     	;# 
  3079  0DA4                     	;# 
  3080  0DA5                     	;# 
  3081  0DA6                     	;# 
  3082  0DA7                     	;# 
  3083  0DA7                     	;# 
  3084  0DA8                     	;# 
  3085  0DA9                     	;# 
  3086  0DAA                     	;# 
  3087  0DAB                     	;# 
  3088  0DAC                     	;# 
  3089  0DAD                     	;# 
  3090  0DAE                     	;# 
  3091  0DAF                     	;# 
  3092  0E0F                     	;# 
  3093  0E10                     	;# 
  3094  0E11                     	;# 
  3095  0E12                     	;# 
  3096  0E13                     	;# 
  3097  0E14                     	;# 
  3098  0E15                     	;# 
  3099  0E16                     	;# 
  3100  0E17                     	;# 
  3101  0E18                     	;# 
  3102  0E19                     	;# 
  3103  0E1A                     	;# 
  3104  0E1B                     	;# 
  3105  0E1C                     	;# 
  3106  0E1D                     	;# 
  3107  0E1E                     	;# 
  3108  0E1F                     	;# 
  3109  0E20                     	;# 
  3110  0E21                     	;# 
  3111  0E22                     	;# 
  3112  0E23                     	;# 
  3113  0E24                     	;# 
  3114  0E25                     	;# 
  3115  0E26                     	;# 
  3116  0E27                     	;# 
  3117  0E28                     	;# 
  3118  0E29                     	;# 
  3119  0E2A                     	;# 
  3120  0E2B                     	;# 
  3121  0E2C                     	;# 
  3122  0E2D                     	;# 
  3123  0E2E                     	;# 
  3124  0E90                     	;# 
  3125  0E91                     	;# 
  3126  0E92                     	;# 
  3127  0E94                     	;# 
  3128  0E95                     	;# 
  3129  0E9C                     	;# 
  3130  0E9D                     	;# 
  3131  0E9E                     	;# 
  3132  0E9F                     	;# 
  3133  0EA0                     	;# 
  3134  0EA1                     	;# 
  3135  0EA2                     	;# 
  3136  0EA3                     	;# 
  3137  0EA4                     	;# 
  3138  0EA5                     	;# 
  3139  0EA6                     	;# 
  3140  0EA7                     	;# 
  3141  0F0F                     	;# 
  3142  0F10                     	;# 
  3143  0F11                     	;# 
  3144  0F12                     	;# 
  3145  0F13                     	;# 
  3146  0F14                     	;# 
  3147  0F15                     	;# 
  3148  0F16                     	;# 
  3149  0F17                     	;# 
  3150  0F18                     	;# 
  3151  0F19                     	;# 
  3152  0F1A                     	;# 
  3153  0F1B                     	;# 
  3154  0F1C                     	;# 
  3155  0F1D                     	;# 
  3156  0F1E                     	;# 
  3157  0F1F                     	;# 
  3158  0F20                     	;# 
  3159  0F21                     	;# 
  3160  0F22                     	;# 
  3161  0F23                     	;# 
  3162  0F24                     	;# 
  3163  0F25                     	;# 
  3164  0F26                     	;# 
  3165  0F27                     	;# 
  3166  0F28                     	;# 
  3167  0F29                     	;# 
  3168  0F2A                     	;# 
  3169  0F2B                     	;# 
  3170  0F2C                     	;# 
  3171  0F2D                     	;# 
  3172  0F2E                     	;# 
  3173  0F2F                     	;# 
  3174  0F30                     	;# 
  3175  0F31                     	;# 
  3176  0F32                     	;# 
  3177  0F33                     	;# 
  3178  0F34                     	;# 
  3179  0F35                     	;# 
  3180  0F36                     	;# 
  3181  0F37                     	;# 
  3182  0FE4                     	;# 
  3183  0FE5                     	;# 
  3184  0FE6                     	;# 
  3185  0FE7                     	;# 
  3186  0FE8                     	;# 
  3187  0FE9                     	;# 
  3188  0FEA                     	;# 
  3189  0FEB                     	;# 
  3190  0FED                     	;# 
  3191  0FEE                     	;# 
  3192  0FEF                     	;# 
  3193  0000                     	;# 
  3194  0001                     	;# 
  3195  0002                     	;# 
  3196  0003                     	;# 
  3197  0004                     	;# 
  3198  0005                     	;# 
  3199  0006                     	;# 
  3200  0007                     	;# 
  3201  0008                     	;# 
  3202  0009                     	;# 
  3203  000A                     	;# 
  3204  000B                     	;# 
  3205  000C                     	;# 
  3206  000D                     	;# 
  3207  000E                     	;# 
  3208  0010                     	;# 
  3209  0011                     	;# 
  3210  0012                     	;# 
  3211  0013                     	;# 
  3212  0014                     	;# 
  3213  0015                     	;# 
  3214  0016                     	;# 
  3215  0016                     	;# 
  3216  0017                     	;# 
  3217  0018                     	;# 
  3218  0019                     	;# 
  3219  001A                     	;# 
  3220  001A                     	;# 
  3221  001B                     	;# 
  3222  001B                     	;# 
  3223  001C                     	;# 
  3224  001D                     	;# 
  3225  001E                     	;# 
  3226  001F                     	;# 
  3227  008C                     	;# 
  3228  008D                     	;# 
  3229  008E                     	;# 
  3230  0090                     	;# 
  3231  0091                     	;# 
  3232  0092                     	;# 
  3233  0093                     	;# 
  3234  0094                     	;# 
  3235  0095                     	;# 
  3236  0096                     	;# 
  3237  0098                     	;# 
  3238  0099                     	;# 
  3239  009A                     	;# 
  3240  009B                     	;# 
  3241  009B                     	;# 
  3242  009C                     	;# 
  3243  009D                     	;# 
  3244  009E                     	;# 
  3245  009F                     	;# 
  3246  010C                     	;# 
  3247  010D                     	;# 
  3248  010E                     	;# 
  3249  0111                     	;# 
  3250  0112                     	;# 
  3251  0113                     	;# 
  3252  0114                     	;# 
  3253  0115                     	;# 
  3254  0116                     	;# 
  3255  0117                     	;# 
  3256  0118                     	;# 
  3257  0119                     	;# 
  3258  011C                     	;# 
  3259  018C                     	;# 
  3260  018D                     	;# 
  3261  018E                     	;# 
  3262  0191                     	;# 
  3263  0191                     	;# 
  3264  0192                     	;# 
  3265  0193                     	;# 
  3266  0193                     	;# 
  3267  0194                     	;# 
  3268  0195                     	;# 
  3269  0196                     	;# 
  3270  0197                     	;# 
  3271  0199                     	;# 
  3272  0199                     	;# 
  3273  0199                     	;# 
  3274  019A                     	;# 
  3275  019A                     	;# 
  3276  019A                     	;# 
  3277  019B                     	;# 
  3278  019B                     	;# 
  3279  019B                     	;# 
  3280  019B                     	;# 
  3281  019B                     	;# 
  3282  019C                     	;# 
  3283  019C                     	;# 
  3284  019C                     	;# 
  3285  019D                     	;# 
  3286  019D                     	;# 
  3287  019D                     	;# 
  3288  019E                     	;# 
  3289  019E                     	;# 
  3290  019E                     	;# 
  3291  019F                     	;# 
  3292  019F                     	;# 
  3293  019F                     	;# 
  3294  019F                     	;# 
  3295  019F                     	;# 
  3296  020C                     	;# 
  3297  020D                     	;# 
  3298  020E                     	;# 
  3299  0211                     	;# 
  3300  0211                     	;# 
  3301  0212                     	;# 
  3302  0212                     	;# 
  3303  0213                     	;# 
  3304  0213                     	;# 
  3305  0214                     	;# 
  3306  0214                     	;# 
  3307  0215                     	;# 
  3308  0215                     	;# 
  3309  0215                     	;# 
  3310  0215                     	;# 
  3311  0216                     	;# 
  3312  0216                     	;# 
  3313  0217                     	;# 
  3314  0217                     	;# 
  3315  028C                     	;# 
  3316  028D                     	;# 
  3317  028E                     	;# 
  3318  0291                     	;# 
  3319  0291                     	;# 
  3320  0292                     	;# 
  3321  0293                     	;# 
  3322  0294                     	;# 
  3323  0298                     	;# 
  3324  0298                     	;# 
  3325  0299                     	;# 
  3326  029A                     	;# 
  3327  029B                     	;# 
  3328  029E                     	;# 
  3329  030C                     	;# 
  3330  030D                     	;# 
  3331  030E                     	;# 
  3332  038C                     	;# 
  3333  038D                     	;# 
  3334  038E                     	;# 
  3335  0391                     	;# 
  3336  0392                     	;# 
  3337  0393                     	;# 
  3338  0394                     	;# 
  3339  0395                     	;# 
  3340  0396                     	;# 
  3341  0397                     	;# 
  3342  0398                     	;# 
  3343  0399                     	;# 
  3344  040E                     	;# 
  3345  0413                     	;# 
  3346  0413                     	;# 
  3347  0414                     	;# 
  3348  0414                     	;# 
  3349  0415                     	;# 
  3350  0416                     	;# 
  3351  0417                     	;# 
  3352  0418                     	;# 
  3353  041A                     	;# 
  3354  041A                     	;# 
  3355  041B                     	;# 
  3356  041B                     	;# 
  3357  041C                     	;# 
  3358  041D                     	;# 
  3359  041E                     	;# 
  3360  041F                     	;# 
  3361  0493                     	;# 
  3362  0494                     	;# 
  3363  0495                     	;# 
  3364  0496                     	;# 
  3365  049A                     	;# 
  3366  049B                     	;# 
  3367  049C                     	;# 
  3368  049D                     	;# 
  3369  058C                     	;# 
  3370  058C                     	;# 
  3371  058D                     	;# 
  3372  058E                     	;# 
  3373  058E                     	;# 
  3374  058F                     	;# 
  3375  0590                     	;# 
  3376  0590                     	;# 
  3377  0591                     	;# 
  3378  0592                     	;# 
  3379  0592                     	;# 
  3380  0593                     	;# 
  3381  0594                     	;# 
  3382  0594                     	;# 
  3383  0595                     	;# 
  3384  0596                     	;# 
  3385  0596                     	;# 
  3386  0597                     	;# 
  3387  0598                     	;# 
  3388  0599                     	;# 
  3389  059A                     	;# 
  3390  059B                     	;# 
  3391  059B                     	;# 
  3392  059C                     	;# 
  3393  059D                     	;# 
  3394  060C                     	;# 
  3395  060C                     	;# 
  3396  060D                     	;# 
  3397  060E                     	;# 
  3398  060F                     	;# 
  3399  060F                     	;# 
  3400  0610                     	;# 
  3401  0611                     	;# 
  3402  0612                     	;# 
  3403  0613                     	;# 
  3404  0614                     	;# 
  3405  0617                     	;# 
  3406  0617                     	;# 
  3407  0618                     	;# 
  3408  0619                     	;# 
  3409  061A                     	;# 
  3410  061A                     	;# 
  3411  061B                     	;# 
  3412  061C                     	;# 
  3413  0691                     	;# 
  3414  0692                     	;# 
  3415  0693                     	;# 
  3416  0694                     	;# 
  3417  0695                     	;# 
  3418  0696                     	;# 
  3419  0697                     	;# 
  3420  0699                     	;# 
  3421  069A                     	;# 
  3422  0711                     	;# 
  3423  0712                     	;# 
  3424  0713                     	;# 
  3425  0714                     	;# 
  3426  0715                     	;# 
  3427  0718                     	;# 
  3428  0718                     	;# 
  3429  0719                     	;# 
  3430  071A                     	;# 
  3431  071A                     	;# 
  3432  071B                     	;# 
  3433  071C                     	;# 
  3434  071D                     	;# 
  3435  0791                     	;# 
  3436  0791                     	;# 
  3437  0792                     	;# 
  3438  0793                     	;# 
  3439  0793                     	;# 
  3440  0794                     	;# 
  3441  0795                     	;# 
  3442  0795                     	;# 
  3443  0796                     	;# 
  3444  0797                     	;# 
  3445  0797                     	;# 
  3446  0798                     	;# 
  3447  0799                     	;# 
  3448  079A                     	;# 
  3449  080C                     	;# 
  3450  080C                     	;# 
  3451  080D                     	;# 
  3452  080E                     	;# 
  3453  080E                     	;# 
  3454  080F                     	;# 
  3455  0810                     	;# 
  3456  0810                     	;# 
  3457  0811                     	;# 
  3458  0812                     	;# 
  3459  0812                     	;# 
  3460  0813                     	;# 
  3461  0814                     	;# 
  3462  0815                     	;# 
  3463  0816                     	;# 
  3464  0817                     	;# 
  3465  0818                     	;# 
  3466  0819                     	;# 
  3467  081A                     	;# 
  3468  081A                     	;# 
  3469  081B                     	;# 
  3470  081C                     	;# 
  3471  081C                     	;# 
  3472  081D                     	;# 
  3473  088C                     	;# 
  3474  088D                     	;# 
  3475  088E                     	;# 
  3476  088F                     	;# 
  3477  088F                     	;# 
  3478  0890                     	;# 
  3479  0891                     	;# 
  3480  0892                     	;# 
  3481  0893                     	;# 
  3482  0893                     	;# 
  3483  0894                     	;# 
  3484  0895                     	;# 
  3485  0896                     	;# 
  3486  0897                     	;# 
  3487  0897                     	;# 
  3488  0898                     	;# 
  3489  0899                     	;# 
  3490  0D8C                     	;# 
  3491  0D8C                     	;# 
  3492  0D8D                     	;# 
  3493  0D8E                     	;# 
  3494  0D8F                     	;# 
  3495  0D8F                     	;# 
  3496  0D90                     	;# 
  3497  0D91                     	;# 
  3498  0D92                     	;# 
  3499  0D92                     	;# 
  3500  0D93                     	;# 
  3501  0D94                     	;# 
  3502  0D95                     	;# 
  3503  0D95                     	;# 
  3504  0D96                     	;# 
  3505  0D97                     	;# 
  3506  0D98                     	;# 
  3507  0D99                     	;# 
  3508  0D9A                     	;# 
  3509  0D9B                     	;# 
  3510  0D9C                     	;# 
  3511  0D9D                     	;# 
  3512  0D9E                     	;# 
  3513  0D9E                     	;# 
  3514  0D9F                     	;# 
  3515  0DA0                     	;# 
  3516  0DA1                     	;# 
  3517  0DA1                     	;# 
  3518  0DA2                     	;# 
  3519  0DA3                     	;# 
  3520  0DA4                     	;# 
  3521  0DA4                     	;# 
  3522  0DA5                     	;# 
  3523  0DA6                     	;# 
  3524  0DA7                     	;# 
  3525  0DA7                     	;# 
  3526  0DA8                     	;# 
  3527  0DA9                     	;# 
  3528  0DAA                     	;# 
  3529  0DAB                     	;# 
  3530  0DAC                     	;# 
  3531  0DAD                     	;# 
  3532  0DAE                     	;# 
  3533  0DAF                     	;# 
  3534  0E0F                     	;# 
  3535  0E10                     	;# 
  3536  0E11                     	;# 
  3537  0E12                     	;# 
  3538  0E13                     	;# 
  3539  0E14                     	;# 
  3540  0E15                     	;# 
  3541  0E16                     	;# 
  3542  0E17                     	;# 
  3543  0E18                     	;# 
  3544  0E19                     	;# 
  3545  0E1A                     	;# 
  3546  0E1B                     	;# 
  3547  0E1C                     	;# 
  3548  0E1D                     	;# 
  3549  0E1E                     	;# 
  3550  0E1F                     	;# 
  3551  0E20                     	;# 
  3552  0E21                     	;# 
  3553  0E22                     	;# 
  3554  0E23                     	;# 
  3555  0E24                     	;# 
  3556  0E25                     	;# 
  3557  0E26                     	;# 
  3558  0E27                     	;# 
  3559  0E28                     	;# 
  3560  0E29                     	;# 
  3561  0E2A                     	;# 
  3562  0E2B                     	;# 
  3563  0E2C                     	;# 
  3564  0E2D                     	;# 
  3565  0E2E                     	;# 
  3566  0E90                     	;# 
  3567  0E91                     	;# 
  3568  0E92                     	;# 
  3569  0E94                     	;# 
  3570  0E95                     	;# 
  3571  0E9C                     	;# 
  3572  0E9D                     	;# 
  3573  0E9E                     	;# 
  3574  0E9F                     	;# 
  3575  0EA0                     	;# 
  3576  0EA1                     	;# 
  3577  0EA2                     	;# 
  3578  0EA3                     	;# 
  3579  0EA4                     	;# 
  3580  0EA5                     	;# 
  3581  0EA6                     	;# 
  3582  0EA7                     	;# 
  3583  0F0F                     	;# 
  3584  0F10                     	;# 
  3585  0F11                     	;# 
  3586  0F12                     	;# 
  3587  0F13                     	;# 
  3588  0F14                     	;# 
  3589  0F15                     	;# 
  3590  0F16                     	;# 
  3591  0F17                     	;# 
  3592  0F18                     	;# 
  3593  0F19                     	;# 
  3594  0F1A                     	;# 
  3595  0F1B                     	;# 
  3596  0F1C                     	;# 
  3597  0F1D                     	;# 
  3598  0F1E                     	;# 
  3599  0F1F                     	;# 
  3600  0F20                     	;# 
  3601  0F21                     	;# 
  3602  0F22                     	;# 
  3603  0F23                     	;# 
  3604  0F24                     	;# 
  3605  0F25                     	;# 
  3606  0F26                     	;# 
  3607  0F27                     	;# 
  3608  0F28                     	;# 
  3609  0F29                     	;# 
  3610  0F2A                     	;# 
  3611  0F2B                     	;# 
  3612  0F2C                     	;# 
  3613  0F2D                     	;# 
  3614  0F2E                     	;# 
  3615  0F2F                     	;# 
  3616  0F30                     	;# 
  3617  0F31                     	;# 
  3618  0F32                     	;# 
  3619  0F33                     	;# 
  3620  0F34                     	;# 
  3621  0F35                     	;# 
  3622  0F36                     	;# 
  3623  0F37                     	;# 
  3624  0FE4                     	;# 
  3625  0FE5                     	;# 
  3626  0FE6                     	;# 
  3627  0FE7                     	;# 
  3628  0FE8                     	;# 
  3629  0FE9                     	;# 
  3630  0FEA                     	;# 
  3631  0FEB                     	;# 
  3632  0FED                     	;# 
  3633  0FEE                     	;# 
  3634  0FEF                     	;# 
  3635                           
  3636 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  3637  0000                     
  3638 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  3639  0000                     
  3640 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  3641  0000                     
  3642                           	psect	stringtext1
  3643  1000                     __pstringtext1:	
  3644  1000                     _hrDisp:	
  3645  1000  3448               	retlw	72
  3646  1001  3465               	retlw	101
  3647  1002  3461               	retlw	97
  3648  1003  3472               	retlw	114
  3649  1004  3474               	retlw	116
  3650  1005  3420               	retlw	32
  3651  1006  3452               	retlw	82
  3652  1007  3461               	retlw	97
  3653  1008  3474               	retlw	116
  3654  1009  3465               	retlw	101
  3655  100A  343A               	retlw	58
  3656  100B  3420               	retlw	32
  3657  100C  3400               	retlw	0
  3658  100D                     __end_of_hrDisp:	
  3659                           
  3660                           	psect	stringtext2
  3661  100D                     __pstringtext2:	
  3662  100D                     _distanceDisp:	
  3663  100D  3444               	retlw	68
  3664  100E  3469               	retlw	105
  3665  100F  3473               	retlw	115
  3666  1010  3474               	retlw	116
  3667  1011  3461               	retlw	97
  3668  1012  346E               	retlw	110
  3669  1013  3463               	retlw	99
  3670  1014  3465               	retlw	101
  3671  1015  343A               	retlw	58
  3672  1016  3420               	retlw	32
  3673  1017  3400               	retlw	0
  3674  1018                     __end_of_distanceDisp:	
  3675                           
  3676                           	psect	stringtext3
  3677  1018                     __pstringtext3:	
  3678  1018                     _speedDisp:	
  3679  1018  3453               	retlw	83
  3680  1019  3470               	retlw	112
  3681  101A  3465               	retlw	101
  3682  101B  3465               	retlw	101
  3683  101C  3464               	retlw	100
  3684  101D  343A               	retlw	58
  3685  101E  3420               	retlw	32
  3686  101F  3400               	retlw	0
  3687  1020                     __end_of_speedDisp:	
  3688                           
  3689                           	psect	nvBANK0
  3690  0055                     __pnvBANK0:	
  3691  0055                     _timer0ReloadVal:	
  3692  0055                     	ds	1
  3693                           
  3694                           	psect	nvBANK1
  3695  00EC                     __pnvBANK1:	
  3696  00EC                     _TMR0_InterruptHandler:	
  3697  00EC                     	ds	2
  3698  00EE                     _IOCCF7_InterruptHandler:	
  3699  00EE                     	ds	2
  3700                           
  3701                           	psect	nvBANK2
  3702  0162                     __pnvBANK2:	
  3703  0162                     _EUSART_ErrorHandler:	
  3704  0162                     	ds	2
  3705  0164                     _EUSART_OverrunErrorHandler:	
  3706  0164                     	ds	2
  3707  0166                     _EUSART_FramingErrorHandler:	
  3708  0166                     	ds	2
  3709  0015                     _TMR0	set	21
  3710  000B                     _INTCONbits	set	11
  3711  0010                     _PIR1bits	set	16
  3712  009D                     _ADCON0bits	set	157
  3713  009C                     _ADRESH	set	156
  3714  009B                     _ADRESL	set	155
  3715  009F                     _ADCON2	set	159
  3716  009E                     _ADCON1	set	158
  3717  009D                     _ADCON0	set	157
  3718  0095                     _OPTION_REG	set	149
  3719  0095                     _OPTION_REGbits	set	149
  3720  008E                     _TRISC	set	142
  3721  008D                     _TRISB	set	141
  3722  008C                     _TRISA	set	140
  3723  0098                     _OSCTUNE	set	152
  3724  0099                     _OSCCON	set	153
  3725  010E                     _LATC	set	270
  3726  010D                     _LATB	set	269
  3727  010C                     _LATA	set	268
  3728  0116                     _BORCON	set	278
  3729  018C                     _ANSELA	set	396
  3730  018D                     _ANSELB	set	397
  3731  018E                     _ANSELC	set	398
  3732  019A                     _TX1REG	set	410
  3733  0199                     _RC1REG	set	409
  3734  019D                     _RC1STAbits	set	413
  3735  019E                     _TX1STAbits	set	414
  3736  019C                     _SPBRGH	set	412
  3737  019B                     _SPBRGL	set	411
  3738  019E                     _TX1STA	set	414
  3739  019D                     _RC1STA	set	413
  3740  019F                     _BAUD1CON	set	415
  3741  020E                     _WPUC	set	526
  3742  020C                     _WPUA	set	524
  3743  020D                     _WPUB	set	525
  3744  028E                     _ODCONC	set	654
  3745  028D                     _ODCONB	set	653
  3746  028C                     _ODCONA	set	652
  3747  030E                     _SLRCONC	set	782
  3748  030D                     _SLRCONB	set	781
  3749  030C                     _SLRCONA	set	780
  3750  1877                     _SLRC7	set	6263
  3751  0397                     _IOCCPbits	set	919
  3752  0398                     _IOCCNbits	set	920
  3753  0399                     _IOCCFbits	set	921
  3754  1C77                     _INLVLC7	set	7287
  3755  0E9F                     _RB7PPS	set	3743
  3756                           
  3757                           	psect	stringtext4
  3758  1020                     __pstringtext4:	
  3759  1020                     STR_1:	
  3760  1020  3425               	retlw	37	;'%'
  3761  1021  3464               	retlw	100	;'d'
  3762  1022  3420               	retlw	32	;' '
  3763  1023  3420               	retlw	32	;' '
  3764  1024  3420               	retlw	32	;' '
  3765  1025  3420               	retlw	32	;' '
  3766  1026  3400               	retlw	0
  3767                           
  3768                           	psect	stringtext5
  3769  1027                     __pstringtext5:	
  3770  1027                     STR_2:	
  3771  1027  3425               	retlw	37	;'%'
  3772  1028  3464               	retlw	100	;'d'
  3773  1029  3420               	retlw	32	;' '
  3774  102A  346D               	retlw	109	;'m'
  3775  102B  3420               	retlw	32	;' '
  3776  102C  3400               	retlw	0
  3777                           
  3778                           	psect	stringtext6
  3779  102D                     __pstringtext6:	
  3780  102D                     STR_3:	
  3781  102D  347C               	retlw	124	;'|'
  3782  102E  342D               	retlw	45	;'-'
  3783  102F  3400               	retlw	0
  3784                           
  3785                           	psect	stringtext7
  3786  0000                     __pstringtext7:	
  3787                           
  3788                           ; #config settings
  3789  0000                     
  3790                           	psect	cinit
  3791  0016                     start_initialization:	
  3792  0016                     __initialization:	
  3793                           
  3794                           ; Clear objects allocated to BANK0
  3795  0016  303C               	movlw	low __pbssBANK0
  3796  0017  0084               	movwf	4
  3797  0018  3000               	movlw	high __pbssBANK0
  3798  0019  0085               	movwf	5
  3799  001A  3019               	movlw	25
  3800  001B  318C  24AB  3180   	fcall	clear_ram0
  3801                           
  3802                           ; Clear objects allocated to BANK1
  3803  001E  30E2               	movlw	low __pbssBANK1
  3804  001F  0084               	movwf	4
  3805  0020  3000               	movlw	high __pbssBANK1
  3806  0021  0085               	movwf	5
  3807  0022  300A               	movlw	10
  3808  0023  318C  24AB  3180   	fcall	clear_ram0
  3809                           
  3810                           ; Clear objects allocated to BANK2
  3811  0026  3020               	movlw	low __pbssBANK2
  3812  0027  0084               	movwf	4
  3813  0028  3001               	movlw	high __pbssBANK2
  3814  0029  0085               	movwf	5
  3815  002A  3028               	movlw	40
  3816  002B  318C  24AB         	fcall	clear_ram0
  3817  002D                     end_of_initialization:	
  3818                           ;End of C runtime variable initialization code
  3819                           
  3820  002D                     __end_of__initialization:	
  3821  002D  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3822  002E  0020               	movlb	0
  3823  002F  3186  2EAA         	ljmp	_main	;jump to C main() function
  3824                           
  3825                           	psect	bssBANK0
  3826  003C                     __pbssBANK0:	
  3827  003C                     _speed:	
  3828  003C                     	ds	4
  3829  0040                     _adcCounter:	
  3830  0040                     	ds	4
  3831  0044                     _counter:	
  3832  0044                     	ds	4
  3833  0048                     _flags:	
  3834  0048                     	ds	2
  3835  004A                     _hrInt:	
  3836  004A                     	ds	2
  3837  004C                     _distInt:	
  3838  004C                     	ds	2
  3839  004E                     _speedInt:	
  3840  004E                     	ds	2
  3841  0050                     _eusartRxLastError:	
  3842  0050                     	ds	1
  3843  0051                     _rpmInt:	
  3844  0051                     	ds	4
  3845                           
  3846                           	psect	bssBANK1
  3847  00E2                     __pbssBANK1:	
  3848  00E2                     _rpm:	
  3849  00E2                     	ds	4
  3850  00E6                     _nout:	
  3851  00E6                     	ds	2
  3852  00E8                     _width:	
  3853  00E8                     	ds	2
  3854  00EA                     _prec:	
  3855  00EA                     	ds	2
  3856                           
  3857                           	psect	bssBANK2
  3858  0120                     __pbssBANK2:	
  3859  0120                     _heartRate:	
  3860  0120                     	ds	4
  3861  0124                     _distance:	
  3862  0124                     	ds	4
  3863  0128                     _dbuf:	
  3864  0128                     	ds	32
  3865                           
  3866                           	psect	clrtext
  3867  0CAB                     clear_ram0:	
  3868                           ;	Called with FSR0 containing the base address, and
  3869                           ;	WREG with the size to clear
  3870                           
  3871  0CAB  0064               	clrwdt	;clear the watchdog before getting into this loop
  3872  0CAC                     clrloop0:	
  3873  0CAC  0180               	clrf	0	;clear RAM location pointed to by FSR
  3874  0CAD  3101               	addfsr 0,1
  3875  0CAE  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3876  0CAF  2CAC               	goto	clrloop0	;have we reached the end yet?
  3877  0CB0  3400               	retlw	0	;all done for this memory range, return
  3878                           
  3879                           	psect	cstackBANK2
  3880  0148                     __pcstackBANK2:	
  3881  0148                     vfpfcnvrt@ll:	
  3882                           
  3883                           ; 8 bytes @ 0x0
  3884  0148                     	ds	8
  3885  0150                     vfpfcnvrt@vp:	
  3886                           
  3887                           ; 1 bytes @ 0x8
  3888  0150                     	ds	1
  3889  0151                     vfpfcnvrt@fp:	
  3890                           
  3891                           ; 1 bytes @ 0x9
  3892  0151                     	ds	1
  3893  0152                     ??_vfprintf:	
  3894                           
  3895                           ; 1 bytes @ 0xA
  3896  0152                     	ds	2
  3897  0154                     vfprintf@fp:	
  3898                           
  3899                           ; 1 bytes @ 0xC
  3900  0154                     	ds	1
  3901  0155                     vfprintf@cfmt:	
  3902                           
  3903                           ; 2 bytes @ 0xD
  3904  0155                     	ds	2
  3905  0157                     ?_printf:	
  3906  0157                     printf@fmt:	
  3907                           ; 2 bytes @ 0xF
  3908                           
  3909                           
  3910                           ; 2 bytes @ 0xF
  3911  0157                     	ds	6
  3912  015D                     ??_printf:	
  3913                           
  3914                           ; 1 bytes @ 0x15
  3915  015D                     	ds	3
  3916  0160                     printf@ap:	
  3917                           
  3918                           ; 1 bytes @ 0x18
  3919  0160                     	ds	1
  3920  0161                     ??_main:	
  3921                           
  3922                           ; 1 bytes @ 0x19
  3923  0161                     	ds	1
  3924                           
  3925                           	psect	cstackBANK1
  3926  00A0                     __pcstackBANK1:	
  3927  00A0                     ??_TMR0_Initialize:	
  3928  00A0                     ??_setCursor:	
  3929                           ; 1 bytes @ 0x0
  3930                           
  3931  00A0                     ??_strlen:	
  3932                           ; 1 bytes @ 0x0
  3933                           
  3934  00A0                     ?_fputc:	
  3935                           ; 1 bytes @ 0x0
  3936                           
  3937  00A0                     ?___fltol:	
  3938                           ; 2 bytes @ 0x0
  3939                           
  3940  00A0                     ?___aodiv:	
  3941                           ; 4 bytes @ 0x0
  3942                           
  3943  00A0                     ?___aomod:	
  3944                           ; 8 bytes @ 0x0
  3945                           
  3946  00A0                     fputc@c:	
  3947                           ; 8 bytes @ 0x0
  3948                           
  3949  00A0                     ___fltol@f1:	
  3950                           ; 2 bytes @ 0x0
  3951                           
  3952  00A0                     ___aodiv@divisor:	
  3953                           ; 4 bytes @ 0x0
  3954                           
  3955  00A0                     ___aomod@divisor:	
  3956                           ; 8 bytes @ 0x0
  3957                           
  3958                           
  3959                           ; 8 bytes @ 0x0
  3960  00A0                     	ds	1
  3961  00A1                     strlen@a:	
  3962                           
  3963                           ; 1 bytes @ 0x1
  3964  00A1                     	ds	1
  3965  00A2                     setCursor@a:	
  3966  00A2                     fputc@fp:	
  3967                           ; 1 bytes @ 0x2
  3968                           
  3969  00A2                     strlen@s:	
  3970                           ; 1 bytes @ 0x2
  3971                           
  3972                           
  3973                           ; 1 bytes @ 0x2
  3974  00A2                     	ds	1
  3975  00A3                     ??_fputc:	
  3976                           
  3977                           ; 1 bytes @ 0x3
  3978  00A3                     	ds	1
  3979  00A4                     ??___fltol:	
  3980                           
  3981                           ; 1 bytes @ 0x4
  3982  00A4                     	ds	4
  3983  00A8                     ?_fputs:	
  3984  00A8                     fputs@s:	
  3985                           ; 2 bytes @ 0x8
  3986                           
  3987  00A8                     ___aodiv@dividend:	
  3988                           ; 2 bytes @ 0x8
  3989                           
  3990  00A8                     ___aomod@dividend:	
  3991                           ; 8 bytes @ 0x8
  3992                           
  3993                           
  3994                           ; 8 bytes @ 0x8
  3995  00A8                     	ds	2
  3996  00AA                     fputs@fp:	
  3997                           
  3998                           ; 1 bytes @ 0xA
  3999  00AA                     	ds	1
  4000  00AB                     ??_fputs:	
  4001                           
  4002                           ; 1 bytes @ 0xB
  4003  00AB                     	ds	3
  4004  00AE                     fputs@c:	
  4005                           
  4006                           ; 1 bytes @ 0xE
  4007  00AE                     	ds	1
  4008  00AF                     fputs@i:	
  4009                           
  4010                           ; 2 bytes @ 0xF
  4011  00AF                     	ds	1
  4012  00B0                     ___aodiv@counter:	
  4013  00B0                     ___aomod@counter:	
  4014                           ; 1 bytes @ 0x10
  4015                           
  4016                           
  4017                           ; 1 bytes @ 0x10
  4018  00B0                     	ds	1
  4019  00B1                     ?_puts:	
  4020  00B1                     ?_pad:	
  4021                           ; 2 bytes @ 0x11
  4022                           
  4023  00B1                     pad@buf:	
  4024                           ; 2 bytes @ 0x11
  4025                           
  4026  00B1                     ___aodiv@sign:	
  4027                           ; 1 bytes @ 0x11
  4028                           
  4029  00B1                     ___aomod@sign:	
  4030                           ; 1 bytes @ 0x11
  4031                           
  4032  00B1                     puts@s:	
  4033                           ; 1 bytes @ 0x11
  4034                           
  4035                           
  4036                           ; 2 bytes @ 0x11
  4037  00B1                     	ds	1
  4038  00B2                     ?_abs:	
  4039  00B2                     pad@p:	
  4040                           ; 2 bytes @ 0x12
  4041                           
  4042  00B2                     abs@a:	
  4043                           ; 2 bytes @ 0x12
  4044                           
  4045  00B2                     ___aodiv@quotient:	
  4046                           ; 2 bytes @ 0x12
  4047                           
  4048                           
  4049                           ; 8 bytes @ 0x12
  4050  00B2                     	ds	2
  4051  00B4                     ??_abs:	
  4052  00B4                     ??_pad:	
  4053                           ; 1 bytes @ 0x14
  4054                           
  4055                           
  4056                           ; 1 bytes @ 0x14
  4057  00B4                     	ds	1
  4058  00B5                     _puts$1096:	
  4059  00B5                     pad@i:	
  4060                           ; 1 bytes @ 0x15
  4061                           
  4062                           
  4063                           ; 2 bytes @ 0x15
  4064  00B5                     	ds	2
  4065  00B7                     pad@w:	
  4066                           
  4067                           ; 2 bytes @ 0x17
  4068  00B7                     	ds	2
  4069  00B9                     pad@fp:	
  4070                           
  4071                           ; 1 bytes @ 0x19
  4072  00B9                     	ds	1
  4073  00BA                     ?_dtoa:	
  4074  00BA                     dtoa@d:	
  4075                           ; 2 bytes @ 0x1A
  4076                           
  4077                           
  4078                           ; 8 bytes @ 0x1A
  4079  00BA                     	ds	8
  4080  00C2                     ??_dtoa:	
  4081                           
  4082                           ; 1 bytes @ 0x22
  4083  00C2                     	ds	3
  4084  00C5                     _dtoa$750:	
  4085                           
  4086                           ; 2 bytes @ 0x25
  4087  00C5                     	ds	2
  4088  00C7                     dtoa@fp:	
  4089                           
  4090                           ; 1 bytes @ 0x27
  4091  00C7                     	ds	1
  4092  00C8                     dtoa@p:	
  4093                           
  4094                           ; 2 bytes @ 0x28
  4095  00C8                     	ds	2
  4096  00CA                     dtoa@w:	
  4097                           
  4098                           ; 2 bytes @ 0x2A
  4099  00CA                     	ds	2
  4100  00CC                     dtoa@s:	
  4101                           
  4102                           ; 2 bytes @ 0x2C
  4103  00CC                     	ds	2
  4104  00CE                     dtoa@n:	
  4105                           
  4106                           ; 8 bytes @ 0x2E
  4107  00CE                     	ds	8
  4108  00D6                     dtoa@i:	
  4109                           
  4110                           ; 2 bytes @ 0x36
  4111  00D6                     	ds	2
  4112  00D8                     ?_vfpfcnvrt:	
  4113  00D8                     vfpfcnvrt@fmt:	
  4114                           ; 2 bytes @ 0x38
  4115                           
  4116                           
  4117                           ; 1 bytes @ 0x38
  4118  00D8                     	ds	1
  4119  00D9                     vfpfcnvrt@ap:	
  4120                           
  4121                           ; 1 bytes @ 0x39
  4122  00D9                     	ds	1
  4123  00DA                     ??_vfpfcnvrt:	
  4124                           
  4125                           ; 1 bytes @ 0x3A
  4126  00DA                     	ds	5
  4127  00DF                     ?_vfprintf:	
  4128  00DF                     vfprintf@fmt:	
  4129                           ; 2 bytes @ 0x3F
  4130                           
  4131                           
  4132                           ; 2 bytes @ 0x3F
  4133  00DF                     	ds	2
  4134  00E1                     vfprintf@ap:	
  4135                           
  4136                           ; 1 bytes @ 0x41
  4137  00E1                     	ds	1
  4138                           
  4139                           	psect	cstackCOMMON
  4140  0070                     __pcstackCOMMON:	
  4141  0070                     ?_PIN_MANAGER_Initialize:	
  4142  0070                     ?_OSCILLATOR_Initialize:	
  4143                           ; 1 bytes @ 0x0
  4144                           
  4145  0070                     ?_ADC_Initialize:	
  4146                           ; 1 bytes @ 0x0
  4147                           
  4148  0070                     ?_TMR0_Initialize:	
  4149                           ; 1 bytes @ 0x0
  4150                           
  4151  0070                     ?_IOCCF7_DefaultInterruptHandler:	
  4152                           ; 1 bytes @ 0x0
  4153                           
  4154  0070                     ??_IOCCF7_DefaultInterruptHandler:	
  4155                           ; 1 bytes @ 0x0
  4156                           
  4157  0070                     ?_IOCCF7_ISR:	
  4158                           ; 1 bytes @ 0x0
  4159                           
  4160  0070                     ?_TMR0_DefaultInterruptHandler:	
  4161                           ; 1 bytes @ 0x0
  4162                           
  4163  0070                     ??_TMR0_DefaultInterruptHandler:	
  4164                           ; 1 bytes @ 0x0
  4165                           
  4166  0070                     ?_timerISR:	
  4167                           ; 1 bytes @ 0x0
  4168                           
  4169  0070                     ??_timerISR:	
  4170                           ; 1 bytes @ 0x0
  4171                           
  4172  0070                     ?_speedCalc:	
  4173                           ; 1 bytes @ 0x0
  4174                           
  4175  0070                     ?_resetCursor:	
  4176                           ; 1 bytes @ 0x0
  4177                           
  4178  0070                     ?_EUSART_Initialize:	
  4179                           ; 1 bytes @ 0x0
  4180                           
  4181  0070                     ?_EUSART_Write:	
  4182                           ; 1 bytes @ 0x0
  4183                           
  4184  0070                     ?_putch:	
  4185                           ; 1 bytes @ 0x0
  4186                           
  4187  0070                     ?_SYSTEM_Initialize:	
  4188                           ; 1 bytes @ 0x0
  4189                           
  4190  0070                     ?_PIN_MANAGER_IOC:	
  4191                           ; 1 bytes @ 0x0
  4192                           
  4193  0070                     ?_TMR0_ISR:	
  4194                           ; 1 bytes @ 0x0
  4195                           
  4196  0070                     ??_TMR0_ISR:	
  4197                           ; 1 bytes @ 0x0
  4198                           
  4199  0070                     ?_INTERRUPT_InterruptManager:	
  4200                           ; 1 bytes @ 0x0
  4201                           
  4202  0070                     ?_main:	
  4203                           ; 1 bytes @ 0x0
  4204                           
  4205  0070                     ?__Umul8_16:	
  4206                           ; 1 bytes @ 0x0
  4207                           
  4208  0070                     ?___xxtofl:	
  4209                           ; 2 bytes @ 0x0
  4210                           
  4211  0070                     __Umul8_16@multiplicand:	
  4212                           ; 4 bytes @ 0x0
  4213                           
  4214  0070                     ___xxtofl@val:	
  4215                           ; 1 bytes @ 0x0
  4216                           
  4217                           
  4218                           ; 4 bytes @ 0x0
  4219  0070                     	ds	2
  4220  0072                     ??__Umul8_16:	
  4221                           
  4222                           ; 1 bytes @ 0x2
  4223  0072                     	ds	2
  4224  0074                     ??___xxtofl:	
  4225  0074                     __Umul8_16@product:	
  4226                           ; 1 bytes @ 0x4
  4227                           
  4228                           
  4229                           ; 2 bytes @ 0x4
  4230  0074                     	ds	2
  4231  0076                     __Umul8_16@word_mpld:	
  4232                           
  4233                           ; 2 bytes @ 0x6
  4234  0076                     	ds	2
  4235  0078                     ___xxtofl@sign:	
  4236  0078                     __Umul8_16@multiplier:	
  4237                           ; 1 bytes @ 0x8
  4238                           
  4239                           
  4240                           ; 1 bytes @ 0x8
  4241  0078                     	ds	1
  4242  0079                     ___xxtofl@exp:	
  4243                           
  4244                           ; 1 bytes @ 0x9
  4245  0079                     	ds	1
  4246  007A                     ___xxtofl@arg:	
  4247                           
  4248                           ; 4 bytes @ 0xA
  4249  007A                     	ds	4
  4250  007E                     ??_IOCCF7_ISR:	
  4251  007E                     ??_speedCalc:	
  4252                           ; 1 bytes @ 0xE
  4253                           
  4254  007E                     ??_PIN_MANAGER_IOC:	
  4255                           ; 1 bytes @ 0xE
  4256                           
  4257  007E                     ??_INTERRUPT_InterruptManager:	
  4258                           ; 1 bytes @ 0xE
  4259                           
  4260                           
  4261                           	psect	cstackBANK0
  4262  0020                     __pcstackBANK0:	
  4263                           ; 1 bytes @ 0xE
  4264                           
  4265  0020                     ?___flmul:	
  4266  0020                     ___flmul@b:	
  4267                           ; 4 bytes @ 0x0
  4268                           
  4269                           
  4270                           ; 4 bytes @ 0x0
  4271  0020                     	ds	4
  4272  0024                     ___flmul@a:	
  4273                           
  4274                           ; 4 bytes @ 0x4
  4275  0024                     	ds	4
  4276  0028                     ??___flmul:	
  4277                           
  4278                           ; 1 bytes @ 0x8
  4279  0028                     	ds	5
  4280  002D                     ___flmul@sign:	
  4281                           
  4282                           ; 1 bytes @ 0xD
  4283  002D                     	ds	1
  4284  002E                     ___flmul@grs:	
  4285                           
  4286                           ; 4 bytes @ 0xE
  4287  002E                     	ds	4
  4288  0032                     ___flmul@aexp:	
  4289                           
  4290                           ; 1 bytes @ 0x12
  4291  0032                     	ds	1
  4292  0033                     ___flmul@bexp:	
  4293                           
  4294                           ; 1 bytes @ 0x13
  4295  0033                     	ds	1
  4296  0034                     ___flmul@prod:	
  4297                           
  4298                           ; 4 bytes @ 0x14
  4299  0034                     	ds	4
  4300  0038                     ___flmul@temp:	
  4301                           
  4302                           ; 2 bytes @ 0x18
  4303  0038                     	ds	2
  4304  003A                     ?_EUSART_SetFramingErrorHandler:	
  4305  003A                     ?_EUSART_SetOverrunErrorHandler:	
  4306                           ; 1 bytes @ 0x1A
  4307                           
  4308  003A                     ?_EUSART_SetErrorHandler:	
  4309                           ; 1 bytes @ 0x1A
  4310                           
  4311  003A                     ??_OSCILLATOR_Initialize:	
  4312                           ; 1 bytes @ 0x1A
  4313                           
  4314  003A                     ??_ADC_Initialize:	
  4315                           ; 1 bytes @ 0x1A
  4316                           
  4317  003A                     ?_IOCCF7_SetInterruptHandler:	
  4318                           ; 1 bytes @ 0x1A
  4319                           
  4320  003A                     ?_TMR0_SetInterruptHandler:	
  4321                           ; 1 bytes @ 0x1A
  4322                           
  4323  003A                     ??_EUSART_Write:	
  4324                           ; 1 bytes @ 0x1A
  4325                           
  4326  003A                     ??___aodiv:	
  4327                           ; 1 bytes @ 0x1A
  4328                           
  4329  003A                     ??___aomod:	
  4330                           ; 1 bytes @ 0x1A
  4331                           
  4332  003A                     ?_strlen:	
  4333                           ; 1 bytes @ 0x1A
  4334                           
  4335  003A                     EUSART_Write@txData:	
  4336                           ; 2 bytes @ 0x1A
  4337                           
  4338  003A                     ___fltol@sign1:	
  4339                           ; 1 bytes @ 0x1A
  4340                           
  4341  003A                     EUSART_SetFramingErrorHandler@interruptHandler:	
  4342                           ; 1 bytes @ 0x1A
  4343                           
  4344  003A                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  4345                           ; 2 bytes @ 0x1A
  4346                           
  4347  003A                     EUSART_SetErrorHandler@interruptHandler:	
  4348                           ; 2 bytes @ 0x1A
  4349                           
  4350  003A                     IOCCF7_SetInterruptHandler@InterruptHandler:	
  4351                           ; 2 bytes @ 0x1A
  4352                           
  4353  003A                     TMR0_SetInterruptHandler@InterruptHandler:	
  4354                           ; 2 bytes @ 0x1A
  4355                           
  4356                           
  4357                           ; 2 bytes @ 0x1A
  4358  003A                     	ds	1
  4359  003B                     ?_setCursor:	
  4360  003B                     ??_putch:	
  4361                           ; 1 bytes @ 0x1B
  4362                           
  4363  003B                     putch@txData:	
  4364                           ; 1 bytes @ 0x1B
  4365                           
  4366  003B                     setCursor@b:	
  4367                           ; 1 bytes @ 0x1B
  4368                           
  4369  003B                     ___fltol@exp1:	
  4370                           ; 1 bytes @ 0x1B
  4371                           
  4372                           
  4373                           ; 1 bytes @ 0x1B
  4374  003B                     	ds	1
  4375  003C                     ??_EUSART_SetFramingErrorHandler:	
  4376  003C                     ??_EUSART_SetOverrunErrorHandler:	
  4377                           ; 1 bytes @ 0x1C
  4378                           
  4379  003C                     ??_EUSART_SetErrorHandler:	
  4380                           ; 1 bytes @ 0x1C
  4381                           
  4382  003C                     ??_PIN_MANAGER_Initialize:	
  4383                           ; 1 bytes @ 0x1C
  4384                           
  4385  003C                     ??_IOCCF7_SetInterruptHandler:	
  4386                           ; 1 bytes @ 0x1C
  4387                           
  4388  003C                     ??_TMR0_SetInterruptHandler:	
  4389                           ; 1 bytes @ 0x1C
  4390                           
  4391  003C                     ??_resetCursor:	
  4392                           ; 1 bytes @ 0x1C
  4393                           
  4394  003C                     ??_puts:	
  4395                           ; 1 bytes @ 0x1C
  4396                           
  4397  003C                     ??_EUSART_Initialize:	
  4398                           ; 1 bytes @ 0x1C
  4399                           
  4400  003C                     ??_SYSTEM_Initialize:	
  4401                           ; 1 bytes @ 0x1C
  4402                           
  4403                           
  4404                           	psect	maintext
  4405  06AA                     __pmaintext:	
  4406                           ; 1 bytes @ 0x1C
  4407 ;;
  4408 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  4409 ;;
  4410 ;; *************** function _main *****************
  4411 ;; Defined at:
  4412 ;;		line 33 in file "main.c"
  4413 ;; Parameters:    Size  Location     Type
  4414 ;;		None
  4415 ;; Auto vars:     Size  Location     Type
  4416 ;;		None
  4417 ;; Return value:  Size  Location     Type
  4418 ;;                  1    wreg      void 
  4419 ;; Registers used:
  4420 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4421 ;; Tracked objects:
  4422 ;;		On entry : B1F/0
  4423 ;;		On exit  : 0/0
  4424 ;;		Unchanged: 0/0
  4425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4428 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  4429 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  4430 ;;Total ram usage:        1 bytes
  4431 ;; Hardware stack levels required when called:   15
  4432 ;; This function calls:
  4433 ;;		_IOCCF7_SetInterruptHandler
  4434 ;;		_SYSTEM_Initialize
  4435 ;;		_TMR0_SetInterruptHandler
  4436 ;;		___fltol
  4437 ;;		_printf
  4438 ;;		_resetCursor
  4439 ;;		_setCursor
  4440 ;; This function is called by:
  4441 ;;		Startup code after reset
  4442 ;; This function uses a non-reentrant model
  4443 ;;
  4444                           
  4445                           
  4446                           ;psect for function _main
  4447  06AA                     _main:	
  4448                           
  4449                           ;main.c: 36:     SYSTEM_Initialize();
  4450                           
  4451                           ;incstack = 0
  4452                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4453  06AA  318D  2519  3186   	fcall	_SYSTEM_Initialize
  4454                           
  4455                           ;main.c: 39:     TMR0_SetInterruptHandler( timerISR ) ;
  4456  06AD  3028               	movlw	low _timerISR
  4457  06AE  0020               	movlb	0	; select bank0
  4458  06AF  00BA               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  4459  06B0  300D               	movlw	high _timerISR
  4460  06B1  00BB               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  4461  06B2  318C  24F4  3186   	fcall	_TMR0_SetInterruptHandler
  4462                           
  4463                           ;main.c: 40:     IOCCF7_SetInterruptHandler( speedCalc ) ;
  4464  06B5  30E8               	movlw	low _speedCalc
  4465  06B6  0020               	movlb	0	; select bank0
  4466  06B7  00BA               	movwf	IOCCF7_SetInterruptHandler@InterruptHandler
  4467  06B8  300E               	movlw	high _speedCalc
  4468  06B9  00BB               	movwf	IOCCF7_SetInterruptHandler@InterruptHandler+1
  4469  06BA  318C  24EB  3186   	fcall	_IOCCF7_SetInterruptHandler
  4470                           
  4471                           ;main.c: 43:     resetCursor() ;
  4472  06BD  318C  24C8  3186   	fcall	_resetCursor
  4473                           
  4474                           ;main.c: 46:     setCursor(1,0) ;
  4475  06C0  0020               	movlb	0	; select bank0
  4476  06C1  01BB               	clrf	setCursor@b
  4477  06C2  3001               	movlw	1
  4478  06C3  318E  26A6  3186   	fcall	_setCursor
  4479                           
  4480                           ;main.c: 47:     printf(speedDisp);
  4481  06C6  3018               	movlw	low (_speedDisp| (0+32768))
  4482  06C7  0022               	movlb	2	; select bank2
  4483  06C8  00D7               	movwf	printf@fmt^(0+256)
  4484  06C9  3090               	movlw	high (_speedDisp| (0+32768))
  4485  06CA  00D8               	movwf	(printf@fmt^(0+256)+1)
  4486  06CB  318D  253A  3186   	fcall	_printf
  4487                           
  4488                           ;main.c: 48:     setCursor(2,0) ;
  4489  06CE  0020               	movlb	0	; select bank0
  4490  06CF  01BB               	clrf	setCursor@b
  4491  06D0  3002               	movlw	2
  4492  06D1  318E  26A6  3186   	fcall	_setCursor
  4493                           
  4494                           ;main.c: 49:     printf(distanceDisp);
  4495  06D4  300D               	movlw	low (_distanceDisp| (0+32768))
  4496  06D5  0022               	movlb	2	; select bank2
  4497  06D6  00D7               	movwf	printf@fmt^(0+256)
  4498  06D7  3090               	movlw	high (_distanceDisp| (0+32768))
  4499  06D8  00D8               	movwf	(printf@fmt^(0+256)+1)
  4500  06D9  318D  253A  3186   	fcall	_printf
  4501                           
  4502                           ;main.c: 50:     setCursor(3,0) ;
  4503  06DC  0020               	movlb	0	; select bank0
  4504  06DD  01BB               	clrf	setCursor@b
  4505  06DE  3003               	movlw	3
  4506  06DF  318E  26A6  3186   	fcall	_setCursor
  4507                           
  4508                           ;main.c: 51:     printf(hrDisp);
  4509  06E2  3000               	movlw	low (_hrDisp| (0+32768))
  4510  06E3  0022               	movlb	2	; select bank2
  4511  06E4  00D7               	movwf	printf@fmt^(0+256)
  4512  06E5  3090               	movlw	high (_hrDisp| (0+32768))
  4513  06E6  00D8               	movwf	(printf@fmt^(0+256)+1)
  4514  06E7  318D  253A  3186   	fcall	_printf
  4515                           
  4516                           ;main.c: 55:     (INTCONbits.GIE = 1);
  4517  06EA  178B               	bsf	11,7	;volatile
  4518                           
  4519                           ;main.c: 56:     (INTCONbits.PEIE = 1);
  4520  06EB  170B               	bsf	11,6	;volatile
  4521  06EC                     l3069:	
  4522                           
  4523                           ;main.c: 70:         setCursor(1,7) ;
  4524  06EC  3007               	movlw	7
  4525  06ED  0022               	movlb	2	; select bank2
  4526  06EE  00E1               	movwf	??_main^(0+256)
  4527  06EF  0861               	movf	??_main^(0+256),w
  4528  06F0  0020               	movlb	0	; select bank0
  4529  06F1  00BB               	movwf	setCursor@b
  4530  06F2  3001               	movlw	1
  4531  06F3  318E  26A6  3186   	fcall	_setCursor
  4532                           
  4533                           ;main.c: 71:         speedInt = speed ;
  4534  06F6  0020               	movlb	0	; select bank0
  4535  06F7  083F               	movf	_speed+3,w	;volatile
  4536  06F8  0021               	movlb	1	; select bank1
  4537  06F9  00A3               	movwf	(___fltol@f1+3)^(0+128)
  4538  06FA  0020               	movlb	0	; select bank0
  4539  06FB  083E               	movf	_speed+2,w	;volatile
  4540  06FC  0021               	movlb	1	; select bank1
  4541  06FD  00A2               	movwf	(___fltol@f1+2)^(0+128)
  4542  06FE  0020               	movlb	0	; select bank0
  4543  06FF  083D               	movf	_speed+1,w	;volatile
  4544  0700  0021               	movlb	1	; select bank1
  4545  0701  00A1               	movwf	(___fltol@f1+1)^(0+128)
  4546  0702  0020               	movlb	0	; select bank0
  4547  0703  083C               	movf	_speed,w	;volatile
  4548  0704  0021               	movlb	1	; select bank1
  4549  0705  00A0               	movwf	___fltol@f1^(0+128)
  4550  0706  318F  278F  3186   	fcall	___fltol
  4551  0709  0021               	movlb	1	; select bank1
  4552  070A  0821               	movf	(?___fltol+1)^(0+128),w
  4553  070B  0020               	movlb	0	; select bank0
  4554  070C  00CF               	movwf	_speedInt+1	;volatile
  4555  070D  0021               	movlb	1	; select bank1
  4556  070E  0820               	movf	?___fltol^(0+128),w
  4557  070F  0020               	movlb	0	; select bank0
  4558  0710  00CE               	movwf	_speedInt	;volatile
  4559                           
  4560                           ;main.c: 72:         printf("%d    ", rpmInt) ;
  4561  0711  3020               	movlw	low (STR_1| (0+32768))
  4562  0712  0022               	movlb	2	; select bank2
  4563  0713  00D7               	movwf	printf@fmt^(0+256)
  4564  0714  3090               	movlw	high (STR_1| (0+32768))
  4565  0715  00D8               	movwf	(printf@fmt^(0+256)+1)
  4566  0716  0020               	movlb	0	; select bank0
  4567  0717  0854               	movf	_rpmInt+3,w	;volatile
  4568  0718  0022               	movlb	2	; select bank2
  4569  0719  00DC               	movwf	((?_printf+3)^(0+256)+2)
  4570  071A  0020               	movlb	0	; select bank0
  4571  071B  0853               	movf	_rpmInt+2,w	;volatile
  4572  071C  0022               	movlb	2	; select bank2
  4573  071D  00DB               	movwf	((?_printf+2)^(0+256)+2)
  4574  071E  0020               	movlb	0	; select bank0
  4575  071F  0852               	movf	_rpmInt+1,w	;volatile
  4576  0720  0022               	movlb	2	; select bank2
  4577  0721  00DA               	movwf	((?_printf+1)^(0+256)+2)
  4578  0722  0020               	movlb	0	; select bank0
  4579  0723  0851               	movf	_rpmInt,w	;volatile
  4580  0724  0022               	movlb	2	; select bank2
  4581  0725  00D9               	movwf	(?_printf^(0+256)+2)
  4582  0726  318D  253A  3186   	fcall	_printf
  4583                           
  4584                           ;main.c: 84:         setCursor(2,10) ;
  4585  0729  300A               	movlw	10
  4586  072A  0022               	movlb	2	; select bank2
  4587  072B  00E1               	movwf	??_main^(0+256)
  4588  072C  0861               	movf	??_main^(0+256),w
  4589  072D  0020               	movlb	0	; select bank0
  4590  072E  00BB               	movwf	setCursor@b
  4591  072F  3002               	movlw	2
  4592  0730  318E  26A6  3186   	fcall	_setCursor
  4593                           
  4594                           ;main.c: 86:         printf("%d m ", distInt ) ;
  4595  0733  3027               	movlw	low (STR_2| (0+32768))
  4596  0734  0022               	movlb	2	; select bank2
  4597  0735  00D7               	movwf	printf@fmt^(0+256)
  4598  0736  3090               	movlw	high (STR_2| (0+32768))
  4599  0737  00D8               	movwf	(printf@fmt^(0+256)+1)
  4600  0738  0020               	movlb	0	; select bank0
  4601  0739  084D               	movf	_distInt+1,w	;volatile
  4602  073A  0022               	movlb	2	; select bank2
  4603  073B  00DA               	movwf	((?_printf+1)^(0+256)+2)
  4604  073C  0020               	movlb	0	; select bank0
  4605  073D  084C               	movf	_distInt,w	;volatile
  4606  073E  0022               	movlb	2	; select bank2
  4607  073F  00D9               	movwf	(?_printf^(0+256)+2)
  4608  0740  318D  253A  3186   	fcall	_printf
  4609  0743  2EEC               	goto	l3069
  4610  0744                     __end_of_main:	
  4611                           
  4612                           	psect	text1
  4613  0EA6                     __ptext1:	
  4614 ;; *************** function _setCursor *****************
  4615 ;; Defined at:
  4616 ;;		line 67 in file "displayOptions.c"
  4617 ;; Parameters:    Size  Location     Type
  4618 ;;  a               1    wreg     unsigned char 
  4619 ;;  b               1   27[BANK0 ] unsigned char 
  4620 ;; Auto vars:     Size  Location     Type
  4621 ;;  a               1    2[BANK1 ] unsigned char 
  4622 ;; Return value:  Size  Location     Type
  4623 ;;                  1    wreg      void 
  4624 ;; Registers used:
  4625 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4626 ;; Tracked objects:
  4627 ;;		On entry : 0/0
  4628 ;;		On exit  : 0/0
  4629 ;;		Unchanged: 0/0
  4630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4631 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4632 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4633 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4634 ;;      Totals:         0       1       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4635 ;;Total ram usage:        4 bytes
  4636 ;; Hardware stack levels used:    1
  4637 ;; Hardware stack levels required when called:    7
  4638 ;; This function calls:
  4639 ;;		_EUSART_Write
  4640 ;; This function is called by:
  4641 ;;		_main
  4642 ;; This function uses a non-reentrant model
  4643 ;;
  4644                           
  4645                           
  4646                           ;psect for function _setCursor
  4647  0EA6                     _setCursor:	
  4648                           
  4649                           ;incstack = 0
  4650                           ; Regs used in _setCursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4651                           ;setCursor@a stored from wreg
  4652  0EA6  0021               	movlb	1	; select bank1
  4653  0EA7  00A2               	movwf	setCursor@a^(0+128)
  4654                           
  4655                           ;displayOptions.c: 68:     switch ( a ){
  4656  0EA8  2ED1               	goto	l2981
  4657  0EA9                     l2971:	
  4658                           
  4659                           ;displayOptions.c: 70:         {;displayOptions.c: 71:             EUSART_Write( 254 );
  4660  0EA9  30FE               	movlw	254
  4661  0EAA  318C  24C0  318E   	fcall	_EUSART_Write
  4662                           
  4663                           ;displayOptions.c: 72:             EUSART_Write(128 + 0 + b) ;
  4664  0EAD  0020               	movlb	0	; select bank0
  4665  0EAE  083B               	movf	setCursor@b,w
  4666  0EAF  3E80               	addlw	128
  4667  0EB0  318C  24C0         	fcall	_EUSART_Write
  4668                           
  4669                           ;displayOptions.c: 73:             break ;
  4670  0EB2  0008               	return
  4671  0EB3                     l2973:	
  4672                           
  4673                           ;displayOptions.c: 76:         {;displayOptions.c: 77:            EUSART_Write( 254 );
  4674  0EB3  30FE               	movlw	254
  4675  0EB4  318C  24C0  318E   	fcall	_EUSART_Write
  4676                           
  4677                           ;displayOptions.c: 78:            EUSART_Write(128 + 64 + b) ;
  4678  0EB7  0020               	movlb	0	; select bank0
  4679  0EB8  083B               	movf	setCursor@b,w
  4680  0EB9  3EC0               	addlw	192
  4681  0EBA  318C  24C0         	fcall	_EUSART_Write
  4682                           
  4683                           ;displayOptions.c: 79:            break ;
  4684  0EBC  0008               	return
  4685  0EBD                     l2975:	
  4686                           
  4687                           ;displayOptions.c: 82:         {;displayOptions.c: 83:             EUSART_Write( 254 );
  4688  0EBD  30FE               	movlw	254
  4689  0EBE  318C  24C0  318E   	fcall	_EUSART_Write
  4690                           
  4691                           ;displayOptions.c: 84:             EUSART_Write(128 + 20 + b) ;
  4692  0EC1  0020               	movlb	0	; select bank0
  4693  0EC2  083B               	movf	setCursor@b,w
  4694  0EC3  3E94               	addlw	148
  4695  0EC4  318C  24C0         	fcall	_EUSART_Write
  4696                           
  4697                           ;displayOptions.c: 85:             break ;
  4698  0EC6  0008               	return
  4699  0EC7                     l2977:	
  4700                           
  4701                           ;displayOptions.c: 88:         {;displayOptions.c: 89:             EUSART_Write( 254 );
  4702  0EC7  30FE               	movlw	254
  4703  0EC8  318C  24C0  318E   	fcall	_EUSART_Write
  4704                           
  4705                           ;displayOptions.c: 90:             EUSART_Write(128 + 84 + b) ;
  4706  0ECB  0020               	movlb	0	; select bank0
  4707  0ECC  083B               	movf	setCursor@b,w
  4708  0ECD  3ED4               	addlw	212
  4709  0ECE  318C  24C0         	fcall	_EUSART_Write
  4710                           
  4711                           ;displayOptions.c: 91:             break ;
  4712  0ED0  0008               	return
  4713  0ED1                     l2981:	
  4714  0ED1  0822               	movf	setCursor@a^(0+128),w
  4715  0ED2  00A0               	movwf	??_setCursor^(0+128)
  4716  0ED3  01A1               	clrf	(??_setCursor^(0+128)+1)
  4717                           
  4718                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4719                           ; Switch size 1, requested type "simple"
  4720                           ; Number of cases is 1, Range of values is 0 to 0
  4721                           ; switch strategies available:
  4722                           ; Name         Instructions Cycles
  4723                           ; simple_byte            4     3 (average)
  4724                           ; direct_byte            8     6 (fixed)
  4725                           ; jumptable            260     6 (fixed)
  4726                           ;	Chosen strategy is simple_byte
  4727  0ED4  0821               	movf	(??_setCursor+1)^(0+128),w
  4728  0ED5  3A00               	xorlw	0	; case 0
  4729  0ED6  1903               	skipnz
  4730  0ED7  2ED9               	goto	l3121
  4731  0ED8  2EE7               	goto	l351
  4732  0ED9                     l3121:	
  4733                           
  4734                           ; Switch size 1, requested type "simple"
  4735                           ; Number of cases is 4, Range of values is 1 to 4
  4736                           ; switch strategies available:
  4737                           ; Name         Instructions Cycles
  4738                           ; simple_byte           13     7 (average)
  4739                           ; direct_byte           17     9 (fixed)
  4740                           ; jumptable            263     9 (fixed)
  4741                           ;	Chosen strategy is simple_byte
  4742  0ED9  0820               	movf	??_setCursor^(0+128),w
  4743  0EDA  3A01               	xorlw	1	; case 1
  4744  0EDB  1903               	skipnz
  4745  0EDC  2EA9               	goto	l2971
  4746  0EDD  3A03               	xorlw	3	; case 2
  4747  0EDE  1903               	skipnz
  4748  0EDF  2EB3               	goto	l2973
  4749  0EE0  3A01               	xorlw	1	; case 3
  4750  0EE1  1903               	skipnz
  4751  0EE2  2EBD               	goto	l2975
  4752  0EE3  3A07               	xorlw	7	; case 4
  4753  0EE4  1903               	skipnz
  4754  0EE5  2EC7               	goto	l2977
  4755  0EE6  2EE7               	goto	l351
  4756  0EE7                     l351:	
  4757  0EE7  0008               	return
  4758  0EE8                     __end_of_setCursor:	
  4759                           
  4760                           	psect	text2
  4761  0CC8                     __ptext2:	
  4762 ;; *************** function _resetCursor *****************
  4763 ;; Defined at:
  4764 ;;		line 54 in file "displayOptions.c"
  4765 ;; Parameters:    Size  Location     Type
  4766 ;;		None
  4767 ;; Auto vars:     Size  Location     Type
  4768 ;;		None
  4769 ;; Return value:  Size  Location     Type
  4770 ;;                  1    wreg      void 
  4771 ;; Registers used:
  4772 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4773 ;; Tracked objects:
  4774 ;;		On entry : 0/0
  4775 ;;		On exit  : 0/0
  4776 ;;		Unchanged: 0/0
  4777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4782 ;;Total ram usage:        0 bytes
  4783 ;; Hardware stack levels used:    1
  4784 ;; Hardware stack levels required when called:   11
  4785 ;; This function calls:
  4786 ;;		_puts
  4787 ;; This function is called by:
  4788 ;;		_main
  4789 ;; This function uses a non-reentrant model
  4790 ;;
  4791                           
  4792                           
  4793                           ;psect for function _resetCursor
  4794  0CC8                     _resetCursor:	
  4795                           
  4796                           ;displayOptions.c: 55:     puts("|-");
  4797                           
  4798                           ;incstack = 0
  4799                           ; Regs used in _resetCursor: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4800  0CC8  302D               	movlw	low (STR_3| (0+32768))
  4801  0CC9  0021               	movlb	1	; select bank1
  4802  0CCA  00B1               	movwf	puts@s^(0+128)
  4803  0CCB  3090               	movlw	high (STR_3| (0+32768))
  4804  0CCC  00B2               	movwf	(puts@s^(0+128)+1)
  4805  0CCD  318D  259A         	fcall	_puts
  4806  0CCF  0008               	return
  4807  0CD0                     __end_of_resetCursor:	
  4808                           
  4809                           	psect	text3
  4810  0D9A                     __ptext3:	
  4811 ;; *************** function _puts *****************
  4812 ;; Defined at:
  4813 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\puts.c"
  4814 ;; Parameters:    Size  Location     Type
  4815 ;;  s               2   17[BANK1 ] PTR const unsigned char 
  4816 ;;		 -> STR_3(3), 
  4817 ;; Auto vars:     Size  Location     Type
  4818 ;;  r               2    0        int 
  4819 ;; Return value:  Size  Location     Type
  4820 ;;                  2   17[BANK1 ] int 
  4821 ;; Registers used:
  4822 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4823 ;; Tracked objects:
  4824 ;;		On entry : 0/0
  4825 ;;		On exit  : 0/0
  4826 ;;		Unchanged: 0/0
  4827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4828 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4829 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4831 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  4832 ;;Total ram usage:        5 bytes
  4833 ;; Hardware stack levels used:    1
  4834 ;; Hardware stack levels required when called:   10
  4835 ;; This function calls:
  4836 ;;		_fputc
  4837 ;;		_fputs
  4838 ;; This function is called by:
  4839 ;;		_resetCursor
  4840 ;;		_writeString
  4841 ;; This function uses a non-reentrant model
  4842 ;;
  4843                           
  4844                           
  4845                           ;psect for function _puts
  4846  0D9A                     _puts:	
  4847                           
  4848                           ;incstack = 0
  4849                           ; Regs used in _puts: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4850  0D9A  0021               	movlb	1	; select bank1
  4851  0D9B  01B5               	clrf	_puts$1096^(0+128)
  4852  0D9C  0AB5               	incf	_puts$1096^(0+128),f
  4853  0D9D  0832               	movf	(puts@s+1)^(0+128),w
  4854  0D9E  00A9               	movwf	(fputs@s+1)^(0+128)
  4855  0D9F  0831               	movf	puts@s^(0+128),w
  4856  0DA0  00A8               	movwf	fputs@s^(0+128)
  4857  0DA1  01AA               	clrf	fputs@fp^(0+128)
  4858  0DA2  318D  25D4  318D   	fcall	_fputs
  4859  0DA5  0021               	movlb	1	; select bank1
  4860  0DA6  1BA9               	btfsc	(?_fputs+1)^(0+128),7
  4861  0DA7  0008               	return
  4862  0DA8  300A               	movlw	10
  4863  0DA9  00A0               	movwf	fputc@c^(0+128)
  4864  0DAA  3000               	movlw	0
  4865  0DAB  00A1               	movwf	(fputc@c^(0+128)+1)
  4866  0DAC  01A2               	clrf	fputc@fp^(0+128)
  4867  0DAD  318E  2666  318D   	fcall	_fputc
  4868  0DB0  0021               	movlb	1	; select bank1
  4869  0DB1  1BA1               	btfsc	(?_fputc+1)^(0+128),7
  4870  0DB2  0008               	return
  4871  0DB3  01B5               	clrf	_puts$1096^(0+128)
  4872  0DB4  0008               	return
  4873  0DB5                     __end_of_puts:	
  4874                           
  4875                           	psect	text4
  4876  0D3A                     __ptext4:	
  4877 ;; *************** function _printf *****************
  4878 ;; Defined at:
  4879 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  4880 ;; Parameters:    Size  Location     Type
  4881 ;;  fmt             2   15[BANK2 ] PTR const unsigned char 
  4882 ;;		 -> STR_2(6), STR_1(7), hrDisp(13), distanceDisp(11), 
  4883 ;;		 -> speedDisp(8), 
  4884 ;; Auto vars:     Size  Location     Type
  4885 ;;  ret             2    0        int 
  4886 ;;  ap              1   24[BANK2 ] PTR void [1]
  4887 ;;		 -> ?_printf(2), 
  4888 ;; Return value:  Size  Location     Type
  4889 ;;                  2   15[BANK2 ] int 
  4890 ;; Registers used:
  4891 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4892 ;; Tracked objects:
  4893 ;;		On entry : 0/0
  4894 ;;		On exit  : 0/0
  4895 ;;		Unchanged: 0/0
  4896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4897 ;;      Params:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0
  4898 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  4899 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  4900 ;;      Totals:         0       0       0      10       0       0       0       0       0       0       0       0       
      +0       0
  4901 ;;Total ram usage:       10 bytes
  4902 ;; Hardware stack levels used:    1
  4903 ;; Hardware stack levels required when called:   14
  4904 ;; This function calls:
  4905 ;;		_vfprintf
  4906 ;; This function is called by:
  4907 ;;		_main
  4908 ;;		_writePrintf
  4909 ;; This function uses a non-reentrant model
  4910 ;;
  4911                           
  4912                           
  4913                           ;psect for function _printf
  4914  0D3A                     _printf:	
  4915                           
  4916                           ;incstack = 0
  4917                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4918  0D3A  3059               	movlw	(low ((?_printf| (0+256)+2)))& (0+255)
  4919  0D3B  0022               	movlb	2	; select bank2
  4920  0D3C  00DD               	movwf	??_printf^(0+256)
  4921  0D3D  085D               	movf	??_printf^(0+256),w
  4922  0D3E  00E0               	movwf	printf@ap^(0+256)
  4923  0D3F  0858               	movf	(printf@fmt+1)^(0+256),w
  4924  0D40  0021               	movlb	1	; select bank1
  4925  0D41  00E0               	movwf	(vfprintf@fmt+1)^(0+128)
  4926  0D42  0022               	movlb	2	; select bank2
  4927  0D43  0857               	movf	printf@fmt^(0+256),w
  4928  0D44  0021               	movlb	1	; select bank1
  4929  0D45  00DF               	movwf	vfprintf@fmt^(0+128)
  4930  0D46  3060               	movlw	(low (printf@ap| (0+256)))& (0+255)
  4931  0D47  0022               	movlb	2	; select bank2
  4932  0D48  00DD               	movwf	??_printf^(0+256)
  4933  0D49  085D               	movf	??_printf^(0+256),w
  4934  0D4A  0021               	movlb	1	; select bank1
  4935  0D4B  00E1               	movwf	vfprintf@ap^(0+128)
  4936  0D4C  3000               	movlw	0
  4937  0D4D  318D  25FD         	fcall	_vfprintf
  4938  0D4F  0008               	return
  4939  0D50                     __end_of_printf:	
  4940                           
  4941                           	psect	text5
  4942  0DFD                     __ptext5:	
  4943 ;; *************** function _vfprintf *****************
  4944 ;; Defined at:
  4945 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4946 ;; Parameters:    Size  Location     Type
  4947 ;;  fp              1    wreg     PTR struct _IO_FILE
  4948 ;;		 -> NULL(0), 
  4949 ;;  fmt             2   63[BANK1 ] PTR const unsigned char 
  4950 ;;		 -> STR_2(6), STR_1(7), hrDisp(13), distanceDisp(11), 
  4951 ;;		 -> speedDisp(8), 
  4952 ;;  ap              1   65[BANK1 ] PTR PTR void 
  4953 ;;		 -> printf@ap(1), 
  4954 ;; Auto vars:     Size  Location     Type
  4955 ;;  fp              1   12[BANK2 ] PTR struct _IO_FILE
  4956 ;;		 -> NULL(0), 
  4957 ;;  cfmt            2   13[BANK2 ] PTR unsigned char 
  4958 ;;		 -> STR_2(6), STR_1(7), hrDisp(13), distanceDisp(11), 
  4959 ;;		 -> speedDisp(8), 
  4960 ;; Return value:  Size  Location     Type
  4961 ;;                  2   63[BANK1 ] int 
  4962 ;; Registers used:
  4963 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4964 ;; Tracked objects:
  4965 ;;		On entry : 0/0
  4966 ;;		On exit  : 0/0
  4967 ;;		Unchanged: 0/0
  4968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4969 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4970 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  4971 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  4972 ;;      Totals:         0       0       3       5       0       0       0       0       0       0       0       0       
      +0       0
  4973 ;;Total ram usage:        8 bytes
  4974 ;; Hardware stack levels used:    1
  4975 ;; Hardware stack levels required when called:   13
  4976 ;; This function calls:
  4977 ;;		_vfpfcnvrt
  4978 ;; This function is called by:
  4979 ;;		_printf
  4980 ;; This function uses a non-reentrant model
  4981 ;;
  4982                           
  4983                           
  4984                           ;psect for function _vfprintf
  4985  0DFD                     _vfprintf:	
  4986                           
  4987                           ;incstack = 0
  4988                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4989                           ;vfprintf@fp stored from wreg
  4990  0DFD  0022               	movlb	2	; select bank2
  4991  0DFE  00D4               	movwf	vfprintf@fp^(0+256)
  4992                           
  4993                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  4994  0DFF  0021               	movlb	1	; select bank1
  4995  0E00  0860               	movf	(vfprintf@fmt+1)^(0+128),w
  4996  0E01  0022               	movlb	2	; select bank2
  4997  0E02  00D6               	movwf	(vfprintf@cfmt+1)^(0+256)
  4998  0E03  0021               	movlb	1	; select bank1
  4999  0E04  085F               	movf	vfprintf@fmt^(0+128),w
  5000  0E05  0022               	movlb	2	; select bank2
  5001  0E06  00D5               	movwf	vfprintf@cfmt^(0+256)
  5002                           
  5003                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  5004  0E07  0021               	movlb	1	; select bank1
  5005  0E08  01E6               	clrf	_nout^(0+128)
  5006  0E09  01E7               	clrf	(_nout+1)^(0+128)
  5007  0E0A                     l2959:	
  5008                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  5009                           
  5010                           
  5011                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  5012  0E0A  0022               	movlb	2	; select bank2
  5013  0E0B  0855               	movf	vfprintf@cfmt^(0+256),w
  5014  0E0C  0084               	movwf	4
  5015  0E0D  0856               	movf	(vfprintf@cfmt+1)^(0+256),w
  5016  0E0E  0085               	movwf	5
  5017  0E0F  0012               	moviw fsr0++
  5018  0E10  1903               	btfsc	3,2
  5019  0E11  2E28               	goto	l2961
  5020                           
  5021                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  5022  0E12  3055               	movlw	(low (vfprintf@cfmt| (0+256)))& (0+255)
  5023  0E13  00D2               	movwf	??_vfprintf^(0+256)
  5024  0E14  0852               	movf	??_vfprintf^(0+256),w
  5025  0E15  0021               	movlb	1	; select bank1
  5026  0E16  00D8               	movwf	vfpfcnvrt@fmt^(0+128)
  5027  0E17  0861               	movf	vfprintf@ap^(0+128),w
  5028  0E18  0022               	movlb	2	; select bank2
  5029  0E19  00D3               	movwf	(??_vfprintf+1)^(0+256)
  5030  0E1A  0853               	movf	(??_vfprintf+1)^(0+256),w
  5031  0E1B  0021               	movlb	1	; select bank1
  5032  0E1C  00D9               	movwf	vfpfcnvrt@ap^(0+128)
  5033  0E1D  0022               	movlb	2	; select bank2
  5034  0E1E  0854               	movf	vfprintf@fp^(0+256),w
  5035  0E1F  3183  23A7  318D   	fcall	_vfpfcnvrt
  5036  0E22  0021               	movlb	1	; select bank1
  5037  0E23  0858               	movf	?_vfpfcnvrt^(0+128),w
  5038  0E24  07E6               	addwf	_nout^(0+128),f
  5039  0E25  0859               	movf	(?_vfpfcnvrt+1)^(0+128),w
  5040  0E26  3DE7               	addwfc	(_nout+1)^(0+128),f
  5041  0E27  2E0A               	goto	l2959
  5042  0E28                     l2961:	
  5043                           
  5044                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  5045  0E28  0021               	movlb	1	; select bank1
  5046  0E29  0867               	movf	(_nout+1)^(0+128),w
  5047  0E2A  00E0               	movwf	(?_vfprintf+1)^(0+128)
  5048  0E2B  0866               	movf	_nout^(0+128),w
  5049  0E2C  00DF               	movwf	?_vfprintf^(0+128)
  5050  0E2D  0008               	return
  5051  0E2E                     __end_of_vfprintf:	
  5052                           
  5053                           	psect	text6
  5054  03A7                     __ptext6:	
  5055 ;; *************** function _vfpfcnvrt *****************
  5056 ;; Defined at:
  5057 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5058 ;; Parameters:    Size  Location     Type
  5059 ;;  fp              1    wreg     PTR struct _IO_FILE
  5060 ;;		 -> NULL(0), 
  5061 ;;  fmt             1   56[BANK1 ] PTR PTR unsigned char 
  5062 ;;		 -> vfprintf@cfmt(2), 
  5063 ;;  ap              1   57[BANK1 ] PTR PTR void 
  5064 ;;		 -> printf@ap(1), 
  5065 ;; Auto vars:     Size  Location     Type
  5066 ;;  fp              1    9[BANK2 ] PTR struct _IO_FILE
  5067 ;;		 -> NULL(0), 
  5068 ;;  ll              8    0[BANK2 ] long long 
  5069 ;;  llu             8    0        unsigned long long 
  5070 ;;  f               4    0        unsigned long long 
  5071 ;;  ct              3    0        unsigned char [3]
  5072 ;;  i               2    0        int 
  5073 ;;  done            2    0        int 
  5074 ;;  cp              2    0        PTR unsigned char 
  5075 ;;  vp              1    8[BANK2 ] PTR void 
  5076 ;;		 -> ?_printf(2), 
  5077 ;;  c               1    0        unsigned char 
  5078 ;; Return value:  Size  Location     Type
  5079 ;;                  2   56[BANK1 ] int 
  5080 ;; Registers used:
  5081 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5082 ;; Tracked objects:
  5083 ;;		On entry : 0/0
  5084 ;;		On exit  : 0/0
  5085 ;;		Unchanged: 0/0
  5086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5087 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5088 ;;      Locals:         0       0       0      10       0       0       0       0       0       0       0       0       
      +0       0
  5089 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  5090 ;;      Totals:         0       0       7      10       0       0       0       0       0       0       0       0       
      +0       0
  5091 ;;Total ram usage:       17 bytes
  5092 ;; Hardware stack levels used:    1
  5093 ;; Hardware stack levels required when called:   12
  5094 ;; This function calls:
  5095 ;;		_dtoa
  5096 ;;		_fputc
  5097 ;; This function is called by:
  5098 ;;		_vfprintf
  5099 ;; This function uses a non-reentrant model
  5100 ;;
  5101                           
  5102                           
  5103                           ;psect for function _vfpfcnvrt
  5104  03A7                     _vfpfcnvrt:	
  5105                           
  5106                           ;incstack = 0
  5107                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5108                           ;vfpfcnvrt@fp stored from wreg
  5109  03A7  0022               	movlb	2	; select bank2
  5110  03A8  00D1               	movwf	vfpfcnvrt@fp^(0+256)
  5111                           
  5112                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  5113  03A9  0021               	movlb	1	; select bank1
  5114  03AA  0858               	movf	vfpfcnvrt@fmt^(0+128),w
  5115  03AB  0086               	movwf	6
  5116  03AC  3001               	movlw	1	; select bank2/3
  5117  03AD  0087               	movwf	7
  5118  03AE  3F40               	moviw [0]fsr1
  5119  03AF  00DA               	movwf	??_vfpfcnvrt^(0+128)
  5120  03B0  3F41               	moviw [1]fsr1
  5121  03B1  00DB               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5122  03B2  085A               	movf	??_vfpfcnvrt^(0+128),w
  5123  03B3  0084               	movwf	4
  5124  03B4  085B               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5125  03B5  0085               	movwf	5
  5126  03B6  0012               	moviw fsr0++
  5127  03B7  3A25               	xorlw	37
  5128  03B8  1D03               	btfss	3,2
  5129  03B9  2CA5               	goto	l2921
  5130                           
  5131                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  5132  03BA  0858               	movf	vfpfcnvrt@fmt^(0+128),w
  5133  03BB  0086               	movwf	6
  5134  03BC  3001               	movlw	1	; select bank2/3
  5135  03BD  0087               	movwf	7
  5136  03BE  3001               	movlw	1
  5137  03BF  0781               	addwf	1,f
  5138  03C0  3141               	addfsr 1,1
  5139  03C1  1803               	skipnc
  5140  03C2  0A81               	incf	1,f
  5141                           
  5142                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  5143  03C3  01E8               	clrf	_width^(0+128)
  5144  03C4  01E9               	clrf	(_width+1)^(0+128)
  5145  03C5  0020               	movlb	0	; select bank0
  5146  03C6  01C8               	clrf	_flags
  5147  03C7  01C9               	clrf	_flags+1
  5148                           
  5149                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  5150  03C8  30FF               	movlw	255
  5151  03C9  0021               	movlb	1	; select bank1
  5152  03CA  00EA               	movwf	_prec^(0+128)
  5153  03CB  30FF               	movlw	255
  5154  03CC  00EB               	movwf	(_prec^(0+128)+1)
  5155                           
  5156                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  5157  03CD  0858               	movf	vfpfcnvrt@fmt^(0+128),w
  5158  03CE  0086               	movwf	6
  5159  03CF  3001               	movlw	1	; select bank2/3
  5160  03D0  0087               	movwf	7
  5161  03D1  3F40               	moviw [0]fsr1
  5162  03D2  00DA               	movwf	??_vfpfcnvrt^(0+128)
  5163  03D3  3F41               	moviw [1]fsr1
  5164  03D4  00DB               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5165  03D5  085A               	movf	??_vfpfcnvrt^(0+128),w
  5166  03D6  0084               	movwf	4
  5167  03D7  085B               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5168  03D8  0085               	movwf	5
  5169  03D9  0012               	moviw fsr0++
  5170  03DA  3A64               	xorlw	100
  5171  03DB  1903               	btfsc	3,2
  5172  03DC  2BED               	goto	l2885
  5173  03DD  0858               	movf	vfpfcnvrt@fmt^(0+128),w
  5174  03DE  0086               	movwf	6
  5175  03DF  3001               	movlw	1	; select bank2/3
  5176  03E0  0087               	movwf	7
  5177  03E1  3F40               	moviw [0]fsr1
  5178  03E2  00DA               	movwf	??_vfpfcnvrt^(0+128)
  5179  03E3  3F41               	moviw [1]fsr1
  5180  03E4  00DB               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5181  03E5  085A               	movf	??_vfpfcnvrt^(0+128),w
  5182  03E6  0084               	movwf	4
  5183  03E7  085B               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5184  03E8  0085               	movwf	5
  5185  03E9  0012               	moviw fsr0++
  5186  03EA  3A69               	xorlw	105
  5187  03EB  1D03               	btfss	3,2
  5188  03EC  2C3D               	goto	l2893
  5189  03ED                     l2885:	
  5190                           
  5191                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  5192  03ED  0858               	movf	vfpfcnvrt@fmt^(0+128),w
  5193  03EE  0086               	movwf	6
  5194  03EF  3001               	movlw	1	; select bank2/3
  5195  03F0  0087               	movwf	7
  5196  03F1  3001               	movlw	1
  5197  03F2  0781               	addwf	1,f
  5198  03F3  3141               	addfsr 1,1
  5199  03F4  1803               	skipnc
  5200  03F5  0A81               	incf	1,f
  5201                           
  5202                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  5203  03F6  0859               	movf	vfpfcnvrt@ap^(0+128),w
  5204  03F7  0086               	movwf	6
  5205  03F8  3001               	movlw	1	; select bank2/3
  5206  03F9  0087               	movwf	7
  5207  03FA  0801               	movf	1,w
  5208  03FB  0084               	movwf	4
  5209  03FC  3001               	movlw	1	; select bank2/3
  5210  03FD  0085               	movwf	5
  5211  03FE  3002               	movlw	2
  5212  03FF  0781               	addwf	1,f
  5213  0400  3F00               	moviw [0]fsr0
  5214  0401  00DA               	movwf	??_vfpfcnvrt^(0+128)
  5215  0402  3F01               	moviw [1]fsr0
  5216  0403  00DB               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5217  0404  085A               	movf	??_vfpfcnvrt^(0+128),w
  5218  0405  0022               	movlb	2	; select bank2
  5219  0406  00C8               	movwf	vfpfcnvrt@ll^(0+256)
  5220  0407  0021               	movlb	1	; select bank1
  5221  0408  085B               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5222  0409  0022               	movlb	2	; select bank2
  5223  040A  00C9               	movwf	(vfpfcnvrt@ll+1)^(0+256)
  5224  040B  0D89               	rlf	9,f
  5225  040C  3B89               	subwfb	9,f
  5226  040D  0989               	comf	9,f
  5227  040E  00CA               	movwf	(vfpfcnvrt@ll+2)^(0+256)
  5228  040F  00CB               	movwf	(vfpfcnvrt@ll+3)^(0+256)
  5229  0410  00CC               	movwf	(vfpfcnvrt@ll+4)^(0+256)
  5230  0411  00CD               	movwf	(vfpfcnvrt@ll+5)^(0+256)
  5231  0412  00CE               	movwf	(vfpfcnvrt@ll+6)^(0+256)
  5232  0413  00CF               	movwf	(vfpfcnvrt@ll+7)^(0+256)
  5233                           
  5234                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  5235  0414  0848               	movf	vfpfcnvrt@ll^(0+256),w
  5236  0415  0021               	movlb	1	; select bank1
  5237  0416  00BA               	movwf	dtoa@d^(0+128)
  5238  0417  0022               	movlb	2	; select bank2
  5239  0418  0849               	movf	(vfpfcnvrt@ll+1)^(0+256),w
  5240  0419  0021               	movlb	1	; select bank1
  5241  041A  00BB               	movwf	(dtoa@d+1)^(0+128)
  5242  041B  0022               	movlb	2	; select bank2
  5243  041C  084A               	movf	(vfpfcnvrt@ll+2)^(0+256),w
  5244  041D  0021               	movlb	1	; select bank1
  5245  041E  00BC               	movwf	(dtoa@d+2)^(0+128)
  5246  041F  0022               	movlb	2	; select bank2
  5247  0420  084B               	movf	(vfpfcnvrt@ll+3)^(0+256),w
  5248  0421  0021               	movlb	1	; select bank1
  5249  0422  00BD               	movwf	(dtoa@d+3)^(0+128)
  5250  0423  0022               	movlb	2	; select bank2
  5251  0424  084C               	movf	(vfpfcnvrt@ll+4)^(0+256),w
  5252  0425  0021               	movlb	1	; select bank1
  5253  0426  00BE               	movwf	(dtoa@d+4)^(0+128)
  5254  0427  0022               	movlb	2	; select bank2
  5255  0428  084D               	movf	(vfpfcnvrt@ll+5)^(0+256),w
  5256  0429  0021               	movlb	1	; select bank1
  5257  042A  00BF               	movwf	(dtoa@d+5)^(0+128)
  5258  042B  0022               	movlb	2	; select bank2
  5259  042C  084E               	movf	(vfpfcnvrt@ll+6)^(0+256),w
  5260  042D  0021               	movlb	1	; select bank1
  5261  042E  00C0               	movwf	(dtoa@d+6)^(0+128)
  5262  042F  0022               	movlb	2	; select bank2
  5263  0430  084F               	movf	(vfpfcnvrt@ll+7)^(0+256),w
  5264  0431  0021               	movlb	1	; select bank1
  5265  0432  00C1               	movwf	(dtoa@d+7)^(0+128)
  5266  0433  0022               	movlb	2	; select bank2
  5267  0434  0851               	movf	vfpfcnvrt@fp^(0+256),w
  5268  0435  3182  225D         	fcall	_dtoa
  5269  0437  0021               	movlb	1	; select bank1
  5270  0438  083B               	movf	(?_dtoa+1)^(0+128),w
  5271  0439  00D9               	movwf	(?_vfpfcnvrt+1)^(0+128)
  5272  043A  083A               	movf	?_dtoa^(0+128),w
  5273  043B  00D8               	movwf	?_vfpfcnvrt^(0+128)
  5274  043C  0008               	return
  5275  043D                     l2893:	
  5276                           
  5277                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1077:      
      +                             if (*fmt[0] == 'n') {
  5278  043D  0858               	movf	vfpfcnvrt@fmt^(0+128),w
  5279  043E  0086               	movwf	6
  5280  043F  3001               	movlw	1	; select bank2/3
  5281  0440  0087               	movwf	7
  5282  0441  3F40               	moviw [0]fsr1
  5283  0442  00DA               	movwf	??_vfpfcnvrt^(0+128)
  5284  0443  3F41               	moviw [1]fsr1
  5285  0444  00DB               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5286  0445  085A               	movf	??_vfpfcnvrt^(0+128),w
  5287  0446  0084               	movwf	4
  5288  0447  085B               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5289  0448  0085               	movwf	5
  5290  0449  0012               	moviw fsr0++
  5291  044A  3A6E               	xorlw	110
  5292  044B  1D03               	btfss	3,2
  5293  044C  2C70               	goto	l2905
  5294                           
  5295                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1078:      
      +                                 ++*fmt;
  5296  044D  0858               	movf	vfpfcnvrt@fmt^(0+128),w
  5297  044E  0086               	movwf	6
  5298  044F  3001               	movlw	1	; select bank2/3
  5299  0450  0087               	movwf	7
  5300  0451  3001               	movlw	1
  5301  0452  0781               	addwf	1,f
  5302  0453  3141               	addfsr 1,1
  5303  0454  1803               	skipnc
  5304  0455  0A81               	incf	1,f
  5305                           
  5306                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1079:      
      +                                 vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
  5307  0456  0859               	movf	vfpfcnvrt@ap^(0+128),w
  5308  0457  0086               	movwf	6
  5309  0458  3001               	movlw	1	; select bank2/3
  5310  0459  0087               	movwf	7
  5311  045A  3F40               	moviw [0]fsr1
  5312  045B  0084               	movwf	4
  5313  045C  3001               	movlw	1	; select bank2/3
  5314  045D  0085               	movwf	5
  5315  045E  0A81               	incf	1,f
  5316  045F  0800               	movf	0,w
  5317  0460  00DA               	movwf	??_vfpfcnvrt^(0+128)
  5318  0461  085A               	movf	??_vfpfcnvrt^(0+128),w
  5319  0462  0022               	movlb	2	; select bank2
  5320  0463  00D0               	movwf	vfpfcnvrt@vp^(0+256)
  5321                           
  5322                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1080:      
      +                                 *(int *)vp = nout;
  5323  0464  0850               	movf	vfpfcnvrt@vp^(0+256),w
  5324  0465  0086               	movwf	6
  5325  0466  3001               	movlw	1	; select bank2/3
  5326  0467  0087               	movwf	7
  5327  0468  0021               	movlb	1	; select bank1
  5328  0469  0866               	movf	_nout^(0+128),w
  5329  046A  3FC0               	movwi [0]fsr1
  5330  046B  0867               	movf	(_nout+1)^(0+128),w
  5331  046C  3FC1               	movwi [1]fsr1
  5332  046D                     l2901:	
  5333                           
  5334                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1081:      
      +                                 return 0;
  5335  046D  01D8               	clrf	?_vfpfcnvrt^(0+128)
  5336  046E  01D9               	clrf	(?_vfpfcnvrt+1)^(0+128)
  5337  046F  0008               	return
  5338  0470                     l2905:	
  5339                           
  5340                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  5341  0470  0858               	movf	vfpfcnvrt@fmt^(0+128),w
  5342  0471  0086               	movwf	6
  5343  0472  3001               	movlw	1	; select bank2/3
  5344  0473  0087               	movwf	7
  5345  0474  3F40               	moviw [0]fsr1
  5346  0475  00DA               	movwf	??_vfpfcnvrt^(0+128)
  5347  0476  3F41               	moviw [1]fsr1
  5348  0477  00DB               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5349  0478  085A               	movf	??_vfpfcnvrt^(0+128),w
  5350  0479  0084               	movwf	4
  5351  047A  085B               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5352  047B  0085               	movwf	5
  5353  047C  0012               	moviw fsr0++
  5354  047D  3A25               	xorlw	37
  5355  047E  1D03               	btfss	3,2
  5356  047F  2C9B               	goto	l2915
  5357                           
  5358                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  5359  0480  0858               	movf	vfpfcnvrt@fmt^(0+128),w
  5360  0481  0086               	movwf	6
  5361  0482  3001               	movlw	1	; select bank2/3
  5362  0483  0087               	movwf	7
  5363  0484  3001               	movlw	1
  5364  0485  0781               	addwf	1,f
  5365  0486  3141               	addfsr 1,1
  5366  0487  1803               	skipnc
  5367  0488  0A81               	incf	1,f
  5368                           
  5369                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  5370  0489  3025               	movlw	37
  5371  048A  00A0               	movwf	fputc@c^(0+128)
  5372  048B  3000               	movlw	0
  5373  048C  00A1               	movwf	(fputc@c^(0+128)+1)
  5374  048D  0022               	movlb	2	; select bank2
  5375  048E  0851               	movf	vfpfcnvrt@fp^(0+256),w
  5376  048F  0021               	movlb	1	; select bank1
  5377  0490  00DA               	movwf	??_vfpfcnvrt^(0+128)
  5378  0491  085A               	movf	??_vfpfcnvrt^(0+128),w
  5379  0492  00A2               	movwf	fputc@fp^(0+128)
  5380  0493  318E  2666         	fcall	_fputc
  5381  0495                     l2911:	
  5382                           
  5383                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  5384  0495  3001               	movlw	1
  5385  0496  0021               	movlb	1	; select bank1
  5386  0497  00D8               	movwf	?_vfpfcnvrt^(0+128)
  5387  0498  3000               	movlw	0
  5388  0499  00D9               	movwf	(?_vfpfcnvrt^(0+128)+1)
  5389  049A  0008               	return
  5390  049B                     l2915:	
  5391                           
  5392                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  5393  049B  0858               	movf	vfpfcnvrt@fmt^(0+128),w
  5394  049C  0086               	movwf	6
  5395  049D  3001               	movlw	1	; select bank2/3
  5396  049E  0087               	movwf	7
  5397  049F  3001               	movlw	1
  5398  04A0  0781               	addwf	1,f
  5399  04A1  3141               	addfsr 1,1
  5400  04A2  1803               	skipnc
  5401  04A3  0A81               	incf	1,f
  5402  04A4  2C6D               	goto	l2901
  5403  04A5                     l2921:	
  5404                           
  5405                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  5406  04A5  0858               	movf	vfpfcnvrt@fmt^(0+128),w
  5407  04A6  0086               	movwf	6
  5408  04A7  3001               	movlw	1	; select bank2/3
  5409  04A8  0087               	movwf	7
  5410  04A9  3F40               	moviw [0]fsr1
  5411  04AA  00DA               	movwf	??_vfpfcnvrt^(0+128)
  5412  04AB  3F41               	moviw [1]fsr1
  5413  04AC  00DB               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5414  04AD  085A               	movf	??_vfpfcnvrt^(0+128),w
  5415  04AE  0084               	movwf	4
  5416  04AF  085B               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5417  04B0  0085               	movwf	5
  5418  04B1  0800               	movf	0,w	;code access
  5419  04B2  00DC               	movwf	(??_vfpfcnvrt+2)^(0+128)
  5420  04B3  01DD               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  5421  04B4  085C               	movf	(??_vfpfcnvrt+2)^(0+128),w
  5422  04B5  00A0               	movwf	fputc@c^(0+128)
  5423  04B6  085D               	movf	(??_vfpfcnvrt+3)^(0+128),w
  5424  04B7  00A1               	movwf	(fputc@c+1)^(0+128)
  5425  04B8  0022               	movlb	2	; select bank2
  5426  04B9  0851               	movf	vfpfcnvrt@fp^(0+256),w
  5427  04BA  0021               	movlb	1	; select bank1
  5428  04BB  00DE               	movwf	(??_vfpfcnvrt+4)^(0+128)
  5429  04BC  085E               	movf	(??_vfpfcnvrt+4)^(0+128),w
  5430  04BD  00A2               	movwf	fputc@fp^(0+128)
  5431  04BE  318E  2666  3183   	fcall	_fputc
  5432                           
  5433                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  5434  04C1  0021               	movlb	1	; select bank1
  5435  04C2  0858               	movf	vfpfcnvrt@fmt^(0+128),w
  5436  04C3  0086               	movwf	6
  5437  04C4  3001               	movlw	1	; select bank2/3
  5438  04C5  0087               	movwf	7
  5439  04C6  3001               	movlw	1
  5440  04C7  0781               	addwf	1,f
  5441  04C8  3141               	addfsr 1,1
  5442  04C9  1803               	skipnc
  5443  04CA  0A81               	incf	1,f
  5444  04CB  2C95               	goto	l2911
  5445  04CC                     __end_of_vfpfcnvrt:	
  5446                           
  5447                           	psect	text7
  5448  025D                     __ptext7:	
  5449 ;; *************** function _dtoa *****************
  5450 ;; Defined at:
  5451 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5452 ;; Parameters:    Size  Location     Type
  5453 ;;  fp              1    wreg     PTR struct _IO_FILE
  5454 ;;		 -> NULL(0), 
  5455 ;;  d               8   26[BANK1 ] long long 
  5456 ;; Auto vars:     Size  Location     Type
  5457 ;;  fp              1   39[BANK1 ] PTR struct _IO_FILE
  5458 ;;		 -> NULL(0), 
  5459 ;;  n               8   46[BANK1 ] long long 
  5460 ;;  i               2   54[BANK1 ] int 
  5461 ;;  s               2   44[BANK1 ] int 
  5462 ;;  w               2   42[BANK1 ] int 
  5463 ;;  p               2   40[BANK1 ] int 
  5464 ;; Return value:  Size  Location     Type
  5465 ;;                  2   26[BANK1 ] int 
  5466 ;; Registers used:
  5467 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5468 ;; Tracked objects:
  5469 ;;		On entry : 0/0
  5470 ;;		On exit  : 0/0
  5471 ;;		Unchanged: 0/0
  5472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5473 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  5474 ;;      Locals:         0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0
  5475 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5476 ;;      Totals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0
  5477 ;;Total ram usage:       30 bytes
  5478 ;; Hardware stack levels used:    1
  5479 ;; Hardware stack levels required when called:   11
  5480 ;; This function calls:
  5481 ;;		___aodiv
  5482 ;;		___aomod
  5483 ;;		_abs
  5484 ;;		_pad
  5485 ;; This function is called by:
  5486 ;;		_vfpfcnvrt
  5487 ;; This function uses a non-reentrant model
  5488 ;;
  5489                           
  5490                           
  5491                           ;psect for function _dtoa
  5492  025D                     _dtoa:	
  5493                           
  5494                           ;incstack = 0
  5495                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5496                           ;dtoa@fp stored from wreg
  5497  025D  0021               	movlb	1	; select bank1
  5498  025E  00C7               	movwf	dtoa@fp^(0+128)
  5499                           
  5500                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  5501  025F  083A               	movf	dtoa@d^(0+128),w
  5502  0260  00CE               	movwf	dtoa@n^(0+128)
  5503  0261  083B               	movf	(dtoa@d+1)^(0+128),w
  5504  0262  00CF               	movwf	(dtoa@n+1)^(0+128)
  5505  0263  083C               	movf	(dtoa@d+2)^(0+128),w
  5506  0264  00D0               	movwf	(dtoa@n+2)^(0+128)
  5507  0265  083D               	movf	(dtoa@d+3)^(0+128),w
  5508  0266  00D1               	movwf	(dtoa@n+3)^(0+128)
  5509  0267  083E               	movf	(dtoa@d+4)^(0+128),w
  5510  0268  00D2               	movwf	(dtoa@n+4)^(0+128)
  5511  0269  083F               	movf	(dtoa@d+5)^(0+128),w
  5512  026A  00D3               	movwf	(dtoa@n+5)^(0+128)
  5513  026B  0840               	movf	(dtoa@d+6)^(0+128),w
  5514  026C  00D4               	movwf	(dtoa@n+6)^(0+128)
  5515  026D  0841               	movf	(dtoa@d+7)^(0+128),w
  5516  026E  00D5               	movwf	(dtoa@n+7)^(0+128)
  5517                           
  5518                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  5519  026F  30CE               	movlw	low dtoa@n
  5520  0270  0086               	movwf	6
  5521  0271  3000               	movlw	high dtoa@n
  5522  0272  0087               	movwf	7
  5523  0273  3F47               	moviw [7]fsr1
  5524  0274  00C2               	movwf	??_dtoa^(0+128)
  5525  0275  1FC2               	btfss	??_dtoa^(0+128),7
  5526  0276  2A79               	goto	u2850
  5527  0277  3001               	movlw	1
  5528  0278  2A7A               	goto	u2860
  5529  0279                     u2850:	
  5530  0279  3000               	movlw	0
  5531  027A                     u2860:	
  5532  027A  0021               	movlb	1	; select bank1
  5533  027B  00C3               	movwf	(??_dtoa+1)^(0+128)
  5534  027C  01C4               	clrf	((??_dtoa+1)^(0+128)+1)
  5535  027D  0843               	movf	(??_dtoa+1)^(0+128),w
  5536  027E  00CC               	movwf	dtoa@s^(0+128)
  5537  027F  0844               	movf	(??_dtoa+2)^(0+128),w
  5538  0280  00CD               	movwf	(dtoa@s+1)^(0+128)
  5539                           
  5540                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  5541  0281  084C               	movf	dtoa@s^(0+128),w
  5542  0282  044D               	iorwf	(dtoa@s+1)^(0+128),w
  5543  0283  1903               	btfsc	3,2
  5544  0284  2AA3               	goto	l488
  5545                           
  5546                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  5547  0285  09CE               	comf	dtoa@n^(0+128),f
  5548  0286  09CF               	comf	(dtoa@n+1)^(0+128),f
  5549  0287  09D0               	comf	(dtoa@n+2)^(0+128),f
  5550  0288  09D1               	comf	(dtoa@n+3)^(0+128),f
  5551  0289  09D2               	comf	(dtoa@n+4)^(0+128),f
  5552  028A  09D3               	comf	(dtoa@n+5)^(0+128),f
  5553  028B  09D4               	comf	(dtoa@n+6)^(0+128),f
  5554  028C  09D5               	comf	(dtoa@n+7)^(0+128),f
  5555  028D  0ACE               	incf	dtoa@n^(0+128),f
  5556  028E  1D03               	skipz
  5557  028F  2AA3               	goto	l488
  5558  0290  0ACF               	incf	(dtoa@n+1)^(0+128),f
  5559  0291  1D03               	skipz
  5560  0292  2AA3               	goto	l488
  5561  0293  0AD0               	incf	(dtoa@n+2)^(0+128),f
  5562  0294  1D03               	skipz
  5563  0295  2AA3               	goto	l488
  5564  0296  0AD1               	incf	(dtoa@n+3)^(0+128),f
  5565  0297  1D03               	skipz
  5566  0298  2AA3               	goto	l488
  5567  0299  0AD2               	incf	(dtoa@n+4)^(0+128),f
  5568  029A  1D03               	skipz
  5569  029B  2AA3               	goto	l488
  5570  029C  0AD3               	incf	(dtoa@n+5)^(0+128),f
  5571  029D  1D03               	skipz
  5572  029E  2AA3               	goto	l488
  5573  029F  0AD4               	incf	(dtoa@n+6)^(0+128),f
  5574  02A0  1D03               	skipz
  5575  02A1  2AA3               	goto	l488
  5576  02A2  0AD5               	incf	(dtoa@n+7)^(0+128),f
  5577  02A3                     l488:	
  5578                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 284:     }
  5579                           
  5580                           
  5581                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  5582  02A3  0021               	movlb	1	; select bank1
  5583  02A4  1BEB               	btfsc	(_prec+1)^(0+128),7
  5584  02A5  2AAB               	goto	l489
  5585                           
  5586                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  5587  02A6  30FD               	movlw	253
  5588  02A7  0020               	movlb	0	; select bank0
  5589  02A8  05C8               	andwf	_flags,f
  5590  02A9  30FF               	movlw	255
  5591  02AA  05C9               	andwf	_flags+1,f
  5592  02AB                     l489:	
  5593                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 289:     }
  5594                           
  5595                           
  5596                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  5597  02AB  0021               	movlb	1	; select bank1
  5598  02AC  086B               	movf	(_prec+1)^(0+128),w
  5599  02AD  3A80               	xorlw	128
  5600  02AE  00C2               	movwf	??_dtoa^(0+128)
  5601  02AF  3080               	movlw	128
  5602  02B0  0242               	subwf	??_dtoa^(0+128),w
  5603  02B1  1D03               	skipz
  5604  02B2  2AB5               	goto	u2905
  5605  02B3  3001               	movlw	1
  5606  02B4  026A               	subwf	_prec^(0+128),w
  5607  02B5                     u2905:	
  5608  02B5  1803               	skipnc
  5609  02B6  2ABD               	goto	l2827
  5610  02B7  3001               	movlw	1
  5611  02B8  0021               	movlb	1	; select bank1
  5612  02B9  00C8               	movwf	dtoa@p^(0+128)
  5613  02BA  3000               	movlw	0
  5614  02BB  00C9               	movwf	(dtoa@p^(0+128)+1)
  5615  02BC  2AC2               	goto	l493
  5616  02BD                     l2827:	
  5617  02BD  0021               	movlb	1	; select bank1
  5618  02BE  086B               	movf	(_prec+1)^(0+128),w
  5619  02BF  00C9               	movwf	(dtoa@p+1)^(0+128)
  5620  02C0  086A               	movf	_prec^(0+128),w
  5621  02C1  00C8               	movwf	dtoa@p^(0+128)
  5622  02C2                     l493:	
  5623                           
  5624                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  5625  02C2  0869               	movf	(_width+1)^(0+128),w
  5626  02C3  00CB               	movwf	(dtoa@w+1)^(0+128)
  5627  02C4  0868               	movf	_width^(0+128),w
  5628  02C5  00CA               	movwf	dtoa@w^(0+128)
  5629                           
  5630                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  5631  02C6  084C               	movf	dtoa@s^(0+128),w
  5632  02C7  044D               	iorwf	(dtoa@s+1)^(0+128),w
  5633  02C8  1D03               	btfss	3,2
  5634  02C9  2ACD               	goto	l2833
  5635  02CA  0020               	movlb	0	; select bank0
  5636  02CB  1D48               	btfss	_flags,2
  5637  02CC  2AD2               	goto	l494
  5638  02CD                     l2833:	
  5639                           
  5640                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  5641  02CD  30FF               	movlw	255
  5642  02CE  0021               	movlb	1	; select bank1
  5643  02CF  07CA               	addwf	dtoa@w^(0+128),f
  5644  02D0  30FF               	movlw	255
  5645  02D1  3DCB               	addwfc	(dtoa@w+1)^(0+128),f
  5646  02D2                     l494:	
  5647                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 294:     }
  5648                           
  5649                           
  5650                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  5651  02D2  301F               	movlw	31
  5652  02D3  0021               	movlb	1	; select bank1
  5653  02D4  00D6               	movwf	dtoa@i^(0+128)
  5654  02D5  3000               	movlw	0
  5655  02D6  00D7               	movwf	(dtoa@i^(0+128)+1)
  5656                           
  5657                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  5658  02D7  0022               	movlb	2	; select bank2
  5659  02D8  01C7               	clrf	(_dbuf^(0+256)+31)
  5660                           
  5661                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5662  02D9  2B68               	goto	l497
  5663  02DA                     l2847:	
  5664  02DA  0021               	movlb	1	; select bank1
  5665  02DB  084E               	movf	dtoa@n^(0+128),w
  5666  02DC  044F               	iorwf	(dtoa@n+1)^(0+128),w
  5667  02DD  0450               	iorwf	(dtoa@n+2)^(0+128),w
  5668  02DE  0451               	iorwf	(dtoa@n+3)^(0+128),w
  5669  02DF  0452               	iorwf	(dtoa@n+4)^(0+128),w
  5670  02E0  0453               	iorwf	(dtoa@n+5)^(0+128),w
  5671  02E1  0454               	iorwf	(dtoa@n+6)^(0+128),w
  5672  02E2  0455               	iorwf	(dtoa@n+7)^(0+128),w
  5673  02E3  1D03               	skipz
  5674  02E4  2AFF               	goto	l2837
  5675  02E5  0849               	movf	(dtoa@p+1)^(0+128),w
  5676  02E6  3A80               	xorlw	128
  5677  02E7  00C2               	movwf	??_dtoa^(0+128)
  5678  02E8  3080               	movlw	128
  5679  02E9  0242               	subwf	??_dtoa^(0+128),w
  5680  02EA  1D03               	skipz
  5681  02EB  2AEE               	goto	u2955
  5682  02EC  3001               	movlw	1
  5683  02ED  0248               	subwf	dtoa@p^(0+128),w
  5684  02EE                     u2955:	
  5685  02EE  1803               	skipnc
  5686  02EF  2AFF               	goto	l2837
  5687  02F0  0021               	movlb	1	; select bank1
  5688  02F1  084B               	movf	(dtoa@w+1)^(0+128),w
  5689  02F2  3A80               	xorlw	128
  5690  02F3  00C2               	movwf	??_dtoa^(0+128)
  5691  02F4  3080               	movlw	128
  5692  02F5  0242               	subwf	??_dtoa^(0+128),w
  5693  02F6  1D03               	skipz
  5694  02F7  2AFA               	goto	u2965
  5695  02F8  3001               	movlw	1
  5696  02F9  024A               	subwf	dtoa@w^(0+128),w
  5697  02FA                     u2965:	
  5698  02FA  1C03               	skipc
  5699  02FB  2B74               	goto	l2855
  5700  02FC  0020               	movlb	0	; select bank0
  5701  02FD  1CC8               	btfss	_flags,1
  5702  02FE  2B74               	goto	l2855
  5703  02FF                     l2837:	
  5704                           
  5705                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  5706  02FF  30FF               	movlw	255
  5707  0300  0021               	movlb	1	; select bank1
  5708  0301  07D6               	addwf	dtoa@i^(0+128),f
  5709  0302  30FF               	movlw	255
  5710  0303  3DD7               	addwfc	(dtoa@i+1)^(0+128),f
  5711                           
  5712                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  5713  0304  300A               	movlw	10
  5714  0305  00A0               	movwf	___aomod@divisor^(0+128)
  5715  0306  01A1               	clrf	(___aomod@divisor+1)^(0+128)
  5716  0307  01A2               	clrf	(___aomod@divisor+2)^(0+128)
  5717  0308  01A3               	clrf	(___aomod@divisor+3)^(0+128)
  5718  0309  01A4               	clrf	(___aomod@divisor+4)^(0+128)
  5719  030A  01A5               	clrf	(___aomod@divisor+5)^(0+128)
  5720  030B  01A6               	clrf	(___aomod@divisor+6)^(0+128)
  5721  030C  01A7               	clrf	(___aomod@divisor+7)^(0+128)
  5722  030D  084E               	movf	dtoa@n^(0+128),w
  5723  030E  00A8               	movwf	___aomod@dividend^(0+128)
  5724  030F  084F               	movf	(dtoa@n+1)^(0+128),w
  5725  0310  00A9               	movwf	(___aomod@dividend+1)^(0+128)
  5726  0311  0850               	movf	(dtoa@n+2)^(0+128),w
  5727  0312  00AA               	movwf	(___aomod@dividend+2)^(0+128)
  5728  0313  0851               	movf	(dtoa@n+3)^(0+128),w
  5729  0314  00AB               	movwf	(___aomod@dividend+3)^(0+128)
  5730  0315  0852               	movf	(dtoa@n+4)^(0+128),w
  5731  0316  00AC               	movwf	(___aomod@dividend+4)^(0+128)
  5732  0317  0853               	movf	(dtoa@n+5)^(0+128),w
  5733  0318  00AD               	movwf	(___aomod@dividend+5)^(0+128)
  5734  0319  0854               	movf	(dtoa@n+6)^(0+128),w
  5735  031A  00AE               	movwf	(___aomod@dividend+6)^(0+128)
  5736  031B  0855               	movf	(dtoa@n+7)^(0+128),w
  5737  031C  00AF               	movwf	(___aomod@dividend+7)^(0+128)
  5738  031D  3185  25C8  3182   	fcall	___aomod
  5739  0320  0021               	movlb	1	; select bank1
  5740  0321  0821               	movf	(?___aomod+1)^(0+128),w
  5741  0322  00B3               	movwf	(abs@a+1)^(0+128)
  5742  0323  0820               	movf	?___aomod^(0+128),w
  5743  0324  00B2               	movwf	abs@a^(0+128)
  5744  0325  318D  2567  3182   	fcall	_abs
  5745  0328  0021               	movlb	1	; select bank1
  5746  0329  0832               	movf	?_abs^(0+128),w
  5747  032A  3E30               	addlw	48
  5748  032B  00C2               	movwf	??_dtoa^(0+128)
  5749  032C  0856               	movf	dtoa@i^(0+128),w
  5750  032D  3E28               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5751  032E  0086               	movwf	6
  5752  032F  3001               	movlw	1	; select bank2/3
  5753  0330  0087               	movwf	7
  5754  0331  0842               	movf	??_dtoa^(0+128),w
  5755  0332  0081               	movwf	1
  5756                           
  5757                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  5758  0333  30FF               	movlw	255
  5759  0334  07C8               	addwf	dtoa@p^(0+128),f
  5760  0335  30FF               	movlw	255
  5761  0336  3DC9               	addwfc	(dtoa@p+1)^(0+128),f
  5762                           
  5763                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  5764  0337  30FF               	movlw	255
  5765  0338  07CA               	addwf	dtoa@w^(0+128),f
  5766  0339  30FF               	movlw	255
  5767  033A  3DCB               	addwfc	(dtoa@w+1)^(0+128),f
  5768                           
  5769                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  5770  033B  300A               	movlw	10
  5771  033C  00A0               	movwf	___aodiv@divisor^(0+128)
  5772  033D  01A1               	clrf	(___aodiv@divisor+1)^(0+128)
  5773  033E  01A2               	clrf	(___aodiv@divisor+2)^(0+128)
  5774  033F  01A3               	clrf	(___aodiv@divisor+3)^(0+128)
  5775  0340  01A4               	clrf	(___aodiv@divisor+4)^(0+128)
  5776  0341  01A5               	clrf	(___aodiv@divisor+5)^(0+128)
  5777  0342  01A6               	clrf	(___aodiv@divisor+6)^(0+128)
  5778  0343  01A7               	clrf	(___aodiv@divisor+7)^(0+128)
  5779  0344  084E               	movf	dtoa@n^(0+128),w
  5780  0345  00A8               	movwf	___aodiv@dividend^(0+128)
  5781  0346  084F               	movf	(dtoa@n+1)^(0+128),w
  5782  0347  00A9               	movwf	(___aodiv@dividend+1)^(0+128)
  5783  0348  0850               	movf	(dtoa@n+2)^(0+128),w
  5784  0349  00AA               	movwf	(___aodiv@dividend+2)^(0+128)
  5785  034A  0851               	movf	(dtoa@n+3)^(0+128),w
  5786  034B  00AB               	movwf	(___aodiv@dividend+3)^(0+128)
  5787  034C  0852               	movf	(dtoa@n+4)^(0+128),w
  5788  034D  00AC               	movwf	(___aodiv@dividend+4)^(0+128)
  5789  034E  0853               	movf	(dtoa@n+5)^(0+128),w
  5790  034F  00AD               	movwf	(___aodiv@dividend+5)^(0+128)
  5791  0350  0854               	movf	(dtoa@n+6)^(0+128),w
  5792  0351  00AE               	movwf	(___aodiv@dividend+6)^(0+128)
  5793  0352  0855               	movf	(dtoa@n+7)^(0+128),w
  5794  0353  00AF               	movwf	(___aodiv@dividend+7)^(0+128)
  5795  0354  3184  24CC  3182   	fcall	___aodiv
  5796  0357  0021               	movlb	1	; select bank1
  5797  0358  0820               	movf	?___aodiv^(0+128),w
  5798  0359  00CE               	movwf	dtoa@n^(0+128)
  5799  035A  0821               	movf	(?___aodiv+1)^(0+128),w
  5800  035B  00CF               	movwf	(dtoa@n+1)^(0+128)
  5801  035C  0822               	movf	(?___aodiv+2)^(0+128),w
  5802  035D  00D0               	movwf	(dtoa@n+2)^(0+128)
  5803  035E  0823               	movf	(?___aodiv+3)^(0+128),w
  5804  035F  00D1               	movwf	(dtoa@n+3)^(0+128)
  5805  0360  0824               	movf	(?___aodiv+4)^(0+128),w
  5806  0361  00D2               	movwf	(dtoa@n+4)^(0+128)
  5807  0362  0825               	movf	(?___aodiv+5)^(0+128),w
  5808  0363  00D3               	movwf	(dtoa@n+5)^(0+128)
  5809  0364  0826               	movf	(?___aodiv+6)^(0+128),w
  5810  0365  00D4               	movwf	(dtoa@n+6)^(0+128)
  5811  0366  0827               	movf	(?___aodiv+7)^(0+128),w
  5812  0367  00D5               	movwf	(dtoa@n+7)^(0+128)
  5813  0368                     l497:	
  5814                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 305:     }
  5815                           
  5816                           
  5817                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5818  0368  0021               	movlb	1	; select bank1
  5819  0369  0857               	movf	(dtoa@i+1)^(0+128),w
  5820  036A  3A80               	xorlw	128
  5821  036B  00C2               	movwf	??_dtoa^(0+128)
  5822  036C  3080               	movlw	128
  5823  036D  0242               	subwf	??_dtoa^(0+128),w
  5824  036E  1D03               	skipz
  5825  036F  2B72               	goto	u2935
  5826  0370  3001               	movlw	1
  5827  0371  0256               	subwf	dtoa@i^(0+128),w
  5828  0372                     u2935:	
  5829  0372  1803               	btfsc	3,0
  5830  0373  2ADA               	goto	l2847
  5831  0374                     l2855:	
  5832                           
  5833                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  5834  0374  0021               	movlb	1	; select bank1
  5835  0375  084C               	movf	dtoa@s^(0+128),w
  5836  0376  044D               	iorwf	(dtoa@s+1)^(0+128),w
  5837  0377  1D03               	btfss	3,2
  5838  0378  2B7C               	goto	l2859
  5839  0379  0020               	movlb	0	; select bank0
  5840  037A  1D48               	btfss	_flags,2
  5841  037B  2B94               	goto	l2869
  5842  037C                     l2859:	
  5843                           
  5844                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  5845  037C  30FF               	movlw	255
  5846  037D  0021               	movlb	1	; select bank1
  5847  037E  07D6               	addwf	dtoa@i^(0+128),f
  5848  037F  30FF               	movlw	255
  5849  0380  3DD7               	addwfc	(dtoa@i+1)^(0+128),f
  5850                           
  5851                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  5852  0381  084C               	movf	dtoa@s^(0+128),w
  5853  0382  044D               	iorwf	(dtoa@s+1)^(0+128),w
  5854  0383  1D03               	btfss	3,2
  5855  0384  2B87               	goto	l2865
  5856  0385  302B               	movlw	43
  5857  0386  2B88               	goto	L1
  5858  0387                     l2865:	
  5859  0387  302D               	movlw	45
  5860  0388                     L1:	
  5861  0388  00C5               	movwf	_dtoa$750^(0+128)
  5862  0389  3000               	movlw	0
  5863  038A  00C6               	movwf	(_dtoa$750^(0+128)+1)
  5864  038B  0845               	movf	_dtoa$750^(0+128),w
  5865  038C  00C2               	movwf	??_dtoa^(0+128)
  5866  038D  0856               	movf	dtoa@i^(0+128),w
  5867  038E  3E28               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5868  038F  0086               	movwf	6
  5869  0390  3001               	movlw	1	; select bank2/3
  5870  0391  0087               	movwf	7
  5871  0392  0842               	movf	??_dtoa^(0+128),w
  5872  0393  0081               	movwf	1
  5873  0394                     l2869:	
  5874                           
  5875                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  5876  0394  0021               	movlb	1	; select bank1
  5877  0395  0856               	movf	dtoa@i^(0+128),w
  5878  0396  3E28               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5879  0397  00C2               	movwf	??_dtoa^(0+128)
  5880  0398  0842               	movf	??_dtoa^(0+128),w
  5881  0399  00B1               	movwf	pad@buf^(0+128)
  5882  039A  084B               	movf	(dtoa@w+1)^(0+128),w
  5883  039B  00B3               	movwf	(pad@p+1)^(0+128)
  5884  039C  084A               	movf	dtoa@w^(0+128),w
  5885  039D  00B2               	movwf	pad@p^(0+128)
  5886  039E  0847               	movf	dtoa@fp^(0+128),w
  5887  039F  318F  2735         	fcall	_pad
  5888  03A1  0021               	movlb	1	; select bank1
  5889  03A2  0832               	movf	(?_pad+1)^(0+128),w
  5890  03A3  00BB               	movwf	(?_dtoa+1)^(0+128)
  5891  03A4  0831               	movf	?_pad^(0+128),w
  5892  03A5  00BA               	movwf	?_dtoa^(0+128)
  5893  03A6  0008               	return
  5894  03A7                     __end_of_dtoa:	
  5895                           
  5896                           	psect	text8
  5897  0F35                     __ptext8:	
  5898 ;; *************** function _pad *****************
  5899 ;; Defined at:
  5900 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5901 ;; Parameters:    Size  Location     Type
  5902 ;;  fp              1    wreg     PTR struct _IO_FILE
  5903 ;;		 -> NULL(0), 
  5904 ;;  buf             1   17[BANK1 ] PTR unsigned char 
  5905 ;;		 -> dbuf(32), 
  5906 ;;  p               2   18[BANK1 ] int 
  5907 ;; Auto vars:     Size  Location     Type
  5908 ;;  fp              1   25[BANK1 ] PTR struct _IO_FILE
  5909 ;;		 -> NULL(0), 
  5910 ;;  w               2   23[BANK1 ] int 
  5911 ;;  i               2   21[BANK1 ] int 
  5912 ;; Return value:  Size  Location     Type
  5913 ;;                  2   17[BANK1 ] int 
  5914 ;; Registers used:
  5915 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5916 ;; Tracked objects:
  5917 ;;		On entry : 0/0
  5918 ;;		On exit  : 0/0
  5919 ;;		Unchanged: 0/0
  5920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5921 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5922 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  5923 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5924 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  5925 ;;Total ram usage:        9 bytes
  5926 ;; Hardware stack levels used:    1
  5927 ;; Hardware stack levels required when called:   10
  5928 ;; This function calls:
  5929 ;;		_fputc
  5930 ;;		_fputs
  5931 ;;		_strlen
  5932 ;; This function is called by:
  5933 ;;		_dtoa
  5934 ;; This function uses a non-reentrant model
  5935 ;;
  5936                           
  5937                           
  5938                           ;psect for function _pad
  5939  0F35                     _pad:	
  5940                           
  5941                           ;incstack = 0
  5942                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5943                           ;pad@fp stored from wreg
  5944  0F35  0021               	movlb	1	; select bank1
  5945  0F36  00B9               	movwf	pad@fp^(0+128)
  5946                           
  5947                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  5948  0F37  0020               	movlb	0	; select bank0
  5949  0F38  1C48               	btfss	_flags,0
  5950  0F39  2F46               	goto	l2725
  5951                           
  5952                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  5953  0F3A  0021               	movlb	1	; select bank1
  5954  0F3B  0831               	movf	pad@buf^(0+128),w
  5955  0F3C  00A8               	movwf	fputs@s^(0+128)
  5956  0F3D  3001               	movlw	1
  5957  0F3E  00A9               	movwf	(fputs@s+1)^(0+128)
  5958  0F3F  0839               	movf	pad@fp^(0+128),w
  5959  0F40  00B4               	movwf	??_pad^(0+128)
  5960  0F41  0834               	movf	??_pad^(0+128),w
  5961  0F42  00AA               	movwf	fputs@fp^(0+128)
  5962  0F43  318D  25D4  318F   	fcall	_fputs
  5963  0F46                     l2725:	
  5964                           
  5965                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  5966  0F46  0021               	movlb	1	; select bank1
  5967  0F47  1BB3               	btfsc	(pad@p+1)^(0+128),7
  5968  0F48  2F4E               	goto	l2729
  5969  0F49  0833               	movf	(pad@p+1)^(0+128),w
  5970  0F4A  00B8               	movwf	(pad@w+1)^(0+128)
  5971  0F4B  0832               	movf	pad@p^(0+128),w
  5972  0F4C  00B7               	movwf	pad@w^(0+128)
  5973  0F4D  2F50               	goto	l480
  5974  0F4E                     l2729:	
  5975  0F4E  01B7               	clrf	pad@w^(0+128)
  5976  0F4F  01B8               	clrf	(pad@w+1)^(0+128)
  5977  0F50                     l480:	
  5978                           
  5979                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  5980  0F50  01B5               	clrf	pad@i^(0+128)
  5981  0F51  01B6               	clrf	(pad@i+1)^(0+128)
  5982  0F52                     l2735:	
  5983                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  5984                           
  5985                           
  5986                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  5987  0F52  0836               	movf	(pad@i+1)^(0+128),w
  5988  0F53  3A80               	xorlw	128
  5989  0F54  00B4               	movwf	??_pad^(0+128)
  5990  0F55  0838               	movf	(pad@w+1)^(0+128),w
  5991  0F56  3A80               	xorlw	128
  5992  0F57  0234               	subwf	??_pad^(0+128),w
  5993  0F58  1D03               	skipz
  5994  0F59  2F5C               	goto	u2615
  5995  0F5A  0837               	movf	pad@w^(0+128),w
  5996  0F5B  0235               	subwf	pad@i^(0+128),w
  5997  0F5C                     u2615:	
  5998  0F5C  1803               	btfsc	3,0
  5999  0F5D  2F70               	goto	l483
  6000                           
  6001                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  6002  0F5E  3020               	movlw	32
  6003  0F5F  0021               	movlb	1	; select bank1
  6004  0F60  00A0               	movwf	fputc@c^(0+128)
  6005  0F61  3000               	movlw	0
  6006  0F62  00A1               	movwf	(fputc@c^(0+128)+1)
  6007  0F63  0839               	movf	pad@fp^(0+128),w
  6008  0F64  00B4               	movwf	??_pad^(0+128)
  6009  0F65  0834               	movf	??_pad^(0+128),w
  6010  0F66  00A2               	movwf	fputc@fp^(0+128)
  6011  0F67  318E  2666  318F   	fcall	_fputc
  6012                           
  6013                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  6014  0F6A  3001               	movlw	1
  6015  0F6B  0021               	movlb	1	; select bank1
  6016  0F6C  07B5               	addwf	pad@i^(0+128),f
  6017  0F6D  3000               	movlw	0
  6018  0F6E  3DB6               	addwfc	(pad@i+1)^(0+128),f
  6019  0F6F  2F52               	goto	l2735
  6020  0F70                     l483:	
  6021                           
  6022                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  6023  0F70  0020               	movlb	0	; select bank0
  6024  0F71  1848               	btfsc	_flags,0
  6025  0F72  2F7F               	goto	l2739
  6026                           
  6027                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  6028  0F73  0021               	movlb	1	; select bank1
  6029  0F74  0831               	movf	pad@buf^(0+128),w
  6030  0F75  00A8               	movwf	fputs@s^(0+128)
  6031  0F76  3001               	movlw	1
  6032  0F77  00A9               	movwf	(fputs@s+1)^(0+128)
  6033  0F78  0839               	movf	pad@fp^(0+128),w
  6034  0F79  00B4               	movwf	??_pad^(0+128)
  6035  0F7A  0834               	movf	??_pad^(0+128),w
  6036  0F7B  00AA               	movwf	fputs@fp^(0+128)
  6037  0F7C  318D  25D4  318F   	fcall	_fputs
  6038  0F7F                     l2739:	
  6039                           
  6040                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  6041  0F7F  0021               	movlb	1	; select bank1
  6042  0F80  0831               	movf	pad@buf^(0+128),w
  6043  0F81  318D  2580         	fcall	_strlen
  6044  0F83  0021               	movlb	1	; select bank1
  6045  0F84  0837               	movf	pad@w^(0+128),w
  6046  0F85  0020               	movlb	0	; select bank0
  6047  0F86  073A               	addwf	?_strlen,w
  6048  0F87  0021               	movlb	1	; select bank1
  6049  0F88  00B1               	movwf	?_pad^(0+128)
  6050  0F89  0838               	movf	(pad@w+1)^(0+128),w
  6051  0F8A  0020               	movlb	0	; select bank0
  6052  0F8B  3D3B               	addwfc	?_strlen+1,w
  6053  0F8C  0021               	movlb	1	; select bank1
  6054  0F8D  00B2               	movwf	(?_pad+1)^(0+128)
  6055  0F8E  0008               	return
  6056  0F8F                     __end_of_pad:	
  6057                           
  6058                           	psect	text9
  6059  0D80                     __ptext9:	
  6060 ;; *************** function _strlen *****************
  6061 ;; Defined at:
  6062 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  6063 ;; Parameters:    Size  Location     Type
  6064 ;;  s               1    wreg     PTR const unsigned char 
  6065 ;;		 -> dbuf(32), 
  6066 ;; Auto vars:     Size  Location     Type
  6067 ;;  s               1    2[BANK1 ] PTR const unsigned char 
  6068 ;;		 -> dbuf(32), 
  6069 ;;  a               1    1[BANK1 ] PTR const unsigned char 
  6070 ;;		 -> dbuf(32), 
  6071 ;; Return value:  Size  Location     Type
  6072 ;;                  2   26[BANK0 ] unsigned int 
  6073 ;; Registers used:
  6074 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6075 ;; Tracked objects:
  6076 ;;		On entry : 0/0
  6077 ;;		On exit  : 0/0
  6078 ;;		Unchanged: 0/0
  6079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6080 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6081 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6082 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6083 ;;      Totals:         0       2       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6084 ;;Total ram usage:        5 bytes
  6085 ;; Hardware stack levels used:    1
  6086 ;; Hardware stack levels required when called:    6
  6087 ;; This function calls:
  6088 ;;		Nothing
  6089 ;; This function is called by:
  6090 ;;		_pad
  6091 ;; This function uses a non-reentrant model
  6092 ;;
  6093                           
  6094                           
  6095                           ;psect for function _strlen
  6096  0D80                     _strlen:	
  6097                           
  6098                           ;incstack = 0
  6099                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  6100                           ;strlen@s stored from wreg
  6101  0D80  0021               	movlb	1	; select bank1
  6102  0D81  00A2               	movwf	strlen@s^(0+128)
  6103  0D82  0822               	movf	strlen@s^(0+128),w
  6104  0D83  00A0               	movwf	??_strlen^(0+128)
  6105  0D84  0820               	movf	??_strlen^(0+128),w
  6106  0D85  00A1               	movwf	strlen@a^(0+128)
  6107  0D86                     l2715:	
  6108  0D86  0822               	movf	strlen@s^(0+128),w
  6109  0D87  0086               	movwf	6
  6110  0D88  3001               	movlw	1	; select bank2/3
  6111  0D89  0087               	movwf	7
  6112  0D8A  0801               	movf	1,w
  6113  0D8B  1903               	btfsc	3,2
  6114  0D8C  2D92               	goto	l2717
  6115  0D8D  3001               	movlw	1
  6116  0D8E  00A0               	movwf	??_strlen^(0+128)
  6117  0D8F  0820               	movf	??_strlen^(0+128),w
  6118  0D90  07A2               	addwf	strlen@s^(0+128),f
  6119  0D91  2D86               	goto	l2715
  6120  0D92                     l2717:	
  6121  0D92  0821               	movf	strlen@a^(0+128),w
  6122  0D93  0222               	subwf	strlen@s^(0+128),w
  6123  0D94  0020               	movlb	0	; select bank0
  6124  0D95  00BA               	movwf	?_strlen
  6125  0D96  01BB               	clrf	?_strlen+1
  6126  0D97  1BBA               	btfsc	?_strlen,7
  6127  0D98  03BB               	decf	?_strlen+1,f
  6128  0D99  0008               	return
  6129  0D9A                     __end_of_strlen:	
  6130                           
  6131                           	psect	text10
  6132  0DD4                     __ptext10:	
  6133 ;; *************** function _fputs *****************
  6134 ;; Defined at:
  6135 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  6136 ;; Parameters:    Size  Location     Type
  6137 ;;  s               2    8[BANK1 ] PTR const unsigned char 
  6138 ;;		 -> dbuf(32), STR_3(3), 
  6139 ;;  fp              1   10[BANK1 ] PTR struct _IO_FILE
  6140 ;;		 -> NULL(0), 
  6141 ;; Auto vars:     Size  Location     Type
  6142 ;;  i               2   15[BANK1 ] int 
  6143 ;;  c               1   14[BANK1 ] unsigned char 
  6144 ;; Return value:  Size  Location     Type
  6145 ;;                  2    8[BANK1 ] int 
  6146 ;; Registers used:
  6147 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6148 ;; Tracked objects:
  6149 ;;		On entry : 0/0
  6150 ;;		On exit  : 0/0
  6151 ;;		Unchanged: 0/0
  6152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6153 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6154 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6155 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6156 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  6157 ;;Total ram usage:        9 bytes
  6158 ;; Hardware stack levels used:    1
  6159 ;; Hardware stack levels required when called:    9
  6160 ;; This function calls:
  6161 ;;		_fputc
  6162 ;; This function is called by:
  6163 ;;		_pad
  6164 ;;		_puts
  6165 ;; This function uses a non-reentrant model
  6166 ;;
  6167                           
  6168                           
  6169                           ;psect for function _fputs
  6170  0DD4                     _fputs:	
  6171                           
  6172                           ;incstack = 0
  6173                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6174  0DD4  0021               	movlb	1	; select bank1
  6175  0DD5  01AF               	clrf	fputs@i^(0+128)
  6176  0DD6  01B0               	clrf	(fputs@i+1)^(0+128)
  6177  0DD7                     l2705:	
  6178  0DD7  0828               	movf	fputs@s^(0+128),w
  6179  0DD8  072F               	addwf	fputs@i^(0+128),w
  6180  0DD9  0084               	movwf	4
  6181  0DDA  0829               	movf	(fputs@s+1)^(0+128),w
  6182  0DDB  3D30               	addwfc	(fputs@i+1)^(0+128),w
  6183  0DDC  0085               	movwf	5
  6184  0DDD  0800               	movf	0,w	;code access
  6185  0DDE  00AB               	movwf	??_fputs^(0+128)
  6186  0DDF  082B               	movf	??_fputs^(0+128),w
  6187  0DE0  00AE               	movwf	fputs@c^(0+128)
  6188  0DE1  082E               	movf	fputs@c^(0+128),w
  6189  0DE2  1903               	btfsc	3,2
  6190  0DE3  2DF8               	goto	l2707
  6191  0DE4  082E               	movf	fputs@c^(0+128),w
  6192  0DE5  00AB               	movwf	??_fputs^(0+128)
  6193  0DE6  01AC               	clrf	(??_fputs^(0+128)+1)
  6194  0DE7  082B               	movf	??_fputs^(0+128),w
  6195  0DE8  00A0               	movwf	fputc@c^(0+128)
  6196  0DE9  082C               	movf	(??_fputs+1)^(0+128),w
  6197  0DEA  00A1               	movwf	(fputc@c+1)^(0+128)
  6198  0DEB  082A               	movf	fputs@fp^(0+128),w
  6199  0DEC  00AD               	movwf	(??_fputs+2)^(0+128)
  6200  0DED  082D               	movf	(??_fputs+2)^(0+128),w
  6201  0DEE  00A2               	movwf	fputc@fp^(0+128)
  6202  0DEF  318E  2666  318D   	fcall	_fputc
  6203  0DF2  3001               	movlw	1
  6204  0DF3  0021               	movlb	1	; select bank1
  6205  0DF4  07AF               	addwf	fputs@i^(0+128),f
  6206  0DF5  3000               	movlw	0
  6207  0DF6  3DB0               	addwfc	(fputs@i+1)^(0+128),f
  6208  0DF7  2DD7               	goto	l2705
  6209  0DF8                     l2707:	
  6210  0DF8  0830               	movf	(fputs@i+1)^(0+128),w
  6211  0DF9  00A9               	movwf	(?_fputs+1)^(0+128)
  6212  0DFA  082F               	movf	fputs@i^(0+128),w
  6213  0DFB  00A8               	movwf	?_fputs^(0+128)
  6214  0DFC  0008               	return
  6215  0DFD                     __end_of_fputs:	
  6216                           
  6217                           	psect	text11
  6218  0E66                     __ptext11:	
  6219 ;; *************** function _fputc *****************
  6220 ;; Defined at:
  6221 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  6222 ;; Parameters:    Size  Location     Type
  6223 ;;  c               2    0[BANK1 ] int 
  6224 ;;  fp              1    2[BANK1 ] PTR struct _IO_FILE
  6225 ;;		 -> NULL(0), 
  6226 ;; Auto vars:     Size  Location     Type
  6227 ;;		None
  6228 ;; Return value:  Size  Location     Type
  6229 ;;                  2    0[BANK1 ] int 
  6230 ;; Registers used:
  6231 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6232 ;; Tracked objects:
  6233 ;;		On entry : 0/0
  6234 ;;		On exit  : 0/0
  6235 ;;		Unchanged: 0/0
  6236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6237 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6239 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  6240 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  6241 ;;Total ram usage:        8 bytes
  6242 ;; Hardware stack levels used:    1
  6243 ;; Hardware stack levels required when called:    8
  6244 ;; This function calls:
  6245 ;;		_putch
  6246 ;; This function is called by:
  6247 ;;		_pad
  6248 ;;		_vfpfcnvrt
  6249 ;;		_fputs
  6250 ;;		_puts
  6251 ;; This function uses a non-reentrant model
  6252 ;;
  6253                           
  6254                           
  6255                           ;psect for function _fputc
  6256  0E66                     _fputc:	
  6257                           
  6258                           ;incstack = 0
  6259                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6260  0E66  0021               	movlb	1	; select bank1
  6261  0E67  0822               	movf	fputc@fp^(0+128),w
  6262  0E68  1D03               	btfss	3,2
  6263  0E69  0822               	movf	fputc@fp^(0+128),w
  6264  0E6A  1D03               	btfss	3,2
  6265  0E6B  2E71               	goto	l2689
  6266  0E6C  0820               	movf	fputc@c^(0+128),w
  6267  0E6D  318C  24A5  318E   	fcall	_putch
  6268  0E70  2E9D               	goto	l2695
  6269  0E71                     l2689:	
  6270  0E71  0822               	movf	fputc@fp^(0+128),w
  6271  0E72  3E03               	addlw	3
  6272  0E73  0086               	movwf	6
  6273  0E74  0187               	clrf	7
  6274  0E75  0016               	moviw fsr1++
  6275  0E76  0401               	iorwf	1,w
  6276  0E77  1903               	btfsc	3,2
  6277  0E78  2E94               	goto	l2693
  6278  0E79  0822               	movf	fputc@fp^(0+128),w
  6279  0E7A  3E03               	addlw	3
  6280  0E7B  0086               	movwf	6
  6281  0E7C  0187               	clrf	7
  6282  0E7D  3F40               	moviw [0]fsr1
  6283  0E7E  00A3               	movwf	??_fputc^(0+128)
  6284  0E7F  3F41               	moviw [1]fsr1
  6285  0E80  00A4               	movwf	(??_fputc^(0+128)+1)
  6286  0E81  0A22               	incf	fputc@fp^(0+128),w
  6287  0E82  0086               	movwf	6
  6288  0E83  0187               	clrf	7
  6289  0E84  3F40               	moviw [0]fsr1
  6290  0E85  00A5               	movwf	(??_fputc+2)^(0+128)
  6291  0E86  3F41               	moviw [1]fsr1
  6292  0E87  00A6               	movwf	((??_fputc+2)^(0+128)+1)
  6293  0E88  0826               	movf	(??_fputc+3)^(0+128),w
  6294  0E89  3A80               	xorlw	128
  6295  0E8A  00A7               	movwf	(??_fputc+4)^(0+128)
  6296  0E8B  0824               	movf	(??_fputc+1)^(0+128),w
  6297  0E8C  3A80               	xorlw	128
  6298  0E8D  0227               	subwf	(??_fputc+4)^(0+128),w
  6299  0E8E  1D03               	skipz
  6300  0E8F  2E92               	goto	u2565
  6301  0E90  0823               	movf	??_fputc^(0+128),w
  6302  0E91  0225               	subwf	(??_fputc+2)^(0+128),w
  6303  0E92                     u2565:	
  6304  0E92  1803               	skipnc
  6305  0E93  2E9D               	goto	l2695
  6306  0E94                     l2693:	
  6307  0E94  0021               	movlb	1	; select bank1
  6308  0E95  0A22               	incf	fputc@fp^(0+128),w
  6309  0E96  0086               	movwf	6
  6310  0E97  0187               	clrf	7
  6311  0E98  3001               	movlw	1
  6312  0E99  0781               	addwf	1,f
  6313  0E9A  3141               	addfsr 1,1
  6314  0E9B  1803               	skipnc
  6315  0E9C  0A81               	incf	1,f
  6316  0E9D                     l2695:	
  6317  0E9D  0021               	movlb	1	; select bank1
  6318  0E9E  0820               	movf	fputc@c^(0+128),w
  6319  0E9F  00A3               	movwf	??_fputc^(0+128)
  6320  0EA0  01A4               	clrf	(??_fputc^(0+128)+1)
  6321  0EA1  0823               	movf	??_fputc^(0+128),w
  6322  0EA2  00A0               	movwf	?_fputc^(0+128)
  6323  0EA3  0824               	movf	(??_fputc+1)^(0+128),w
  6324  0EA4  00A1               	movwf	(?_fputc+1)^(0+128)
  6325  0EA5  0008               	return
  6326  0EA6                     __end_of_fputc:	
  6327                           
  6328                           	psect	text12
  6329  0CA5                     __ptext12:	
  6330 ;; *************** function _putch *****************
  6331 ;; Defined at:
  6332 ;;		line 151 in file "mcc_generated_files/eusart.c"
  6333 ;; Parameters:    Size  Location     Type
  6334 ;;  txData          1    wreg     unsigned char 
  6335 ;; Auto vars:     Size  Location     Type
  6336 ;;  txData          1   27[BANK0 ] unsigned char 
  6337 ;; Return value:  Size  Location     Type
  6338 ;;                  1    wreg      void 
  6339 ;; Registers used:
  6340 ;;		wreg, status,2, status,0, pclath, cstack
  6341 ;; Tracked objects:
  6342 ;;		On entry : 0/0
  6343 ;;		On exit  : 0/0
  6344 ;;		Unchanged: 0/0
  6345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6347 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6349 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6350 ;;Total ram usage:        1 bytes
  6351 ;; Hardware stack levels used:    1
  6352 ;; Hardware stack levels required when called:    7
  6353 ;; This function calls:
  6354 ;;		_EUSART_Write
  6355 ;; This function is called by:
  6356 ;;		_fputc
  6357 ;; This function uses a non-reentrant model
  6358 ;;
  6359                           
  6360                           
  6361                           ;psect for function _putch
  6362  0CA5                     _putch:	
  6363                           
  6364                           ;incstack = 0
  6365                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  6366                           ;putch@txData stored from wreg
  6367  0CA5  0020               	movlb	0	; select bank0
  6368  0CA6  00BB               	movwf	putch@txData
  6369                           
  6370                           ;mcc_generated_files/eusart.c: 151: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 152: {;mcc_generated_files/eusart.c: 153:     EUSART_Write(txData);
  6371  0CA7  083B               	movf	putch@txData,w
  6372  0CA8  318C  24C0         	fcall	_EUSART_Write
  6373  0CAA  0008               	return
  6374  0CAB                     __end_of_putch:	
  6375                           
  6376                           	psect	text13
  6377  0CC0                     __ptext13:	
  6378 ;; *************** function _EUSART_Write *****************
  6379 ;; Defined at:
  6380 ;;		line 137 in file "mcc_generated_files/eusart.c"
  6381 ;; Parameters:    Size  Location     Type
  6382 ;;  txData          1    wreg     unsigned char 
  6383 ;; Auto vars:     Size  Location     Type
  6384 ;;  txData          1   26[BANK0 ] unsigned char 
  6385 ;; Return value:  Size  Location     Type
  6386 ;;                  1    wreg      void 
  6387 ;; Registers used:
  6388 ;;		wreg
  6389 ;; Tracked objects:
  6390 ;;		On entry : 0/0
  6391 ;;		On exit  : 0/0
  6392 ;;		Unchanged: 0/0
  6393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6395 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6397 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6398 ;;Total ram usage:        1 bytes
  6399 ;; Hardware stack levels used:    1
  6400 ;; Hardware stack levels required when called:    6
  6401 ;; This function calls:
  6402 ;;		Nothing
  6403 ;; This function is called by:
  6404 ;;		_putch
  6405 ;;		_setCursor
  6406 ;;		_backlightBrightness
  6407 ;; This function uses a non-reentrant model
  6408 ;;
  6409                           
  6410                           
  6411                           ;psect for function _EUSART_Write
  6412  0CC0                     _EUSART_Write:	
  6413                           
  6414                           ;incstack = 0
  6415                           ; Regs used in _EUSART_Write: [wreg]
  6416                           ;EUSART_Write@txData stored from wreg
  6417  0CC0  0020               	movlb	0	; select bank0
  6418  0CC1  00BA               	movwf	EUSART_Write@txData
  6419  0CC2                     l69:	
  6420                           ;mcc_generated_files/eusart.c: 140:     {;mcc_generated_files/eusart.c: 141:     }
  6421                           
  6422                           
  6423                           ;mcc_generated_files/eusart.c: 139:     while(0 == PIR1bits.TXIF)
  6424  0CC2  1E10               	btfss	16,4	;volatile
  6425  0CC3  2CC2               	goto	l69
  6426                           
  6427                           ;mcc_generated_files/eusart.c: 143:     TX1REG = txData;
  6428  0CC4  083A               	movf	EUSART_Write@txData,w
  6429  0CC5  0023               	movlb	3	; select bank3
  6430  0CC6  009A               	movwf	26	;volatile
  6431  0CC7  0008               	return
  6432  0CC8                     __end_of_EUSART_Write:	
  6433                           
  6434                           	psect	text14
  6435  0D67                     __ptext14:	
  6436 ;; *************** function _abs *****************
  6437 ;; Defined at:
  6438 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  6439 ;; Parameters:    Size  Location     Type
  6440 ;;  a               2   18[BANK1 ] int 
  6441 ;; Auto vars:     Size  Location     Type
  6442 ;;		None
  6443 ;; Return value:  Size  Location     Type
  6444 ;;                  2   18[BANK1 ] int 
  6445 ;; Registers used:
  6446 ;;		wreg, status,2, status,0
  6447 ;; Tracked objects:
  6448 ;;		On entry : 0/0
  6449 ;;		On exit  : 0/0
  6450 ;;		Unchanged: 0/0
  6451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6452 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6454 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6455 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  6456 ;;Total ram usage:        4 bytes
  6457 ;; Hardware stack levels used:    1
  6458 ;; Hardware stack levels required when called:    6
  6459 ;; This function calls:
  6460 ;;		Nothing
  6461 ;; This function is called by:
  6462 ;;		_dtoa
  6463 ;; This function uses a non-reentrant model
  6464 ;;
  6465                           
  6466                           
  6467                           ;psect for function _abs
  6468  0D67                     _abs:	
  6469                           
  6470                           ;incstack = 0
  6471                           ; Regs used in _abs: [wreg+status,2+status,0]
  6472  0D67  0021               	movlb	1	; select bank1
  6473  0D68  0833               	movf	(abs@a+1)^(0+128),w
  6474  0D69  3A80               	xorlw	128
  6475  0D6A  00B4               	movwf	??_abs^(0+128)
  6476  0D6B  3080               	movlw	128
  6477  0D6C  0234               	subwf	??_abs^(0+128),w
  6478  0D6D  1D03               	skipz
  6479  0D6E  2D71               	goto	u2635
  6480  0D6F  3001               	movlw	1
  6481  0D70  0232               	subwf	abs@a^(0+128),w
  6482  0D71                     u2635:	
  6483  0D71  1803               	skipnc
  6484  0D72  0008               	return
  6485  0D73  0021               	movlb	1	; select bank1
  6486  0D74  0932               	comf	abs@a^(0+128),w
  6487  0D75  00B4               	movwf	??_abs^(0+128)
  6488  0D76  0933               	comf	(abs@a+1)^(0+128),w
  6489  0D77  00B5               	movwf	(??_abs^(0+128)+1)
  6490  0D78  0AB4               	incf	??_abs^(0+128),f
  6491  0D79  1903               	skipnz
  6492  0D7A  0AB5               	incf	(??_abs^(0+128)+1),f
  6493  0D7B  0834               	movf	??_abs^(0+128),w
  6494  0D7C  00B2               	movwf	?_abs^(0+128)
  6495  0D7D  0835               	movf	(??_abs+1)^(0+128),w
  6496  0D7E  00B3               	movwf	(?_abs+1)^(0+128)
  6497  0D7F  0008               	return
  6498  0D80                     __end_of_abs:	
  6499                           
  6500                           	psect	text15
  6501  05C8                     __ptext15:	
  6502 ;; *************** function ___aomod *****************
  6503 ;; Defined at:
  6504 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  6505 ;; Parameters:    Size  Location     Type
  6506 ;;  divisor         8    0[BANK1 ] long long 
  6507 ;;  dividend        8    8[BANK1 ] long long 
  6508 ;; Auto vars:     Size  Location     Type
  6509 ;;  sign            1   17[BANK1 ] unsigned char 
  6510 ;;  counter         1   16[BANK1 ] unsigned char 
  6511 ;; Return value:  Size  Location     Type
  6512 ;;                  8    0[BANK1 ] long long 
  6513 ;; Registers used:
  6514 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6515 ;; Tracked objects:
  6516 ;;		On entry : 0/0
  6517 ;;		On exit  : 0/0
  6518 ;;		Unchanged: 0/0
  6519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6520 ;;      Params:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  6521 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6522 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6523 ;;      Totals:         0       1      18       0       0       0       0       0       0       0       0       0       
      +0       0
  6524 ;;Total ram usage:       19 bytes
  6525 ;; Hardware stack levels used:    1
  6526 ;; Hardware stack levels required when called:    6
  6527 ;; This function calls:
  6528 ;;		Nothing
  6529 ;; This function is called by:
  6530 ;;		_dtoa
  6531 ;; This function uses a non-reentrant model
  6532 ;;
  6533                           
  6534                           
  6535                           ;psect for function ___aomod
  6536  05C8                     ___aomod:	
  6537                           
  6538                           ;incstack = 0
  6539                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  6540  05C8  0021               	movlb	1	; select bank1
  6541  05C9  01B1               	clrf	___aomod@sign^(0+128)
  6542  05CA  30A8               	movlw	low ___aomod@dividend
  6543  05CB  0086               	movwf	6
  6544  05CC  3000               	movlw	high ___aomod@dividend
  6545  05CD  0087               	movwf	7
  6546  05CE  3F47               	moviw [7]fsr1
  6547  05CF  0020               	movlb	0	; select bank0
  6548  05D0  00BA               	movwf	??___aomod
  6549  05D1  1FBA               	btfss	??___aomod,7
  6550  05D2  2DF5               	goto	l2791
  6551  05D3  0021               	movlb	1	; select bank1
  6552  05D4  09A8               	comf	___aomod@dividend^(0+128),f
  6553  05D5  09A9               	comf	(___aomod@dividend+1)^(0+128),f
  6554  05D6  09AA               	comf	(___aomod@dividend+2)^(0+128),f
  6555  05D7  09AB               	comf	(___aomod@dividend+3)^(0+128),f
  6556  05D8  09AC               	comf	(___aomod@dividend+4)^(0+128),f
  6557  05D9  09AD               	comf	(___aomod@dividend+5)^(0+128),f
  6558  05DA  09AE               	comf	(___aomod@dividend+6)^(0+128),f
  6559  05DB  09AF               	comf	(___aomod@dividend+7)^(0+128),f
  6560  05DC  0AA8               	incf	___aomod@dividend^(0+128),f
  6561  05DD  1D03               	skipz
  6562  05DE  2DF2               	goto	u276lld
  6563  05DF  0AA9               	incf	(___aomod@dividend+1)^(0+128),f
  6564  05E0  1D03               	skipz
  6565  05E1  2DF2               	goto	u276lld
  6566  05E2  0AAA               	incf	(___aomod@dividend+2)^(0+128),f
  6567  05E3  1D03               	skipz
  6568  05E4  2DF2               	goto	u276lld
  6569  05E5  0AAB               	incf	(___aomod@dividend+3)^(0+128),f
  6570  05E6  1D03               	skipz
  6571  05E7  2DF2               	goto	u276lld
  6572  05E8  0AAC               	incf	(___aomod@dividend+4)^(0+128),f
  6573  05E9  1D03               	skipz
  6574  05EA  2DF2               	goto	u276lld
  6575  05EB  0AAD               	incf	(___aomod@dividend+5)^(0+128),f
  6576  05EC  1D03               	skipz
  6577  05ED  2DF2               	goto	u276lld
  6578  05EE  0AAE               	incf	(___aomod@dividend+6)^(0+128),f
  6579  05EF  1D03               	skipz
  6580  05F0  2DF2               	goto	u276lld
  6581  05F1  0AAF               	incf	(___aomod@dividend+7)^(0+128),f
  6582  05F2                     u276lld:	
  6583  05F2  0021               	movlb	1	; select bank1
  6584  05F3  01B1               	clrf	___aomod@sign^(0+128)
  6585  05F4  0AB1               	incf	___aomod@sign^(0+128),f
  6586  05F5                     l2791:	
  6587  05F5  30A0               	movlw	low ___aomod@divisor
  6588  05F6  0086               	movwf	6
  6589  05F7  3000               	movlw	high ___aomod@divisor
  6590  05F8  0087               	movwf	7
  6591  05F9  3F47               	moviw [7]fsr1
  6592  05FA  0020               	movlb	0	; select bank0
  6593  05FB  00BA               	movwf	??___aomod
  6594  05FC  1FBA               	btfss	??___aomod,7
  6595  05FD  2E1D               	goto	l2795
  6596  05FE  0021               	movlb	1	; select bank1
  6597  05FF  09A0               	comf	___aomod@divisor^(0+128),f
  6598  0600  09A1               	comf	(___aomod@divisor+1)^(0+128),f
  6599  0601  09A2               	comf	(___aomod@divisor+2)^(0+128),f
  6600  0602  09A3               	comf	(___aomod@divisor+3)^(0+128),f
  6601  0603  09A4               	comf	(___aomod@divisor+4)^(0+128),f
  6602  0604  09A5               	comf	(___aomod@divisor+5)^(0+128),f
  6603  0605  09A6               	comf	(___aomod@divisor+6)^(0+128),f
  6604  0606  09A7               	comf	(___aomod@divisor+7)^(0+128),f
  6605  0607  0AA0               	incf	___aomod@divisor^(0+128),f
  6606  0608  1D03               	skipz
  6607  0609  2E1D               	goto	l2795
  6608  060A  0AA1               	incf	(___aomod@divisor+1)^(0+128),f
  6609  060B  1D03               	skipz
  6610  060C  2E1D               	goto	l2795
  6611  060D  0AA2               	incf	(___aomod@divisor+2)^(0+128),f
  6612  060E  1D03               	skipz
  6613  060F  2E1D               	goto	l2795
  6614  0610  0AA3               	incf	(___aomod@divisor+3)^(0+128),f
  6615  0611  1D03               	skipz
  6616  0612  2E1D               	goto	l2795
  6617  0613  0AA4               	incf	(___aomod@divisor+4)^(0+128),f
  6618  0614  1D03               	skipz
  6619  0615  2E1D               	goto	l2795
  6620  0616  0AA5               	incf	(___aomod@divisor+5)^(0+128),f
  6621  0617  1D03               	skipz
  6622  0618  2E1D               	goto	l2795
  6623  0619  0AA6               	incf	(___aomod@divisor+6)^(0+128),f
  6624  061A  1D03               	skipz
  6625  061B  2E1D               	goto	l2795
  6626  061C  0AA7               	incf	(___aomod@divisor+7)^(0+128),f
  6627  061D                     l2795:	
  6628  061D  0021               	movlb	1	; select bank1
  6629  061E  0820               	movf	___aomod@divisor^(0+128),w
  6630  061F  0421               	iorwf	(___aomod@divisor+1)^(0+128),w
  6631  0620  0422               	iorwf	(___aomod@divisor+2)^(0+128),w
  6632  0621  0423               	iorwf	(___aomod@divisor+3)^(0+128),w
  6633  0622  0424               	iorwf	(___aomod@divisor+4)^(0+128),w
  6634  0623  0425               	iorwf	(___aomod@divisor+5)^(0+128),w
  6635  0624  0426               	iorwf	(___aomod@divisor+6)^(0+128),w
  6636  0625  0427               	iorwf	(___aomod@divisor+7)^(0+128),w
  6637  0626  1903               	skipnz
  6638  0627  2E77               	goto	l2811
  6639  0628  01B0               	clrf	___aomod@counter^(0+128)
  6640  0629  0AB0               	incf	___aomod@counter^(0+128),f
  6641  062A                     l2803:	
  6642  062A  1BA7               	btfsc	(___aomod@divisor+7)^(0+128),7
  6643  062B  2E3B               	goto	l2805
  6644  062C  35A0               	lslf	___aomod@divisor^(0+128),f
  6645  062D  0DA1               	rlf	(___aomod@divisor+1)^(0+128),f
  6646  062E  0DA2               	rlf	(___aomod@divisor+2)^(0+128),f
  6647  062F  0DA3               	rlf	(___aomod@divisor+3)^(0+128),f
  6648  0630  0DA4               	rlf	(___aomod@divisor+4)^(0+128),f
  6649  0631  0DA5               	rlf	(___aomod@divisor+5)^(0+128),f
  6650  0632  0DA6               	rlf	(___aomod@divisor+6)^(0+128),f
  6651  0633  0DA7               	rlf	(___aomod@divisor+7)^(0+128),f
  6652  0634  3001               	movlw	1
  6653  0635  0020               	movlb	0	; select bank0
  6654  0636  00BA               	movwf	??___aomod
  6655  0637  083A               	movf	??___aomod,w
  6656  0638  0021               	movlb	1	; select bank1
  6657  0639  07B0               	addwf	___aomod@counter^(0+128),f
  6658  063A  2E2A               	goto	l2803
  6659  063B                     l2805:	
  6660  063B  0827               	movf	(___aomod@divisor+7)^(0+128),w
  6661  063C  022F               	subwf	(___aomod@dividend+7)^(0+128),w
  6662  063D  1D03               	skipz
  6663  063E  2E59               	goto	u2815
  6664  063F  0826               	movf	(___aomod@divisor+6)^(0+128),w
  6665  0640  022E               	subwf	(___aomod@dividend+6)^(0+128),w
  6666  0641  1D03               	skipz
  6667  0642  2E59               	goto	u2815
  6668  0643  0825               	movf	(___aomod@divisor+5)^(0+128),w
  6669  0644  022D               	subwf	(___aomod@dividend+5)^(0+128),w
  6670  0645  1D03               	skipz
  6671  0646  2E59               	goto	u2815
  6672  0647  0824               	movf	(___aomod@divisor+4)^(0+128),w
  6673  0648  022C               	subwf	(___aomod@dividend+4)^(0+128),w
  6674  0649  1D03               	skipz
  6675  064A  2E59               	goto	u2815
  6676  064B  0823               	movf	(___aomod@divisor+3)^(0+128),w
  6677  064C  022B               	subwf	(___aomod@dividend+3)^(0+128),w
  6678  064D  1D03               	skipz
  6679  064E  2E59               	goto	u2815
  6680  064F  0822               	movf	(___aomod@divisor+2)^(0+128),w
  6681  0650  022A               	subwf	(___aomod@dividend+2)^(0+128),w
  6682  0651  1D03               	skipz
  6683  0652  2E59               	goto	u2815
  6684  0653  0821               	movf	(___aomod@divisor+1)^(0+128),w
  6685  0654  0229               	subwf	(___aomod@dividend+1)^(0+128),w
  6686  0655  1D03               	skipz
  6687  0656  2E59               	goto	u2815
  6688  0657  0820               	movf	___aomod@divisor^(0+128),w
  6689  0658  0228               	subwf	___aomod@dividend^(0+128),w
  6690  0659                     u2815:	
  6691  0659  1C03               	skipc
  6692  065A  2E6B               	goto	l2809
  6693  065B  0820               	movf	___aomod@divisor^(0+128),w
  6694  065C  02A8               	subwf	___aomod@dividend^(0+128),f
  6695  065D  0821               	movf	(___aomod@divisor+1)^(0+128),w
  6696  065E  3BA9               	subwfb	(___aomod@dividend+1)^(0+128),f
  6697  065F  0822               	movf	(___aomod@divisor+2)^(0+128),w
  6698  0660  3BAA               	subwfb	(___aomod@dividend+2)^(0+128),f
  6699  0661  0823               	movf	(___aomod@divisor+3)^(0+128),w
  6700  0662  3BAB               	subwfb	(___aomod@dividend+3)^(0+128),f
  6701  0663  0824               	movf	(___aomod@divisor+4)^(0+128),w
  6702  0664  3BAC               	subwfb	(___aomod@dividend+4)^(0+128),f
  6703  0665  0825               	movf	(___aomod@divisor+5)^(0+128),w
  6704  0666  3BAD               	subwfb	(___aomod@dividend+5)^(0+128),f
  6705  0667  0826               	movf	(___aomod@divisor+6)^(0+128),w
  6706  0668  3BAE               	subwfb	(___aomod@dividend+6)^(0+128),f
  6707  0669  0827               	movf	(___aomod@divisor+7)^(0+128),w
  6708  066A  3BAF               	subwfb	(___aomod@dividend+7)^(0+128),f
  6709  066B                     l2809:	
  6710  066B  36A7               	lsrf	(___aomod@divisor+7)^(0+128),f
  6711  066C  0CA6               	rrf	(___aomod@divisor+6)^(0+128),f
  6712  066D  0CA5               	rrf	(___aomod@divisor+5)^(0+128),f
  6713  066E  0CA4               	rrf	(___aomod@divisor+4)^(0+128),f
  6714  066F  0CA3               	rrf	(___aomod@divisor+3)^(0+128),f
  6715  0670  0CA2               	rrf	(___aomod@divisor+2)^(0+128),f
  6716  0671  0CA1               	rrf	(___aomod@divisor+1)^(0+128),f
  6717  0672  0CA0               	rrf	___aomod@divisor^(0+128),f
  6718  0673  3001               	movlw	1
  6719  0674  02B0               	subwf	___aomod@counter^(0+128),f
  6720  0675  1D03               	btfss	3,2
  6721  0676  2E3B               	goto	l2805
  6722  0677                     l2811:	
  6723  0677  0831               	movf	___aomod@sign^(0+128),w
  6724  0678  1903               	btfsc	3,2
  6725  0679  2E98               	goto	l643
  6726  067A  09A8               	comf	___aomod@dividend^(0+128),f
  6727  067B  09A9               	comf	(___aomod@dividend+1)^(0+128),f
  6728  067C  09AA               	comf	(___aomod@dividend+2)^(0+128),f
  6729  067D  09AB               	comf	(___aomod@dividend+3)^(0+128),f
  6730  067E  09AC               	comf	(___aomod@dividend+4)^(0+128),f
  6731  067F  09AD               	comf	(___aomod@dividend+5)^(0+128),f
  6732  0680  09AE               	comf	(___aomod@dividend+6)^(0+128),f
  6733  0681  09AF               	comf	(___aomod@dividend+7)^(0+128),f
  6734  0682  0AA8               	incf	___aomod@dividend^(0+128),f
  6735  0683  1D03               	skipz
  6736  0684  2E98               	goto	l643
  6737  0685  0AA9               	incf	(___aomod@dividend+1)^(0+128),f
  6738  0686  1D03               	skipz
  6739  0687  2E98               	goto	l643
  6740  0688  0AAA               	incf	(___aomod@dividend+2)^(0+128),f
  6741  0689  1D03               	skipz
  6742  068A  2E98               	goto	l643
  6743  068B  0AAB               	incf	(___aomod@dividend+3)^(0+128),f
  6744  068C  1D03               	skipz
  6745  068D  2E98               	goto	l643
  6746  068E  0AAC               	incf	(___aomod@dividend+4)^(0+128),f
  6747  068F  1D03               	skipz
  6748  0690  2E98               	goto	l643
  6749  0691  0AAD               	incf	(___aomod@dividend+5)^(0+128),f
  6750  0692  1D03               	skipz
  6751  0693  2E98               	goto	l643
  6752  0694  0AAE               	incf	(___aomod@dividend+6)^(0+128),f
  6753  0695  1D03               	skipz
  6754  0696  2E98               	goto	l643
  6755  0697  0AAF               	incf	(___aomod@dividend+7)^(0+128),f
  6756  0698                     l643:	
  6757  0698  0021               	movlb	1	; select bank1
  6758  0699  0828               	movf	___aomod@dividend^(0+128),w
  6759  069A  00A0               	movwf	?___aomod^(0+128)
  6760  069B  0829               	movf	(___aomod@dividend+1)^(0+128),w
  6761  069C  00A1               	movwf	(?___aomod+1)^(0+128)
  6762  069D  082A               	movf	(___aomod@dividend+2)^(0+128),w
  6763  069E  00A2               	movwf	(?___aomod+2)^(0+128)
  6764  069F  082B               	movf	(___aomod@dividend+3)^(0+128),w
  6765  06A0  00A3               	movwf	(?___aomod+3)^(0+128)
  6766  06A1  082C               	movf	(___aomod@dividend+4)^(0+128),w
  6767  06A2  00A4               	movwf	(?___aomod+4)^(0+128)
  6768  06A3  082D               	movf	(___aomod@dividend+5)^(0+128),w
  6769  06A4  00A5               	movwf	(?___aomod+5)^(0+128)
  6770  06A5  082E               	movf	(___aomod@dividend+6)^(0+128),w
  6771  06A6  00A6               	movwf	(?___aomod+6)^(0+128)
  6772  06A7  082F               	movf	(___aomod@dividend+7)^(0+128),w
  6773  06A8  00A7               	movwf	(?___aomod+7)^(0+128)
  6774  06A9  0008               	return
  6775  06AA                     __end_of___aomod:	
  6776                           
  6777                           	psect	text16
  6778  04CC                     __ptext16:	
  6779 ;; *************** function ___aodiv *****************
  6780 ;; Defined at:
  6781 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  6782 ;; Parameters:    Size  Location     Type
  6783 ;;  divisor         8    0[BANK1 ] long long 
  6784 ;;  dividend        8    8[BANK1 ] long long 
  6785 ;; Auto vars:     Size  Location     Type
  6786 ;;  quotient        8   18[BANK1 ] long long 
  6787 ;;  sign            1   17[BANK1 ] unsigned char 
  6788 ;;  counter         1   16[BANK1 ] unsigned char 
  6789 ;; Return value:  Size  Location     Type
  6790 ;;                  8    0[BANK1 ] long long 
  6791 ;; Registers used:
  6792 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6793 ;; Tracked objects:
  6794 ;;		On entry : 0/0
  6795 ;;		On exit  : 0/0
  6796 ;;		Unchanged: 0/0
  6797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6798 ;;      Params:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  6799 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  6800 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6801 ;;      Totals:         0       1      26       0       0       0       0       0       0       0       0       0       
      +0       0
  6802 ;;Total ram usage:       27 bytes
  6803 ;; Hardware stack levels used:    1
  6804 ;; Hardware stack levels required when called:    6
  6805 ;; This function calls:
  6806 ;;		Nothing
  6807 ;; This function is called by:
  6808 ;;		_dtoa
  6809 ;; This function uses a non-reentrant model
  6810 ;;
  6811                           
  6812                           
  6813                           ;psect for function ___aodiv
  6814  04CC                     ___aodiv:	
  6815                           
  6816                           ;incstack = 0
  6817                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  6818  04CC  0021               	movlb	1	; select bank1
  6819  04CD  01B1               	clrf	___aodiv@sign^(0+128)
  6820  04CE  30A0               	movlw	low ___aodiv@divisor
  6821  04CF  0086               	movwf	6
  6822  04D0  3000               	movlw	high ___aodiv@divisor
  6823  04D1  0087               	movwf	7
  6824  04D2  3F47               	moviw [7]fsr1
  6825  04D3  0020               	movlb	0	; select bank0
  6826  04D4  00BA               	movwf	??___aodiv
  6827  04D5  1FBA               	btfss	??___aodiv,7
  6828  04D6  2CF9               	goto	l2753
  6829  04D7  0021               	movlb	1	; select bank1
  6830  04D8  09A0               	comf	___aodiv@divisor^(0+128),f
  6831  04D9  09A1               	comf	(___aodiv@divisor+1)^(0+128),f
  6832  04DA  09A2               	comf	(___aodiv@divisor+2)^(0+128),f
  6833  04DB  09A3               	comf	(___aodiv@divisor+3)^(0+128),f
  6834  04DC  09A4               	comf	(___aodiv@divisor+4)^(0+128),f
  6835  04DD  09A5               	comf	(___aodiv@divisor+5)^(0+128),f
  6836  04DE  09A6               	comf	(___aodiv@divisor+6)^(0+128),f
  6837  04DF  09A7               	comf	(___aodiv@divisor+7)^(0+128),f
  6838  04E0  0AA0               	incf	___aodiv@divisor^(0+128),f
  6839  04E1  1D03               	skipz
  6840  04E2  2CF6               	goto	u265lld
  6841  04E3  0AA1               	incf	(___aodiv@divisor+1)^(0+128),f
  6842  04E4  1D03               	skipz
  6843  04E5  2CF6               	goto	u265lld
  6844  04E6  0AA2               	incf	(___aodiv@divisor+2)^(0+128),f
  6845  04E7  1D03               	skipz
  6846  04E8  2CF6               	goto	u265lld
  6847  04E9  0AA3               	incf	(___aodiv@divisor+3)^(0+128),f
  6848  04EA  1D03               	skipz
  6849  04EB  2CF6               	goto	u265lld
  6850  04EC  0AA4               	incf	(___aodiv@divisor+4)^(0+128),f
  6851  04ED  1D03               	skipz
  6852  04EE  2CF6               	goto	u265lld
  6853  04EF  0AA5               	incf	(___aodiv@divisor+5)^(0+128),f
  6854  04F0  1D03               	skipz
  6855  04F1  2CF6               	goto	u265lld
  6856  04F2  0AA6               	incf	(___aodiv@divisor+6)^(0+128),f
  6857  04F3  1D03               	skipz
  6858  04F4  2CF6               	goto	u265lld
  6859  04F5  0AA7               	incf	(___aodiv@divisor+7)^(0+128),f
  6860  04F6                     u265lld:	
  6861  04F6  0021               	movlb	1	; select bank1
  6862  04F7  01B1               	clrf	___aodiv@sign^(0+128)
  6863  04F8  0AB1               	incf	___aodiv@sign^(0+128),f
  6864  04F9                     l2753:	
  6865  04F9  30A8               	movlw	low ___aodiv@dividend
  6866  04FA  0086               	movwf	6
  6867  04FB  3000               	movlw	high ___aodiv@dividend
  6868  04FC  0087               	movwf	7
  6869  04FD  3F47               	moviw [7]fsr1
  6870  04FE  0020               	movlb	0	; select bank0
  6871  04FF  00BA               	movwf	??___aodiv
  6872  0500  1FBA               	btfss	??___aodiv,7
  6873  0501  2D27               	goto	l2759
  6874  0502  0021               	movlb	1	; select bank1
  6875  0503  09A8               	comf	___aodiv@dividend^(0+128),f
  6876  0504  09A9               	comf	(___aodiv@dividend+1)^(0+128),f
  6877  0505  09AA               	comf	(___aodiv@dividend+2)^(0+128),f
  6878  0506  09AB               	comf	(___aodiv@dividend+3)^(0+128),f
  6879  0507  09AC               	comf	(___aodiv@dividend+4)^(0+128),f
  6880  0508  09AD               	comf	(___aodiv@dividend+5)^(0+128),f
  6881  0509  09AE               	comf	(___aodiv@dividend+6)^(0+128),f
  6882  050A  09AF               	comf	(___aodiv@dividend+7)^(0+128),f
  6883  050B  0AA8               	incf	___aodiv@dividend^(0+128),f
  6884  050C  1D03               	skipz
  6885  050D  2D21               	goto	l2757
  6886  050E  0AA9               	incf	(___aodiv@dividend+1)^(0+128),f
  6887  050F  1D03               	skipz
  6888  0510  2D21               	goto	l2757
  6889  0511  0AAA               	incf	(___aodiv@dividend+2)^(0+128),f
  6890  0512  1D03               	skipz
  6891  0513  2D21               	goto	l2757
  6892  0514  0AAB               	incf	(___aodiv@dividend+3)^(0+128),f
  6893  0515  1D03               	skipz
  6894  0516  2D21               	goto	l2757
  6895  0517  0AAC               	incf	(___aodiv@dividend+4)^(0+128),f
  6896  0518  1D03               	skipz
  6897  0519  2D21               	goto	l2757
  6898  051A  0AAD               	incf	(___aodiv@dividend+5)^(0+128),f
  6899  051B  1D03               	skipz
  6900  051C  2D21               	goto	l2757
  6901  051D  0AAE               	incf	(___aodiv@dividend+6)^(0+128),f
  6902  051E  1D03               	skipz
  6903  051F  2D21               	goto	l2757
  6904  0520  0AAF               	incf	(___aodiv@dividend+7)^(0+128),f
  6905  0521                     l2757:	
  6906  0521  3001               	movlw	1
  6907  0522  0020               	movlb	0	; select bank0
  6908  0523  00BA               	movwf	??___aodiv
  6909  0524  083A               	movf	??___aodiv,w
  6910  0525  0021               	movlb	1	; select bank1
  6911  0526  06B1               	xorwf	___aodiv@sign^(0+128),f
  6912  0527                     l2759:	
  6913  0527  30B2               	movlw	low ___aodiv@quotient
  6914  0528  0086               	movwf	6
  6915  0529  3000               	movlw	high ___aodiv@quotient
  6916  052A  0087               	movwf	7
  6917  052B  3008               	movlw	8
  6918  052C  0020               	movlb	0	; select bank0
  6919  052D  00BA               	movwf	??___aodiv
  6920  052E  3000               	movlw	0
  6921  052F                     u2680:	
  6922  052F  001E               	movwi fsr1++
  6923  0530  0BBA               	decfsz	??___aodiv,f
  6924  0531  2D2F               	goto	u2680
  6925  0532  0021               	movlb	1	; select bank1
  6926  0533  0820               	movf	___aodiv@divisor^(0+128),w
  6927  0534  0421               	iorwf	(___aodiv@divisor+1)^(0+128),w
  6928  0535  0422               	iorwf	(___aodiv@divisor+2)^(0+128),w
  6929  0536  0423               	iorwf	(___aodiv@divisor+3)^(0+128),w
  6930  0537  0424               	iorwf	(___aodiv@divisor+4)^(0+128),w
  6931  0538  0425               	iorwf	(___aodiv@divisor+5)^(0+128),w
  6932  0539  0426               	iorwf	(___aodiv@divisor+6)^(0+128),w
  6933  053A  0427               	iorwf	(___aodiv@divisor+7)^(0+128),w
  6934  053B  1903               	skipnz
  6935  053C  2D95               	goto	l2781
  6936  053D  01B0               	clrf	___aodiv@counter^(0+128)
  6937  053E  0AB0               	incf	___aodiv@counter^(0+128),f
  6938  053F                     l2769:	
  6939  053F  1BA7               	btfsc	(___aodiv@divisor+7)^(0+128),7
  6940  0540  2D50               	goto	l2771
  6941  0541  35A0               	lslf	___aodiv@divisor^(0+128),f
  6942  0542  0DA1               	rlf	(___aodiv@divisor+1)^(0+128),f
  6943  0543  0DA2               	rlf	(___aodiv@divisor+2)^(0+128),f
  6944  0544  0DA3               	rlf	(___aodiv@divisor+3)^(0+128),f
  6945  0545  0DA4               	rlf	(___aodiv@divisor+4)^(0+128),f
  6946  0546  0DA5               	rlf	(___aodiv@divisor+5)^(0+128),f
  6947  0547  0DA6               	rlf	(___aodiv@divisor+6)^(0+128),f
  6948  0548  0DA7               	rlf	(___aodiv@divisor+7)^(0+128),f
  6949  0549  3001               	movlw	1
  6950  054A  0020               	movlb	0	; select bank0
  6951  054B  00BA               	movwf	??___aodiv
  6952  054C  083A               	movf	??___aodiv,w
  6953  054D  0021               	movlb	1	; select bank1
  6954  054E  07B0               	addwf	___aodiv@counter^(0+128),f
  6955  054F  2D3F               	goto	l2769
  6956  0550                     l2771:	
  6957  0550  35B2               	lslf	___aodiv@quotient^(0+128),f
  6958  0551  0DB3               	rlf	(___aodiv@quotient+1)^(0+128),f
  6959  0552  0DB4               	rlf	(___aodiv@quotient+2)^(0+128),f
  6960  0553  0DB5               	rlf	(___aodiv@quotient+3)^(0+128),f
  6961  0554  0DB6               	rlf	(___aodiv@quotient+4)^(0+128),f
  6962  0555  0DB7               	rlf	(___aodiv@quotient+5)^(0+128),f
  6963  0556  0DB8               	rlf	(___aodiv@quotient+6)^(0+128),f
  6964  0557  0DB9               	rlf	(___aodiv@quotient+7)^(0+128),f
  6965  0558  0827               	movf	(___aodiv@divisor+7)^(0+128),w
  6966  0559  022F               	subwf	(___aodiv@dividend+7)^(0+128),w
  6967  055A  1D03               	skipz
  6968  055B  2D76               	goto	u2715
  6969  055C  0826               	movf	(___aodiv@divisor+6)^(0+128),w
  6970  055D  022E               	subwf	(___aodiv@dividend+6)^(0+128),w
  6971  055E  1D03               	skipz
  6972  055F  2D76               	goto	u2715
  6973  0560  0825               	movf	(___aodiv@divisor+5)^(0+128),w
  6974  0561  022D               	subwf	(___aodiv@dividend+5)^(0+128),w
  6975  0562  1D03               	skipz
  6976  0563  2D76               	goto	u2715
  6977  0564  0824               	movf	(___aodiv@divisor+4)^(0+128),w
  6978  0565  022C               	subwf	(___aodiv@dividend+4)^(0+128),w
  6979  0566  1D03               	skipz
  6980  0567  2D76               	goto	u2715
  6981  0568  0823               	movf	(___aodiv@divisor+3)^(0+128),w
  6982  0569  022B               	subwf	(___aodiv@dividend+3)^(0+128),w
  6983  056A  1D03               	skipz
  6984  056B  2D76               	goto	u2715
  6985  056C  0822               	movf	(___aodiv@divisor+2)^(0+128),w
  6986  056D  022A               	subwf	(___aodiv@dividend+2)^(0+128),w
  6987  056E  1D03               	skipz
  6988  056F  2D76               	goto	u2715
  6989  0570  0821               	movf	(___aodiv@divisor+1)^(0+128),w
  6990  0571  0229               	subwf	(___aodiv@dividend+1)^(0+128),w
  6991  0572  1D03               	skipz
  6992  0573  2D76               	goto	u2715
  6993  0574  0820               	movf	___aodiv@divisor^(0+128),w
  6994  0575  0228               	subwf	___aodiv@dividend^(0+128),w
  6995  0576                     u2715:	
  6996  0576  1C03               	skipc
  6997  0577  2D89               	goto	l2779
  6998  0578  0820               	movf	___aodiv@divisor^(0+128),w
  6999  0579  02A8               	subwf	___aodiv@dividend^(0+128),f
  7000  057A  0821               	movf	(___aodiv@divisor+1)^(0+128),w
  7001  057B  3BA9               	subwfb	(___aodiv@dividend+1)^(0+128),f
  7002  057C  0822               	movf	(___aodiv@divisor+2)^(0+128),w
  7003  057D  3BAA               	subwfb	(___aodiv@dividend+2)^(0+128),f
  7004  057E  0823               	movf	(___aodiv@divisor+3)^(0+128),w
  7005  057F  3BAB               	subwfb	(___aodiv@dividend+3)^(0+128),f
  7006  0580  0824               	movf	(___aodiv@divisor+4)^(0+128),w
  7007  0581  3BAC               	subwfb	(___aodiv@dividend+4)^(0+128),f
  7008  0582  0825               	movf	(___aodiv@divisor+5)^(0+128),w
  7009  0583  3BAD               	subwfb	(___aodiv@dividend+5)^(0+128),f
  7010  0584  0826               	movf	(___aodiv@divisor+6)^(0+128),w
  7011  0585  3BAE               	subwfb	(___aodiv@dividend+6)^(0+128),f
  7012  0586  0827               	movf	(___aodiv@divisor+7)^(0+128),w
  7013  0587  3BAF               	subwfb	(___aodiv@dividend+7)^(0+128),f
  7014  0588  1432               	bsf	___aodiv@quotient^(0+128),0
  7015  0589                     l2779:	
  7016  0589  36A7               	lsrf	(___aodiv@divisor+7)^(0+128),f
  7017  058A  0CA6               	rrf	(___aodiv@divisor+6)^(0+128),f
  7018  058B  0CA5               	rrf	(___aodiv@divisor+5)^(0+128),f
  7019  058C  0CA4               	rrf	(___aodiv@divisor+4)^(0+128),f
  7020  058D  0CA3               	rrf	(___aodiv@divisor+3)^(0+128),f
  7021  058E  0CA2               	rrf	(___aodiv@divisor+2)^(0+128),f
  7022  058F  0CA1               	rrf	(___aodiv@divisor+1)^(0+128),f
  7023  0590  0CA0               	rrf	___aodiv@divisor^(0+128),f
  7024  0591  3001               	movlw	1
  7025  0592  02B0               	subwf	___aodiv@counter^(0+128),f
  7026  0593  1D03               	btfss	3,2
  7027  0594  2D50               	goto	l2771
  7028  0595                     l2781:	
  7029  0595  0831               	movf	___aodiv@sign^(0+128),w
  7030  0596  1903               	btfsc	3,2
  7031  0597  2DB6               	goto	l630
  7032  0598  09B2               	comf	___aodiv@quotient^(0+128),f
  7033  0599  09B3               	comf	(___aodiv@quotient+1)^(0+128),f
  7034  059A  09B4               	comf	(___aodiv@quotient+2)^(0+128),f
  7035  059B  09B5               	comf	(___aodiv@quotient+3)^(0+128),f
  7036  059C  09B6               	comf	(___aodiv@quotient+4)^(0+128),f
  7037  059D  09B7               	comf	(___aodiv@quotient+5)^(0+128),f
  7038  059E  09B8               	comf	(___aodiv@quotient+6)^(0+128),f
  7039  059F  09B9               	comf	(___aodiv@quotient+7)^(0+128),f
  7040  05A0  0AB2               	incf	___aodiv@quotient^(0+128),f
  7041  05A1  1D03               	skipz
  7042  05A2  2DB6               	goto	l630
  7043  05A3  0AB3               	incf	(___aodiv@quotient+1)^(0+128),f
  7044  05A4  1D03               	skipz
  7045  05A5  2DB6               	goto	l630
  7046  05A6  0AB4               	incf	(___aodiv@quotient+2)^(0+128),f
  7047  05A7  1D03               	skipz
  7048  05A8  2DB6               	goto	l630
  7049  05A9  0AB5               	incf	(___aodiv@quotient+3)^(0+128),f
  7050  05AA  1D03               	skipz
  7051  05AB  2DB6               	goto	l630
  7052  05AC  0AB6               	incf	(___aodiv@quotient+4)^(0+128),f
  7053  05AD  1D03               	skipz
  7054  05AE  2DB6               	goto	l630
  7055  05AF  0AB7               	incf	(___aodiv@quotient+5)^(0+128),f
  7056  05B0  1D03               	skipz
  7057  05B1  2DB6               	goto	l630
  7058  05B2  0AB8               	incf	(___aodiv@quotient+6)^(0+128),f
  7059  05B3  1D03               	skipz
  7060  05B4  2DB6               	goto	l630
  7061  05B5  0AB9               	incf	(___aodiv@quotient+7)^(0+128),f
  7062  05B6                     l630:	
  7063  05B6  0021               	movlb	1	; select bank1
  7064  05B7  0832               	movf	___aodiv@quotient^(0+128),w
  7065  05B8  00A0               	movwf	?___aodiv^(0+128)
  7066  05B9  0833               	movf	(___aodiv@quotient+1)^(0+128),w
  7067  05BA  00A1               	movwf	(?___aodiv+1)^(0+128)
  7068  05BB  0834               	movf	(___aodiv@quotient+2)^(0+128),w
  7069  05BC  00A2               	movwf	(?___aodiv+2)^(0+128)
  7070  05BD  0835               	movf	(___aodiv@quotient+3)^(0+128),w
  7071  05BE  00A3               	movwf	(?___aodiv+3)^(0+128)
  7072  05BF  0836               	movf	(___aodiv@quotient+4)^(0+128),w
  7073  05C0  00A4               	movwf	(?___aodiv+4)^(0+128)
  7074  05C1  0837               	movf	(___aodiv@quotient+5)^(0+128),w
  7075  05C2  00A5               	movwf	(?___aodiv+5)^(0+128)
  7076  05C3  0838               	movf	(___aodiv@quotient+6)^(0+128),w
  7077  05C4  00A6               	movwf	(?___aodiv+6)^(0+128)
  7078  05C5  0839               	movf	(___aodiv@quotient+7)^(0+128),w
  7079  05C6  00A7               	movwf	(?___aodiv+7)^(0+128)
  7080  05C7  0008               	return
  7081  05C8                     __end_of___aodiv:	
  7082                           
  7083                           	psect	text17
  7084  0F8F                     __ptext17:	
  7085 ;; *************** function ___fltol *****************
  7086 ;; Defined at:
  7087 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
  7088 ;; Parameters:    Size  Location     Type
  7089 ;;  f1              4    0[BANK1 ] long long 
  7090 ;; Auto vars:     Size  Location     Type
  7091 ;;  exp1            1   27[BANK0 ] unsigned char 
  7092 ;;  sign1           1   26[BANK0 ] unsigned char 
  7093 ;; Return value:  Size  Location     Type
  7094 ;;                  4    0[BANK1 ] long 
  7095 ;; Registers used:
  7096 ;;		wreg, status,2, status,0
  7097 ;; Tracked objects:
  7098 ;;		On entry : 0/0
  7099 ;;		On exit  : 0/0
  7100 ;;		Unchanged: 0/0
  7101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7102 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  7103 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7104 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  7105 ;;      Totals:         0       2       9       0       0       0       0       0       0       0       0       0       
      +0       0
  7106 ;;Total ram usage:       11 bytes
  7107 ;; Hardware stack levels used:    1
  7108 ;; Hardware stack levels required when called:    6
  7109 ;; This function calls:
  7110 ;;		Nothing
  7111 ;; This function is called by:
  7112 ;;		_main
  7113 ;; This function uses a non-reentrant model
  7114 ;;
  7115                           
  7116                           
  7117                           ;psect for function ___fltol
  7118  0F8F                     ___fltol:	
  7119                           
  7120                           ;incstack = 0
  7121                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7122  0F8F  1003               	clrc
  7123  0F90  0021               	movlb	1	; select bank1
  7124  0F91  0D22               	rlf	(___fltol@f1+2)^(0+128),w
  7125  0F92  0D23               	rlf	(___fltol@f1+3)^(0+128),w
  7126  0F93  00A4               	movwf	??___fltol^(0+128)
  7127  0F94  0824               	movf	??___fltol^(0+128),w
  7128  0F95  0020               	movlb	0	; select bank0
  7129  0F96  00BB               	movwf	___fltol@exp1
  7130  0F97  083B               	movf	___fltol@exp1,w
  7131  0F98  1D03               	btfss	3,2
  7132  0F99  2FA4               	goto	l3017
  7133  0F9A                     l3013:	
  7134  0F9A  3000               	movlw	0
  7135  0F9B  0021               	movlb	1	; select bank1
  7136  0F9C  00A3               	movwf	(?___fltol+3)^(0+128)
  7137  0F9D  3000               	movlw	0
  7138  0F9E  00A2               	movwf	(?___fltol+2)^(0+128)
  7139  0F9F  3000               	movlw	0
  7140  0FA0  00A1               	movwf	(?___fltol+1)^(0+128)
  7141  0FA1  3000               	movlw	0
  7142  0FA2  00A0               	movwf	?___fltol^(0+128)
  7143  0FA3  0008               	return
  7144  0FA4                     l3017:	
  7145  0FA4  0021               	movlb	1	; select bank1
  7146  0FA5  0820               	movf	___fltol@f1^(0+128),w
  7147  0FA6  00A4               	movwf	??___fltol^(0+128)
  7148  0FA7  0821               	movf	(___fltol@f1+1)^(0+128),w
  7149  0FA8  00A5               	movwf	(??___fltol^(0+128)+1)
  7150  0FA9  0822               	movf	(___fltol@f1+2)^(0+128),w
  7151  0FAA  00A6               	movwf	(??___fltol^(0+128)+2)
  7152  0FAB  0823               	movf	(___fltol@f1+3)^(0+128),w
  7153  0FAC  00A7               	movwf	(??___fltol^(0+128)+3)
  7154  0FAD  301F               	movlw	31
  7155  0FAE                     u3115:	
  7156  0FAE  36A7               	lsrf	(??___fltol^(0+128)+3),f
  7157  0FAF  0CA6               	rrf	(??___fltol^(0+128)+2),f
  7158  0FB0  0CA5               	rrf	(??___fltol^(0+128)+1),f
  7159  0FB1  0CA4               	rrf	??___fltol^(0+128),f
  7160  0FB2  0B89               	decfsz	9,f
  7161  0FB3  2FAE               	goto	u3115
  7162  0FB4  0824               	movf	??___fltol^(0+128),w
  7163  0FB5  00A8               	movwf	(??___fltol+4)^(0+128)
  7164  0FB6  0828               	movf	(??___fltol+4)^(0+128),w
  7165  0FB7  0020               	movlb	0	; select bank0
  7166  0FB8  00BA               	movwf	___fltol@sign1
  7167  0FB9  0021               	movlb	1	; select bank1
  7168  0FBA  17A2               	bsf	(___fltol@f1^(0+128)+2),7
  7169  0FBB  30FF               	movlw	255
  7170  0FBC  05A0               	andwf	___fltol@f1^(0+128),f
  7171  0FBD  30FF               	movlw	255
  7172  0FBE  05A1               	andwf	(___fltol@f1+1)^(0+128),f
  7173  0FBF  30FF               	movlw	255
  7174  0FC0  05A2               	andwf	(___fltol@f1+2)^(0+128),f
  7175  0FC1  3000               	movlw	0
  7176  0FC2  05A3               	andwf	(___fltol@f1+3)^(0+128),f
  7177  0FC3  3096               	movlw	150
  7178  0FC4  0020               	movlb	0	; select bank0
  7179  0FC5  02BB               	subwf	___fltol@exp1,f
  7180  0FC6  1FBB               	btfss	___fltol@exp1,7
  7181  0FC7  2FDD               	goto	l3035
  7182  0FC8  083B               	movf	___fltol@exp1,w
  7183  0FC9  3A80               	xorlw	128
  7184  0FCA  3E97               	addlw	151
  7185  0FCB  1C03               	btfss	3,0
  7186  0FCC  2F9A               	goto	l3013
  7187  0FCD                     l3033:	
  7188  0FCD  3001               	movlw	1
  7189  0FCE                     u3145:	
  7190  0FCE  0021               	movlb	1	; select bank1
  7191  0FCF  36A3               	lsrf	(___fltol@f1+3)^(0+128),f
  7192  0FD0  0CA2               	rrf	(___fltol@f1+2)^(0+128),f
  7193  0FD1  0CA1               	rrf	(___fltol@f1+1)^(0+128),f
  7194  0FD2  0CA0               	rrf	___fltol@f1^(0+128),f
  7195  0FD3  0B89               	decfsz	9,f
  7196  0FD4  2FCE               	goto	u3145
  7197  0FD5  3001               	movlw	1
  7198  0FD6  00A4               	movwf	??___fltol^(0+128)
  7199  0FD7  0824               	movf	??___fltol^(0+128),w
  7200  0FD8  0020               	movlb	0	; select bank0
  7201  0FD9  07BB               	addwf	___fltol@exp1,f
  7202  0FDA  1903               	btfsc	3,2
  7203  0FDB  2FF0               	goto	l3043
  7204  0FDC  2FCD               	goto	l3033
  7205  0FDD                     l3035:	
  7206  0FDD  3020               	movlw	32
  7207  0FDE  023B               	subwf	___fltol@exp1,w
  7208  0FDF  1803               	btfsc	3,0
  7209  0FE0  2F9A               	goto	l3013
  7210  0FE1                     l731:	
  7211  0FE1  083B               	movf	___fltol@exp1,w
  7212  0FE2  1903               	btfsc	3,2
  7213  0FE3  2FF0               	goto	l3043
  7214  0FE4  3001               	movlw	1
  7215  0FE5                     u3175:	
  7216  0FE5  0021               	movlb	1	; select bank1
  7217  0FE6  35A0               	lslf	___fltol@f1^(0+128),f
  7218  0FE7  0DA1               	rlf	(___fltol@f1+1)^(0+128),f
  7219  0FE8  0DA2               	rlf	(___fltol@f1+2)^(0+128),f
  7220  0FE9  0DA3               	rlf	(___fltol@f1+3)^(0+128),f
  7221  0FEA  0B89               	decfsz	9,f
  7222  0FEB  2FE5               	goto	u3175
  7223  0FEC  3001               	movlw	1
  7224  0FED  0020               	movlb	0	; select bank0
  7225  0FEE  02BB               	subwf	___fltol@exp1,f
  7226  0FEF  2FE1               	goto	l731
  7227  0FF0                     l3043:	
  7228  0FF0  083A               	movf	___fltol@sign1,w
  7229  0FF1  1903               	btfsc	3,2
  7230  0FF2  0008               	return
  7231  0FF3  0021               	movlb	1	; select bank1
  7232  0FF4  09A0               	comf	___fltol@f1^(0+128),f
  7233  0FF5  09A1               	comf	(___fltol@f1+1)^(0+128),f
  7234  0FF6  09A2               	comf	(___fltol@f1+2)^(0+128),f
  7235  0FF7  09A3               	comf	(___fltol@f1+3)^(0+128),f
  7236  0FF8  0AA0               	incf	___fltol@f1^(0+128),f
  7237  0FF9  1903               	skipnz
  7238  0FFA  0AA1               	incf	(___fltol@f1+1)^(0+128),f
  7239  0FFB  1903               	skipnz
  7240  0FFC  0AA2               	incf	(___fltol@f1+2)^(0+128),f
  7241  0FFD  1903               	skipnz
  7242  0FFE  0AA3               	incf	(___fltol@f1+3)^(0+128),f
  7243  0FFF  0008               	return
  7244  1000                     __end_of___fltol:	
  7245                           
  7246                           	psect	text18
  7247  0D19                     __ptext18:	
  7248 ;; *************** function _SYSTEM_Initialize *****************
  7249 ;; Defined at:
  7250 ;;		line 4 in file "mcc_generated_files/mcc.c"
  7251 ;; Parameters:    Size  Location     Type
  7252 ;;		None
  7253 ;; Auto vars:     Size  Location     Type
  7254 ;;		None
  7255 ;; Return value:  Size  Location     Type
  7256 ;;                  1    wreg      void 
  7257 ;; Registers used:
  7258 ;;		wreg, status,2, status,0, pclath, cstack
  7259 ;; Tracked objects:
  7260 ;;		On entry : 0/0
  7261 ;;		On exit  : 0/0
  7262 ;;		Unchanged: 0/0
  7263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7268 ;;Total ram usage:        0 bytes
  7269 ;; Hardware stack levels used:    1
  7270 ;; Hardware stack levels required when called:    8
  7271 ;; This function calls:
  7272 ;;		_ADC_Initialize
  7273 ;;		_EUSART_Initialize
  7274 ;;		_OSCILLATOR_Initialize
  7275 ;;		_PIN_MANAGER_Initialize
  7276 ;;		_TMR0_Initialize
  7277 ;; This function is called by:
  7278 ;;		_main
  7279 ;; This function uses a non-reentrant model
  7280 ;;
  7281                           
  7282                           
  7283                           ;psect for function _SYSTEM_Initialize
  7284  0D19                     _SYSTEM_Initialize:	
  7285                           
  7286                           ;mcc_generated_files/mcc.c: 6:     PIN_MANAGER_Initialize();
  7287                           
  7288                           ;incstack = 0
  7289                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7290  0D19  318E  262E  318D   	fcall	_PIN_MANAGER_Initialize
  7291                           
  7292                           ;mcc_generated_files/mcc.c: 7:     OSCILLATOR_Initialize();
  7293  0D1C  318C  24B1  318D   	fcall	_OSCILLATOR_Initialize
  7294                           
  7295                           ;mcc_generated_files/mcc.c: 8:     ADC_Initialize();
  7296  0D1F  318C  24B8  318D   	fcall	_ADC_Initialize
  7297                           
  7298                           ;mcc_generated_files/mcc.c: 9:     TMR0_Initialize();
  7299  0D22  318D  2550  318D   	fcall	_TMR0_Initialize
  7300                           
  7301                           ;mcc_generated_files/mcc.c: 10:     EUSART_Initialize();
  7302  0D25  3187  27D9         	fcall	_EUSART_Initialize
  7303  0D27  0008               	return
  7304  0D28                     __end_of_SYSTEM_Initialize:	
  7305                           
  7306                           	psect	text19
  7307  0D50                     __ptext19:	
  7308 ;; *************** function _TMR0_Initialize *****************
  7309 ;; Defined at:
  7310 ;;		line 18 in file "mcc_generated_files/tmr0.c"
  7311 ;; Parameters:    Size  Location     Type
  7312 ;;		None
  7313 ;; Auto vars:     Size  Location     Type
  7314 ;;		None
  7315 ;; Return value:  Size  Location     Type
  7316 ;;                  1    wreg      void 
  7317 ;; Registers used:
  7318 ;;		wreg, status,2, status,0, pclath, cstack
  7319 ;; Tracked objects:
  7320 ;;		On entry : 0/0
  7321 ;;		On exit  : 0/0
  7322 ;;		Unchanged: 0/0
  7323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7326 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7327 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7328 ;;Total ram usage:        1 bytes
  7329 ;; Hardware stack levels used:    1
  7330 ;; Hardware stack levels required when called:    7
  7331 ;; This function calls:
  7332 ;;		_TMR0_SetInterruptHandler
  7333 ;; This function is called by:
  7334 ;;		_SYSTEM_Initialize
  7335 ;; This function uses a non-reentrant model
  7336 ;;
  7337                           
  7338                           
  7339                           ;psect for function _TMR0_Initialize
  7340  0D50                     _TMR0_Initialize:	
  7341                           
  7342                           ;mcc_generated_files/tmr0.c: 23:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD7 
      +                          & 0x3F));
  7343                           
  7344                           ;incstack = 0
  7345                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7346  0D50  0021               	movlb	1	; select bank1
  7347  0D51  0815               	movf	21,w	;volatile
  7348  0D52  39C0               	andlw	192
  7349  0D53  3817               	iorlw	23
  7350  0D54  0095               	movwf	21	;volatile
  7351                           
  7352                           ;mcc_generated_files/tmr0.c: 26:     TMR0 = 0xF3;
  7353  0D55  30F3               	movlw	243
  7354  0D56  0020               	movlb	0	; select bank0
  7355  0D57  0095               	movwf	21	;volatile
  7356                           
  7357                           ;mcc_generated_files/tmr0.c: 29:     timer0ReloadVal= 243;
  7358  0D58  30F3               	movlw	243
  7359  0D59  0021               	movlb	1	; select bank1
  7360  0D5A  00A0               	movwf	??_TMR0_Initialize^(0+128)
  7361  0D5B  0820               	movf	??_TMR0_Initialize^(0+128),w
  7362  0D5C  0020               	movlb	0	; select bank0
  7363  0D5D  00D5               	movwf	_timer0ReloadVal	;volatile
  7364                           
  7365                           ;mcc_generated_files/tmr0.c: 32:     INTCONbits.TMR0IF = 0;
  7366  0D5E  110B               	bcf	11,2	;volatile
  7367                           
  7368                           ;mcc_generated_files/tmr0.c: 35:     INTCONbits.TMR0IE = 1;
  7369  0D5F  168B               	bsf	11,5	;volatile
  7370                           
  7371                           ;mcc_generated_files/tmr0.c: 38:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  7372  0D60  30FD               	movlw	low _TMR0_DefaultInterruptHandler
  7373  0D61  00BA               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  7374  0D62  3007               	movlw	high _TMR0_DefaultInterruptHandler
  7375  0D63  00BB               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  7376  0D64  318C  24F4         	fcall	_TMR0_SetInterruptHandler
  7377  0D66  0008               	return
  7378  0D67                     __end_of_TMR0_Initialize:	
  7379                           
  7380                           	psect	text20
  7381  0CF4                     __ptext20:	
  7382 ;; *************** function _TMR0_SetInterruptHandler *****************
  7383 ;; Defined at:
  7384 ;;		line 79 in file "mcc_generated_files/tmr0.c"
  7385 ;; Parameters:    Size  Location     Type
  7386 ;;  InterruptHan    2   26[BANK0 ] PTR FTN()void 
  7387 ;;		 -> timerISR(1), TMR0_DefaultInterruptHandler(1), 
  7388 ;; Auto vars:     Size  Location     Type
  7389 ;;		None
  7390 ;; Return value:  Size  Location     Type
  7391 ;;                  1    wreg      void 
  7392 ;; Registers used:
  7393 ;;		wreg
  7394 ;; Tracked objects:
  7395 ;;		On entry : 0/0
  7396 ;;		On exit  : 0/0
  7397 ;;		Unchanged: 0/0
  7398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7399 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7402 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7403 ;;Total ram usage:        2 bytes
  7404 ;; Hardware stack levels used:    1
  7405 ;; Hardware stack levels required when called:    6
  7406 ;; This function calls:
  7407 ;;		Nothing
  7408 ;; This function is called by:
  7409 ;;		_TMR0_Initialize
  7410 ;;		_main
  7411 ;; This function uses a non-reentrant model
  7412 ;;
  7413                           
  7414                           
  7415                           ;psect for function _TMR0_SetInterruptHandler
  7416  0CF4                     _TMR0_SetInterruptHandler:	
  7417                           
  7418                           ;mcc_generated_files/tmr0.c: 80:     TMR0_InterruptHandler = InterruptHandler;
  7419                           
  7420                           ;incstack = 0
  7421                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  7422  0CF4  0020               	movlb	0	; select bank0
  7423  0CF5  083B               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  7424  0CF6  0021               	movlb	1	; select bank1
  7425  0CF7  00ED               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
  7426  0CF8  0020               	movlb	0	; select bank0
  7427  0CF9  083A               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  7428  0CFA  0021               	movlb	1	; select bank1
  7429  0CFB  00EC               	movwf	_TMR0_InterruptHandler^(0+128)
  7430  0CFC  0008               	return
  7431  0CFD                     __end_of_TMR0_SetInterruptHandler:	
  7432                           
  7433                           	psect	text21
  7434  0E2E                     __ptext21:	
  7435 ;; *************** function _PIN_MANAGER_Initialize *****************
  7436 ;; Defined at:
  7437 ;;		line 6 in file "mcc_generated_files/pin_manager.c"
  7438 ;; Parameters:    Size  Location     Type
  7439 ;;		None
  7440 ;; Auto vars:     Size  Location     Type
  7441 ;;		None
  7442 ;; Return value:  Size  Location     Type
  7443 ;;                  1    wreg      void 
  7444 ;; Registers used:
  7445 ;;		wreg, status,2, status,0, pclath, cstack
  7446 ;; Tracked objects:
  7447 ;;		On entry : 0/0
  7448 ;;		On exit  : 0/0
  7449 ;;		Unchanged: 0/0
  7450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7454 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7455 ;;Total ram usage:        0 bytes
  7456 ;; Hardware stack levels used:    1
  7457 ;; Hardware stack levels required when called:    7
  7458 ;; This function calls:
  7459 ;;		_IOCCF7_SetInterruptHandler
  7460 ;; This function is called by:
  7461 ;;		_SYSTEM_Initialize
  7462 ;; This function uses a non-reentrant model
  7463 ;;
  7464                           
  7465                           
  7466                           ;psect for function _PIN_MANAGER_Initialize
  7467  0E2E                     _PIN_MANAGER_Initialize:	
  7468                           
  7469                           ;mcc_generated_files/pin_manager.c: 11:     LATA = 0x00;
  7470                           
  7471                           ;incstack = 0
  7472                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7473  0E2E  0022               	movlb	2	; select bank2
  7474  0E2F  018C               	clrf	12	;volatile
  7475                           
  7476                           ;mcc_generated_files/pin_manager.c: 12:     LATB = 0x00;
  7477  0E30  018D               	clrf	13	;volatile
  7478                           
  7479                           ;mcc_generated_files/pin_manager.c: 13:     LATC = 0x00;
  7480  0E31  018E               	clrf	14	;volatile
  7481                           
  7482                           ;mcc_generated_files/pin_manager.c: 18:     TRISA = 0x37;
  7483  0E32  3037               	movlw	55
  7484  0E33  0021               	movlb	1	; select bank1
  7485  0E34  008C               	movwf	12	;volatile
  7486                           
  7487                           ;mcc_generated_files/pin_manager.c: 19:     TRISB = 0x70;
  7488  0E35  3070               	movlw	112
  7489  0E36  008D               	movwf	13	;volatile
  7490                           
  7491                           ;mcc_generated_files/pin_manager.c: 20:     TRISC = 0xFF;
  7492  0E37  30FF               	movlw	255
  7493  0E38  008E               	movwf	14	;volatile
  7494                           
  7495                           ;mcc_generated_files/pin_manager.c: 25:     ANSELC = 0x4F;
  7496  0E39  304F               	movlw	79
  7497  0E3A  0023               	movlb	3	; select bank3
  7498  0E3B  008E               	movwf	14	;volatile
  7499                           
  7500                           ;mcc_generated_files/pin_manager.c: 26:     ANSELB = 0x70;
  7501  0E3C  3070               	movlw	112
  7502  0E3D  008D               	movwf	13	;volatile
  7503                           
  7504                           ;mcc_generated_files/pin_manager.c: 27:     ANSELA = 0x17;
  7505  0E3E  3017               	movlw	23
  7506  0E3F  008C               	movwf	12	;volatile
  7507                           
  7508                           ;mcc_generated_files/pin_manager.c: 32:     WPUB = 0x00;
  7509  0E40  0024               	movlb	4	; select bank4
  7510  0E41  018D               	clrf	13	;volatile
  7511                           
  7512                           ;mcc_generated_files/pin_manager.c: 33:     WPUA = 0x00;
  7513  0E42  018C               	clrf	12	;volatile
  7514                           
  7515                           ;mcc_generated_files/pin_manager.c: 35:     WPUC = 0x80;
  7516  0E43  3080               	movlw	128
  7517  0E44  008E               	movwf	14	;volatile
  7518                           
  7519                           ;mcc_generated_files/pin_manager.c: 36:     OPTION_REGbits.nWPUEN = 0;
  7520  0E45  0021               	movlb	1	; select bank1
  7521  0E46  1395               	bcf	21,7	;volatile
  7522                           
  7523                           ;mcc_generated_files/pin_manager.c: 41:     ODCONA = 0x00;
  7524  0E47  0025               	movlb	5	; select bank5
  7525  0E48  018C               	clrf	12	;volatile
  7526                           
  7527                           ;mcc_generated_files/pin_manager.c: 42:     ODCONB = 0x00;
  7528  0E49  018D               	clrf	13	;volatile
  7529                           
  7530                           ;mcc_generated_files/pin_manager.c: 43:     ODCONC = 0x00;
  7531  0E4A  018E               	clrf	14	;volatile
  7532                           
  7533                           ;mcc_generated_files/pin_manager.c: 48:     SLRCONA = 0x37;
  7534  0E4B  3037               	movlw	55
  7535  0E4C  0026               	movlb	6	; select bank6
  7536  0E4D  008C               	movwf	12	;volatile
  7537                           
  7538                           ;mcc_generated_files/pin_manager.c: 49:     SLRCONB = 0xF0;
  7539  0E4E  30F0               	movlw	240
  7540  0E4F  008D               	movwf	13	;volatile
  7541                           
  7542                           ;mcc_generated_files/pin_manager.c: 50:     SLRCONC = 0xFF;
  7543  0E50  30FF               	movlw	255
  7544  0E51  008E               	movwf	14	;volatile
  7545                           
  7546                           ;mcc_generated_files/pin_manager.c: 57:     IOCCFbits.IOCCF7 = 0;
  7547  0E52  0027               	movlb	7	; select bank7
  7548  0E53  1399               	bcf	25,7	;volatile
  7549                           
  7550                           ;mcc_generated_files/pin_manager.c: 59:     IOCCNbits.IOCCN7 = 0;
  7551  0E54  1398               	bcf	24,7	;volatile
  7552                           
  7553                           ;mcc_generated_files/pin_manager.c: 61:     IOCCPbits.IOCCP7 = 1;
  7554  0E55  1797               	bsf	23,7	;volatile
  7555                           
  7556                           ;mcc_generated_files/pin_manager.c: 64:     SLRC7 = 0;
  7557  0E56  0026               	movlb	6	; select bank6
  7558  0E57  138E               	bcf	14,7	;volatile
  7559                           
  7560                           ;mcc_generated_files/pin_manager.c: 67:     INLVLC7 = 1 ;
  7561  0E58  0027               	movlb	7	; select bank7
  7562  0E59  178E               	bsf	14,7	;volatile
  7563                           
  7564                           ;mcc_generated_files/pin_manager.c: 70:     IOCCF7_SetInterruptHandler(IOCCF7_DefaultInt
      +                          erruptHandler);
  7565  0E5A  30FE               	movlw	low _IOCCF7_DefaultInterruptHandler
  7566  0E5B  0020               	movlb	0	; select bank0
  7567  0E5C  00BA               	movwf	IOCCF7_SetInterruptHandler@InterruptHandler
  7568  0E5D  3007               	movlw	high _IOCCF7_DefaultInterruptHandler
  7569  0E5E  00BB               	movwf	IOCCF7_SetInterruptHandler@InterruptHandler+1
  7570  0E5F  318C  24EB         	fcall	_IOCCF7_SetInterruptHandler
  7571                           
  7572                           ;mcc_generated_files/pin_manager.c: 73:     INTCONbits.IOCIE = 1;
  7573  0E61  158B               	bsf	11,3	;volatile
  7574                           
  7575                           ;mcc_generated_files/pin_manager.c: 76:     RB7PPS = 0x12;
  7576  0E62  3012               	movlw	18
  7577  0E63  003D               	movlb	29	; select bank29
  7578  0E64  009F               	movwf	31	;volatile
  7579  0E65  0008               	return
  7580  0E66                     __end_of_PIN_MANAGER_Initialize:	
  7581                           
  7582                           	psect	text22
  7583  0CEB                     __ptext22:	
  7584 ;; *************** function _IOCCF7_SetInterruptHandler *****************
  7585 ;; Defined at:
  7586 ;;		line 106 in file "mcc_generated_files/pin_manager.c"
  7587 ;; Parameters:    Size  Location     Type
  7588 ;;  InterruptHan    2   26[BANK0 ] PTR FTN()void 
  7589 ;;		 -> speedCalc(1), IOCCF7_DefaultInterruptHandler(1), 
  7590 ;; Auto vars:     Size  Location     Type
  7591 ;;		None
  7592 ;; Return value:  Size  Location     Type
  7593 ;;                  1    wreg      void 
  7594 ;; Registers used:
  7595 ;;		wreg
  7596 ;; Tracked objects:
  7597 ;;		On entry : 0/0
  7598 ;;		On exit  : 0/0
  7599 ;;		Unchanged: 0/0
  7600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7601 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7604 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7605 ;;Total ram usage:        2 bytes
  7606 ;; Hardware stack levels used:    1
  7607 ;; Hardware stack levels required when called:    6
  7608 ;; This function calls:
  7609 ;;		Nothing
  7610 ;; This function is called by:
  7611 ;;		_PIN_MANAGER_Initialize
  7612 ;;		_main
  7613 ;; This function uses a non-reentrant model
  7614 ;;
  7615                           
  7616                           
  7617                           ;psect for function _IOCCF7_SetInterruptHandler
  7618  0CEB                     _IOCCF7_SetInterruptHandler:	
  7619                           
  7620                           ;mcc_generated_files/pin_manager.c: 107:     IOCCF7_InterruptHandler = InterruptHandler;
  7621                           
  7622                           ;incstack = 0
  7623                           ; Regs used in _IOCCF7_SetInterruptHandler: [wreg]
  7624  0CEB  0020               	movlb	0	; select bank0
  7625  0CEC  083B               	movf	IOCCF7_SetInterruptHandler@InterruptHandler+1,w
  7626  0CED  0021               	movlb	1	; select bank1
  7627  0CEE  00EF               	movwf	(_IOCCF7_InterruptHandler+1)^(0+128)
  7628  0CEF  0020               	movlb	0	; select bank0
  7629  0CF0  083A               	movf	IOCCF7_SetInterruptHandler@InterruptHandler,w
  7630  0CF1  0021               	movlb	1	; select bank1
  7631  0CF2  00EE               	movwf	_IOCCF7_InterruptHandler^(0+128)
  7632  0CF3  0008               	return
  7633  0CF4                     __end_of_IOCCF7_SetInterruptHandler:	
  7634                           
  7635                           	psect	text23
  7636  0CB1                     __ptext23:	
  7637 ;; *************** function _OSCILLATOR_Initialize *****************
  7638 ;; Defined at:
  7639 ;;		line 13 in file "mcc_generated_files/mcc.c"
  7640 ;; Parameters:    Size  Location     Type
  7641 ;;		None
  7642 ;; Auto vars:     Size  Location     Type
  7643 ;;		None
  7644 ;; Return value:  Size  Location     Type
  7645 ;;                  1    wreg      void 
  7646 ;; Registers used:
  7647 ;;		wreg, status,2
  7648 ;; Tracked objects:
  7649 ;;		On entry : 0/0
  7650 ;;		On exit  : 0/0
  7651 ;;		Unchanged: 0/0
  7652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7657 ;;Total ram usage:        0 bytes
  7658 ;; Hardware stack levels used:    1
  7659 ;; Hardware stack levels required when called:    6
  7660 ;; This function calls:
  7661 ;;		Nothing
  7662 ;; This function is called by:
  7663 ;;		_SYSTEM_Initialize
  7664 ;; This function uses a non-reentrant model
  7665 ;;
  7666                           
  7667                           
  7668                           ;psect for function _OSCILLATOR_Initialize
  7669  0CB1                     _OSCILLATOR_Initialize:	
  7670                           
  7671                           ;mcc_generated_files/mcc.c: 16:     OSCCON = 0x3A;
  7672                           
  7673                           ;incstack = 0
  7674                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  7675  0CB1  303A               	movlw	58
  7676  0CB2  0021               	movlb	1	; select bank1
  7677  0CB3  0099               	movwf	25	;volatile
  7678                           
  7679                           ;mcc_generated_files/mcc.c: 18:     OSCTUNE = 0x00;
  7680  0CB4  0198               	clrf	24	;volatile
  7681                           
  7682                           ;mcc_generated_files/mcc.c: 20:     BORCON = 0x00;
  7683  0CB5  0022               	movlb	2	; select bank2
  7684  0CB6  0196               	clrf	22	;volatile
  7685  0CB7  0008               	return
  7686  0CB8                     __end_of_OSCILLATOR_Initialize:	
  7687                           
  7688                           	psect	text24
  7689  07D9                     __ptext24:	
  7690 ;; *************** function _EUSART_Initialize *****************
  7691 ;; Defined at:
  7692 ;;		line 65 in file "mcc_generated_files/eusart.c"
  7693 ;; Parameters:    Size  Location     Type
  7694 ;;		None
  7695 ;; Auto vars:     Size  Location     Type
  7696 ;;		None
  7697 ;; Return value:  Size  Location     Type
  7698 ;;                  1    wreg      void 
  7699 ;; Registers used:
  7700 ;;		wreg, status,2, status,0, pclath, cstack
  7701 ;; Tracked objects:
  7702 ;;		On entry : 0/0
  7703 ;;		On exit  : 0/0
  7704 ;;		Unchanged: 0/0
  7705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7710 ;;Total ram usage:        0 bytes
  7711 ;; Hardware stack levels used:    1
  7712 ;; Hardware stack levels required when called:    7
  7713 ;; This function calls:
  7714 ;;		_EUSART_SetErrorHandler
  7715 ;;		_EUSART_SetFramingErrorHandler
  7716 ;;		_EUSART_SetOverrunErrorHandler
  7717 ;; This function is called by:
  7718 ;;		_SYSTEM_Initialize
  7719 ;; This function uses a non-reentrant model
  7720 ;;
  7721                           
  7722                           
  7723                           ;psect for function _EUSART_Initialize
  7724  07D9                     _EUSART_Initialize:	
  7725                           
  7726                           ;mcc_generated_files/eusart.c: 70:     BAUD1CON = 0x08;
  7727                           
  7728                           ;incstack = 0
  7729                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7730  07D9  3008               	movlw	8
  7731  07DA  0023               	movlb	3	; select bank3
  7732  07DB  009F               	movwf	31	;volatile
  7733                           
  7734                           ;mcc_generated_files/eusart.c: 73:     RC1STA = 0x80;
  7735  07DC  3080               	movlw	128
  7736  07DD  009D               	movwf	29	;volatile
  7737                           
  7738                           ;mcc_generated_files/eusart.c: 76:     TX1STA = 0x24;
  7739  07DE  3024               	movlw	36
  7740  07DF  009E               	movwf	30	;volatile
  7741                           
  7742                           ;mcc_generated_files/eusart.c: 79:     SPBRGL = 0x0C;
  7743  07E0  300C               	movlw	12
  7744  07E1  009B               	movwf	27	;volatile
  7745                           
  7746                           ;mcc_generated_files/eusart.c: 82:     SPBRGH = 0x00;
  7747  07E2  019C               	clrf	28	;volatile
  7748                           
  7749                           ;mcc_generated_files/eusart.c: 85:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  7750  07E3  3000               	movlw	0
  7751  07E4  0020               	movlb	0	; select bank0
  7752  07E5  00BA               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  7753  07E6  3000               	movlw	0
  7754  07E7  00BB               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  7755  07E8  318C  24D9  3187   	fcall	_EUSART_SetFramingErrorHandler
  7756                           
  7757                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  7758  07EB  3000               	movlw	0
  7759  07EC  0020               	movlb	0	; select bank0
  7760  07ED  00BA               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  7761  07EE  3000               	movlw	0
  7762  07EF  00BB               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  7763  07F0  318C  24E2  3187   	fcall	_EUSART_SetOverrunErrorHandler
  7764                           
  7765                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  7766  07F3  3000               	movlw	0
  7767  07F4  0020               	movlb	0	; select bank0
  7768  07F5  00BA               	movwf	EUSART_SetErrorHandler@interruptHandler
  7769  07F6  3000               	movlw	0
  7770  07F7  00BB               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  7771  07F8  318C  24D0         	fcall	_EUSART_SetErrorHandler
  7772                           
  7773                           ;mcc_generated_files/eusart.c: 89:     eusartRxLastError.status = 0;
  7774  07FA  0020               	movlb	0	; select bank0
  7775  07FB  01D0               	clrf	_eusartRxLastError	;volatile
  7776  07FC  0008               	return
  7777  07FD                     __end_of_EUSART_Initialize:	
  7778                           
  7779                           	psect	text25
  7780  0CE2                     __ptext25:	
  7781 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  7782 ;; Defined at:
  7783 ;;		line 175 in file "mcc_generated_files/eusart.c"
  7784 ;; Parameters:    Size  Location     Type
  7785 ;;  interruptHan    2   26[BANK0 ] PTR FTN()void 
  7786 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  7787 ;; Auto vars:     Size  Location     Type
  7788 ;;		None
  7789 ;; Return value:  Size  Location     Type
  7790 ;;                  1    wreg      void 
  7791 ;; Registers used:
  7792 ;;		wreg
  7793 ;; Tracked objects:
  7794 ;;		On entry : 0/0
  7795 ;;		On exit  : 0/0
  7796 ;;		Unchanged: 0/0
  7797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7798 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7801 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7802 ;;Total ram usage:        2 bytes
  7803 ;; Hardware stack levels used:    1
  7804 ;; Hardware stack levels required when called:    6
  7805 ;; This function calls:
  7806 ;;		Nothing
  7807 ;; This function is called by:
  7808 ;;		_EUSART_Initialize
  7809 ;; This function uses a non-reentrant model
  7810 ;;
  7811                           
  7812                           
  7813                           ;psect for function _EUSART_SetOverrunErrorHandler
  7814  0CE2                     _EUSART_SetOverrunErrorHandler:	
  7815                           
  7816                           ;mcc_generated_files/eusart.c: 176:     EUSART_OverrunErrorHandler = interruptHandler;
  7817                           
  7818                           ;incstack = 0
  7819                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  7820  0CE2  0020               	movlb	0	; select bank0
  7821  0CE3  083B               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  7822  0CE4  0022               	movlb	2	; select bank2
  7823  0CE5  00E5               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+256)
  7824  0CE6  0020               	movlb	0	; select bank0
  7825  0CE7  083A               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  7826  0CE8  0022               	movlb	2	; select bank2
  7827  0CE9  00E4               	movwf	_EUSART_OverrunErrorHandler^(0+256)
  7828  0CEA  0008               	return
  7829  0CEB                     __end_of_EUSART_SetOverrunErrorHandler:	
  7830                           
  7831                           	psect	text26
  7832  0CD9                     __ptext26:	
  7833 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  7834 ;; Defined at:
  7835 ;;		line 171 in file "mcc_generated_files/eusart.c"
  7836 ;; Parameters:    Size  Location     Type
  7837 ;;  interruptHan    2   26[BANK0 ] PTR FTN()void 
  7838 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  7839 ;; Auto vars:     Size  Location     Type
  7840 ;;		None
  7841 ;; Return value:  Size  Location     Type
  7842 ;;                  1    wreg      void 
  7843 ;; Registers used:
  7844 ;;		wreg
  7845 ;; Tracked objects:
  7846 ;;		On entry : 0/0
  7847 ;;		On exit  : 0/0
  7848 ;;		Unchanged: 0/0
  7849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7850 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7853 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7854 ;;Total ram usage:        2 bytes
  7855 ;; Hardware stack levels used:    1
  7856 ;; Hardware stack levels required when called:    6
  7857 ;; This function calls:
  7858 ;;		Nothing
  7859 ;; This function is called by:
  7860 ;;		_EUSART_Initialize
  7861 ;; This function uses a non-reentrant model
  7862 ;;
  7863                           
  7864                           
  7865                           ;psect for function _EUSART_SetFramingErrorHandler
  7866  0CD9                     _EUSART_SetFramingErrorHandler:	
  7867                           
  7868                           ;mcc_generated_files/eusart.c: 172:     EUSART_FramingErrorHandler = interruptHandler;
  7869                           
  7870                           ;incstack = 0
  7871                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  7872  0CD9  0020               	movlb	0	; select bank0
  7873  0CDA  083B               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  7874  0CDB  0022               	movlb	2	; select bank2
  7875  0CDC  00E7               	movwf	(_EUSART_FramingErrorHandler+1)^(0+256)
  7876  0CDD  0020               	movlb	0	; select bank0
  7877  0CDE  083A               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  7878  0CDF  0022               	movlb	2	; select bank2
  7879  0CE0  00E6               	movwf	_EUSART_FramingErrorHandler^(0+256)
  7880  0CE1  0008               	return
  7881  0CE2                     __end_of_EUSART_SetFramingErrorHandler:	
  7882                           
  7883                           	psect	text27
  7884  0CD0                     __ptext27:	
  7885 ;; *************** function _EUSART_SetErrorHandler *****************
  7886 ;; Defined at:
  7887 ;;		line 179 in file "mcc_generated_files/eusart.c"
  7888 ;; Parameters:    Size  Location     Type
  7889 ;;  interruptHan    2   26[BANK0 ] PTR FTN()void 
  7890 ;;		 -> EUSART_DefaultErrorHandler(1), 
  7891 ;; Auto vars:     Size  Location     Type
  7892 ;;		None
  7893 ;; Return value:  Size  Location     Type
  7894 ;;                  1    wreg      void 
  7895 ;; Registers used:
  7896 ;;		wreg
  7897 ;; Tracked objects:
  7898 ;;		On entry : 0/0
  7899 ;;		On exit  : 0/0
  7900 ;;		Unchanged: 0/0
  7901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7902 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7905 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7906 ;;Total ram usage:        2 bytes
  7907 ;; Hardware stack levels used:    1
  7908 ;; Hardware stack levels required when called:    6
  7909 ;; This function calls:
  7910 ;;		Nothing
  7911 ;; This function is called by:
  7912 ;;		_EUSART_Initialize
  7913 ;; This function uses a non-reentrant model
  7914 ;;
  7915                           
  7916                           
  7917                           ;psect for function _EUSART_SetErrorHandler
  7918  0CD0                     _EUSART_SetErrorHandler:	
  7919                           
  7920                           ;mcc_generated_files/eusart.c: 180:     EUSART_ErrorHandler = interruptHandler;
  7921                           
  7922                           ;incstack = 0
  7923                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  7924  0CD0  0020               	movlb	0	; select bank0
  7925  0CD1  083B               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  7926  0CD2  0022               	movlb	2	; select bank2
  7927  0CD3  00E3               	movwf	(_EUSART_ErrorHandler+1)^(0+256)
  7928  0CD4  0020               	movlb	0	; select bank0
  7929  0CD5  083A               	movf	EUSART_SetErrorHandler@interruptHandler,w
  7930  0CD6  0022               	movlb	2	; select bank2
  7931  0CD7  00E2               	movwf	_EUSART_ErrorHandler^(0+256)
  7932  0CD8  0008               	return
  7933  0CD9                     __end_of_EUSART_SetErrorHandler:	
  7934                           
  7935                           	psect	text28
  7936  0CB8                     __ptext28:	
  7937 ;; *************** function _ADC_Initialize *****************
  7938 ;; Defined at:
  7939 ;;		line 65 in file "mcc_generated_files/adc.c"
  7940 ;; Parameters:    Size  Location     Type
  7941 ;;		None
  7942 ;; Auto vars:     Size  Location     Type
  7943 ;;		None
  7944 ;; Return value:  Size  Location     Type
  7945 ;;                  1    wreg      void 
  7946 ;; Registers used:
  7947 ;;		wreg, status,2
  7948 ;; Tracked objects:
  7949 ;;		On entry : 0/0
  7950 ;;		On exit  : 0/0
  7951 ;;		Unchanged: 0/0
  7952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7957 ;;Total ram usage:        0 bytes
  7958 ;; Hardware stack levels used:    1
  7959 ;; Hardware stack levels required when called:    6
  7960 ;; This function calls:
  7961 ;;		Nothing
  7962 ;; This function is called by:
  7963 ;;		_SYSTEM_Initialize
  7964 ;; This function uses a non-reentrant model
  7965 ;;
  7966                           
  7967                           
  7968                           ;psect for function _ADC_Initialize
  7969  0CB8                     _ADC_Initialize:	
  7970                           
  7971                           ;mcc_generated_files/adc.c: 70:     ADCON0 = 0x01;
  7972                           
  7973                           ;incstack = 0
  7974                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  7975  0CB8  3001               	movlw	1
  7976  0CB9  0021               	movlb	1	; select bank1
  7977  0CBA  009D               	movwf	29	;volatile
  7978                           
  7979                           ;mcc_generated_files/adc.c: 73:     ADCON1 = 0x00;
  7980  0CBB  019E               	clrf	30	;volatile
  7981                           
  7982                           ;mcc_generated_files/adc.c: 76:     ADCON2 = 0x00;
  7983  0CBC  019F               	clrf	31	;volatile
  7984                           
  7985                           ;mcc_generated_files/adc.c: 79:     ADRESL = 0x00;
  7986  0CBD  019B               	clrf	27	;volatile
  7987                           
  7988                           ;mcc_generated_files/adc.c: 82:     ADRESH = 0x00;
  7989  0CBE  019C               	clrf	28	;volatile
  7990  0CBF  0008               	return
  7991  0CC0                     __end_of_ADC_Initialize:	
  7992                           
  7993                           	psect	intentry
  7994  0004                     __pintentry:	
  7995 ;; *************** function _INTERRUPT_InterruptManager *****************
  7996 ;; Defined at:
  7997 ;;		line 4 in file "mcc_generated_files/interrupt_manager.c"
  7998 ;; Parameters:    Size  Location     Type
  7999 ;;		None
  8000 ;; Auto vars:     Size  Location     Type
  8001 ;;		None
  8002 ;; Return value:  Size  Location     Type
  8003 ;;                  1    wreg      void 
  8004 ;; Registers used:
  8005 ;;		wreg, status,2, status,0, pclath, cstack
  8006 ;; Tracked objects:
  8007 ;;		On entry : 0/0
  8008 ;;		On exit  : 0/0
  8009 ;;		Unchanged: 0/0
  8010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8015 ;;Total ram usage:        0 bytes
  8016 ;; Hardware stack levels used:    1
  8017 ;; Hardware stack levels required when called:    5
  8018 ;; This function calls:
  8019 ;;		_PIN_MANAGER_IOC
  8020 ;;		_TMR0_ISR
  8021 ;; This function is called by:
  8022 ;;		Interrupt level 1
  8023 ;; This function uses a non-reentrant model
  8024 ;;
  8025                           
  8026  0004                     _INTERRUPT_InterruptManager:	
  8027                           
  8028                           ;incstack = 0
  8029  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  8030                           
  8031                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  8032  0005  3180               	pagesel	$
  8033                           
  8034                           ;mcc_generated_files/interrupt_manager.c: 7:     if(INTCONbits.TMR0IE == 1 && INTCONbits
      +                          .TMR0IF == 1)
  8035  0006  1A8B               	btfsc	11,5	;volatile
  8036  0007  1D0B               	btfss	11,2	;volatile
  8037  0008  280D               	goto	i1l242
  8038                           
  8039                           ;mcc_generated_files/interrupt_manager.c: 8:     {;mcc_generated_files/interrupt_manager
      +                          .c: 9:         TMR0_ISR();
  8040  0009  318D  250A  3180   	fcall	_TMR0_ISR
  8041                           
  8042                           ;mcc_generated_files/interrupt_manager.c: 10:     }
  8043  000C  2812               	goto	i1l246
  8044  000D                     i1l242:	
  8045                           ;mcc_generated_files/interrupt_manager.c: 11:     else if(INTCONbits.IOCIE == 1 && INTCO
      +                          Nbits.IOCIF == 1)
  8046                           
  8047  000D  198B               	btfsc	11,3	;volatile
  8048  000E  1C0B               	btfss	11,0	;volatile
  8049  000F  2812               	goto	i1l246
  8050                           
  8051                           ;mcc_generated_files/interrupt_manager.c: 12:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 13:         PIN_MANAGER_IOC();
  8052  0010  318C  249F         	fcall	_PIN_MANAGER_IOC
  8053  0012                     i1l246:	
  8054                           ;mcc_generated_files/interrupt_manager.c: 14:     }
  8055                           
  8056  0012  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  8057  0013  0009               	retfie
  8058  0014                     __end_of_INTERRUPT_InterruptManager:	
  8059                           
  8060                           	psect	text30
  8061  0D0A                     __ptext30:	
  8062 ;; *************** function _TMR0_ISR *****************
  8063 ;; Defined at:
  8064 ;;		line 62 in file "mcc_generated_files/tmr0.c"
  8065 ;; Parameters:    Size  Location     Type
  8066 ;;		None
  8067 ;; Auto vars:     Size  Location     Type
  8068 ;;		None
  8069 ;; Return value:  Size  Location     Type
  8070 ;;                  1    wreg      void 
  8071 ;; Registers used:
  8072 ;;		wreg, status,2, status,0, pclath, cstack
  8073 ;; Tracked objects:
  8074 ;;		On entry : 0/0
  8075 ;;		On exit  : 0/0
  8076 ;;		Unchanged: 0/0
  8077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8082 ;;Total ram usage:        0 bytes
  8083 ;; Hardware stack levels used:    1
  8084 ;; Hardware stack levels required when called:    1
  8085 ;; This function calls:
  8086 ;;		Absolute function
  8087 ;;		_TMR0_DefaultInterruptHandler
  8088 ;;		_timerISR
  8089 ;; This function is called by:
  8090 ;;		_INTERRUPT_InterruptManager
  8091 ;; This function uses a non-reentrant model
  8092 ;;
  8093                           
  8094                           
  8095                           ;psect for function _TMR0_ISR
  8096  0D0A                     _TMR0_ISR:	
  8097                           
  8098                           ;mcc_generated_files/tmr0.c: 66:     INTCONbits.TMR0IF = 0;
  8099                           
  8100                           ;incstack = 0
  8101                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  8102  0D0A  110B               	bcf	11,2	;volatile
  8103                           
  8104                           ;mcc_generated_files/tmr0.c: 68:     TMR0 = timer0ReloadVal;
  8105  0D0B  0020               	movlb	0	; select bank0
  8106  0D0C  0855               	movf	_timer0ReloadVal,w	;volatile
  8107  0D0D  0095               	movwf	21	;volatile
  8108                           
  8109                           ;mcc_generated_files/tmr0.c: 70:     if(TMR0_InterruptHandler)
  8110  0D0E  0021               	movlb	1	; select bank1
  8111  0D0F  086C               	movf	_TMR0_InterruptHandler^(0+128),w
  8112  0D10  046D               	iorwf	(_TMR0_InterruptHandler+1)^(0+128),w
  8113  0D11  1903               	btfsc	3,2
  8114  0D12  0008               	return
  8115                           
  8116                           ;mcc_generated_files/tmr0.c: 71:     {;mcc_generated_files/tmr0.c: 72:         TMR0_Inte
      +                          rruptHandler();
  8117  0D13  086D               	movf	(_TMR0_InterruptHandler+1)^(0+128),w
  8118  0D14  008A               	movwf	10
  8119  0D15  086C               	movf	_TMR0_InterruptHandler^(0+128),w
  8120  0D16  000A               	callw
  8121  0D17  318D               	pagesel	$
  8122  0D18  0008               	return
  8123  0D19                     __end_of_TMR0_ISR:	
  8124                           
  8125                           	psect	text31
  8126  07FD                     __ptext31:	
  8127 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  8128 ;; Defined at:
  8129 ;;		line 83 in file "mcc_generated_files/tmr0.c"
  8130 ;; Parameters:    Size  Location     Type
  8131 ;;		None
  8132 ;; Auto vars:     Size  Location     Type
  8133 ;;		None
  8134 ;; Return value:  Size  Location     Type
  8135 ;;                  1    wreg      void 
  8136 ;; Registers used:
  8137 ;;		None
  8138 ;; Tracked objects:
  8139 ;;		On entry : 0/0
  8140 ;;		On exit  : 0/0
  8141 ;;		Unchanged: 0/0
  8142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8147 ;;Total ram usage:        0 bytes
  8148 ;; Hardware stack levels used:    1
  8149 ;; This function calls:
  8150 ;;		Nothing
  8151 ;; This function is called by:
  8152 ;;		_TMR0_Initialize
  8153 ;;		_TMR0_ISR
  8154 ;; This function uses a non-reentrant model
  8155 ;;
  8156                           
  8157                           
  8158                           ;psect for function _TMR0_DefaultInterruptHandler
  8159  07FD                     _TMR0_DefaultInterruptHandler:	
  8160                           
  8161                           ;incstack = 0
  8162                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  8163  07FD  0008               	return
  8164  07FE                     __end_of_TMR0_DefaultInterruptHandler:	
  8165                           
  8166                           	psect	text32
  8167  0D28                     __ptext32:	
  8168 ;; *************** function _timerISR *****************
  8169 ;; Defined at:
  8170 ;;		line 99 in file "main.c"
  8171 ;; Parameters:    Size  Location     Type
  8172 ;;		None
  8173 ;; Auto vars:     Size  Location     Type
  8174 ;;		None
  8175 ;; Return value:  Size  Location     Type
  8176 ;;                  1    wreg      void 
  8177 ;; Registers used:
  8178 ;;		wreg
  8179 ;; Tracked objects:
  8180 ;;		On entry : 0/0
  8181 ;;		On exit  : 0/0
  8182 ;;		Unchanged: 0/0
  8183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8188 ;;Total ram usage:        0 bytes
  8189 ;; Hardware stack levels used:    1
  8190 ;; This function calls:
  8191 ;;		Nothing
  8192 ;; This function is called by:
  8193 ;;		_main
  8194 ;;		_TMR0_ISR
  8195 ;; This function uses a non-reentrant model
  8196 ;;
  8197                           
  8198                           
  8199                           ;psect for function _timerISR
  8200  0D28                     _timerISR:	
  8201                           
  8202                           ;main.c: 100:     counter++ ;
  8203                           
  8204                           ;incstack = 0
  8205                           ; Regs used in _timerISR: [wreg]
  8206  0D28  3001               	movlw	1
  8207  0D29  0020               	movlb	0	; select bank0
  8208  0D2A  07C4               	addwf	_counter,f	;volatile
  8209  0D2B  3000               	movlw	0
  8210  0D2C  3DC5               	addwfc	_counter+1,f	;volatile
  8211  0D2D  3000               	movlw	0
  8212  0D2E  3DC6               	addwfc	_counter+2,f	;volatile
  8213  0D2F  3000               	movlw	0
  8214  0D30  3DC7               	addwfc	_counter+3,f	;volatile
  8215                           
  8216                           ;main.c: 101:     adcCounter++ ;
  8217  0D31  3001               	movlw	1
  8218  0D32  07C0               	addwf	_adcCounter,f	;volatile
  8219  0D33  3000               	movlw	0
  8220  0D34  3DC1               	addwfc	_adcCounter+1,f	;volatile
  8221  0D35  3000               	movlw	0
  8222  0D36  3DC2               	addwfc	_adcCounter+2,f	;volatile
  8223  0D37  3000               	movlw	0
  8224  0D38  3DC3               	addwfc	_adcCounter+3,f	;volatile
  8225  0D39  0008               	return
  8226  0D3A                     __end_of_timerISR:	
  8227                           
  8228                           	psect	text33
  8229  0C9F                     __ptext33:	
  8230 ;; *************** function _PIN_MANAGER_IOC *****************
  8231 ;; Defined at:
  8232 ;;		line 79 in file "mcc_generated_files/pin_manager.c"
  8233 ;; Parameters:    Size  Location     Type
  8234 ;;		None
  8235 ;; Auto vars:     Size  Location     Type
  8236 ;;		None
  8237 ;; Return value:  Size  Location     Type
  8238 ;;                  1    wreg      void 
  8239 ;; Registers used:
  8240 ;;		wreg, status,2, status,0, pclath, cstack
  8241 ;; Tracked objects:
  8242 ;;		On entry : 0/0
  8243 ;;		On exit  : 0/0
  8244 ;;		Unchanged: 0/0
  8245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8250 ;;Total ram usage:        0 bytes
  8251 ;; Hardware stack levels used:    1
  8252 ;; Hardware stack levels required when called:    4
  8253 ;; This function calls:
  8254 ;;		_IOCCF7_ISR
  8255 ;; This function is called by:
  8256 ;;		_INTERRUPT_InterruptManager
  8257 ;; This function uses a non-reentrant model
  8258 ;;
  8259                           
  8260                           
  8261                           ;psect for function _PIN_MANAGER_IOC
  8262  0C9F                     _PIN_MANAGER_IOC:	
  8263                           
  8264                           ;mcc_generated_files/pin_manager.c: 82:     if(IOCCFbits.IOCCF7 == 1)
  8265                           
  8266                           ;incstack = 0
  8267                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
  8268  0C9F  0027               	movlb	7	; select bank7
  8269  0CA0  1F99               	btfss	25,7	;volatile
  8270  0CA1  0008               	return
  8271                           
  8272                           ;mcc_generated_files/pin_manager.c: 83:     {;mcc_generated_files/pin_manager.c: 84:    
      +                               IOCCF7_ISR();
  8273  0CA2  318C  24FD         	fcall	_IOCCF7_ISR
  8274  0CA4  0008               	return
  8275  0CA5                     __end_of_PIN_MANAGER_IOC:	
  8276                           
  8277                           	psect	text34
  8278  0CFD                     __ptext34:	
  8279 ;; *************** function _IOCCF7_ISR *****************
  8280 ;; Defined at:
  8281 ;;		line 91 in file "mcc_generated_files/pin_manager.c"
  8282 ;; Parameters:    Size  Location     Type
  8283 ;;		None
  8284 ;; Auto vars:     Size  Location     Type
  8285 ;;		None
  8286 ;; Return value:  Size  Location     Type
  8287 ;;                  1    wreg      void 
  8288 ;; Registers used:
  8289 ;;		wreg, status,2, status,0, pclath, cstack
  8290 ;; Tracked objects:
  8291 ;;		On entry : 0/0
  8292 ;;		On exit  : 0/0
  8293 ;;		Unchanged: 0/0
  8294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8299 ;;Total ram usage:        0 bytes
  8300 ;; Hardware stack levels used:    1
  8301 ;; Hardware stack levels required when called:    3
  8302 ;; This function calls:
  8303 ;;		Absolute function
  8304 ;;		_IOCCF7_DefaultInterruptHandler
  8305 ;;		_speedCalc
  8306 ;; This function is called by:
  8307 ;;		_PIN_MANAGER_IOC
  8308 ;; This function uses a non-reentrant model
  8309 ;;
  8310                           
  8311                           
  8312                           ;psect for function _IOCCF7_ISR
  8313  0CFD                     _IOCCF7_ISR:	
  8314                           
  8315                           ;mcc_generated_files/pin_manager.c: 96:     if(IOCCF7_InterruptHandler)
  8316                           
  8317                           ;incstack = 0
  8318                           ; Regs used in _IOCCF7_ISR: [wreg+status,2+status,0+pclath+cstack]
  8319  0CFD  0021               	movlb	1	; select bank1
  8320  0CFE  086E               	movf	_IOCCF7_InterruptHandler^(0+128),w
  8321  0CFF  046F               	iorwf	(_IOCCF7_InterruptHandler+1)^(0+128),w
  8322  0D00  1903               	btfsc	3,2
  8323  0D01  2D07               	goto	i1l2439
  8324                           
  8325                           ;mcc_generated_files/pin_manager.c: 97:     {;mcc_generated_files/pin_manager.c: 98:    
      +                               IOCCF7_InterruptHandler();
  8326  0D02  086F               	movf	(_IOCCF7_InterruptHandler+1)^(0+128),w
  8327  0D03  008A               	movwf	10
  8328  0D04  086E               	movf	_IOCCF7_InterruptHandler^(0+128),w
  8329  0D05  000A               	callw
  8330  0D06  318C               	pagesel	$
  8331  0D07                     i1l2439:	
  8332                           
  8333                           ;mcc_generated_files/pin_manager.c: 100:     IOCCFbits.IOCCF7 = 0;
  8334  0D07  0027               	movlb	7	; select bank7
  8335  0D08  1399               	bcf	25,7	;volatile
  8336  0D09  0008               	return
  8337  0D0A                     __end_of_IOCCF7_ISR:	
  8338                           
  8339                           	psect	text35
  8340  07FE                     __ptext35:	
  8341 ;; *************** function _IOCCF7_DefaultInterruptHandler *****************
  8342 ;; Defined at:
  8343 ;;		line 113 in file "mcc_generated_files/pin_manager.c"
  8344 ;; Parameters:    Size  Location     Type
  8345 ;;		None
  8346 ;; Auto vars:     Size  Location     Type
  8347 ;;		None
  8348 ;; Return value:  Size  Location     Type
  8349 ;;                  1    wreg      void 
  8350 ;; Registers used:
  8351 ;;		None
  8352 ;; Tracked objects:
  8353 ;;		On entry : 0/0
  8354 ;;		On exit  : 0/0
  8355 ;;		Unchanged: 0/0
  8356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8361 ;;Total ram usage:        0 bytes
  8362 ;; Hardware stack levels used:    1
  8363 ;; This function calls:
  8364 ;;		Nothing
  8365 ;; This function is called by:
  8366 ;;		_PIN_MANAGER_Initialize
  8367 ;;		_IOCCF7_ISR
  8368 ;; This function uses a non-reentrant model
  8369 ;;
  8370                           
  8371                           
  8372                           ;psect for function _IOCCF7_DefaultInterruptHandler
  8373  07FE                     _IOCCF7_DefaultInterruptHandler:	
  8374                           
  8375                           ;incstack = 0
  8376                           ; Regs used in _IOCCF7_DefaultInterruptHandler: []
  8377  07FE  0008               	return
  8378  07FF                     __end_of_IOCCF7_DefaultInterruptHandler:	
  8379                           
  8380                           	psect	text36
  8381  0EE8                     __ptext36:	
  8382 ;; *************** function _speedCalc *****************
  8383 ;; Defined at:
  8384 ;;		line 106 in file "main.c"
  8385 ;; Parameters:    Size  Location     Type
  8386 ;;		None
  8387 ;; Auto vars:     Size  Location     Type
  8388 ;;		None
  8389 ;; Return value:  Size  Location     Type
  8390 ;;                  1    wreg      void 
  8391 ;; Registers used:
  8392 ;;		wreg, status,2, status,0, pclath, cstack
  8393 ;; Tracked objects:
  8394 ;;		On entry : 0/0
  8395 ;;		On exit  : 0/0
  8396 ;;		Unchanged: 0/0
  8397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8402 ;;Total ram usage:        0 bytes
  8403 ;; Hardware stack levels used:    1
  8404 ;; Hardware stack levels required when called:    2
  8405 ;; This function calls:
  8406 ;;		___flmul
  8407 ;;		___xxtofl
  8408 ;; This function is called by:
  8409 ;;		_main
  8410 ;;		_IOCCF7_ISR
  8411 ;; This function uses a non-reentrant model
  8412 ;;
  8413                           
  8414                           
  8415                           ;psect for function _speedCalc
  8416  0EE8                     _speedCalc:	
  8417                           
  8418                           ;main.c: 109:     rpmInt = counter ;
  8419                           
  8420                           ;incstack = 0
  8421                           ; Regs used in _speedCalc: [wreg+status,2+status,0+pclath+cstack]
  8422  0EE8  0020               	movlb	0	; select bank0
  8423  0EE9  0847               	movf	_counter+3,w	;volatile
  8424  0EEA  00D4               	movwf	_rpmInt+3	;volatile
  8425  0EEB  0846               	movf	_counter+2,w	;volatile
  8426  0EEC  00D3               	movwf	_rpmInt+2	;volatile
  8427  0EED  0845               	movf	_counter+1,w	;volatile
  8428  0EEE  00D2               	movwf	_rpmInt+1	;volatile
  8429  0EEF  0844               	movf	_counter,w	;volatile
  8430  0EF0  00D1               	movwf	_rpmInt	;volatile
  8431                           
  8432                           ;main.c: 113:     speed = 2 * rpmInt * (0.06) ;
  8433  0EF1  303D               	movlw	61
  8434  0EF2  00A3               	movwf	___flmul@b+3
  8435  0EF3  3075               	movlw	117
  8436  0EF4  00A2               	movwf	___flmul@b+2
  8437  0EF5  30C2               	movlw	194
  8438  0EF6  00A1               	movwf	___flmul@b+1
  8439  0EF7  308F               	movlw	143
  8440  0EF8  00A0               	movwf	___flmul@b
  8441  0EF9  3551               	lslf	_rpmInt,w	;volatile
  8442  0EFA  00F0               	movwf	___xxtofl@val
  8443  0EFB  0D52               	rlf	_rpmInt+1,w	;volatile
  8444  0EFC  00F1               	movwf	___xxtofl@val+1
  8445  0EFD  0D53               	rlf	_rpmInt+2,w	;volatile
  8446  0EFE  00F2               	movwf	___xxtofl@val+2
  8447  0EFF  0D54               	rlf	_rpmInt+3,w	;volatile
  8448  0F00  00F3               	movwf	___xxtofl@val+3
  8449  0F01  3001               	movlw	1
  8450  0F02  3187  2744  318E   	fcall	___xxtofl
  8451  0F05  0873               	movf	?___xxtofl+3,w
  8452  0F06  0020               	movlb	0	; select bank0
  8453  0F07  00A7               	movwf	___flmul@a+3
  8454  0F08  0872               	movf	?___xxtofl+2,w
  8455  0F09  00A6               	movwf	___flmul@a+2
  8456  0F0A  0871               	movf	?___xxtofl+1,w
  8457  0F0B  00A5               	movwf	___flmul@a+1
  8458  0F0C  0870               	movf	?___xxtofl,w
  8459  0F0D  00A4               	movwf	___flmul@a
  8460  0F0E  3180  2031  318E   	fcall	___flmul
  8461  0F11  0020               	movlb	0	; select bank0
  8462  0F12  0823               	movf	?___flmul+3,w
  8463  0F13  00BF               	movwf	_speed+3	;volatile
  8464  0F14  0822               	movf	?___flmul+2,w
  8465  0F15  00BE               	movwf	_speed+2	;volatile
  8466  0F16  0821               	movf	?___flmul+1,w
  8467  0F17  00BD               	movwf	_speed+1	;volatile
  8468  0F18  0820               	movf	?___flmul,w
  8469  0F19  00BC               	movwf	_speed	;volatile
  8470                           
  8471                           ;main.c: 116:     counter = 1 ;
  8472  0F1A  3000               	movlw	0
  8473  0F1B  00C7               	movwf	_counter+3	;volatile
  8474  0F1C  3000               	movlw	0
  8475  0F1D  00C6               	movwf	_counter+2	;volatile
  8476  0F1E  3000               	movlw	0
  8477  0F1F  00C5               	movwf	_counter+1	;volatile
  8478  0F20  3001               	movlw	1
  8479  0F21  00C4               	movwf	_counter	;volatile
  8480                           
  8481                           ;main.c: 117:     if( adcCounter <= (2308 ) ){
  8482  0F22  1BC3               	btfsc	_adcCounter+3,7	;volatile
  8483  0F23  2F30               	goto	i1l2297
  8484  0F24  0843               	movf	_adcCounter+3,w	;volatile
  8485  0F25  1D03               	btfss	3,2
  8486  0F26  0008               	return
  8487  0F27  0842               	movf	_adcCounter+2,w	;volatile
  8488  0F28  1D03               	btfss	3,2
  8489  0F29  0008               	return
  8490  0F2A  3005               	movlw	5
  8491  0F2B  0240               	subwf	_adcCounter,w	;volatile
  8492  0F2C  3009               	movlw	9
  8493  0F2D  3B41               	subwfb	_adcCounter+1,w	;volatile
  8494  0F2E  1803               	btfsc	3,0
  8495  0F2F  0008               	return
  8496  0F30                     i1l2297:	
  8497                           
  8498                           ;main.c: 118:         distInt++ ;
  8499  0F30  3001               	movlw	1
  8500  0F31  07CC               	addwf	_distInt,f	;volatile
  8501  0F32  3000               	movlw	0
  8502  0F33  3DCD               	addwfc	_distInt+1,f	;volatile
  8503  0F34  0008               	return
  8504  0F35                     __end_of_speedCalc:	
  8505                           
  8506                           	psect	text37
  8507  0744                     __ptext37:	
  8508 ;; *************** function ___xxtofl *****************
  8509 ;; Defined at:
  8510 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
  8511 ;; Parameters:    Size  Location     Type
  8512 ;;  sign            1    wreg     unsigned char 
  8513 ;;  val             4    0[COMMON] long 
  8514 ;; Auto vars:     Size  Location     Type
  8515 ;;  sign            1    8[COMMON] unsigned char 
  8516 ;;  arg             4   10[COMMON] unsigned long 
  8517 ;;  exp             1    9[COMMON] unsigned char 
  8518 ;; Return value:  Size  Location     Type
  8519 ;;                  4    0[COMMON] unsigned char 
  8520 ;; Registers used:
  8521 ;;		wreg, status,2, status,0
  8522 ;; Tracked objects:
  8523 ;;		On entry : 0/0
  8524 ;;		On exit  : 0/0
  8525 ;;		Unchanged: 0/0
  8526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8527 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8528 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8529 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8530 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8531 ;;Total ram usage:       14 bytes
  8532 ;; Hardware stack levels used:    1
  8533 ;; This function calls:
  8534 ;;		Nothing
  8535 ;; This function is called by:
  8536 ;;		_speedCalc
  8537 ;; This function uses a non-reentrant model
  8538 ;;
  8539                           
  8540                           
  8541                           ;psect for function ___xxtofl
  8542  0744                     ___xxtofl:	
  8543                           
  8544                           ;incstack = 0
  8545                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  8546                           ;___xxtofl@sign stored from wreg
  8547  0744  00F8               	movwf	___xxtofl@sign
  8548  0745  0878               	movf	___xxtofl@sign,w
  8549  0746  1D03               	btfss	3,2
  8550  0747  1FF3               	btfss	___xxtofl@val+3,7
  8551  0748  2F59               	goto	i1l2241
  8552  0749  0970               	comf	___xxtofl@val,w
  8553  074A  00FA               	movwf	___xxtofl@arg
  8554  074B  0971               	comf	___xxtofl@val+1,w
  8555  074C  00FB               	movwf	___xxtofl@arg+1
  8556  074D  0972               	comf	___xxtofl@val+2,w
  8557  074E  00FC               	movwf	___xxtofl@arg+2
  8558  074F  0973               	comf	___xxtofl@val+3,w
  8559  0750  00FD               	movwf	___xxtofl@arg+3
  8560  0751  0AFA               	incf	___xxtofl@arg,f
  8561  0752  1903               	skipnz
  8562  0753  0AFB               	incf	___xxtofl@arg+1,f
  8563  0754  1903               	skipnz
  8564  0755  0AFC               	incf	___xxtofl@arg+2,f
  8565  0756  1903               	skipnz
  8566  0757  0AFD               	incf	___xxtofl@arg+3,f
  8567  0758  2F61               	goto	i1l965
  8568  0759                     i1l2241:	
  8569  0759  0873               	movf	___xxtofl@val+3,w
  8570  075A  00FD               	movwf	___xxtofl@arg+3
  8571  075B  0872               	movf	___xxtofl@val+2,w
  8572  075C  00FC               	movwf	___xxtofl@arg+2
  8573  075D  0871               	movf	___xxtofl@val+1,w
  8574  075E  00FB               	movwf	___xxtofl@arg+1
  8575  075F  0870               	movf	___xxtofl@val,w
  8576  0760  00FA               	movwf	___xxtofl@arg
  8577  0761                     i1l965:	
  8578  0761  0873               	movf	___xxtofl@val+3,w
  8579  0762  0472               	iorwf	___xxtofl@val+2,w
  8580  0763  0471               	iorwf	___xxtofl@val+1,w
  8581  0764  0470               	iorwf	___xxtofl@val,w
  8582  0765  1D03               	skipz
  8583  0766  2F70               	goto	i1l2247
  8584  0767  3000               	movlw	0
  8585  0768  00F3               	movwf	?___xxtofl+3
  8586  0769  3000               	movlw	0
  8587  076A  00F2               	movwf	?___xxtofl+2
  8588  076B  3000               	movlw	0
  8589  076C  00F1               	movwf	?___xxtofl+1
  8590  076D  3000               	movlw	0
  8591  076E  00F0               	movwf	?___xxtofl
  8592  076F  0008               	return
  8593  0770                     i1l2247:	
  8594  0770  3096               	movlw	150
  8595  0771  00F4               	movwf	??___xxtofl
  8596  0772  0874               	movf	??___xxtofl,w
  8597  0773  00F9               	movwf	___xxtofl@exp
  8598  0774                     i1l2251:	
  8599  0774  30FE               	movlw	254
  8600  0775  057D               	andwf	___xxtofl@arg+3,w
  8601  0776  1903               	btfsc	3,2
  8602  0777  2F97               	goto	i1l971
  8603  0778  3001               	movlw	1
  8604  0779  00F4               	movwf	??___xxtofl
  8605  077A  0874               	movf	??___xxtofl,w
  8606  077B  07F9               	addwf	___xxtofl@exp,f
  8607  077C  3001               	movlw	1
  8608  077D                     u209_25:	
  8609  077D  36FD               	lsrf	___xxtofl@arg+3,f
  8610  077E  0CFC               	rrf	___xxtofl@arg+2,f
  8611  077F  0CFB               	rrf	___xxtofl@arg+1,f
  8612  0780  0CFA               	rrf	___xxtofl@arg,f
  8613  0781  0B89               	decfsz	9,f
  8614  0782  2F7D               	goto	u209_25
  8615  0783  2F74               	goto	i1l2251
  8616  0784                     i1l2253:	
  8617  0784  3001               	movlw	1
  8618  0785  00F4               	movwf	??___xxtofl
  8619  0786  0874               	movf	??___xxtofl,w
  8620  0787  07F9               	addwf	___xxtofl@exp,f
  8621  0788  3001               	movlw	1
  8622  0789  07FA               	addwf	___xxtofl@arg,f
  8623  078A  3000               	movlw	0
  8624  078B  3DFB               	addwfc	___xxtofl@arg+1,f
  8625  078C  3000               	movlw	0
  8626  078D  3DFC               	addwfc	___xxtofl@arg+2,f
  8627  078E  3000               	movlw	0
  8628  078F  3DFD               	addwfc	___xxtofl@arg+3,f
  8629  0790  3001               	movlw	1
  8630  0791                     u211_25:	
  8631  0791  36FD               	lsrf	___xxtofl@arg+3,f
  8632  0792  0CFC               	rrf	___xxtofl@arg+2,f
  8633  0793  0CFB               	rrf	___xxtofl@arg+1,f
  8634  0794  0CFA               	rrf	___xxtofl@arg,f
  8635  0795  0B89               	decfsz	9,f
  8636  0796  2F91               	goto	u211_25
  8637  0797                     i1l971:	
  8638  0797  30FF               	movlw	255
  8639  0798  057D               	andwf	___xxtofl@arg+3,w
  8640  0799  1903               	btfsc	3,2
  8641  079A  2FA9               	goto	i1l2261
  8642  079B  2F84               	goto	i1l2253
  8643  079C                     i1l2263:	
  8644  079C  3002               	movlw	2
  8645  079D  0279               	subwf	___xxtofl@exp,w
  8646  079E  1C03               	btfss	3,0
  8647  079F  2FAB               	goto	i1l978
  8648  07A0  3001               	movlw	1
  8649  07A1  02F9               	subwf	___xxtofl@exp,f
  8650  07A2  3001               	movlw	1
  8651  07A3                     u213_25:	
  8652  07A3  35FA               	lslf	___xxtofl@arg,f
  8653  07A4  0DFB               	rlf	___xxtofl@arg+1,f
  8654  07A5  0DFC               	rlf	___xxtofl@arg+2,f
  8655  07A6  0DFD               	rlf	___xxtofl@arg+3,f
  8656  07A7  0B89               	decfsz	9,f
  8657  07A8  2FA3               	goto	u213_25
  8658  07A9                     i1l2261:	
  8659  07A9  1FFC               	btfss	___xxtofl@arg+2,7
  8660  07AA  2F9C               	goto	i1l2263
  8661  07AB                     i1l978:	
  8662  07AB  1879               	btfsc	___xxtofl@exp,0
  8663  07AC  2FB5               	goto	i1l979
  8664  07AD  30FF               	movlw	255
  8665  07AE  05FA               	andwf	___xxtofl@arg,f
  8666  07AF  30FF               	movlw	255
  8667  07B0  05FB               	andwf	___xxtofl@arg+1,f
  8668  07B1  307F               	movlw	127
  8669  07B2  05FC               	andwf	___xxtofl@arg+2,f
  8670  07B3  30FF               	movlw	255
  8671  07B4  05FD               	andwf	___xxtofl@arg+3,f
  8672  07B5                     i1l979:	
  8673  07B5  1003               	clrc
  8674  07B6  0CF9               	rrf	___xxtofl@exp,f
  8675  07B7  0879               	movf	___xxtofl@exp,w
  8676  07B8  00F4               	movwf	??___xxtofl
  8677  07B9  01F5               	clrf	??___xxtofl+1
  8678  07BA  01F6               	clrf	??___xxtofl+2
  8679  07BB  01F7               	clrf	??___xxtofl+3
  8680  07BC  3018               	movlw	24
  8681  07BD                     u217_25:	
  8682  07BD  35F4               	lslf	??___xxtofl,f
  8683  07BE  0DF5               	rlf	??___xxtofl+1,f
  8684  07BF  0DF6               	rlf	??___xxtofl+2,f
  8685  07C0  0DF7               	rlf	??___xxtofl+3,f
  8686  07C1  0B89               	decfsz	9,f
  8687  07C2  2FBD               	goto	u217_25
  8688  07C3  0874               	movf	??___xxtofl,w
  8689  07C4  04FA               	iorwf	___xxtofl@arg,f
  8690  07C5  0875               	movf	??___xxtofl+1,w
  8691  07C6  04FB               	iorwf	___xxtofl@arg+1,f
  8692  07C7  0876               	movf	??___xxtofl+2,w
  8693  07C8  04FC               	iorwf	___xxtofl@arg+2,f
  8694  07C9  0877               	movf	??___xxtofl+3,w
  8695  07CA  04FD               	iorwf	___xxtofl@arg+3,f
  8696  07CB  0878               	movf	___xxtofl@sign,w
  8697  07CC  1D03               	btfss	3,2
  8698  07CD  1FF3               	btfss	___xxtofl@val+3,7
  8699  07CE  2FD0               	goto	i1l2275
  8700  07CF  17FD               	bsf	___xxtofl@arg+3,7
  8701  07D0                     i1l2275:	
  8702  07D0  087D               	movf	___xxtofl@arg+3,w
  8703  07D1  00F3               	movwf	?___xxtofl+3
  8704  07D2  087C               	movf	___xxtofl@arg+2,w
  8705  07D3  00F2               	movwf	?___xxtofl+2
  8706  07D4  087B               	movf	___xxtofl@arg+1,w
  8707  07D5  00F1               	movwf	?___xxtofl+1
  8708  07D6  087A               	movf	___xxtofl@arg,w
  8709  07D7  00F0               	movwf	?___xxtofl
  8710  07D8  0008               	return
  8711  07D9                     __end_of___xxtofl:	
  8712                           
  8713                           	psect	text38
  8714  0031                     __ptext38:	
  8715 ;; *************** function ___flmul *****************
  8716 ;; Defined at:
  8717 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
  8718 ;; Parameters:    Size  Location     Type
  8719 ;;  b               4    0[BANK0 ] unsigned char 
  8720 ;;  a               4    4[BANK0 ] unsigned char 
  8721 ;; Auto vars:     Size  Location     Type
  8722 ;;  prod            4   20[BANK0 ] struct .
  8723 ;;  grs             4   14[BANK0 ] unsigned long 
  8724 ;;  temp            2   24[BANK0 ] struct .
  8725 ;;  bexp            1   19[BANK0 ] unsigned char 
  8726 ;;  aexp            1   18[BANK0 ] unsigned char 
  8727 ;;  sign            1   13[BANK0 ] unsigned char 
  8728 ;; Return value:  Size  Location     Type
  8729 ;;                  4    0[BANK0 ] unsigned char 
  8730 ;; Registers used:
  8731 ;;		wreg, status,2, status,0, pclath, cstack
  8732 ;; Tracked objects:
  8733 ;;		On entry : 0/0
  8734 ;;		On exit  : 0/0
  8735 ;;		Unchanged: 0/0
  8736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8737 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8738 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8739 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8740 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8741 ;;Total ram usage:       26 bytes
  8742 ;; Hardware stack levels used:    1
  8743 ;; Hardware stack levels required when called:    1
  8744 ;; This function calls:
  8745 ;;		__Umul8_16
  8746 ;; This function is called by:
  8747 ;;		_speedCalc
  8748 ;; This function uses a non-reentrant model
  8749 ;;
  8750                           
  8751                           
  8752                           ;psect for function ___flmul
  8753  0031                     ___flmul:	
  8754                           
  8755                           ;incstack = 0
  8756                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  8757  0031  0020               	movlb	0	; select bank0
  8758  0032  0823               	movf	___flmul@b+3,w
  8759  0033  3980               	andlw	128
  8760  0034  00A8               	movwf	??___flmul
  8761  0035  0828               	movf	??___flmul,w
  8762  0036  00AD               	movwf	___flmul@sign
  8763  0037  3523               	lslf	___flmul@b+3,w
  8764  0038  00A8               	movwf	??___flmul
  8765  0039  0828               	movf	??___flmul,w
  8766  003A  00B3               	movwf	___flmul@bexp
  8767  003B  1BA2               	btfsc	___flmul@b+2,7
  8768  003C  1433               	bsf	___flmul@bexp,0
  8769  003D  0833               	movf	___flmul@bexp,w
  8770  003E  1903               	btfsc	3,2
  8771  003F  284D               	goto	i1l2111
  8772  0040  0A33               	incf	___flmul@bexp,w
  8773  0041  1D03               	btfss	3,2
  8774  0042  284B               	goto	i1l2109
  8775  0043  3000               	movlw	0
  8776  0044  00A3               	movwf	___flmul@b+3
  8777  0045  3000               	movlw	0
  8778  0046  00A2               	movwf	___flmul@b+2
  8779  0047  3000               	movlw	0
  8780  0048  00A1               	movwf	___flmul@b+1
  8781  0049  3000               	movlw	0
  8782  004A  00A0               	movwf	___flmul@b
  8783  004B                     i1l2109:	
  8784  004B  17A2               	bsf	___flmul@b+2,7
  8785  004C  2855               	goto	i1l2113
  8786  004D                     i1l2111:	
  8787  004D  3000               	movlw	0
  8788  004E  00A3               	movwf	___flmul@b+3
  8789  004F  3000               	movlw	0
  8790  0050  00A2               	movwf	___flmul@b+2
  8791  0051  3000               	movlw	0
  8792  0052  00A1               	movwf	___flmul@b+1
  8793  0053  3000               	movlw	0
  8794  0054  00A0               	movwf	___flmul@b
  8795  0055                     i1l2113:	
  8796  0055  0827               	movf	___flmul@a+3,w
  8797  0056  3980               	andlw	128
  8798  0057  00A8               	movwf	??___flmul
  8799  0058  0828               	movf	??___flmul,w
  8800  0059  06AD               	xorwf	___flmul@sign,f
  8801  005A  3527               	lslf	___flmul@a+3,w
  8802  005B  00A8               	movwf	??___flmul
  8803  005C  0828               	movf	??___flmul,w
  8804  005D  00B2               	movwf	___flmul@aexp
  8805  005E  1BA6               	btfsc	___flmul@a+2,7
  8806  005F  1432               	bsf	___flmul@aexp,0
  8807  0060  0832               	movf	___flmul@aexp,w
  8808  0061  1903               	btfsc	3,2
  8809  0062  2870               	goto	i1l2129
  8810  0063  0A32               	incf	___flmul@aexp,w
  8811  0064  1D03               	btfss	3,2
  8812  0065  286E               	goto	i1l2127
  8813  0066  3000               	movlw	0
  8814  0067  00A7               	movwf	___flmul@a+3
  8815  0068  3000               	movlw	0
  8816  0069  00A6               	movwf	___flmul@a+2
  8817  006A  3000               	movlw	0
  8818  006B  00A5               	movwf	___flmul@a+1
  8819  006C  3000               	movlw	0
  8820  006D  00A4               	movwf	___flmul@a
  8821  006E                     i1l2127:	
  8822  006E  17A6               	bsf	___flmul@a+2,7
  8823  006F  2878               	goto	i1l2131
  8824  0070                     i1l2129:	
  8825  0070  3000               	movlw	0
  8826  0071  00A7               	movwf	___flmul@a+3
  8827  0072  3000               	movlw	0
  8828  0073  00A6               	movwf	___flmul@a+2
  8829  0074  3000               	movlw	0
  8830  0075  00A5               	movwf	___flmul@a+1
  8831  0076  3000               	movlw	0
  8832  0077  00A4               	movwf	___flmul@a
  8833  0078                     i1l2131:	
  8834  0078  0832               	movf	___flmul@aexp,w
  8835  0079  1D03               	btfss	3,2
  8836  007A  0833               	movf	___flmul@bexp,w
  8837  007B  1D03               	btfss	3,2
  8838  007C  2886               	goto	i1l2139
  8839  007D  3000               	movlw	0
  8840  007E  00A3               	movwf	?___flmul+3
  8841  007F  3000               	movlw	0
  8842  0080  00A2               	movwf	?___flmul+2
  8843  0081  3000               	movlw	0
  8844  0082  00A1               	movwf	?___flmul+1
  8845  0083  3000               	movlw	0
  8846  0084  00A0               	movwf	?___flmul
  8847  0085  0008               	return
  8848  0086                     i1l2139:	
  8849  0086  0820               	movf	___flmul@b,w
  8850  0087  00A8               	movwf	??___flmul
  8851  0088  0828               	movf	??___flmul,w
  8852  0089  00F0               	movwf	__Umul8_16@multiplicand
  8853  008A  0826               	movf	___flmul@a+2,w
  8854  008B  318D  25B5  3180   	fcall	__Umul8_16
  8855  008E  0871               	movf	?__Umul8_16+1,w
  8856  008F  0020               	movlb	0	; select bank0
  8857  0090  00B9               	movwf	___flmul@temp+1
  8858  0091  0870               	movf	?__Umul8_16,w
  8859  0092  00B8               	movwf	___flmul@temp
  8860  0093  0838               	movf	___flmul@temp,w
  8861  0094  00A8               	movwf	??___flmul
  8862  0095  01A9               	clrf	??___flmul+1
  8863  0096  01AA               	clrf	??___flmul+2
  8864  0097  01AB               	clrf	??___flmul+3
  8865  0098  082B               	movf	??___flmul+3,w
  8866  0099  00B1               	movwf	___flmul@grs+3
  8867  009A  082A               	movf	??___flmul+2,w
  8868  009B  00B0               	movwf	___flmul@grs+2
  8869  009C  0829               	movf	??___flmul+1,w
  8870  009D  00AF               	movwf	___flmul@grs+1
  8871  009E  0828               	movf	??___flmul,w
  8872  009F  00AE               	movwf	___flmul@grs
  8873  00A0  0839               	movf	___flmul@temp+1,w
  8874  00A1  00A8               	movwf	??___flmul
  8875  00A2  01A9               	clrf	??___flmul+1
  8876  00A3  01AA               	clrf	??___flmul+2
  8877  00A4  01AB               	clrf	??___flmul+3
  8878  00A5  082B               	movf	??___flmul+3,w
  8879  00A6  00B7               	movwf	___flmul@prod+3
  8880  00A7  082A               	movf	??___flmul+2,w
  8881  00A8  00B6               	movwf	___flmul@prod+2
  8882  00A9  0829               	movf	??___flmul+1,w
  8883  00AA  00B5               	movwf	___flmul@prod+1
  8884  00AB  0828               	movf	??___flmul,w
  8885  00AC  00B4               	movwf	___flmul@prod
  8886  00AD  0821               	movf	___flmul@b+1,w
  8887  00AE  00A8               	movwf	??___flmul
  8888  00AF  0828               	movf	??___flmul,w
  8889  00B0  00F0               	movwf	__Umul8_16@multiplicand
  8890  00B1  0825               	movf	___flmul@a+1,w
  8891  00B2  318D  25B5  3180   	fcall	__Umul8_16
  8892  00B5  0871               	movf	?__Umul8_16+1,w
  8893  00B6  0020               	movlb	0	; select bank0
  8894  00B7  00B9               	movwf	___flmul@temp+1
  8895  00B8  0870               	movf	?__Umul8_16,w
  8896  00B9  00B8               	movwf	___flmul@temp
  8897  00BA  0838               	movf	___flmul@temp,w
  8898  00BB  00A8               	movwf	??___flmul
  8899  00BC  01A9               	clrf	??___flmul+1
  8900  00BD  01AA               	clrf	??___flmul+2
  8901  00BE  01AB               	clrf	??___flmul+3
  8902  00BF  0828               	movf	??___flmul,w
  8903  00C0  07AE               	addwf	___flmul@grs,f
  8904  00C1  0829               	movf	??___flmul+1,w
  8905  00C2  3DAF               	addwfc	___flmul@grs+1,f
  8906  00C3  082A               	movf	??___flmul+2,w
  8907  00C4  3DB0               	addwfc	___flmul@grs+2,f
  8908  00C5  082B               	movf	??___flmul+3,w
  8909  00C6  3DB1               	addwfc	___flmul@grs+3,f
  8910  00C7  0839               	movf	___flmul@temp+1,w
  8911  00C8  00A8               	movwf	??___flmul
  8912  00C9  01A9               	clrf	??___flmul+1
  8913  00CA  01AA               	clrf	??___flmul+2
  8914  00CB  01AB               	clrf	??___flmul+3
  8915  00CC  0828               	movf	??___flmul,w
  8916  00CD  07B4               	addwf	___flmul@prod,f
  8917  00CE  0829               	movf	??___flmul+1,w
  8918  00CF  3DB5               	addwfc	___flmul@prod+1,f
  8919  00D0  082A               	movf	??___flmul+2,w
  8920  00D1  3DB6               	addwfc	___flmul@prod+2,f
  8921  00D2  082B               	movf	??___flmul+3,w
  8922  00D3  3DB7               	addwfc	___flmul@prod+3,f
  8923  00D4  0822               	movf	___flmul@b+2,w
  8924  00D5  00A8               	movwf	??___flmul
  8925  00D6  0828               	movf	??___flmul,w
  8926  00D7  00F0               	movwf	__Umul8_16@multiplicand
  8927  00D8  0824               	movf	___flmul@a,w
  8928  00D9  318D  25B5  3180   	fcall	__Umul8_16
  8929  00DC  0871               	movf	?__Umul8_16+1,w
  8930  00DD  0020               	movlb	0	; select bank0
  8931  00DE  00B9               	movwf	___flmul@temp+1
  8932  00DF  0870               	movf	?__Umul8_16,w
  8933  00E0  00B8               	movwf	___flmul@temp
  8934  00E1  0838               	movf	___flmul@temp,w
  8935  00E2  00A8               	movwf	??___flmul
  8936  00E3  01A9               	clrf	??___flmul+1
  8937  00E4  01AA               	clrf	??___flmul+2
  8938  00E5  01AB               	clrf	??___flmul+3
  8939  00E6  0828               	movf	??___flmul,w
  8940  00E7  07AE               	addwf	___flmul@grs,f
  8941  00E8  0829               	movf	??___flmul+1,w
  8942  00E9  3DAF               	addwfc	___flmul@grs+1,f
  8943  00EA  082A               	movf	??___flmul+2,w
  8944  00EB  3DB0               	addwfc	___flmul@grs+2,f
  8945  00EC  082B               	movf	??___flmul+3,w
  8946  00ED  3DB1               	addwfc	___flmul@grs+3,f
  8947  00EE  0839               	movf	___flmul@temp+1,w
  8948  00EF  00A8               	movwf	??___flmul
  8949  00F0  01A9               	clrf	??___flmul+1
  8950  00F1  01AA               	clrf	??___flmul+2
  8951  00F2  01AB               	clrf	??___flmul+3
  8952  00F3  0828               	movf	??___flmul,w
  8953  00F4  07B4               	addwf	___flmul@prod,f
  8954  00F5  0829               	movf	??___flmul+1,w
  8955  00F6  3DB5               	addwfc	___flmul@prod+1,f
  8956  00F7  082A               	movf	??___flmul+2,w
  8957  00F8  3DB6               	addwfc	___flmul@prod+2,f
  8958  00F9  082B               	movf	??___flmul+3,w
  8959  00FA  3DB7               	addwfc	___flmul@prod+3,f
  8960  00FB  3008               	movlw	8
  8961  00FC                     u188_25:	
  8962  00FC  35AE               	lslf	___flmul@grs,f
  8963  00FD  0DAF               	rlf	___flmul@grs+1,f
  8964  00FE  0DB0               	rlf	___flmul@grs+2,f
  8965  00FF  0DB1               	rlf	___flmul@grs+3,f
  8966  0100  0B89               	decfsz	9,f
  8967  0101  28FC               	goto	u188_25
  8968  0102  0821               	movf	___flmul@b+1,w
  8969  0103  00A8               	movwf	??___flmul
  8970  0104  0828               	movf	??___flmul,w
  8971  0105  00F0               	movwf	__Umul8_16@multiplicand
  8972  0106  0824               	movf	___flmul@a,w
  8973  0107  318D  25B5  3180   	fcall	__Umul8_16
  8974  010A  0871               	movf	?__Umul8_16+1,w
  8975  010B  0020               	movlb	0	; select bank0
  8976  010C  00B9               	movwf	___flmul@temp+1
  8977  010D  0870               	movf	?__Umul8_16,w
  8978  010E  00B8               	movwf	___flmul@temp
  8979  010F  0838               	movf	___flmul@temp,w
  8980  0110  07AE               	addwf	___flmul@grs,f
  8981  0111  0839               	movf	___flmul@temp+1,w
  8982  0112  3DAF               	addwfc	___flmul@grs+1,f
  8983  0113  3000               	movlw	0
  8984  0114  3DB0               	addwfc	___flmul@grs+2,f
  8985  0115  3DB1               	addwfc	___flmul@grs+3,f
  8986  0116  0820               	movf	___flmul@b,w
  8987  0117  00A8               	movwf	??___flmul
  8988  0118  0828               	movf	??___flmul,w
  8989  0119  00F0               	movwf	__Umul8_16@multiplicand
  8990  011A  0825               	movf	___flmul@a+1,w
  8991  011B  318D  25B5  3180   	fcall	__Umul8_16
  8992  011E  0871               	movf	?__Umul8_16+1,w
  8993  011F  0020               	movlb	0	; select bank0
  8994  0120  00B9               	movwf	___flmul@temp+1
  8995  0121  0870               	movf	?__Umul8_16,w
  8996  0122  00B8               	movwf	___flmul@temp
  8997  0123  0838               	movf	___flmul@temp,w
  8998  0124  07AE               	addwf	___flmul@grs,f
  8999  0125  0839               	movf	___flmul@temp+1,w
  9000  0126  3DAF               	addwfc	___flmul@grs+1,f
  9001  0127  3000               	movlw	0
  9002  0128  3DB0               	addwfc	___flmul@grs+2,f
  9003  0129  3DB1               	addwfc	___flmul@grs+3,f
  9004  012A  3008               	movlw	8
  9005  012B                     u189_25:	
  9006  012B  35AE               	lslf	___flmul@grs,f
  9007  012C  0DAF               	rlf	___flmul@grs+1,f
  9008  012D  0DB0               	rlf	___flmul@grs+2,f
  9009  012E  0DB1               	rlf	___flmul@grs+3,f
  9010  012F  0B89               	decfsz	9,f
  9011  0130  292B               	goto	u189_25
  9012  0131  0820               	movf	___flmul@b,w
  9013  0132  00A8               	movwf	??___flmul
  9014  0133  0828               	movf	??___flmul,w
  9015  0134  00F0               	movwf	__Umul8_16@multiplicand
  9016  0135  0824               	movf	___flmul@a,w
  9017  0136  318D  25B5  3180   	fcall	__Umul8_16
  9018  0139  0871               	movf	?__Umul8_16+1,w
  9019  013A  0020               	movlb	0	; select bank0
  9020  013B  00B9               	movwf	___flmul@temp+1
  9021  013C  0870               	movf	?__Umul8_16,w
  9022  013D  00B8               	movwf	___flmul@temp
  9023  013E  0838               	movf	___flmul@temp,w
  9024  013F  07AE               	addwf	___flmul@grs,f
  9025  0140  0839               	movf	___flmul@temp+1,w
  9026  0141  3DAF               	addwfc	___flmul@grs+1,f
  9027  0142  3000               	movlw	0
  9028  0143  3DB0               	addwfc	___flmul@grs+2,f
  9029  0144  3DB1               	addwfc	___flmul@grs+3,f
  9030  0145  0821               	movf	___flmul@b+1,w
  9031  0146  00A8               	movwf	??___flmul
  9032  0147  0828               	movf	??___flmul,w
  9033  0148  00F0               	movwf	__Umul8_16@multiplicand
  9034  0149  0826               	movf	___flmul@a+2,w
  9035  014A  318D  25B5  3180   	fcall	__Umul8_16
  9036  014D  0871               	movf	?__Umul8_16+1,w
  9037  014E  0020               	movlb	0	; select bank0
  9038  014F  00B9               	movwf	___flmul@temp+1
  9039  0150  0870               	movf	?__Umul8_16,w
  9040  0151  00B8               	movwf	___flmul@temp
  9041  0152  0838               	movf	___flmul@temp,w
  9042  0153  07B4               	addwf	___flmul@prod,f
  9043  0154  0839               	movf	___flmul@temp+1,w
  9044  0155  3DB5               	addwfc	___flmul@prod+1,f
  9045  0156  3000               	movlw	0
  9046  0157  3DB6               	addwfc	___flmul@prod+2,f
  9047  0158  3DB7               	addwfc	___flmul@prod+3,f
  9048  0159  0822               	movf	___flmul@b+2,w
  9049  015A  00A8               	movwf	??___flmul
  9050  015B  0828               	movf	??___flmul,w
  9051  015C  00F0               	movwf	__Umul8_16@multiplicand
  9052  015D  0825               	movf	___flmul@a+1,w
  9053  015E  318D  25B5  3180   	fcall	__Umul8_16
  9054  0161  0871               	movf	?__Umul8_16+1,w
  9055  0162  0020               	movlb	0	; select bank0
  9056  0163  00B9               	movwf	___flmul@temp+1
  9057  0164  0870               	movf	?__Umul8_16,w
  9058  0165  00B8               	movwf	___flmul@temp
  9059  0166  0838               	movf	___flmul@temp,w
  9060  0167  07B4               	addwf	___flmul@prod,f
  9061  0168  0839               	movf	___flmul@temp+1,w
  9062  0169  3DB5               	addwfc	___flmul@prod+1,f
  9063  016A  3000               	movlw	0
  9064  016B  3DB6               	addwfc	___flmul@prod+2,f
  9065  016C  3DB7               	addwfc	___flmul@prod+3,f
  9066  016D  0822               	movf	___flmul@b+2,w
  9067  016E  00A8               	movwf	??___flmul
  9068  016F  0828               	movf	??___flmul,w
  9069  0170  00F0               	movwf	__Umul8_16@multiplicand
  9070  0171  0826               	movf	___flmul@a+2,w
  9071  0172  318D  25B5  3180   	fcall	__Umul8_16
  9072  0175  0871               	movf	?__Umul8_16+1,w
  9073  0176  0020               	movlb	0	; select bank0
  9074  0177  00B9               	movwf	___flmul@temp+1
  9075  0178  0870               	movf	?__Umul8_16,w
  9076  0179  00B8               	movwf	___flmul@temp
  9077  017A  0838               	movf	___flmul@temp,w
  9078  017B  00A8               	movwf	??___flmul
  9079  017C  0839               	movf	___flmul@temp+1,w
  9080  017D  00A9               	movwf	??___flmul+1
  9081  017E  01AA               	clrf	??___flmul+2
  9082  017F  01AB               	clrf	??___flmul+3
  9083  0180  3008               	movlw	8
  9084  0181                     u190_25:	
  9085  0181  35A8               	lslf	??___flmul,f
  9086  0182  0DA9               	rlf	??___flmul+1,f
  9087  0183  0DAA               	rlf	??___flmul+2,f
  9088  0184  0DAB               	rlf	??___flmul+3,f
  9089  0185  0B89               	decfsz	9,f
  9090  0186  2981               	goto	u190_25
  9091  0187  0828               	movf	??___flmul,w
  9092  0188  07B4               	addwf	___flmul@prod,f
  9093  0189  0829               	movf	??___flmul+1,w
  9094  018A  3DB5               	addwfc	___flmul@prod+1,f
  9095  018B  082A               	movf	??___flmul+2,w
  9096  018C  3DB6               	addwfc	___flmul@prod+2,f
  9097  018D  082B               	movf	??___flmul+3,w
  9098  018E  3DB7               	addwfc	___flmul@prod+3,f
  9099  018F  082E               	movf	___flmul@grs,w
  9100  0190  00A8               	movwf	??___flmul
  9101  0191  082F               	movf	___flmul@grs+1,w
  9102  0192  00A9               	movwf	??___flmul+1
  9103  0193  0830               	movf	___flmul@grs+2,w
  9104  0194  00AA               	movwf	??___flmul+2
  9105  0195  0831               	movf	___flmul@grs+3,w
  9106  0196  00AB               	movwf	??___flmul+3
  9107  0197  3018               	movlw	24
  9108  0198                     u191_25:	
  9109  0198  36AB               	lsrf	??___flmul+3,f
  9110  0199  0CAA               	rrf	??___flmul+2,f
  9111  019A  0CA9               	rrf	??___flmul+1,f
  9112  019B  0CA8               	rrf	??___flmul,f
  9113  019C  0B89               	decfsz	9,f
  9114  019D  2998               	goto	u191_25
  9115  019E  0828               	movf	??___flmul,w
  9116  019F  07B4               	addwf	___flmul@prod,f
  9117  01A0  0829               	movf	??___flmul+1,w
  9118  01A1  3DB5               	addwfc	___flmul@prod+1,f
  9119  01A2  082A               	movf	??___flmul+2,w
  9120  01A3  3DB6               	addwfc	___flmul@prod+2,f
  9121  01A4  082B               	movf	??___flmul+3,w
  9122  01A5  3DB7               	addwfc	___flmul@prod+3,f
  9123  01A6  3008               	movlw	8
  9124  01A7                     u192_25:	
  9125  01A7  35AE               	lslf	___flmul@grs,f
  9126  01A8  0DAF               	rlf	___flmul@grs+1,f
  9127  01A9  0DB0               	rlf	___flmul@grs+2,f
  9128  01AA  0DB1               	rlf	___flmul@grs+3,f
  9129  01AB  0B89               	decfsz	9,f
  9130  01AC  29A7               	goto	u192_25
  9131  01AD  0833               	movf	___flmul@bexp,w
  9132  01AE  0732               	addwf	___flmul@aexp,w
  9133  01AF  00A8               	movwf	??___flmul
  9134  01B0  01A9               	clrf	??___flmul+1
  9135  01B1  0DA9               	rlf	??___flmul+1,f
  9136  01B2  0828               	movf	??___flmul,w
  9137  01B3  3E82               	addlw	130
  9138  01B4  00B8               	movwf	___flmul@temp
  9139  01B5  30FF               	movlw	255
  9140  01B6  3D29               	addwfc	??___flmul+1,w
  9141  01B7  00B9               	movwf	___flmul@temp+1
  9142  01B8                     i1l2191:	
  9143  01B8  1BB6               	btfsc	___flmul@prod+2,7
  9144  01B9  29CF               	goto	i1l2193
  9145  01BA  3001               	movlw	1
  9146  01BB                     u193_25:	
  9147  01BB  35B4               	lslf	___flmul@prod,f
  9148  01BC  0DB5               	rlf	___flmul@prod+1,f
  9149  01BD  0DB6               	rlf	___flmul@prod+2,f
  9150  01BE  0DB7               	rlf	___flmul@prod+3,f
  9151  01BF  0B89               	decfsz	9,f
  9152  01C0  29BB               	goto	u193_25
  9153  01C1  1BB1               	btfsc	___flmul@grs+3,7
  9154  01C2  1434               	bsf	___flmul@prod,0
  9155  01C3  3001               	movlw	1
  9156  01C4                     u195_25:	
  9157  01C4  35AE               	lslf	___flmul@grs,f
  9158  01C5  0DAF               	rlf	___flmul@grs+1,f
  9159  01C6  0DB0               	rlf	___flmul@grs+2,f
  9160  01C7  0DB1               	rlf	___flmul@grs+3,f
  9161  01C8  0B89               	decfsz	9,f
  9162  01C9  29C4               	goto	u195_25
  9163  01CA  30FF               	movlw	255
  9164  01CB  07B8               	addwf	___flmul@temp,f
  9165  01CC  30FF               	movlw	255
  9166  01CD  3DB9               	addwfc	___flmul@temp+1,f
  9167  01CE  29B8               	goto	i1l2191
  9168  01CF                     i1l2193:	
  9169  01CF  01B2               	clrf	___flmul@aexp
  9170  01D0  1FB1               	btfss	___flmul@grs+3,7
  9171  01D1  29E8               	goto	i1l2203
  9172  01D2  30FF               	movlw	255
  9173  01D3  052E               	andwf	___flmul@grs,w
  9174  01D4  00A8               	movwf	??___flmul
  9175  01D5  30FF               	movlw	255
  9176  01D6  052F               	andwf	___flmul@grs+1,w
  9177  01D7  00A9               	movwf	??___flmul+1
  9178  01D8  30FF               	movlw	255
  9179  01D9  0530               	andwf	___flmul@grs+2,w
  9180  01DA  00AA               	movwf	??___flmul+2
  9181  01DB  307F               	movlw	127
  9182  01DC  0531               	andwf	___flmul@grs+3,w
  9183  01DD  00AB               	movwf	??___flmul+3
  9184  01DE  082B               	movf	??___flmul+3,w
  9185  01DF  042A               	iorwf	??___flmul+2,w
  9186  01E0  0429               	iorwf	??___flmul+1,w
  9187  01E1  0428               	iorwf	??___flmul,w
  9188  01E2  1903               	skipnz
  9189  01E3  1834               	btfsc	___flmul@prod,0
  9190  01E4  29E6               	goto	i1l2199
  9191  01E5  29E8               	goto	i1l2203
  9192  01E6                     i1l2199:	
  9193  01E6  01B2               	clrf	___flmul@aexp
  9194  01E7  0AB2               	incf	___flmul@aexp,f
  9195  01E8                     i1l2203:	
  9196  01E8  0832               	movf	___flmul@aexp,w
  9197  01E9  1903               	btfsc	3,2
  9198  01EA  2A11               	goto	i1l2213
  9199  01EB  3001               	movlw	1
  9200  01EC  07B4               	addwf	___flmul@prod,f
  9201  01ED  3000               	movlw	0
  9202  01EE  3DB5               	addwfc	___flmul@prod+1,f
  9203  01EF  3000               	movlw	0
  9204  01F0  3DB6               	addwfc	___flmul@prod+2,f
  9205  01F1  3000               	movlw	0
  9206  01F2  3DB7               	addwfc	___flmul@prod+3,f
  9207  01F3  1C37               	btfss	___flmul@prod+3,0
  9208  01F4  2A11               	goto	i1l2213
  9209  01F5  0834               	movf	___flmul@prod,w
  9210  01F6  00A8               	movwf	??___flmul
  9211  01F7  0835               	movf	___flmul@prod+1,w
  9212  01F8  00A9               	movwf	??___flmul+1
  9213  01F9  0836               	movf	___flmul@prod+2,w
  9214  01FA  00AA               	movwf	??___flmul+2
  9215  01FB  0837               	movf	___flmul@prod+3,w
  9216  01FC  00AB               	movwf	??___flmul+3
  9217  01FD  3001               	movlw	1
  9218  01FE  00AC               	movwf	??___flmul+4
  9219  01FF                     u202_25:	
  9220  01FF  37AB               	asrf	??___flmul+3,f
  9221  0200  0CAA               	rrf	??___flmul+2,f
  9222  0201  0CA9               	rrf	??___flmul+1,f
  9223  0202  0CA8               	rrf	??___flmul,f
  9224  0203  0BAC               	decfsz	??___flmul+4,f
  9225  0204  29FF               	goto	u202_25
  9226  0205  082B               	movf	??___flmul+3,w
  9227  0206  00B7               	movwf	___flmul@prod+3
  9228  0207  082A               	movf	??___flmul+2,w
  9229  0208  00B6               	movwf	___flmul@prod+2
  9230  0209  0829               	movf	??___flmul+1,w
  9231  020A  00B5               	movwf	___flmul@prod+1
  9232  020B  0828               	movf	??___flmul,w
  9233  020C  00B4               	movwf	___flmul@prod
  9234  020D  3001               	movlw	1
  9235  020E  07B8               	addwf	___flmul@temp,f
  9236  020F  3000               	movlw	0
  9237  0210  3DB9               	addwfc	___flmul@temp+1,f
  9238  0211                     i1l2213:	
  9239  0211  0839               	movf	___flmul@temp+1,w
  9240  0212  3A80               	xorlw	128
  9241  0213  00A8               	movwf	??___flmul
  9242  0214  3080               	movlw	128
  9243  0215  0228               	subwf	??___flmul,w
  9244  0216  1D03               	skipz
  9245  0217  2A1A               	goto	u203_25
  9246  0218  30FF               	movlw	255
  9247  0219  0238               	subwf	___flmul@temp,w
  9248  021A                     u203_25:	
  9249  021A  1C03               	skipc
  9250  021B  2A26               	goto	i1l2217
  9251  021C  307F               	movlw	127
  9252  021D  0020               	movlb	0	; select bank0
  9253  021E  00B7               	movwf	___flmul@prod+3
  9254  021F  3080               	movlw	128
  9255  0220  00B6               	movwf	___flmul@prod+2
  9256  0221  3000               	movlw	0
  9257  0222  00B5               	movwf	___flmul@prod+1
  9258  0223  3000               	movlw	0
  9259  0224  00B4               	movwf	___flmul@prod
  9260  0225  2A50               	goto	i1l939
  9261  0226                     i1l2217:	
  9262  0226  0020               	movlb	0	; select bank0
  9263  0227  0839               	movf	___flmul@temp+1,w
  9264  0228  3A80               	xorlw	128
  9265  0229  00A8               	movwf	??___flmul
  9266  022A  3080               	movlw	128
  9267  022B  0228               	subwf	??___flmul,w
  9268  022C  1D03               	skipz
  9269  022D  2A30               	goto	u204_25
  9270  022E  3001               	movlw	1
  9271  022F  0238               	subwf	___flmul@temp,w
  9272  0230                     u204_25:	
  9273  0230  1803               	skipnc
  9274  0231  2A3D               	goto	i1l2223
  9275  0232  3000               	movlw	0
  9276  0233  0020               	movlb	0	; select bank0
  9277  0234  00B7               	movwf	___flmul@prod+3
  9278  0235  3000               	movlw	0
  9279  0236  00B6               	movwf	___flmul@prod+2
  9280  0237  3000               	movlw	0
  9281  0238  00B5               	movwf	___flmul@prod+1
  9282  0239  3000               	movlw	0
  9283  023A  00B4               	movwf	___flmul@prod
  9284  023B  01AD               	clrf	___flmul@sign
  9285  023C  2A50               	goto	i1l939
  9286  023D                     i1l2223:	
  9287  023D  0020               	movlb	0	; select bank0
  9288  023E  0838               	movf	___flmul@temp,w
  9289  023F  00A8               	movwf	??___flmul
  9290  0240  0828               	movf	??___flmul,w
  9291  0241  00B3               	movwf	___flmul@bexp
  9292  0242  30FF               	movlw	255
  9293  0243  05B4               	andwf	___flmul@prod,f
  9294  0244  30FF               	movlw	255
  9295  0245  05B5               	andwf	___flmul@prod+1,f
  9296  0246  307F               	movlw	127
  9297  0247  05B6               	andwf	___flmul@prod+2,f
  9298  0248  3000               	movlw	0
  9299  0249  05B7               	andwf	___flmul@prod+3,f
  9300  024A  1833               	btfsc	___flmul@bexp,0
  9301  024B  17B6               	bsf	___flmul@prod+2,7
  9302  024C  3633               	lsrf	___flmul@bexp,w
  9303  024D  00A8               	movwf	??___flmul
  9304  024E  0828               	movf	??___flmul,w
  9305  024F  00B7               	movwf	___flmul@prod+3
  9306  0250                     i1l939:	
  9307  0250  082D               	movf	___flmul@sign,w
  9308  0251  00A8               	movwf	??___flmul
  9309  0252  0828               	movf	??___flmul,w
  9310  0253  04B7               	iorwf	___flmul@prod+3,f
  9311  0254  0837               	movf	___flmul@prod+3,w
  9312  0255  00A3               	movwf	?___flmul+3
  9313  0256  0836               	movf	___flmul@prod+2,w
  9314  0257  00A2               	movwf	?___flmul+2
  9315  0258  0835               	movf	___flmul@prod+1,w
  9316  0259  00A1               	movwf	?___flmul+1
  9317  025A  0834               	movf	___flmul@prod,w
  9318  025B  00A0               	movwf	?___flmul
  9319  025C  0008               	return
  9320  025D                     __end_of___flmul:	
  9321                           
  9322                           	psect	text39
  9323  0DB5                     __ptext39:	
  9324 ;; *************** function __Umul8_16 *****************
  9325 ;; Defined at:
  9326 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul8_16.c"
  9327 ;; Parameters:    Size  Location     Type
  9328 ;;  multiplier      1    wreg     unsigned char 
  9329 ;;  multiplicand    1    0[COMMON] unsigned char 
  9330 ;; Auto vars:     Size  Location     Type
  9331 ;;  multiplier      1    8[COMMON] unsigned char 
  9332 ;;  word_mpld       2    6[COMMON] unsigned int 
  9333 ;;  product         2    4[COMMON] unsigned int 
  9334 ;; Return value:  Size  Location     Type
  9335 ;;                  2    0[COMMON] unsigned int 
  9336 ;; Registers used:
  9337 ;;		wreg, status,2, status,0
  9338 ;; Tracked objects:
  9339 ;;		On entry : 0/0
  9340 ;;		On exit  : 0/0
  9341 ;;		Unchanged: 0/0
  9342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9343 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9344 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9345 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9346 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9347 ;;Total ram usage:        9 bytes
  9348 ;; Hardware stack levels used:    1
  9349 ;; This function calls:
  9350 ;;		Nothing
  9351 ;; This function is called by:
  9352 ;;		___flmul
  9353 ;; This function uses a non-reentrant model
  9354 ;;
  9355                           
  9356                           
  9357                           ;psect for function __Umul8_16
  9358  0DB5                     __Umul8_16:	
  9359                           
  9360                           ;incstack = 0
  9361                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  9362                           ;__Umul8_16@multiplier stored from wreg
  9363  0DB5  00F8               	movwf	__Umul8_16@multiplier
  9364  0DB6  01F4               	clrf	__Umul8_16@product
  9365  0DB7  01F5               	clrf	__Umul8_16@product+1
  9366  0DB8  0870               	movf	__Umul8_16@multiplicand,w
  9367  0DB9  00F2               	movwf	??__Umul8_16
  9368  0DBA  01F3               	clrf	??__Umul8_16+1
  9369  0DBB  0872               	movf	??__Umul8_16,w
  9370  0DBC  00F6               	movwf	__Umul8_16@word_mpld
  9371  0DBD  0873               	movf	??__Umul8_16+1,w
  9372  0DBE  00F7               	movwf	__Umul8_16@word_mpld+1
  9373  0DBF                     i1l2027:	
  9374  0DBF  1C78               	btfss	__Umul8_16@multiplier,0
  9375  0DC0  2DC5               	goto	i1l1033
  9376  0DC1  0876               	movf	__Umul8_16@word_mpld,w
  9377  0DC2  07F4               	addwf	__Umul8_16@product,f
  9378  0DC3  0877               	movf	__Umul8_16@word_mpld+1,w
  9379  0DC4  3DF5               	addwfc	__Umul8_16@product+1,f
  9380  0DC5                     i1l1033:	
  9381  0DC5  3001               	movlw	1
  9382  0DC6                     u162_25:	
  9383  0DC6  35F6               	lslf	__Umul8_16@word_mpld,f
  9384  0DC7  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  9385  0DC8  0B89               	decfsz	9,f
  9386  0DC9  2DC6               	goto	u162_25
  9387  0DCA  1003               	clrc
  9388  0DCB  0CF8               	rrf	__Umul8_16@multiplier,f
  9389  0DCC  0878               	movf	__Umul8_16@multiplier,w
  9390  0DCD  1D03               	btfss	3,2
  9391  0DCE  2DBF               	goto	i1l2027
  9392  0DCF  0875               	movf	__Umul8_16@product+1,w
  9393  0DD0  00F1               	movwf	?__Umul8_16+1
  9394  0DD1  0874               	movf	__Umul8_16@product,w
  9395  0DD2  00F0               	movwf	?__Umul8_16
  9396  0DD3  0008               	return
  9397  0DD4                     __end_of__Umul8_16:	
  9398  007E                     btemp	set	126	;btemp
  9399  007E                     int$flags	set	126
  9400  007E                     wtemp0	set	126


Data Sizes:
    Strings     16
    Constant    32
    Data        0
    BSS         75
    Persistent  43
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     28      54
    BANK1            80     66      80
    BANK2            80     26      72
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    puts@s	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_2(CODE[6]), STR_1(CODE[7]), hrDisp(CODE[13]), distanceDisp(CODE[11]), 
		 -> speedDisp(CODE[8]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK2[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), STR_3(CODE[3]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S1050_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK2[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_2(CODE[6]), STR_1(CODE[7]), hrDisp(CODE[13]), distanceDisp(CODE[11]), 
		 -> speedDisp(CODE[8]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 13
		 -> STR_2(CODE[6]), STR_1(CODE[7]), hrDisp(CODE[13]), distanceDisp(CODE[11]), 
		 -> speedDisp(CODE[8]), 

    vfpfcnvrt@vp	PTR void  size(1) Largest target is 2
		 -> ?_printf(BANK2[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK2[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK2[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timerISR(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timerISR(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    IOCCF7_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> speedCalc(), IOCCF7_DefaultInterruptHandler(), 

    IOCCF7_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> speedCalc(), Absolute function(), IOCCF7_DefaultInterruptHandler(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _speedCalc->___xxtofl
    ___flmul->___xxtofl

Critical Paths under _main in BANK0

    _main->_IOCCF7_SetInterruptHandler
    _main->_TMR0_SetInterruptHandler
    _main->___fltol
    _main->_setCursor
    _setCursor->_EUSART_Write
    _pad->_strlen
    _fputc->_putch
    _putch->_EUSART_Write
    _abs->___aomod
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCCF7_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _speedCalc->___flmul

Critical Paths under _main in BANK1

    _resetCursor->_puts
    _puts->_fputs
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _SYSTEM_Initialize->_TMR0_Initialize

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   14658
                                             25 BANK2      1     1      0
         _IOCCF7_SetInterruptHandler
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                            ___fltol
                             _printf
                        _resetCursor
                          _setCursor
 ---------------------------------------------------------------------------------
 (1) _setCursor                                            4     3      1     636
                                             27 BANK0      1     0      1
                                              0 BANK1      3     3      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (1) _resetCursor                                          0     0      0    3382
                               _puts
 ---------------------------------------------------------------------------------
 (2) _puts                                                 5     3      2    3382
                                             17 BANK1      5     3      2
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (1) _printf                                              10     4      6    9223
                                             15 BANK2     10     4      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    8596
                                             63 BANK1      3     0      3
                                             10 BANK2      5     5      0
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           39    37      2    8149
                                             56 BANK1      7     5      2
                                              0 BANK2     10    10      0
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    6109
                                             26 BANK1     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    3878
                                             17 BANK1      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     166
                                             26 BANK0      2     0      2
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (3) _fputs                                                9     6      3    1914
                                              8 BANK1      9     6      3
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3    1210
                                              0 BANK1      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      62
                                             27 BANK0      1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (2) _EUSART_Write                                         1     1      0      31
                                             26 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             18 BANK1      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     613
                                             26 BANK0      1     1      0
                                              0 BANK1     18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     625
                                             26 BANK0      1     1      0
                                              0 BANK1     26    10     16
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             11     7      4     427
                                             26 BANK0      2     2      0
                                              0 BANK1      9     5      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     642
                     _ADC_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0     174
                                              0 BANK1      1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                             26 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     174
         _IOCCF7_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCCF7_SetInterruptHandler                           2     0      2     174
                                             26 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                             26 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                             26 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                             26 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          0     0      0    2815
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                           _timerISR *
 ---------------------------------------------------------------------------------
 (12) _timerISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _PIN_MANAGER_IOC                                     0     0      0    2815
                         _IOCCF7_ISR
 ---------------------------------------------------------------------------------
 (12) _IOCCF7_ISR                                          0     0      0    2815
                   Absolute function *
     _IOCCF7_DefaultInterruptHandler *
                          _speedCalc *
 ---------------------------------------------------------------------------------
 (13) _speedCalc                                           0     0      0    2815
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (14) ___xxtofl                                           14    10      4     398
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (14) ___flmul                                            26    18      8    2417
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (15) __Umul8_16                                           9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (13) _IOCCF7_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _IOCCF7_SetInterruptHandler
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCCF7_SetInterruptHandler
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _TMR0_SetInterruptHandler
   ___fltol
   _printf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART_Write
             _fputs
               _fputc
                 _putch
                   _EUSART_Write
             _strlen
         _fputc
           _putch
             _EUSART_Write
   _resetCursor
     _puts
       _fputc
         _putch
           _EUSART_Write
       _fputs
         _fputc
           _putch
             _EUSART_Write
   _setCursor
     _EUSART_Write

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
     _IOCCF7_ISR
       Absolute function(Fake) *
       _IOCCF7_DefaultInterruptHandler *
       _speedCalc *
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _timerISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1C      36       5       67.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     42      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     1A      48       9       90.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      DC      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      DC      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Apr 02 12:31:48 2019

                                  __CFG_CP$OFF 0000                                             l69 0CC2  
                              _timer0ReloadVal 0055                            __Umul8_16@word_mpld 0076  
                                          l351 0EE7                                            l630 05B6  
                                          l480 0F50                                            l731 0FE1  
                                          l643 0698                                            l483 0F70  
                                          l493 02C2                                            l494 02D2  
                                          l488 02A3                                            l497 0368  
                                          l489 02AB                                            _abs 0D67  
                                          _pad 0F35                                            _rpm 00E2  
               ?_EUSART_SetFramingErrorHandler 003A                                   __CFG_BORV$LO 0000  
                                          wreg 0009                                   __CFG_IESO$ON 0000  
                                 ___flmul@aexp 0032                                   ___flmul@bexp 0033  
       __end_of_IOCCF7_DefaultInterruptHandler 07FF        __size_of_IOCCF7_DefaultInterruptHandler 0001  
               _IOCCF7_DefaultInterruptHandler 07FE                                   ___flmul@sign 002D  
                                 ___flmul@temp 0038                                   ___flmul@prod 0034  
                                 __CFG_LVP$OFF 0000                                   __CFG_ZCD$OFF 0000  
                                 ___fltol@exp1 003B                                           ?_abs 00B2  
                                         l3013 0F9A                                           l3033 0FCD  
                                         l3017 0FA4                                           l3121 0ED9  
                                         l3043 0FF0                                           l3035 0FDD  
                                         l3069 06EC                                           l2705 0DD7  
                                         l2803 062A                                           l2811 0677  
                                         l2707 0DF8                                           l2715 0D86  
                                         l2805 063B                                           l2717 0D92  
                                         l2725 0F46                                           l2901 046D  
                                         l2735 0F52                                           l2911 0495  
                                         l2753 04F9                                           l2809 066B  
                                         l2729 0F4E                                           l2833 02CD  
                                         l2905 0470                                           l2921 04A5  
                                         l2771 0550                                           l2739 0F7F  
                                         l2827 02BD                                           l2915 049B  
                                         l2781 0595                                           l2757 0521  
                                         l2693 0E94                                           l2837 02FF  
                                         ?_pad 00B1                                           l2759 0527  
                                         l2791 05F5                                           l2695 0E9D  
                                         l2847 02DA                                           l2855 0374  
                                         l2769 053F                                           l2689 0E71  
                                         l2865 0387                                           l2961 0E28  
                                         l2779 0589                                           l2795 061D  
                                         l2859 037C                                           l2971 0EA9  
                                         l2869 0394                                           l2893 043D  
                                         l2885 03ED                                           l2973 0EB3  
                                         l2981 0ED1                                           l2959 0E0A  
                                         l2975 0EBD                                           l2977 0EC7  
                                         STR_1 1020                                           STR_2 1027  
                                         STR_3 102D                                           _LATA 010C  
                                         _LATB 010D                                           _LATC 010E  
                                         u3115 0FAE                                           u3145 0FCE  
                                         u3175 0FE5                                           u2615 0F5C  
                                         u2715 0576                                           u2635 0D71  
                                         u2565 0E92                                           u2815 0659  
                                         u2680 052F                                           u2905 02B5  
                                         u2850 0279                                           u2860 027A  
                                         u2935 0372                                           u2955 02EE  
                                         u2965 02FA                                           _TMR0 0015  
                                         _WPUA 020C                                           _WPUB 020D  
                                         _WPUC 020E                                   __CFG_WRT$OFF 0000  
                                __CFG_FCMEN$ON 0000                                           abs@a 00B2  
                                         _dbuf 0128                                           _main 06AA  
                                         _dtoa 025D                                           _prec 00EA  
                                         _nout 00E6                                           pad@i 00B5  
                                         pad@p 00B2                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           pad@w 00B7  
                                         btemp 007E                                           _puts 0D9A  
                                __CFG_BOREN$ON 0000                                           start 0014  
                                __CFG_MCLRE$ON 0000                                          ??_abs 00B4  
                                        ??_pad 00B4                        __end_of_TMR0_Initialize 0D67  
               ??_TMR0_DefaultInterruptHandler 0070                                  ?_EUSART_Write 0070  
               __size_of_OSCILLATOR_Initialize 0007                  __end_of_OSCILLATOR_Initialize 0CB8  
                          __size_of_IOCCF7_ISR 000D                                  ___fltol@sign1 003A  
                              __end_of___aodiv 05C8                                          ?_main 0070  
                                        ?_dtoa 00BA                                __end_of___aomod 06AA  
                                __CFG_WDTE$OFF 0000                                __end_of___flmul 025D  
                              __end_of___fltol 1000                                          ?_puts 00B1  
                                        i1l242 000D                                          i1l246 0012  
                                        i1l939 0250                                          i1l971 0797  
                                        i1l965 0761                                          i1l978 07AB  
                                        i1l979 07B5                                   vfpfcnvrt@fmt 00D8  
                                        _SLRC7 1877                                          _TRISA 008C  
                                        _TRISB 008D                                          _TRISC 008E  
            __size_of_TMR0_SetInterruptHandler 0009                      ?_TMR0_SetInterruptHandler 003A  
                             __end_of_TMR0_ISR 0D19                        __end_of_PIN_MANAGER_IOC 0CA5  
                                        _hrInt 004A                                          _flags 0048  
                                        _fputc 0E66                                          _fputs 0DD4  
                                        _speed 003C                                          pad@fp 00B9  
                                        _width 00E8                                          _putch 0CA5  
                                        dtoa@d 00BA                                          dtoa@i 00D6  
                                        dtoa@n 00CE                                          dtoa@p 00C8  
                                        dtoa@s 00CC                                          dtoa@w 00CA  
                                        pclath 000A                                          puts@s 00B1  
                                        status 0003                                          wtemp0 007E  
                              __initialization 0016                                   __end_of_main 0744  
                                 __end_of_dtoa 03A7                                   __end_of_puts 0DB5  
                               ??_EUSART_Write 003A                                 __CFG_LPBOR$OFF 0000  
                  ?_INTERRUPT_InterruptManager 0070                                         ??_main 0161  
                                       ??_dtoa 00C2                                         ??_puts 003C  
                               __CFG_PLLEN$OFF 0000              _EUSART_DefaultFramingErrorHandler 0000  
                                       _ADCON0 009D                                         _ADCON1 009E  
                                       _ADCON2 009F                     _EUSART_OverrunErrorHandler 0164  
                                       ?_fputc 00A0                                         ?_fputs 00A8  
                                       _ADRESH 009C                                         _ADRESL 009B  
                                       _ANSELA 018C                                         ?_putch 0070  
                                       _ANSELB 018D                                         _ANSELC 018E  
                 ??_IOCCF7_SetInterruptHandler 003C                                         _BORCON 0116  
                                       _RC1REG 0199                                         _RC1STA 019D  
                                       i1l1033 0DC5                                         i1l2111 004D  
                                       i1l2113 0055                                         i1l2027 0DBF  
                                       i1l2203 01E8                                         i1l2131 0078  
                                       _RB7PPS 0E9F                                         i1l2213 0211  
                                       i1l2109 004B                                         i1l2223 023D  
                                       i1l2127 006E                                         i1l2217 0226  
                                       i1l2129 0070                                         i1l2241 0759  
                                       _ODCONA 028C                                         _ODCONB 028D  
                                       i1l2139 0086                                         i1l2251 0774  
                                       _ODCONC 028E                                         i1l2261 07A9  
                                       i1l2253 0784                                         i1l2191 01B8  
                                       i1l2263 079C                                         i1l2247 0770  
                                       i1l2193 01CF                                         i1l2275 07D0  
                                       i1l2199 01E6                                         i1l2439 0D07  
                                       i1l2297 0F30                                         u202_25 01FF  
                                       u203_25 021A                                         u211_25 0791  
                                       u204_25 0230                                         u213_25 07A3  
                                       u217_25 07BD                                         u209_25 077D  
                                       u162_25 0DC6                                         u190_25 0181  
                                       u191_25 0198                                         u192_25 01A7  
                                       u193_25 01BB                                         u195_25 01C4  
                                       u188_25 00FC                                         u189_25 012B  
                                       _OSCCON 0099                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _TX1REG 019A  
                                       u265lld 04F6                                         _TX1STA 019E  
                                       u276lld 05F2                                   ?_resetCursor 0070  
                             __end_of___xxtofl 07D9                                 __CFG_PWRTE$OFF 0000  
                                 vfprintf@cfmt 0155                                      ??___aodiv 003A  
                                    ??___aomod 003A                                 __CFG_STVREN$ON 0000  
                                    ??___flmul 0028                                      ??___fltol 00A4  
                                       _hrDisp 1000                               ?_TMR0_Initialize 0070  
                                       _rpmInt 0051                                         _printf 0D3A  
                                       pad@buf 00B1                                         dtoa@fp 00C7  
                                       _strlen 0D80            __size_of_IOCCF7_SetInterruptHandler 0009  
                                       fputc@c 00A0                                         fputs@c 00AE  
                                       fputs@i 00AF                                         fputs@s 00A8  
                           __size_of__Umul8_16 001F                               __end_of_timerISR 0D3A  
                             __end_of_vfprintf 0E2E       TMR0_SetInterruptHandler@InterruptHandler 003A  
   IOCCF7_SetInterruptHandler@InterruptHandler 003A                               ?_PIN_MANAGER_IOC 0070  
                                 ??_IOCCF7_ISR 007E                                   ___xxtofl@arg 007A  
                         __end_of_distanceDisp 1018                                   ___xxtofl@exp 0079  
                            _SYSTEM_Initialize 0D19                                   ___xxtofl@val 0070  
                      __end_of__initialization 002D                                     _adcCounter 0040  
                           ?_SYSTEM_Initialize 0070                                     ___fltol@f1 00A0  
                               __pcstackCOMMON 0070                            ??_SYSTEM_Initialize 003C  
                                    ?_TMR0_ISR 0070                                  __end_of_fputc 0EA6  
                                __end_of_fputs 0DFD                                  __end_of_putch 0CAB  
                           __end_of_IOCCF7_ISR 0D0A                                 _OPTION_REGbits 0095  
              ??_EUSART_SetOverrunErrorHandler 003C                                        ??_fputc 00A3  
                    __end_of_SYSTEM_Initialize 0D28                                        ??_fputs 00AB  
                                      ??_putch 003B                                     __pbssBANK0 003C  
                                   __pbssBANK1 00E2                                     __pbssBANK2 0120  
                         __end_of_EUSART_Write 0CC8                              __end_of__Umul8_16 0DD4  
                                   __pmaintext 06AA               __end_of_TMR0_SetInterruptHandler 0CFD  
                                   ??_TMR0_ISR 0070                                __CFG_PPS1WAY$ON 0000  
                           __size_of_setCursor 0042                                     __pintentry 0004  
                                      ?_printf 0157                        __size_of_ADC_Initialize 0008  
                                      ?_strlen 003A                             __size_of_speedCalc 004D  
                              __CFG_WDTCCS$SWC 0000                                        _INLVLC7 1C77  
                                    ?___xxtofl 0070                             __size_of_vfpfcnvrt 0125  
                                      _OSCTUNE 0098                                        _SLRCONA 030C  
                                      _SLRCONB 030D                                        _SLRCONC 030E  
           __end_of_IOCCF7_SetInterruptHandler 0CF4                     _IOCCF7_SetInterruptHandler 0CEB  
                     ??_EUSART_SetErrorHandler 003C                           __size_of_resetCursor 0008  
                                    ?_timerISR 0070                                        ___aodiv 04CC  
                                      ___aomod 05C8                                        ___flmul 0031  
                                      ___fltol 0F8F                                      ?_vfprintf 00DF  
                                      __ptext1 0EA6                                        __ptext2 0CC8  
                                      __ptext3 0D9A                                        __ptext4 0D3A  
                                      __ptext5 0DFD                                        __ptext6 03A7  
                                      __ptext7 025D                                        __ptext8 0F35  
                                      __ptext9 0D80                                        _distInt 004C  
                              __size_of_printf 0016                                __size_of_strlen 001A  
                                      _counter 0044                          _OSCILLATOR_Initialize 0CB1  
                                 __size_of_abs 0019                                   __size_of_pad 005A  
                                   ??___xxtofl 0074                       ??_PIN_MANAGER_Initialize 003C  
                                    _IOCCFbits 0399                                      _IOCCNbits 0398  
                                    _IOCCPbits 0397                     __size_of_SYSTEM_Initialize 000F  
                                      clrloop0 0CAC                           end_of_initialization 002D  
                            __end_of_setCursor 0EE8          __end_of_EUSART_SetOverrunErrorHandler 0CEB  
       __size_of_EUSART_SetOverrunErrorHandler 0009                  _EUSART_SetOverrunErrorHandler 0CE2  
                                      fputc@fp 00A2                                        fputs@fp 00AA  
                            __end_of_speedCalc 0F35                              __end_of_speedDisp 1020  
                            _EUSART_Initialize 07D9                             ?_EUSART_Initialize 0070  
                            __end_of_vfpfcnvrt 04CC                                     ??_timerISR 0070  
                                   ??_vfprintf 0152                                        strlen@a 00A1  
                                      strlen@s 00A2                            ??_EUSART_Initialize 003C  
                                 _distanceDisp 100D                       _TMR0_SetInterruptHandler 0CF4  
                             __CFG_FOSC$INTOSC 0000                                  ___xxtofl@sign 0078  
                        __size_of_EUSART_Write 0008                __size_of_EUSART_SetErrorHandler 0009  
                                  ___flmul@grs 002E                      __end_of_EUSART_Initialize 07FD  
                   _EUSART_DefaultErrorHandler 0000                                    vfpfcnvrt@ap 00D9  
                                  vfpfcnvrt@fp 0151                                    vfpfcnvrt@ll 0148  
                                  vfpfcnvrt@vp 0150                                 __end_of_hrDisp 100D  
                                 _EUSART_Write 0CC0                              __size_of_TMR0_ISR 000F  
                               _ADC_Initialize 0CB8                         ?_OSCILLATOR_Initialize 0070  
                               __end_of_printf 0D50                                 __end_of_strlen 0D9A  
                          start_initialization 0016                       __size_of_TMR0_Initialize 0017  
              __size_of_PIN_MANAGER_Initialize 0038                                    __end_of_abs 0D80  
                                  __end_of_pad 0F8F                                    putch@txData 003B  
                     __size_of_PIN_MANAGER_IOC 0006                 ?_EUSART_SetOverrunErrorHandler 003A  
                                  vfprintf@fmt 00DF                     _EUSART_FramingErrorHandler 0166  
                       _EUSART_SetErrorHandler 0CD0                         __end_of_ADC_Initialize 0CC0  
                                    __Umul8_16 0DB5                                       ??_printf 015D  
                                     ??_strlen 00A0                                      ___flmul@a 0024  
                                    ___flmul@b 0020                                      ___latbits 0002  
                                __pcstackBANK0 0020                                  __pcstackBANK1 00A0  
                                __pcstackBANK2 0148                               ___aodiv@dividend 00A8  
                            __size_of___xxtofl 0095                    ?_IOCCF7_SetInterruptHandler 003A  
                   __size_of_EUSART_Initialize 0024                          _TMR0_InterruptHandler 00EC  
                                    __pnvBANK0 0055                                      __pnvBANK1 00EC  
                                    __pnvBANK2 0162                         _PIN_MANAGER_Initialize 0E2E  
                                     ?___aodiv 00A0                                       ?___aomod 00A0  
                             ___aodiv@quotient 00B2                                       ?___flmul 0020  
                                     ?___fltol 00A0                                      _heartRate 0120  
                                   ?__Umul8_16 0070                                     setCursor@a 00A2  
                                   setCursor@b 003B                                ?_ADC_Initialize 0070  
                            __size_of_timerISR 0012                   ??_INTERRUPT_InterruptManager 007E  
                            __size_of_vfprintf 0031                                       _BAUD1CON 019F  
                               __size_of_fputc 0040                                 __size_of_fputs 0029  
                               __size_of_putch 0006                              ??_TMR0_Initialize 00A0  
                                ??_resetCursor 003C         EUSART_SetErrorHandler@interruptHandler 003A  
                                    _setCursor 0EA6                                      clear_ram0 0CAB  
                            _eusartRxLastError 0050            __size_of_INTERRUPT_InterruptManager 0010  
                   ??_TMR0_SetInterruptHandler 003C                                       _PIR1bits 0010  
              ??_EUSART_SetFramingErrorHandler 003C                                      _puts$1096 00B5  
                                    _speedCalc 0EE8                                      _speedDisp 1018  
             ??_IOCCF7_DefaultInterruptHandler 0070                ?_IOCCF7_DefaultInterruptHandler 0070  
                         __CFG_WDTCPS$WDTCPS1F 0000                                       _TMR0_ISR 0D0A  
            _EUSART_DefaultOverrunErrorHandler 0000                              ??_PIN_MANAGER_IOC 007E  
                                    _vfpfcnvrt 03A7                                     _ADCON0bits 009D  
                                   ?_setCursor 003B                                     vfprintf@ap 00E1  
                                   vfprintf@fp 0154                            __end_of_resetCursor 0CD0  
                                   ?_speedCalc 0070                        ??_OSCILLATOR_Initialize 003A  
                                  ??__Umul8_16 0072                            _EUSART_ErrorHandler 0162  
                             __size_of___aodiv 00FC                               __size_of___aomod 00E2  
                             __size_of___flmul 022C                               __size_of___fltol 0071  
                                   ?_vfpfcnvrt 00D8                                ___aodiv@divisor 00A0  
                              ___aodiv@counter 00B0                                       ___xxtofl 0744  
                                     _dtoa$750 00C5                                       __ptext10 0DD4  
                                     __ptext11 0E66                                       __ptext20 0CF4  
                                     __ptext12 0CA5                                       __ptext21 0E2E  
                                     __ptext13 0CC0                                       __ptext30 0D0A  
                                     __ptext22 0CEB                                       __ptext14 0D67  
                                     __ptext31 07FD                                       __ptext23 0CB1  
                                     __ptext15 05C8                                       __ptext32 0D28  
                                     __ptext24 07D9                                       __ptext16 04CC  
                                     __ptext33 0C9F                                       __ptext25 0CE2  
                                     __ptext17 0F8F                                       __ptext34 0CFD  
                                     __ptext26 0CD9                                       __ptext18 0D19  
                                     __ptext35 07FE                                       __ptext27 0CD0  
                                     __ptext19 0D50                                       __ptext36 0EE8  
                                     __ptext28 0CB8                                       __ptext37 0744  
                                     __ptext38 0031                                       __ptext39 0DB5  
                                     _distance 0124                                     _IOCCF7_ISR 0CFD  
                                __size_of_main 009A                                  __size_of_dtoa 014A  
                                __size_of_puts 001B           __end_of_TMR0_DefaultInterruptHandler 07FE  
        __size_of_TMR0_DefaultInterruptHandler 0001                   _TMR0_DefaultInterruptHandler 07FD  
                         __CFG_WDTCWS$WDTCWSSW 0000                        ?_EUSART_SetErrorHandler 003A  
                                   _RC1STAbits 019D  EUSART_SetOverrunErrorHandler@interruptHandler 003A  
                                     _timerISR 0D28                                       _speedInt 004E  
                                     int$flags 007E                                       _vfprintf 0DFD  
           __end_of_INTERRUPT_InterruptManager 0014                     _INTERRUPT_InterruptManager 0004  
                                    printf@fmt 0157          __end_of_EUSART_SetFramingErrorHandler 0CE2  
       __size_of_EUSART_SetFramingErrorHandler 0009                  _EUSART_SetFramingErrorHandler 0CD9  
                             ___aomod@dividend 00A8                                     _INTCONbits 000B  
                                     intlevel1 0000                        ?_PIN_MANAGER_Initialize 0070  
                                  _resetCursor 0CC8                 __end_of_EUSART_SetErrorHandler 0CD9  
                                  ??_setCursor 00A0                              __CFG_CLKOUTEN$OFF 0000  
                             ??_ADC_Initialize 003A                  ?_TMR0_DefaultInterruptHandler 0070  
                                  ??_speedCalc 007E                                       printf@ap 0160  
EUSART_SetFramingErrorHandler@interruptHandler 003A                                ___aomod@divisor 00A0  
                                  ??_vfpfcnvrt 00DA                                ___aomod@counter 00B0  
                                __pstringtext1 1000                                  __pstringtext2 100D  
                                __pstringtext3 1018                                  __pstringtext4 1020  
                                __pstringtext5 1027                                  __pstringtext6 102D  
                                __pstringtext7 0000                         __Umul8_16@multiplicand 0070  
                                   _OPTION_REG 0095                                _TMR0_Initialize 0D50  
                                   _TX1STAbits 019E                             EUSART_Write@txData 003A  
                                 ___aodiv@sign 00B1                 __end_of_PIN_MANAGER_Initialize 0E66  
                                  ?_IOCCF7_ISR 0070                                _PIN_MANAGER_IOC 0C9F  
                         __Umul8_16@multiplier 0078                                   ___aomod@sign 00B1  
                      _IOCCF7_InterruptHandler 00EE                              __Umul8_16@product 0074  
