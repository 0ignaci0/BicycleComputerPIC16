

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Apr 02 13:28:58 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1619
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
    10                           	psect	stringtext4,global,class=STRCODE,delta=2
    11                           	psect	stringtext5,global,class=STRCODE,delta=2
    12                           	psect	stringtext6,global,class=STRCODE,delta=2
    13                           	psect	cinit,global,class=CODE,merge=1,delta=2
    14                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    18                           	psect	clrtext,global,class=CODE,delta=2
    19                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    21                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    23                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    24                           	psect	text1,local,class=CODE,merge=1,delta=2
    25                           	psect	text2,local,class=CODE,merge=1,delta=2
    26                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text5,local,class=CODE,merge=1,delta=2
    29                           	psect	text6,local,class=CODE,merge=1,delta=2
    30                           	psect	text7,local,class=CODE,merge=1,delta=2
    31                           	psect	text8,local,class=CODE,merge=1,delta=2
    32                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text12,local,class=CODE,merge=1,delta=2
    36                           	psect	text13,local,class=CODE,merge=1,delta=2
    37                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    46                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    47                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    48                           	psect	text25,local,class=CODE,merge=1,delta=2
    49                           	psect	text26,local,class=CODE,merge=1,delta=2
    50                           	psect	text27,local,class=CODE,merge=1,delta=2
    51                           	psect	text28,local,class=CODE,merge=1,delta=2
    52                           	psect	text29,local,class=CODE,merge=1,delta=2
    53                           	psect	text30,local,class=CODE,merge=1,delta=2
    54                           	psect	text31,local,class=CODE,merge=1,delta=2
    55                           	psect	text32,local,class=CODE,merge=1,delta=2
    56                           	psect	text33,local,class=CODE,merge=1,delta=2
    57                           	psect	text34,local,class=CODE,merge=1,delta=2
    58                           	psect	text35,local,class=CODE,merge=1,delta=2
    59                           	psect	intentry,global,class=CODE,delta=2
    60                           	psect	text37,local,class=CODE,merge=1,delta=2
    61                           	psect	text38,local,class=CODE,merge=1,delta=2
    62                           	psect	text39,local,class=CODE,merge=1,delta=2
    63                           	psect	text40,local,class=CODE,merge=1,delta=2
    64                           	psect	text41,local,class=CODE,merge=1,delta=2
    65                           	psect	text42,local,class=CODE,merge=1,delta=2
    66                           	psect	text43,local,class=CODE,merge=1,delta=2
    67                           	psect	text44,local,class=CODE,merge=1,delta=2
    68                           	dabs	1,0x7E,2
    69  0000                     
    70                           ; Version 2.05
    71                           ; Generated 20/12/2018 GMT
    72                           ; 
    73                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    74                           ; All rights reserved.
    75                           ; 
    76                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    77                           ; 
    78                           ; Redistribution and use in source and binary forms, with or without modification, are
    79                           ; permitted provided that the following conditions are met:
    80                           ; 
    81                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    82                           ;        conditions and the following disclaimer.
    83                           ; 
    84                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    85                           ;        of conditions and the following disclaimer in the documentation and/or other
    86                           ;        materials provided with the distribution.
    87                           ; 
    88                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    89                           ;        software without specific prior written permission.
    90                           ; 
    91                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    92                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    93                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    94                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    95                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    96                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    97                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    98                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    99                           ; 
   100                           ; 
   101                           ; Code-generator required, PIC16F1619 Definitions
   102                           ; 
   103                           ; SFR Addresses
   104  0000                     	;# 
   105  0001                     	;# 
   106  0002                     	;# 
   107  0003                     	;# 
   108  0004                     	;# 
   109  0005                     	;# 
   110  0006                     	;# 
   111  0007                     	;# 
   112  0008                     	;# 
   113  0009                     	;# 
   114  000A                     	;# 
   115  000B                     	;# 
   116  000C                     	;# 
   117  000D                     	;# 
   118  000E                     	;# 
   119  0010                     	;# 
   120  0011                     	;# 
   121  0012                     	;# 
   122  0013                     	;# 
   123  0014                     	;# 
   124  0015                     	;# 
   125  0016                     	;# 
   126  0016                     	;# 
   127  0017                     	;# 
   128  0018                     	;# 
   129  0019                     	;# 
   130  001A                     	;# 
   131  001A                     	;# 
   132  001B                     	;# 
   133  001B                     	;# 
   134  001C                     	;# 
   135  001D                     	;# 
   136  001E                     	;# 
   137  001F                     	;# 
   138  008C                     	;# 
   139  008D                     	;# 
   140  008E                     	;# 
   141  0090                     	;# 
   142  0091                     	;# 
   143  0092                     	;# 
   144  0093                     	;# 
   145  0094                     	;# 
   146  0095                     	;# 
   147  0096                     	;# 
   148  0098                     	;# 
   149  0099                     	;# 
   150  009A                     	;# 
   151  009B                     	;# 
   152  009B                     	;# 
   153  009C                     	;# 
   154  009D                     	;# 
   155  009E                     	;# 
   156  009F                     	;# 
   157  010C                     	;# 
   158  010D                     	;# 
   159  010E                     	;# 
   160  0111                     	;# 
   161  0112                     	;# 
   162  0113                     	;# 
   163  0114                     	;# 
   164  0115                     	;# 
   165  0116                     	;# 
   166  0117                     	;# 
   167  0118                     	;# 
   168  0119                     	;# 
   169  011C                     	;# 
   170  018C                     	;# 
   171  018D                     	;# 
   172  018E                     	;# 
   173  0191                     	;# 
   174  0191                     	;# 
   175  0192                     	;# 
   176  0193                     	;# 
   177  0193                     	;# 
   178  0194                     	;# 
   179  0195                     	;# 
   180  0196                     	;# 
   181  0197                     	;# 
   182  0199                     	;# 
   183  0199                     	;# 
   184  0199                     	;# 
   185  019A                     	;# 
   186  019A                     	;# 
   187  019A                     	;# 
   188  019B                     	;# 
   189  019B                     	;# 
   190  019B                     	;# 
   191  019B                     	;# 
   192  019B                     	;# 
   193  019C                     	;# 
   194  019C                     	;# 
   195  019C                     	;# 
   196  019D                     	;# 
   197  019D                     	;# 
   198  019D                     	;# 
   199  019E                     	;# 
   200  019E                     	;# 
   201  019E                     	;# 
   202  019F                     	;# 
   203  019F                     	;# 
   204  019F                     	;# 
   205  019F                     	;# 
   206  019F                     	;# 
   207  020C                     	;# 
   208  020D                     	;# 
   209  020E                     	;# 
   210  0211                     	;# 
   211  0211                     	;# 
   212  0212                     	;# 
   213  0212                     	;# 
   214  0213                     	;# 
   215  0213                     	;# 
   216  0214                     	;# 
   217  0214                     	;# 
   218  0215                     	;# 
   219  0215                     	;# 
   220  0215                     	;# 
   221  0215                     	;# 
   222  0216                     	;# 
   223  0216                     	;# 
   224  0217                     	;# 
   225  0217                     	;# 
   226  028C                     	;# 
   227  028D                     	;# 
   228  028E                     	;# 
   229  0291                     	;# 
   230  0291                     	;# 
   231  0292                     	;# 
   232  0293                     	;# 
   233  0294                     	;# 
   234  0298                     	;# 
   235  0298                     	;# 
   236  0299                     	;# 
   237  029A                     	;# 
   238  029B                     	;# 
   239  029E                     	;# 
   240  030C                     	;# 
   241  030D                     	;# 
   242  030E                     	;# 
   243  038C                     	;# 
   244  038D                     	;# 
   245  038E                     	;# 
   246  0391                     	;# 
   247  0392                     	;# 
   248  0393                     	;# 
   249  0394                     	;# 
   250  0395                     	;# 
   251  0396                     	;# 
   252  0397                     	;# 
   253  0398                     	;# 
   254  0399                     	;# 
   255  040E                     	;# 
   256  0413                     	;# 
   257  0413                     	;# 
   258  0414                     	;# 
   259  0414                     	;# 
   260  0415                     	;# 
   261  0416                     	;# 
   262  0417                     	;# 
   263  0418                     	;# 
   264  041A                     	;# 
   265  041A                     	;# 
   266  041B                     	;# 
   267  041B                     	;# 
   268  041C                     	;# 
   269  041D                     	;# 
   270  041E                     	;# 
   271  041F                     	;# 
   272  0493                     	;# 
   273  0494                     	;# 
   274  0495                     	;# 
   275  0496                     	;# 
   276  049A                     	;# 
   277  049B                     	;# 
   278  049C                     	;# 
   279  049D                     	;# 
   280  058C                     	;# 
   281  058C                     	;# 
   282  058D                     	;# 
   283  058E                     	;# 
   284  058E                     	;# 
   285  058F                     	;# 
   286  0590                     	;# 
   287  0590                     	;# 
   288  0591                     	;# 
   289  0592                     	;# 
   290  0592                     	;# 
   291  0593                     	;# 
   292  0594                     	;# 
   293  0594                     	;# 
   294  0595                     	;# 
   295  0596                     	;# 
   296  0596                     	;# 
   297  0597                     	;# 
   298  0598                     	;# 
   299  0599                     	;# 
   300  059A                     	;# 
   301  059B                     	;# 
   302  059B                     	;# 
   303  059C                     	;# 
   304  059D                     	;# 
   305  060C                     	;# 
   306  060C                     	;# 
   307  060D                     	;# 
   308  060E                     	;# 
   309  060F                     	;# 
   310  060F                     	;# 
   311  0610                     	;# 
   312  0611                     	;# 
   313  0612                     	;# 
   314  0613                     	;# 
   315  0614                     	;# 
   316  0617                     	;# 
   317  0617                     	;# 
   318  0618                     	;# 
   319  0619                     	;# 
   320  061A                     	;# 
   321  061A                     	;# 
   322  061B                     	;# 
   323  061C                     	;# 
   324  0691                     	;# 
   325  0692                     	;# 
   326  0693                     	;# 
   327  0694                     	;# 
   328  0695                     	;# 
   329  0696                     	;# 
   330  0697                     	;# 
   331  0699                     	;# 
   332  069A                     	;# 
   333  0711                     	;# 
   334  0712                     	;# 
   335  0713                     	;# 
   336  0714                     	;# 
   337  0715                     	;# 
   338  0718                     	;# 
   339  0718                     	;# 
   340  0719                     	;# 
   341  071A                     	;# 
   342  071A                     	;# 
   343  071B                     	;# 
   344  071C                     	;# 
   345  071D                     	;# 
   346  0791                     	;# 
   347  0791                     	;# 
   348  0792                     	;# 
   349  0793                     	;# 
   350  0793                     	;# 
   351  0794                     	;# 
   352  0795                     	;# 
   353  0795                     	;# 
   354  0796                     	;# 
   355  0797                     	;# 
   356  0797                     	;# 
   357  0798                     	;# 
   358  0799                     	;# 
   359  079A                     	;# 
   360  080C                     	;# 
   361  080C                     	;# 
   362  080D                     	;# 
   363  080E                     	;# 
   364  080E                     	;# 
   365  080F                     	;# 
   366  0810                     	;# 
   367  0810                     	;# 
   368  0811                     	;# 
   369  0812                     	;# 
   370  0812                     	;# 
   371  0813                     	;# 
   372  0814                     	;# 
   373  0815                     	;# 
   374  0816                     	;# 
   375  0817                     	;# 
   376  0818                     	;# 
   377  0819                     	;# 
   378  081A                     	;# 
   379  081A                     	;# 
   380  081B                     	;# 
   381  081C                     	;# 
   382  081C                     	;# 
   383  081D                     	;# 
   384  088C                     	;# 
   385  088D                     	;# 
   386  088E                     	;# 
   387  088F                     	;# 
   388  088F                     	;# 
   389  0890                     	;# 
   390  0891                     	;# 
   391  0892                     	;# 
   392  0893                     	;# 
   393  0893                     	;# 
   394  0894                     	;# 
   395  0895                     	;# 
   396  0896                     	;# 
   397  0897                     	;# 
   398  0897                     	;# 
   399  0898                     	;# 
   400  0899                     	;# 
   401  0D8C                     	;# 
   402  0D8C                     	;# 
   403  0D8D                     	;# 
   404  0D8E                     	;# 
   405  0D8F                     	;# 
   406  0D8F                     	;# 
   407  0D90                     	;# 
   408  0D91                     	;# 
   409  0D92                     	;# 
   410  0D92                     	;# 
   411  0D93                     	;# 
   412  0D94                     	;# 
   413  0D95                     	;# 
   414  0D95                     	;# 
   415  0D96                     	;# 
   416  0D97                     	;# 
   417  0D98                     	;# 
   418  0D99                     	;# 
   419  0D9A                     	;# 
   420  0D9B                     	;# 
   421  0D9C                     	;# 
   422  0D9D                     	;# 
   423  0D9E                     	;# 
   424  0D9E                     	;# 
   425  0D9F                     	;# 
   426  0DA0                     	;# 
   427  0DA1                     	;# 
   428  0DA1                     	;# 
   429  0DA2                     	;# 
   430  0DA3                     	;# 
   431  0DA4                     	;# 
   432  0DA4                     	;# 
   433  0DA5                     	;# 
   434  0DA6                     	;# 
   435  0DA7                     	;# 
   436  0DA7                     	;# 
   437  0DA8                     	;# 
   438  0DA9                     	;# 
   439  0DAA                     	;# 
   440  0DAB                     	;# 
   441  0DAC                     	;# 
   442  0DAD                     	;# 
   443  0DAE                     	;# 
   444  0DAF                     	;# 
   445  0E0F                     	;# 
   446  0E10                     	;# 
   447  0E11                     	;# 
   448  0E12                     	;# 
   449  0E13                     	;# 
   450  0E14                     	;# 
   451  0E15                     	;# 
   452  0E16                     	;# 
   453  0E17                     	;# 
   454  0E18                     	;# 
   455  0E19                     	;# 
   456  0E1A                     	;# 
   457  0E1B                     	;# 
   458  0E1C                     	;# 
   459  0E1D                     	;# 
   460  0E1E                     	;# 
   461  0E1F                     	;# 
   462  0E20                     	;# 
   463  0E21                     	;# 
   464  0E22                     	;# 
   465  0E23                     	;# 
   466  0E24                     	;# 
   467  0E25                     	;# 
   468  0E26                     	;# 
   469  0E27                     	;# 
   470  0E28                     	;# 
   471  0E29                     	;# 
   472  0E2A                     	;# 
   473  0E2B                     	;# 
   474  0E2C                     	;# 
   475  0E2D                     	;# 
   476  0E2E                     	;# 
   477  0E90                     	;# 
   478  0E91                     	;# 
   479  0E92                     	;# 
   480  0E94                     	;# 
   481  0E95                     	;# 
   482  0E9C                     	;# 
   483  0E9D                     	;# 
   484  0E9E                     	;# 
   485  0E9F                     	;# 
   486  0EA0                     	;# 
   487  0EA1                     	;# 
   488  0EA2                     	;# 
   489  0EA3                     	;# 
   490  0EA4                     	;# 
   491  0EA5                     	;# 
   492  0EA6                     	;# 
   493  0EA7                     	;# 
   494  0F0F                     	;# 
   495  0F10                     	;# 
   496  0F11                     	;# 
   497  0F12                     	;# 
   498  0F13                     	;# 
   499  0F14                     	;# 
   500  0F15                     	;# 
   501  0F16                     	;# 
   502  0F17                     	;# 
   503  0F18                     	;# 
   504  0F19                     	;# 
   505  0F1A                     	;# 
   506  0F1B                     	;# 
   507  0F1C                     	;# 
   508  0F1D                     	;# 
   509  0F1E                     	;# 
   510  0F1F                     	;# 
   511  0F20                     	;# 
   512  0F21                     	;# 
   513  0F22                     	;# 
   514  0F23                     	;# 
   515  0F24                     	;# 
   516  0F25                     	;# 
   517  0F26                     	;# 
   518  0F27                     	;# 
   519  0F28                     	;# 
   520  0F29                     	;# 
   521  0F2A                     	;# 
   522  0F2B                     	;# 
   523  0F2C                     	;# 
   524  0F2D                     	;# 
   525  0F2E                     	;# 
   526  0F2F                     	;# 
   527  0F30                     	;# 
   528  0F31                     	;# 
   529  0F32                     	;# 
   530  0F33                     	;# 
   531  0F34                     	;# 
   532  0F35                     	;# 
   533  0F36                     	;# 
   534  0F37                     	;# 
   535  0FE4                     	;# 
   536  0FE5                     	;# 
   537  0FE6                     	;# 
   538  0FE7                     	;# 
   539  0FE8                     	;# 
   540  0FE9                     	;# 
   541  0FEA                     	;# 
   542  0FEB                     	;# 
   543  0FED                     	;# 
   544  0FEE                     	;# 
   545  0FEF                     	;# 
   546  0000                     	;# 
   547  0001                     	;# 
   548  0002                     	;# 
   549  0003                     	;# 
   550  0004                     	;# 
   551  0005                     	;# 
   552  0006                     	;# 
   553  0007                     	;# 
   554  0008                     	;# 
   555  0009                     	;# 
   556  000A                     	;# 
   557  000B                     	;# 
   558  000C                     	;# 
   559  000D                     	;# 
   560  000E                     	;# 
   561  0010                     	;# 
   562  0011                     	;# 
   563  0012                     	;# 
   564  0013                     	;# 
   565  0014                     	;# 
   566  0015                     	;# 
   567  0016                     	;# 
   568  0016                     	;# 
   569  0017                     	;# 
   570  0018                     	;# 
   571  0019                     	;# 
   572  001A                     	;# 
   573  001A                     	;# 
   574  001B                     	;# 
   575  001B                     	;# 
   576  001C                     	;# 
   577  001D                     	;# 
   578  001E                     	;# 
   579  001F                     	;# 
   580  008C                     	;# 
   581  008D                     	;# 
   582  008E                     	;# 
   583  0090                     	;# 
   584  0091                     	;# 
   585  0092                     	;# 
   586  0093                     	;# 
   587  0094                     	;# 
   588  0095                     	;# 
   589  0096                     	;# 
   590  0098                     	;# 
   591  0099                     	;# 
   592  009A                     	;# 
   593  009B                     	;# 
   594  009B                     	;# 
   595  009C                     	;# 
   596  009D                     	;# 
   597  009E                     	;# 
   598  009F                     	;# 
   599  010C                     	;# 
   600  010D                     	;# 
   601  010E                     	;# 
   602  0111                     	;# 
   603  0112                     	;# 
   604  0113                     	;# 
   605  0114                     	;# 
   606  0115                     	;# 
   607  0116                     	;# 
   608  0117                     	;# 
   609  0118                     	;# 
   610  0119                     	;# 
   611  011C                     	;# 
   612  018C                     	;# 
   613  018D                     	;# 
   614  018E                     	;# 
   615  0191                     	;# 
   616  0191                     	;# 
   617  0192                     	;# 
   618  0193                     	;# 
   619  0193                     	;# 
   620  0194                     	;# 
   621  0195                     	;# 
   622  0196                     	;# 
   623  0197                     	;# 
   624  0199                     	;# 
   625  0199                     	;# 
   626  0199                     	;# 
   627  019A                     	;# 
   628  019A                     	;# 
   629  019A                     	;# 
   630  019B                     	;# 
   631  019B                     	;# 
   632  019B                     	;# 
   633  019B                     	;# 
   634  019B                     	;# 
   635  019C                     	;# 
   636  019C                     	;# 
   637  019C                     	;# 
   638  019D                     	;# 
   639  019D                     	;# 
   640  019D                     	;# 
   641  019E                     	;# 
   642  019E                     	;# 
   643  019E                     	;# 
   644  019F                     	;# 
   645  019F                     	;# 
   646  019F                     	;# 
   647  019F                     	;# 
   648  019F                     	;# 
   649  020C                     	;# 
   650  020D                     	;# 
   651  020E                     	;# 
   652  0211                     	;# 
   653  0211                     	;# 
   654  0212                     	;# 
   655  0212                     	;# 
   656  0213                     	;# 
   657  0213                     	;# 
   658  0214                     	;# 
   659  0214                     	;# 
   660  0215                     	;# 
   661  0215                     	;# 
   662  0215                     	;# 
   663  0215                     	;# 
   664  0216                     	;# 
   665  0216                     	;# 
   666  0217                     	;# 
   667  0217                     	;# 
   668  028C                     	;# 
   669  028D                     	;# 
   670  028E                     	;# 
   671  0291                     	;# 
   672  0291                     	;# 
   673  0292                     	;# 
   674  0293                     	;# 
   675  0294                     	;# 
   676  0298                     	;# 
   677  0298                     	;# 
   678  0299                     	;# 
   679  029A                     	;# 
   680  029B                     	;# 
   681  029E                     	;# 
   682  030C                     	;# 
   683  030D                     	;# 
   684  030E                     	;# 
   685  038C                     	;# 
   686  038D                     	;# 
   687  038E                     	;# 
   688  0391                     	;# 
   689  0392                     	;# 
   690  0393                     	;# 
   691  0394                     	;# 
   692  0395                     	;# 
   693  0396                     	;# 
   694  0397                     	;# 
   695  0398                     	;# 
   696  0399                     	;# 
   697  040E                     	;# 
   698  0413                     	;# 
   699  0413                     	;# 
   700  0414                     	;# 
   701  0414                     	;# 
   702  0415                     	;# 
   703  0416                     	;# 
   704  0417                     	;# 
   705  0418                     	;# 
   706  041A                     	;# 
   707  041A                     	;# 
   708  041B                     	;# 
   709  041B                     	;# 
   710  041C                     	;# 
   711  041D                     	;# 
   712  041E                     	;# 
   713  041F                     	;# 
   714  0493                     	;# 
   715  0494                     	;# 
   716  0495                     	;# 
   717  0496                     	;# 
   718  049A                     	;# 
   719  049B                     	;# 
   720  049C                     	;# 
   721  049D                     	;# 
   722  058C                     	;# 
   723  058C                     	;# 
   724  058D                     	;# 
   725  058E                     	;# 
   726  058E                     	;# 
   727  058F                     	;# 
   728  0590                     	;# 
   729  0590                     	;# 
   730  0591                     	;# 
   731  0592                     	;# 
   732  0592                     	;# 
   733  0593                     	;# 
   734  0594                     	;# 
   735  0594                     	;# 
   736  0595                     	;# 
   737  0596                     	;# 
   738  0596                     	;# 
   739  0597                     	;# 
   740  0598                     	;# 
   741  0599                     	;# 
   742  059A                     	;# 
   743  059B                     	;# 
   744  059B                     	;# 
   745  059C                     	;# 
   746  059D                     	;# 
   747  060C                     	;# 
   748  060C                     	;# 
   749  060D                     	;# 
   750  060E                     	;# 
   751  060F                     	;# 
   752  060F                     	;# 
   753  0610                     	;# 
   754  0611                     	;# 
   755  0612                     	;# 
   756  0613                     	;# 
   757  0614                     	;# 
   758  0617                     	;# 
   759  0617                     	;# 
   760  0618                     	;# 
   761  0619                     	;# 
   762  061A                     	;# 
   763  061A                     	;# 
   764  061B                     	;# 
   765  061C                     	;# 
   766  0691                     	;# 
   767  0692                     	;# 
   768  0693                     	;# 
   769  0694                     	;# 
   770  0695                     	;# 
   771  0696                     	;# 
   772  0697                     	;# 
   773  0699                     	;# 
   774  069A                     	;# 
   775  0711                     	;# 
   776  0712                     	;# 
   777  0713                     	;# 
   778  0714                     	;# 
   779  0715                     	;# 
   780  0718                     	;# 
   781  0718                     	;# 
   782  0719                     	;# 
   783  071A                     	;# 
   784  071A                     	;# 
   785  071B                     	;# 
   786  071C                     	;# 
   787  071D                     	;# 
   788  0791                     	;# 
   789  0791                     	;# 
   790  0792                     	;# 
   791  0793                     	;# 
   792  0793                     	;# 
   793  0794                     	;# 
   794  0795                     	;# 
   795  0795                     	;# 
   796  0796                     	;# 
   797  0797                     	;# 
   798  0797                     	;# 
   799  0798                     	;# 
   800  0799                     	;# 
   801  079A                     	;# 
   802  080C                     	;# 
   803  080C                     	;# 
   804  080D                     	;# 
   805  080E                     	;# 
   806  080E                     	;# 
   807  080F                     	;# 
   808  0810                     	;# 
   809  0810                     	;# 
   810  0811                     	;# 
   811  0812                     	;# 
   812  0812                     	;# 
   813  0813                     	;# 
   814  0814                     	;# 
   815  0815                     	;# 
   816  0816                     	;# 
   817  0817                     	;# 
   818  0818                     	;# 
   819  0819                     	;# 
   820  081A                     	;# 
   821  081A                     	;# 
   822  081B                     	;# 
   823  081C                     	;# 
   824  081C                     	;# 
   825  081D                     	;# 
   826  088C                     	;# 
   827  088D                     	;# 
   828  088E                     	;# 
   829  088F                     	;# 
   830  088F                     	;# 
   831  0890                     	;# 
   832  0891                     	;# 
   833  0892                     	;# 
   834  0893                     	;# 
   835  0893                     	;# 
   836  0894                     	;# 
   837  0895                     	;# 
   838  0896                     	;# 
   839  0897                     	;# 
   840  0897                     	;# 
   841  0898                     	;# 
   842  0899                     	;# 
   843  0D8C                     	;# 
   844  0D8C                     	;# 
   845  0D8D                     	;# 
   846  0D8E                     	;# 
   847  0D8F                     	;# 
   848  0D8F                     	;# 
   849  0D90                     	;# 
   850  0D91                     	;# 
   851  0D92                     	;# 
   852  0D92                     	;# 
   853  0D93                     	;# 
   854  0D94                     	;# 
   855  0D95                     	;# 
   856  0D95                     	;# 
   857  0D96                     	;# 
   858  0D97                     	;# 
   859  0D98                     	;# 
   860  0D99                     	;# 
   861  0D9A                     	;# 
   862  0D9B                     	;# 
   863  0D9C                     	;# 
   864  0D9D                     	;# 
   865  0D9E                     	;# 
   866  0D9E                     	;# 
   867  0D9F                     	;# 
   868  0DA0                     	;# 
   869  0DA1                     	;# 
   870  0DA1                     	;# 
   871  0DA2                     	;# 
   872  0DA3                     	;# 
   873  0DA4                     	;# 
   874  0DA4                     	;# 
   875  0DA5                     	;# 
   876  0DA6                     	;# 
   877  0DA7                     	;# 
   878  0DA7                     	;# 
   879  0DA8                     	;# 
   880  0DA9                     	;# 
   881  0DAA                     	;# 
   882  0DAB                     	;# 
   883  0DAC                     	;# 
   884  0DAD                     	;# 
   885  0DAE                     	;# 
   886  0DAF                     	;# 
   887  0E0F                     	;# 
   888  0E10                     	;# 
   889  0E11                     	;# 
   890  0E12                     	;# 
   891  0E13                     	;# 
   892  0E14                     	;# 
   893  0E15                     	;# 
   894  0E16                     	;# 
   895  0E17                     	;# 
   896  0E18                     	;# 
   897  0E19                     	;# 
   898  0E1A                     	;# 
   899  0E1B                     	;# 
   900  0E1C                     	;# 
   901  0E1D                     	;# 
   902  0E1E                     	;# 
   903  0E1F                     	;# 
   904  0E20                     	;# 
   905  0E21                     	;# 
   906  0E22                     	;# 
   907  0E23                     	;# 
   908  0E24                     	;# 
   909  0E25                     	;# 
   910  0E26                     	;# 
   911  0E27                     	;# 
   912  0E28                     	;# 
   913  0E29                     	;# 
   914  0E2A                     	;# 
   915  0E2B                     	;# 
   916  0E2C                     	;# 
   917  0E2D                     	;# 
   918  0E2E                     	;# 
   919  0E90                     	;# 
   920  0E91                     	;# 
   921  0E92                     	;# 
   922  0E94                     	;# 
   923  0E95                     	;# 
   924  0E9C                     	;# 
   925  0E9D                     	;# 
   926  0E9E                     	;# 
   927  0E9F                     	;# 
   928  0EA0                     	;# 
   929  0EA1                     	;# 
   930  0EA2                     	;# 
   931  0EA3                     	;# 
   932  0EA4                     	;# 
   933  0EA5                     	;# 
   934  0EA6                     	;# 
   935  0EA7                     	;# 
   936  0F0F                     	;# 
   937  0F10                     	;# 
   938  0F11                     	;# 
   939  0F12                     	;# 
   940  0F13                     	;# 
   941  0F14                     	;# 
   942  0F15                     	;# 
   943  0F16                     	;# 
   944  0F17                     	;# 
   945  0F18                     	;# 
   946  0F19                     	;# 
   947  0F1A                     	;# 
   948  0F1B                     	;# 
   949  0F1C                     	;# 
   950  0F1D                     	;# 
   951  0F1E                     	;# 
   952  0F1F                     	;# 
   953  0F20                     	;# 
   954  0F21                     	;# 
   955  0F22                     	;# 
   956  0F23                     	;# 
   957  0F24                     	;# 
   958  0F25                     	;# 
   959  0F26                     	;# 
   960  0F27                     	;# 
   961  0F28                     	;# 
   962  0F29                     	;# 
   963  0F2A                     	;# 
   964  0F2B                     	;# 
   965  0F2C                     	;# 
   966  0F2D                     	;# 
   967  0F2E                     	;# 
   968  0F2F                     	;# 
   969  0F30                     	;# 
   970  0F31                     	;# 
   971  0F32                     	;# 
   972  0F33                     	;# 
   973  0F34                     	;# 
   974  0F35                     	;# 
   975  0F36                     	;# 
   976  0F37                     	;# 
   977  0FE4                     	;# 
   978  0FE5                     	;# 
   979  0FE6                     	;# 
   980  0FE7                     	;# 
   981  0FE8                     	;# 
   982  0FE9                     	;# 
   983  0FEA                     	;# 
   984  0FEB                     	;# 
   985  0FED                     	;# 
   986  0FEE                     	;# 
   987  0FEF                     	;# 
   988  0000                     	;# 
   989  0001                     	;# 
   990  0002                     	;# 
   991  0003                     	;# 
   992  0004                     	;# 
   993  0005                     	;# 
   994  0006                     	;# 
   995  0007                     	;# 
   996  0008                     	;# 
   997  0009                     	;# 
   998  000A                     	;# 
   999  000B                     	;# 
  1000  000C                     	;# 
  1001  000D                     	;# 
  1002  000E                     	;# 
  1003  0010                     	;# 
  1004  0011                     	;# 
  1005  0012                     	;# 
  1006  0013                     	;# 
  1007  0014                     	;# 
  1008  0015                     	;# 
  1009  0016                     	;# 
  1010  0016                     	;# 
  1011  0017                     	;# 
  1012  0018                     	;# 
  1013  0019                     	;# 
  1014  001A                     	;# 
  1015  001A                     	;# 
  1016  001B                     	;# 
  1017  001B                     	;# 
  1018  001C                     	;# 
  1019  001D                     	;# 
  1020  001E                     	;# 
  1021  001F                     	;# 
  1022  008C                     	;# 
  1023  008D                     	;# 
  1024  008E                     	;# 
  1025  0090                     	;# 
  1026  0091                     	;# 
  1027  0092                     	;# 
  1028  0093                     	;# 
  1029  0094                     	;# 
  1030  0095                     	;# 
  1031  0096                     	;# 
  1032  0098                     	;# 
  1033  0099                     	;# 
  1034  009A                     	;# 
  1035  009B                     	;# 
  1036  009B                     	;# 
  1037  009C                     	;# 
  1038  009D                     	;# 
  1039  009E                     	;# 
  1040  009F                     	;# 
  1041  010C                     	;# 
  1042  010D                     	;# 
  1043  010E                     	;# 
  1044  0111                     	;# 
  1045  0112                     	;# 
  1046  0113                     	;# 
  1047  0114                     	;# 
  1048  0115                     	;# 
  1049  0116                     	;# 
  1050  0117                     	;# 
  1051  0118                     	;# 
  1052  0119                     	;# 
  1053  011C                     	;# 
  1054  018C                     	;# 
  1055  018D                     	;# 
  1056  018E                     	;# 
  1057  0191                     	;# 
  1058  0191                     	;# 
  1059  0192                     	;# 
  1060  0193                     	;# 
  1061  0193                     	;# 
  1062  0194                     	;# 
  1063  0195                     	;# 
  1064  0196                     	;# 
  1065  0197                     	;# 
  1066  0199                     	;# 
  1067  0199                     	;# 
  1068  0199                     	;# 
  1069  019A                     	;# 
  1070  019A                     	;# 
  1071  019A                     	;# 
  1072  019B                     	;# 
  1073  019B                     	;# 
  1074  019B                     	;# 
  1075  019B                     	;# 
  1076  019B                     	;# 
  1077  019C                     	;# 
  1078  019C                     	;# 
  1079  019C                     	;# 
  1080  019D                     	;# 
  1081  019D                     	;# 
  1082  019D                     	;# 
  1083  019E                     	;# 
  1084  019E                     	;# 
  1085  019E                     	;# 
  1086  019F                     	;# 
  1087  019F                     	;# 
  1088  019F                     	;# 
  1089  019F                     	;# 
  1090  019F                     	;# 
  1091  020C                     	;# 
  1092  020D                     	;# 
  1093  020E                     	;# 
  1094  0211                     	;# 
  1095  0211                     	;# 
  1096  0212                     	;# 
  1097  0212                     	;# 
  1098  0213                     	;# 
  1099  0213                     	;# 
  1100  0214                     	;# 
  1101  0214                     	;# 
  1102  0215                     	;# 
  1103  0215                     	;# 
  1104  0215                     	;# 
  1105  0215                     	;# 
  1106  0216                     	;# 
  1107  0216                     	;# 
  1108  0217                     	;# 
  1109  0217                     	;# 
  1110  028C                     	;# 
  1111  028D                     	;# 
  1112  028E                     	;# 
  1113  0291                     	;# 
  1114  0291                     	;# 
  1115  0292                     	;# 
  1116  0293                     	;# 
  1117  0294                     	;# 
  1118  0298                     	;# 
  1119  0298                     	;# 
  1120  0299                     	;# 
  1121  029A                     	;# 
  1122  029B                     	;# 
  1123  029E                     	;# 
  1124  030C                     	;# 
  1125  030D                     	;# 
  1126  030E                     	;# 
  1127  038C                     	;# 
  1128  038D                     	;# 
  1129  038E                     	;# 
  1130  0391                     	;# 
  1131  0392                     	;# 
  1132  0393                     	;# 
  1133  0394                     	;# 
  1134  0395                     	;# 
  1135  0396                     	;# 
  1136  0397                     	;# 
  1137  0398                     	;# 
  1138  0399                     	;# 
  1139  040E                     	;# 
  1140  0413                     	;# 
  1141  0413                     	;# 
  1142  0414                     	;# 
  1143  0414                     	;# 
  1144  0415                     	;# 
  1145  0416                     	;# 
  1146  0417                     	;# 
  1147  0418                     	;# 
  1148  041A                     	;# 
  1149  041A                     	;# 
  1150  041B                     	;# 
  1151  041B                     	;# 
  1152  041C                     	;# 
  1153  041D                     	;# 
  1154  041E                     	;# 
  1155  041F                     	;# 
  1156  0493                     	;# 
  1157  0494                     	;# 
  1158  0495                     	;# 
  1159  0496                     	;# 
  1160  049A                     	;# 
  1161  049B                     	;# 
  1162  049C                     	;# 
  1163  049D                     	;# 
  1164  058C                     	;# 
  1165  058C                     	;# 
  1166  058D                     	;# 
  1167  058E                     	;# 
  1168  058E                     	;# 
  1169  058F                     	;# 
  1170  0590                     	;# 
  1171  0590                     	;# 
  1172  0591                     	;# 
  1173  0592                     	;# 
  1174  0592                     	;# 
  1175  0593                     	;# 
  1176  0594                     	;# 
  1177  0594                     	;# 
  1178  0595                     	;# 
  1179  0596                     	;# 
  1180  0596                     	;# 
  1181  0597                     	;# 
  1182  0598                     	;# 
  1183  0599                     	;# 
  1184  059A                     	;# 
  1185  059B                     	;# 
  1186  059B                     	;# 
  1187  059C                     	;# 
  1188  059D                     	;# 
  1189  060C                     	;# 
  1190  060C                     	;# 
  1191  060D                     	;# 
  1192  060E                     	;# 
  1193  060F                     	;# 
  1194  060F                     	;# 
  1195  0610                     	;# 
  1196  0611                     	;# 
  1197  0612                     	;# 
  1198  0613                     	;# 
  1199  0614                     	;# 
  1200  0617                     	;# 
  1201  0617                     	;# 
  1202  0618                     	;# 
  1203  0619                     	;# 
  1204  061A                     	;# 
  1205  061A                     	;# 
  1206  061B                     	;# 
  1207  061C                     	;# 
  1208  0691                     	;# 
  1209  0692                     	;# 
  1210  0693                     	;# 
  1211  0694                     	;# 
  1212  0695                     	;# 
  1213  0696                     	;# 
  1214  0697                     	;# 
  1215  0699                     	;# 
  1216  069A                     	;# 
  1217  0711                     	;# 
  1218  0712                     	;# 
  1219  0713                     	;# 
  1220  0714                     	;# 
  1221  0715                     	;# 
  1222  0718                     	;# 
  1223  0718                     	;# 
  1224  0719                     	;# 
  1225  071A                     	;# 
  1226  071A                     	;# 
  1227  071B                     	;# 
  1228  071C                     	;# 
  1229  071D                     	;# 
  1230  0791                     	;# 
  1231  0791                     	;# 
  1232  0792                     	;# 
  1233  0793                     	;# 
  1234  0793                     	;# 
  1235  0794                     	;# 
  1236  0795                     	;# 
  1237  0795                     	;# 
  1238  0796                     	;# 
  1239  0797                     	;# 
  1240  0797                     	;# 
  1241  0798                     	;# 
  1242  0799                     	;# 
  1243  079A                     	;# 
  1244  080C                     	;# 
  1245  080C                     	;# 
  1246  080D                     	;# 
  1247  080E                     	;# 
  1248  080E                     	;# 
  1249  080F                     	;# 
  1250  0810                     	;# 
  1251  0810                     	;# 
  1252  0811                     	;# 
  1253  0812                     	;# 
  1254  0812                     	;# 
  1255  0813                     	;# 
  1256  0814                     	;# 
  1257  0815                     	;# 
  1258  0816                     	;# 
  1259  0817                     	;# 
  1260  0818                     	;# 
  1261  0819                     	;# 
  1262  081A                     	;# 
  1263  081A                     	;# 
  1264  081B                     	;# 
  1265  081C                     	;# 
  1266  081C                     	;# 
  1267  081D                     	;# 
  1268  088C                     	;# 
  1269  088D                     	;# 
  1270  088E                     	;# 
  1271  088F                     	;# 
  1272  088F                     	;# 
  1273  0890                     	;# 
  1274  0891                     	;# 
  1275  0892                     	;# 
  1276  0893                     	;# 
  1277  0893                     	;# 
  1278  0894                     	;# 
  1279  0895                     	;# 
  1280  0896                     	;# 
  1281  0897                     	;# 
  1282  0897                     	;# 
  1283  0898                     	;# 
  1284  0899                     	;# 
  1285  0D8C                     	;# 
  1286  0D8C                     	;# 
  1287  0D8D                     	;# 
  1288  0D8E                     	;# 
  1289  0D8F                     	;# 
  1290  0D8F                     	;# 
  1291  0D90                     	;# 
  1292  0D91                     	;# 
  1293  0D92                     	;# 
  1294  0D92                     	;# 
  1295  0D93                     	;# 
  1296  0D94                     	;# 
  1297  0D95                     	;# 
  1298  0D95                     	;# 
  1299  0D96                     	;# 
  1300  0D97                     	;# 
  1301  0D98                     	;# 
  1302  0D99                     	;# 
  1303  0D9A                     	;# 
  1304  0D9B                     	;# 
  1305  0D9C                     	;# 
  1306  0D9D                     	;# 
  1307  0D9E                     	;# 
  1308  0D9E                     	;# 
  1309  0D9F                     	;# 
  1310  0DA0                     	;# 
  1311  0DA1                     	;# 
  1312  0DA1                     	;# 
  1313  0DA2                     	;# 
  1314  0DA3                     	;# 
  1315  0DA4                     	;# 
  1316  0DA4                     	;# 
  1317  0DA5                     	;# 
  1318  0DA6                     	;# 
  1319  0DA7                     	;# 
  1320  0DA7                     	;# 
  1321  0DA8                     	;# 
  1322  0DA9                     	;# 
  1323  0DAA                     	;# 
  1324  0DAB                     	;# 
  1325  0DAC                     	;# 
  1326  0DAD                     	;# 
  1327  0DAE                     	;# 
  1328  0DAF                     	;# 
  1329  0E0F                     	;# 
  1330  0E10                     	;# 
  1331  0E11                     	;# 
  1332  0E12                     	;# 
  1333  0E13                     	;# 
  1334  0E14                     	;# 
  1335  0E15                     	;# 
  1336  0E16                     	;# 
  1337  0E17                     	;# 
  1338  0E18                     	;# 
  1339  0E19                     	;# 
  1340  0E1A                     	;# 
  1341  0E1B                     	;# 
  1342  0E1C                     	;# 
  1343  0E1D                     	;# 
  1344  0E1E                     	;# 
  1345  0E1F                     	;# 
  1346  0E20                     	;# 
  1347  0E21                     	;# 
  1348  0E22                     	;# 
  1349  0E23                     	;# 
  1350  0E24                     	;# 
  1351  0E25                     	;# 
  1352  0E26                     	;# 
  1353  0E27                     	;# 
  1354  0E28                     	;# 
  1355  0E29                     	;# 
  1356  0E2A                     	;# 
  1357  0E2B                     	;# 
  1358  0E2C                     	;# 
  1359  0E2D                     	;# 
  1360  0E2E                     	;# 
  1361  0E90                     	;# 
  1362  0E91                     	;# 
  1363  0E92                     	;# 
  1364  0E94                     	;# 
  1365  0E95                     	;# 
  1366  0E9C                     	;# 
  1367  0E9D                     	;# 
  1368  0E9E                     	;# 
  1369  0E9F                     	;# 
  1370  0EA0                     	;# 
  1371  0EA1                     	;# 
  1372  0EA2                     	;# 
  1373  0EA3                     	;# 
  1374  0EA4                     	;# 
  1375  0EA5                     	;# 
  1376  0EA6                     	;# 
  1377  0EA7                     	;# 
  1378  0F0F                     	;# 
  1379  0F10                     	;# 
  1380  0F11                     	;# 
  1381  0F12                     	;# 
  1382  0F13                     	;# 
  1383  0F14                     	;# 
  1384  0F15                     	;# 
  1385  0F16                     	;# 
  1386  0F17                     	;# 
  1387  0F18                     	;# 
  1388  0F19                     	;# 
  1389  0F1A                     	;# 
  1390  0F1B                     	;# 
  1391  0F1C                     	;# 
  1392  0F1D                     	;# 
  1393  0F1E                     	;# 
  1394  0F1F                     	;# 
  1395  0F20                     	;# 
  1396  0F21                     	;# 
  1397  0F22                     	;# 
  1398  0F23                     	;# 
  1399  0F24                     	;# 
  1400  0F25                     	;# 
  1401  0F26                     	;# 
  1402  0F27                     	;# 
  1403  0F28                     	;# 
  1404  0F29                     	;# 
  1405  0F2A                     	;# 
  1406  0F2B                     	;# 
  1407  0F2C                     	;# 
  1408  0F2D                     	;# 
  1409  0F2E                     	;# 
  1410  0F2F                     	;# 
  1411  0F30                     	;# 
  1412  0F31                     	;# 
  1413  0F32                     	;# 
  1414  0F33                     	;# 
  1415  0F34                     	;# 
  1416  0F35                     	;# 
  1417  0F36                     	;# 
  1418  0F37                     	;# 
  1419  0FE4                     	;# 
  1420  0FE5                     	;# 
  1421  0FE6                     	;# 
  1422  0FE7                     	;# 
  1423  0FE8                     	;# 
  1424  0FE9                     	;# 
  1425  0FEA                     	;# 
  1426  0FEB                     	;# 
  1427  0FED                     	;# 
  1428  0FEE                     	;# 
  1429  0FEF                     	;# 
  1430  0000                     	;# 
  1431  0001                     	;# 
  1432  0002                     	;# 
  1433  0003                     	;# 
  1434  0004                     	;# 
  1435  0005                     	;# 
  1436  0006                     	;# 
  1437  0007                     	;# 
  1438  0008                     	;# 
  1439  0009                     	;# 
  1440  000A                     	;# 
  1441  000B                     	;# 
  1442  000C                     	;# 
  1443  000D                     	;# 
  1444  000E                     	;# 
  1445  0010                     	;# 
  1446  0011                     	;# 
  1447  0012                     	;# 
  1448  0013                     	;# 
  1449  0014                     	;# 
  1450  0015                     	;# 
  1451  0016                     	;# 
  1452  0016                     	;# 
  1453  0017                     	;# 
  1454  0018                     	;# 
  1455  0019                     	;# 
  1456  001A                     	;# 
  1457  001A                     	;# 
  1458  001B                     	;# 
  1459  001B                     	;# 
  1460  001C                     	;# 
  1461  001D                     	;# 
  1462  001E                     	;# 
  1463  001F                     	;# 
  1464  008C                     	;# 
  1465  008D                     	;# 
  1466  008E                     	;# 
  1467  0090                     	;# 
  1468  0091                     	;# 
  1469  0092                     	;# 
  1470  0093                     	;# 
  1471  0094                     	;# 
  1472  0095                     	;# 
  1473  0096                     	;# 
  1474  0098                     	;# 
  1475  0099                     	;# 
  1476  009A                     	;# 
  1477  009B                     	;# 
  1478  009B                     	;# 
  1479  009C                     	;# 
  1480  009D                     	;# 
  1481  009E                     	;# 
  1482  009F                     	;# 
  1483  010C                     	;# 
  1484  010D                     	;# 
  1485  010E                     	;# 
  1486  0111                     	;# 
  1487  0112                     	;# 
  1488  0113                     	;# 
  1489  0114                     	;# 
  1490  0115                     	;# 
  1491  0116                     	;# 
  1492  0117                     	;# 
  1493  0118                     	;# 
  1494  0119                     	;# 
  1495  011C                     	;# 
  1496  018C                     	;# 
  1497  018D                     	;# 
  1498  018E                     	;# 
  1499  0191                     	;# 
  1500  0191                     	;# 
  1501  0192                     	;# 
  1502  0193                     	;# 
  1503  0193                     	;# 
  1504  0194                     	;# 
  1505  0195                     	;# 
  1506  0196                     	;# 
  1507  0197                     	;# 
  1508  0199                     	;# 
  1509  0199                     	;# 
  1510  0199                     	;# 
  1511  019A                     	;# 
  1512  019A                     	;# 
  1513  019A                     	;# 
  1514  019B                     	;# 
  1515  019B                     	;# 
  1516  019B                     	;# 
  1517  019B                     	;# 
  1518  019B                     	;# 
  1519  019C                     	;# 
  1520  019C                     	;# 
  1521  019C                     	;# 
  1522  019D                     	;# 
  1523  019D                     	;# 
  1524  019D                     	;# 
  1525  019E                     	;# 
  1526  019E                     	;# 
  1527  019E                     	;# 
  1528  019F                     	;# 
  1529  019F                     	;# 
  1530  019F                     	;# 
  1531  019F                     	;# 
  1532  019F                     	;# 
  1533  020C                     	;# 
  1534  020D                     	;# 
  1535  020E                     	;# 
  1536  0211                     	;# 
  1537  0211                     	;# 
  1538  0212                     	;# 
  1539  0212                     	;# 
  1540  0213                     	;# 
  1541  0213                     	;# 
  1542  0214                     	;# 
  1543  0214                     	;# 
  1544  0215                     	;# 
  1545  0215                     	;# 
  1546  0215                     	;# 
  1547  0215                     	;# 
  1548  0216                     	;# 
  1549  0216                     	;# 
  1550  0217                     	;# 
  1551  0217                     	;# 
  1552  028C                     	;# 
  1553  028D                     	;# 
  1554  028E                     	;# 
  1555  0291                     	;# 
  1556  0291                     	;# 
  1557  0292                     	;# 
  1558  0293                     	;# 
  1559  0294                     	;# 
  1560  0298                     	;# 
  1561  0298                     	;# 
  1562  0299                     	;# 
  1563  029A                     	;# 
  1564  029B                     	;# 
  1565  029E                     	;# 
  1566  030C                     	;# 
  1567  030D                     	;# 
  1568  030E                     	;# 
  1569  038C                     	;# 
  1570  038D                     	;# 
  1571  038E                     	;# 
  1572  0391                     	;# 
  1573  0392                     	;# 
  1574  0393                     	;# 
  1575  0394                     	;# 
  1576  0395                     	;# 
  1577  0396                     	;# 
  1578  0397                     	;# 
  1579  0398                     	;# 
  1580  0399                     	;# 
  1581  040E                     	;# 
  1582  0413                     	;# 
  1583  0413                     	;# 
  1584  0414                     	;# 
  1585  0414                     	;# 
  1586  0415                     	;# 
  1587  0416                     	;# 
  1588  0417                     	;# 
  1589  0418                     	;# 
  1590  041A                     	;# 
  1591  041A                     	;# 
  1592  041B                     	;# 
  1593  041B                     	;# 
  1594  041C                     	;# 
  1595  041D                     	;# 
  1596  041E                     	;# 
  1597  041F                     	;# 
  1598  0493                     	;# 
  1599  0494                     	;# 
  1600  0495                     	;# 
  1601  0496                     	;# 
  1602  049A                     	;# 
  1603  049B                     	;# 
  1604  049C                     	;# 
  1605  049D                     	;# 
  1606  058C                     	;# 
  1607  058C                     	;# 
  1608  058D                     	;# 
  1609  058E                     	;# 
  1610  058E                     	;# 
  1611  058F                     	;# 
  1612  0590                     	;# 
  1613  0590                     	;# 
  1614  0591                     	;# 
  1615  0592                     	;# 
  1616  0592                     	;# 
  1617  0593                     	;# 
  1618  0594                     	;# 
  1619  0594                     	;# 
  1620  0595                     	;# 
  1621  0596                     	;# 
  1622  0596                     	;# 
  1623  0597                     	;# 
  1624  0598                     	;# 
  1625  0599                     	;# 
  1626  059A                     	;# 
  1627  059B                     	;# 
  1628  059B                     	;# 
  1629  059C                     	;# 
  1630  059D                     	;# 
  1631  060C                     	;# 
  1632  060C                     	;# 
  1633  060D                     	;# 
  1634  060E                     	;# 
  1635  060F                     	;# 
  1636  060F                     	;# 
  1637  0610                     	;# 
  1638  0611                     	;# 
  1639  0612                     	;# 
  1640  0613                     	;# 
  1641  0614                     	;# 
  1642  0617                     	;# 
  1643  0617                     	;# 
  1644  0618                     	;# 
  1645  0619                     	;# 
  1646  061A                     	;# 
  1647  061A                     	;# 
  1648  061B                     	;# 
  1649  061C                     	;# 
  1650  0691                     	;# 
  1651  0692                     	;# 
  1652  0693                     	;# 
  1653  0694                     	;# 
  1654  0695                     	;# 
  1655  0696                     	;# 
  1656  0697                     	;# 
  1657  0699                     	;# 
  1658  069A                     	;# 
  1659  0711                     	;# 
  1660  0712                     	;# 
  1661  0713                     	;# 
  1662  0714                     	;# 
  1663  0715                     	;# 
  1664  0718                     	;# 
  1665  0718                     	;# 
  1666  0719                     	;# 
  1667  071A                     	;# 
  1668  071A                     	;# 
  1669  071B                     	;# 
  1670  071C                     	;# 
  1671  071D                     	;# 
  1672  0791                     	;# 
  1673  0791                     	;# 
  1674  0792                     	;# 
  1675  0793                     	;# 
  1676  0793                     	;# 
  1677  0794                     	;# 
  1678  0795                     	;# 
  1679  0795                     	;# 
  1680  0796                     	;# 
  1681  0797                     	;# 
  1682  0797                     	;# 
  1683  0798                     	;# 
  1684  0799                     	;# 
  1685  079A                     	;# 
  1686  080C                     	;# 
  1687  080C                     	;# 
  1688  080D                     	;# 
  1689  080E                     	;# 
  1690  080E                     	;# 
  1691  080F                     	;# 
  1692  0810                     	;# 
  1693  0810                     	;# 
  1694  0811                     	;# 
  1695  0812                     	;# 
  1696  0812                     	;# 
  1697  0813                     	;# 
  1698  0814                     	;# 
  1699  0815                     	;# 
  1700  0816                     	;# 
  1701  0817                     	;# 
  1702  0818                     	;# 
  1703  0819                     	;# 
  1704  081A                     	;# 
  1705  081A                     	;# 
  1706  081B                     	;# 
  1707  081C                     	;# 
  1708  081C                     	;# 
  1709  081D                     	;# 
  1710  088C                     	;# 
  1711  088D                     	;# 
  1712  088E                     	;# 
  1713  088F                     	;# 
  1714  088F                     	;# 
  1715  0890                     	;# 
  1716  0891                     	;# 
  1717  0892                     	;# 
  1718  0893                     	;# 
  1719  0893                     	;# 
  1720  0894                     	;# 
  1721  0895                     	;# 
  1722  0896                     	;# 
  1723  0897                     	;# 
  1724  0897                     	;# 
  1725  0898                     	;# 
  1726  0899                     	;# 
  1727  0D8C                     	;# 
  1728  0D8C                     	;# 
  1729  0D8D                     	;# 
  1730  0D8E                     	;# 
  1731  0D8F                     	;# 
  1732  0D8F                     	;# 
  1733  0D90                     	;# 
  1734  0D91                     	;# 
  1735  0D92                     	;# 
  1736  0D92                     	;# 
  1737  0D93                     	;# 
  1738  0D94                     	;# 
  1739  0D95                     	;# 
  1740  0D95                     	;# 
  1741  0D96                     	;# 
  1742  0D97                     	;# 
  1743  0D98                     	;# 
  1744  0D99                     	;# 
  1745  0D9A                     	;# 
  1746  0D9B                     	;# 
  1747  0D9C                     	;# 
  1748  0D9D                     	;# 
  1749  0D9E                     	;# 
  1750  0D9E                     	;# 
  1751  0D9F                     	;# 
  1752  0DA0                     	;# 
  1753  0DA1                     	;# 
  1754  0DA1                     	;# 
  1755  0DA2                     	;# 
  1756  0DA3                     	;# 
  1757  0DA4                     	;# 
  1758  0DA4                     	;# 
  1759  0DA5                     	;# 
  1760  0DA6                     	;# 
  1761  0DA7                     	;# 
  1762  0DA7                     	;# 
  1763  0DA8                     	;# 
  1764  0DA9                     	;# 
  1765  0DAA                     	;# 
  1766  0DAB                     	;# 
  1767  0DAC                     	;# 
  1768  0DAD                     	;# 
  1769  0DAE                     	;# 
  1770  0DAF                     	;# 
  1771  0E0F                     	;# 
  1772  0E10                     	;# 
  1773  0E11                     	;# 
  1774  0E12                     	;# 
  1775  0E13                     	;# 
  1776  0E14                     	;# 
  1777  0E15                     	;# 
  1778  0E16                     	;# 
  1779  0E17                     	;# 
  1780  0E18                     	;# 
  1781  0E19                     	;# 
  1782  0E1A                     	;# 
  1783  0E1B                     	;# 
  1784  0E1C                     	;# 
  1785  0E1D                     	;# 
  1786  0E1E                     	;# 
  1787  0E1F                     	;# 
  1788  0E20                     	;# 
  1789  0E21                     	;# 
  1790  0E22                     	;# 
  1791  0E23                     	;# 
  1792  0E24                     	;# 
  1793  0E25                     	;# 
  1794  0E26                     	;# 
  1795  0E27                     	;# 
  1796  0E28                     	;# 
  1797  0E29                     	;# 
  1798  0E2A                     	;# 
  1799  0E2B                     	;# 
  1800  0E2C                     	;# 
  1801  0E2D                     	;# 
  1802  0E2E                     	;# 
  1803  0E90                     	;# 
  1804  0E91                     	;# 
  1805  0E92                     	;# 
  1806  0E94                     	;# 
  1807  0E95                     	;# 
  1808  0E9C                     	;# 
  1809  0E9D                     	;# 
  1810  0E9E                     	;# 
  1811  0E9F                     	;# 
  1812  0EA0                     	;# 
  1813  0EA1                     	;# 
  1814  0EA2                     	;# 
  1815  0EA3                     	;# 
  1816  0EA4                     	;# 
  1817  0EA5                     	;# 
  1818  0EA6                     	;# 
  1819  0EA7                     	;# 
  1820  0F0F                     	;# 
  1821  0F10                     	;# 
  1822  0F11                     	;# 
  1823  0F12                     	;# 
  1824  0F13                     	;# 
  1825  0F14                     	;# 
  1826  0F15                     	;# 
  1827  0F16                     	;# 
  1828  0F17                     	;# 
  1829  0F18                     	;# 
  1830  0F19                     	;# 
  1831  0F1A                     	;# 
  1832  0F1B                     	;# 
  1833  0F1C                     	;# 
  1834  0F1D                     	;# 
  1835  0F1E                     	;# 
  1836  0F1F                     	;# 
  1837  0F20                     	;# 
  1838  0F21                     	;# 
  1839  0F22                     	;# 
  1840  0F23                     	;# 
  1841  0F24                     	;# 
  1842  0F25                     	;# 
  1843  0F26                     	;# 
  1844  0F27                     	;# 
  1845  0F28                     	;# 
  1846  0F29                     	;# 
  1847  0F2A                     	;# 
  1848  0F2B                     	;# 
  1849  0F2C                     	;# 
  1850  0F2D                     	;# 
  1851  0F2E                     	;# 
  1852  0F2F                     	;# 
  1853  0F30                     	;# 
  1854  0F31                     	;# 
  1855  0F32                     	;# 
  1856  0F33                     	;# 
  1857  0F34                     	;# 
  1858  0F35                     	;# 
  1859  0F36                     	;# 
  1860  0F37                     	;# 
  1861  0FE4                     	;# 
  1862  0FE5                     	;# 
  1863  0FE6                     	;# 
  1864  0FE7                     	;# 
  1865  0FE8                     	;# 
  1866  0FE9                     	;# 
  1867  0FEA                     	;# 
  1868  0FEB                     	;# 
  1869  0FED                     	;# 
  1870  0FEE                     	;# 
  1871  0FEF                     	;# 
  1872  0000                     	;# 
  1873  0001                     	;# 
  1874  0002                     	;# 
  1875  0003                     	;# 
  1876  0004                     	;# 
  1877  0005                     	;# 
  1878  0006                     	;# 
  1879  0007                     	;# 
  1880  0008                     	;# 
  1881  0009                     	;# 
  1882  000A                     	;# 
  1883  000B                     	;# 
  1884  000C                     	;# 
  1885  000D                     	;# 
  1886  000E                     	;# 
  1887  0010                     	;# 
  1888  0011                     	;# 
  1889  0012                     	;# 
  1890  0013                     	;# 
  1891  0014                     	;# 
  1892  0015                     	;# 
  1893  0016                     	;# 
  1894  0016                     	;# 
  1895  0017                     	;# 
  1896  0018                     	;# 
  1897  0019                     	;# 
  1898  001A                     	;# 
  1899  001A                     	;# 
  1900  001B                     	;# 
  1901  001B                     	;# 
  1902  001C                     	;# 
  1903  001D                     	;# 
  1904  001E                     	;# 
  1905  001F                     	;# 
  1906  008C                     	;# 
  1907  008D                     	;# 
  1908  008E                     	;# 
  1909  0090                     	;# 
  1910  0091                     	;# 
  1911  0092                     	;# 
  1912  0093                     	;# 
  1913  0094                     	;# 
  1914  0095                     	;# 
  1915  0096                     	;# 
  1916  0098                     	;# 
  1917  0099                     	;# 
  1918  009A                     	;# 
  1919  009B                     	;# 
  1920  009B                     	;# 
  1921  009C                     	;# 
  1922  009D                     	;# 
  1923  009E                     	;# 
  1924  009F                     	;# 
  1925  010C                     	;# 
  1926  010D                     	;# 
  1927  010E                     	;# 
  1928  0111                     	;# 
  1929  0112                     	;# 
  1930  0113                     	;# 
  1931  0114                     	;# 
  1932  0115                     	;# 
  1933  0116                     	;# 
  1934  0117                     	;# 
  1935  0118                     	;# 
  1936  0119                     	;# 
  1937  011C                     	;# 
  1938  018C                     	;# 
  1939  018D                     	;# 
  1940  018E                     	;# 
  1941  0191                     	;# 
  1942  0191                     	;# 
  1943  0192                     	;# 
  1944  0193                     	;# 
  1945  0193                     	;# 
  1946  0194                     	;# 
  1947  0195                     	;# 
  1948  0196                     	;# 
  1949  0197                     	;# 
  1950  0199                     	;# 
  1951  0199                     	;# 
  1952  0199                     	;# 
  1953  019A                     	;# 
  1954  019A                     	;# 
  1955  019A                     	;# 
  1956  019B                     	;# 
  1957  019B                     	;# 
  1958  019B                     	;# 
  1959  019B                     	;# 
  1960  019B                     	;# 
  1961  019C                     	;# 
  1962  019C                     	;# 
  1963  019C                     	;# 
  1964  019D                     	;# 
  1965  019D                     	;# 
  1966  019D                     	;# 
  1967  019E                     	;# 
  1968  019E                     	;# 
  1969  019E                     	;# 
  1970  019F                     	;# 
  1971  019F                     	;# 
  1972  019F                     	;# 
  1973  019F                     	;# 
  1974  019F                     	;# 
  1975  020C                     	;# 
  1976  020D                     	;# 
  1977  020E                     	;# 
  1978  0211                     	;# 
  1979  0211                     	;# 
  1980  0212                     	;# 
  1981  0212                     	;# 
  1982  0213                     	;# 
  1983  0213                     	;# 
  1984  0214                     	;# 
  1985  0214                     	;# 
  1986  0215                     	;# 
  1987  0215                     	;# 
  1988  0215                     	;# 
  1989  0215                     	;# 
  1990  0216                     	;# 
  1991  0216                     	;# 
  1992  0217                     	;# 
  1993  0217                     	;# 
  1994  028C                     	;# 
  1995  028D                     	;# 
  1996  028E                     	;# 
  1997  0291                     	;# 
  1998  0291                     	;# 
  1999  0292                     	;# 
  2000  0293                     	;# 
  2001  0294                     	;# 
  2002  0298                     	;# 
  2003  0298                     	;# 
  2004  0299                     	;# 
  2005  029A                     	;# 
  2006  029B                     	;# 
  2007  029E                     	;# 
  2008  030C                     	;# 
  2009  030D                     	;# 
  2010  030E                     	;# 
  2011  038C                     	;# 
  2012  038D                     	;# 
  2013  038E                     	;# 
  2014  0391                     	;# 
  2015  0392                     	;# 
  2016  0393                     	;# 
  2017  0394                     	;# 
  2018  0395                     	;# 
  2019  0396                     	;# 
  2020  0397                     	;# 
  2021  0398                     	;# 
  2022  0399                     	;# 
  2023  040E                     	;# 
  2024  0413                     	;# 
  2025  0413                     	;# 
  2026  0414                     	;# 
  2027  0414                     	;# 
  2028  0415                     	;# 
  2029  0416                     	;# 
  2030  0417                     	;# 
  2031  0418                     	;# 
  2032  041A                     	;# 
  2033  041A                     	;# 
  2034  041B                     	;# 
  2035  041B                     	;# 
  2036  041C                     	;# 
  2037  041D                     	;# 
  2038  041E                     	;# 
  2039  041F                     	;# 
  2040  0493                     	;# 
  2041  0494                     	;# 
  2042  0495                     	;# 
  2043  0496                     	;# 
  2044  049A                     	;# 
  2045  049B                     	;# 
  2046  049C                     	;# 
  2047  049D                     	;# 
  2048  058C                     	;# 
  2049  058C                     	;# 
  2050  058D                     	;# 
  2051  058E                     	;# 
  2052  058E                     	;# 
  2053  058F                     	;# 
  2054  0590                     	;# 
  2055  0590                     	;# 
  2056  0591                     	;# 
  2057  0592                     	;# 
  2058  0592                     	;# 
  2059  0593                     	;# 
  2060  0594                     	;# 
  2061  0594                     	;# 
  2062  0595                     	;# 
  2063  0596                     	;# 
  2064  0596                     	;# 
  2065  0597                     	;# 
  2066  0598                     	;# 
  2067  0599                     	;# 
  2068  059A                     	;# 
  2069  059B                     	;# 
  2070  059B                     	;# 
  2071  059C                     	;# 
  2072  059D                     	;# 
  2073  060C                     	;# 
  2074  060C                     	;# 
  2075  060D                     	;# 
  2076  060E                     	;# 
  2077  060F                     	;# 
  2078  060F                     	;# 
  2079  0610                     	;# 
  2080  0611                     	;# 
  2081  0612                     	;# 
  2082  0613                     	;# 
  2083  0614                     	;# 
  2084  0617                     	;# 
  2085  0617                     	;# 
  2086  0618                     	;# 
  2087  0619                     	;# 
  2088  061A                     	;# 
  2089  061A                     	;# 
  2090  061B                     	;# 
  2091  061C                     	;# 
  2092  0691                     	;# 
  2093  0692                     	;# 
  2094  0693                     	;# 
  2095  0694                     	;# 
  2096  0695                     	;# 
  2097  0696                     	;# 
  2098  0697                     	;# 
  2099  0699                     	;# 
  2100  069A                     	;# 
  2101  0711                     	;# 
  2102  0712                     	;# 
  2103  0713                     	;# 
  2104  0714                     	;# 
  2105  0715                     	;# 
  2106  0718                     	;# 
  2107  0718                     	;# 
  2108  0719                     	;# 
  2109  071A                     	;# 
  2110  071A                     	;# 
  2111  071B                     	;# 
  2112  071C                     	;# 
  2113  071D                     	;# 
  2114  0791                     	;# 
  2115  0791                     	;# 
  2116  0792                     	;# 
  2117  0793                     	;# 
  2118  0793                     	;# 
  2119  0794                     	;# 
  2120  0795                     	;# 
  2121  0795                     	;# 
  2122  0796                     	;# 
  2123  0797                     	;# 
  2124  0797                     	;# 
  2125  0798                     	;# 
  2126  0799                     	;# 
  2127  079A                     	;# 
  2128  080C                     	;# 
  2129  080C                     	;# 
  2130  080D                     	;# 
  2131  080E                     	;# 
  2132  080E                     	;# 
  2133  080F                     	;# 
  2134  0810                     	;# 
  2135  0810                     	;# 
  2136  0811                     	;# 
  2137  0812                     	;# 
  2138  0812                     	;# 
  2139  0813                     	;# 
  2140  0814                     	;# 
  2141  0815                     	;# 
  2142  0816                     	;# 
  2143  0817                     	;# 
  2144  0818                     	;# 
  2145  0819                     	;# 
  2146  081A                     	;# 
  2147  081A                     	;# 
  2148  081B                     	;# 
  2149  081C                     	;# 
  2150  081C                     	;# 
  2151  081D                     	;# 
  2152  088C                     	;# 
  2153  088D                     	;# 
  2154  088E                     	;# 
  2155  088F                     	;# 
  2156  088F                     	;# 
  2157  0890                     	;# 
  2158  0891                     	;# 
  2159  0892                     	;# 
  2160  0893                     	;# 
  2161  0893                     	;# 
  2162  0894                     	;# 
  2163  0895                     	;# 
  2164  0896                     	;# 
  2165  0897                     	;# 
  2166  0897                     	;# 
  2167  0898                     	;# 
  2168  0899                     	;# 
  2169  0D8C                     	;# 
  2170  0D8C                     	;# 
  2171  0D8D                     	;# 
  2172  0D8E                     	;# 
  2173  0D8F                     	;# 
  2174  0D8F                     	;# 
  2175  0D90                     	;# 
  2176  0D91                     	;# 
  2177  0D92                     	;# 
  2178  0D92                     	;# 
  2179  0D93                     	;# 
  2180  0D94                     	;# 
  2181  0D95                     	;# 
  2182  0D95                     	;# 
  2183  0D96                     	;# 
  2184  0D97                     	;# 
  2185  0D98                     	;# 
  2186  0D99                     	;# 
  2187  0D9A                     	;# 
  2188  0D9B                     	;# 
  2189  0D9C                     	;# 
  2190  0D9D                     	;# 
  2191  0D9E                     	;# 
  2192  0D9E                     	;# 
  2193  0D9F                     	;# 
  2194  0DA0                     	;# 
  2195  0DA1                     	;# 
  2196  0DA1                     	;# 
  2197  0DA2                     	;# 
  2198  0DA3                     	;# 
  2199  0DA4                     	;# 
  2200  0DA4                     	;# 
  2201  0DA5                     	;# 
  2202  0DA6                     	;# 
  2203  0DA7                     	;# 
  2204  0DA7                     	;# 
  2205  0DA8                     	;# 
  2206  0DA9                     	;# 
  2207  0DAA                     	;# 
  2208  0DAB                     	;# 
  2209  0DAC                     	;# 
  2210  0DAD                     	;# 
  2211  0DAE                     	;# 
  2212  0DAF                     	;# 
  2213  0E0F                     	;# 
  2214  0E10                     	;# 
  2215  0E11                     	;# 
  2216  0E12                     	;# 
  2217  0E13                     	;# 
  2218  0E14                     	;# 
  2219  0E15                     	;# 
  2220  0E16                     	;# 
  2221  0E17                     	;# 
  2222  0E18                     	;# 
  2223  0E19                     	;# 
  2224  0E1A                     	;# 
  2225  0E1B                     	;# 
  2226  0E1C                     	;# 
  2227  0E1D                     	;# 
  2228  0E1E                     	;# 
  2229  0E1F                     	;# 
  2230  0E20                     	;# 
  2231  0E21                     	;# 
  2232  0E22                     	;# 
  2233  0E23                     	;# 
  2234  0E24                     	;# 
  2235  0E25                     	;# 
  2236  0E26                     	;# 
  2237  0E27                     	;# 
  2238  0E28                     	;# 
  2239  0E29                     	;# 
  2240  0E2A                     	;# 
  2241  0E2B                     	;# 
  2242  0E2C                     	;# 
  2243  0E2D                     	;# 
  2244  0E2E                     	;# 
  2245  0E90                     	;# 
  2246  0E91                     	;# 
  2247  0E92                     	;# 
  2248  0E94                     	;# 
  2249  0E95                     	;# 
  2250  0E9C                     	;# 
  2251  0E9D                     	;# 
  2252  0E9E                     	;# 
  2253  0E9F                     	;# 
  2254  0EA0                     	;# 
  2255  0EA1                     	;# 
  2256  0EA2                     	;# 
  2257  0EA3                     	;# 
  2258  0EA4                     	;# 
  2259  0EA5                     	;# 
  2260  0EA6                     	;# 
  2261  0EA7                     	;# 
  2262  0F0F                     	;# 
  2263  0F10                     	;# 
  2264  0F11                     	;# 
  2265  0F12                     	;# 
  2266  0F13                     	;# 
  2267  0F14                     	;# 
  2268  0F15                     	;# 
  2269  0F16                     	;# 
  2270  0F17                     	;# 
  2271  0F18                     	;# 
  2272  0F19                     	;# 
  2273  0F1A                     	;# 
  2274  0F1B                     	;# 
  2275  0F1C                     	;# 
  2276  0F1D                     	;# 
  2277  0F1E                     	;# 
  2278  0F1F                     	;# 
  2279  0F20                     	;# 
  2280  0F21                     	;# 
  2281  0F22                     	;# 
  2282  0F23                     	;# 
  2283  0F24                     	;# 
  2284  0F25                     	;# 
  2285  0F26                     	;# 
  2286  0F27                     	;# 
  2287  0F28                     	;# 
  2288  0F29                     	;# 
  2289  0F2A                     	;# 
  2290  0F2B                     	;# 
  2291  0F2C                     	;# 
  2292  0F2D                     	;# 
  2293  0F2E                     	;# 
  2294  0F2F                     	;# 
  2295  0F30                     	;# 
  2296  0F31                     	;# 
  2297  0F32                     	;# 
  2298  0F33                     	;# 
  2299  0F34                     	;# 
  2300  0F35                     	;# 
  2301  0F36                     	;# 
  2302  0F37                     	;# 
  2303  0FE4                     	;# 
  2304  0FE5                     	;# 
  2305  0FE6                     	;# 
  2306  0FE7                     	;# 
  2307  0FE8                     	;# 
  2308  0FE9                     	;# 
  2309  0FEA                     	;# 
  2310  0FEB                     	;# 
  2311  0FED                     	;# 
  2312  0FEE                     	;# 
  2313  0FEF                     	;# 
  2314  0000                     	;# 
  2315  0001                     	;# 
  2316  0002                     	;# 
  2317  0003                     	;# 
  2318  0004                     	;# 
  2319  0005                     	;# 
  2320  0006                     	;# 
  2321  0007                     	;# 
  2322  0008                     	;# 
  2323  0009                     	;# 
  2324  000A                     	;# 
  2325  000B                     	;# 
  2326  000C                     	;# 
  2327  000D                     	;# 
  2328  000E                     	;# 
  2329  0010                     	;# 
  2330  0011                     	;# 
  2331  0012                     	;# 
  2332  0013                     	;# 
  2333  0014                     	;# 
  2334  0015                     	;# 
  2335  0016                     	;# 
  2336  0016                     	;# 
  2337  0017                     	;# 
  2338  0018                     	;# 
  2339  0019                     	;# 
  2340  001A                     	;# 
  2341  001A                     	;# 
  2342  001B                     	;# 
  2343  001B                     	;# 
  2344  001C                     	;# 
  2345  001D                     	;# 
  2346  001E                     	;# 
  2347  001F                     	;# 
  2348  008C                     	;# 
  2349  008D                     	;# 
  2350  008E                     	;# 
  2351  0090                     	;# 
  2352  0091                     	;# 
  2353  0092                     	;# 
  2354  0093                     	;# 
  2355  0094                     	;# 
  2356  0095                     	;# 
  2357  0096                     	;# 
  2358  0098                     	;# 
  2359  0099                     	;# 
  2360  009A                     	;# 
  2361  009B                     	;# 
  2362  009B                     	;# 
  2363  009C                     	;# 
  2364  009D                     	;# 
  2365  009E                     	;# 
  2366  009F                     	;# 
  2367  010C                     	;# 
  2368  010D                     	;# 
  2369  010E                     	;# 
  2370  0111                     	;# 
  2371  0112                     	;# 
  2372  0113                     	;# 
  2373  0114                     	;# 
  2374  0115                     	;# 
  2375  0116                     	;# 
  2376  0117                     	;# 
  2377  0118                     	;# 
  2378  0119                     	;# 
  2379  011C                     	;# 
  2380  018C                     	;# 
  2381  018D                     	;# 
  2382  018E                     	;# 
  2383  0191                     	;# 
  2384  0191                     	;# 
  2385  0192                     	;# 
  2386  0193                     	;# 
  2387  0193                     	;# 
  2388  0194                     	;# 
  2389  0195                     	;# 
  2390  0196                     	;# 
  2391  0197                     	;# 
  2392  0199                     	;# 
  2393  0199                     	;# 
  2394  0199                     	;# 
  2395  019A                     	;# 
  2396  019A                     	;# 
  2397  019A                     	;# 
  2398  019B                     	;# 
  2399  019B                     	;# 
  2400  019B                     	;# 
  2401  019B                     	;# 
  2402  019B                     	;# 
  2403  019C                     	;# 
  2404  019C                     	;# 
  2405  019C                     	;# 
  2406  019D                     	;# 
  2407  019D                     	;# 
  2408  019D                     	;# 
  2409  019E                     	;# 
  2410  019E                     	;# 
  2411  019E                     	;# 
  2412  019F                     	;# 
  2413  019F                     	;# 
  2414  019F                     	;# 
  2415  019F                     	;# 
  2416  019F                     	;# 
  2417  020C                     	;# 
  2418  020D                     	;# 
  2419  020E                     	;# 
  2420  0211                     	;# 
  2421  0211                     	;# 
  2422  0212                     	;# 
  2423  0212                     	;# 
  2424  0213                     	;# 
  2425  0213                     	;# 
  2426  0214                     	;# 
  2427  0214                     	;# 
  2428  0215                     	;# 
  2429  0215                     	;# 
  2430  0215                     	;# 
  2431  0215                     	;# 
  2432  0216                     	;# 
  2433  0216                     	;# 
  2434  0217                     	;# 
  2435  0217                     	;# 
  2436  028C                     	;# 
  2437  028D                     	;# 
  2438  028E                     	;# 
  2439  0291                     	;# 
  2440  0291                     	;# 
  2441  0292                     	;# 
  2442  0293                     	;# 
  2443  0294                     	;# 
  2444  0298                     	;# 
  2445  0298                     	;# 
  2446  0299                     	;# 
  2447  029A                     	;# 
  2448  029B                     	;# 
  2449  029E                     	;# 
  2450  030C                     	;# 
  2451  030D                     	;# 
  2452  030E                     	;# 
  2453  038C                     	;# 
  2454  038D                     	;# 
  2455  038E                     	;# 
  2456  0391                     	;# 
  2457  0392                     	;# 
  2458  0393                     	;# 
  2459  0394                     	;# 
  2460  0395                     	;# 
  2461  0396                     	;# 
  2462  0397                     	;# 
  2463  0398                     	;# 
  2464  0399                     	;# 
  2465  040E                     	;# 
  2466  0413                     	;# 
  2467  0413                     	;# 
  2468  0414                     	;# 
  2469  0414                     	;# 
  2470  0415                     	;# 
  2471  0416                     	;# 
  2472  0417                     	;# 
  2473  0418                     	;# 
  2474  041A                     	;# 
  2475  041A                     	;# 
  2476  041B                     	;# 
  2477  041B                     	;# 
  2478  041C                     	;# 
  2479  041D                     	;# 
  2480  041E                     	;# 
  2481  041F                     	;# 
  2482  0493                     	;# 
  2483  0494                     	;# 
  2484  0495                     	;# 
  2485  0496                     	;# 
  2486  049A                     	;# 
  2487  049B                     	;# 
  2488  049C                     	;# 
  2489  049D                     	;# 
  2490  058C                     	;# 
  2491  058C                     	;# 
  2492  058D                     	;# 
  2493  058E                     	;# 
  2494  058E                     	;# 
  2495  058F                     	;# 
  2496  0590                     	;# 
  2497  0590                     	;# 
  2498  0591                     	;# 
  2499  0592                     	;# 
  2500  0592                     	;# 
  2501  0593                     	;# 
  2502  0594                     	;# 
  2503  0594                     	;# 
  2504  0595                     	;# 
  2505  0596                     	;# 
  2506  0596                     	;# 
  2507  0597                     	;# 
  2508  0598                     	;# 
  2509  0599                     	;# 
  2510  059A                     	;# 
  2511  059B                     	;# 
  2512  059B                     	;# 
  2513  059C                     	;# 
  2514  059D                     	;# 
  2515  060C                     	;# 
  2516  060C                     	;# 
  2517  060D                     	;# 
  2518  060E                     	;# 
  2519  060F                     	;# 
  2520  060F                     	;# 
  2521  0610                     	;# 
  2522  0611                     	;# 
  2523  0612                     	;# 
  2524  0613                     	;# 
  2525  0614                     	;# 
  2526  0617                     	;# 
  2527  0617                     	;# 
  2528  0618                     	;# 
  2529  0619                     	;# 
  2530  061A                     	;# 
  2531  061A                     	;# 
  2532  061B                     	;# 
  2533  061C                     	;# 
  2534  0691                     	;# 
  2535  0692                     	;# 
  2536  0693                     	;# 
  2537  0694                     	;# 
  2538  0695                     	;# 
  2539  0696                     	;# 
  2540  0697                     	;# 
  2541  0699                     	;# 
  2542  069A                     	;# 
  2543  0711                     	;# 
  2544  0712                     	;# 
  2545  0713                     	;# 
  2546  0714                     	;# 
  2547  0715                     	;# 
  2548  0718                     	;# 
  2549  0718                     	;# 
  2550  0719                     	;# 
  2551  071A                     	;# 
  2552  071A                     	;# 
  2553  071B                     	;# 
  2554  071C                     	;# 
  2555  071D                     	;# 
  2556  0791                     	;# 
  2557  0791                     	;# 
  2558  0792                     	;# 
  2559  0793                     	;# 
  2560  0793                     	;# 
  2561  0794                     	;# 
  2562  0795                     	;# 
  2563  0795                     	;# 
  2564  0796                     	;# 
  2565  0797                     	;# 
  2566  0797                     	;# 
  2567  0798                     	;# 
  2568  0799                     	;# 
  2569  079A                     	;# 
  2570  080C                     	;# 
  2571  080C                     	;# 
  2572  080D                     	;# 
  2573  080E                     	;# 
  2574  080E                     	;# 
  2575  080F                     	;# 
  2576  0810                     	;# 
  2577  0810                     	;# 
  2578  0811                     	;# 
  2579  0812                     	;# 
  2580  0812                     	;# 
  2581  0813                     	;# 
  2582  0814                     	;# 
  2583  0815                     	;# 
  2584  0816                     	;# 
  2585  0817                     	;# 
  2586  0818                     	;# 
  2587  0819                     	;# 
  2588  081A                     	;# 
  2589  081A                     	;# 
  2590  081B                     	;# 
  2591  081C                     	;# 
  2592  081C                     	;# 
  2593  081D                     	;# 
  2594  088C                     	;# 
  2595  088D                     	;# 
  2596  088E                     	;# 
  2597  088F                     	;# 
  2598  088F                     	;# 
  2599  0890                     	;# 
  2600  0891                     	;# 
  2601  0892                     	;# 
  2602  0893                     	;# 
  2603  0893                     	;# 
  2604  0894                     	;# 
  2605  0895                     	;# 
  2606  0896                     	;# 
  2607  0897                     	;# 
  2608  0897                     	;# 
  2609  0898                     	;# 
  2610  0899                     	;# 
  2611  0D8C                     	;# 
  2612  0D8C                     	;# 
  2613  0D8D                     	;# 
  2614  0D8E                     	;# 
  2615  0D8F                     	;# 
  2616  0D8F                     	;# 
  2617  0D90                     	;# 
  2618  0D91                     	;# 
  2619  0D92                     	;# 
  2620  0D92                     	;# 
  2621  0D93                     	;# 
  2622  0D94                     	;# 
  2623  0D95                     	;# 
  2624  0D95                     	;# 
  2625  0D96                     	;# 
  2626  0D97                     	;# 
  2627  0D98                     	;# 
  2628  0D99                     	;# 
  2629  0D9A                     	;# 
  2630  0D9B                     	;# 
  2631  0D9C                     	;# 
  2632  0D9D                     	;# 
  2633  0D9E                     	;# 
  2634  0D9E                     	;# 
  2635  0D9F                     	;# 
  2636  0DA0                     	;# 
  2637  0DA1                     	;# 
  2638  0DA1                     	;# 
  2639  0DA2                     	;# 
  2640  0DA3                     	;# 
  2641  0DA4                     	;# 
  2642  0DA4                     	;# 
  2643  0DA5                     	;# 
  2644  0DA6                     	;# 
  2645  0DA7                     	;# 
  2646  0DA7                     	;# 
  2647  0DA8                     	;# 
  2648  0DA9                     	;# 
  2649  0DAA                     	;# 
  2650  0DAB                     	;# 
  2651  0DAC                     	;# 
  2652  0DAD                     	;# 
  2653  0DAE                     	;# 
  2654  0DAF                     	;# 
  2655  0E0F                     	;# 
  2656  0E10                     	;# 
  2657  0E11                     	;# 
  2658  0E12                     	;# 
  2659  0E13                     	;# 
  2660  0E14                     	;# 
  2661  0E15                     	;# 
  2662  0E16                     	;# 
  2663  0E17                     	;# 
  2664  0E18                     	;# 
  2665  0E19                     	;# 
  2666  0E1A                     	;# 
  2667  0E1B                     	;# 
  2668  0E1C                     	;# 
  2669  0E1D                     	;# 
  2670  0E1E                     	;# 
  2671  0E1F                     	;# 
  2672  0E20                     	;# 
  2673  0E21                     	;# 
  2674  0E22                     	;# 
  2675  0E23                     	;# 
  2676  0E24                     	;# 
  2677  0E25                     	;# 
  2678  0E26                     	;# 
  2679  0E27                     	;# 
  2680  0E28                     	;# 
  2681  0E29                     	;# 
  2682  0E2A                     	;# 
  2683  0E2B                     	;# 
  2684  0E2C                     	;# 
  2685  0E2D                     	;# 
  2686  0E2E                     	;# 
  2687  0E90                     	;# 
  2688  0E91                     	;# 
  2689  0E92                     	;# 
  2690  0E94                     	;# 
  2691  0E95                     	;# 
  2692  0E9C                     	;# 
  2693  0E9D                     	;# 
  2694  0E9E                     	;# 
  2695  0E9F                     	;# 
  2696  0EA0                     	;# 
  2697  0EA1                     	;# 
  2698  0EA2                     	;# 
  2699  0EA3                     	;# 
  2700  0EA4                     	;# 
  2701  0EA5                     	;# 
  2702  0EA6                     	;# 
  2703  0EA7                     	;# 
  2704  0F0F                     	;# 
  2705  0F10                     	;# 
  2706  0F11                     	;# 
  2707  0F12                     	;# 
  2708  0F13                     	;# 
  2709  0F14                     	;# 
  2710  0F15                     	;# 
  2711  0F16                     	;# 
  2712  0F17                     	;# 
  2713  0F18                     	;# 
  2714  0F19                     	;# 
  2715  0F1A                     	;# 
  2716  0F1B                     	;# 
  2717  0F1C                     	;# 
  2718  0F1D                     	;# 
  2719  0F1E                     	;# 
  2720  0F1F                     	;# 
  2721  0F20                     	;# 
  2722  0F21                     	;# 
  2723  0F22                     	;# 
  2724  0F23                     	;# 
  2725  0F24                     	;# 
  2726  0F25                     	;# 
  2727  0F26                     	;# 
  2728  0F27                     	;# 
  2729  0F28                     	;# 
  2730  0F29                     	;# 
  2731  0F2A                     	;# 
  2732  0F2B                     	;# 
  2733  0F2C                     	;# 
  2734  0F2D                     	;# 
  2735  0F2E                     	;# 
  2736  0F2F                     	;# 
  2737  0F30                     	;# 
  2738  0F31                     	;# 
  2739  0F32                     	;# 
  2740  0F33                     	;# 
  2741  0F34                     	;# 
  2742  0F35                     	;# 
  2743  0F36                     	;# 
  2744  0F37                     	;# 
  2745  0FE4                     	;# 
  2746  0FE5                     	;# 
  2747  0FE6                     	;# 
  2748  0FE7                     	;# 
  2749  0FE8                     	;# 
  2750  0FE9                     	;# 
  2751  0FEA                     	;# 
  2752  0FEB                     	;# 
  2753  0FED                     	;# 
  2754  0FEE                     	;# 
  2755  0FEF                     	;# 
  2756  0000                     	;# 
  2757  0001                     	;# 
  2758  0002                     	;# 
  2759  0003                     	;# 
  2760  0004                     	;# 
  2761  0005                     	;# 
  2762  0006                     	;# 
  2763  0007                     	;# 
  2764  0008                     	;# 
  2765  0009                     	;# 
  2766  000A                     	;# 
  2767  000B                     	;# 
  2768  000C                     	;# 
  2769  000D                     	;# 
  2770  000E                     	;# 
  2771  0010                     	;# 
  2772  0011                     	;# 
  2773  0012                     	;# 
  2774  0013                     	;# 
  2775  0014                     	;# 
  2776  0015                     	;# 
  2777  0016                     	;# 
  2778  0016                     	;# 
  2779  0017                     	;# 
  2780  0018                     	;# 
  2781  0019                     	;# 
  2782  001A                     	;# 
  2783  001A                     	;# 
  2784  001B                     	;# 
  2785  001B                     	;# 
  2786  001C                     	;# 
  2787  001D                     	;# 
  2788  001E                     	;# 
  2789  001F                     	;# 
  2790  008C                     	;# 
  2791  008D                     	;# 
  2792  008E                     	;# 
  2793  0090                     	;# 
  2794  0091                     	;# 
  2795  0092                     	;# 
  2796  0093                     	;# 
  2797  0094                     	;# 
  2798  0095                     	;# 
  2799  0096                     	;# 
  2800  0098                     	;# 
  2801  0099                     	;# 
  2802  009A                     	;# 
  2803  009B                     	;# 
  2804  009B                     	;# 
  2805  009C                     	;# 
  2806  009D                     	;# 
  2807  009E                     	;# 
  2808  009F                     	;# 
  2809  010C                     	;# 
  2810  010D                     	;# 
  2811  010E                     	;# 
  2812  0111                     	;# 
  2813  0112                     	;# 
  2814  0113                     	;# 
  2815  0114                     	;# 
  2816  0115                     	;# 
  2817  0116                     	;# 
  2818  0117                     	;# 
  2819  0118                     	;# 
  2820  0119                     	;# 
  2821  011C                     	;# 
  2822  018C                     	;# 
  2823  018D                     	;# 
  2824  018E                     	;# 
  2825  0191                     	;# 
  2826  0191                     	;# 
  2827  0192                     	;# 
  2828  0193                     	;# 
  2829  0193                     	;# 
  2830  0194                     	;# 
  2831  0195                     	;# 
  2832  0196                     	;# 
  2833  0197                     	;# 
  2834  0199                     	;# 
  2835  0199                     	;# 
  2836  0199                     	;# 
  2837  019A                     	;# 
  2838  019A                     	;# 
  2839  019A                     	;# 
  2840  019B                     	;# 
  2841  019B                     	;# 
  2842  019B                     	;# 
  2843  019B                     	;# 
  2844  019B                     	;# 
  2845  019C                     	;# 
  2846  019C                     	;# 
  2847  019C                     	;# 
  2848  019D                     	;# 
  2849  019D                     	;# 
  2850  019D                     	;# 
  2851  019E                     	;# 
  2852  019E                     	;# 
  2853  019E                     	;# 
  2854  019F                     	;# 
  2855  019F                     	;# 
  2856  019F                     	;# 
  2857  019F                     	;# 
  2858  019F                     	;# 
  2859  020C                     	;# 
  2860  020D                     	;# 
  2861  020E                     	;# 
  2862  0211                     	;# 
  2863  0211                     	;# 
  2864  0212                     	;# 
  2865  0212                     	;# 
  2866  0213                     	;# 
  2867  0213                     	;# 
  2868  0214                     	;# 
  2869  0214                     	;# 
  2870  0215                     	;# 
  2871  0215                     	;# 
  2872  0215                     	;# 
  2873  0215                     	;# 
  2874  0216                     	;# 
  2875  0216                     	;# 
  2876  0217                     	;# 
  2877  0217                     	;# 
  2878  028C                     	;# 
  2879  028D                     	;# 
  2880  028E                     	;# 
  2881  0291                     	;# 
  2882  0291                     	;# 
  2883  0292                     	;# 
  2884  0293                     	;# 
  2885  0294                     	;# 
  2886  0298                     	;# 
  2887  0298                     	;# 
  2888  0299                     	;# 
  2889  029A                     	;# 
  2890  029B                     	;# 
  2891  029E                     	;# 
  2892  030C                     	;# 
  2893  030D                     	;# 
  2894  030E                     	;# 
  2895  038C                     	;# 
  2896  038D                     	;# 
  2897  038E                     	;# 
  2898  0391                     	;# 
  2899  0392                     	;# 
  2900  0393                     	;# 
  2901  0394                     	;# 
  2902  0395                     	;# 
  2903  0396                     	;# 
  2904  0397                     	;# 
  2905  0398                     	;# 
  2906  0399                     	;# 
  2907  040E                     	;# 
  2908  0413                     	;# 
  2909  0413                     	;# 
  2910  0414                     	;# 
  2911  0414                     	;# 
  2912  0415                     	;# 
  2913  0416                     	;# 
  2914  0417                     	;# 
  2915  0418                     	;# 
  2916  041A                     	;# 
  2917  041A                     	;# 
  2918  041B                     	;# 
  2919  041B                     	;# 
  2920  041C                     	;# 
  2921  041D                     	;# 
  2922  041E                     	;# 
  2923  041F                     	;# 
  2924  0493                     	;# 
  2925  0494                     	;# 
  2926  0495                     	;# 
  2927  0496                     	;# 
  2928  049A                     	;# 
  2929  049B                     	;# 
  2930  049C                     	;# 
  2931  049D                     	;# 
  2932  058C                     	;# 
  2933  058C                     	;# 
  2934  058D                     	;# 
  2935  058E                     	;# 
  2936  058E                     	;# 
  2937  058F                     	;# 
  2938  0590                     	;# 
  2939  0590                     	;# 
  2940  0591                     	;# 
  2941  0592                     	;# 
  2942  0592                     	;# 
  2943  0593                     	;# 
  2944  0594                     	;# 
  2945  0594                     	;# 
  2946  0595                     	;# 
  2947  0596                     	;# 
  2948  0596                     	;# 
  2949  0597                     	;# 
  2950  0598                     	;# 
  2951  0599                     	;# 
  2952  059A                     	;# 
  2953  059B                     	;# 
  2954  059B                     	;# 
  2955  059C                     	;# 
  2956  059D                     	;# 
  2957  060C                     	;# 
  2958  060C                     	;# 
  2959  060D                     	;# 
  2960  060E                     	;# 
  2961  060F                     	;# 
  2962  060F                     	;# 
  2963  0610                     	;# 
  2964  0611                     	;# 
  2965  0612                     	;# 
  2966  0613                     	;# 
  2967  0614                     	;# 
  2968  0617                     	;# 
  2969  0617                     	;# 
  2970  0618                     	;# 
  2971  0619                     	;# 
  2972  061A                     	;# 
  2973  061A                     	;# 
  2974  061B                     	;# 
  2975  061C                     	;# 
  2976  0691                     	;# 
  2977  0692                     	;# 
  2978  0693                     	;# 
  2979  0694                     	;# 
  2980  0695                     	;# 
  2981  0696                     	;# 
  2982  0697                     	;# 
  2983  0699                     	;# 
  2984  069A                     	;# 
  2985  0711                     	;# 
  2986  0712                     	;# 
  2987  0713                     	;# 
  2988  0714                     	;# 
  2989  0715                     	;# 
  2990  0718                     	;# 
  2991  0718                     	;# 
  2992  0719                     	;# 
  2993  071A                     	;# 
  2994  071A                     	;# 
  2995  071B                     	;# 
  2996  071C                     	;# 
  2997  071D                     	;# 
  2998  0791                     	;# 
  2999  0791                     	;# 
  3000  0792                     	;# 
  3001  0793                     	;# 
  3002  0793                     	;# 
  3003  0794                     	;# 
  3004  0795                     	;# 
  3005  0795                     	;# 
  3006  0796                     	;# 
  3007  0797                     	;# 
  3008  0797                     	;# 
  3009  0798                     	;# 
  3010  0799                     	;# 
  3011  079A                     	;# 
  3012  080C                     	;# 
  3013  080C                     	;# 
  3014  080D                     	;# 
  3015  080E                     	;# 
  3016  080E                     	;# 
  3017  080F                     	;# 
  3018  0810                     	;# 
  3019  0810                     	;# 
  3020  0811                     	;# 
  3021  0812                     	;# 
  3022  0812                     	;# 
  3023  0813                     	;# 
  3024  0814                     	;# 
  3025  0815                     	;# 
  3026  0816                     	;# 
  3027  0817                     	;# 
  3028  0818                     	;# 
  3029  0819                     	;# 
  3030  081A                     	;# 
  3031  081A                     	;# 
  3032  081B                     	;# 
  3033  081C                     	;# 
  3034  081C                     	;# 
  3035  081D                     	;# 
  3036  088C                     	;# 
  3037  088D                     	;# 
  3038  088E                     	;# 
  3039  088F                     	;# 
  3040  088F                     	;# 
  3041  0890                     	;# 
  3042  0891                     	;# 
  3043  0892                     	;# 
  3044  0893                     	;# 
  3045  0893                     	;# 
  3046  0894                     	;# 
  3047  0895                     	;# 
  3048  0896                     	;# 
  3049  0897                     	;# 
  3050  0897                     	;# 
  3051  0898                     	;# 
  3052  0899                     	;# 
  3053  0D8C                     	;# 
  3054  0D8C                     	;# 
  3055  0D8D                     	;# 
  3056  0D8E                     	;# 
  3057  0D8F                     	;# 
  3058  0D8F                     	;# 
  3059  0D90                     	;# 
  3060  0D91                     	;# 
  3061  0D92                     	;# 
  3062  0D92                     	;# 
  3063  0D93                     	;# 
  3064  0D94                     	;# 
  3065  0D95                     	;# 
  3066  0D95                     	;# 
  3067  0D96                     	;# 
  3068  0D97                     	;# 
  3069  0D98                     	;# 
  3070  0D99                     	;# 
  3071  0D9A                     	;# 
  3072  0D9B                     	;# 
  3073  0D9C                     	;# 
  3074  0D9D                     	;# 
  3075  0D9E                     	;# 
  3076  0D9E                     	;# 
  3077  0D9F                     	;# 
  3078  0DA0                     	;# 
  3079  0DA1                     	;# 
  3080  0DA1                     	;# 
  3081  0DA2                     	;# 
  3082  0DA3                     	;# 
  3083  0DA4                     	;# 
  3084  0DA4                     	;# 
  3085  0DA5                     	;# 
  3086  0DA6                     	;# 
  3087  0DA7                     	;# 
  3088  0DA7                     	;# 
  3089  0DA8                     	;# 
  3090  0DA9                     	;# 
  3091  0DAA                     	;# 
  3092  0DAB                     	;# 
  3093  0DAC                     	;# 
  3094  0DAD                     	;# 
  3095  0DAE                     	;# 
  3096  0DAF                     	;# 
  3097  0E0F                     	;# 
  3098  0E10                     	;# 
  3099  0E11                     	;# 
  3100  0E12                     	;# 
  3101  0E13                     	;# 
  3102  0E14                     	;# 
  3103  0E15                     	;# 
  3104  0E16                     	;# 
  3105  0E17                     	;# 
  3106  0E18                     	;# 
  3107  0E19                     	;# 
  3108  0E1A                     	;# 
  3109  0E1B                     	;# 
  3110  0E1C                     	;# 
  3111  0E1D                     	;# 
  3112  0E1E                     	;# 
  3113  0E1F                     	;# 
  3114  0E20                     	;# 
  3115  0E21                     	;# 
  3116  0E22                     	;# 
  3117  0E23                     	;# 
  3118  0E24                     	;# 
  3119  0E25                     	;# 
  3120  0E26                     	;# 
  3121  0E27                     	;# 
  3122  0E28                     	;# 
  3123  0E29                     	;# 
  3124  0E2A                     	;# 
  3125  0E2B                     	;# 
  3126  0E2C                     	;# 
  3127  0E2D                     	;# 
  3128  0E2E                     	;# 
  3129  0E90                     	;# 
  3130  0E91                     	;# 
  3131  0E92                     	;# 
  3132  0E94                     	;# 
  3133  0E95                     	;# 
  3134  0E9C                     	;# 
  3135  0E9D                     	;# 
  3136  0E9E                     	;# 
  3137  0E9F                     	;# 
  3138  0EA0                     	;# 
  3139  0EA1                     	;# 
  3140  0EA2                     	;# 
  3141  0EA3                     	;# 
  3142  0EA4                     	;# 
  3143  0EA5                     	;# 
  3144  0EA6                     	;# 
  3145  0EA7                     	;# 
  3146  0F0F                     	;# 
  3147  0F10                     	;# 
  3148  0F11                     	;# 
  3149  0F12                     	;# 
  3150  0F13                     	;# 
  3151  0F14                     	;# 
  3152  0F15                     	;# 
  3153  0F16                     	;# 
  3154  0F17                     	;# 
  3155  0F18                     	;# 
  3156  0F19                     	;# 
  3157  0F1A                     	;# 
  3158  0F1B                     	;# 
  3159  0F1C                     	;# 
  3160  0F1D                     	;# 
  3161  0F1E                     	;# 
  3162  0F1F                     	;# 
  3163  0F20                     	;# 
  3164  0F21                     	;# 
  3165  0F22                     	;# 
  3166  0F23                     	;# 
  3167  0F24                     	;# 
  3168  0F25                     	;# 
  3169  0F26                     	;# 
  3170  0F27                     	;# 
  3171  0F28                     	;# 
  3172  0F29                     	;# 
  3173  0F2A                     	;# 
  3174  0F2B                     	;# 
  3175  0F2C                     	;# 
  3176  0F2D                     	;# 
  3177  0F2E                     	;# 
  3178  0F2F                     	;# 
  3179  0F30                     	;# 
  3180  0F31                     	;# 
  3181  0F32                     	;# 
  3182  0F33                     	;# 
  3183  0F34                     	;# 
  3184  0F35                     	;# 
  3185  0F36                     	;# 
  3186  0F37                     	;# 
  3187  0FE4                     	;# 
  3188  0FE5                     	;# 
  3189  0FE6                     	;# 
  3190  0FE7                     	;# 
  3191  0FE8                     	;# 
  3192  0FE9                     	;# 
  3193  0FEA                     	;# 
  3194  0FEB                     	;# 
  3195  0FED                     	;# 
  3196  0FEE                     	;# 
  3197  0FEF                     	;# 
  3198  0000                     	;# 
  3199  0001                     	;# 
  3200  0002                     	;# 
  3201  0003                     	;# 
  3202  0004                     	;# 
  3203  0005                     	;# 
  3204  0006                     	;# 
  3205  0007                     	;# 
  3206  0008                     	;# 
  3207  0009                     	;# 
  3208  000A                     	;# 
  3209  000B                     	;# 
  3210  000C                     	;# 
  3211  000D                     	;# 
  3212  000E                     	;# 
  3213  0010                     	;# 
  3214  0011                     	;# 
  3215  0012                     	;# 
  3216  0013                     	;# 
  3217  0014                     	;# 
  3218  0015                     	;# 
  3219  0016                     	;# 
  3220  0016                     	;# 
  3221  0017                     	;# 
  3222  0018                     	;# 
  3223  0019                     	;# 
  3224  001A                     	;# 
  3225  001A                     	;# 
  3226  001B                     	;# 
  3227  001B                     	;# 
  3228  001C                     	;# 
  3229  001D                     	;# 
  3230  001E                     	;# 
  3231  001F                     	;# 
  3232  008C                     	;# 
  3233  008D                     	;# 
  3234  008E                     	;# 
  3235  0090                     	;# 
  3236  0091                     	;# 
  3237  0092                     	;# 
  3238  0093                     	;# 
  3239  0094                     	;# 
  3240  0095                     	;# 
  3241  0096                     	;# 
  3242  0098                     	;# 
  3243  0099                     	;# 
  3244  009A                     	;# 
  3245  009B                     	;# 
  3246  009B                     	;# 
  3247  009C                     	;# 
  3248  009D                     	;# 
  3249  009E                     	;# 
  3250  009F                     	;# 
  3251  010C                     	;# 
  3252  010D                     	;# 
  3253  010E                     	;# 
  3254  0111                     	;# 
  3255  0112                     	;# 
  3256  0113                     	;# 
  3257  0114                     	;# 
  3258  0115                     	;# 
  3259  0116                     	;# 
  3260  0117                     	;# 
  3261  0118                     	;# 
  3262  0119                     	;# 
  3263  011C                     	;# 
  3264  018C                     	;# 
  3265  018D                     	;# 
  3266  018E                     	;# 
  3267  0191                     	;# 
  3268  0191                     	;# 
  3269  0192                     	;# 
  3270  0193                     	;# 
  3271  0193                     	;# 
  3272  0194                     	;# 
  3273  0195                     	;# 
  3274  0196                     	;# 
  3275  0197                     	;# 
  3276  0199                     	;# 
  3277  0199                     	;# 
  3278  0199                     	;# 
  3279  019A                     	;# 
  3280  019A                     	;# 
  3281  019A                     	;# 
  3282  019B                     	;# 
  3283  019B                     	;# 
  3284  019B                     	;# 
  3285  019B                     	;# 
  3286  019B                     	;# 
  3287  019C                     	;# 
  3288  019C                     	;# 
  3289  019C                     	;# 
  3290  019D                     	;# 
  3291  019D                     	;# 
  3292  019D                     	;# 
  3293  019E                     	;# 
  3294  019E                     	;# 
  3295  019E                     	;# 
  3296  019F                     	;# 
  3297  019F                     	;# 
  3298  019F                     	;# 
  3299  019F                     	;# 
  3300  019F                     	;# 
  3301  020C                     	;# 
  3302  020D                     	;# 
  3303  020E                     	;# 
  3304  0211                     	;# 
  3305  0211                     	;# 
  3306  0212                     	;# 
  3307  0212                     	;# 
  3308  0213                     	;# 
  3309  0213                     	;# 
  3310  0214                     	;# 
  3311  0214                     	;# 
  3312  0215                     	;# 
  3313  0215                     	;# 
  3314  0215                     	;# 
  3315  0215                     	;# 
  3316  0216                     	;# 
  3317  0216                     	;# 
  3318  0217                     	;# 
  3319  0217                     	;# 
  3320  028C                     	;# 
  3321  028D                     	;# 
  3322  028E                     	;# 
  3323  0291                     	;# 
  3324  0291                     	;# 
  3325  0292                     	;# 
  3326  0293                     	;# 
  3327  0294                     	;# 
  3328  0298                     	;# 
  3329  0298                     	;# 
  3330  0299                     	;# 
  3331  029A                     	;# 
  3332  029B                     	;# 
  3333  029E                     	;# 
  3334  030C                     	;# 
  3335  030D                     	;# 
  3336  030E                     	;# 
  3337  038C                     	;# 
  3338  038D                     	;# 
  3339  038E                     	;# 
  3340  0391                     	;# 
  3341  0392                     	;# 
  3342  0393                     	;# 
  3343  0394                     	;# 
  3344  0395                     	;# 
  3345  0396                     	;# 
  3346  0397                     	;# 
  3347  0398                     	;# 
  3348  0399                     	;# 
  3349  040E                     	;# 
  3350  0413                     	;# 
  3351  0413                     	;# 
  3352  0414                     	;# 
  3353  0414                     	;# 
  3354  0415                     	;# 
  3355  0416                     	;# 
  3356  0417                     	;# 
  3357  0418                     	;# 
  3358  041A                     	;# 
  3359  041A                     	;# 
  3360  041B                     	;# 
  3361  041B                     	;# 
  3362  041C                     	;# 
  3363  041D                     	;# 
  3364  041E                     	;# 
  3365  041F                     	;# 
  3366  0493                     	;# 
  3367  0494                     	;# 
  3368  0495                     	;# 
  3369  0496                     	;# 
  3370  049A                     	;# 
  3371  049B                     	;# 
  3372  049C                     	;# 
  3373  049D                     	;# 
  3374  058C                     	;# 
  3375  058C                     	;# 
  3376  058D                     	;# 
  3377  058E                     	;# 
  3378  058E                     	;# 
  3379  058F                     	;# 
  3380  0590                     	;# 
  3381  0590                     	;# 
  3382  0591                     	;# 
  3383  0592                     	;# 
  3384  0592                     	;# 
  3385  0593                     	;# 
  3386  0594                     	;# 
  3387  0594                     	;# 
  3388  0595                     	;# 
  3389  0596                     	;# 
  3390  0596                     	;# 
  3391  0597                     	;# 
  3392  0598                     	;# 
  3393  0599                     	;# 
  3394  059A                     	;# 
  3395  059B                     	;# 
  3396  059B                     	;# 
  3397  059C                     	;# 
  3398  059D                     	;# 
  3399  060C                     	;# 
  3400  060C                     	;# 
  3401  060D                     	;# 
  3402  060E                     	;# 
  3403  060F                     	;# 
  3404  060F                     	;# 
  3405  0610                     	;# 
  3406  0611                     	;# 
  3407  0612                     	;# 
  3408  0613                     	;# 
  3409  0614                     	;# 
  3410  0617                     	;# 
  3411  0617                     	;# 
  3412  0618                     	;# 
  3413  0619                     	;# 
  3414  061A                     	;# 
  3415  061A                     	;# 
  3416  061B                     	;# 
  3417  061C                     	;# 
  3418  0691                     	;# 
  3419  0692                     	;# 
  3420  0693                     	;# 
  3421  0694                     	;# 
  3422  0695                     	;# 
  3423  0696                     	;# 
  3424  0697                     	;# 
  3425  0699                     	;# 
  3426  069A                     	;# 
  3427  0711                     	;# 
  3428  0712                     	;# 
  3429  0713                     	;# 
  3430  0714                     	;# 
  3431  0715                     	;# 
  3432  0718                     	;# 
  3433  0718                     	;# 
  3434  0719                     	;# 
  3435  071A                     	;# 
  3436  071A                     	;# 
  3437  071B                     	;# 
  3438  071C                     	;# 
  3439  071D                     	;# 
  3440  0791                     	;# 
  3441  0791                     	;# 
  3442  0792                     	;# 
  3443  0793                     	;# 
  3444  0793                     	;# 
  3445  0794                     	;# 
  3446  0795                     	;# 
  3447  0795                     	;# 
  3448  0796                     	;# 
  3449  0797                     	;# 
  3450  0797                     	;# 
  3451  0798                     	;# 
  3452  0799                     	;# 
  3453  079A                     	;# 
  3454  080C                     	;# 
  3455  080C                     	;# 
  3456  080D                     	;# 
  3457  080E                     	;# 
  3458  080E                     	;# 
  3459  080F                     	;# 
  3460  0810                     	;# 
  3461  0810                     	;# 
  3462  0811                     	;# 
  3463  0812                     	;# 
  3464  0812                     	;# 
  3465  0813                     	;# 
  3466  0814                     	;# 
  3467  0815                     	;# 
  3468  0816                     	;# 
  3469  0817                     	;# 
  3470  0818                     	;# 
  3471  0819                     	;# 
  3472  081A                     	;# 
  3473  081A                     	;# 
  3474  081B                     	;# 
  3475  081C                     	;# 
  3476  081C                     	;# 
  3477  081D                     	;# 
  3478  088C                     	;# 
  3479  088D                     	;# 
  3480  088E                     	;# 
  3481  088F                     	;# 
  3482  088F                     	;# 
  3483  0890                     	;# 
  3484  0891                     	;# 
  3485  0892                     	;# 
  3486  0893                     	;# 
  3487  0893                     	;# 
  3488  0894                     	;# 
  3489  0895                     	;# 
  3490  0896                     	;# 
  3491  0897                     	;# 
  3492  0897                     	;# 
  3493  0898                     	;# 
  3494  0899                     	;# 
  3495  0D8C                     	;# 
  3496  0D8C                     	;# 
  3497  0D8D                     	;# 
  3498  0D8E                     	;# 
  3499  0D8F                     	;# 
  3500  0D8F                     	;# 
  3501  0D90                     	;# 
  3502  0D91                     	;# 
  3503  0D92                     	;# 
  3504  0D92                     	;# 
  3505  0D93                     	;# 
  3506  0D94                     	;# 
  3507  0D95                     	;# 
  3508  0D95                     	;# 
  3509  0D96                     	;# 
  3510  0D97                     	;# 
  3511  0D98                     	;# 
  3512  0D99                     	;# 
  3513  0D9A                     	;# 
  3514  0D9B                     	;# 
  3515  0D9C                     	;# 
  3516  0D9D                     	;# 
  3517  0D9E                     	;# 
  3518  0D9E                     	;# 
  3519  0D9F                     	;# 
  3520  0DA0                     	;# 
  3521  0DA1                     	;# 
  3522  0DA1                     	;# 
  3523  0DA2                     	;# 
  3524  0DA3                     	;# 
  3525  0DA4                     	;# 
  3526  0DA4                     	;# 
  3527  0DA5                     	;# 
  3528  0DA6                     	;# 
  3529  0DA7                     	;# 
  3530  0DA7                     	;# 
  3531  0DA8                     	;# 
  3532  0DA9                     	;# 
  3533  0DAA                     	;# 
  3534  0DAB                     	;# 
  3535  0DAC                     	;# 
  3536  0DAD                     	;# 
  3537  0DAE                     	;# 
  3538  0DAF                     	;# 
  3539  0E0F                     	;# 
  3540  0E10                     	;# 
  3541  0E11                     	;# 
  3542  0E12                     	;# 
  3543  0E13                     	;# 
  3544  0E14                     	;# 
  3545  0E15                     	;# 
  3546  0E16                     	;# 
  3547  0E17                     	;# 
  3548  0E18                     	;# 
  3549  0E19                     	;# 
  3550  0E1A                     	;# 
  3551  0E1B                     	;# 
  3552  0E1C                     	;# 
  3553  0E1D                     	;# 
  3554  0E1E                     	;# 
  3555  0E1F                     	;# 
  3556  0E20                     	;# 
  3557  0E21                     	;# 
  3558  0E22                     	;# 
  3559  0E23                     	;# 
  3560  0E24                     	;# 
  3561  0E25                     	;# 
  3562  0E26                     	;# 
  3563  0E27                     	;# 
  3564  0E28                     	;# 
  3565  0E29                     	;# 
  3566  0E2A                     	;# 
  3567  0E2B                     	;# 
  3568  0E2C                     	;# 
  3569  0E2D                     	;# 
  3570  0E2E                     	;# 
  3571  0E90                     	;# 
  3572  0E91                     	;# 
  3573  0E92                     	;# 
  3574  0E94                     	;# 
  3575  0E95                     	;# 
  3576  0E9C                     	;# 
  3577  0E9D                     	;# 
  3578  0E9E                     	;# 
  3579  0E9F                     	;# 
  3580  0EA0                     	;# 
  3581  0EA1                     	;# 
  3582  0EA2                     	;# 
  3583  0EA3                     	;# 
  3584  0EA4                     	;# 
  3585  0EA5                     	;# 
  3586  0EA6                     	;# 
  3587  0EA7                     	;# 
  3588  0F0F                     	;# 
  3589  0F10                     	;# 
  3590  0F11                     	;# 
  3591  0F12                     	;# 
  3592  0F13                     	;# 
  3593  0F14                     	;# 
  3594  0F15                     	;# 
  3595  0F16                     	;# 
  3596  0F17                     	;# 
  3597  0F18                     	;# 
  3598  0F19                     	;# 
  3599  0F1A                     	;# 
  3600  0F1B                     	;# 
  3601  0F1C                     	;# 
  3602  0F1D                     	;# 
  3603  0F1E                     	;# 
  3604  0F1F                     	;# 
  3605  0F20                     	;# 
  3606  0F21                     	;# 
  3607  0F22                     	;# 
  3608  0F23                     	;# 
  3609  0F24                     	;# 
  3610  0F25                     	;# 
  3611  0F26                     	;# 
  3612  0F27                     	;# 
  3613  0F28                     	;# 
  3614  0F29                     	;# 
  3615  0F2A                     	;# 
  3616  0F2B                     	;# 
  3617  0F2C                     	;# 
  3618  0F2D                     	;# 
  3619  0F2E                     	;# 
  3620  0F2F                     	;# 
  3621  0F30                     	;# 
  3622  0F31                     	;# 
  3623  0F32                     	;# 
  3624  0F33                     	;# 
  3625  0F34                     	;# 
  3626  0F35                     	;# 
  3627  0F36                     	;# 
  3628  0F37                     	;# 
  3629  0FE4                     	;# 
  3630  0FE5                     	;# 
  3631  0FE6                     	;# 
  3632  0FE7                     	;# 
  3633  0FE8                     	;# 
  3634  0FE9                     	;# 
  3635  0FEA                     	;# 
  3636  0FEB                     	;# 
  3637  0FED                     	;# 
  3638  0FEE                     	;# 
  3639  0FEF                     	;# 
  3640                           
  3641 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  3642  0000                     
  3643 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  3644  0000                     
  3645 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  3646  0000                     
  3647                           	psect	stringtext1
  3648  1800                     __pstringtext1:	
  3649  1800                     _hrDisp:	
  3650  1800  3448               	retlw	72
  3651  1801  3465               	retlw	101
  3652  1802  3461               	retlw	97
  3653  1803  3472               	retlw	114
  3654  1804  3474               	retlw	116
  3655  1805  3420               	retlw	32
  3656  1806  3452               	retlw	82
  3657  1807  3461               	retlw	97
  3658  1808  3474               	retlw	116
  3659  1809  3465               	retlw	101
  3660  180A  343A               	retlw	58
  3661  180B  3420               	retlw	32
  3662  180C  3400               	retlw	0
  3663  180D                     __end_of_hrDisp:	
  3664                           
  3665                           	psect	stringtext2
  3666  180D                     __pstringtext2:	
  3667  180D                     _distanceDisp:	
  3668  180D  3444               	retlw	68
  3669  180E  3469               	retlw	105
  3670  180F  3473               	retlw	115
  3671  1810  3474               	retlw	116
  3672  1811  3461               	retlw	97
  3673  1812  346E               	retlw	110
  3674  1813  3463               	retlw	99
  3675  1814  3465               	retlw	101
  3676  1815  343A               	retlw	58
  3677  1816  3420               	retlw	32
  3678  1817  3400               	retlw	0
  3679  1818                     __end_of_distanceDisp:	
  3680                           
  3681                           	psect	stringtext3
  3682  1818                     __pstringtext3:	
  3683  1818                     _speedDisp:	
  3684  1818  3453               	retlw	83
  3685  1819  3470               	retlw	112
  3686  181A  3465               	retlw	101
  3687  181B  3465               	retlw	101
  3688  181C  3464               	retlw	100
  3689  181D  343A               	retlw	58
  3690  181E  3420               	retlw	32
  3691  181F  3400               	retlw	0
  3692  1820                     __end_of_speedDisp:	
  3693                           
  3694                           	psect	nvBANK0
  3695  0067                     __pnvBANK0:	
  3696  0067                     _timer0ReloadVal:	
  3697  0067                     	ds	1
  3698                           
  3699                           	psect	nvBANK1
  3700  00EA                     __pnvBANK1:	
  3701  00EA                     _TMR0_InterruptHandler:	
  3702  00EA                     	ds	2
  3703  00EC                     _IOCCF7_InterruptHandler:	
  3704  00EC                     	ds	2
  3705                           
  3706                           	psect	nvBANK2
  3707  0155                     __pnvBANK2:	
  3708  0155                     _EUSART_ErrorHandler:	
  3709  0155                     	ds	2
  3710  0157                     _EUSART_OverrunErrorHandler:	
  3711  0157                     	ds	2
  3712  0159                     _EUSART_FramingErrorHandler:	
  3713  0159                     	ds	2
  3714  0015                     _TMR0	set	21
  3715  000B                     _INTCONbits	set	11
  3716  0010                     _PIR1bits	set	16
  3717  009D                     _ADCON0bits	set	157
  3718  009C                     _ADRESH	set	156
  3719  009B                     _ADRESL	set	155
  3720  009F                     _ADCON2	set	159
  3721  009E                     _ADCON1	set	158
  3722  009D                     _ADCON0	set	157
  3723  0095                     _OPTION_REG	set	149
  3724  0095                     _OPTION_REGbits	set	149
  3725  008E                     _TRISC	set	142
  3726  008D                     _TRISB	set	141
  3727  008C                     _TRISA	set	140
  3728  0098                     _OSCTUNE	set	152
  3729  0099                     _OSCCON	set	153
  3730  010E                     _LATC	set	270
  3731  010D                     _LATB	set	269
  3732  010C                     _LATA	set	268
  3733  0116                     _BORCON	set	278
  3734  018C                     _ANSELA	set	396
  3735  018D                     _ANSELB	set	397
  3736  018E                     _ANSELC	set	398
  3737  019A                     _TX1REG	set	410
  3738  0199                     _RC1REG	set	409
  3739  019D                     _RC1STAbits	set	413
  3740  019E                     _TX1STAbits	set	414
  3741  019C                     _SPBRGH	set	412
  3742  019B                     _SPBRGL	set	411
  3743  019E                     _TX1STA	set	414
  3744  019D                     _RC1STA	set	413
  3745  019F                     _BAUD1CON	set	415
  3746  020E                     _WPUC	set	526
  3747  020C                     _WPUA	set	524
  3748  020D                     _WPUB	set	525
  3749  028E                     _ODCONC	set	654
  3750  028D                     _ODCONB	set	653
  3751  028C                     _ODCONA	set	652
  3752  030E                     _SLRCONC	set	782
  3753  030D                     _SLRCONB	set	781
  3754  030C                     _SLRCONA	set	780
  3755  1877                     _SLRC7	set	6263
  3756  0397                     _IOCCPbits	set	919
  3757  0398                     _IOCCNbits	set	920
  3758  0399                     _IOCCFbits	set	921
  3759  1C77                     _INLVLC7	set	7287
  3760  0E9F                     _RB7PPS	set	3743
  3761                           
  3762                           	psect	stringtext4
  3763  1820                     __pstringtext4:	
  3764  1820                     STR_2:	
  3765  1820  347C               	retlw	124	;'|'
  3766  1821  342D               	retlw	45	;'-'
  3767  1822  3400               	retlw	0
  3768                           
  3769                           	psect	stringtext5
  3770  1823                     __pstringtext5:	
  3771  1823                     STR_1:	
  3772  1823  3425               	retlw	37	;'%'
  3773  1824  3464               	retlw	100	;'d'
  3774  1825  3400               	retlw	0
  3775                           
  3776                           	psect	stringtext6
  3777  0000                     __pstringtext6:	
  3778                           
  3779                           ; #config settings
  3780  0000                     
  3781                           	psect	cinit
  3782  0016                     start_initialization:	
  3783  0016                     __initialization:	
  3784                           
  3785                           ; Clear objects allocated to COMMON
  3786  0016  01FC               	clrf	__pbssCOMMON& (0+127)
  3787  0017  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
  3788                           
  3789                           ; Clear objects allocated to BANK0
  3790  0018  3060               	movlw	low __pbssBANK0
  3791  0019  0084               	movwf	4
  3792  001A  3000               	movlw	high __pbssBANK0
  3793  001B  0085               	movwf	5
  3794  001C  3007               	movlw	7
  3795  001D  3187  27FA  3180   	fcall	clear_ram0
  3796                           
  3797                           ; Clear objects allocated to BANK1
  3798  0020  30A0               	movlw	low __pbssBANK1
  3799  0021  0084               	movwf	4
  3800  0022  3000               	movlw	high __pbssBANK1
  3801  0023  0085               	movwf	5
  3802  0024  302E               	movlw	46
  3803  0025  3187  27FA  3180   	fcall	clear_ram0
  3804                           
  3805                           ; Clear objects allocated to BANK2
  3806  0028  3020               	movlw	low __pbssBANK2
  3807  0029  0084               	movwf	4
  3808  002A  3001               	movlw	high __pbssBANK2
  3809  002B  0085               	movwf	5
  3810  002C  302C               	movlw	44
  3811  002D  3187  27FA         	fcall	clear_ram0
  3812  002F                     end_of_initialization:	
  3813                           ;End of C runtime variable initialization code
  3814                           
  3815  002F                     __end_of__initialization:	
  3816  002F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3817  0030  0020               	movlb	0
  3818  0031  318D  2D38         	ljmp	_main	;jump to C main() function
  3819                           
  3820                           	psect	bssCOMMON
  3821  007C                     __pbssCOMMON:	
  3822  007C                     _speedInt:	
  3823  007C                     	ds	2
  3824                           
  3825                           	psect	bssBANK0
  3826  0060                     __pbssBANK0:	
  3827  0060                     _hallCount:	
  3828  0060                     	ds	4
  3829  0064                     _flags:	
  3830  0064                     	ds	2
  3831  0066                     _eusartRxLastError:	
  3832  0066                     	ds	1
  3833                           
  3834                           	psect	bssBANK1
  3835  00A0                     __pbssBANK1:	
  3836  00A0                     _rpmValInt:	
  3837  00A0                     	ds	4
  3838  00A4                     _rpmVal:	
  3839  00A4                     	ds	4
  3840  00A8                     _timePassed:	
  3841  00A8                     	ds	4
  3842  00AC                     _endTime:	
  3843  00AC                     	ds	4
  3844  00B0                     _startTime:	
  3845  00B0                     	ds	4
  3846  00B4                     _speed:	
  3847  00B4                     	ds	4
  3848  00B8                     _rpm:	
  3849  00B8                     	ds	4
  3850  00BC                     _adcCounter:	
  3851  00BC                     	ds	4
  3852  00C0                     _counter:	
  3853  00C0                     	ds	4
  3854  00C4                     _nout:	
  3855  00C4                     	ds	2
  3856  00C6                     _width:	
  3857  00C6                     	ds	2
  3858  00C8                     _prec:	
  3859  00C8                     	ds	2
  3860  00CA                     _hrInt:	
  3861  00CA                     	ds	2
  3862  00CC                     _distInt:	
  3863  00CC                     	ds	2
  3864                           
  3865                           	psect	bssBANK2
  3866  0120                     __pbssBANK2:	
  3867  0120                     _rpmInt:	
  3868  0120                     	ds	4
  3869  0124                     _heartRate:	
  3870  0124                     	ds	4
  3871  0128                     _distance:	
  3872  0128                     	ds	4
  3873  012C                     _dbuf:	
  3874  012C                     	ds	32
  3875                           
  3876                           	psect	clrtext
  3877  07FA                     clear_ram0:	
  3878                           ;	Called with FSR0 containing the base address, and
  3879                           ;	WREG with the size to clear
  3880                           
  3881  07FA  0064               	clrwdt	;clear the watchdog before getting into this loop
  3882  07FB                     clrloop0:	
  3883  07FB  0180               	clrf	0	;clear RAM location pointed to by FSR
  3884  07FC  3101               	addfsr 0,1
  3885  07FD  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3886  07FE  2FFB               	goto	clrloop0	;have we reached the end yet?
  3887  07FF  3400               	retlw	0	;all done for this memory range, return
  3888                           
  3889                           	psect	cstackBANK2
  3890  014C                     __pcstackBANK2:	
  3891  014C                     ?_printf:	
  3892  014C                     printf@fmt:	
  3893                           ; 2 bytes @ 0x0
  3894                           
  3895                           
  3896                           ; 2 bytes @ 0x0
  3897  014C                     	ds	8
  3898  0154                     printf@ap:	
  3899                           
  3900                           ; 1 bytes @ 0x8
  3901  0154                     	ds	1
  3902                           
  3903                           	psect	cstackBANK1
  3904  00CE                     __pcstackBANK1:	
  3905  00CE                     ?___flmul:	
  3906  00CE                     _dtoa$755:	
  3907                           ; 4 bytes @ 0x0
  3908                           
  3909  00CE                     ___flmul@b:	
  3910                           ; 2 bytes @ 0x0
  3911                           
  3912                           
  3913                           ; 4 bytes @ 0x0
  3914  00CE                     	ds	2
  3915  00D0                     dtoa@fp:	
  3916                           
  3917                           ; 1 bytes @ 0x2
  3918  00D0                     	ds	1
  3919  00D1                     dtoa@p:	
  3920                           
  3921                           ; 2 bytes @ 0x3
  3922  00D1                     	ds	1
  3923  00D2                     ___flmul@a:	
  3924                           
  3925                           ; 4 bytes @ 0x4
  3926  00D2                     	ds	1
  3927  00D3                     dtoa@w:	
  3928                           
  3929                           ; 2 bytes @ 0x5
  3930  00D3                     	ds	2
  3931  00D5                     dtoa@s:	
  3932                           
  3933                           ; 2 bytes @ 0x7
  3934  00D5                     	ds	1
  3935  00D6                     ??___flmul:	
  3936                           
  3937                           ; 1 bytes @ 0x8
  3938  00D6                     	ds	1
  3939  00D7                     dtoa@n:	
  3940                           
  3941                           ; 8 bytes @ 0x9
  3942  00D7                     	ds	4
  3943  00DB                     ___flmul@sign:	
  3944                           
  3945                           ; 1 bytes @ 0xD
  3946  00DB                     	ds	1
  3947  00DC                     ___flmul@aexp:	
  3948                           
  3949                           ; 1 bytes @ 0xE
  3950  00DC                     	ds	1
  3951  00DD                     ___flmul@grs:	
  3952                           
  3953                           ; 4 bytes @ 0xF
  3954  00DD                     	ds	2
  3955  00DF                     dtoa@i:	
  3956                           
  3957                           ; 2 bytes @ 0x11
  3958  00DF                     	ds	2
  3959  00E1                     ?_vfprintf:	
  3960  00E1                     ___flmul@bexp:	
  3961                           ; 2 bytes @ 0x13
  3962                           
  3963  00E1                     vfprintf@fmt:	
  3964                           ; 1 bytes @ 0x13
  3965                           
  3966                           
  3967                           ; 2 bytes @ 0x13
  3968  00E1                     	ds	1
  3969  00E2                     ___flmul@prod:	
  3970                           
  3971                           ; 4 bytes @ 0x14
  3972  00E2                     	ds	1
  3973  00E3                     vfprintf@ap:	
  3974                           
  3975                           ; 1 bytes @ 0x15
  3976  00E3                     	ds	1
  3977  00E4                     ??_vfprintf:	
  3978                           
  3979                           ; 1 bytes @ 0x16
  3980  00E4                     	ds	2
  3981  00E6                     vfprintf@fp:	
  3982  00E6                     ___flmul@temp:	
  3983                           ; 1 bytes @ 0x18
  3984                           
  3985                           
  3986                           ; 2 bytes @ 0x18
  3987  00E6                     	ds	1
  3988  00E7                     vfprintf@cfmt:	
  3989                           
  3990                           ; 2 bytes @ 0x19
  3991  00E7                     	ds	2
  3992  00E9                     ??_printf:	
  3993                           
  3994                           ; 1 bytes @ 0x1B
  3995  00E9                     	ds	1
  3996                           
  3997                           	psect	cstackCOMMON
  3998  0070                     __pcstackCOMMON:	
  3999  0070                     ?_PIN_MANAGER_Initialize:	
  4000  0070                     ?_OSCILLATOR_Initialize:	
  4001                           ; 1 bytes @ 0x0
  4002                           
  4003  0070                     ?_ADC_Initialize:	
  4004                           ; 1 bytes @ 0x0
  4005                           
  4006  0070                     ?_TMR0_Initialize:	
  4007                           ; 1 bytes @ 0x0
  4008                           
  4009  0070                     ?_IOCCF7_DefaultInterruptHandler:	
  4010                           ; 1 bytes @ 0x0
  4011                           
  4012  0070                     ??_IOCCF7_DefaultInterruptHandler:	
  4013                           ; 1 bytes @ 0x0
  4014                           
  4015  0070                     ?_IOCCF7_ISR:	
  4016                           ; 1 bytes @ 0x0
  4017                           
  4018  0070                     ?_TMR0_DefaultInterruptHandler:	
  4019                           ; 1 bytes @ 0x0
  4020                           
  4021  0070                     ??_TMR0_DefaultInterruptHandler:	
  4022                           ; 1 bytes @ 0x0
  4023                           
  4024  0070                     ?_timerISR:	
  4025                           ; 1 bytes @ 0x0
  4026                           
  4027  0070                     ??_timerISR:	
  4028                           ; 1 bytes @ 0x0
  4029                           
  4030  0070                     ?_speedCalc:	
  4031                           ; 1 bytes @ 0x0
  4032                           
  4033  0070                     ?_resetCursor:	
  4034                           ; 1 bytes @ 0x0
  4035                           
  4036  0070                     ?_EUSART_Initialize:	
  4037                           ; 1 bytes @ 0x0
  4038                           
  4039  0070                     ?_EUSART_Write:	
  4040                           ; 1 bytes @ 0x0
  4041                           
  4042  0070                     ?_putch:	
  4043                           ; 1 bytes @ 0x0
  4044                           
  4045  0070                     ?_SYSTEM_Initialize:	
  4046                           ; 1 bytes @ 0x0
  4047                           
  4048  0070                     ?_PIN_MANAGER_IOC:	
  4049                           ; 1 bytes @ 0x0
  4050                           
  4051  0070                     ?_TMR0_ISR:	
  4052                           ; 1 bytes @ 0x0
  4053                           
  4054  0070                     ??_TMR0_ISR:	
  4055                           ; 1 bytes @ 0x0
  4056                           
  4057  0070                     ?_INTERRUPT_InterruptManager:	
  4058                           ; 1 bytes @ 0x0
  4059                           
  4060  0070                     ?_main:	
  4061                           ; 1 bytes @ 0x0
  4062                           
  4063  0070                     ?i1___fladd:	
  4064                           ; 1 bytes @ 0x0
  4065                           
  4066  0070                     i1___fladd@b:	
  4067                           ; 4 bytes @ 0x0
  4068                           
  4069                           
  4070                           ; 4 bytes @ 0x0
  4071  0070                     	ds	4
  4072  0074                     i1___fladd@a:	
  4073                           
  4074                           ; 4 bytes @ 0x4
  4075  0074                     	ds	4
  4076  0078                     i1___fladd@signs:	
  4077                           
  4078                           ; 1 bytes @ 0x8
  4079  0078                     	ds	1
  4080  0079                     i1___fladd@aexp:	
  4081                           
  4082                           ; 1 bytes @ 0x9
  4083  0079                     	ds	1
  4084  007A                     i1___fladd@bexp:	
  4085                           
  4086                           ; 1 bytes @ 0xA
  4087  007A                     	ds	1
  4088  007B                     i1___fladd@grs:	
  4089                           
  4090                           ; 1 bytes @ 0xB
  4091  007B                     	ds	1
  4092  007C                     ??_IOCCF7_ISR:	
  4093  007C                     ??_speedCalc:	
  4094                           ; 1 bytes @ 0xC
  4095                           
  4096  007C                     ??_PIN_MANAGER_IOC:	
  4097                           ; 1 bytes @ 0xC
  4098                           
  4099  007C                     ??_INTERRUPT_InterruptManager:	
  4100                           ; 1 bytes @ 0xC
  4101                           
  4102                           
  4103                           	psect	cstackBANK0
  4104  0020                     __pcstackBANK0:	
  4105                           ; 1 bytes @ 0xC
  4106                           
  4107  0020                     ??i1___fladd:	
  4108                           
  4109                           ; 1 bytes @ 0x0
  4110  0020                     	ds	8
  4111  0028                     ?___flge:	
  4112  0028                     ?_EUSART_SetFramingErrorHandler:	
  4113                           ; 1 bit 
  4114                           
  4115  0028                     ?_EUSART_SetOverrunErrorHandler:	
  4116                           ; 1 bytes @ 0x8
  4117                           
  4118  0028                     ?_EUSART_SetErrorHandler:	
  4119                           ; 1 bytes @ 0x8
  4120                           
  4121  0028                     ??_OSCILLATOR_Initialize:	
  4122                           ; 1 bytes @ 0x8
  4123                           
  4124  0028                     ??_ADC_Initialize:	
  4125                           ; 1 bytes @ 0x8
  4126                           
  4127  0028                     ?_IOCCF7_SetInterruptHandler:	
  4128                           ; 1 bytes @ 0x8
  4129                           
  4130  0028                     ?_TMR0_SetInterruptHandler:	
  4131                           ; 1 bytes @ 0x8
  4132                           
  4133  0028                     ??_EUSART_Write:	
  4134                           ; 1 bytes @ 0x8
  4135                           
  4136  0028                     ?_strlen:	
  4137                           ; 1 bytes @ 0x8
  4138                           
  4139  0028                     ?__Umul8_16:	
  4140                           ; 2 bytes @ 0x8
  4141                           
  4142  0028                     ?___fltol:	
  4143                           ; 2 bytes @ 0x8
  4144                           
  4145  0028                     ?___fladd:	
  4146                           ; 4 bytes @ 0x8
  4147                           
  4148  0028                     ?___xxtofl:	
  4149                           ; 4 bytes @ 0x8
  4150                           
  4151  0028                     ?___aodiv:	
  4152                           ; 4 bytes @ 0x8
  4153                           
  4154  0028                     ?___aomod:	
  4155                           ; 8 bytes @ 0x8
  4156                           
  4157  0028                     EUSART_Write@txData:	
  4158                           ; 8 bytes @ 0x8
  4159                           
  4160  0028                     __Umul8_16@multiplicand:	
  4161                           ; 1 bytes @ 0x8
  4162                           
  4163  0028                     EUSART_SetFramingErrorHandler@interruptHandler:	
  4164                           ; 1 bytes @ 0x8
  4165                           
  4166  0028                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  4167                           ; 2 bytes @ 0x8
  4168                           
  4169  0028                     EUSART_SetErrorHandler@interruptHandler:	
  4170                           ; 2 bytes @ 0x8
  4171                           
  4172  0028                     IOCCF7_SetInterruptHandler@InterruptHandler:	
  4173                           ; 2 bytes @ 0x8
  4174                           
  4175  0028                     TMR0_SetInterruptHandler@InterruptHandler:	
  4176                           ; 2 bytes @ 0x8
  4177                           
  4178  0028                     ___flge@ff1:	
  4179                           ; 2 bytes @ 0x8
  4180                           
  4181  0028                     ___fltol@f1:	
  4182                           ; 4 bytes @ 0x8
  4183                           
  4184  0028                     ___fladd@b:	
  4185                           ; 4 bytes @ 0x8
  4186                           
  4187  0028                     ___xxtofl@val:	
  4188                           ; 4 bytes @ 0x8
  4189                           
  4190  0028                     ___aodiv@divisor:	
  4191                           ; 4 bytes @ 0x8
  4192                           
  4193  0028                     ___aomod@divisor:	
  4194                           ; 8 bytes @ 0x8
  4195                           
  4196                           
  4197                           ; 8 bytes @ 0x8
  4198  0028                     	ds	1
  4199  0029                     ?_setCursor:	
  4200  0029                     ??_putch:	
  4201                           ; 1 bytes @ 0x9
  4202                           
  4203  0029                     putch@txData:	
  4204                           ; 1 bytes @ 0x9
  4205                           
  4206  0029                     setCursor@b:	
  4207                           ; 1 bytes @ 0x9
  4208                           
  4209                           
  4210                           ; 1 bytes @ 0x9
  4211  0029                     	ds	1
  4212  002A                     ??_EUSART_SetFramingErrorHandler:	
  4213  002A                     ??_EUSART_SetOverrunErrorHandler:	
  4214                           ; 1 bytes @ 0xA
  4215                           
  4216  002A                     ??_EUSART_SetErrorHandler:	
  4217                           ; 1 bytes @ 0xA
  4218                           
  4219  002A                     ??_PIN_MANAGER_Initialize:	
  4220                           ; 1 bytes @ 0xA
  4221                           
  4222  002A                     ??_TMR0_Initialize:	
  4223                           ; 1 bytes @ 0xA
  4224                           
  4225  002A                     ??_IOCCF7_SetInterruptHandler:	
  4226                           ; 1 bytes @ 0xA
  4227                           
  4228  002A                     ??_TMR0_SetInterruptHandler:	
  4229                           ; 1 bytes @ 0xA
  4230                           
  4231  002A                     ??_setCursor:	
  4232                           ; 1 bytes @ 0xA
  4233                           
  4234  002A                     ??_strlen:	
  4235                           ; 1 bytes @ 0xA
  4236                           
  4237  002A                     ??__Umul8_16:	
  4238                           ; 1 bytes @ 0xA
  4239                           
  4240  002A                     ??_EUSART_Initialize:	
  4241                           ; 1 bytes @ 0xA
  4242                           
  4243  002A                     ?_fputc:	
  4244                           ; 1 bytes @ 0xA
  4245                           
  4246  002A                     fputc@c:	
  4247                           ; 2 bytes @ 0xA
  4248                           
  4249                           
  4250                           ; 2 bytes @ 0xA
  4251  002A                     	ds	1
  4252  002B                     ??_SYSTEM_Initialize:	
  4253  002B                     strlen@a:	
  4254                           ; 1 bytes @ 0xB
  4255                           
  4256                           
  4257                           ; 1 bytes @ 0xB
  4258  002B                     	ds	1
  4259  002C                     ??___fltol:	
  4260  002C                     ??___xxtofl:	
  4261                           ; 1 bytes @ 0xC
  4262                           
  4263  002C                     setCursor@a:	
  4264                           ; 1 bytes @ 0xC
  4265                           
  4266  002C                     fputc@fp:	
  4267                           ; 1 bytes @ 0xC
  4268                           
  4269  002C                     strlen@s:	
  4270                           ; 1 bytes @ 0xC
  4271                           
  4272  002C                     __Umul8_16@product:	
  4273                           ; 1 bytes @ 0xC
  4274                           
  4275  002C                     ___flge@ff2:	
  4276                           ; 2 bytes @ 0xC
  4277                           
  4278  002C                     ___fladd@a:	
  4279                           ; 4 bytes @ 0xC
  4280                           
  4281                           
  4282                           ; 4 bytes @ 0xC
  4283  002C                     	ds	1
  4284  002D                     ??_fputc:	
  4285                           
  4286                           ; 1 bytes @ 0xD
  4287  002D                     	ds	1
  4288  002E                     __Umul8_16@word_mpld:	
  4289                           
  4290                           ; 2 bytes @ 0xE
  4291  002E                     	ds	2
  4292  0030                     ??___flge:	
  4293  0030                     ??___fladd:	
  4294                           ; 1 bytes @ 0x10
  4295                           
  4296  0030                     ___xxtofl@sign:	
  4297                           ; 1 bytes @ 0x10
  4298                           
  4299  0030                     __Umul8_16@multiplier:	
  4300                           ; 1 bytes @ 0x10
  4301                           
  4302  0030                     ___aodiv@dividend:	
  4303                           ; 1 bytes @ 0x10
  4304                           
  4305  0030                     ___aomod@dividend:	
  4306                           ; 8 bytes @ 0x10
  4307                           
  4308                           
  4309                           ; 8 bytes @ 0x10
  4310  0030                     	ds	1
  4311  0031                     ___fltol@sign1:	
  4312  0031                     ___xxtofl@exp:	
  4313                           ; 1 bytes @ 0x11
  4314                           
  4315                           
  4316                           ; 1 bytes @ 0x11
  4317  0031                     	ds	1
  4318  0032                     ?_fputs:	
  4319  0032                     ___fltol@exp1:	
  4320                           ; 2 bytes @ 0x12
  4321                           
  4322  0032                     fputs@s:	
  4323                           ; 1 bytes @ 0x12
  4324                           
  4325  0032                     ___xxtofl@arg:	
  4326                           ; 2 bytes @ 0x12
  4327                           
  4328                           
  4329                           ; 4 bytes @ 0x12
  4330  0032                     	ds	2
  4331  0034                     fputs@fp:	
  4332                           
  4333                           ; 1 bytes @ 0x14
  4334  0034                     	ds	1
  4335  0035                     ??_fputs:	
  4336                           
  4337                           ; 1 bytes @ 0x15
  4338  0035                     	ds	3
  4339  0038                     ??___aodiv:	
  4340  0038                     ??___aomod:	
  4341                           ; 1 bytes @ 0x18
  4342                           
  4343  0038                     ___fladd@signs:	
  4344                           ; 1 bytes @ 0x18
  4345                           
  4346  0038                     fputs@c:	
  4347                           ; 1 bytes @ 0x18
  4348                           
  4349                           
  4350                           ; 1 bytes @ 0x18
  4351  0038                     	ds	1
  4352  0039                     ___aodiv@counter:	
  4353  0039                     ___aomod@counter:	
  4354                           ; 1 bytes @ 0x19
  4355                           
  4356  0039                     ___fladd@aexp:	
  4357                           ; 1 bytes @ 0x19
  4358                           
  4359  0039                     fputs@i:	
  4360                           ; 1 bytes @ 0x19
  4361                           
  4362                           
  4363                           ; 2 bytes @ 0x19
  4364  0039                     	ds	1
  4365  003A                     ___aodiv@sign:	
  4366  003A                     ___aomod@sign:	
  4367                           ; 1 bytes @ 0x1A
  4368                           
  4369  003A                     ___fladd@bexp:	
  4370                           ; 1 bytes @ 0x1A
  4371                           
  4372                           
  4373                           ; 1 bytes @ 0x1A
  4374  003A                     	ds	1
  4375  003B                     ?_puts:	
  4376  003B                     ?_abs:	
  4377                           ; 2 bytes @ 0x1B
  4378                           
  4379  003B                     ?_pad:	
  4380                           ; 2 bytes @ 0x1B
  4381                           
  4382  003B                     pad@buf:	
  4383                           ; 2 bytes @ 0x1B
  4384                           
  4385  003B                     ___fladd@grs:	
  4386                           ; 1 bytes @ 0x1B
  4387                           
  4388  003B                     abs@a:	
  4389                           ; 1 bytes @ 0x1B
  4390                           
  4391  003B                     puts@s:	
  4392                           ; 2 bytes @ 0x1B
  4393                           
  4394  003B                     ___aodiv@quotient:	
  4395                           ; 2 bytes @ 0x1B
  4396                           
  4397                           
  4398                           ; 8 bytes @ 0x1B
  4399  003B                     	ds	1
  4400  003C                     ?___flsub:	
  4401  003C                     pad@p:	
  4402                           ; 4 bytes @ 0x1C
  4403                           
  4404  003C                     ___flsub@a:	
  4405                           ; 2 bytes @ 0x1C
  4406                           
  4407                           
  4408                           ; 4 bytes @ 0x1C
  4409  003C                     	ds	1
  4410  003D                     ??_puts:	
  4411  003D                     ??_abs:	
  4412                           ; 1 bytes @ 0x1D
  4413                           
  4414                           
  4415                           ; 1 bytes @ 0x1D
  4416  003D                     	ds	1
  4417  003E                     ??_pad:	
  4418                           
  4419                           ; 1 bytes @ 0x1E
  4420  003E                     	ds	1
  4421  003F                     _puts$1101:	
  4422  003F                     pad@i:	
  4423                           ; 1 bytes @ 0x1F
  4424                           
  4425                           
  4426                           ; 2 bytes @ 0x1F
  4427  003F                     	ds	1
  4428  0040                     ??_resetCursor:	
  4429  0040                     ___flsub@b:	
  4430                           ; 1 bytes @ 0x20
  4431                           
  4432                           
  4433                           ; 4 bytes @ 0x20
  4434  0040                     	ds	1
  4435  0041                     pad@w:	
  4436                           
  4437                           ; 2 bytes @ 0x21
  4438  0041                     	ds	2
  4439  0043                     pad@fp:	
  4440                           
  4441                           ; 1 bytes @ 0x23
  4442  0043                     	ds	1
  4443  0044                     ??___flsub:	
  4444  0044                     ?_dtoa:	
  4445                           ; 1 bytes @ 0x24
  4446                           
  4447  0044                     ?___fldiv:	
  4448                           ; 2 bytes @ 0x24
  4449                           
  4450  0044                     ___fldiv@a:	
  4451                           ; 4 bytes @ 0x24
  4452                           
  4453  0044                     dtoa@d:	
  4454                           ; 4 bytes @ 0x24
  4455                           
  4456                           
  4457                           ; 8 bytes @ 0x24
  4458  0044                     	ds	4
  4459  0048                     ___fldiv@b:	
  4460                           
  4461                           ; 4 bytes @ 0x28
  4462  0048                     	ds	4
  4463  004C                     ??_dtoa:	
  4464  004C                     ??___fldiv:	
  4465                           ; 1 bytes @ 0x2C
  4466                           
  4467                           
  4468                           ; 1 bytes @ 0x2C
  4469  004C                     	ds	3
  4470  004F                     ?_vfpfcnvrt:	
  4471  004F                     vfpfcnvrt@fmt:	
  4472                           ; 2 bytes @ 0x2F
  4473                           
  4474                           
  4475                           ; 1 bytes @ 0x2F
  4476  004F                     	ds	1
  4477  0050                     vfpfcnvrt@ap:	
  4478                           
  4479                           ; 1 bytes @ 0x30
  4480  0050                     	ds	1
  4481  0051                     ??_vfpfcnvrt:	
  4482  0051                     ___fldiv@rem:	
  4483                           ; 1 bytes @ 0x31
  4484                           
  4485                           
  4486                           ; 4 bytes @ 0x31
  4487  0051                     	ds	4
  4488  0055                     ___fldiv@sign:	
  4489                           
  4490                           ; 1 bytes @ 0x35
  4491  0055                     	ds	1
  4492  0056                     ___fldiv@new_exp:	
  4493  0056                     vfpfcnvrt@ll:	
  4494                           ; 2 bytes @ 0x36
  4495                           
  4496                           
  4497                           ; 8 bytes @ 0x36
  4498  0056                     	ds	2
  4499  0058                     ___fldiv@grs:	
  4500                           
  4501                           ; 4 bytes @ 0x38
  4502  0058                     	ds	4
  4503  005C                     ___fldiv@bexp:	
  4504                           
  4505                           ; 1 bytes @ 0x3C
  4506  005C                     	ds	1
  4507  005D                     ___fldiv@aexp:	
  4508                           
  4509                           ; 1 bytes @ 0x3D
  4510  005D                     	ds	1
  4511  005E                     vfpfcnvrt@vp:	
  4512                           
  4513                           ; 1 bytes @ 0x3E
  4514  005E                     	ds	1
  4515  005F                     vfpfcnvrt@fp:	
  4516                           
  4517                           ; 1 bytes @ 0x3F
  4518  005F                     	ds	1
  4519  0060                     ??_main:	
  4520                           
  4521                           	psect	maintext
  4522  0D38                     __pmaintext:	
  4523                           ; 1 bytes @ 0x40
  4524 ;;
  4525 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  4526 ;;
  4527 ;; *************** function _main *****************
  4528 ;; Defined at:
  4529 ;;		line 40 in file "main.c"
  4530 ;; Parameters:    Size  Location     Type
  4531 ;;		None
  4532 ;; Auto vars:     Size  Location     Type
  4533 ;;		None
  4534 ;; Return value:  Size  Location     Type
  4535 ;;                  1    wreg      void 
  4536 ;; Registers used:
  4537 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4538 ;; Tracked objects:
  4539 ;;		On entry : B1F/0
  4540 ;;		On exit  : 0/0
  4541 ;;		Unchanged: 0/0
  4542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4547 ;;Total ram usage:        0 bytes
  4548 ;; Hardware stack levels required when called:   14
  4549 ;; This function calls:
  4550 ;;		_IOCCF7_SetInterruptHandler
  4551 ;;		_SYSTEM_Initialize
  4552 ;;		_TMR0_SetInterruptHandler
  4553 ;;		___fldiv
  4554 ;;		___flge
  4555 ;;		___flmul
  4556 ;;		___flsub
  4557 ;;		___fltol
  4558 ;;		___xxtofl
  4559 ;;		_printf
  4560 ;;		_resetCursor
  4561 ;;		_setCursor
  4562 ;; This function is called by:
  4563 ;;		Startup code after reset
  4564 ;; This function uses a non-reentrant model
  4565 ;;
  4566                           
  4567                           
  4568                           ;psect for function _main
  4569  0D38                     _main:	
  4570                           
  4571                           ;main.c: 43:     SYSTEM_Initialize();
  4572                           
  4573                           ;incstack = 0
  4574                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4575  0D38  3196  2658  318D   	fcall	_SYSTEM_Initialize
  4576                           
  4577                           ;main.c: 46:     TMR0_SetInterruptHandler( timerISR ) ;
  4578  0D3B  3000               	movlw	low _timerISR
  4579  0D3C  0020               	movlb	0	; select bank0
  4580  0D3D  00A8               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  4581  0D3E  3008               	movlw	high _timerISR
  4582  0D3F  00A9               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  4583  0D40  3196  2633  318D   	fcall	_TMR0_SetInterruptHandler
  4584                           
  4585                           ;main.c: 47:     IOCCF7_SetInterruptHandler( speedCalc ) ;
  4586  0D43  3097               	movlw	low _speedCalc
  4587  0D44  0020               	movlb	0	; select bank0
  4588  0D45  00A8               	movwf	IOCCF7_SetInterruptHandler@InterruptHandler
  4589  0D46  3017               	movlw	high _speedCalc
  4590  0D47  00A9               	movwf	IOCCF7_SetInterruptHandler@InterruptHandler+1
  4591  0D48  3196  262A  318D   	fcall	_IOCCF7_SetInterruptHandler
  4592                           
  4593                           ;main.c: 50:     resetCursor() ;
  4594  0D4B  3196  2607  318D   	fcall	_resetCursor
  4595                           
  4596                           ;main.c: 53:     (INTCONbits.GIE = 1);
  4597  0D4E  178B               	bsf	11,7	;volatile
  4598                           
  4599                           ;main.c: 54:     (INTCONbits.PEIE = 1);
  4600  0D4F  170B               	bsf	11,6	;volatile
  4601  0D50                     l4249:	
  4602                           
  4603                           ;main.c: 58:         hallCount = 1 ;
  4604  0D50  303F               	movlw	63
  4605  0D51  0020               	movlb	0	; select bank0
  4606  0D52  00E3               	movwf	_hallCount+3	;volatile
  4607  0D53  3080               	movlw	128
  4608  0D54  00E2               	movwf	_hallCount+2	;volatile
  4609  0D55  3000               	movlw	0
  4610  0D56  00E1               	movwf	_hallCount+1	;volatile
  4611  0D57  3000               	movlw	0
  4612  0D58  00E0               	movwf	_hallCount	;volatile
  4613                           
  4614                           ;main.c: 59:         startTime = counter ;
  4615  0D59  0021               	movlb	1	; select bank1
  4616  0D5A  0843               	movf	(_counter+3)^(0+128),w	;volatile
  4617  0D5B  0020               	movlb	0	; select bank0
  4618  0D5C  00AB               	movwf	___xxtofl@val+3
  4619  0D5D  0021               	movlb	1	; select bank1
  4620  0D5E  0842               	movf	(_counter+2)^(0+128),w	;volatile
  4621  0D5F  0020               	movlb	0	; select bank0
  4622  0D60  00AA               	movwf	___xxtofl@val+2
  4623  0D61  0021               	movlb	1	; select bank1
  4624  0D62  0841               	movf	(_counter+1)^(0+128),w	;volatile
  4625  0D63  0020               	movlb	0	; select bank0
  4626  0D64  00A9               	movwf	___xxtofl@val+1
  4627  0D65  0021               	movlb	1	; select bank1
  4628  0D66  0840               	movf	_counter^(0+128),w	;volatile
  4629  0D67  0020               	movlb	0	; select bank0
  4630  0D68  00A8               	movwf	___xxtofl@val
  4631  0D69  3001               	movlw	1
  4632  0D6A  3189  21C9  318D   	fcall	___xxtofl
  4633  0D6D  0020               	movlb	0	; select bank0
  4634  0D6E  082B               	movf	?___xxtofl+3,w
  4635  0D6F  0021               	movlb	1	; select bank1
  4636  0D70  00B3               	movwf	(_startTime+3)^(0+128)	;volatile
  4637  0D71  0020               	movlb	0	; select bank0
  4638  0D72  082A               	movf	?___xxtofl+2,w
  4639  0D73  0021               	movlb	1	; select bank1
  4640  0D74  00B2               	movwf	(_startTime+2)^(0+128)	;volatile
  4641  0D75  0020               	movlb	0	; select bank0
  4642  0D76  0829               	movf	?___xxtofl+1,w
  4643  0D77  0021               	movlb	1	; select bank1
  4644  0D78  00B1               	movwf	(_startTime+1)^(0+128)	;volatile
  4645  0D79  0020               	movlb	0	; select bank0
  4646  0D7A  0828               	movf	?___xxtofl,w
  4647  0D7B  0021               	movlb	1	; select bank1
  4648  0D7C  00B0               	movwf	_startTime^(0+128)	;volatile
  4649                           
  4650                           ;main.c: 60:         setCursor(1,0);
  4651  0D7D  0020               	movlb	0	; select bank0
  4652  0D7E  01A9               	clrf	setCursor@b
  4653  0D7F  3001               	movlw	1
  4654  0D80  3188  2052  318D   	fcall	_setCursor
  4655                           
  4656                           ;main.c: 63:         if ( hallCount >= 1000 ){
  4657  0D83  0020               	movlb	0	; select bank0
  4658  0D84  0863               	movf	_hallCount+3,w	;volatile
  4659  0D85  00AB               	movwf	___flge@ff1+3
  4660  0D86  0862               	movf	_hallCount+2,w	;volatile
  4661  0D87  00AA               	movwf	___flge@ff1+2
  4662  0D88  0861               	movf	_hallCount+1,w	;volatile
  4663  0D89  00A9               	movwf	___flge@ff1+1
  4664  0D8A  0860               	movf	_hallCount,w	;volatile
  4665  0D8B  00A8               	movwf	___flge@ff1
  4666  0D8C  3044               	movlw	68
  4667  0D8D  00AF               	movwf	___flge@ff2+3
  4668  0D8E  307A               	movlw	122
  4669  0D8F  00AE               	movwf	___flge@ff2+2
  4670  0D90  3000               	movlw	0
  4671  0D91  00AD               	movwf	___flge@ff2+1
  4672  0D92  3000               	movlw	0
  4673  0D93  00AC               	movwf	___flge@ff2
  4674  0D94  3189  214D  318D   	fcall	___flge
  4675  0D97  1C03               	btfss	3,0
  4676  0D98  2DC5               	goto	l4261
  4677                           
  4678                           ;main.c: 64:             endTime = counter ;
  4679  0D99  0021               	movlb	1	; select bank1
  4680  0D9A  0843               	movf	(_counter+3)^(0+128),w	;volatile
  4681  0D9B  0020               	movlb	0	; select bank0
  4682  0D9C  00AB               	movwf	___xxtofl@val+3
  4683  0D9D  0021               	movlb	1	; select bank1
  4684  0D9E  0842               	movf	(_counter+2)^(0+128),w	;volatile
  4685  0D9F  0020               	movlb	0	; select bank0
  4686  0DA0  00AA               	movwf	___xxtofl@val+2
  4687  0DA1  0021               	movlb	1	; select bank1
  4688  0DA2  0841               	movf	(_counter+1)^(0+128),w	;volatile
  4689  0DA3  0020               	movlb	0	; select bank0
  4690  0DA4  00A9               	movwf	___xxtofl@val+1
  4691  0DA5  0021               	movlb	1	; select bank1
  4692  0DA6  0840               	movf	_counter^(0+128),w	;volatile
  4693  0DA7  0020               	movlb	0	; select bank0
  4694  0DA8  00A8               	movwf	___xxtofl@val
  4695  0DA9  3001               	movlw	1
  4696  0DAA  3189  21C9  318D   	fcall	___xxtofl
  4697  0DAD  0020               	movlb	0	; select bank0
  4698  0DAE  082B               	movf	?___xxtofl+3,w
  4699  0DAF  0021               	movlb	1	; select bank1
  4700  0DB0  00AF               	movwf	(_endTime+3)^(0+128)	;volatile
  4701  0DB1  0020               	movlb	0	; select bank0
  4702  0DB2  082A               	movf	?___xxtofl+2,w
  4703  0DB3  0021               	movlb	1	; select bank1
  4704  0DB4  00AE               	movwf	(_endTime+2)^(0+128)	;volatile
  4705  0DB5  0020               	movlb	0	; select bank0
  4706  0DB6  0829               	movf	?___xxtofl+1,w
  4707  0DB7  0021               	movlb	1	; select bank1
  4708  0DB8  00AD               	movwf	(_endTime+1)^(0+128)	;volatile
  4709  0DB9  0020               	movlb	0	; select bank0
  4710  0DBA  0828               	movf	?___xxtofl,w
  4711  0DBB  0021               	movlb	1	; select bank1
  4712  0DBC  00AC               	movwf	_endTime^(0+128)	;volatile
  4713                           
  4714                           ;main.c: 65:             counter = 0 ;
  4715  0DBD  3000               	movlw	0
  4716  0DBE  00C3               	movwf	(_counter+3)^(0+128)	;volatile
  4717  0DBF  3000               	movlw	0
  4718  0DC0  00C2               	movwf	(_counter+2)^(0+128)	;volatile
  4719  0DC1  3000               	movlw	0
  4720  0DC2  00C1               	movwf	(_counter+1)^(0+128)	;volatile
  4721  0DC3  3000               	movlw	0
  4722  0DC4  00C0               	movwf	_counter^(0+128)	;volatile
  4723  0DC5                     l4261:	
  4724                           
  4725                           ;main.c: 67:         timePassed = (endTime - startTime) / 1000 ;
  4726  0DC5  3044               	movlw	68
  4727  0DC6  0020               	movlb	0	; select bank0
  4728  0DC7  00C7               	movwf	___fldiv@a+3
  4729  0DC8  307A               	movlw	122
  4730  0DC9  00C6               	movwf	___fldiv@a+2
  4731  0DCA  3000               	movlw	0
  4732  0DCB  00C5               	movwf	___fldiv@a+1
  4733  0DCC  3000               	movlw	0
  4734  0DCD  00C4               	movwf	___fldiv@a
  4735  0DCE  0021               	movlb	1	; select bank1
  4736  0DCF  0833               	movf	(_startTime+3)^(0+128),w	;volatile
  4737  0DD0  0020               	movlb	0	; select bank0
  4738  0DD1  00BF               	movwf	___flsub@a+3
  4739  0DD2  0021               	movlb	1	; select bank1
  4740  0DD3  0832               	movf	(_startTime+2)^(0+128),w	;volatile
  4741  0DD4  0020               	movlb	0	; select bank0
  4742  0DD5  00BE               	movwf	___flsub@a+2
  4743  0DD6  0021               	movlb	1	; select bank1
  4744  0DD7  0831               	movf	(_startTime+1)^(0+128),w	;volatile
  4745  0DD8  0020               	movlb	0	; select bank0
  4746  0DD9  00BD               	movwf	___flsub@a+1
  4747  0DDA  0021               	movlb	1	; select bank1
  4748  0DDB  0830               	movf	_startTime^(0+128),w	;volatile
  4749  0DDC  0020               	movlb	0	; select bank0
  4750  0DDD  00BC               	movwf	___flsub@a
  4751  0DDE  0021               	movlb	1	; select bank1
  4752  0DDF  082F               	movf	(_endTime+3)^(0+128),w	;volatile
  4753  0DE0  0020               	movlb	0	; select bank0
  4754  0DE1  00C3               	movwf	___flsub@b+3
  4755  0DE2  0021               	movlb	1	; select bank1
  4756  0DE3  082E               	movf	(_endTime+2)^(0+128),w	;volatile
  4757  0DE4  0020               	movlb	0	; select bank0
  4758  0DE5  00C2               	movwf	___flsub@b+2
  4759  0DE6  0021               	movlb	1	; select bank1
  4760  0DE7  082D               	movf	(_endTime+1)^(0+128),w	;volatile
  4761  0DE8  0020               	movlb	0	; select bank0
  4762  0DE9  00C1               	movwf	___flsub@b+1
  4763  0DEA  0021               	movlb	1	; select bank1
  4764  0DEB  082C               	movf	_endTime^(0+128),w	;volatile
  4765  0DEC  0020               	movlb	0	; select bank0
  4766  0DED  00C0               	movwf	___flsub@b
  4767  0DEE  3196  26DE  318D   	fcall	___flsub
  4768  0DF1  0020               	movlb	0	; select bank0
  4769  0DF2  083F               	movf	?___flsub+3,w
  4770  0DF3  00CB               	movwf	___fldiv@b+3
  4771  0DF4  083E               	movf	?___flsub+2,w
  4772  0DF5  00CA               	movwf	___fldiv@b+2
  4773  0DF6  083D               	movf	?___flsub+1,w
  4774  0DF7  00C9               	movwf	___fldiv@b+1
  4775  0DF8  083C               	movf	?___flsub,w
  4776  0DF9  00C8               	movwf	___fldiv@b
  4777  0DFA  318E  2686  318D   	fcall	___fldiv
  4778  0DFD  0020               	movlb	0	; select bank0
  4779  0DFE  0847               	movf	?___fldiv+3,w
  4780  0DFF  0021               	movlb	1	; select bank1
  4781  0E00  00AB               	movwf	(_timePassed+3)^(0+128)	;volatile
  4782  0E01  0020               	movlb	0	; select bank0
  4783  0E02  0846               	movf	?___fldiv+2,w
  4784  0E03  0021               	movlb	1	; select bank1
  4785  0E04  00AA               	movwf	(_timePassed+2)^(0+128)	;volatile
  4786  0E05  0020               	movlb	0	; select bank0
  4787  0E06  0845               	movf	?___fldiv+1,w
  4788  0E07  0021               	movlb	1	; select bank1
  4789  0E08  00A9               	movwf	(_timePassed+1)^(0+128)	;volatile
  4790  0E09  0020               	movlb	0	; select bank0
  4791  0E0A  0844               	movf	?___fldiv,w
  4792  0E0B  0021               	movlb	1	; select bank1
  4793  0E0C  00A8               	movwf	_timePassed^(0+128)	;volatile
  4794                           
  4795                           ;main.c: 68:         rpmVal = ( hallCount / timePassed ) * 60 ;
  4796  0E0D  3042               	movlw	66
  4797  0E0E  00D1               	movwf	(___flmul@b+3)^(0+128)
  4798  0E0F  3070               	movlw	112
  4799  0E10  00D0               	movwf	(___flmul@b+2)^(0+128)
  4800  0E11  3000               	movlw	0
  4801  0E12  00CF               	movwf	(___flmul@b+1)^(0+128)
  4802  0E13  3000               	movlw	0
  4803  0E14  00CE               	movwf	___flmul@b^(0+128)
  4804  0E15  082B               	movf	(_timePassed+3)^(0+128),w	;volatile
  4805  0E16  0020               	movlb	0	; select bank0
  4806  0E17  00C7               	movwf	___fldiv@a+3
  4807  0E18  0021               	movlb	1	; select bank1
  4808  0E19  082A               	movf	(_timePassed+2)^(0+128),w	;volatile
  4809  0E1A  0020               	movlb	0	; select bank0
  4810  0E1B  00C6               	movwf	___fldiv@a+2
  4811  0E1C  0021               	movlb	1	; select bank1
  4812  0E1D  0829               	movf	(_timePassed+1)^(0+128),w	;volatile
  4813  0E1E  0020               	movlb	0	; select bank0
  4814  0E1F  00C5               	movwf	___fldiv@a+1
  4815  0E20  0021               	movlb	1	; select bank1
  4816  0E21  0828               	movf	_timePassed^(0+128),w	;volatile
  4817  0E22  0020               	movlb	0	; select bank0
  4818  0E23  00C4               	movwf	___fldiv@a
  4819  0E24  0863               	movf	_hallCount+3,w	;volatile
  4820  0E25  00CB               	movwf	___fldiv@b+3
  4821  0E26  0862               	movf	_hallCount+2,w	;volatile
  4822  0E27  00CA               	movwf	___fldiv@b+2
  4823  0E28  0861               	movf	_hallCount+1,w	;volatile
  4824  0E29  00C9               	movwf	___fldiv@b+1
  4825  0E2A  0860               	movf	_hallCount,w	;volatile
  4826  0E2B  00C8               	movwf	___fldiv@b
  4827  0E2C  318E  2686  318D   	fcall	___fldiv
  4828  0E2F  0020               	movlb	0	; select bank0
  4829  0E30  0847               	movf	?___fldiv+3,w
  4830  0E31  0021               	movlb	1	; select bank1
  4831  0E32  00D5               	movwf	(___flmul@a+3)^(0+128)
  4832  0E33  0020               	movlb	0	; select bank0
  4833  0E34  0846               	movf	?___fldiv+2,w
  4834  0E35  0021               	movlb	1	; select bank1
  4835  0E36  00D4               	movwf	(___flmul@a+2)^(0+128)
  4836  0E37  0020               	movlb	0	; select bank0
  4837  0E38  0845               	movf	?___fldiv+1,w
  4838  0E39  0021               	movlb	1	; select bank1
  4839  0E3A  00D3               	movwf	(___flmul@a+1)^(0+128)
  4840  0E3B  0020               	movlb	0	; select bank0
  4841  0E3C  0844               	movf	?___fldiv,w
  4842  0E3D  0021               	movlb	1	; select bank1
  4843  0E3E  00D2               	movwf	___flmul@a^(0+128)
  4844  0E3F  3180  2033  318D   	fcall	___flmul
  4845  0E42  0021               	movlb	1	; select bank1
  4846  0E43  0851               	movf	(?___flmul+3)^(0+128),w
  4847  0E44  00A7               	movwf	(_rpmVal+3)^(0+128)	;volatile
  4848  0E45  0850               	movf	(?___flmul+2)^(0+128),w
  4849  0E46  00A6               	movwf	(_rpmVal+2)^(0+128)	;volatile
  4850  0E47  084F               	movf	(?___flmul+1)^(0+128),w
  4851  0E48  00A5               	movwf	(_rpmVal+1)^(0+128)	;volatile
  4852  0E49  084E               	movf	?___flmul^(0+128),w
  4853  0E4A  00A4               	movwf	_rpmVal^(0+128)	;volatile
  4854                           
  4855                           ;main.c: 69:         rpmValInt = rpmVal ;
  4856  0E4B  0827               	movf	(_rpmVal+3)^(0+128),w	;volatile
  4857  0E4C  0020               	movlb	0	; select bank0
  4858  0E4D  00AB               	movwf	___fltol@f1+3
  4859  0E4E  0021               	movlb	1	; select bank1
  4860  0E4F  0826               	movf	(_rpmVal+2)^(0+128),w	;volatile
  4861  0E50  0020               	movlb	0	; select bank0
  4862  0E51  00AA               	movwf	___fltol@f1+2
  4863  0E52  0021               	movlb	1	; select bank1
  4864  0E53  0825               	movf	(_rpmVal+1)^(0+128),w	;volatile
  4865  0E54  0020               	movlb	0	; select bank0
  4866  0E55  00A9               	movwf	___fltol@f1+1
  4867  0E56  0021               	movlb	1	; select bank1
  4868  0E57  0824               	movf	_rpmVal^(0+128),w	;volatile
  4869  0E58  0020               	movlb	0	; select bank0
  4870  0E59  00A8               	movwf	___fltol@f1
  4871  0E5A  3188  20E7  318D   	fcall	___fltol
  4872  0E5D  0020               	movlb	0	; select bank0
  4873  0E5E  082B               	movf	?___fltol+3,w
  4874  0E5F  0021               	movlb	1	; select bank1
  4875  0E60  00A3               	movwf	(_rpmValInt+3)^(0+128)	;volatile
  4876  0E61  0020               	movlb	0	; select bank0
  4877  0E62  082A               	movf	?___fltol+2,w
  4878  0E63  0021               	movlb	1	; select bank1
  4879  0E64  00A2               	movwf	(_rpmValInt+2)^(0+128)	;volatile
  4880  0E65  0020               	movlb	0	; select bank0
  4881  0E66  0829               	movf	?___fltol+1,w
  4882  0E67  0021               	movlb	1	; select bank1
  4883  0E68  00A1               	movwf	(_rpmValInt+1)^(0+128)	;volatile
  4884  0E69  0020               	movlb	0	; select bank0
  4885  0E6A  0828               	movf	?___fltol,w
  4886  0E6B  0021               	movlb	1	; select bank1
  4887  0E6C  00A0               	movwf	_rpmValInt^(0+128)	;volatile
  4888                           
  4889                           ;main.c: 70:         printf("%d", rpmValInt) ;
  4890  0E6D  3023               	movlw	low (STR_1| (0+32768))
  4891  0E6E  0022               	movlb	2	; select bank2
  4892  0E6F  00CC               	movwf	printf@fmt^(0+256)
  4893  0E70  3098               	movlw	high (STR_1| (0+32768))
  4894  0E71  00CD               	movwf	(printf@fmt^(0+256)+1)
  4895  0E72  0021               	movlb	1	; select bank1
  4896  0E73  0823               	movf	(_rpmValInt+3)^(0+128),w	;volatile
  4897  0E74  0022               	movlb	2	; select bank2
  4898  0E75  00D1               	movwf	((?_printf+3)^(0+256)+2)
  4899  0E76  0021               	movlb	1	; select bank1
  4900  0E77  0822               	movf	(_rpmValInt+2)^(0+128),w	;volatile
  4901  0E78  0022               	movlb	2	; select bank2
  4902  0E79  00D0               	movwf	((?_printf+2)^(0+256)+2)
  4903  0E7A  0021               	movlb	1	; select bank1
  4904  0E7B  0821               	movf	(_rpmValInt+1)^(0+128),w	;volatile
  4905  0E7C  0022               	movlb	2	; select bank2
  4906  0E7D  00CF               	movwf	((?_printf+1)^(0+256)+2)
  4907  0E7E  0021               	movlb	1	; select bank1
  4908  0E7F  0820               	movf	_rpmValInt^(0+128),w	;volatile
  4909  0E80  0022               	movlb	2	; select bank2
  4910  0E81  00CE               	movwf	(?_printf^(0+256)+2)
  4911  0E82  3196  267C  318D   	fcall	_printf
  4912  0E85  2D50               	goto	l4249
  4913  0E86                     __end_of_main:	
  4914                           
  4915                           	psect	text1
  4916  0852                     __ptext1:	
  4917 ;; *************** function _setCursor *****************
  4918 ;; Defined at:
  4919 ;;		line 67 in file "displayOptions.c"
  4920 ;; Parameters:    Size  Location     Type
  4921 ;;  a               1    wreg     unsigned char 
  4922 ;;  b               1    9[BANK0 ] unsigned char 
  4923 ;; Auto vars:     Size  Location     Type
  4924 ;;  a               1   12[BANK0 ] unsigned char 
  4925 ;; Return value:  Size  Location     Type
  4926 ;;                  1    wreg      void 
  4927 ;; Registers used:
  4928 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4929 ;; Tracked objects:
  4930 ;;		On entry : 0/0
  4931 ;;		On exit  : 0/0
  4932 ;;		Unchanged: 0/0
  4933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4934 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4935 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4936 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4937 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4938 ;;Total ram usage:        4 bytes
  4939 ;; Hardware stack levels used:    1
  4940 ;; Hardware stack levels required when called:    6
  4941 ;; This function calls:
  4942 ;;		_EUSART_Write
  4943 ;; This function is called by:
  4944 ;;		_main
  4945 ;; This function uses a non-reentrant model
  4946 ;;
  4947                           
  4948                           
  4949                           ;psect for function _setCursor
  4950  0852                     _setCursor:	
  4951                           
  4952                           ;incstack = 0
  4953                           ; Regs used in _setCursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4954                           ;setCursor@a stored from wreg
  4955  0852  0020               	movlb	0	; select bank0
  4956  0853  00AC               	movwf	setCursor@a
  4957                           
  4958                           ;displayOptions.c: 68:     switch ( a ){
  4959  0854  287D               	goto	l4071
  4960  0855                     l4061:	
  4961                           
  4962                           ;displayOptions.c: 70:         {;displayOptions.c: 71:             EUSART_Write( 254 );
  4963  0855  30FE               	movlw	254
  4964  0856  3195  25FF  3188   	fcall	_EUSART_Write
  4965                           
  4966                           ;displayOptions.c: 72:             EUSART_Write(128 + 0 + b) ;
  4967  0859  0020               	movlb	0	; select bank0
  4968  085A  0829               	movf	setCursor@b,w
  4969  085B  3E80               	addlw	128
  4970  085C  3195  25FF         	fcall	_EUSART_Write
  4971                           
  4972                           ;displayOptions.c: 73:             break ;
  4973  085E  0008               	return
  4974  085F                     l4063:	
  4975                           
  4976                           ;displayOptions.c: 76:         {;displayOptions.c: 77:            EUSART_Write( 254 );
  4977  085F  30FE               	movlw	254
  4978  0860  3195  25FF  3188   	fcall	_EUSART_Write
  4979                           
  4980                           ;displayOptions.c: 78:            EUSART_Write(128 + 64 + b) ;
  4981  0863  0020               	movlb	0	; select bank0
  4982  0864  0829               	movf	setCursor@b,w
  4983  0865  3EC0               	addlw	192
  4984  0866  3195  25FF         	fcall	_EUSART_Write
  4985                           
  4986                           ;displayOptions.c: 79:            break ;
  4987  0868  0008               	return
  4988  0869                     l4065:	
  4989                           
  4990                           ;displayOptions.c: 82:         {;displayOptions.c: 83:             EUSART_Write( 254 );
  4991  0869  30FE               	movlw	254
  4992  086A  3195  25FF  3188   	fcall	_EUSART_Write
  4993                           
  4994                           ;displayOptions.c: 84:             EUSART_Write(128 + 20 + b) ;
  4995  086D  0020               	movlb	0	; select bank0
  4996  086E  0829               	movf	setCursor@b,w
  4997  086F  3E94               	addlw	148
  4998  0870  3195  25FF         	fcall	_EUSART_Write
  4999                           
  5000                           ;displayOptions.c: 85:             break ;
  5001  0872  0008               	return
  5002  0873                     l4067:	
  5003                           
  5004                           ;displayOptions.c: 88:         {;displayOptions.c: 89:             EUSART_Write( 254 );
  5005  0873  30FE               	movlw	254
  5006  0874  3195  25FF  3188   	fcall	_EUSART_Write
  5007                           
  5008                           ;displayOptions.c: 90:             EUSART_Write(128 + 84 + b) ;
  5009  0877  0020               	movlb	0	; select bank0
  5010  0878  0829               	movf	setCursor@b,w
  5011  0879  3ED4               	addlw	212
  5012  087A  3195  25FF         	fcall	_EUSART_Write
  5013                           
  5014                           ;displayOptions.c: 91:             break ;
  5015  087C  0008               	return
  5016  087D                     l4071:	
  5017  087D  082C               	movf	setCursor@a,w
  5018  087E  00AA               	movwf	??_setCursor
  5019  087F  01AB               	clrf	??_setCursor+1
  5020                           
  5021                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5022                           ; Switch size 1, requested type "simple"
  5023                           ; Number of cases is 1, Range of values is 0 to 0
  5024                           ; switch strategies available:
  5025                           ; Name         Instructions Cycles
  5026                           ; simple_byte            4     3 (average)
  5027                           ; direct_byte            8     6 (fixed)
  5028                           ; jumptable            260     6 (fixed)
  5029                           ;	Chosen strategy is simple_byte
  5030  0880  082B               	movf	??_setCursor+1,w
  5031  0881  3A00               	xorlw	0	; case 0
  5032  0882  1903               	skipnz
  5033  0883  2885               	goto	l4311
  5034  0884  2893               	goto	l363
  5035  0885                     l4311:	
  5036                           
  5037                           ; Switch size 1, requested type "simple"
  5038                           ; Number of cases is 4, Range of values is 1 to 4
  5039                           ; switch strategies available:
  5040                           ; Name         Instructions Cycles
  5041                           ; simple_byte           13     7 (average)
  5042                           ; direct_byte           17     9 (fixed)
  5043                           ; jumptable            263     9 (fixed)
  5044                           ;	Chosen strategy is simple_byte
  5045  0885  082A               	movf	??_setCursor,w
  5046  0886  3A01               	xorlw	1	; case 1
  5047  0887  1903               	skipnz
  5048  0888  2855               	goto	l4061
  5049  0889  3A03               	xorlw	3	; case 2
  5050  088A  1903               	skipnz
  5051  088B  285F               	goto	l4063
  5052  088C  3A01               	xorlw	1	; case 3
  5053  088D  1903               	skipnz
  5054  088E  2869               	goto	l4065
  5055  088F  3A07               	xorlw	7	; case 4
  5056  0890  1903               	skipnz
  5057  0891  2873               	goto	l4067
  5058  0892  2893               	goto	l363
  5059  0893                     l363:	
  5060  0893  0008               	return
  5061  0894                     __end_of_setCursor:	
  5062                           
  5063                           	psect	text2
  5064  1607                     __ptext2:	
  5065 ;; *************** function _resetCursor *****************
  5066 ;; Defined at:
  5067 ;;		line 54 in file "displayOptions.c"
  5068 ;; Parameters:    Size  Location     Type
  5069 ;;		None
  5070 ;; Auto vars:     Size  Location     Type
  5071 ;;		None
  5072 ;; Return value:  Size  Location     Type
  5073 ;;                  1    wreg      void 
  5074 ;; Registers used:
  5075 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5076 ;; Tracked objects:
  5077 ;;		On entry : 0/0
  5078 ;;		On exit  : 0/0
  5079 ;;		Unchanged: 0/0
  5080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5085 ;;Total ram usage:        0 bytes
  5086 ;; Hardware stack levels used:    1
  5087 ;; Hardware stack levels required when called:   10
  5088 ;; This function calls:
  5089 ;;		_puts
  5090 ;; This function is called by:
  5091 ;;		_main
  5092 ;; This function uses a non-reentrant model
  5093 ;;
  5094                           
  5095                           
  5096                           ;psect for function _resetCursor
  5097  1607                     _resetCursor:	
  5098                           
  5099                           ;displayOptions.c: 55:     puts("|-");
  5100                           
  5101                           ;incstack = 0
  5102                           ; Regs used in _resetCursor: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5103  1607  3020               	movlw	low (STR_2| (0+32768))
  5104  1608  0020               	movlb	0	; select bank0
  5105  1609  00BB               	movwf	puts@s
  5106  160A  3098               	movlw	high (STR_2| (0+32768))
  5107  160B  00BC               	movwf	puts@s+1
  5108  160C  3196  26C3         	fcall	_puts
  5109  160E  0008               	return
  5110  160F                     __end_of_resetCursor:	
  5111                           
  5112                           	psect	text3
  5113  16C3                     __ptext3:	
  5114 ;; *************** function _puts *****************
  5115 ;; Defined at:
  5116 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\puts.c"
  5117 ;; Parameters:    Size  Location     Type
  5118 ;;  s               2   27[BANK0 ] PTR const unsigned char 
  5119 ;;		 -> STR_2(3), 
  5120 ;; Auto vars:     Size  Location     Type
  5121 ;;  r               2    0        int 
  5122 ;; Return value:  Size  Location     Type
  5123 ;;                  2   27[BANK0 ] int 
  5124 ;; Registers used:
  5125 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5126 ;; Tracked objects:
  5127 ;;		On entry : 0/0
  5128 ;;		On exit  : 0/0
  5129 ;;		Unchanged: 0/0
  5130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5131 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5132 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5134 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5135 ;;Total ram usage:        5 bytes
  5136 ;; Hardware stack levels used:    1
  5137 ;; Hardware stack levels required when called:    9
  5138 ;; This function calls:
  5139 ;;		_fputc
  5140 ;;		_fputs
  5141 ;; This function is called by:
  5142 ;;		_resetCursor
  5143 ;;		_writeString
  5144 ;; This function uses a non-reentrant model
  5145 ;;
  5146                           
  5147                           
  5148                           ;psect for function _puts
  5149  16C3                     _puts:	
  5150                           
  5151                           ;incstack = 0
  5152                           ; Regs used in _puts: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5153  16C3  0020               	movlb	0	; select bank0
  5154  16C4  01BF               	clrf	_puts$1101
  5155  16C5  0ABF               	incf	_puts$1101,f
  5156  16C6  083C               	movf	puts@s+1,w
  5157  16C7  00B3               	movwf	fputs@s+1
  5158  16C8  083B               	movf	puts@s,w
  5159  16C9  00B2               	movwf	fputs@s
  5160  16CA  01B4               	clrf	fputs@fp
  5161  16CB  3197  2741  3196   	fcall	_fputs
  5162  16CE  0020               	movlb	0	; select bank0
  5163  16CF  1BB3               	btfsc	?_fputs+1,7
  5164  16D0  0008               	return
  5165  16D1  300A               	movlw	10
  5166  16D2  00AA               	movwf	fputc@c
  5167  16D3  3000               	movlw	0
  5168  16D4  00AB               	movwf	fputc@c+1
  5169  16D5  01AC               	clrf	fputc@fp
  5170  16D6  3188  2012  3196   	fcall	_fputc
  5171  16D9  0020               	movlb	0	; select bank0
  5172  16DA  1BAB               	btfsc	?_fputc+1,7
  5173  16DB  0008               	return
  5174  16DC  01BF               	clrf	_puts$1101
  5175  16DD  0008               	return
  5176  16DE                     __end_of_puts:	
  5177                           
  5178                           	psect	text4
  5179  167C                     __ptext4:	
  5180 ;; *************** function _printf *****************
  5181 ;; Defined at:
  5182 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  5183 ;; Parameters:    Size  Location     Type
  5184 ;;  fmt             2    0[BANK2 ] PTR const unsigned char 
  5185 ;;		 -> STR_1(3), 
  5186 ;; Auto vars:     Size  Location     Type
  5187 ;;  ret             2    0        int 
  5188 ;;  ap              1    8[BANK2 ] PTR void [1]
  5189 ;;		 -> ?_printf(2), 
  5190 ;; Return value:  Size  Location     Type
  5191 ;;                  2    0[BANK2 ] int 
  5192 ;; Registers used:
  5193 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5194 ;; Tracked objects:
  5195 ;;		On entry : 0/0
  5196 ;;		On exit  : 0/0
  5197 ;;		Unchanged: 0/0
  5198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5199 ;;      Params:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0
  5200 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  5201 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5202 ;;      Totals:         0       0       1       9       0       0       0       0       0       0       0       0       
      +0       0
  5203 ;;Total ram usage:       10 bytes
  5204 ;; Hardware stack levels used:    1
  5205 ;; Hardware stack levels required when called:   13
  5206 ;; This function calls:
  5207 ;;		_vfprintf
  5208 ;; This function is called by:
  5209 ;;		_main
  5210 ;;		_writePrintf
  5211 ;; This function uses a non-reentrant model
  5212 ;;
  5213                           
  5214                           
  5215                           ;psect for function _printf
  5216  167C                     _printf:	
  5217                           
  5218                           ;incstack = 0
  5219                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5220  167C  304E               	movlw	(low ((?_printf| (0+256)+2)))& (0+255)
  5221  167D  0021               	movlb	1	; select bank1
  5222  167E  00E9               	movwf	??_printf^(0+128)
  5223  167F  0869               	movf	??_printf^(0+128),w
  5224  1680  0022               	movlb	2	; select bank2
  5225  1681  00D4               	movwf	printf@ap^(0+256)
  5226  1682  084D               	movf	(printf@fmt+1)^(0+256),w
  5227  1683  0021               	movlb	1	; select bank1
  5228  1684  00E2               	movwf	(vfprintf@fmt+1)^(0+128)
  5229  1685  0022               	movlb	2	; select bank2
  5230  1686  084C               	movf	printf@fmt^(0+256),w
  5231  1687  0021               	movlb	1	; select bank1
  5232  1688  00E1               	movwf	vfprintf@fmt^(0+128)
  5233  1689  3054               	movlw	(low (printf@ap| (0+256)))& (0+255)
  5234  168A  00E9               	movwf	??_printf^(0+128)
  5235  168B  0869               	movf	??_printf^(0+128),w
  5236  168C  00E3               	movwf	vfprintf@ap^(0+128)
  5237  168D  3000               	movlw	0
  5238  168E  3197  276A         	fcall	_vfprintf
  5239  1690  0008               	return
  5240  1691                     __end_of_printf:	
  5241                           
  5242                           	psect	text5
  5243  176A                     __ptext5:	
  5244 ;; *************** function _vfprintf *****************
  5245 ;; Defined at:
  5246 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5247 ;; Parameters:    Size  Location     Type
  5248 ;;  fp              1    wreg     PTR struct _IO_FILE
  5249 ;;		 -> NULL(0), 
  5250 ;;  fmt             2   19[BANK1 ] PTR const unsigned char 
  5251 ;;		 -> STR_1(3), 
  5252 ;;  ap              1   21[BANK1 ] PTR PTR void 
  5253 ;;		 -> printf@ap(1), 
  5254 ;; Auto vars:     Size  Location     Type
  5255 ;;  fp              1   24[BANK1 ] PTR struct _IO_FILE
  5256 ;;		 -> NULL(0), 
  5257 ;;  cfmt            2   25[BANK1 ] PTR unsigned char 
  5258 ;;		 -> STR_1(3), 
  5259 ;; Return value:  Size  Location     Type
  5260 ;;                  2   19[BANK1 ] int 
  5261 ;; Registers used:
  5262 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5263 ;; Tracked objects:
  5264 ;;		On entry : 0/0
  5265 ;;		On exit  : 0/0
  5266 ;;		Unchanged: 0/0
  5267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5268 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5269 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5270 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5271 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  5272 ;;Total ram usage:        8 bytes
  5273 ;; Hardware stack levels used:    1
  5274 ;; Hardware stack levels required when called:   12
  5275 ;; This function calls:
  5276 ;;		_vfpfcnvrt
  5277 ;; This function is called by:
  5278 ;;		_printf
  5279 ;; This function uses a non-reentrant model
  5280 ;;
  5281                           
  5282                           
  5283                           ;psect for function _vfprintf
  5284  176A                     _vfprintf:	
  5285                           
  5286                           ;incstack = 0
  5287                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5288                           ;vfprintf@fp stored from wreg
  5289  176A  0021               	movlb	1	; select bank1
  5290  176B  00E6               	movwf	vfprintf@fp^(0+128)
  5291                           
  5292                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  5293  176C  0862               	movf	(vfprintf@fmt+1)^(0+128),w
  5294  176D  00E8               	movwf	(vfprintf@cfmt+1)^(0+128)
  5295  176E  0861               	movf	vfprintf@fmt^(0+128),w
  5296  176F  00E7               	movwf	vfprintf@cfmt^(0+128)
  5297                           
  5298                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  5299  1770  01C4               	clrf	_nout^(0+128)
  5300  1771  01C5               	clrf	(_nout+1)^(0+128)
  5301  1772                     l4051:	
  5302                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  5303                           
  5304                           
  5305                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  5306  1772  0867               	movf	vfprintf@cfmt^(0+128),w
  5307  1773  0084               	movwf	4
  5308  1774  0868               	movf	(vfprintf@cfmt+1)^(0+128),w
  5309  1775  0085               	movwf	5
  5310  1776  0012               	moviw fsr0++
  5311  1777  1903               	btfsc	3,2
  5312  1778  2F92               	goto	l4053
  5313                           
  5314                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  5315  1779  30E7               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  5316  177A  00E4               	movwf	??_vfprintf^(0+128)
  5317  177B  0864               	movf	??_vfprintf^(0+128),w
  5318  177C  0020               	movlb	0	; select bank0
  5319  177D  00CF               	movwf	vfpfcnvrt@fmt
  5320  177E  0021               	movlb	1	; select bank1
  5321  177F  0863               	movf	vfprintf@ap^(0+128),w
  5322  1780  00E5               	movwf	(??_vfprintf+1)^(0+128)
  5323  1781  0865               	movf	(??_vfprintf+1)^(0+128),w
  5324  1782  0020               	movlb	0	; select bank0
  5325  1783  00D0               	movwf	vfpfcnvrt@ap
  5326  1784  0021               	movlb	1	; select bank1
  5327  1785  0866               	movf	vfprintf@fp^(0+128),w
  5328  1786  318C  2435  3197   	fcall	_vfpfcnvrt
  5329  1789  0020               	movlb	0	; select bank0
  5330  178A  084F               	movf	?_vfpfcnvrt,w
  5331  178B  0021               	movlb	1	; select bank1
  5332  178C  07C4               	addwf	_nout^(0+128),f
  5333  178D  0020               	movlb	0	; select bank0
  5334  178E  0850               	movf	?_vfpfcnvrt+1,w
  5335  178F  0021               	movlb	1	; select bank1
  5336  1790  3DC5               	addwfc	(_nout+1)^(0+128),f
  5337  1791  2F72               	goto	l4051
  5338  1792                     l4053:	
  5339                           
  5340                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  5341  1792  0845               	movf	(_nout+1)^(0+128),w
  5342  1793  00E2               	movwf	(?_vfprintf+1)^(0+128)
  5343  1794  0844               	movf	_nout^(0+128),w
  5344  1795  00E1               	movwf	?_vfprintf^(0+128)
  5345  1796  0008               	return
  5346  1797                     __end_of_vfprintf:	
  5347                           
  5348                           	psect	text6
  5349  0C35                     __ptext6:	
  5350 ;; *************** function _vfpfcnvrt *****************
  5351 ;; Defined at:
  5352 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5353 ;; Parameters:    Size  Location     Type
  5354 ;;  fp              1    wreg     PTR struct _IO_FILE
  5355 ;;		 -> NULL(0), 
  5356 ;;  fmt             1   47[BANK0 ] PTR PTR unsigned char 
  5357 ;;		 -> vfprintf@cfmt(2), 
  5358 ;;  ap              1   48[BANK0 ] PTR PTR void 
  5359 ;;		 -> printf@ap(1), 
  5360 ;; Auto vars:     Size  Location     Type
  5361 ;;  fp              1   63[BANK0 ] PTR struct _IO_FILE
  5362 ;;		 -> NULL(0), 
  5363 ;;  ll              8   54[BANK0 ] long long 
  5364 ;;  llu             8    0        unsigned long long 
  5365 ;;  f               4    0        unsigned long long 
  5366 ;;  ct              3    0        unsigned char [3]
  5367 ;;  i               2    0        int 
  5368 ;;  done            2    0        int 
  5369 ;;  cp              2    0        PTR unsigned char 
  5370 ;;  vp              1   62[BANK0 ] PTR void 
  5371 ;;		 -> ?_printf(2), 
  5372 ;;  c               1    0        unsigned char 
  5373 ;; Return value:  Size  Location     Type
  5374 ;;                  2   47[BANK0 ] int 
  5375 ;; Registers used:
  5376 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5377 ;; Tracked objects:
  5378 ;;		On entry : 0/0
  5379 ;;		On exit  : 0/0
  5380 ;;		Unchanged: 0/0
  5381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5382 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5383 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5384 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5385 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5386 ;;Total ram usage:       17 bytes
  5387 ;; Hardware stack levels used:    1
  5388 ;; Hardware stack levels required when called:   11
  5389 ;; This function calls:
  5390 ;;		_dtoa
  5391 ;;		_fputc
  5392 ;; This function is called by:
  5393 ;;		_vfprintf
  5394 ;; This function uses a non-reentrant model
  5395 ;;
  5396                           
  5397                           
  5398                           ;psect for function _vfpfcnvrt
  5399  0C35                     _vfpfcnvrt:	
  5400                           
  5401                           ;incstack = 0
  5402                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5403                           ;vfpfcnvrt@fp stored from wreg
  5404  0C35  0020               	movlb	0	; select bank0
  5405  0C36  00DF               	movwf	vfpfcnvrt@fp
  5406                           
  5407                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  5408  0C37  084F               	movf	vfpfcnvrt@fmt,w
  5409  0C38  0086               	movwf	6
  5410  0C39  0187               	clrf	7
  5411  0C3A  3F40               	moviw [0]fsr1
  5412  0C3B  00D1               	movwf	??_vfpfcnvrt
  5413  0C3C  3F41               	moviw [1]fsr1
  5414  0C3D  00D2               	movwf	??_vfpfcnvrt+1
  5415  0C3E  0851               	movf	??_vfpfcnvrt,w
  5416  0C3F  0084               	movwf	4
  5417  0C40  0852               	movf	??_vfpfcnvrt+1,w
  5418  0C41  0085               	movwf	5
  5419  0C42  0012               	moviw fsr0++
  5420  0C43  3A25               	xorlw	37
  5421  0C44  1D03               	btfss	3,2
  5422  0C45  2D15               	goto	l4025
  5423                           
  5424                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  5425  0C46  084F               	movf	vfpfcnvrt@fmt,w
  5426  0C47  0086               	movwf	6
  5427  0C48  0187               	clrf	7
  5428  0C49  3001               	movlw	1
  5429  0C4A  0781               	addwf	1,f
  5430  0C4B  3141               	addfsr 1,1
  5431  0C4C  1803               	skipnc
  5432  0C4D  0A81               	incf	1,f
  5433                           
  5434                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  5435  0C4E  0021               	movlb	1	; select bank1
  5436  0C4F  01C6               	clrf	_width^(0+128)
  5437  0C50  01C7               	clrf	(_width+1)^(0+128)
  5438  0C51  0020               	movlb	0	; select bank0
  5439  0C52  01E4               	clrf	_flags
  5440  0C53  01E5               	clrf	_flags+1
  5441                           
  5442                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  5443  0C54  30FF               	movlw	255
  5444  0C55  0021               	movlb	1	; select bank1
  5445  0C56  00C8               	movwf	_prec^(0+128)
  5446  0C57  30FF               	movlw	255
  5447  0C58  00C9               	movwf	(_prec^(0+128)+1)
  5448                           
  5449                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  5450  0C59  0020               	movlb	0	; select bank0
  5451  0C5A  084F               	movf	vfpfcnvrt@fmt,w
  5452  0C5B  0086               	movwf	6
  5453  0C5C  0187               	clrf	7
  5454  0C5D  3F40               	moviw [0]fsr1
  5455  0C5E  00D1               	movwf	??_vfpfcnvrt
  5456  0C5F  3F41               	moviw [1]fsr1
  5457  0C60  00D2               	movwf	??_vfpfcnvrt+1
  5458  0C61  0851               	movf	??_vfpfcnvrt,w
  5459  0C62  0084               	movwf	4
  5460  0C63  0852               	movf	??_vfpfcnvrt+1,w
  5461  0C64  0085               	movwf	5
  5462  0C65  0012               	moviw fsr0++
  5463  0C66  3A64               	xorlw	100
  5464  0C67  1903               	btfsc	3,2
  5465  0C68  2C78               	goto	l3989
  5466  0C69  084F               	movf	vfpfcnvrt@fmt,w
  5467  0C6A  0086               	movwf	6
  5468  0C6B  0187               	clrf	7
  5469  0C6C  3F40               	moviw [0]fsr1
  5470  0C6D  00D1               	movwf	??_vfpfcnvrt
  5471  0C6E  3F41               	moviw [1]fsr1
  5472  0C6F  00D2               	movwf	??_vfpfcnvrt+1
  5473  0C70  0851               	movf	??_vfpfcnvrt,w
  5474  0C71  0084               	movwf	4
  5475  0C72  0852               	movf	??_vfpfcnvrt+1,w
  5476  0C73  0085               	movwf	5
  5477  0C74  0012               	moviw fsr0++
  5478  0C75  3A69               	xorlw	105
  5479  0C76  1D03               	btfss	3,2
  5480  0C77  2CB4               	goto	l3997
  5481  0C78                     l3989:	
  5482                           
  5483                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  5484  0C78  084F               	movf	vfpfcnvrt@fmt,w
  5485  0C79  0086               	movwf	6
  5486  0C7A  0187               	clrf	7
  5487  0C7B  3001               	movlw	1
  5488  0C7C  0781               	addwf	1,f
  5489  0C7D  3141               	addfsr 1,1
  5490  0C7E  1803               	skipnc
  5491  0C7F  0A81               	incf	1,f
  5492                           
  5493                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  5494  0C80  0850               	movf	vfpfcnvrt@ap,w
  5495  0C81  0086               	movwf	6
  5496  0C82  3001               	movlw	1	; select bank2/3
  5497  0C83  0087               	movwf	7
  5498  0C84  0801               	movf	1,w
  5499  0C85  0084               	movwf	4
  5500  0C86  3001               	movlw	1	; select bank2/3
  5501  0C87  0085               	movwf	5
  5502  0C88  3002               	movlw	2
  5503  0C89  0781               	addwf	1,f
  5504  0C8A  3F00               	moviw [0]fsr0
  5505  0C8B  00D1               	movwf	??_vfpfcnvrt
  5506  0C8C  3F01               	moviw [1]fsr0
  5507  0C8D  00D2               	movwf	??_vfpfcnvrt+1
  5508  0C8E  0851               	movf	??_vfpfcnvrt,w
  5509  0C8F  00D6               	movwf	vfpfcnvrt@ll
  5510  0C90  0852               	movf	??_vfpfcnvrt+1,w
  5511  0C91  00D7               	movwf	vfpfcnvrt@ll+1
  5512  0C92  0D89               	rlf	9,f
  5513  0C93  3B89               	subwfb	9,f
  5514  0C94  0989               	comf	9,f
  5515  0C95  00D8               	movwf	vfpfcnvrt@ll+2
  5516  0C96  00D9               	movwf	vfpfcnvrt@ll+3
  5517  0C97  00DA               	movwf	vfpfcnvrt@ll+4
  5518  0C98  00DB               	movwf	vfpfcnvrt@ll+5
  5519  0C99  00DC               	movwf	vfpfcnvrt@ll+6
  5520  0C9A  00DD               	movwf	vfpfcnvrt@ll+7
  5521                           
  5522                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  5523  0C9B  0856               	movf	vfpfcnvrt@ll,w
  5524  0C9C  00C4               	movwf	dtoa@d
  5525  0C9D  0857               	movf	vfpfcnvrt@ll+1,w
  5526  0C9E  00C5               	movwf	dtoa@d+1
  5527  0C9F  0858               	movf	vfpfcnvrt@ll+2,w
  5528  0CA0  00C6               	movwf	dtoa@d+2
  5529  0CA1  0859               	movf	vfpfcnvrt@ll+3,w
  5530  0CA2  00C7               	movwf	dtoa@d+3
  5531  0CA3  085A               	movf	vfpfcnvrt@ll+4,w
  5532  0CA4  00C8               	movwf	dtoa@d+4
  5533  0CA5  085B               	movf	vfpfcnvrt@ll+5,w
  5534  0CA6  00C9               	movwf	dtoa@d+5
  5535  0CA7  085C               	movf	vfpfcnvrt@ll+6,w
  5536  0CA8  00CA               	movwf	dtoa@d+6
  5537  0CA9  085D               	movf	vfpfcnvrt@ll+7,w
  5538  0CAA  00CB               	movwf	dtoa@d+7
  5539  0CAB  085F               	movf	vfpfcnvrt@fp,w
  5540  0CAC  3186  2657         	fcall	_dtoa
  5541  0CAE  0020               	movlb	0	; select bank0
  5542  0CAF  0845               	movf	?_dtoa+1,w
  5543  0CB0  00D0               	movwf	?_vfpfcnvrt+1
  5544  0CB1  0844               	movf	?_dtoa,w
  5545  0CB2  00CF               	movwf	?_vfpfcnvrt
  5546  0CB3  0008               	return
  5547  0CB4                     l3997:	
  5548                           
  5549                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1077:      
      +                             if (*fmt[0] == 'n') {
  5550  0CB4  084F               	movf	vfpfcnvrt@fmt,w
  5551  0CB5  0086               	movwf	6
  5552  0CB6  0187               	clrf	7
  5553  0CB7  3F40               	moviw [0]fsr1
  5554  0CB8  00D1               	movwf	??_vfpfcnvrt
  5555  0CB9  3F41               	moviw [1]fsr1
  5556  0CBA  00D2               	movwf	??_vfpfcnvrt+1
  5557  0CBB  0851               	movf	??_vfpfcnvrt,w
  5558  0CBC  0084               	movwf	4
  5559  0CBD  0852               	movf	??_vfpfcnvrt+1,w
  5560  0CBE  0085               	movwf	5
  5561  0CBF  0012               	moviw fsr0++
  5562  0CC0  3A6E               	xorlw	110
  5563  0CC1  1D03               	btfss	3,2
  5564  0CC2  2CE5               	goto	l4009
  5565                           
  5566                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1078:      
      +                                 ++*fmt;
  5567  0CC3  084F               	movf	vfpfcnvrt@fmt,w
  5568  0CC4  0086               	movwf	6
  5569  0CC5  0187               	clrf	7
  5570  0CC6  3001               	movlw	1
  5571  0CC7  0781               	addwf	1,f
  5572  0CC8  3141               	addfsr 1,1
  5573  0CC9  1803               	skipnc
  5574  0CCA  0A81               	incf	1,f
  5575                           
  5576                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1079:      
      +                                 vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
  5577  0CCB  0850               	movf	vfpfcnvrt@ap,w
  5578  0CCC  0086               	movwf	6
  5579  0CCD  3001               	movlw	1	; select bank2/3
  5580  0CCE  0087               	movwf	7
  5581  0CCF  3F40               	moviw [0]fsr1
  5582  0CD0  0084               	movwf	4
  5583  0CD1  3001               	movlw	1	; select bank2/3
  5584  0CD2  0085               	movwf	5
  5585  0CD3  0A81               	incf	1,f
  5586  0CD4  0800               	movf	0,w
  5587  0CD5  00D1               	movwf	??_vfpfcnvrt
  5588  0CD6  0851               	movf	??_vfpfcnvrt,w
  5589  0CD7  00DE               	movwf	vfpfcnvrt@vp
  5590                           
  5591                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1080:      
      +                                 *(int *)vp = nout;
  5592  0CD8  085E               	movf	vfpfcnvrt@vp,w
  5593  0CD9  0086               	movwf	6
  5594  0CDA  3001               	movlw	1	; select bank2/3
  5595  0CDB  0087               	movwf	7
  5596  0CDC  0021               	movlb	1	; select bank1
  5597  0CDD  0844               	movf	_nout^(0+128),w
  5598  0CDE  3FC0               	movwi [0]fsr1
  5599  0CDF  0845               	movf	(_nout+1)^(0+128),w
  5600  0CE0  3FC1               	movwi [1]fsr1
  5601  0CE1                     l4005:	
  5602                           
  5603                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1081:      
      +                                 return 0;
  5604  0CE1  0020               	movlb	0	; select bank0
  5605  0CE2  01CF               	clrf	?_vfpfcnvrt
  5606  0CE3  01D0               	clrf	?_vfpfcnvrt+1
  5607  0CE4  0008               	return
  5608  0CE5                     l4009:	
  5609                           
  5610                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  5611  0CE5  084F               	movf	vfpfcnvrt@fmt,w
  5612  0CE6  0086               	movwf	6
  5613  0CE7  0187               	clrf	7
  5614  0CE8  3F40               	moviw [0]fsr1
  5615  0CE9  00D1               	movwf	??_vfpfcnvrt
  5616  0CEA  3F41               	moviw [1]fsr1
  5617  0CEB  00D2               	movwf	??_vfpfcnvrt+1
  5618  0CEC  0851               	movf	??_vfpfcnvrt,w
  5619  0CED  0084               	movwf	4
  5620  0CEE  0852               	movf	??_vfpfcnvrt+1,w
  5621  0CEF  0085               	movwf	5
  5622  0CF0  0012               	moviw fsr0++
  5623  0CF1  3A25               	xorlw	37
  5624  0CF2  1D03               	btfss	3,2
  5625  0CF3  2D0C               	goto	l4019
  5626                           
  5627                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  5628  0CF4  084F               	movf	vfpfcnvrt@fmt,w
  5629  0CF5  0086               	movwf	6
  5630  0CF6  0187               	clrf	7
  5631  0CF7  3001               	movlw	1
  5632  0CF8  0781               	addwf	1,f
  5633  0CF9  3141               	addfsr 1,1
  5634  0CFA  1803               	skipnc
  5635  0CFB  0A81               	incf	1,f
  5636                           
  5637                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  5638  0CFC  3025               	movlw	37
  5639  0CFD  00AA               	movwf	fputc@c
  5640  0CFE  3000               	movlw	0
  5641  0CFF  00AB               	movwf	fputc@c+1
  5642  0D00  085F               	movf	vfpfcnvrt@fp,w
  5643  0D01  00D1               	movwf	??_vfpfcnvrt
  5644  0D02  0851               	movf	??_vfpfcnvrt,w
  5645  0D03  00AC               	movwf	fputc@fp
  5646  0D04  3188  2012         	fcall	_fputc
  5647  0D06                     l4015:	
  5648                           
  5649                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  5650  0D06  3001               	movlw	1
  5651  0D07  0020               	movlb	0	; select bank0
  5652  0D08  00CF               	movwf	?_vfpfcnvrt
  5653  0D09  3000               	movlw	0
  5654  0D0A  00D0               	movwf	?_vfpfcnvrt+1
  5655  0D0B  0008               	return
  5656  0D0C                     l4019:	
  5657                           
  5658                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  5659  0D0C  084F               	movf	vfpfcnvrt@fmt,w
  5660  0D0D  0086               	movwf	6
  5661  0D0E  0187               	clrf	7
  5662  0D0F  3001               	movlw	1
  5663  0D10  0781               	addwf	1,f
  5664  0D11  3141               	addfsr 1,1
  5665  0D12  1803               	skipnc
  5666  0D13  0A81               	incf	1,f
  5667  0D14  2CE1               	goto	l4005
  5668  0D15                     l4025:	
  5669                           
  5670                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  5671  0D15  084F               	movf	vfpfcnvrt@fmt,w
  5672  0D16  0086               	movwf	6
  5673  0D17  0187               	clrf	7
  5674  0D18  3F40               	moviw [0]fsr1
  5675  0D19  00D1               	movwf	??_vfpfcnvrt
  5676  0D1A  3F41               	moviw [1]fsr1
  5677  0D1B  00D2               	movwf	??_vfpfcnvrt+1
  5678  0D1C  0851               	movf	??_vfpfcnvrt,w
  5679  0D1D  0084               	movwf	4
  5680  0D1E  0852               	movf	??_vfpfcnvrt+1,w
  5681  0D1F  0085               	movwf	5
  5682  0D20  0800               	movf	0,w	;code access
  5683  0D21  00D3               	movwf	??_vfpfcnvrt+2
  5684  0D22  01D4               	clrf	??_vfpfcnvrt+3
  5685  0D23  0853               	movf	??_vfpfcnvrt+2,w
  5686  0D24  00AA               	movwf	fputc@c
  5687  0D25  0854               	movf	??_vfpfcnvrt+3,w
  5688  0D26  00AB               	movwf	fputc@c+1
  5689  0D27  085F               	movf	vfpfcnvrt@fp,w
  5690  0D28  00D5               	movwf	??_vfpfcnvrt+4
  5691  0D29  0855               	movf	??_vfpfcnvrt+4,w
  5692  0D2A  00AC               	movwf	fputc@fp
  5693  0D2B  3188  2012  318C   	fcall	_fputc
  5694                           
  5695                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  5696  0D2E  0020               	movlb	0	; select bank0
  5697  0D2F  084F               	movf	vfpfcnvrt@fmt,w
  5698  0D30  0086               	movwf	6
  5699  0D31  0187               	clrf	7
  5700  0D32  3001               	movlw	1
  5701  0D33  0781               	addwf	1,f
  5702  0D34  3141               	addfsr 1,1
  5703  0D35  1803               	skipnc
  5704  0D36  0A81               	incf	1,f
  5705  0D37  2D06               	goto	l4015
  5706  0D38                     __end_of_vfpfcnvrt:	
  5707                           
  5708                           	psect	text7
  5709  0657                     __ptext7:	
  5710 ;; *************** function _dtoa *****************
  5711 ;; Defined at:
  5712 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5713 ;; Parameters:    Size  Location     Type
  5714 ;;  fp              1    wreg     PTR struct _IO_FILE
  5715 ;;		 -> NULL(0), 
  5716 ;;  d               8   36[BANK0 ] long long 
  5717 ;; Auto vars:     Size  Location     Type
  5718 ;;  fp              1    2[BANK1 ] PTR struct _IO_FILE
  5719 ;;		 -> NULL(0), 
  5720 ;;  n               8    9[BANK1 ] long long 
  5721 ;;  i               2   17[BANK1 ] int 
  5722 ;;  s               2    7[BANK1 ] int 
  5723 ;;  w               2    5[BANK1 ] int 
  5724 ;;  p               2    3[BANK1 ] int 
  5725 ;; Return value:  Size  Location     Type
  5726 ;;                  2   36[BANK0 ] int 
  5727 ;; Registers used:
  5728 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5729 ;; Tracked objects:
  5730 ;;		On entry : 0/0
  5731 ;;		On exit  : 0/0
  5732 ;;		Unchanged: 0/0
  5733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5734 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5735 ;;      Locals:         0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0
  5736 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5737 ;;      Totals:         0      11      19       0       0       0       0       0       0       0       0       0       
      +0       0
  5738 ;;Total ram usage:       30 bytes
  5739 ;; Hardware stack levels used:    1
  5740 ;; Hardware stack levels required when called:   10
  5741 ;; This function calls:
  5742 ;;		___aodiv
  5743 ;;		___aomod
  5744 ;;		_abs
  5745 ;;		_pad
  5746 ;; This function is called by:
  5747 ;;		_vfpfcnvrt
  5748 ;; This function uses a non-reentrant model
  5749 ;;
  5750                           
  5751                           
  5752                           ;psect for function _dtoa
  5753  0657                     _dtoa:	
  5754                           
  5755                           ;incstack = 0
  5756                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5757                           ;dtoa@fp stored from wreg
  5758  0657  0021               	movlb	1	; select bank1
  5759  0658  00D0               	movwf	dtoa@fp^(0+128)
  5760                           
  5761                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  5762  0659  0020               	movlb	0	; select bank0
  5763  065A  0844               	movf	dtoa@d,w
  5764  065B  0021               	movlb	1	; select bank1
  5765  065C  00D7               	movwf	dtoa@n^(0+128)
  5766  065D  0020               	movlb	0	; select bank0
  5767  065E  0845               	movf	dtoa@d+1,w
  5768  065F  0021               	movlb	1	; select bank1
  5769  0660  00D8               	movwf	(dtoa@n+1)^(0+128)
  5770  0661  0020               	movlb	0	; select bank0
  5771  0662  0846               	movf	dtoa@d+2,w
  5772  0663  0021               	movlb	1	; select bank1
  5773  0664  00D9               	movwf	(dtoa@n+2)^(0+128)
  5774  0665  0020               	movlb	0	; select bank0
  5775  0666  0847               	movf	dtoa@d+3,w
  5776  0667  0021               	movlb	1	; select bank1
  5777  0668  00DA               	movwf	(dtoa@n+3)^(0+128)
  5778  0669  0020               	movlb	0	; select bank0
  5779  066A  0848               	movf	dtoa@d+4,w
  5780  066B  0021               	movlb	1	; select bank1
  5781  066C  00DB               	movwf	(dtoa@n+4)^(0+128)
  5782  066D  0020               	movlb	0	; select bank0
  5783  066E  0849               	movf	dtoa@d+5,w
  5784  066F  0021               	movlb	1	; select bank1
  5785  0670  00DC               	movwf	(dtoa@n+5)^(0+128)
  5786  0671  0020               	movlb	0	; select bank0
  5787  0672  084A               	movf	dtoa@d+6,w
  5788  0673  0021               	movlb	1	; select bank1
  5789  0674  00DD               	movwf	(dtoa@n+6)^(0+128)
  5790  0675  0020               	movlb	0	; select bank0
  5791  0676  084B               	movf	dtoa@d+7,w
  5792  0677  0021               	movlb	1	; select bank1
  5793  0678  00DE               	movwf	(dtoa@n+7)^(0+128)
  5794                           
  5795                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  5796  0679  30D7               	movlw	low dtoa@n
  5797  067A  0086               	movwf	6
  5798  067B  3000               	movlw	high dtoa@n
  5799  067C  0087               	movwf	7
  5800  067D  3F47               	moviw [7]fsr1
  5801  067E  0020               	movlb	0	; select bank0
  5802  067F  00CC               	movwf	??_dtoa
  5803  0680  1FCC               	btfss	??_dtoa,7
  5804  0681  2E84               	goto	u5270
  5805  0682  3001               	movlw	1
  5806  0683  2E85               	goto	u5280
  5807  0684                     u5270:	
  5808  0684  3000               	movlw	0
  5809  0685                     u5280:	
  5810  0685  0020               	movlb	0	; select bank0
  5811  0686  00CD               	movwf	??_dtoa+1
  5812  0687  01CE               	clrf	??_dtoa+2
  5813  0688  084D               	movf	??_dtoa+1,w
  5814  0689  0021               	movlb	1	; select bank1
  5815  068A  00D5               	movwf	dtoa@s^(0+128)
  5816  068B  0020               	movlb	0	; select bank0
  5817  068C  084E               	movf	??_dtoa+2,w
  5818  068D  0021               	movlb	1	; select bank1
  5819  068E  00D6               	movwf	(dtoa@s+1)^(0+128)
  5820                           
  5821                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  5822  068F  0855               	movf	dtoa@s^(0+128),w
  5823  0690  0456               	iorwf	(dtoa@s+1)^(0+128),w
  5824  0691  1903               	btfsc	3,2
  5825  0692  2EB1               	goto	l500
  5826                           
  5827                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  5828  0693  09D7               	comf	dtoa@n^(0+128),f
  5829  0694  09D8               	comf	(dtoa@n+1)^(0+128),f
  5830  0695  09D9               	comf	(dtoa@n+2)^(0+128),f
  5831  0696  09DA               	comf	(dtoa@n+3)^(0+128),f
  5832  0697  09DB               	comf	(dtoa@n+4)^(0+128),f
  5833  0698  09DC               	comf	(dtoa@n+5)^(0+128),f
  5834  0699  09DD               	comf	(dtoa@n+6)^(0+128),f
  5835  069A  09DE               	comf	(dtoa@n+7)^(0+128),f
  5836  069B  0AD7               	incf	dtoa@n^(0+128),f
  5837  069C  1D03               	skipz
  5838  069D  2EB1               	goto	l500
  5839  069E  0AD8               	incf	(dtoa@n+1)^(0+128),f
  5840  069F  1D03               	skipz
  5841  06A0  2EB1               	goto	l500
  5842  06A1  0AD9               	incf	(dtoa@n+2)^(0+128),f
  5843  06A2  1D03               	skipz
  5844  06A3  2EB1               	goto	l500
  5845  06A4  0ADA               	incf	(dtoa@n+3)^(0+128),f
  5846  06A5  1D03               	skipz
  5847  06A6  2EB1               	goto	l500
  5848  06A7  0ADB               	incf	(dtoa@n+4)^(0+128),f
  5849  06A8  1D03               	skipz
  5850  06A9  2EB1               	goto	l500
  5851  06AA  0ADC               	incf	(dtoa@n+5)^(0+128),f
  5852  06AB  1D03               	skipz
  5853  06AC  2EB1               	goto	l500
  5854  06AD  0ADD               	incf	(dtoa@n+6)^(0+128),f
  5855  06AE  1D03               	skipz
  5856  06AF  2EB1               	goto	l500
  5857  06B0  0ADE               	incf	(dtoa@n+7)^(0+128),f
  5858  06B1                     l500:	
  5859                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 284:     }
  5860                           
  5861                           
  5862                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  5863  06B1  0021               	movlb	1	; select bank1
  5864  06B2  1BC9               	btfsc	(_prec+1)^(0+128),7
  5865  06B3  2EB9               	goto	l501
  5866                           
  5867                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  5868  06B4  30FD               	movlw	253
  5869  06B5  0020               	movlb	0	; select bank0
  5870  06B6  05E4               	andwf	_flags,f
  5871  06B7  30FF               	movlw	255
  5872  06B8  05E5               	andwf	_flags+1,f
  5873  06B9                     l501:	
  5874                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 289:     }
  5875                           
  5876                           
  5877                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  5878  06B9  0021               	movlb	1	; select bank1
  5879  06BA  0849               	movf	(_prec+1)^(0+128),w
  5880  06BB  3A80               	xorlw	128
  5881  06BC  0020               	movlb	0	; select bank0
  5882  06BD  00CC               	movwf	??_dtoa
  5883  06BE  3080               	movlw	128
  5884  06BF  024C               	subwf	??_dtoa,w
  5885  06C0  1D03               	skipz
  5886  06C1  2EC5               	goto	u5325
  5887  06C2  3001               	movlw	1
  5888  06C3  0021               	movlb	1	; select bank1
  5889  06C4  0248               	subwf	_prec^(0+128),w
  5890  06C5                     u5325:	
  5891  06C5  1803               	skipnc
  5892  06C6  2ECD               	goto	l3931
  5893  06C7  3001               	movlw	1
  5894  06C8  0021               	movlb	1	; select bank1
  5895  06C9  00D1               	movwf	dtoa@p^(0+128)
  5896  06CA  3000               	movlw	0
  5897  06CB  00D2               	movwf	(dtoa@p^(0+128)+1)
  5898  06CC  2ED2               	goto	l505
  5899  06CD                     l3931:	
  5900  06CD  0021               	movlb	1	; select bank1
  5901  06CE  0849               	movf	(_prec+1)^(0+128),w
  5902  06CF  00D2               	movwf	(dtoa@p+1)^(0+128)
  5903  06D0  0848               	movf	_prec^(0+128),w
  5904  06D1  00D1               	movwf	dtoa@p^(0+128)
  5905  06D2                     l505:	
  5906                           
  5907                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  5908  06D2  0847               	movf	(_width+1)^(0+128),w
  5909  06D3  00D4               	movwf	(dtoa@w+1)^(0+128)
  5910  06D4  0846               	movf	_width^(0+128),w
  5911  06D5  00D3               	movwf	dtoa@w^(0+128)
  5912                           
  5913                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  5914  06D6  0855               	movf	dtoa@s^(0+128),w
  5915  06D7  0456               	iorwf	(dtoa@s+1)^(0+128),w
  5916  06D8  1D03               	btfss	3,2
  5917  06D9  2EDD               	goto	l3937
  5918  06DA  0020               	movlb	0	; select bank0
  5919  06DB  1D64               	btfss	_flags,2
  5920  06DC  2EE2               	goto	l506
  5921  06DD                     l3937:	
  5922                           
  5923                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  5924  06DD  30FF               	movlw	255
  5925  06DE  0021               	movlb	1	; select bank1
  5926  06DF  07D3               	addwf	dtoa@w^(0+128),f
  5927  06E0  30FF               	movlw	255
  5928  06E1  3DD4               	addwfc	(dtoa@w+1)^(0+128),f
  5929  06E2                     l506:	
  5930                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 294:     }
  5931                           
  5932                           
  5933                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  5934  06E2  301F               	movlw	31
  5935  06E3  0021               	movlb	1	; select bank1
  5936  06E4  00DF               	movwf	dtoa@i^(0+128)
  5937  06E5  3000               	movlw	0
  5938  06E6  00E0               	movwf	(dtoa@i^(0+128)+1)
  5939                           
  5940                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  5941  06E7  0022               	movlb	2	; select bank2
  5942  06E8  01CB               	clrf	(_dbuf^(0+256)+31)
  5943                           
  5944                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5945  06E9  2FB0               	goto	l509
  5946  06EA                     l3951:	
  5947  06EA  0021               	movlb	1	; select bank1
  5948  06EB  0857               	movf	dtoa@n^(0+128),w
  5949  06EC  0458               	iorwf	(dtoa@n+1)^(0+128),w
  5950  06ED  0459               	iorwf	(dtoa@n+2)^(0+128),w
  5951  06EE  045A               	iorwf	(dtoa@n+3)^(0+128),w
  5952  06EF  045B               	iorwf	(dtoa@n+4)^(0+128),w
  5953  06F0  045C               	iorwf	(dtoa@n+5)^(0+128),w
  5954  06F1  045D               	iorwf	(dtoa@n+6)^(0+128),w
  5955  06F2  045E               	iorwf	(dtoa@n+7)^(0+128),w
  5956  06F3  1D03               	skipz
  5957  06F4  2F13               	goto	l3941
  5958  06F5  0852               	movf	(dtoa@p+1)^(0+128),w
  5959  06F6  3A80               	xorlw	128
  5960  06F7  0020               	movlb	0	; select bank0
  5961  06F8  00CC               	movwf	??_dtoa
  5962  06F9  3080               	movlw	128
  5963  06FA  024C               	subwf	??_dtoa,w
  5964  06FB  1D03               	skipz
  5965  06FC  2F00               	goto	u5375
  5966  06FD  3001               	movlw	1
  5967  06FE  0021               	movlb	1	; select bank1
  5968  06FF  0251               	subwf	dtoa@p^(0+128),w
  5969  0700                     u5375:	
  5970  0700  1803               	skipnc
  5971  0701  2F13               	goto	l3941
  5972  0702  0021               	movlb	1	; select bank1
  5973  0703  0854               	movf	(dtoa@w+1)^(0+128),w
  5974  0704  3A80               	xorlw	128
  5975  0705  0020               	movlb	0	; select bank0
  5976  0706  00CC               	movwf	??_dtoa
  5977  0707  3080               	movlw	128
  5978  0708  024C               	subwf	??_dtoa,w
  5979  0709  1D03               	skipz
  5980  070A  2F0E               	goto	u5385
  5981  070B  3001               	movlw	1
  5982  070C  0021               	movlb	1	; select bank1
  5983  070D  0253               	subwf	dtoa@w^(0+128),w
  5984  070E                     u5385:	
  5985  070E  1C03               	skipc
  5986  070F  2FBE               	goto	l3959
  5987  0710  0020               	movlb	0	; select bank0
  5988  0711  1CE4               	btfss	_flags,1
  5989  0712  2FBE               	goto	l3959
  5990  0713                     l3941:	
  5991                           
  5992                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  5993  0713  30FF               	movlw	255
  5994  0714  0021               	movlb	1	; select bank1
  5995  0715  07DF               	addwf	dtoa@i^(0+128),f
  5996  0716  30FF               	movlw	255
  5997  0717  3DE0               	addwfc	(dtoa@i+1)^(0+128),f
  5998                           
  5999                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  6000  0718  300A               	movlw	10
  6001  0719  0020               	movlb	0	; select bank0
  6002  071A  00A8               	movwf	___aomod@divisor
  6003  071B  01A9               	clrf	___aomod@divisor+1
  6004  071C  01AA               	clrf	___aomod@divisor+2
  6005  071D  01AB               	clrf	___aomod@divisor+3
  6006  071E  01AC               	clrf	___aomod@divisor+4
  6007  071F  01AD               	clrf	___aomod@divisor+5
  6008  0720  01AE               	clrf	___aomod@divisor+6
  6009  0721  01AF               	clrf	___aomod@divisor+7
  6010  0722  0021               	movlb	1	; select bank1
  6011  0723  0857               	movf	dtoa@n^(0+128),w
  6012  0724  0020               	movlb	0	; select bank0
  6013  0725  00B0               	movwf	___aomod@dividend
  6014  0726  0021               	movlb	1	; select bank1
  6015  0727  0858               	movf	(dtoa@n+1)^(0+128),w
  6016  0728  0020               	movlb	0	; select bank0
  6017  0729  00B1               	movwf	___aomod@dividend+1
  6018  072A  0021               	movlb	1	; select bank1
  6019  072B  0859               	movf	(dtoa@n+2)^(0+128),w
  6020  072C  0020               	movlb	0	; select bank0
  6021  072D  00B2               	movwf	___aomod@dividend+2
  6022  072E  0021               	movlb	1	; select bank1
  6023  072F  085A               	movf	(dtoa@n+3)^(0+128),w
  6024  0730  0020               	movlb	0	; select bank0
  6025  0731  00B3               	movwf	___aomod@dividend+3
  6026  0732  0021               	movlb	1	; select bank1
  6027  0733  085B               	movf	(dtoa@n+4)^(0+128),w
  6028  0734  0020               	movlb	0	; select bank0
  6029  0735  00B4               	movwf	___aomod@dividend+4
  6030  0736  0021               	movlb	1	; select bank1
  6031  0737  085C               	movf	(dtoa@n+5)^(0+128),w
  6032  0738  0020               	movlb	0	; select bank0
  6033  0739  00B5               	movwf	___aomod@dividend+5
  6034  073A  0021               	movlb	1	; select bank1
  6035  073B  085D               	movf	(dtoa@n+6)^(0+128),w
  6036  073C  0020               	movlb	0	; select bank0
  6037  073D  00B6               	movwf	___aomod@dividend+6
  6038  073E  0021               	movlb	1	; select bank1
  6039  073F  085E               	movf	(dtoa@n+7)^(0+128),w
  6040  0740  0020               	movlb	0	; select bank0
  6041  0741  00B7               	movwf	___aomod@dividend+7
  6042  0742  318A  225F  3186   	fcall	___aomod
  6043  0745  0020               	movlb	0	; select bank0
  6044  0746  0829               	movf	?___aomod+1,w
  6045  0747  00BC               	movwf	abs@a+1
  6046  0748  0828               	movf	?___aomod,w
  6047  0749  00BB               	movwf	abs@a
  6048  074A  3196  2691  3186   	fcall	_abs
  6049  074D  0020               	movlb	0	; select bank0
  6050  074E  083B               	movf	?_abs,w
  6051  074F  3E30               	addlw	48
  6052  0750  00CC               	movwf	??_dtoa
  6053  0751  0021               	movlb	1	; select bank1
  6054  0752  085F               	movf	dtoa@i^(0+128),w
  6055  0753  3E2C               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6056  0754  0086               	movwf	6
  6057  0755  3001               	movlw	1	; select bank2/3
  6058  0756  0087               	movwf	7
  6059  0757  0020               	movlb	0	; select bank0
  6060  0758  084C               	movf	??_dtoa,w
  6061  0759  0081               	movwf	1
  6062                           
  6063                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  6064  075A  30FF               	movlw	255
  6065  075B  0021               	movlb	1	; select bank1
  6066  075C  07D1               	addwf	dtoa@p^(0+128),f
  6067  075D  30FF               	movlw	255
  6068  075E  3DD2               	addwfc	(dtoa@p+1)^(0+128),f
  6069                           
  6070                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  6071  075F  30FF               	movlw	255
  6072  0760  07D3               	addwf	dtoa@w^(0+128),f
  6073  0761  30FF               	movlw	255
  6074  0762  3DD4               	addwfc	(dtoa@w+1)^(0+128),f
  6075                           
  6076                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  6077  0763  300A               	movlw	10
  6078  0764  0020               	movlb	0	; select bank0
  6079  0765  00A8               	movwf	___aodiv@divisor
  6080  0766  01A9               	clrf	___aodiv@divisor+1
  6081  0767  01AA               	clrf	___aodiv@divisor+2
  6082  0768  01AB               	clrf	___aodiv@divisor+3
  6083  0769  01AC               	clrf	___aodiv@divisor+4
  6084  076A  01AD               	clrf	___aodiv@divisor+5
  6085  076B  01AE               	clrf	___aodiv@divisor+6
  6086  076C  01AF               	clrf	___aodiv@divisor+7
  6087  076D  0021               	movlb	1	; select bank1
  6088  076E  0857               	movf	dtoa@n^(0+128),w
  6089  076F  0020               	movlb	0	; select bank0
  6090  0770  00B0               	movwf	___aodiv@dividend
  6091  0771  0021               	movlb	1	; select bank1
  6092  0772  0858               	movf	(dtoa@n+1)^(0+128),w
  6093  0773  0020               	movlb	0	; select bank0
  6094  0774  00B1               	movwf	___aodiv@dividend+1
  6095  0775  0021               	movlb	1	; select bank1
  6096  0776  0859               	movf	(dtoa@n+2)^(0+128),w
  6097  0777  0020               	movlb	0	; select bank0
  6098  0778  00B2               	movwf	___aodiv@dividend+2
  6099  0779  0021               	movlb	1	; select bank1
  6100  077A  085A               	movf	(dtoa@n+3)^(0+128),w
  6101  077B  0020               	movlb	0	; select bank0
  6102  077C  00B3               	movwf	___aodiv@dividend+3
  6103  077D  0021               	movlb	1	; select bank1
  6104  077E  085B               	movf	(dtoa@n+4)^(0+128),w
  6105  077F  0020               	movlb	0	; select bank0
  6106  0780  00B4               	movwf	___aodiv@dividend+4
  6107  0781  0021               	movlb	1	; select bank1
  6108  0782  085C               	movf	(dtoa@n+5)^(0+128),w
  6109  0783  0020               	movlb	0	; select bank0
  6110  0784  00B5               	movwf	___aodiv@dividend+5
  6111  0785  0021               	movlb	1	; select bank1
  6112  0786  085D               	movf	(dtoa@n+6)^(0+128),w
  6113  0787  0020               	movlb	0	; select bank0
  6114  0788  00B6               	movwf	___aodiv@dividend+6
  6115  0789  0021               	movlb	1	; select bank1
  6116  078A  085E               	movf	(dtoa@n+7)^(0+128),w
  6117  078B  0020               	movlb	0	; select bank0
  6118  078C  00B7               	movwf	___aodiv@dividend+7
  6119  078D  318B  233E  3186   	fcall	___aodiv
  6120  0790  0020               	movlb	0	; select bank0
  6121  0791  0828               	movf	?___aodiv,w
  6122  0792  0021               	movlb	1	; select bank1
  6123  0793  00D7               	movwf	dtoa@n^(0+128)
  6124  0794  0020               	movlb	0	; select bank0
  6125  0795  0829               	movf	?___aodiv+1,w
  6126  0796  0021               	movlb	1	; select bank1
  6127  0797  00D8               	movwf	(dtoa@n+1)^(0+128)
  6128  0798  0020               	movlb	0	; select bank0
  6129  0799  082A               	movf	?___aodiv+2,w
  6130  079A  0021               	movlb	1	; select bank1
  6131  079B  00D9               	movwf	(dtoa@n+2)^(0+128)
  6132  079C  0020               	movlb	0	; select bank0
  6133  079D  082B               	movf	?___aodiv+3,w
  6134  079E  0021               	movlb	1	; select bank1
  6135  079F  00DA               	movwf	(dtoa@n+3)^(0+128)
  6136  07A0  0020               	movlb	0	; select bank0
  6137  07A1  082C               	movf	?___aodiv+4,w
  6138  07A2  0021               	movlb	1	; select bank1
  6139  07A3  00DB               	movwf	(dtoa@n+4)^(0+128)
  6140  07A4  0020               	movlb	0	; select bank0
  6141  07A5  082D               	movf	?___aodiv+5,w
  6142  07A6  0021               	movlb	1	; select bank1
  6143  07A7  00DC               	movwf	(dtoa@n+5)^(0+128)
  6144  07A8  0020               	movlb	0	; select bank0
  6145  07A9  082E               	movf	?___aodiv+6,w
  6146  07AA  0021               	movlb	1	; select bank1
  6147  07AB  00DD               	movwf	(dtoa@n+6)^(0+128)
  6148  07AC  0020               	movlb	0	; select bank0
  6149  07AD  082F               	movf	?___aodiv+7,w
  6150  07AE  0021               	movlb	1	; select bank1
  6151  07AF  00DE               	movwf	(dtoa@n+7)^(0+128)
  6152  07B0                     l509:	
  6153                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 305:     }
  6154                           
  6155                           
  6156                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6157  07B0  0021               	movlb	1	; select bank1
  6158  07B1  0860               	movf	(dtoa@i+1)^(0+128),w
  6159  07B2  3A80               	xorlw	128
  6160  07B3  0020               	movlb	0	; select bank0
  6161  07B4  00CC               	movwf	??_dtoa
  6162  07B5  3080               	movlw	128
  6163  07B6  024C               	subwf	??_dtoa,w
  6164  07B7  1D03               	skipz
  6165  07B8  2FBC               	goto	u5355
  6166  07B9  3001               	movlw	1
  6167  07BA  0021               	movlb	1	; select bank1
  6168  07BB  025F               	subwf	dtoa@i^(0+128),w
  6169  07BC                     u5355:	
  6170  07BC  1803               	btfsc	3,0
  6171  07BD  2EEA               	goto	l3951
  6172  07BE                     l3959:	
  6173                           
  6174                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  6175  07BE  0021               	movlb	1	; select bank1
  6176  07BF  0855               	movf	dtoa@s^(0+128),w
  6177  07C0  0456               	iorwf	(dtoa@s+1)^(0+128),w
  6178  07C1  1D03               	btfss	3,2
  6179  07C2  2FC6               	goto	l3963
  6180  07C3  0020               	movlb	0	; select bank0
  6181  07C4  1D64               	btfss	_flags,2
  6182  07C5  2FE1               	goto	l3973
  6183  07C6                     l3963:	
  6184                           
  6185                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  6186  07C6  30FF               	movlw	255
  6187  07C7  0021               	movlb	1	; select bank1
  6188  07C8  07DF               	addwf	dtoa@i^(0+128),f
  6189  07C9  30FF               	movlw	255
  6190  07CA  3DE0               	addwfc	(dtoa@i+1)^(0+128),f
  6191                           
  6192                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  6193  07CB  0855               	movf	dtoa@s^(0+128),w
  6194  07CC  0456               	iorwf	(dtoa@s+1)^(0+128),w
  6195  07CD  1D03               	btfss	3,2
  6196  07CE  2FD1               	goto	l3969
  6197  07CF  302B               	movlw	43
  6198  07D0  2FD2               	goto	L1
  6199  07D1                     l3969:	
  6200  07D1  302D               	movlw	45
  6201  07D2                     L1:	
  6202  07D2  00CE               	movwf	_dtoa$755^(0+128)
  6203  07D3  3000               	movlw	0
  6204  07D4  00CF               	movwf	(_dtoa$755^(0+128)+1)
  6205  07D5  084E               	movf	_dtoa$755^(0+128),w
  6206  07D6  0020               	movlb	0	; select bank0
  6207  07D7  00CC               	movwf	??_dtoa
  6208  07D8  0021               	movlb	1	; select bank1
  6209  07D9  085F               	movf	dtoa@i^(0+128),w
  6210  07DA  3E2C               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6211  07DB  0086               	movwf	6
  6212  07DC  3001               	movlw	1	; select bank2/3
  6213  07DD  0087               	movwf	7
  6214  07DE  0020               	movlb	0	; select bank0
  6215  07DF  084C               	movf	??_dtoa,w
  6216  07E0  0081               	movwf	1
  6217  07E1                     l3973:	
  6218                           
  6219                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  6220  07E1  0021               	movlb	1	; select bank1
  6221  07E2  085F               	movf	dtoa@i^(0+128),w
  6222  07E3  3E2C               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6223  07E4  0020               	movlb	0	; select bank0
  6224  07E5  00CC               	movwf	??_dtoa
  6225  07E6  084C               	movf	??_dtoa,w
  6226  07E7  00BB               	movwf	pad@buf
  6227  07E8  0021               	movlb	1	; select bank1
  6228  07E9  0854               	movf	(dtoa@w+1)^(0+128),w
  6229  07EA  0020               	movlb	0	; select bank0
  6230  07EB  00BD               	movwf	pad@p+1
  6231  07EC  0021               	movlb	1	; select bank1
  6232  07ED  0853               	movf	dtoa@w^(0+128),w
  6233  07EE  0020               	movlb	0	; select bank0
  6234  07EF  00BC               	movwf	pad@p
  6235  07F0  0021               	movlb	1	; select bank1
  6236  07F1  0850               	movf	dtoa@fp^(0+128),w
  6237  07F2  3188  2094         	fcall	_pad
  6238  07F4  0020               	movlb	0	; select bank0
  6239  07F5  083C               	movf	?_pad+1,w
  6240  07F6  00C5               	movwf	?_dtoa+1
  6241  07F7  083B               	movf	?_pad,w
  6242  07F8  00C4               	movwf	?_dtoa
  6243  07F9  0008               	return
  6244  07FA                     __end_of_dtoa:	
  6245                           
  6246                           	psect	text8
  6247  0894                     __ptext8:	
  6248 ;; *************** function _pad *****************
  6249 ;; Defined at:
  6250 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6251 ;; Parameters:    Size  Location     Type
  6252 ;;  fp              1    wreg     PTR struct _IO_FILE
  6253 ;;		 -> NULL(0), 
  6254 ;;  buf             1   27[BANK0 ] PTR unsigned char 
  6255 ;;		 -> dbuf(32), 
  6256 ;;  p               2   28[BANK0 ] int 
  6257 ;; Auto vars:     Size  Location     Type
  6258 ;;  fp              1   35[BANK0 ] PTR struct _IO_FILE
  6259 ;;		 -> NULL(0), 
  6260 ;;  w               2   33[BANK0 ] int 
  6261 ;;  i               2   31[BANK0 ] int 
  6262 ;; Return value:  Size  Location     Type
  6263 ;;                  2   27[BANK0 ] int 
  6264 ;; Registers used:
  6265 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6266 ;; Tracked objects:
  6267 ;;		On entry : 0/0
  6268 ;;		On exit  : 0/0
  6269 ;;		Unchanged: 0/0
  6270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6271 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6272 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6273 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6274 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6275 ;;Total ram usage:        9 bytes
  6276 ;; Hardware stack levels used:    1
  6277 ;; Hardware stack levels required when called:    9
  6278 ;; This function calls:
  6279 ;;		_fputc
  6280 ;;		_fputs
  6281 ;;		_strlen
  6282 ;; This function is called by:
  6283 ;;		_dtoa
  6284 ;; This function uses a non-reentrant model
  6285 ;;
  6286                           
  6287                           
  6288                           ;psect for function _pad
  6289  0894                     _pad:	
  6290                           
  6291                           ;incstack = 0
  6292                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6293                           ;pad@fp stored from wreg
  6294  0894  0020               	movlb	0	; select bank0
  6295  0895  00C3               	movwf	pad@fp
  6296                           
  6297                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  6298  0896  1C64               	btfss	_flags,0
  6299  0897  28A3               	goto	l3829
  6300                           
  6301                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  6302  0898  083B               	movf	pad@buf,w
  6303  0899  00B2               	movwf	fputs@s
  6304  089A  3001               	movlw	1
  6305  089B  00B3               	movwf	fputs@s+1
  6306  089C  0843               	movf	pad@fp,w
  6307  089D  00BE               	movwf	??_pad
  6308  089E  083E               	movf	??_pad,w
  6309  089F  00B4               	movwf	fputs@fp
  6310  08A0  3197  2741  3188   	fcall	_fputs
  6311  08A3                     l3829:	
  6312                           
  6313                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  6314  08A3  0020               	movlb	0	; select bank0
  6315  08A4  1BBD               	btfsc	pad@p+1,7
  6316  08A5  28AB               	goto	l3833
  6317  08A6  083D               	movf	pad@p+1,w
  6318  08A7  00C2               	movwf	pad@w+1
  6319  08A8  083C               	movf	pad@p,w
  6320  08A9  00C1               	movwf	pad@w
  6321  08AA  28AD               	goto	l492
  6322  08AB                     l3833:	
  6323  08AB  01C1               	clrf	pad@w
  6324  08AC  01C2               	clrf	pad@w+1
  6325  08AD                     l492:	
  6326                           
  6327                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  6328  08AD  01BF               	clrf	pad@i
  6329  08AE  01C0               	clrf	pad@i+1
  6330  08AF                     l3839:	
  6331                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  6332                           
  6333                           
  6334                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  6335  08AF  0840               	movf	pad@i+1,w
  6336  08B0  3A80               	xorlw	128
  6337  08B1  00BE               	movwf	??_pad
  6338  08B2  0842               	movf	pad@w+1,w
  6339  08B3  3A80               	xorlw	128
  6340  08B4  023E               	subwf	??_pad,w
  6341  08B5  1D03               	skipz
  6342  08B6  28B9               	goto	u5035
  6343  08B7  0841               	movf	pad@w,w
  6344  08B8  023F               	subwf	pad@i,w
  6345  08B9                     u5035:	
  6346  08B9  1803               	btfsc	3,0
  6347  08BA  28CD               	goto	l495
  6348                           
  6349                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  6350  08BB  3020               	movlw	32
  6351  08BC  0020               	movlb	0	; select bank0
  6352  08BD  00AA               	movwf	fputc@c
  6353  08BE  3000               	movlw	0
  6354  08BF  00AB               	movwf	fputc@c+1
  6355  08C0  0843               	movf	pad@fp,w
  6356  08C1  00BE               	movwf	??_pad
  6357  08C2  083E               	movf	??_pad,w
  6358  08C3  00AC               	movwf	fputc@fp
  6359  08C4  3188  2012  3188   	fcall	_fputc
  6360                           
  6361                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  6362  08C7  3001               	movlw	1
  6363  08C8  0020               	movlb	0	; select bank0
  6364  08C9  07BF               	addwf	pad@i,f
  6365  08CA  3000               	movlw	0
  6366  08CB  3DC0               	addwfc	pad@i+1,f
  6367  08CC  28AF               	goto	l3839
  6368  08CD                     l495:	
  6369                           
  6370                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  6371  08CD  0020               	movlb	0	; select bank0
  6372  08CE  1864               	btfsc	_flags,0
  6373  08CF  28DB               	goto	l3843
  6374                           
  6375                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  6376  08D0  083B               	movf	pad@buf,w
  6377  08D1  00B2               	movwf	fputs@s
  6378  08D2  3001               	movlw	1
  6379  08D3  00B3               	movwf	fputs@s+1
  6380  08D4  0843               	movf	pad@fp,w
  6381  08D5  00BE               	movwf	??_pad
  6382  08D6  083E               	movf	??_pad,w
  6383  08D7  00B4               	movwf	fputs@fp
  6384  08D8  3197  2741  3188   	fcall	_fputs
  6385  08DB                     l3843:	
  6386                           
  6387                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  6388  08DB  0020               	movlb	0	; select bank0
  6389  08DC  083B               	movf	pad@buf,w
  6390  08DD  3196  26AA         	fcall	_strlen
  6391  08DF  0020               	movlb	0	; select bank0
  6392  08E0  0841               	movf	pad@w,w
  6393  08E1  0728               	addwf	?_strlen,w
  6394  08E2  00BB               	movwf	?_pad
  6395  08E3  0842               	movf	pad@w+1,w
  6396  08E4  3D29               	addwfc	?_strlen+1,w
  6397  08E5  00BC               	movwf	?_pad+1
  6398  08E6  0008               	return
  6399  08E7                     __end_of_pad:	
  6400                           
  6401                           	psect	text9
  6402  16AA                     __ptext9:	
  6403 ;; *************** function _strlen *****************
  6404 ;; Defined at:
  6405 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  6406 ;; Parameters:    Size  Location     Type
  6407 ;;  s               1    wreg     PTR const unsigned char 
  6408 ;;		 -> dbuf(32), 
  6409 ;; Auto vars:     Size  Location     Type
  6410 ;;  s               1   12[BANK0 ] PTR const unsigned char 
  6411 ;;		 -> dbuf(32), 
  6412 ;;  a               1   11[BANK0 ] PTR const unsigned char 
  6413 ;;		 -> dbuf(32), 
  6414 ;; Return value:  Size  Location     Type
  6415 ;;                  2    8[BANK0 ] unsigned int 
  6416 ;; Registers used:
  6417 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6418 ;; Tracked objects:
  6419 ;;		On entry : 0/0
  6420 ;;		On exit  : 0/0
  6421 ;;		Unchanged: 0/0
  6422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6423 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6424 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6425 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6426 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6427 ;;Total ram usage:        5 bytes
  6428 ;; Hardware stack levels used:    1
  6429 ;; Hardware stack levels required when called:    5
  6430 ;; This function calls:
  6431 ;;		Nothing
  6432 ;; This function is called by:
  6433 ;;		_pad
  6434 ;; This function uses a non-reentrant model
  6435 ;;
  6436                           
  6437                           
  6438                           ;psect for function _strlen
  6439  16AA                     _strlen:	
  6440                           
  6441                           ;incstack = 0
  6442                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  6443                           ;strlen@s stored from wreg
  6444  16AA  0020               	movlb	0	; select bank0
  6445  16AB  00AC               	movwf	strlen@s
  6446  16AC  082C               	movf	strlen@s,w
  6447  16AD  00AA               	movwf	??_strlen
  6448  16AE  082A               	movf	??_strlen,w
  6449  16AF  00AB               	movwf	strlen@a
  6450  16B0                     l3819:	
  6451  16B0  082C               	movf	strlen@s,w
  6452  16B1  0086               	movwf	6
  6453  16B2  3001               	movlw	1	; select bank2/3
  6454  16B3  0087               	movwf	7
  6455  16B4  0801               	movf	1,w
  6456  16B5  1903               	btfsc	3,2
  6457  16B6  2EBC               	goto	l3821
  6458  16B7  3001               	movlw	1
  6459  16B8  00AA               	movwf	??_strlen
  6460  16B9  082A               	movf	??_strlen,w
  6461  16BA  07AC               	addwf	strlen@s,f
  6462  16BB  2EB0               	goto	l3819
  6463  16BC                     l3821:	
  6464  16BC  082B               	movf	strlen@a,w
  6465  16BD  022C               	subwf	strlen@s,w
  6466  16BE  00A8               	movwf	?_strlen
  6467  16BF  01A9               	clrf	?_strlen+1
  6468  16C0  1BA8               	btfsc	?_strlen,7
  6469  16C1  03A9               	decf	?_strlen+1,f
  6470  16C2  0008               	return
  6471  16C3                     __end_of_strlen:	
  6472                           
  6473                           	psect	text10
  6474  1741                     __ptext10:	
  6475 ;; *************** function _fputs *****************
  6476 ;; Defined at:
  6477 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  6478 ;; Parameters:    Size  Location     Type
  6479 ;;  s               2   18[BANK0 ] PTR const unsigned char 
  6480 ;;		 -> dbuf(32), STR_2(3), 
  6481 ;;  fp              1   20[BANK0 ] PTR struct _IO_FILE
  6482 ;;		 -> NULL(0), 
  6483 ;; Auto vars:     Size  Location     Type
  6484 ;;  i               2   25[BANK0 ] int 
  6485 ;;  c               1   24[BANK0 ] unsigned char 
  6486 ;; Return value:  Size  Location     Type
  6487 ;;                  2   18[BANK0 ] int 
  6488 ;; Registers used:
  6489 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6490 ;; Tracked objects:
  6491 ;;		On entry : 0/0
  6492 ;;		On exit  : 0/0
  6493 ;;		Unchanged: 0/0
  6494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6495 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6496 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6497 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6498 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6499 ;;Total ram usage:        9 bytes
  6500 ;; Hardware stack levels used:    1
  6501 ;; Hardware stack levels required when called:    8
  6502 ;; This function calls:
  6503 ;;		_fputc
  6504 ;; This function is called by:
  6505 ;;		_pad
  6506 ;;		_puts
  6507 ;; This function uses a non-reentrant model
  6508 ;;
  6509                           
  6510                           
  6511                           ;psect for function _fputs
  6512  1741                     _fputs:	
  6513                           
  6514                           ;incstack = 0
  6515                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6516  1741  0020               	movlb	0	; select bank0
  6517  1742  01B9               	clrf	fputs@i
  6518  1743  01BA               	clrf	fputs@i+1
  6519  1744                     l3809:	
  6520  1744  0832               	movf	fputs@s,w
  6521  1745  0739               	addwf	fputs@i,w
  6522  1746  0084               	movwf	4
  6523  1747  0833               	movf	fputs@s+1,w
  6524  1748  3D3A               	addwfc	fputs@i+1,w
  6525  1749  0085               	movwf	5
  6526  174A  0800               	movf	0,w	;code access
  6527  174B  00B5               	movwf	??_fputs
  6528  174C  0835               	movf	??_fputs,w
  6529  174D  00B8               	movwf	fputs@c
  6530  174E  0838               	movf	fputs@c,w
  6531  174F  1903               	btfsc	3,2
  6532  1750  2F65               	goto	l3811
  6533  1751  0838               	movf	fputs@c,w
  6534  1752  00B5               	movwf	??_fputs
  6535  1753  01B6               	clrf	??_fputs+1
  6536  1754  0835               	movf	??_fputs,w
  6537  1755  00AA               	movwf	fputc@c
  6538  1756  0836               	movf	??_fputs+1,w
  6539  1757  00AB               	movwf	fputc@c+1
  6540  1758  0834               	movf	fputs@fp,w
  6541  1759  00B7               	movwf	??_fputs+2
  6542  175A  0837               	movf	??_fputs+2,w
  6543  175B  00AC               	movwf	fputc@fp
  6544  175C  3188  2012  3197   	fcall	_fputc
  6545  175F  3001               	movlw	1
  6546  1760  0020               	movlb	0	; select bank0
  6547  1761  07B9               	addwf	fputs@i,f
  6548  1762  3000               	movlw	0
  6549  1763  3DBA               	addwfc	fputs@i+1,f
  6550  1764  2F44               	goto	l3809
  6551  1765                     l3811:	
  6552  1765  083A               	movf	fputs@i+1,w
  6553  1766  00B3               	movwf	?_fputs+1
  6554  1767  0839               	movf	fputs@i,w
  6555  1768  00B2               	movwf	?_fputs
  6556  1769  0008               	return
  6557  176A                     __end_of_fputs:	
  6558                           
  6559                           	psect	text11
  6560  0812                     __ptext11:	
  6561 ;; *************** function _fputc *****************
  6562 ;; Defined at:
  6563 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  6564 ;; Parameters:    Size  Location     Type
  6565 ;;  c               2   10[BANK0 ] int 
  6566 ;;  fp              1   12[BANK0 ] PTR struct _IO_FILE
  6567 ;;		 -> NULL(0), 
  6568 ;; Auto vars:     Size  Location     Type
  6569 ;;		None
  6570 ;; Return value:  Size  Location     Type
  6571 ;;                  2   10[BANK0 ] int 
  6572 ;; Registers used:
  6573 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6574 ;; Tracked objects:
  6575 ;;		On entry : 0/0
  6576 ;;		On exit  : 0/0
  6577 ;;		Unchanged: 0/0
  6578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6579 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6581 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6582 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6583 ;;Total ram usage:        8 bytes
  6584 ;; Hardware stack levels used:    1
  6585 ;; Hardware stack levels required when called:    7
  6586 ;; This function calls:
  6587 ;;		_putch
  6588 ;; This function is called by:
  6589 ;;		_pad
  6590 ;;		_vfpfcnvrt
  6591 ;;		_fputs
  6592 ;;		_puts
  6593 ;; This function uses a non-reentrant model
  6594 ;;
  6595                           
  6596                           
  6597                           ;psect for function _fputc
  6598  0812                     _fputc:	
  6599                           
  6600                           ;incstack = 0
  6601                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6602  0812  0020               	movlb	0	; select bank0
  6603  0813  082C               	movf	fputc@fp,w
  6604  0814  1D03               	btfss	3,2
  6605  0815  082C               	movf	fputc@fp,w
  6606  0816  1D03               	btfss	3,2
  6607  0817  281D               	goto	l3793
  6608  0818  082A               	movf	fputc@c,w
  6609  0819  3195  25EA  3188   	fcall	_putch
  6610  081C  2849               	goto	l3799
  6611  081D                     l3793:	
  6612  081D  082C               	movf	fputc@fp,w
  6613  081E  3E03               	addlw	3
  6614  081F  0086               	movwf	6
  6615  0820  0187               	clrf	7
  6616  0821  0016               	moviw fsr1++
  6617  0822  0401               	iorwf	1,w
  6618  0823  1903               	btfsc	3,2
  6619  0824  2840               	goto	l3797
  6620  0825  082C               	movf	fputc@fp,w
  6621  0826  3E03               	addlw	3
  6622  0827  0086               	movwf	6
  6623  0828  0187               	clrf	7
  6624  0829  3F40               	moviw [0]fsr1
  6625  082A  00AD               	movwf	??_fputc
  6626  082B  3F41               	moviw [1]fsr1
  6627  082C  00AE               	movwf	??_fputc+1
  6628  082D  0A2C               	incf	fputc@fp,w
  6629  082E  0086               	movwf	6
  6630  082F  0187               	clrf	7
  6631  0830  3F40               	moviw [0]fsr1
  6632  0831  00AF               	movwf	??_fputc+2
  6633  0832  3F41               	moviw [1]fsr1
  6634  0833  00B0               	movwf	??_fputc+3
  6635  0834  0830               	movf	??_fputc+3,w
  6636  0835  3A80               	xorlw	128
  6637  0836  00B1               	movwf	??_fputc+4
  6638  0837  082E               	movf	??_fputc+1,w
  6639  0838  3A80               	xorlw	128
  6640  0839  0231               	subwf	??_fputc+4,w
  6641  083A  1D03               	skipz
  6642  083B  283E               	goto	u4985
  6643  083C  082D               	movf	??_fputc,w
  6644  083D  022F               	subwf	??_fputc+2,w
  6645  083E                     u4985:	
  6646  083E  1803               	skipnc
  6647  083F  2849               	goto	l3799
  6648  0840                     l3797:	
  6649  0840  0020               	movlb	0	; select bank0
  6650  0841  0A2C               	incf	fputc@fp,w
  6651  0842  0086               	movwf	6
  6652  0843  0187               	clrf	7
  6653  0844  3001               	movlw	1
  6654  0845  0781               	addwf	1,f
  6655  0846  3141               	addfsr 1,1
  6656  0847  1803               	skipnc
  6657  0848  0A81               	incf	1,f
  6658  0849                     l3799:	
  6659  0849  0020               	movlb	0	; select bank0
  6660  084A  082A               	movf	fputc@c,w
  6661  084B  00AD               	movwf	??_fputc
  6662  084C  01AE               	clrf	??_fputc+1
  6663  084D  082D               	movf	??_fputc,w
  6664  084E  00AA               	movwf	?_fputc
  6665  084F  082E               	movf	??_fputc+1,w
  6666  0850  00AB               	movwf	?_fputc+1
  6667  0851  0008               	return
  6668  0852                     __end_of_fputc:	
  6669                           
  6670                           	psect	text12
  6671  15EA                     __ptext12:	
  6672 ;; *************** function _putch *****************
  6673 ;; Defined at:
  6674 ;;		line 151 in file "mcc_generated_files/eusart.c"
  6675 ;; Parameters:    Size  Location     Type
  6676 ;;  txData          1    wreg     unsigned char 
  6677 ;; Auto vars:     Size  Location     Type
  6678 ;;  txData          1    9[BANK0 ] unsigned char 
  6679 ;; Return value:  Size  Location     Type
  6680 ;;                  1    wreg      void 
  6681 ;; Registers used:
  6682 ;;		wreg, status,2, status,0, pclath, cstack
  6683 ;; Tracked objects:
  6684 ;;		On entry : 0/0
  6685 ;;		On exit  : 0/0
  6686 ;;		Unchanged: 0/0
  6687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6689 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6691 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6692 ;;Total ram usage:        1 bytes
  6693 ;; Hardware stack levels used:    1
  6694 ;; Hardware stack levels required when called:    6
  6695 ;; This function calls:
  6696 ;;		_EUSART_Write
  6697 ;; This function is called by:
  6698 ;;		_fputc
  6699 ;; This function uses a non-reentrant model
  6700 ;;
  6701                           
  6702                           
  6703                           ;psect for function _putch
  6704  15EA                     _putch:	
  6705                           
  6706                           ;incstack = 0
  6707                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  6708                           ;putch@txData stored from wreg
  6709  15EA  0020               	movlb	0	; select bank0
  6710  15EB  00A9               	movwf	putch@txData
  6711                           
  6712                           ;mcc_generated_files/eusart.c: 151: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 152: {;mcc_generated_files/eusart.c: 153:     EUSART_Write(txData);
  6713  15EC  0829               	movf	putch@txData,w
  6714  15ED  3195  25FF         	fcall	_EUSART_Write
  6715  15EF  0008               	return
  6716  15F0                     __end_of_putch:	
  6717                           
  6718                           	psect	text13
  6719  15FF                     __ptext13:	
  6720 ;; *************** function _EUSART_Write *****************
  6721 ;; Defined at:
  6722 ;;		line 137 in file "mcc_generated_files/eusart.c"
  6723 ;; Parameters:    Size  Location     Type
  6724 ;;  txData          1    wreg     unsigned char 
  6725 ;; Auto vars:     Size  Location     Type
  6726 ;;  txData          1    8[BANK0 ] unsigned char 
  6727 ;; Return value:  Size  Location     Type
  6728 ;;                  1    wreg      void 
  6729 ;; Registers used:
  6730 ;;		wreg
  6731 ;; Tracked objects:
  6732 ;;		On entry : 0/0
  6733 ;;		On exit  : 0/0
  6734 ;;		Unchanged: 0/0
  6735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6737 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6739 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6740 ;;Total ram usage:        1 bytes
  6741 ;; Hardware stack levels used:    1
  6742 ;; Hardware stack levels required when called:    5
  6743 ;; This function calls:
  6744 ;;		Nothing
  6745 ;; This function is called by:
  6746 ;;		_putch
  6747 ;;		_setCursor
  6748 ;;		_backlightBrightness
  6749 ;; This function uses a non-reentrant model
  6750 ;;
  6751                           
  6752                           
  6753                           ;psect for function _EUSART_Write
  6754  15FF                     _EUSART_Write:	
  6755                           
  6756                           ;incstack = 0
  6757                           ; Regs used in _EUSART_Write: [wreg]
  6758                           ;EUSART_Write@txData stored from wreg
  6759  15FF  0020               	movlb	0	; select bank0
  6760  1600  00A8               	movwf	EUSART_Write@txData
  6761  1601                     l69:	
  6762                           ;mcc_generated_files/eusart.c: 140:     {;mcc_generated_files/eusart.c: 141:     }
  6763                           
  6764                           
  6765                           ;mcc_generated_files/eusart.c: 139:     while(0 == PIR1bits.TXIF)
  6766  1601  1E10               	btfss	16,4	;volatile
  6767  1602  2E01               	goto	l69
  6768                           
  6769                           ;mcc_generated_files/eusart.c: 143:     TX1REG = txData;
  6770  1603  0828               	movf	EUSART_Write@txData,w
  6771  1604  0023               	movlb	3	; select bank3
  6772  1605  009A               	movwf	26	;volatile
  6773  1606  0008               	return
  6774  1607                     __end_of_EUSART_Write:	
  6775                           
  6776                           	psect	text14
  6777  1691                     __ptext14:	
  6778 ;; *************** function _abs *****************
  6779 ;; Defined at:
  6780 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  6781 ;; Parameters:    Size  Location     Type
  6782 ;;  a               2   27[BANK0 ] int 
  6783 ;; Auto vars:     Size  Location     Type
  6784 ;;		None
  6785 ;; Return value:  Size  Location     Type
  6786 ;;                  2   27[BANK0 ] int 
  6787 ;; Registers used:
  6788 ;;		wreg, status,2, status,0
  6789 ;; Tracked objects:
  6790 ;;		On entry : 0/0
  6791 ;;		On exit  : 0/0
  6792 ;;		Unchanged: 0/0
  6793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6794 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6796 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6797 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6798 ;;Total ram usage:        4 bytes
  6799 ;; Hardware stack levels used:    1
  6800 ;; Hardware stack levels required when called:    5
  6801 ;; This function calls:
  6802 ;;		Nothing
  6803 ;; This function is called by:
  6804 ;;		_dtoa
  6805 ;; This function uses a non-reentrant model
  6806 ;;
  6807                           
  6808                           
  6809                           ;psect for function _abs
  6810  1691                     _abs:	
  6811                           
  6812                           ;incstack = 0
  6813                           ; Regs used in _abs: [wreg+status,2+status,0]
  6814  1691  0020               	movlb	0	; select bank0
  6815  1692  083C               	movf	abs@a+1,w
  6816  1693  3A80               	xorlw	128
  6817  1694  00BD               	movwf	??_abs
  6818  1695  3080               	movlw	128
  6819  1696  023D               	subwf	??_abs,w
  6820  1697  1D03               	skipz
  6821  1698  2E9B               	goto	u5055
  6822  1699  3001               	movlw	1
  6823  169A  023B               	subwf	abs@a,w
  6824  169B                     u5055:	
  6825  169B  1803               	skipnc
  6826  169C  0008               	return
  6827  169D  0020               	movlb	0	; select bank0
  6828  169E  093B               	comf	abs@a,w
  6829  169F  00BD               	movwf	??_abs
  6830  16A0  093C               	comf	abs@a+1,w
  6831  16A1  00BE               	movwf	??_abs+1
  6832  16A2  0ABD               	incf	??_abs,f
  6833  16A3  1903               	skipnz
  6834  16A4  0ABE               	incf	??_abs+1,f
  6835  16A5  083D               	movf	??_abs,w
  6836  16A6  00BB               	movwf	?_abs
  6837  16A7  083E               	movf	??_abs+1,w
  6838  16A8  00BC               	movwf	?_abs+1
  6839  16A9  0008               	return
  6840  16AA                     __end_of_abs:	
  6841                           
  6842                           	psect	text15
  6843  0A5F                     __ptext15:	
  6844 ;; *************** function ___aomod *****************
  6845 ;; Defined at:
  6846 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  6847 ;; Parameters:    Size  Location     Type
  6848 ;;  divisor         8    8[BANK0 ] long long 
  6849 ;;  dividend        8   16[BANK0 ] long long 
  6850 ;; Auto vars:     Size  Location     Type
  6851 ;;  sign            1   26[BANK0 ] unsigned char 
  6852 ;;  counter         1   25[BANK0 ] unsigned char 
  6853 ;; Return value:  Size  Location     Type
  6854 ;;                  8    8[BANK0 ] long long 
  6855 ;; Registers used:
  6856 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6857 ;; Tracked objects:
  6858 ;;		On entry : 0/0
  6859 ;;		On exit  : 0/0
  6860 ;;		Unchanged: 0/0
  6861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6862 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6863 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6864 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6865 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6866 ;;Total ram usage:       19 bytes
  6867 ;; Hardware stack levels used:    1
  6868 ;; Hardware stack levels required when called:    5
  6869 ;; This function calls:
  6870 ;;		Nothing
  6871 ;; This function is called by:
  6872 ;;		_dtoa
  6873 ;; This function uses a non-reentrant model
  6874 ;;
  6875                           
  6876                           
  6877                           ;psect for function ___aomod
  6878  0A5F                     ___aomod:	
  6879                           
  6880                           ;incstack = 0
  6881                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  6882  0A5F  0020               	movlb	0	; select bank0
  6883  0A60  01BA               	clrf	___aomod@sign
  6884  0A61  3030               	movlw	low ___aomod@dividend
  6885  0A62  0086               	movwf	6
  6886  0A63  3000               	movlw	high ___aomod@dividend
  6887  0A64  0087               	movwf	7
  6888  0A65  3F47               	moviw [7]fsr1
  6889  0A66  00B8               	movwf	??___aomod
  6890  0A67  1FB8               	btfss	??___aomod,7
  6891  0A68  2A8B               	goto	l3895
  6892  0A69  0020               	movlb	0	; select bank0
  6893  0A6A  09B0               	comf	___aomod@dividend,f
  6894  0A6B  09B1               	comf	___aomod@dividend+1,f
  6895  0A6C  09B2               	comf	___aomod@dividend+2,f
  6896  0A6D  09B3               	comf	___aomod@dividend+3,f
  6897  0A6E  09B4               	comf	___aomod@dividend+4,f
  6898  0A6F  09B5               	comf	___aomod@dividend+5,f
  6899  0A70  09B6               	comf	___aomod@dividend+6,f
  6900  0A71  09B7               	comf	___aomod@dividend+7,f
  6901  0A72  0AB0               	incf	___aomod@dividend,f
  6902  0A73  1D03               	skipz
  6903  0A74  2A88               	goto	u518lld
  6904  0A75  0AB1               	incf	___aomod@dividend+1,f
  6905  0A76  1D03               	skipz
  6906  0A77  2A88               	goto	u518lld
  6907  0A78  0AB2               	incf	___aomod@dividend+2,f
  6908  0A79  1D03               	skipz
  6909  0A7A  2A88               	goto	u518lld
  6910  0A7B  0AB3               	incf	___aomod@dividend+3,f
  6911  0A7C  1D03               	skipz
  6912  0A7D  2A88               	goto	u518lld
  6913  0A7E  0AB4               	incf	___aomod@dividend+4,f
  6914  0A7F  1D03               	skipz
  6915  0A80  2A88               	goto	u518lld
  6916  0A81  0AB5               	incf	___aomod@dividend+5,f
  6917  0A82  1D03               	skipz
  6918  0A83  2A88               	goto	u518lld
  6919  0A84  0AB6               	incf	___aomod@dividend+6,f
  6920  0A85  1D03               	skipz
  6921  0A86  2A88               	goto	u518lld
  6922  0A87  0AB7               	incf	___aomod@dividend+7,f
  6923  0A88                     u518lld:	
  6924  0A88  0020               	movlb	0	; select bank0
  6925  0A89  01BA               	clrf	___aomod@sign
  6926  0A8A  0ABA               	incf	___aomod@sign,f
  6927  0A8B                     l3895:	
  6928  0A8B  3028               	movlw	low ___aomod@divisor
  6929  0A8C  0086               	movwf	6
  6930  0A8D  3000               	movlw	high ___aomod@divisor
  6931  0A8E  0087               	movwf	7
  6932  0A8F  3F47               	moviw [7]fsr1
  6933  0A90  0020               	movlb	0	; select bank0
  6934  0A91  00B8               	movwf	??___aomod
  6935  0A92  1FB8               	btfss	??___aomod,7
  6936  0A93  2AB3               	goto	l3899
  6937  0A94  0020               	movlb	0	; select bank0
  6938  0A95  09A8               	comf	___aomod@divisor,f
  6939  0A96  09A9               	comf	___aomod@divisor+1,f
  6940  0A97  09AA               	comf	___aomod@divisor+2,f
  6941  0A98  09AB               	comf	___aomod@divisor+3,f
  6942  0A99  09AC               	comf	___aomod@divisor+4,f
  6943  0A9A  09AD               	comf	___aomod@divisor+5,f
  6944  0A9B  09AE               	comf	___aomod@divisor+6,f
  6945  0A9C  09AF               	comf	___aomod@divisor+7,f
  6946  0A9D  0AA8               	incf	___aomod@divisor,f
  6947  0A9E  1D03               	skipz
  6948  0A9F  2AB3               	goto	l3899
  6949  0AA0  0AA9               	incf	___aomod@divisor+1,f
  6950  0AA1  1D03               	skipz
  6951  0AA2  2AB3               	goto	l3899
  6952  0AA3  0AAA               	incf	___aomod@divisor+2,f
  6953  0AA4  1D03               	skipz
  6954  0AA5  2AB3               	goto	l3899
  6955  0AA6  0AAB               	incf	___aomod@divisor+3,f
  6956  0AA7  1D03               	skipz
  6957  0AA8  2AB3               	goto	l3899
  6958  0AA9  0AAC               	incf	___aomod@divisor+4,f
  6959  0AAA  1D03               	skipz
  6960  0AAB  2AB3               	goto	l3899
  6961  0AAC  0AAD               	incf	___aomod@divisor+5,f
  6962  0AAD  1D03               	skipz
  6963  0AAE  2AB3               	goto	l3899
  6964  0AAF  0AAE               	incf	___aomod@divisor+6,f
  6965  0AB0  1D03               	skipz
  6966  0AB1  2AB3               	goto	l3899
  6967  0AB2  0AAF               	incf	___aomod@divisor+7,f
  6968  0AB3                     l3899:	
  6969  0AB3  0020               	movlb	0	; select bank0
  6970  0AB4  0828               	movf	___aomod@divisor,w
  6971  0AB5  0429               	iorwf	___aomod@divisor+1,w
  6972  0AB6  042A               	iorwf	___aomod@divisor+2,w
  6973  0AB7  042B               	iorwf	___aomod@divisor+3,w
  6974  0AB8  042C               	iorwf	___aomod@divisor+4,w
  6975  0AB9  042D               	iorwf	___aomod@divisor+5,w
  6976  0ABA  042E               	iorwf	___aomod@divisor+6,w
  6977  0ABB  042F               	iorwf	___aomod@divisor+7,w
  6978  0ABC  1903               	skipnz
  6979  0ABD  2B0B               	goto	l3915
  6980  0ABE  01B9               	clrf	___aomod@counter
  6981  0ABF  0AB9               	incf	___aomod@counter,f
  6982  0AC0                     l3907:	
  6983  0AC0  1BAF               	btfsc	___aomod@divisor+7,7
  6984  0AC1  2ACF               	goto	l3909
  6985  0AC2  35A8               	lslf	___aomod@divisor,f
  6986  0AC3  0DA9               	rlf	___aomod@divisor+1,f
  6987  0AC4  0DAA               	rlf	___aomod@divisor+2,f
  6988  0AC5  0DAB               	rlf	___aomod@divisor+3,f
  6989  0AC6  0DAC               	rlf	___aomod@divisor+4,f
  6990  0AC7  0DAD               	rlf	___aomod@divisor+5,f
  6991  0AC8  0DAE               	rlf	___aomod@divisor+6,f
  6992  0AC9  0DAF               	rlf	___aomod@divisor+7,f
  6993  0ACA  3001               	movlw	1
  6994  0ACB  00B8               	movwf	??___aomod
  6995  0ACC  0838               	movf	??___aomod,w
  6996  0ACD  07B9               	addwf	___aomod@counter,f
  6997  0ACE  2AC0               	goto	l3907
  6998  0ACF                     l3909:	
  6999  0ACF  082F               	movf	___aomod@divisor+7,w
  7000  0AD0  0237               	subwf	___aomod@dividend+7,w
  7001  0AD1  1D03               	skipz
  7002  0AD2  2AED               	goto	u5235
  7003  0AD3  082E               	movf	___aomod@divisor+6,w
  7004  0AD4  0236               	subwf	___aomod@dividend+6,w
  7005  0AD5  1D03               	skipz
  7006  0AD6  2AED               	goto	u5235
  7007  0AD7  082D               	movf	___aomod@divisor+5,w
  7008  0AD8  0235               	subwf	___aomod@dividend+5,w
  7009  0AD9  1D03               	skipz
  7010  0ADA  2AED               	goto	u5235
  7011  0ADB  082C               	movf	___aomod@divisor+4,w
  7012  0ADC  0234               	subwf	___aomod@dividend+4,w
  7013  0ADD  1D03               	skipz
  7014  0ADE  2AED               	goto	u5235
  7015  0ADF  082B               	movf	___aomod@divisor+3,w
  7016  0AE0  0233               	subwf	___aomod@dividend+3,w
  7017  0AE1  1D03               	skipz
  7018  0AE2  2AED               	goto	u5235
  7019  0AE3  082A               	movf	___aomod@divisor+2,w
  7020  0AE4  0232               	subwf	___aomod@dividend+2,w
  7021  0AE5  1D03               	skipz
  7022  0AE6  2AED               	goto	u5235
  7023  0AE7  0829               	movf	___aomod@divisor+1,w
  7024  0AE8  0231               	subwf	___aomod@dividend+1,w
  7025  0AE9  1D03               	skipz
  7026  0AEA  2AED               	goto	u5235
  7027  0AEB  0828               	movf	___aomod@divisor,w
  7028  0AEC  0230               	subwf	___aomod@dividend,w
  7029  0AED                     u5235:	
  7030  0AED  1C03               	skipc
  7031  0AEE  2AFF               	goto	l3913
  7032  0AEF  0828               	movf	___aomod@divisor,w
  7033  0AF0  02B0               	subwf	___aomod@dividend,f
  7034  0AF1  0829               	movf	___aomod@divisor+1,w
  7035  0AF2  3BB1               	subwfb	___aomod@dividend+1,f
  7036  0AF3  082A               	movf	___aomod@divisor+2,w
  7037  0AF4  3BB2               	subwfb	___aomod@dividend+2,f
  7038  0AF5  082B               	movf	___aomod@divisor+3,w
  7039  0AF6  3BB3               	subwfb	___aomod@dividend+3,f
  7040  0AF7  082C               	movf	___aomod@divisor+4,w
  7041  0AF8  3BB4               	subwfb	___aomod@dividend+4,f
  7042  0AF9  082D               	movf	___aomod@divisor+5,w
  7043  0AFA  3BB5               	subwfb	___aomod@dividend+5,f
  7044  0AFB  082E               	movf	___aomod@divisor+6,w
  7045  0AFC  3BB6               	subwfb	___aomod@dividend+6,f
  7046  0AFD  082F               	movf	___aomod@divisor+7,w
  7047  0AFE  3BB7               	subwfb	___aomod@dividend+7,f
  7048  0AFF                     l3913:	
  7049  0AFF  36AF               	lsrf	___aomod@divisor+7,f
  7050  0B00  0CAE               	rrf	___aomod@divisor+6,f
  7051  0B01  0CAD               	rrf	___aomod@divisor+5,f
  7052  0B02  0CAC               	rrf	___aomod@divisor+4,f
  7053  0B03  0CAB               	rrf	___aomod@divisor+3,f
  7054  0B04  0CAA               	rrf	___aomod@divisor+2,f
  7055  0B05  0CA9               	rrf	___aomod@divisor+1,f
  7056  0B06  0CA8               	rrf	___aomod@divisor,f
  7057  0B07  3001               	movlw	1
  7058  0B08  02B9               	subwf	___aomod@counter,f
  7059  0B09  1D03               	btfss	3,2
  7060  0B0A  2ACF               	goto	l3909
  7061  0B0B                     l3915:	
  7062  0B0B  083A               	movf	___aomod@sign,w
  7063  0B0C  1903               	btfsc	3,2
  7064  0B0D  2B2C               	goto	l655
  7065  0B0E  09B0               	comf	___aomod@dividend,f
  7066  0B0F  09B1               	comf	___aomod@dividend+1,f
  7067  0B10  09B2               	comf	___aomod@dividend+2,f
  7068  0B11  09B3               	comf	___aomod@dividend+3,f
  7069  0B12  09B4               	comf	___aomod@dividend+4,f
  7070  0B13  09B5               	comf	___aomod@dividend+5,f
  7071  0B14  09B6               	comf	___aomod@dividend+6,f
  7072  0B15  09B7               	comf	___aomod@dividend+7,f
  7073  0B16  0AB0               	incf	___aomod@dividend,f
  7074  0B17  1D03               	skipz
  7075  0B18  2B2C               	goto	l655
  7076  0B19  0AB1               	incf	___aomod@dividend+1,f
  7077  0B1A  1D03               	skipz
  7078  0B1B  2B2C               	goto	l655
  7079  0B1C  0AB2               	incf	___aomod@dividend+2,f
  7080  0B1D  1D03               	skipz
  7081  0B1E  2B2C               	goto	l655
  7082  0B1F  0AB3               	incf	___aomod@dividend+3,f
  7083  0B20  1D03               	skipz
  7084  0B21  2B2C               	goto	l655
  7085  0B22  0AB4               	incf	___aomod@dividend+4,f
  7086  0B23  1D03               	skipz
  7087  0B24  2B2C               	goto	l655
  7088  0B25  0AB5               	incf	___aomod@dividend+5,f
  7089  0B26  1D03               	skipz
  7090  0B27  2B2C               	goto	l655
  7091  0B28  0AB6               	incf	___aomod@dividend+6,f
  7092  0B29  1D03               	skipz
  7093  0B2A  2B2C               	goto	l655
  7094  0B2B  0AB7               	incf	___aomod@dividend+7,f
  7095  0B2C                     l655:	
  7096  0B2C  0020               	movlb	0	; select bank0
  7097  0B2D  0830               	movf	___aomod@dividend,w
  7098  0B2E  00A8               	movwf	?___aomod
  7099  0B2F  0831               	movf	___aomod@dividend+1,w
  7100  0B30  00A9               	movwf	?___aomod+1
  7101  0B31  0832               	movf	___aomod@dividend+2,w
  7102  0B32  00AA               	movwf	?___aomod+2
  7103  0B33  0833               	movf	___aomod@dividend+3,w
  7104  0B34  00AB               	movwf	?___aomod+3
  7105  0B35  0834               	movf	___aomod@dividend+4,w
  7106  0B36  00AC               	movwf	?___aomod+4
  7107  0B37  0835               	movf	___aomod@dividend+5,w
  7108  0B38  00AD               	movwf	?___aomod+5
  7109  0B39  0836               	movf	___aomod@dividend+6,w
  7110  0B3A  00AE               	movwf	?___aomod+6
  7111  0B3B  0837               	movf	___aomod@dividend+7,w
  7112  0B3C  00AF               	movwf	?___aomod+7
  7113  0B3D  0008               	return
  7114  0B3E                     __end_of___aomod:	
  7115                           
  7116                           	psect	text16
  7117  0B3E                     __ptext16:	
  7118 ;; *************** function ___aodiv *****************
  7119 ;; Defined at:
  7120 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  7121 ;; Parameters:    Size  Location     Type
  7122 ;;  divisor         8    8[BANK0 ] long long 
  7123 ;;  dividend        8   16[BANK0 ] long long 
  7124 ;; Auto vars:     Size  Location     Type
  7125 ;;  quotient        8   27[BANK0 ] long long 
  7126 ;;  sign            1   26[BANK0 ] unsigned char 
  7127 ;;  counter         1   25[BANK0 ] unsigned char 
  7128 ;; Return value:  Size  Location     Type
  7129 ;;                  8    8[BANK0 ] long long 
  7130 ;; Registers used:
  7131 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7132 ;; Tracked objects:
  7133 ;;		On entry : 0/0
  7134 ;;		On exit  : 0/0
  7135 ;;		Unchanged: 0/0
  7136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7137 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7138 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7139 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7140 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7141 ;;Total ram usage:       27 bytes
  7142 ;; Hardware stack levels used:    1
  7143 ;; Hardware stack levels required when called:    5
  7144 ;; This function calls:
  7145 ;;		Nothing
  7146 ;; This function is called by:
  7147 ;;		_dtoa
  7148 ;; This function uses a non-reentrant model
  7149 ;;
  7150                           
  7151                           
  7152                           ;psect for function ___aodiv
  7153  0B3E                     ___aodiv:	
  7154                           
  7155                           ;incstack = 0
  7156                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  7157  0B3E  0020               	movlb	0	; select bank0
  7158  0B3F  01BA               	clrf	___aodiv@sign
  7159  0B40  3028               	movlw	low ___aodiv@divisor
  7160  0B41  0086               	movwf	6
  7161  0B42  3000               	movlw	high ___aodiv@divisor
  7162  0B43  0087               	movwf	7
  7163  0B44  3F47               	moviw [7]fsr1
  7164  0B45  00B8               	movwf	??___aodiv
  7165  0B46  1FB8               	btfss	??___aodiv,7
  7166  0B47  2B6A               	goto	l3857
  7167  0B48  0020               	movlb	0	; select bank0
  7168  0B49  09A8               	comf	___aodiv@divisor,f
  7169  0B4A  09A9               	comf	___aodiv@divisor+1,f
  7170  0B4B  09AA               	comf	___aodiv@divisor+2,f
  7171  0B4C  09AB               	comf	___aodiv@divisor+3,f
  7172  0B4D  09AC               	comf	___aodiv@divisor+4,f
  7173  0B4E  09AD               	comf	___aodiv@divisor+5,f
  7174  0B4F  09AE               	comf	___aodiv@divisor+6,f
  7175  0B50  09AF               	comf	___aodiv@divisor+7,f
  7176  0B51  0AA8               	incf	___aodiv@divisor,f
  7177  0B52  1D03               	skipz
  7178  0B53  2B67               	goto	u507lld
  7179  0B54  0AA9               	incf	___aodiv@divisor+1,f
  7180  0B55  1D03               	skipz
  7181  0B56  2B67               	goto	u507lld
  7182  0B57  0AAA               	incf	___aodiv@divisor+2,f
  7183  0B58  1D03               	skipz
  7184  0B59  2B67               	goto	u507lld
  7185  0B5A  0AAB               	incf	___aodiv@divisor+3,f
  7186  0B5B  1D03               	skipz
  7187  0B5C  2B67               	goto	u507lld
  7188  0B5D  0AAC               	incf	___aodiv@divisor+4,f
  7189  0B5E  1D03               	skipz
  7190  0B5F  2B67               	goto	u507lld
  7191  0B60  0AAD               	incf	___aodiv@divisor+5,f
  7192  0B61  1D03               	skipz
  7193  0B62  2B67               	goto	u507lld
  7194  0B63  0AAE               	incf	___aodiv@divisor+6,f
  7195  0B64  1D03               	skipz
  7196  0B65  2B67               	goto	u507lld
  7197  0B66  0AAF               	incf	___aodiv@divisor+7,f
  7198  0B67                     u507lld:	
  7199  0B67  0020               	movlb	0	; select bank0
  7200  0B68  01BA               	clrf	___aodiv@sign
  7201  0B69  0ABA               	incf	___aodiv@sign,f
  7202  0B6A                     l3857:	
  7203  0B6A  3030               	movlw	low ___aodiv@dividend
  7204  0B6B  0086               	movwf	6
  7205  0B6C  3000               	movlw	high ___aodiv@dividend
  7206  0B6D  0087               	movwf	7
  7207  0B6E  3F47               	moviw [7]fsr1
  7208  0B6F  0020               	movlb	0	; select bank0
  7209  0B70  00B8               	movwf	??___aodiv
  7210  0B71  1FB8               	btfss	??___aodiv,7
  7211  0B72  2B97               	goto	l3863
  7212  0B73  0020               	movlb	0	; select bank0
  7213  0B74  09B0               	comf	___aodiv@dividend,f
  7214  0B75  09B1               	comf	___aodiv@dividend+1,f
  7215  0B76  09B2               	comf	___aodiv@dividend+2,f
  7216  0B77  09B3               	comf	___aodiv@dividend+3,f
  7217  0B78  09B4               	comf	___aodiv@dividend+4,f
  7218  0B79  09B5               	comf	___aodiv@dividend+5,f
  7219  0B7A  09B6               	comf	___aodiv@dividend+6,f
  7220  0B7B  09B7               	comf	___aodiv@dividend+7,f
  7221  0B7C  0AB0               	incf	___aodiv@dividend,f
  7222  0B7D  1D03               	skipz
  7223  0B7E  2B92               	goto	l3861
  7224  0B7F  0AB1               	incf	___aodiv@dividend+1,f
  7225  0B80  1D03               	skipz
  7226  0B81  2B92               	goto	l3861
  7227  0B82  0AB2               	incf	___aodiv@dividend+2,f
  7228  0B83  1D03               	skipz
  7229  0B84  2B92               	goto	l3861
  7230  0B85  0AB3               	incf	___aodiv@dividend+3,f
  7231  0B86  1D03               	skipz
  7232  0B87  2B92               	goto	l3861
  7233  0B88  0AB4               	incf	___aodiv@dividend+4,f
  7234  0B89  1D03               	skipz
  7235  0B8A  2B92               	goto	l3861
  7236  0B8B  0AB5               	incf	___aodiv@dividend+5,f
  7237  0B8C  1D03               	skipz
  7238  0B8D  2B92               	goto	l3861
  7239  0B8E  0AB6               	incf	___aodiv@dividend+6,f
  7240  0B8F  1D03               	skipz
  7241  0B90  2B92               	goto	l3861
  7242  0B91  0AB7               	incf	___aodiv@dividend+7,f
  7243  0B92                     l3861:	
  7244  0B92  3001               	movlw	1
  7245  0B93  0020               	movlb	0	; select bank0
  7246  0B94  00B8               	movwf	??___aodiv
  7247  0B95  0838               	movf	??___aodiv,w
  7248  0B96  06BA               	xorwf	___aodiv@sign,f
  7249  0B97                     l3863:	
  7250  0B97  303B               	movlw	low ___aodiv@quotient
  7251  0B98  0086               	movwf	6
  7252  0B99  3000               	movlw	high ___aodiv@quotient
  7253  0B9A  0087               	movwf	7
  7254  0B9B  3008               	movlw	8
  7255  0B9C  0020               	movlb	0	; select bank0
  7256  0B9D  00B8               	movwf	??___aodiv
  7257  0B9E  3000               	movlw	0
  7258  0B9F                     u5100:	
  7259  0B9F  001E               	movwi fsr1++
  7260  0BA0  0BB8               	decfsz	??___aodiv,f
  7261  0BA1  2B9F               	goto	u5100
  7262  0BA2  0828               	movf	___aodiv@divisor,w
  7263  0BA3  0429               	iorwf	___aodiv@divisor+1,w
  7264  0BA4  042A               	iorwf	___aodiv@divisor+2,w
  7265  0BA5  042B               	iorwf	___aodiv@divisor+3,w
  7266  0BA6  042C               	iorwf	___aodiv@divisor+4,w
  7267  0BA7  042D               	iorwf	___aodiv@divisor+5,w
  7268  0BA8  042E               	iorwf	___aodiv@divisor+6,w
  7269  0BA9  042F               	iorwf	___aodiv@divisor+7,w
  7270  0BAA  1903               	skipnz
  7271  0BAB  2C02               	goto	l3885
  7272  0BAC  01B9               	clrf	___aodiv@counter
  7273  0BAD  0AB9               	incf	___aodiv@counter,f
  7274  0BAE                     l3873:	
  7275  0BAE  1BAF               	btfsc	___aodiv@divisor+7,7
  7276  0BAF  2BBD               	goto	l3875
  7277  0BB0  35A8               	lslf	___aodiv@divisor,f
  7278  0BB1  0DA9               	rlf	___aodiv@divisor+1,f
  7279  0BB2  0DAA               	rlf	___aodiv@divisor+2,f
  7280  0BB3  0DAB               	rlf	___aodiv@divisor+3,f
  7281  0BB4  0DAC               	rlf	___aodiv@divisor+4,f
  7282  0BB5  0DAD               	rlf	___aodiv@divisor+5,f
  7283  0BB6  0DAE               	rlf	___aodiv@divisor+6,f
  7284  0BB7  0DAF               	rlf	___aodiv@divisor+7,f
  7285  0BB8  3001               	movlw	1
  7286  0BB9  00B8               	movwf	??___aodiv
  7287  0BBA  0838               	movf	??___aodiv,w
  7288  0BBB  07B9               	addwf	___aodiv@counter,f
  7289  0BBC  2BAE               	goto	l3873
  7290  0BBD                     l3875:	
  7291  0BBD  35BB               	lslf	___aodiv@quotient,f
  7292  0BBE  0DBC               	rlf	___aodiv@quotient+1,f
  7293  0BBF  0DBD               	rlf	___aodiv@quotient+2,f
  7294  0BC0  0DBE               	rlf	___aodiv@quotient+3,f
  7295  0BC1  0DBF               	rlf	___aodiv@quotient+4,f
  7296  0BC2  0DC0               	rlf	___aodiv@quotient+5,f
  7297  0BC3  0DC1               	rlf	___aodiv@quotient+6,f
  7298  0BC4  0DC2               	rlf	___aodiv@quotient+7,f
  7299  0BC5  082F               	movf	___aodiv@divisor+7,w
  7300  0BC6  0237               	subwf	___aodiv@dividend+7,w
  7301  0BC7  1D03               	skipz
  7302  0BC8  2BE3               	goto	u5135
  7303  0BC9  082E               	movf	___aodiv@divisor+6,w
  7304  0BCA  0236               	subwf	___aodiv@dividend+6,w
  7305  0BCB  1D03               	skipz
  7306  0BCC  2BE3               	goto	u5135
  7307  0BCD  082D               	movf	___aodiv@divisor+5,w
  7308  0BCE  0235               	subwf	___aodiv@dividend+5,w
  7309  0BCF  1D03               	skipz
  7310  0BD0  2BE3               	goto	u5135
  7311  0BD1  082C               	movf	___aodiv@divisor+4,w
  7312  0BD2  0234               	subwf	___aodiv@dividend+4,w
  7313  0BD3  1D03               	skipz
  7314  0BD4  2BE3               	goto	u5135
  7315  0BD5  082B               	movf	___aodiv@divisor+3,w
  7316  0BD6  0233               	subwf	___aodiv@dividend+3,w
  7317  0BD7  1D03               	skipz
  7318  0BD8  2BE3               	goto	u5135
  7319  0BD9  082A               	movf	___aodiv@divisor+2,w
  7320  0BDA  0232               	subwf	___aodiv@dividend+2,w
  7321  0BDB  1D03               	skipz
  7322  0BDC  2BE3               	goto	u5135
  7323  0BDD  0829               	movf	___aodiv@divisor+1,w
  7324  0BDE  0231               	subwf	___aodiv@dividend+1,w
  7325  0BDF  1D03               	skipz
  7326  0BE0  2BE3               	goto	u5135
  7327  0BE1  0828               	movf	___aodiv@divisor,w
  7328  0BE2  0230               	subwf	___aodiv@dividend,w
  7329  0BE3                     u5135:	
  7330  0BE3  1C03               	skipc
  7331  0BE4  2BF6               	goto	l3883
  7332  0BE5  0828               	movf	___aodiv@divisor,w
  7333  0BE6  02B0               	subwf	___aodiv@dividend,f
  7334  0BE7  0829               	movf	___aodiv@divisor+1,w
  7335  0BE8  3BB1               	subwfb	___aodiv@dividend+1,f
  7336  0BE9  082A               	movf	___aodiv@divisor+2,w
  7337  0BEA  3BB2               	subwfb	___aodiv@dividend+2,f
  7338  0BEB  082B               	movf	___aodiv@divisor+3,w
  7339  0BEC  3BB3               	subwfb	___aodiv@dividend+3,f
  7340  0BED  082C               	movf	___aodiv@divisor+4,w
  7341  0BEE  3BB4               	subwfb	___aodiv@dividend+4,f
  7342  0BEF  082D               	movf	___aodiv@divisor+5,w
  7343  0BF0  3BB5               	subwfb	___aodiv@dividend+5,f
  7344  0BF1  082E               	movf	___aodiv@divisor+6,w
  7345  0BF2  3BB6               	subwfb	___aodiv@dividend+6,f
  7346  0BF3  082F               	movf	___aodiv@divisor+7,w
  7347  0BF4  3BB7               	subwfb	___aodiv@dividend+7,f
  7348  0BF5  143B               	bsf	___aodiv@quotient,0
  7349  0BF6                     l3883:	
  7350  0BF6  36AF               	lsrf	___aodiv@divisor+7,f
  7351  0BF7  0CAE               	rrf	___aodiv@divisor+6,f
  7352  0BF8  0CAD               	rrf	___aodiv@divisor+5,f
  7353  0BF9  0CAC               	rrf	___aodiv@divisor+4,f
  7354  0BFA  0CAB               	rrf	___aodiv@divisor+3,f
  7355  0BFB  0CAA               	rrf	___aodiv@divisor+2,f
  7356  0BFC  0CA9               	rrf	___aodiv@divisor+1,f
  7357  0BFD  0CA8               	rrf	___aodiv@divisor,f
  7358  0BFE  3001               	movlw	1
  7359  0BFF  02B9               	subwf	___aodiv@counter,f
  7360  0C00  1D03               	btfss	3,2
  7361  0C01  2BBD               	goto	l3875
  7362  0C02                     l3885:	
  7363  0C02  083A               	movf	___aodiv@sign,w
  7364  0C03  1903               	btfsc	3,2
  7365  0C04  2C23               	goto	l642
  7366  0C05  09BB               	comf	___aodiv@quotient,f
  7367  0C06  09BC               	comf	___aodiv@quotient+1,f
  7368  0C07  09BD               	comf	___aodiv@quotient+2,f
  7369  0C08  09BE               	comf	___aodiv@quotient+3,f
  7370  0C09  09BF               	comf	___aodiv@quotient+4,f
  7371  0C0A  09C0               	comf	___aodiv@quotient+5,f
  7372  0C0B  09C1               	comf	___aodiv@quotient+6,f
  7373  0C0C  09C2               	comf	___aodiv@quotient+7,f
  7374  0C0D  0ABB               	incf	___aodiv@quotient,f
  7375  0C0E  1D03               	skipz
  7376  0C0F  2C23               	goto	l642
  7377  0C10  0ABC               	incf	___aodiv@quotient+1,f
  7378  0C11  1D03               	skipz
  7379  0C12  2C23               	goto	l642
  7380  0C13  0ABD               	incf	___aodiv@quotient+2,f
  7381  0C14  1D03               	skipz
  7382  0C15  2C23               	goto	l642
  7383  0C16  0ABE               	incf	___aodiv@quotient+3,f
  7384  0C17  1D03               	skipz
  7385  0C18  2C23               	goto	l642
  7386  0C19  0ABF               	incf	___aodiv@quotient+4,f
  7387  0C1A  1D03               	skipz
  7388  0C1B  2C23               	goto	l642
  7389  0C1C  0AC0               	incf	___aodiv@quotient+5,f
  7390  0C1D  1D03               	skipz
  7391  0C1E  2C23               	goto	l642
  7392  0C1F  0AC1               	incf	___aodiv@quotient+6,f
  7393  0C20  1D03               	skipz
  7394  0C21  2C23               	goto	l642
  7395  0C22  0AC2               	incf	___aodiv@quotient+7,f
  7396  0C23                     l642:	
  7397  0C23  0020               	movlb	0	; select bank0
  7398  0C24  083B               	movf	___aodiv@quotient,w
  7399  0C25  00A8               	movwf	?___aodiv
  7400  0C26  083C               	movf	___aodiv@quotient+1,w
  7401  0C27  00A9               	movwf	?___aodiv+1
  7402  0C28  083D               	movf	___aodiv@quotient+2,w
  7403  0C29  00AA               	movwf	?___aodiv+2
  7404  0C2A  083E               	movf	___aodiv@quotient+3,w
  7405  0C2B  00AB               	movwf	?___aodiv+3
  7406  0C2C  083F               	movf	___aodiv@quotient+4,w
  7407  0C2D  00AC               	movwf	?___aodiv+4
  7408  0C2E  0840               	movf	___aodiv@quotient+5,w
  7409  0C2F  00AD               	movwf	?___aodiv+5
  7410  0C30  0841               	movf	___aodiv@quotient+6,w
  7411  0C31  00AE               	movwf	?___aodiv+6
  7412  0C32  0842               	movf	___aodiv@quotient+7,w
  7413  0C33  00AF               	movwf	?___aodiv+7
  7414  0C34  0008               	return
  7415  0C35                     __end_of___aodiv:	
  7416                           
  7417                           	psect	text17
  7418  09C9                     __ptext17:	
  7419 ;; *************** function ___xxtofl *****************
  7420 ;; Defined at:
  7421 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
  7422 ;; Parameters:    Size  Location     Type
  7423 ;;  sign            1    wreg     unsigned char 
  7424 ;;  val             4    8[BANK0 ] long 
  7425 ;; Auto vars:     Size  Location     Type
  7426 ;;  sign            1   16[BANK0 ] unsigned char 
  7427 ;;  arg             4   18[BANK0 ] unsigned long 
  7428 ;;  exp             1   17[BANK0 ] unsigned char 
  7429 ;; Return value:  Size  Location     Type
  7430 ;;                  4    8[BANK0 ] unsigned char 
  7431 ;; Registers used:
  7432 ;;		wreg, status,2, status,0
  7433 ;; Tracked objects:
  7434 ;;		On entry : 0/0
  7435 ;;		On exit  : 0/0
  7436 ;;		Unchanged: 0/0
  7437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7438 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7439 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7440 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7441 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7442 ;;Total ram usage:       14 bytes
  7443 ;; Hardware stack levels used:    1
  7444 ;; Hardware stack levels required when called:    5
  7445 ;; This function calls:
  7446 ;;		Nothing
  7447 ;; This function is called by:
  7448 ;;		_main
  7449 ;; This function uses a non-reentrant model
  7450 ;;
  7451                           
  7452                           
  7453                           ;psect for function ___xxtofl
  7454  09C9                     ___xxtofl:	
  7455                           
  7456                           ;incstack = 0
  7457                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7458                           ;___xxtofl@sign stored from wreg
  7459  09C9  0020               	movlb	0	; select bank0
  7460  09CA  00B0               	movwf	___xxtofl@sign
  7461  09CB  0830               	movf	___xxtofl@sign,w
  7462  09CC  1D03               	btfss	3,2
  7463  09CD  1FAB               	btfss	___xxtofl@val+3,7
  7464  09CE  29DF               	goto	l3655
  7465  09CF  0928               	comf	___xxtofl@val,w
  7466  09D0  00B2               	movwf	___xxtofl@arg
  7467  09D1  0929               	comf	___xxtofl@val+1,w
  7468  09D2  00B3               	movwf	___xxtofl@arg+1
  7469  09D3  092A               	comf	___xxtofl@val+2,w
  7470  09D4  00B4               	movwf	___xxtofl@arg+2
  7471  09D5  092B               	comf	___xxtofl@val+3,w
  7472  09D6  00B5               	movwf	___xxtofl@arg+3
  7473  09D7  0AB2               	incf	___xxtofl@arg,f
  7474  09D8  1903               	skipnz
  7475  09D9  0AB3               	incf	___xxtofl@arg+1,f
  7476  09DA  1903               	skipnz
  7477  09DB  0AB4               	incf	___xxtofl@arg+2,f
  7478  09DC  1903               	skipnz
  7479  09DD  0AB5               	incf	___xxtofl@arg+3,f
  7480  09DE  29E7               	goto	l977
  7481  09DF                     l3655:	
  7482  09DF  082B               	movf	___xxtofl@val+3,w
  7483  09E0  00B5               	movwf	___xxtofl@arg+3
  7484  09E1  082A               	movf	___xxtofl@val+2,w
  7485  09E2  00B4               	movwf	___xxtofl@arg+2
  7486  09E3  0829               	movf	___xxtofl@val+1,w
  7487  09E4  00B3               	movwf	___xxtofl@arg+1
  7488  09E5  0828               	movf	___xxtofl@val,w
  7489  09E6  00B2               	movwf	___xxtofl@arg
  7490  09E7                     l977:	
  7491  09E7  082B               	movf	___xxtofl@val+3,w
  7492  09E8  042A               	iorwf	___xxtofl@val+2,w
  7493  09E9  0429               	iorwf	___xxtofl@val+1,w
  7494  09EA  0428               	iorwf	___xxtofl@val,w
  7495  09EB  1D03               	skipz
  7496  09EC  29F6               	goto	l3661
  7497  09ED  3000               	movlw	0
  7498  09EE  00AB               	movwf	?___xxtofl+3
  7499  09EF  3000               	movlw	0
  7500  09F0  00AA               	movwf	?___xxtofl+2
  7501  09F1  3000               	movlw	0
  7502  09F2  00A9               	movwf	?___xxtofl+1
  7503  09F3  3000               	movlw	0
  7504  09F4  00A8               	movwf	?___xxtofl
  7505  09F5  0008               	return
  7506  09F6                     l3661:	
  7507  09F6  3096               	movlw	150
  7508  09F7  00AC               	movwf	??___xxtofl
  7509  09F8  082C               	movf	??___xxtofl,w
  7510  09F9  00B1               	movwf	___xxtofl@exp
  7511  09FA                     l3665:	
  7512  09FA  30FE               	movlw	254
  7513  09FB  0535               	andwf	___xxtofl@arg+3,w
  7514  09FC  1903               	btfsc	3,2
  7515  09FD  2A1D               	goto	l983
  7516  09FE  3001               	movlw	1
  7517  09FF  00AC               	movwf	??___xxtofl
  7518  0A00  082C               	movf	??___xxtofl,w
  7519  0A01  07B1               	addwf	___xxtofl@exp,f
  7520  0A02  3001               	movlw	1
  7521  0A03                     u4775:	
  7522  0A03  36B5               	lsrf	___xxtofl@arg+3,f
  7523  0A04  0CB4               	rrf	___xxtofl@arg+2,f
  7524  0A05  0CB3               	rrf	___xxtofl@arg+1,f
  7525  0A06  0CB2               	rrf	___xxtofl@arg,f
  7526  0A07  0B89               	decfsz	9,f
  7527  0A08  2A03               	goto	u4775
  7528  0A09  29FA               	goto	l3665
  7529  0A0A                     l3667:	
  7530  0A0A  3001               	movlw	1
  7531  0A0B  00AC               	movwf	??___xxtofl
  7532  0A0C  082C               	movf	??___xxtofl,w
  7533  0A0D  07B1               	addwf	___xxtofl@exp,f
  7534  0A0E  3001               	movlw	1
  7535  0A0F  07B2               	addwf	___xxtofl@arg,f
  7536  0A10  3000               	movlw	0
  7537  0A11  3DB3               	addwfc	___xxtofl@arg+1,f
  7538  0A12  3000               	movlw	0
  7539  0A13  3DB4               	addwfc	___xxtofl@arg+2,f
  7540  0A14  3000               	movlw	0
  7541  0A15  3DB5               	addwfc	___xxtofl@arg+3,f
  7542  0A16  3001               	movlw	1
  7543  0A17                     u4795:	
  7544  0A17  36B5               	lsrf	___xxtofl@arg+3,f
  7545  0A18  0CB4               	rrf	___xxtofl@arg+2,f
  7546  0A19  0CB3               	rrf	___xxtofl@arg+1,f
  7547  0A1A  0CB2               	rrf	___xxtofl@arg,f
  7548  0A1B  0B89               	decfsz	9,f
  7549  0A1C  2A17               	goto	u4795
  7550  0A1D                     l983:	
  7551  0A1D  30FF               	movlw	255
  7552  0A1E  0535               	andwf	___xxtofl@arg+3,w
  7553  0A1F  1903               	btfsc	3,2
  7554  0A20  2A2F               	goto	l3675
  7555  0A21  2A0A               	goto	l3667
  7556  0A22                     l3677:	
  7557  0A22  3002               	movlw	2
  7558  0A23  0231               	subwf	___xxtofl@exp,w
  7559  0A24  1C03               	btfss	3,0
  7560  0A25  2A31               	goto	l990
  7561  0A26  3001               	movlw	1
  7562  0A27  02B1               	subwf	___xxtofl@exp,f
  7563  0A28  3001               	movlw	1
  7564  0A29                     u4815:	
  7565  0A29  35B2               	lslf	___xxtofl@arg,f
  7566  0A2A  0DB3               	rlf	___xxtofl@arg+1,f
  7567  0A2B  0DB4               	rlf	___xxtofl@arg+2,f
  7568  0A2C  0DB5               	rlf	___xxtofl@arg+3,f
  7569  0A2D  0B89               	decfsz	9,f
  7570  0A2E  2A29               	goto	u4815
  7571  0A2F                     l3675:	
  7572  0A2F  1FB4               	btfss	___xxtofl@arg+2,7
  7573  0A30  2A22               	goto	l3677
  7574  0A31                     l990:	
  7575  0A31  1831               	btfsc	___xxtofl@exp,0
  7576  0A32  2A3B               	goto	l991
  7577  0A33  30FF               	movlw	255
  7578  0A34  05B2               	andwf	___xxtofl@arg,f
  7579  0A35  30FF               	movlw	255
  7580  0A36  05B3               	andwf	___xxtofl@arg+1,f
  7581  0A37  307F               	movlw	127
  7582  0A38  05B4               	andwf	___xxtofl@arg+2,f
  7583  0A39  30FF               	movlw	255
  7584  0A3A  05B5               	andwf	___xxtofl@arg+3,f
  7585  0A3B                     l991:	
  7586  0A3B  1003               	clrc
  7587  0A3C  0CB1               	rrf	___xxtofl@exp,f
  7588  0A3D  0831               	movf	___xxtofl@exp,w
  7589  0A3E  00AC               	movwf	??___xxtofl
  7590  0A3F  01AD               	clrf	??___xxtofl+1
  7591  0A40  01AE               	clrf	??___xxtofl+2
  7592  0A41  01AF               	clrf	??___xxtofl+3
  7593  0A42  3018               	movlw	24
  7594  0A43                     u4855:	
  7595  0A43  35AC               	lslf	??___xxtofl,f
  7596  0A44  0DAD               	rlf	??___xxtofl+1,f
  7597  0A45  0DAE               	rlf	??___xxtofl+2,f
  7598  0A46  0DAF               	rlf	??___xxtofl+3,f
  7599  0A47  0B89               	decfsz	9,f
  7600  0A48  2A43               	goto	u4855
  7601  0A49  082C               	movf	??___xxtofl,w
  7602  0A4A  04B2               	iorwf	___xxtofl@arg,f
  7603  0A4B  082D               	movf	??___xxtofl+1,w
  7604  0A4C  04B3               	iorwf	___xxtofl@arg+1,f
  7605  0A4D  082E               	movf	??___xxtofl+2,w
  7606  0A4E  04B4               	iorwf	___xxtofl@arg+2,f
  7607  0A4F  082F               	movf	??___xxtofl+3,w
  7608  0A50  04B5               	iorwf	___xxtofl@arg+3,f
  7609  0A51  0830               	movf	___xxtofl@sign,w
  7610  0A52  1D03               	btfss	3,2
  7611  0A53  1FAB               	btfss	___xxtofl@val+3,7
  7612  0A54  2A56               	goto	l3689
  7613  0A55  17B5               	bsf	___xxtofl@arg+3,7
  7614  0A56                     l3689:	
  7615  0A56  0835               	movf	___xxtofl@arg+3,w
  7616  0A57  00AB               	movwf	?___xxtofl+3
  7617  0A58  0834               	movf	___xxtofl@arg+2,w
  7618  0A59  00AA               	movwf	?___xxtofl+2
  7619  0A5A  0833               	movf	___xxtofl@arg+1,w
  7620  0A5B  00A9               	movwf	?___xxtofl+1
  7621  0A5C  0832               	movf	___xxtofl@arg,w
  7622  0A5D  00A8               	movwf	?___xxtofl
  7623  0A5E  0008               	return
  7624  0A5F                     __end_of___xxtofl:	
  7625                           
  7626                           	psect	text18
  7627  08E7                     __ptext18:	
  7628 ;; *************** function ___fltol *****************
  7629 ;; Defined at:
  7630 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
  7631 ;; Parameters:    Size  Location     Type
  7632 ;;  f1              4    8[BANK0 ] unsigned char 
  7633 ;; Auto vars:     Size  Location     Type
  7634 ;;  exp1            1   18[BANK0 ] unsigned char 
  7635 ;;  sign1           1   17[BANK0 ] unsigned char 
  7636 ;; Return value:  Size  Location     Type
  7637 ;;                  4    8[BANK0 ] long 
  7638 ;; Registers used:
  7639 ;;		wreg, status,2, status,0
  7640 ;; Tracked objects:
  7641 ;;		On entry : 0/0
  7642 ;;		On exit  : 0/0
  7643 ;;		Unchanged: 0/0
  7644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7645 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7646 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7647 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7648 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7649 ;;Total ram usage:       11 bytes
  7650 ;; Hardware stack levels used:    1
  7651 ;; Hardware stack levels required when called:    5
  7652 ;; This function calls:
  7653 ;;		Nothing
  7654 ;; This function is called by:
  7655 ;;		_main
  7656 ;; This function uses a non-reentrant model
  7657 ;;
  7658                           
  7659                           
  7660                           ;psect for function ___fltol
  7661  08E7                     ___fltol:	
  7662                           
  7663                           ;incstack = 0
  7664                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7665  08E7  1003               	clrc
  7666  08E8  0020               	movlb	0	; select bank0
  7667  08E9  0D2A               	rlf	___fltol@f1+2,w
  7668  08EA  0D2B               	rlf	___fltol@f1+3,w
  7669  08EB  00AC               	movwf	??___fltol
  7670  08EC  082C               	movf	??___fltol,w
  7671  08ED  00B2               	movwf	___fltol@exp1
  7672  08EE  0832               	movf	___fltol@exp1,w
  7673  08EF  1D03               	btfss	3,2
  7674  08F0  28FA               	goto	l3333
  7675  08F1                     l3329:	
  7676  08F1  3000               	movlw	0
  7677  08F2  00AB               	movwf	?___fltol+3
  7678  08F3  3000               	movlw	0
  7679  08F4  00AA               	movwf	?___fltol+2
  7680  08F5  3000               	movlw	0
  7681  08F6  00A9               	movwf	?___fltol+1
  7682  08F7  3000               	movlw	0
  7683  08F8  00A8               	movwf	?___fltol
  7684  08F9  0008               	return
  7685  08FA                     l3333:	
  7686  08FA  0828               	movf	___fltol@f1,w
  7687  08FB  00AC               	movwf	??___fltol
  7688  08FC  0829               	movf	___fltol@f1+1,w
  7689  08FD  00AD               	movwf	??___fltol+1
  7690  08FE  082A               	movf	___fltol@f1+2,w
  7691  08FF  00AE               	movwf	??___fltol+2
  7692  0900  082B               	movf	___fltol@f1+3,w
  7693  0901  00AF               	movwf	??___fltol+3
  7694  0902  301F               	movlw	31
  7695  0903                     u4105:	
  7696  0903  36AF               	lsrf	??___fltol+3,f
  7697  0904  0CAE               	rrf	??___fltol+2,f
  7698  0905  0CAD               	rrf	??___fltol+1,f
  7699  0906  0CAC               	rrf	??___fltol,f
  7700  0907  0B89               	decfsz	9,f
  7701  0908  2903               	goto	u4105
  7702  0909  082C               	movf	??___fltol,w
  7703  090A  00B0               	movwf	??___fltol+4
  7704  090B  0830               	movf	??___fltol+4,w
  7705  090C  00B1               	movwf	___fltol@sign1
  7706  090D  17AA               	bsf	___fltol@f1+2,7
  7707  090E  30FF               	movlw	255
  7708  090F  05A8               	andwf	___fltol@f1,f
  7709  0910  30FF               	movlw	255
  7710  0911  05A9               	andwf	___fltol@f1+1,f
  7711  0912  30FF               	movlw	255
  7712  0913  05AA               	andwf	___fltol@f1+2,f
  7713  0914  3000               	movlw	0
  7714  0915  05AB               	andwf	___fltol@f1+3,f
  7715  0916  3096               	movlw	150
  7716  0917  02B2               	subwf	___fltol@exp1,f
  7717  0918  1FB2               	btfss	___fltol@exp1,7
  7718  0919  292D               	goto	l3351
  7719  091A  0832               	movf	___fltol@exp1,w
  7720  091B  3A80               	xorlw	128
  7721  091C  3E97               	addlw	151
  7722  091D  1C03               	btfss	3,0
  7723  091E  28F1               	goto	l3329
  7724  091F                     l3349:	
  7725  091F  3001               	movlw	1
  7726  0920                     u4135:	
  7727  0920  36AB               	lsrf	___fltol@f1+3,f
  7728  0921  0CAA               	rrf	___fltol@f1+2,f
  7729  0922  0CA9               	rrf	___fltol@f1+1,f
  7730  0923  0CA8               	rrf	___fltol@f1,f
  7731  0924  0B89               	decfsz	9,f
  7732  0925  2920               	goto	u4135
  7733  0926  3001               	movlw	1
  7734  0927  00AC               	movwf	??___fltol
  7735  0928  082C               	movf	??___fltol,w
  7736  0929  07B2               	addwf	___fltol@exp1,f
  7737  092A  1903               	btfsc	3,2
  7738  092B  293E               	goto	l3359
  7739  092C  291F               	goto	l3349
  7740  092D                     l3351:	
  7741  092D  3020               	movlw	32
  7742  092E  0232               	subwf	___fltol@exp1,w
  7743  092F  1803               	btfsc	3,0
  7744  0930  28F1               	goto	l3329
  7745  0931                     l743:	
  7746  0931  0832               	movf	___fltol@exp1,w
  7747  0932  1903               	btfsc	3,2
  7748  0933  293E               	goto	l3359
  7749  0934  3001               	movlw	1
  7750  0935                     u4165:	
  7751  0935  35A8               	lslf	___fltol@f1,f
  7752  0936  0DA9               	rlf	___fltol@f1+1,f
  7753  0937  0DAA               	rlf	___fltol@f1+2,f
  7754  0938  0DAB               	rlf	___fltol@f1+3,f
  7755  0939  0B89               	decfsz	9,f
  7756  093A  2935               	goto	u4165
  7757  093B  3001               	movlw	1
  7758  093C  02B2               	subwf	___fltol@exp1,f
  7759  093D  2931               	goto	l743
  7760  093E                     l3359:	
  7761  093E  0831               	movf	___fltol@sign1,w
  7762  093F  1903               	btfsc	3,2
  7763  0940  0008               	return
  7764  0941  09A8               	comf	___fltol@f1,f
  7765  0942  09A9               	comf	___fltol@f1+1,f
  7766  0943  09AA               	comf	___fltol@f1+2,f
  7767  0944  09AB               	comf	___fltol@f1+3,f
  7768  0945  0AA8               	incf	___fltol@f1,f
  7769  0946  1903               	skipnz
  7770  0947  0AA9               	incf	___fltol@f1+1,f
  7771  0948  1903               	skipnz
  7772  0949  0AAA               	incf	___fltol@f1+2,f
  7773  094A  1903               	skipnz
  7774  094B  0AAB               	incf	___fltol@f1+3,f
  7775  094C  0008               	return
  7776  094D                     __end_of___fltol:	
  7777                           
  7778                           	psect	text19
  7779  16DE                     __ptext19:	
  7780 ;; *************** function ___flsub *****************
  7781 ;; Defined at:
  7782 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  7783 ;; Parameters:    Size  Location     Type
  7784 ;;  a               4   28[BANK0 ] long 
  7785 ;;  b               4   32[BANK0 ] long 
  7786 ;; Auto vars:     Size  Location     Type
  7787 ;;		None
  7788 ;; Return value:  Size  Location     Type
  7789 ;;                  4   28[BANK0 ] long 
  7790 ;; Registers used:
  7791 ;;		wreg, status,2, status,0, pclath, cstack
  7792 ;; Tracked objects:
  7793 ;;		On entry : 0/0
  7794 ;;		On exit  : 0/0
  7795 ;;		Unchanged: 0/0
  7796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7797 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7800 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7801 ;;Total ram usage:        8 bytes
  7802 ;; Hardware stack levels used:    1
  7803 ;; Hardware stack levels required when called:    6
  7804 ;; This function calls:
  7805 ;;		___fladd
  7806 ;; This function is called by:
  7807 ;;		_main
  7808 ;; This function uses a non-reentrant model
  7809 ;;
  7810                           
  7811                           
  7812                           ;psect for function ___flsub
  7813  16DE                     ___flsub:	
  7814                           
  7815                           ;incstack = 0
  7816                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
  7817  16DE  3080               	movlw	128
  7818  16DF  0020               	movlb	0	; select bank0
  7819  16E0  06BF               	xorwf	___flsub@a+3,f
  7820  16E1  0843               	movf	___flsub@b+3,w
  7821  16E2  00AB               	movwf	___fladd@b+3
  7822  16E3  0842               	movf	___flsub@b+2,w
  7823  16E4  00AA               	movwf	___fladd@b+2
  7824  16E5  0841               	movf	___flsub@b+1,w
  7825  16E6  00A9               	movwf	___fladd@b+1
  7826  16E7  0840               	movf	___flsub@b,w
  7827  16E8  00A8               	movwf	___fladd@b
  7828  16E9  083F               	movf	___flsub@a+3,w
  7829  16EA  00AF               	movwf	___fladd@a+3
  7830  16EB  083E               	movf	___flsub@a+2,w
  7831  16EC  00AE               	movwf	___fladd@a+2
  7832  16ED  083D               	movf	___flsub@a+1,w
  7833  16EE  00AD               	movwf	___fladd@a+1
  7834  16EF  083C               	movf	___flsub@a,w
  7835  16F0  00AC               	movwf	___fladd@a
  7836  16F1  3184  2475         	fcall	___fladd
  7837  16F3  0020               	movlb	0	; select bank0
  7838  16F4  082B               	movf	?___fladd+3,w
  7839  16F5  00BF               	movwf	?___flsub+3
  7840  16F6  082A               	movf	?___fladd+2,w
  7841  16F7  00BE               	movwf	?___flsub+2
  7842  16F8  0829               	movf	?___fladd+1,w
  7843  16F9  00BD               	movwf	?___flsub+1
  7844  16FA  0828               	movf	?___fladd,w
  7845  16FB  00BC               	movwf	?___flsub
  7846  16FC  0008               	return
  7847  16FD                     __end_of___flsub:	
  7848                           
  7849                           	psect	text20
  7850  0475                     __ptext20:	
  7851 ;; *************** function ___fladd *****************
  7852 ;; Defined at:
  7853 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  7854 ;; Parameters:    Size  Location     Type
  7855 ;;  b               4    8[BANK0 ] long 
  7856 ;;  a               4   12[BANK0 ] long 
  7857 ;; Auto vars:     Size  Location     Type
  7858 ;;  grs             1   27[BANK0 ] unsigned char 
  7859 ;;  bexp            1   26[BANK0 ] unsigned char 
  7860 ;;  aexp            1   25[BANK0 ] unsigned char 
  7861 ;;  signs           1   24[BANK0 ] unsigned char 
  7862 ;; Return value:  Size  Location     Type
  7863 ;;                  4    8[BANK0 ] unsigned char 
  7864 ;; Registers used:
  7865 ;;		wreg, status,2, status,0
  7866 ;; Tracked objects:
  7867 ;;		On entry : 0/0
  7868 ;;		On exit  : 0/0
  7869 ;;		Unchanged: 0/0
  7870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7871 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7872 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7873 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7874 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7875 ;;Total ram usage:       20 bytes
  7876 ;; Hardware stack levels used:    1
  7877 ;; Hardware stack levels required when called:    5
  7878 ;; This function calls:
  7879 ;;		Nothing
  7880 ;; This function is called by:
  7881 ;;		___flsub
  7882 ;; This function uses a non-reentrant model
  7883 ;;
  7884                           
  7885                           
  7886                           ;psect for function ___fladd
  7887  0475                     ___fladd:	
  7888                           
  7889                           ;incstack = 0
  7890                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  7891  0475  0020               	movlb	0	; select bank0
  7892  0476  082B               	movf	___fladd@b+3,w
  7893  0477  3980               	andlw	128
  7894  0478  00B0               	movwf	??___fladd
  7895  0479  0830               	movf	??___fladd,w
  7896  047A  00B8               	movwf	___fladd@signs
  7897  047B  352B               	lslf	___fladd@b+3,w
  7898  047C  00B0               	movwf	??___fladd
  7899  047D  0830               	movf	??___fladd,w
  7900  047E  00BA               	movwf	___fladd@bexp
  7901  047F  1BAA               	btfsc	___fladd@b+2,7
  7902  0480  143A               	bsf	___fladd@bexp,0
  7903  0481  083A               	movf	___fladd@bexp,w
  7904  0482  1903               	btfsc	3,2
  7905  0483  2C92               	goto	l3035
  7906  0484  0A3A               	incf	___fladd@bexp,w
  7907  0485  1D03               	btfss	3,2
  7908  0486  2C8F               	goto	l3031
  7909  0487  3000               	movlw	0
  7910  0488  00AB               	movwf	___fladd@b+3
  7911  0489  3000               	movlw	0
  7912  048A  00AA               	movwf	___fladd@b+2
  7913  048B  3000               	movlw	0
  7914  048C  00A9               	movwf	___fladd@b+1
  7915  048D  3000               	movlw	0
  7916  048E  00A8               	movwf	___fladd@b
  7917  048F                     l3031:	
  7918  048F  17AA               	bsf	___fladd@b+2,7
  7919  0490  01AB               	clrf	___fladd@b+3
  7920  0491  2C9A               	goto	l3037
  7921  0492                     l3035:	
  7922  0492  3000               	movlw	0
  7923  0493  00AB               	movwf	___fladd@b+3
  7924  0494  3000               	movlw	0
  7925  0495  00AA               	movwf	___fladd@b+2
  7926  0496  3000               	movlw	0
  7927  0497  00A9               	movwf	___fladd@b+1
  7928  0498  3000               	movlw	0
  7929  0499  00A8               	movwf	___fladd@b
  7930  049A                     l3037:	
  7931  049A  082F               	movf	___fladd@a+3,w
  7932  049B  3980               	andlw	128
  7933  049C  00B0               	movwf	??___fladd
  7934  049D  0830               	movf	??___fladd,w
  7935  049E  00B9               	movwf	___fladd@aexp
  7936  049F  0839               	movf	___fladd@aexp,w
  7937  04A0  0638               	xorwf	___fladd@signs,w
  7938  04A1  1D03               	btfss	3,2
  7939  04A2  1738               	bsf	___fladd@signs,6
  7940  04A3  352F               	lslf	___fladd@a+3,w
  7941  04A4  00B0               	movwf	??___fladd
  7942  04A5  0830               	movf	??___fladd,w
  7943  04A6  00B9               	movwf	___fladd@aexp
  7944  04A7  1BAE               	btfsc	___fladd@a+2,7
  7945  04A8  1439               	bsf	___fladd@aexp,0
  7946  04A9  0839               	movf	___fladd@aexp,w
  7947  04AA  1903               	btfsc	3,2
  7948  04AB  2CBA               	goto	l3059
  7949  04AC  0A39               	incf	___fladd@aexp,w
  7950  04AD  1D03               	btfss	3,2
  7951  04AE  2CB7               	goto	l3055
  7952  04AF  3000               	movlw	0
  7953  04B0  00AF               	movwf	___fladd@a+3
  7954  04B1  3000               	movlw	0
  7955  04B2  00AE               	movwf	___fladd@a+2
  7956  04B3  3000               	movlw	0
  7957  04B4  00AD               	movwf	___fladd@a+1
  7958  04B5  3000               	movlw	0
  7959  04B6  00AC               	movwf	___fladd@a
  7960  04B7                     l3055:	
  7961  04B7  17AE               	bsf	___fladd@a+2,7
  7962  04B8  01AF               	clrf	___fladd@a+3
  7963  04B9  2CC2               	goto	l843
  7964  04BA                     l3059:	
  7965  04BA  3000               	movlw	0
  7966  04BB  00AF               	movwf	___fladd@a+3
  7967  04BC  3000               	movlw	0
  7968  04BD  00AE               	movwf	___fladd@a+2
  7969  04BE  3000               	movlw	0
  7970  04BF  00AD               	movwf	___fladd@a+1
  7971  04C0  3000               	movlw	0
  7972  04C1  00AC               	movwf	___fladd@a
  7973  04C2                     l843:	
  7974  04C2  083A               	movf	___fladd@bexp,w
  7975  04C3  0239               	subwf	___fladd@aexp,w
  7976  04C4  1803               	skipnc
  7977  04C5  2D08               	goto	l3095
  7978  04C6  1F38               	btfss	___fladd@signs,6
  7979  04C7  2CCC               	goto	l3065
  7980  04C8  3080               	movlw	128
  7981  04C9  00B0               	movwf	??___fladd
  7982  04CA  0830               	movf	??___fladd,w
  7983  04CB  06B8               	xorwf	___fladd@signs,f
  7984  04CC                     l3065:	
  7985  04CC  083A               	movf	___fladd@bexp,w
  7986  04CD  00B0               	movwf	??___fladd
  7987  04CE  0830               	movf	??___fladd,w
  7988  04CF  00BB               	movwf	___fladd@grs
  7989  04D0  0839               	movf	___fladd@aexp,w
  7990  04D1  00B0               	movwf	??___fladd
  7991  04D2  0830               	movf	??___fladd,w
  7992  04D3  00BA               	movwf	___fladd@bexp
  7993  04D4  083B               	movf	___fladd@grs,w
  7994  04D5  00B0               	movwf	??___fladd
  7995  04D6  0830               	movf	??___fladd,w
  7996  04D7  00B9               	movwf	___fladd@aexp
  7997  04D8  0828               	movf	___fladd@b,w
  7998  04D9  00B0               	movwf	??___fladd
  7999  04DA  0830               	movf	??___fladd,w
  8000  04DB  00BB               	movwf	___fladd@grs
  8001  04DC  082C               	movf	___fladd@a,w
  8002  04DD  00B0               	movwf	??___fladd
  8003  04DE  0830               	movf	??___fladd,w
  8004  04DF  00A8               	movwf	___fladd@b
  8005  04E0  083B               	movf	___fladd@grs,w
  8006  04E1  00B0               	movwf	??___fladd
  8007  04E2  0830               	movf	??___fladd,w
  8008  04E3  00AC               	movwf	___fladd@a
  8009  04E4  0829               	movf	___fladd@b+1,w
  8010  04E5  00B0               	movwf	??___fladd
  8011  04E6  0830               	movf	??___fladd,w
  8012  04E7  00BB               	movwf	___fladd@grs
  8013  04E8  082D               	movf	___fladd@a+1,w
  8014  04E9  00B0               	movwf	??___fladd
  8015  04EA  0830               	movf	??___fladd,w
  8016  04EB  00A9               	movwf	___fladd@b+1
  8017  04EC  083B               	movf	___fladd@grs,w
  8018  04ED  00B0               	movwf	??___fladd
  8019  04EE  0830               	movf	??___fladd,w
  8020  04EF  00AD               	movwf	___fladd@a+1
  8021  04F0  082A               	movf	___fladd@b+2,w
  8022  04F1  00B0               	movwf	??___fladd
  8023  04F2  0830               	movf	??___fladd,w
  8024  04F3  00BB               	movwf	___fladd@grs
  8025  04F4  082E               	movf	___fladd@a+2,w
  8026  04F5  00B0               	movwf	??___fladd
  8027  04F6  0830               	movf	??___fladd,w
  8028  04F7  00AA               	movwf	___fladd@b+2
  8029  04F8  083B               	movf	___fladd@grs,w
  8030  04F9  00B0               	movwf	??___fladd
  8031  04FA  0830               	movf	??___fladd,w
  8032  04FB  00AE               	movwf	___fladd@a+2
  8033  04FC  082B               	movf	___fladd@b+3,w
  8034  04FD  00B0               	movwf	??___fladd
  8035  04FE  0830               	movf	??___fladd,w
  8036  04FF  00BB               	movwf	___fladd@grs
  8037  0500  082F               	movf	___fladd@a+3,w
  8038  0501  00B0               	movwf	??___fladd
  8039  0502  0830               	movf	??___fladd,w
  8040  0503  00AB               	movwf	___fladd@b+3
  8041  0504  083B               	movf	___fladd@grs,w
  8042  0505  00B0               	movwf	??___fladd
  8043  0506  0830               	movf	??___fladd,w
  8044  0507  00AF               	movwf	___fladd@a+3
  8045  0508                     l3095:	
  8046  0508  01BB               	clrf	___fladd@grs
  8047  0509  0839               	movf	___fladd@aexp,w
  8048  050A  00B0               	movwf	??___fladd
  8049  050B  01B1               	clrf	??___fladd+1
  8050  050C  0831               	movf	??___fladd+1,w
  8051  050D  00B3               	movwf	??___fladd+3
  8052  050E  083A               	movf	___fladd@bexp,w
  8053  050F  0230               	subwf	??___fladd,w
  8054  0510  00B2               	movwf	??___fladd+2
  8055  0511  1C03               	skipc
  8056  0512  03B3               	decf	??___fladd+3,f
  8057  0513  0833               	movf	??___fladd+3,w
  8058  0514  3A80               	xorlw	128
  8059  0515  00B4               	movwf	??___fladd+4
  8060  0516  3080               	movlw	128
  8061  0517  0234               	subwf	??___fladd+4,w
  8062  0518  1D03               	skipz
  8063  0519  2D1C               	goto	u3605
  8064  051A  301A               	movlw	26
  8065  051B  0232               	subwf	??___fladd+2,w
  8066  051C                     u3605:	
  8067  051C  1C03               	skipc
  8068  051D  2D50               	goto	l3113
  8069  051E  0020               	movlb	0	; select bank0
  8070  051F  082B               	movf	___fladd@b+3,w
  8071  0520  042A               	iorwf	___fladd@b+2,w
  8072  0521  0429               	iorwf	___fladd@b+1,w
  8073  0522  0428               	iorwf	___fladd@b,w
  8074  0523  1903               	btfsc	3,2
  8075  0524  2D27               	goto	u3610
  8076  0525  3001               	movlw	1
  8077  0526  2D28               	goto	u3620
  8078  0527                     u3610:	
  8079  0527  3000               	movlw	0
  8080  0528                     u3620:	
  8081  0528  00B0               	movwf	??___fladd
  8082  0529  0830               	movf	??___fladd,w
  8083  052A  00BB               	movwf	___fladd@grs
  8084  052B  3000               	movlw	0
  8085  052C  00AB               	movwf	___fladd@b+3
  8086  052D  3000               	movlw	0
  8087  052E  00AA               	movwf	___fladd@b+2
  8088  052F  3000               	movlw	0
  8089  0530  00A9               	movwf	___fladd@b+1
  8090  0531  3000               	movlw	0
  8091  0532  00A8               	movwf	___fladd@b
  8092  0533  0839               	movf	___fladd@aexp,w
  8093  0534  00B0               	movwf	??___fladd
  8094  0535  0830               	movf	??___fladd,w
  8095  0536  00BA               	movwf	___fladd@bexp
  8096  0537  2D55               	goto	l847
  8097  0538                     l849:	
  8098  0538  1C3B               	btfss	___fladd@grs,0
  8099  0539  2D40               	goto	l3103
  8100  053A  363B               	lsrf	___fladd@grs,w
  8101  053B  3801               	iorlw	1
  8102  053C  00B0               	movwf	??___fladd
  8103  053D  0830               	movf	??___fladd,w
  8104  053E  00BB               	movwf	___fladd@grs
  8105  053F  2D42               	goto	l3105
  8106  0540                     l3103:	
  8107  0540  1003               	clrc
  8108  0541  0CBB               	rrf	___fladd@grs,f
  8109  0542                     l3105:	
  8110  0542  1828               	btfsc	___fladd@b,0
  8111  0543  17BB               	bsf	___fladd@grs,7
  8112  0544  3001               	movlw	1
  8113  0545  00B0               	movwf	??___fladd
  8114  0546                     u3655:	
  8115  0546  37AB               	asrf	___fladd@b+3,f
  8116  0547  0CAA               	rrf	___fladd@b+2,f
  8117  0548  0CA9               	rrf	___fladd@b+1,f
  8118  0549  0CA8               	rrf	___fladd@b,f
  8119  054A  0BB0               	decfsz	??___fladd& (0+127),f
  8120  054B  2D46               	goto	u3655
  8121  054C  3001               	movlw	1
  8122  054D  00B0               	movwf	??___fladd
  8123  054E  0830               	movf	??___fladd,w
  8124  054F  07BA               	addwf	___fladd@bexp,f
  8125  0550                     l3113:	
  8126  0550  0020               	movlb	0	; select bank0
  8127  0551  0839               	movf	___fladd@aexp,w
  8128  0552  023A               	subwf	___fladd@bexp,w
  8129  0553  1C03               	skipc
  8130  0554  2D38               	goto	l849
  8131  0555                     l847:	
  8132  0555  1B38               	btfsc	___fladd@signs,6
  8133  0556  2D86               	goto	l3139
  8134  0557  083A               	movf	___fladd@bexp,w
  8135  0558  1D03               	btfss	3,2
  8136  0559  2D63               	goto	l3121
  8137  055A  3000               	movlw	0
  8138  055B  00AB               	movwf	?___fladd+3
  8139  055C  3000               	movlw	0
  8140  055D  00AA               	movwf	?___fladd+2
  8141  055E  3000               	movlw	0
  8142  055F  00A9               	movwf	?___fladd+1
  8143  0560  3000               	movlw	0
  8144  0561  00A8               	movwf	?___fladd
  8145  0562  0008               	return
  8146  0563                     l3121:	
  8147  0563  082C               	movf	___fladd@a,w
  8148  0564  07A8               	addwf	___fladd@b,f
  8149  0565  082D               	movf	___fladd@a+1,w
  8150  0566  3DA9               	addwfc	___fladd@b+1,f
  8151  0567  082E               	movf	___fladd@a+2,w
  8152  0568  3DAA               	addwfc	___fladd@b+2,f
  8153  0569  082F               	movf	___fladd@a+3,w
  8154  056A  3DAB               	addwfc	___fladd@b+3,f
  8155  056B  1C2B               	btfss	___fladd@b+3,0
  8156  056C  2E00               	goto	l3173
  8157  056D  1C3B               	btfss	___fladd@grs,0
  8158  056E  2D75               	goto	l3129
  8159  056F  363B               	lsrf	___fladd@grs,w
  8160  0570  3801               	iorlw	1
  8161  0571  00B0               	movwf	??___fladd
  8162  0572  0830               	movf	??___fladd,w
  8163  0573  00BB               	movwf	___fladd@grs
  8164  0574  2D77               	goto	l3131
  8165  0575                     l3129:	
  8166  0575  1003               	clrc
  8167  0576  0CBB               	rrf	___fladd@grs,f
  8168  0577                     l3131:	
  8169  0577  1828               	btfsc	___fladd@b,0
  8170  0578  17BB               	bsf	___fladd@grs,7
  8171  0579  3001               	movlw	1
  8172  057A  00B0               	movwf	??___fladd
  8173  057B                     u3725:	
  8174  057B  37AB               	asrf	___fladd@b+3,f
  8175  057C  0CAA               	rrf	___fladd@b+2,f
  8176  057D  0CA9               	rrf	___fladd@b+1,f
  8177  057E  0CA8               	rrf	___fladd@b,f
  8178  057F  0BB0               	decfsz	??___fladd& (0+127),f
  8179  0580  2D7B               	goto	u3725
  8180  0581  3001               	movlw	1
  8181  0582  00B0               	movwf	??___fladd
  8182  0583  0830               	movf	??___fladd,w
  8183  0584  07BA               	addwf	___fladd@bexp,f
  8184  0585  2E00               	goto	l3173
  8185  0586                     l3139:	
  8186  0586  082B               	movf	___fladd@b+3,w
  8187  0587  3A80               	xorlw	128
  8188  0588  00B0               	movwf	??___fladd
  8189  0589  082F               	movf	___fladd@a+3,w
  8190  058A  3A80               	xorlw	128
  8191  058B  0230               	subwf	??___fladd,w
  8192  058C  1D03               	skipz
  8193  058D  2D98               	goto	u3733
  8194  058E  082E               	movf	___fladd@a+2,w
  8195  058F  022A               	subwf	___fladd@b+2,w
  8196  0590  1D03               	skipz
  8197  0591  2D98               	goto	u3733
  8198  0592  082D               	movf	___fladd@a+1,w
  8199  0593  0229               	subwf	___fladd@b+1,w
  8200  0594  1D03               	skipz
  8201  0595  2D98               	goto	u3733
  8202  0596  082C               	movf	___fladd@a,w
  8203  0597  0228               	subwf	___fladd@b,w
  8204  0598                     u3733:	
  8205  0598  1803               	skipnc
  8206  0599  2DD0               	goto	l3149
  8207  059A  30FF               	movlw	255
  8208  059B  00B0               	movwf	??___fladd
  8209  059C  30FF               	movlw	255
  8210  059D  00B1               	movwf	??___fladd+1
  8211  059E  30FF               	movlw	255
  8212  059F  00B2               	movwf	??___fladd+2
  8213  05A0  30FF               	movlw	255
  8214  05A1  00B3               	movwf	??___fladd+3
  8215  05A2  0828               	movf	___fladd@b,w
  8216  05A3  022C               	subwf	___fladd@a,w
  8217  05A4  00B4               	movwf	??___fladd+4
  8218  05A5  0829               	movf	___fladd@b+1,w
  8219  05A6  3B2D               	subwfb	___fladd@a+1,w
  8220  05A7  00B5               	movwf	??___fladd+5
  8221  05A8  082A               	movf	___fladd@b+2,w
  8222  05A9  3B2E               	subwfb	___fladd@a+2,w
  8223  05AA  00B6               	movwf	??___fladd+6
  8224  05AB  082B               	movf	___fladd@b+3,w
  8225  05AC  3B2F               	subwfb	___fladd@a+3,w
  8226  05AD  00B7               	movwf	??___fladd+7
  8227  05AE  0834               	movf	??___fladd+4,w
  8228  05AF  07B0               	addwf	??___fladd,f
  8229  05B0  0835               	movf	??___fladd+5,w
  8230  05B1  3DB1               	addwfc	??___fladd+1,f
  8231  05B2  0836               	movf	??___fladd+6,w
  8232  05B3  3DB2               	addwfc	??___fladd+2,f
  8233  05B4  0837               	movf	??___fladd+7,w
  8234  05B5  3DB3               	addwfc	??___fladd+3,f
  8235  05B6  0833               	movf	??___fladd+3,w
  8236  05B7  00AB               	movwf	___fladd@b+3
  8237  05B8  0832               	movf	??___fladd+2,w
  8238  05B9  00AA               	movwf	___fladd@b+2
  8239  05BA  0831               	movf	??___fladd+1,w
  8240  05BB  00A9               	movwf	___fladd@b+1
  8241  05BC  0830               	movf	??___fladd,w
  8242  05BD  00A8               	movwf	___fladd@b
  8243  05BE  3080               	movlw	128
  8244  05BF  00B0               	movwf	??___fladd
  8245  05C0  0830               	movf	??___fladd,w
  8246  05C1  06B8               	xorwf	___fladd@signs,f
  8247  05C2  09BB               	comf	___fladd@grs,f
  8248  05C3  0ABB               	incf	___fladd@grs,f
  8249  05C4  083B               	movf	___fladd@grs,w
  8250  05C5  1D03               	btfss	3,2
  8251  05C6  2DD8               	goto	l864
  8252  05C7  3001               	movlw	1
  8253  05C8  07A8               	addwf	___fladd@b,f
  8254  05C9  3000               	movlw	0
  8255  05CA  3DA9               	addwfc	___fladd@b+1,f
  8256  05CB  3000               	movlw	0
  8257  05CC  3DAA               	addwfc	___fladd@b+2,f
  8258  05CD  3000               	movlw	0
  8259  05CE  3DAB               	addwfc	___fladd@b+3,f
  8260  05CF  2DD8               	goto	l864
  8261  05D0                     l3149:	
  8262  05D0  082C               	movf	___fladd@a,w
  8263  05D1  02A8               	subwf	___fladd@b,f
  8264  05D2  082D               	movf	___fladd@a+1,w
  8265  05D3  3BA9               	subwfb	___fladd@b+1,f
  8266  05D4  082E               	movf	___fladd@a+2,w
  8267  05D5  3BAA               	subwfb	___fladd@b+2,f
  8268  05D6  082F               	movf	___fladd@a+3,w
  8269  05D7  3BAB               	subwfb	___fladd@b+3,f
  8270  05D8                     l864:	
  8271  05D8  082B               	movf	___fladd@b+3,w
  8272  05D9  042A               	iorwf	___fladd@b+2,w
  8273  05DA  0429               	iorwf	___fladd@b+1,w
  8274  05DB  0428               	iorwf	___fladd@b,w
  8275  05DC  1D03               	skipz
  8276  05DD  2DFE               	goto	l3171
  8277  05DE  083B               	movf	___fladd@grs,w
  8278  05DF  1D03               	btfss	3,2
  8279  05E0  2DFE               	goto	l3171
  8280  05E1  3000               	movlw	0
  8281  05E2  00AB               	movwf	?___fladd+3
  8282  05E3  3000               	movlw	0
  8283  05E4  00AA               	movwf	?___fladd+2
  8284  05E5  3000               	movlw	0
  8285  05E6  00A9               	movwf	?___fladd+1
  8286  05E7  3000               	movlw	0
  8287  05E8  00A8               	movwf	?___fladd
  8288  05E9  0008               	return
  8289  05EA                     l3157:	
  8290  05EA  3001               	movlw	1
  8291  05EB                     u3775:	
  8292  05EB  35A8               	lslf	___fladd@b,f
  8293  05EC  0DA9               	rlf	___fladd@b+1,f
  8294  05ED  0DAA               	rlf	___fladd@b+2,f
  8295  05EE  0DAB               	rlf	___fladd@b+3,f
  8296  05EF  0B89               	decfsz	9,f
  8297  05F0  2DEB               	goto	u3775
  8298  05F1  1BBB               	btfsc	___fladd@grs,7
  8299  05F2  1428               	bsf	___fladd@b,0
  8300  05F3  1C3B               	btfss	___fladd@grs,0
  8301  05F4  2DF7               	goto	l3165
  8302  05F5  1403               	setc
  8303  05F6  2DF8               	goto	L2
  8304  05F7                     l3165:	
  8305  05F7  1003               	clrc
  8306  05F8                     L2:	
  8307  05F8  0DBB               	rlf	___fladd@grs,f
  8308  05F9  083A               	movf	___fladd@bexp,w
  8309  05FA  1903               	btfsc	3,2
  8310  05FB  2DFE               	goto	l3171
  8311  05FC  3001               	movlw	1
  8312  05FD  02BA               	subwf	___fladd@bexp,f
  8313  05FE                     l3171:	
  8314  05FE  1FAA               	btfss	___fladd@b+2,7
  8315  05FF  2DEA               	goto	l3157
  8316  0600                     l3173:	
  8317  0600  01B9               	clrf	___fladd@aexp
  8318  0601  1FBB               	btfss	___fladd@grs,7
  8319  0602  2E0B               	goto	l3183
  8320  0603  083B               	movf	___fladd@grs,w
  8321  0604  397F               	andlw	127
  8322  0605  1903               	btfsc	3,2
  8323  0606  1828               	btfsc	___fladd@b,0
  8324  0607  2E09               	goto	l3179
  8325  0608  2E0B               	goto	l3183
  8326  0609                     l3179:	
  8327  0609  01B9               	clrf	___fladd@aexp
  8328  060A  0AB9               	incf	___fladd@aexp,f
  8329  060B                     l3183:	
  8330  060B  0839               	movf	___fladd@aexp,w
  8331  060C  1903               	btfsc	3,2
  8332  060D  2E37               	goto	l877
  8333  060E  3001               	movlw	1
  8334  060F  07A8               	addwf	___fladd@b,f
  8335  0610  3000               	movlw	0
  8336  0611  3DA9               	addwfc	___fladd@b+1,f
  8337  0612  3000               	movlw	0
  8338  0613  3DAA               	addwfc	___fladd@b+2,f
  8339  0614  3000               	movlw	0
  8340  0615  3DAB               	addwfc	___fladd@b+3,f
  8341  0616  1C2B               	btfss	___fladd@b+3,0
  8342  0617  2E37               	goto	l877
  8343  0618  0828               	movf	___fladd@b,w
  8344  0619  00B0               	movwf	??___fladd
  8345  061A  0829               	movf	___fladd@b+1,w
  8346  061B  00B1               	movwf	??___fladd+1
  8347  061C  082A               	movf	___fladd@b+2,w
  8348  061D  00B2               	movwf	??___fladd+2
  8349  061E  082B               	movf	___fladd@b+3,w
  8350  061F  00B3               	movwf	??___fladd+3
  8351  0620  3001               	movlw	1
  8352  0621  00B4               	movwf	??___fladd+4
  8353  0622                     u3875:	
  8354  0622  37B3               	asrf	??___fladd+3,f
  8355  0623  0CB2               	rrf	??___fladd+2,f
  8356  0624  0CB1               	rrf	??___fladd+1,f
  8357  0625  0CB0               	rrf	??___fladd,f
  8358  0626  0BB4               	decfsz	??___fladd+4,f
  8359  0627  2E22               	goto	u3875
  8360  0628  0833               	movf	??___fladd+3,w
  8361  0629  00AB               	movwf	___fladd@b+3
  8362  062A  0832               	movf	??___fladd+2,w
  8363  062B  00AA               	movwf	___fladd@b+2
  8364  062C  0831               	movf	??___fladd+1,w
  8365  062D  00A9               	movwf	___fladd@b+1
  8366  062E  0830               	movf	??___fladd,w
  8367  062F  00A8               	movwf	___fladd@b
  8368  0630  0A3A               	incf	___fladd@bexp,w
  8369  0631  1903               	btfsc	3,2
  8370  0632  2E37               	goto	l877
  8371  0633  3001               	movlw	1
  8372  0634  00B0               	movwf	??___fladd
  8373  0635  0830               	movf	??___fladd,w
  8374  0636  07BA               	addwf	___fladd@bexp,f
  8375  0637                     l877:	
  8376  0637  0A3A               	incf	___fladd@bexp,w
  8377  0638  1D03               	btfss	3,2
  8378  0639  083A               	movf	___fladd@bexp,w
  8379  063A  1D03               	btfss	3,2
  8380  063B  2E47               	goto	l3201
  8381  063C  3000               	movlw	0
  8382  063D  00AB               	movwf	___fladd@b+3
  8383  063E  3000               	movlw	0
  8384  063F  00AA               	movwf	___fladd@b+2
  8385  0640  3000               	movlw	0
  8386  0641  00A9               	movwf	___fladd@b+1
  8387  0642  3000               	movlw	0
  8388  0643  00A8               	movwf	___fladd@b
  8389  0644  083A               	movf	___fladd@bexp,w
  8390  0645  1903               	btfsc	3,2
  8391  0646  01B8               	clrf	___fladd@signs
  8392  0647                     l3201:	
  8393  0647  1C3A               	btfss	___fladd@bexp,0
  8394  0648  2E4B               	goto	l3205
  8395  0649  17AA               	bsf	___fladd@b+2,7
  8396  064A  2E4F               	goto	l885
  8397  064B                     l3205:	
  8398  064B  307F               	movlw	127
  8399  064C  00B0               	movwf	??___fladd
  8400  064D  0830               	movf	??___fladd,w
  8401  064E  05AA               	andwf	___fladd@b+2,f
  8402  064F                     l885:	
  8403  064F  363A               	lsrf	___fladd@bexp,w
  8404  0650  00B0               	movwf	??___fladd
  8405  0651  0830               	movf	??___fladd,w
  8406  0652  00AB               	movwf	___fladd@b+3
  8407  0653  1FB8               	btfss	___fladd@signs,7
  8408  0654  0008               	return
  8409  0655  17AB               	bsf	___fladd@b+3,7
  8410  0656  0008               	return
  8411  0657                     __end_of___fladd:	
  8412                           
  8413                           	psect	text21
  8414  0033                     __ptext21:	
  8415 ;; *************** function ___flmul *****************
  8416 ;; Defined at:
  8417 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
  8418 ;; Parameters:    Size  Location     Type
  8419 ;;  b               4    0[BANK1 ] unsigned char 
  8420 ;;  a               4    4[BANK1 ] unsigned char 
  8421 ;; Auto vars:     Size  Location     Type
  8422 ;;  prod            4   20[BANK1 ] struct .
  8423 ;;  grs             4   15[BANK1 ] unsigned long 
  8424 ;;  temp            2   24[BANK1 ] struct .
  8425 ;;  bexp            1   19[BANK1 ] unsigned char 
  8426 ;;  aexp            1   14[BANK1 ] unsigned char 
  8427 ;;  sign            1   13[BANK1 ] unsigned char 
  8428 ;; Return value:  Size  Location     Type
  8429 ;;                  4    0[BANK1 ] unsigned char 
  8430 ;; Registers used:
  8431 ;;		wreg, status,2, status,0, pclath, cstack
  8432 ;; Tracked objects:
  8433 ;;		On entry : 0/0
  8434 ;;		On exit  : 0/0
  8435 ;;		Unchanged: 0/0
  8436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8437 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  8438 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
  8439 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  8440 ;;      Totals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0
  8441 ;;Total ram usage:       26 bytes
  8442 ;; Hardware stack levels used:    1
  8443 ;; Hardware stack levels required when called:    6
  8444 ;; This function calls:
  8445 ;;		__Umul8_16
  8446 ;; This function is called by:
  8447 ;;		_main
  8448 ;; This function uses a non-reentrant model
  8449 ;;
  8450                           
  8451                           
  8452                           ;psect for function ___flmul
  8453  0033                     ___flmul:	
  8454                           
  8455                           ;incstack = 0
  8456                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  8457  0033  0021               	movlb	1	; select bank1
  8458  0034  0851               	movf	(___flmul@b^(0+128)+3),w
  8459  0035  3980               	andlw	128
  8460  0036  00D6               	movwf	??___flmul^(0+128)
  8461  0037  0856               	movf	??___flmul^(0+128),w
  8462  0038  00DB               	movwf	___flmul@sign^(0+128)
  8463  0039  3551               	lslf	(___flmul@b^(0+128)+3),w
  8464  003A  00D6               	movwf	??___flmul^(0+128)
  8465  003B  0856               	movf	??___flmul^(0+128),w
  8466  003C  00E1               	movwf	___flmul@bexp^(0+128)
  8467  003D  1BD0               	btfsc	(___flmul@b^(0+128)+2),7
  8468  003E  1461               	bsf	___flmul@bexp^(0+128),0
  8469  003F  0861               	movf	___flmul@bexp^(0+128),w
  8470  0040  1903               	btfsc	3,2
  8471  0041  284F               	goto	l4117
  8472  0042  0A61               	incf	___flmul@bexp^(0+128),w
  8473  0043  1D03               	btfss	3,2
  8474  0044  284D               	goto	l4115
  8475  0045  3000               	movlw	0
  8476  0046  00D1               	movwf	(___flmul@b+3)^(0+128)
  8477  0047  3000               	movlw	0
  8478  0048  00D0               	movwf	(___flmul@b+2)^(0+128)
  8479  0049  3000               	movlw	0
  8480  004A  00CF               	movwf	(___flmul@b+1)^(0+128)
  8481  004B  3000               	movlw	0
  8482  004C  00CE               	movwf	___flmul@b^(0+128)
  8483  004D                     l4115:	
  8484  004D  17D0               	bsf	(___flmul@b^(0+128)+2),7
  8485  004E  2857               	goto	l4119
  8486  004F                     l4117:	
  8487  004F  3000               	movlw	0
  8488  0050  00D1               	movwf	(___flmul@b+3)^(0+128)
  8489  0051  3000               	movlw	0
  8490  0052  00D0               	movwf	(___flmul@b+2)^(0+128)
  8491  0053  3000               	movlw	0
  8492  0054  00CF               	movwf	(___flmul@b+1)^(0+128)
  8493  0055  3000               	movlw	0
  8494  0056  00CE               	movwf	___flmul@b^(0+128)
  8495  0057                     l4119:	
  8496  0057  0855               	movf	(___flmul@a^(0+128)+3),w
  8497  0058  3980               	andlw	128
  8498  0059  00D6               	movwf	??___flmul^(0+128)
  8499  005A  0856               	movf	??___flmul^(0+128),w
  8500  005B  06DB               	xorwf	___flmul@sign^(0+128),f
  8501  005C  3555               	lslf	(___flmul@a^(0+128)+3),w
  8502  005D  00D6               	movwf	??___flmul^(0+128)
  8503  005E  0856               	movf	??___flmul^(0+128),w
  8504  005F  00DC               	movwf	___flmul@aexp^(0+128)
  8505  0060  1BD4               	btfsc	(___flmul@a^(0+128)+2),7
  8506  0061  145C               	bsf	___flmul@aexp^(0+128),0
  8507  0062  085C               	movf	___flmul@aexp^(0+128),w
  8508  0063  1903               	btfsc	3,2
  8509  0064  2872               	goto	l4135
  8510  0065  0A5C               	incf	___flmul@aexp^(0+128),w
  8511  0066  1D03               	btfss	3,2
  8512  0067  2870               	goto	l4133
  8513  0068  3000               	movlw	0
  8514  0069  00D5               	movwf	(___flmul@a+3)^(0+128)
  8515  006A  3000               	movlw	0
  8516  006B  00D4               	movwf	(___flmul@a+2)^(0+128)
  8517  006C  3000               	movlw	0
  8518  006D  00D3               	movwf	(___flmul@a+1)^(0+128)
  8519  006E  3000               	movlw	0
  8520  006F  00D2               	movwf	___flmul@a^(0+128)
  8521  0070                     l4133:	
  8522  0070  17D4               	bsf	(___flmul@a^(0+128)+2),7
  8523  0071  287A               	goto	l4137
  8524  0072                     l4135:	
  8525  0072  3000               	movlw	0
  8526  0073  00D5               	movwf	(___flmul@a+3)^(0+128)
  8527  0074  3000               	movlw	0
  8528  0075  00D4               	movwf	(___flmul@a+2)^(0+128)
  8529  0076  3000               	movlw	0
  8530  0077  00D3               	movwf	(___flmul@a+1)^(0+128)
  8531  0078  3000               	movlw	0
  8532  0079  00D2               	movwf	___flmul@a^(0+128)
  8533  007A                     l4137:	
  8534  007A  085C               	movf	___flmul@aexp^(0+128),w
  8535  007B  1D03               	btfss	3,2
  8536  007C  0861               	movf	___flmul@bexp^(0+128),w
  8537  007D  1D03               	btfss	3,2
  8538  007E  2888               	goto	l4145
  8539  007F  3000               	movlw	0
  8540  0080  00D1               	movwf	(?___flmul+3)^(0+128)
  8541  0081  3000               	movlw	0
  8542  0082  00D0               	movwf	(?___flmul+2)^(0+128)
  8543  0083  3000               	movlw	0
  8544  0084  00CF               	movwf	(?___flmul+1)^(0+128)
  8545  0085  3000               	movlw	0
  8546  0086  00CE               	movwf	?___flmul^(0+128)
  8547  0087  0008               	return
  8548  0088                     l4145:	
  8549  0088  084E               	movf	___flmul@b^(0+128),w
  8550  0089  00D6               	movwf	??___flmul^(0+128)
  8551  008A  0856               	movf	??___flmul^(0+128),w
  8552  008B  0020               	movlb	0	; select bank0
  8553  008C  00A8               	movwf	__Umul8_16@multiplicand
  8554  008D  0021               	movlb	1	; select bank1
  8555  008E  0854               	movf	(___flmul@a^(0+128)+2),w
  8556  008F  3196  26FD  3180   	fcall	__Umul8_16
  8557  0092  0020               	movlb	0	; select bank0
  8558  0093  0829               	movf	?__Umul8_16+1,w
  8559  0094  0021               	movlb	1	; select bank1
  8560  0095  00E7               	movwf	(___flmul@temp+1)^(0+128)
  8561  0096  0020               	movlb	0	; select bank0
  8562  0097  0828               	movf	?__Umul8_16,w
  8563  0098  0021               	movlb	1	; select bank1
  8564  0099  00E6               	movwf	___flmul@temp^(0+128)
  8565  009A  0866               	movf	___flmul@temp^(0+128),w
  8566  009B  00D6               	movwf	??___flmul^(0+128)
  8567  009C  01D7               	clrf	(??___flmul^(0+128)+1)
  8568  009D  01D8               	clrf	(??___flmul^(0+128)+2)
  8569  009E  01D9               	clrf	(??___flmul^(0+128)+3)
  8570  009F  0859               	movf	(??___flmul+3)^(0+128),w
  8571  00A0  00E0               	movwf	(___flmul@grs+3)^(0+128)
  8572  00A1  0858               	movf	(??___flmul+2)^(0+128),w
  8573  00A2  00DF               	movwf	(___flmul@grs+2)^(0+128)
  8574  00A3  0857               	movf	(??___flmul+1)^(0+128),w
  8575  00A4  00DE               	movwf	(___flmul@grs+1)^(0+128)
  8576  00A5  0856               	movf	??___flmul^(0+128),w
  8577  00A6  00DD               	movwf	___flmul@grs^(0+128)
  8578  00A7  0867               	movf	(___flmul@temp^(0+128)+1),w
  8579  00A8  00D6               	movwf	??___flmul^(0+128)
  8580  00A9  01D7               	clrf	(??___flmul^(0+128)+1)
  8581  00AA  01D8               	clrf	(??___flmul^(0+128)+2)
  8582  00AB  01D9               	clrf	(??___flmul^(0+128)+3)
  8583  00AC  0859               	movf	(??___flmul+3)^(0+128),w
  8584  00AD  00E5               	movwf	(___flmul@prod+3)^(0+128)
  8585  00AE  0858               	movf	(??___flmul+2)^(0+128),w
  8586  00AF  00E4               	movwf	(___flmul@prod+2)^(0+128)
  8587  00B0  0857               	movf	(??___flmul+1)^(0+128),w
  8588  00B1  00E3               	movwf	(___flmul@prod+1)^(0+128)
  8589  00B2  0856               	movf	??___flmul^(0+128),w
  8590  00B3  00E2               	movwf	___flmul@prod^(0+128)
  8591  00B4  084F               	movf	(___flmul@b^(0+128)+1),w
  8592  00B5  00D6               	movwf	??___flmul^(0+128)
  8593  00B6  0856               	movf	??___flmul^(0+128),w
  8594  00B7  0020               	movlb	0	; select bank0
  8595  00B8  00A8               	movwf	__Umul8_16@multiplicand
  8596  00B9  0021               	movlb	1	; select bank1
  8597  00BA  0853               	movf	(___flmul@a^(0+128)+1),w
  8598  00BB  3196  26FD  3180   	fcall	__Umul8_16
  8599  00BE  0020               	movlb	0	; select bank0
  8600  00BF  0829               	movf	?__Umul8_16+1,w
  8601  00C0  0021               	movlb	1	; select bank1
  8602  00C1  00E7               	movwf	(___flmul@temp+1)^(0+128)
  8603  00C2  0020               	movlb	0	; select bank0
  8604  00C3  0828               	movf	?__Umul8_16,w
  8605  00C4  0021               	movlb	1	; select bank1
  8606  00C5  00E6               	movwf	___flmul@temp^(0+128)
  8607  00C6  0866               	movf	___flmul@temp^(0+128),w
  8608  00C7  00D6               	movwf	??___flmul^(0+128)
  8609  00C8  01D7               	clrf	(??___flmul^(0+128)+1)
  8610  00C9  01D8               	clrf	(??___flmul^(0+128)+2)
  8611  00CA  01D9               	clrf	(??___flmul^(0+128)+3)
  8612  00CB  0856               	movf	??___flmul^(0+128),w
  8613  00CC  07DD               	addwf	___flmul@grs^(0+128),f
  8614  00CD  0857               	movf	(??___flmul+1)^(0+128),w
  8615  00CE  3DDE               	addwfc	(___flmul@grs+1)^(0+128),f
  8616  00CF  0858               	movf	(??___flmul+2)^(0+128),w
  8617  00D0  3DDF               	addwfc	(___flmul@grs+2)^(0+128),f
  8618  00D1  0859               	movf	(??___flmul+3)^(0+128),w
  8619  00D2  3DE0               	addwfc	(___flmul@grs+3)^(0+128),f
  8620  00D3  0867               	movf	(___flmul@temp^(0+128)+1),w
  8621  00D4  00D6               	movwf	??___flmul^(0+128)
  8622  00D5  01D7               	clrf	(??___flmul^(0+128)+1)
  8623  00D6  01D8               	clrf	(??___flmul^(0+128)+2)
  8624  00D7  01D9               	clrf	(??___flmul^(0+128)+3)
  8625  00D8  0856               	movf	??___flmul^(0+128),w
  8626  00D9  07E2               	addwf	___flmul@prod^(0+128),f
  8627  00DA  0857               	movf	(??___flmul+1)^(0+128),w
  8628  00DB  3DE3               	addwfc	(___flmul@prod+1)^(0+128),f
  8629  00DC  0858               	movf	(??___flmul+2)^(0+128),w
  8630  00DD  3DE4               	addwfc	(___flmul@prod+2)^(0+128),f
  8631  00DE  0859               	movf	(??___flmul+3)^(0+128),w
  8632  00DF  3DE5               	addwfc	(___flmul@prod+3)^(0+128),f
  8633  00E0  0850               	movf	(___flmul@b^(0+128)+2),w
  8634  00E1  00D6               	movwf	??___flmul^(0+128)
  8635  00E2  0856               	movf	??___flmul^(0+128),w
  8636  00E3  0020               	movlb	0	; select bank0
  8637  00E4  00A8               	movwf	__Umul8_16@multiplicand
  8638  00E5  0021               	movlb	1	; select bank1
  8639  00E6  0852               	movf	___flmul@a^(0+128),w
  8640  00E7  3196  26FD  3180   	fcall	__Umul8_16
  8641  00EA  0020               	movlb	0	; select bank0
  8642  00EB  0829               	movf	?__Umul8_16+1,w
  8643  00EC  0021               	movlb	1	; select bank1
  8644  00ED  00E7               	movwf	(___flmul@temp+1)^(0+128)
  8645  00EE  0020               	movlb	0	; select bank0
  8646  00EF  0828               	movf	?__Umul8_16,w
  8647  00F0  0021               	movlb	1	; select bank1
  8648  00F1  00E6               	movwf	___flmul@temp^(0+128)
  8649  00F2  0866               	movf	___flmul@temp^(0+128),w
  8650  00F3  00D6               	movwf	??___flmul^(0+128)
  8651  00F4  01D7               	clrf	(??___flmul^(0+128)+1)
  8652  00F5  01D8               	clrf	(??___flmul^(0+128)+2)
  8653  00F6  01D9               	clrf	(??___flmul^(0+128)+3)
  8654  00F7  0856               	movf	??___flmul^(0+128),w
  8655  00F8  07DD               	addwf	___flmul@grs^(0+128),f
  8656  00F9  0857               	movf	(??___flmul+1)^(0+128),w
  8657  00FA  3DDE               	addwfc	(___flmul@grs+1)^(0+128),f
  8658  00FB  0858               	movf	(??___flmul+2)^(0+128),w
  8659  00FC  3DDF               	addwfc	(___flmul@grs+2)^(0+128),f
  8660  00FD  0859               	movf	(??___flmul+3)^(0+128),w
  8661  00FE  3DE0               	addwfc	(___flmul@grs+3)^(0+128),f
  8662  00FF  0867               	movf	(___flmul@temp^(0+128)+1),w
  8663  0100  00D6               	movwf	??___flmul^(0+128)
  8664  0101  01D7               	clrf	(??___flmul^(0+128)+1)
  8665  0102  01D8               	clrf	(??___flmul^(0+128)+2)
  8666  0103  01D9               	clrf	(??___flmul^(0+128)+3)
  8667  0104  0856               	movf	??___flmul^(0+128),w
  8668  0105  07E2               	addwf	___flmul@prod^(0+128),f
  8669  0106  0857               	movf	(??___flmul+1)^(0+128),w
  8670  0107  3DE3               	addwfc	(___flmul@prod+1)^(0+128),f
  8671  0108  0858               	movf	(??___flmul+2)^(0+128),w
  8672  0109  3DE4               	addwfc	(___flmul@prod+2)^(0+128),f
  8673  010A  0859               	movf	(??___flmul+3)^(0+128),w
  8674  010B  3DE5               	addwfc	(___flmul@prod+3)^(0+128),f
  8675  010C  3008               	movlw	8
  8676  010D                     u5605:	
  8677  010D  35DD               	lslf	___flmul@grs^(0+128),f
  8678  010E  0DDE               	rlf	(___flmul@grs+1)^(0+128),f
  8679  010F  0DDF               	rlf	(___flmul@grs+2)^(0+128),f
  8680  0110  0DE0               	rlf	(___flmul@grs+3)^(0+128),f
  8681  0111  0B89               	decfsz	9,f
  8682  0112  290D               	goto	u5605
  8683  0113  084F               	movf	(___flmul@b^(0+128)+1),w
  8684  0114  00D6               	movwf	??___flmul^(0+128)
  8685  0115  0856               	movf	??___flmul^(0+128),w
  8686  0116  0020               	movlb	0	; select bank0
  8687  0117  00A8               	movwf	__Umul8_16@multiplicand
  8688  0118  0021               	movlb	1	; select bank1
  8689  0119  0852               	movf	___flmul@a^(0+128),w
  8690  011A  3196  26FD  3180   	fcall	__Umul8_16
  8691  011D  0020               	movlb	0	; select bank0
  8692  011E  0829               	movf	?__Umul8_16+1,w
  8693  011F  0021               	movlb	1	; select bank1
  8694  0120  00E7               	movwf	(___flmul@temp+1)^(0+128)
  8695  0121  0020               	movlb	0	; select bank0
  8696  0122  0828               	movf	?__Umul8_16,w
  8697  0123  0021               	movlb	1	; select bank1
  8698  0124  00E6               	movwf	___flmul@temp^(0+128)
  8699  0125  0866               	movf	___flmul@temp^(0+128),w
  8700  0126  07DD               	addwf	___flmul@grs^(0+128),f
  8701  0127  0867               	movf	(___flmul@temp+1)^(0+128),w
  8702  0128  3DDE               	addwfc	(___flmul@grs+1)^(0+128),f
  8703  0129  3000               	movlw	0
  8704  012A  3DDF               	addwfc	(___flmul@grs+2)^(0+128),f
  8705  012B  3DE0               	addwfc	(___flmul@grs+3)^(0+128),f
  8706  012C  084E               	movf	___flmul@b^(0+128),w
  8707  012D  00D6               	movwf	??___flmul^(0+128)
  8708  012E  0856               	movf	??___flmul^(0+128),w
  8709  012F  0020               	movlb	0	; select bank0
  8710  0130  00A8               	movwf	__Umul8_16@multiplicand
  8711  0131  0021               	movlb	1	; select bank1
  8712  0132  0853               	movf	(___flmul@a^(0+128)+1),w
  8713  0133  3196  26FD  3180   	fcall	__Umul8_16
  8714  0136  0020               	movlb	0	; select bank0
  8715  0137  0829               	movf	?__Umul8_16+1,w
  8716  0138  0021               	movlb	1	; select bank1
  8717  0139  00E7               	movwf	(___flmul@temp+1)^(0+128)
  8718  013A  0020               	movlb	0	; select bank0
  8719  013B  0828               	movf	?__Umul8_16,w
  8720  013C  0021               	movlb	1	; select bank1
  8721  013D  00E6               	movwf	___flmul@temp^(0+128)
  8722  013E  0866               	movf	___flmul@temp^(0+128),w
  8723  013F  07DD               	addwf	___flmul@grs^(0+128),f
  8724  0140  0867               	movf	(___flmul@temp+1)^(0+128),w
  8725  0141  3DDE               	addwfc	(___flmul@grs+1)^(0+128),f
  8726  0142  3000               	movlw	0
  8727  0143  3DDF               	addwfc	(___flmul@grs+2)^(0+128),f
  8728  0144  3DE0               	addwfc	(___flmul@grs+3)^(0+128),f
  8729  0145  3008               	movlw	8
  8730  0146                     u5615:	
  8731  0146  35DD               	lslf	___flmul@grs^(0+128),f
  8732  0147  0DDE               	rlf	(___flmul@grs+1)^(0+128),f
  8733  0148  0DDF               	rlf	(___flmul@grs+2)^(0+128),f
  8734  0149  0DE0               	rlf	(___flmul@grs+3)^(0+128),f
  8735  014A  0B89               	decfsz	9,f
  8736  014B  2946               	goto	u5615
  8737  014C  084E               	movf	___flmul@b^(0+128),w
  8738  014D  00D6               	movwf	??___flmul^(0+128)
  8739  014E  0856               	movf	??___flmul^(0+128),w
  8740  014F  0020               	movlb	0	; select bank0
  8741  0150  00A8               	movwf	__Umul8_16@multiplicand
  8742  0151  0021               	movlb	1	; select bank1
  8743  0152  0852               	movf	___flmul@a^(0+128),w
  8744  0153  3196  26FD  3180   	fcall	__Umul8_16
  8745  0156  0020               	movlb	0	; select bank0
  8746  0157  0829               	movf	?__Umul8_16+1,w
  8747  0158  0021               	movlb	1	; select bank1
  8748  0159  00E7               	movwf	(___flmul@temp+1)^(0+128)
  8749  015A  0020               	movlb	0	; select bank0
  8750  015B  0828               	movf	?__Umul8_16,w
  8751  015C  0021               	movlb	1	; select bank1
  8752  015D  00E6               	movwf	___flmul@temp^(0+128)
  8753  015E  0866               	movf	___flmul@temp^(0+128),w
  8754  015F  07DD               	addwf	___flmul@grs^(0+128),f
  8755  0160  0867               	movf	(___flmul@temp+1)^(0+128),w
  8756  0161  3DDE               	addwfc	(___flmul@grs+1)^(0+128),f
  8757  0162  3000               	movlw	0
  8758  0163  3DDF               	addwfc	(___flmul@grs+2)^(0+128),f
  8759  0164  3DE0               	addwfc	(___flmul@grs+3)^(0+128),f
  8760  0165  084F               	movf	(___flmul@b^(0+128)+1),w
  8761  0166  00D6               	movwf	??___flmul^(0+128)
  8762  0167  0856               	movf	??___flmul^(0+128),w
  8763  0168  0020               	movlb	0	; select bank0
  8764  0169  00A8               	movwf	__Umul8_16@multiplicand
  8765  016A  0021               	movlb	1	; select bank1
  8766  016B  0854               	movf	(___flmul@a^(0+128)+2),w
  8767  016C  3196  26FD  3180   	fcall	__Umul8_16
  8768  016F  0020               	movlb	0	; select bank0
  8769  0170  0829               	movf	?__Umul8_16+1,w
  8770  0171  0021               	movlb	1	; select bank1
  8771  0172  00E7               	movwf	(___flmul@temp+1)^(0+128)
  8772  0173  0020               	movlb	0	; select bank0
  8773  0174  0828               	movf	?__Umul8_16,w
  8774  0175  0021               	movlb	1	; select bank1
  8775  0176  00E6               	movwf	___flmul@temp^(0+128)
  8776  0177  0866               	movf	___flmul@temp^(0+128),w
  8777  0178  07E2               	addwf	___flmul@prod^(0+128),f
  8778  0179  0867               	movf	(___flmul@temp+1)^(0+128),w
  8779  017A  3DE3               	addwfc	(___flmul@prod+1)^(0+128),f
  8780  017B  3000               	movlw	0
  8781  017C  3DE4               	addwfc	(___flmul@prod+2)^(0+128),f
  8782  017D  3DE5               	addwfc	(___flmul@prod+3)^(0+128),f
  8783  017E  0850               	movf	(___flmul@b^(0+128)+2),w
  8784  017F  00D6               	movwf	??___flmul^(0+128)
  8785  0180  0856               	movf	??___flmul^(0+128),w
  8786  0181  0020               	movlb	0	; select bank0
  8787  0182  00A8               	movwf	__Umul8_16@multiplicand
  8788  0183  0021               	movlb	1	; select bank1
  8789  0184  0853               	movf	(___flmul@a^(0+128)+1),w
  8790  0185  3196  26FD  3180   	fcall	__Umul8_16
  8791  0188  0020               	movlb	0	; select bank0
  8792  0189  0829               	movf	?__Umul8_16+1,w
  8793  018A  0021               	movlb	1	; select bank1
  8794  018B  00E7               	movwf	(___flmul@temp+1)^(0+128)
  8795  018C  0020               	movlb	0	; select bank0
  8796  018D  0828               	movf	?__Umul8_16,w
  8797  018E  0021               	movlb	1	; select bank1
  8798  018F  00E6               	movwf	___flmul@temp^(0+128)
  8799  0190  0866               	movf	___flmul@temp^(0+128),w
  8800  0191  07E2               	addwf	___flmul@prod^(0+128),f
  8801  0192  0867               	movf	(___flmul@temp+1)^(0+128),w
  8802  0193  3DE3               	addwfc	(___flmul@prod+1)^(0+128),f
  8803  0194  3000               	movlw	0
  8804  0195  3DE4               	addwfc	(___flmul@prod+2)^(0+128),f
  8805  0196  3DE5               	addwfc	(___flmul@prod+3)^(0+128),f
  8806  0197  0850               	movf	(___flmul@b^(0+128)+2),w
  8807  0198  00D6               	movwf	??___flmul^(0+128)
  8808  0199  0856               	movf	??___flmul^(0+128),w
  8809  019A  0020               	movlb	0	; select bank0
  8810  019B  00A8               	movwf	__Umul8_16@multiplicand
  8811  019C  0021               	movlb	1	; select bank1
  8812  019D  0854               	movf	(___flmul@a^(0+128)+2),w
  8813  019E  3196  26FD  3180   	fcall	__Umul8_16
  8814  01A1  0020               	movlb	0	; select bank0
  8815  01A2  0829               	movf	?__Umul8_16+1,w
  8816  01A3  0021               	movlb	1	; select bank1
  8817  01A4  00E7               	movwf	(___flmul@temp+1)^(0+128)
  8818  01A5  0020               	movlb	0	; select bank0
  8819  01A6  0828               	movf	?__Umul8_16,w
  8820  01A7  0021               	movlb	1	; select bank1
  8821  01A8  00E6               	movwf	___flmul@temp^(0+128)
  8822  01A9  0866               	movf	___flmul@temp^(0+128),w
  8823  01AA  00D6               	movwf	??___flmul^(0+128)
  8824  01AB  0867               	movf	(___flmul@temp+1)^(0+128),w
  8825  01AC  00D7               	movwf	(??___flmul^(0+128)+1)
  8826  01AD  01D8               	clrf	(??___flmul^(0+128)+2)
  8827  01AE  01D9               	clrf	(??___flmul^(0+128)+3)
  8828  01AF  3008               	movlw	8
  8829  01B0                     u5625:	
  8830  01B0  35D6               	lslf	??___flmul^(0+128),f
  8831  01B1  0DD7               	rlf	(??___flmul^(0+128)+1),f
  8832  01B2  0DD8               	rlf	(??___flmul^(0+128)+2),f
  8833  01B3  0DD9               	rlf	(??___flmul^(0+128)+3),f
  8834  01B4  0B89               	decfsz	9,f
  8835  01B5  29B0               	goto	u5625
  8836  01B6  0856               	movf	??___flmul^(0+128),w
  8837  01B7  07E2               	addwf	___flmul@prod^(0+128),f
  8838  01B8  0857               	movf	(??___flmul+1)^(0+128),w
  8839  01B9  3DE3               	addwfc	(___flmul@prod+1)^(0+128),f
  8840  01BA  0858               	movf	(??___flmul+2)^(0+128),w
  8841  01BB  3DE4               	addwfc	(___flmul@prod+2)^(0+128),f
  8842  01BC  0859               	movf	(??___flmul+3)^(0+128),w
  8843  01BD  3DE5               	addwfc	(___flmul@prod+3)^(0+128),f
  8844  01BE  085D               	movf	___flmul@grs^(0+128),w
  8845  01BF  00D6               	movwf	??___flmul^(0+128)
  8846  01C0  085E               	movf	(___flmul@grs+1)^(0+128),w
  8847  01C1  00D7               	movwf	(??___flmul^(0+128)+1)
  8848  01C2  085F               	movf	(___flmul@grs+2)^(0+128),w
  8849  01C3  00D8               	movwf	(??___flmul^(0+128)+2)
  8850  01C4  0860               	movf	(___flmul@grs+3)^(0+128),w
  8851  01C5  00D9               	movwf	(??___flmul^(0+128)+3)
  8852  01C6  3018               	movlw	24
  8853  01C7                     u5635:	
  8854  01C7  36D9               	lsrf	(??___flmul^(0+128)+3),f
  8855  01C8  0CD8               	rrf	(??___flmul^(0+128)+2),f
  8856  01C9  0CD7               	rrf	(??___flmul^(0+128)+1),f
  8857  01CA  0CD6               	rrf	??___flmul^(0+128),f
  8858  01CB  0B89               	decfsz	9,f
  8859  01CC  29C7               	goto	u5635
  8860  01CD  0856               	movf	??___flmul^(0+128),w
  8861  01CE  07E2               	addwf	___flmul@prod^(0+128),f
  8862  01CF  0857               	movf	(??___flmul+1)^(0+128),w
  8863  01D0  3DE3               	addwfc	(___flmul@prod+1)^(0+128),f
  8864  01D1  0858               	movf	(??___flmul+2)^(0+128),w
  8865  01D2  3DE4               	addwfc	(___flmul@prod+2)^(0+128),f
  8866  01D3  0859               	movf	(??___flmul+3)^(0+128),w
  8867  01D4  3DE5               	addwfc	(___flmul@prod+3)^(0+128),f
  8868  01D5  3008               	movlw	8
  8869  01D6                     u5645:	
  8870  01D6  35DD               	lslf	___flmul@grs^(0+128),f
  8871  01D7  0DDE               	rlf	(___flmul@grs+1)^(0+128),f
  8872  01D8  0DDF               	rlf	(___flmul@grs+2)^(0+128),f
  8873  01D9  0DE0               	rlf	(___flmul@grs+3)^(0+128),f
  8874  01DA  0B89               	decfsz	9,f
  8875  01DB  29D6               	goto	u5645
  8876  01DC  0861               	movf	___flmul@bexp^(0+128),w
  8877  01DD  075C               	addwf	___flmul@aexp^(0+128),w
  8878  01DE  00D6               	movwf	??___flmul^(0+128)
  8879  01DF  01D7               	clrf	(??___flmul^(0+128)+1)
  8880  01E0  0DD7               	rlf	(??___flmul+1)^(0+128),f
  8881  01E1  0856               	movf	??___flmul^(0+128),w
  8882  01E2  3E82               	addlw	130
  8883  01E3  00E6               	movwf	___flmul@temp^(0+128)
  8884  01E4  30FF               	movlw	255
  8885  01E5  3D57               	addwfc	(??___flmul+1)^(0+128),w
  8886  01E6  00E7               	movwf	(___flmul@temp+1)^(0+128)
  8887  01E7                     l4197:	
  8888  01E7  1BE4               	btfsc	(___flmul@prod+2)^(0+128),7
  8889  01E8  29FE               	goto	l4199
  8890  01E9  3001               	movlw	1
  8891  01EA                     u5655:	
  8892  01EA  35E2               	lslf	___flmul@prod^(0+128),f
  8893  01EB  0DE3               	rlf	(___flmul@prod+1)^(0+128),f
  8894  01EC  0DE4               	rlf	(___flmul@prod+2)^(0+128),f
  8895  01ED  0DE5               	rlf	(___flmul@prod+3)^(0+128),f
  8896  01EE  0B89               	decfsz	9,f
  8897  01EF  29EA               	goto	u5655
  8898  01F0  1BE0               	btfsc	(___flmul@grs+3)^(0+128),7
  8899  01F1  1462               	bsf	___flmul@prod^(0+128),0
  8900  01F2  3001               	movlw	1
  8901  01F3                     u5675:	
  8902  01F3  35DD               	lslf	___flmul@grs^(0+128),f
  8903  01F4  0DDE               	rlf	(___flmul@grs+1)^(0+128),f
  8904  01F5  0DDF               	rlf	(___flmul@grs+2)^(0+128),f
  8905  01F6  0DE0               	rlf	(___flmul@grs+3)^(0+128),f
  8906  01F7  0B89               	decfsz	9,f
  8907  01F8  29F3               	goto	u5675
  8908  01F9  30FF               	movlw	255
  8909  01FA  07E6               	addwf	___flmul@temp^(0+128),f
  8910  01FB  30FF               	movlw	255
  8911  01FC  3DE7               	addwfc	(___flmul@temp+1)^(0+128),f
  8912  01FD  29E7               	goto	l4197
  8913  01FE                     l4199:	
  8914  01FE  01DC               	clrf	___flmul@aexp^(0+128)
  8915  01FF  1FE0               	btfss	(___flmul@grs+3)^(0+128),7
  8916  0200  2A17               	goto	l4209
  8917  0201  30FF               	movlw	255
  8918  0202  055D               	andwf	___flmul@grs^(0+128),w
  8919  0203  00D6               	movwf	??___flmul^(0+128)
  8920  0204  30FF               	movlw	255
  8921  0205  055E               	andwf	(___flmul@grs+1)^(0+128),w
  8922  0206  00D7               	movwf	(??___flmul^(0+128)+1)
  8923  0207  30FF               	movlw	255
  8924  0208  055F               	andwf	(___flmul@grs+2)^(0+128),w
  8925  0209  00D8               	movwf	(??___flmul^(0+128)+2)
  8926  020A  307F               	movlw	127
  8927  020B  0560               	andwf	(___flmul@grs+3)^(0+128),w
  8928  020C  00D9               	movwf	(??___flmul^(0+128)+3)
  8929  020D  0859               	movf	(??___flmul+3)^(0+128),w
  8930  020E  0458               	iorwf	(??___flmul+2)^(0+128),w
  8931  020F  0457               	iorwf	(??___flmul+1)^(0+128),w
  8932  0210  0456               	iorwf	??___flmul^(0+128),w
  8933  0211  1903               	skipnz
  8934  0212  1862               	btfsc	___flmul@prod^(0+128),0
  8935  0213  2A15               	goto	l4205
  8936  0214  2A17               	goto	l4209
  8937  0215                     l4205:	
  8938  0215  01DC               	clrf	___flmul@aexp^(0+128)
  8939  0216  0ADC               	incf	___flmul@aexp^(0+128),f
  8940  0217                     l4209:	
  8941  0217  085C               	movf	___flmul@aexp^(0+128),w
  8942  0218  1903               	btfsc	3,2
  8943  0219  2A40               	goto	l4219
  8944  021A  3001               	movlw	1
  8945  021B  07E2               	addwf	___flmul@prod^(0+128),f
  8946  021C  3000               	movlw	0
  8947  021D  3DE3               	addwfc	(___flmul@prod+1)^(0+128),f
  8948  021E  3000               	movlw	0
  8949  021F  3DE4               	addwfc	(___flmul@prod+2)^(0+128),f
  8950  0220  3000               	movlw	0
  8951  0221  3DE5               	addwfc	(___flmul@prod+3)^(0+128),f
  8952  0222  1C65               	btfss	(___flmul@prod+3)^(0+128),0
  8953  0223  2A40               	goto	l4219
  8954  0224  0862               	movf	___flmul@prod^(0+128),w
  8955  0225  00D6               	movwf	??___flmul^(0+128)
  8956  0226  0863               	movf	(___flmul@prod+1)^(0+128),w
  8957  0227  00D7               	movwf	(??___flmul^(0+128)+1)
  8958  0228  0864               	movf	(___flmul@prod+2)^(0+128),w
  8959  0229  00D8               	movwf	(??___flmul^(0+128)+2)
  8960  022A  0865               	movf	(___flmul@prod+3)^(0+128),w
  8961  022B  00D9               	movwf	(??___flmul^(0+128)+3)
  8962  022C  3001               	movlw	1
  8963  022D  00DA               	movwf	(??___flmul+4)^(0+128)
  8964  022E                     u5745:	
  8965  022E  37D9               	asrf	(??___flmul^(0+128)+3),f
  8966  022F  0CD8               	rrf	(??___flmul^(0+128)+2),f
  8967  0230  0CD7               	rrf	(??___flmul^(0+128)+1),f
  8968  0231  0CD6               	rrf	??___flmul^(0+128),f
  8969  0232  0BDA               	decfsz	(??___flmul+4)^(0+128),f
  8970  0233  2A2E               	goto	u5745
  8971  0234  0859               	movf	(??___flmul+3)^(0+128),w
  8972  0235  00E5               	movwf	(___flmul@prod+3)^(0+128)
  8973  0236  0858               	movf	(??___flmul+2)^(0+128),w
  8974  0237  00E4               	movwf	(___flmul@prod+2)^(0+128)
  8975  0238  0857               	movf	(??___flmul+1)^(0+128),w
  8976  0239  00E3               	movwf	(___flmul@prod+1)^(0+128)
  8977  023A  0856               	movf	??___flmul^(0+128),w
  8978  023B  00E2               	movwf	___flmul@prod^(0+128)
  8979  023C  3001               	movlw	1
  8980  023D  07E6               	addwf	___flmul@temp^(0+128),f
  8981  023E  3000               	movlw	0
  8982  023F  3DE7               	addwfc	(___flmul@temp+1)^(0+128),f
  8983  0240                     l4219:	
  8984  0240  0867               	movf	(___flmul@temp+1)^(0+128),w
  8985  0241  3A80               	xorlw	128
  8986  0242  00D6               	movwf	??___flmul^(0+128)
  8987  0243  3080               	movlw	128
  8988  0244  0256               	subwf	??___flmul^(0+128),w
  8989  0245  1D03               	skipz
  8990  0246  2A49               	goto	u5755
  8991  0247  30FF               	movlw	255
  8992  0248  0266               	subwf	___flmul@temp^(0+128),w
  8993  0249                     u5755:	
  8994  0249  1C03               	skipc
  8995  024A  2A55               	goto	l4223
  8996  024B  307F               	movlw	127
  8997  024C  0021               	movlb	1	; select bank1
  8998  024D  00E5               	movwf	(___flmul@prod+3)^(0+128)
  8999  024E  3080               	movlw	128
  9000  024F  00E4               	movwf	(___flmul@prod+2)^(0+128)
  9001  0250  3000               	movlw	0
  9002  0251  00E3               	movwf	(___flmul@prod+1)^(0+128)
  9003  0252  3000               	movlw	0
  9004  0253  00E2               	movwf	___flmul@prod^(0+128)
  9005  0254  2A7F               	goto	l951
  9006  0255                     l4223:	
  9007  0255  0021               	movlb	1	; select bank1
  9008  0256  0867               	movf	(___flmul@temp+1)^(0+128),w
  9009  0257  3A80               	xorlw	128
  9010  0258  00D6               	movwf	??___flmul^(0+128)
  9011  0259  3080               	movlw	128
  9012  025A  0256               	subwf	??___flmul^(0+128),w
  9013  025B  1D03               	skipz
  9014  025C  2A5F               	goto	u5765
  9015  025D  3001               	movlw	1
  9016  025E  0266               	subwf	___flmul@temp^(0+128),w
  9017  025F                     u5765:	
  9018  025F  1803               	skipnc
  9019  0260  2A6C               	goto	l4229
  9020  0261  3000               	movlw	0
  9021  0262  0021               	movlb	1	; select bank1
  9022  0263  00E5               	movwf	(___flmul@prod+3)^(0+128)
  9023  0264  3000               	movlw	0
  9024  0265  00E4               	movwf	(___flmul@prod+2)^(0+128)
  9025  0266  3000               	movlw	0
  9026  0267  00E3               	movwf	(___flmul@prod+1)^(0+128)
  9027  0268  3000               	movlw	0
  9028  0269  00E2               	movwf	___flmul@prod^(0+128)
  9029  026A  01DB               	clrf	___flmul@sign^(0+128)
  9030  026B  2A7F               	goto	l951
  9031  026C                     l4229:	
  9032  026C  0021               	movlb	1	; select bank1
  9033  026D  0866               	movf	___flmul@temp^(0+128),w
  9034  026E  00D6               	movwf	??___flmul^(0+128)
  9035  026F  0856               	movf	??___flmul^(0+128),w
  9036  0270  00E1               	movwf	___flmul@bexp^(0+128)
  9037  0271  30FF               	movlw	255
  9038  0272  05E2               	andwf	___flmul@prod^(0+128),f
  9039  0273  30FF               	movlw	255
  9040  0274  05E3               	andwf	(___flmul@prod+1)^(0+128),f
  9041  0275  307F               	movlw	127
  9042  0276  05E4               	andwf	(___flmul@prod+2)^(0+128),f
  9043  0277  3000               	movlw	0
  9044  0278  05E5               	andwf	(___flmul@prod+3)^(0+128),f
  9045  0279  1861               	btfsc	___flmul@bexp^(0+128),0
  9046  027A  17E4               	bsf	(___flmul@prod^(0+128)+2),7
  9047  027B  3661               	lsrf	___flmul@bexp^(0+128),w
  9048  027C  00D6               	movwf	??___flmul^(0+128)
  9049  027D  0856               	movf	??___flmul^(0+128),w
  9050  027E  00E5               	movwf	(___flmul@prod^(0+128)+3)
  9051  027F                     l951:	
  9052  027F  085B               	movf	___flmul@sign^(0+128),w
  9053  0280  00D6               	movwf	??___flmul^(0+128)
  9054  0281  0856               	movf	??___flmul^(0+128),w
  9055  0282  04E5               	iorwf	(___flmul@prod^(0+128)+3),f
  9056  0283  0865               	movf	(___flmul@prod+3)^(0+128),w
  9057  0284  00D1               	movwf	(?___flmul+3)^(0+128)
  9058  0285  0864               	movf	(___flmul@prod+2)^(0+128),w
  9059  0286  00D0               	movwf	(?___flmul+2)^(0+128)
  9060  0287  0863               	movf	(___flmul@prod+1)^(0+128),w
  9061  0288  00CF               	movwf	(?___flmul+1)^(0+128)
  9062  0289  0862               	movf	___flmul@prod^(0+128),w
  9063  028A  00CE               	movwf	?___flmul^(0+128)
  9064  028B  0008               	return
  9065  028C                     __end_of___flmul:	
  9066                           
  9067                           	psect	text22
  9068  16FD                     __ptext22:	
  9069 ;; *************** function __Umul8_16 *****************
  9070 ;; Defined at:
  9071 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul8_16.c"
  9072 ;; Parameters:    Size  Location     Type
  9073 ;;  multiplier      1    wreg     unsigned char 
  9074 ;;  multiplicand    1    8[BANK0 ] unsigned char 
  9075 ;; Auto vars:     Size  Location     Type
  9076 ;;  multiplier      1   16[BANK0 ] unsigned char 
  9077 ;;  word_mpld       2   14[BANK0 ] unsigned int 
  9078 ;;  product         2   12[BANK0 ] unsigned int 
  9079 ;; Return value:  Size  Location     Type
  9080 ;;                  2    8[BANK0 ] unsigned int 
  9081 ;; Registers used:
  9082 ;;		wreg, status,2, status,0
  9083 ;; Tracked objects:
  9084 ;;		On entry : 0/0
  9085 ;;		On exit  : 0/0
  9086 ;;		Unchanged: 0/0
  9087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9088 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9089 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9090 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9091 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9092 ;;Total ram usage:        9 bytes
  9093 ;; Hardware stack levels used:    1
  9094 ;; Hardware stack levels required when called:    5
  9095 ;; This function calls:
  9096 ;;		Nothing
  9097 ;; This function is called by:
  9098 ;;		___flmul
  9099 ;; This function uses a non-reentrant model
  9100 ;;
  9101                           
  9102                           
  9103                           ;psect for function __Umul8_16
  9104  16FD                     __Umul8_16:	
  9105                           
  9106                           ;incstack = 0
  9107                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  9108                           ;__Umul8_16@multiplier stored from wreg
  9109  16FD  0020               	movlb	0	; select bank0
  9110  16FE  00B0               	movwf	__Umul8_16@multiplier
  9111  16FF  01AC               	clrf	__Umul8_16@product
  9112  1700  01AD               	clrf	__Umul8_16@product+1
  9113  1701  0828               	movf	__Umul8_16@multiplicand,w
  9114  1702  00AA               	movwf	??__Umul8_16
  9115  1703  01AB               	clrf	??__Umul8_16+1
  9116  1704  082A               	movf	??__Umul8_16,w
  9117  1705  00AE               	movwf	__Umul8_16@word_mpld
  9118  1706  082B               	movf	??__Umul8_16+1,w
  9119  1707  00AF               	movwf	__Umul8_16@word_mpld+1
  9120  1708                     l3215:	
  9121  1708  1C30               	btfss	__Umul8_16@multiplier,0
  9122  1709  2F0E               	goto	l1045
  9123  170A  082E               	movf	__Umul8_16@word_mpld,w
  9124  170B  07AC               	addwf	__Umul8_16@product,f
  9125  170C  082F               	movf	__Umul8_16@word_mpld+1,w
  9126  170D  3DAD               	addwfc	__Umul8_16@product+1,f
  9127  170E                     l1045:	
  9128  170E  3001               	movlw	1
  9129  170F                     u3955:	
  9130  170F  35AE               	lslf	__Umul8_16@word_mpld,f
  9131  1710  0DAF               	rlf	__Umul8_16@word_mpld+1,f
  9132  1711  0B89               	decfsz	9,f
  9133  1712  2F0F               	goto	u3955
  9134  1713  1003               	clrc
  9135  1714  0CB0               	rrf	__Umul8_16@multiplier,f
  9136  1715  0830               	movf	__Umul8_16@multiplier,w
  9137  1716  1D03               	btfss	3,2
  9138  1717  2F08               	goto	l3215
  9139  1718  082D               	movf	__Umul8_16@product+1,w
  9140  1719  00A9               	movwf	?__Umul8_16+1
  9141  171A  082C               	movf	__Umul8_16@product,w
  9142  171B  00A8               	movwf	?__Umul8_16
  9143  171C  0008               	return
  9144  171D                     __end_of__Umul8_16:	
  9145                           
  9146                           	psect	text23
  9147  094D                     __ptext23:	
  9148 ;; *************** function ___flge *****************
  9149 ;; Defined at:
  9150 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
  9151 ;; Parameters:    Size  Location     Type
  9152 ;;  ff1             4    8[BANK0 ] unsigned int 
  9153 ;;  ff2             4   12[BANK0 ] unsigned int 
  9154 ;; Auto vars:     Size  Location     Type
  9155 ;;		None
  9156 ;; Return value:  Size  Location     Type
  9157 ;;		None               void
  9158 ;; Registers used:
  9159 ;;		wreg, status,2, status,0
  9160 ;; Tracked objects:
  9161 ;;		On entry : 0/0
  9162 ;;		On exit  : 0/0
  9163 ;;		Unchanged: 0/0
  9164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9165 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9167 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9168 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9169 ;;Total ram usage:       12 bytes
  9170 ;; Hardware stack levels used:    1
  9171 ;; Hardware stack levels required when called:    5
  9172 ;; This function calls:
  9173 ;;		Nothing
  9174 ;; This function is called by:
  9175 ;;		_main
  9176 ;; This function uses a non-reentrant model
  9177 ;;
  9178                           
  9179                           
  9180                           ;psect for function ___flge
  9181  094D                     ___flge:	
  9182                           
  9183                           ;incstack = 0
  9184                           ; Regs used in ___flge: [wreg+status,2+status,0]
  9185  094D  3000               	movlw	0
  9186  094E  0020               	movlb	0	; select bank0
  9187  094F  0528               	andwf	___flge@ff1,w
  9188  0950  00B0               	movwf	??___flge
  9189  0951  3000               	movlw	0
  9190  0952  0529               	andwf	___flge@ff1+1,w
  9191  0953  00B1               	movwf	??___flge+1
  9192  0954  3080               	movlw	128
  9193  0955  052A               	andwf	___flge@ff1+2,w
  9194  0956  00B2               	movwf	??___flge+2
  9195  0957  307F               	movlw	127
  9196  0958  052B               	andwf	___flge@ff1+3,w
  9197  0959  00B3               	movwf	??___flge+3
  9198  095A  0833               	movf	??___flge+3,w
  9199  095B  0432               	iorwf	??___flge+2,w
  9200  095C  0431               	iorwf	??___flge+1,w
  9201  095D  0430               	iorwf	??___flge,w
  9202  095E  1D03               	skipz
  9203  095F  2968               	goto	l720
  9204  0960  3000               	movlw	0
  9205  0961  00AB               	movwf	___flge@ff1+3
  9206  0962  3000               	movlw	0
  9207  0963  00AA               	movwf	___flge@ff1+2
  9208  0964  3000               	movlw	0
  9209  0965  00A9               	movwf	___flge@ff1+1
  9210  0966  3000               	movlw	0
  9211  0967  00A8               	movwf	___flge@ff1
  9212  0968                     l720:	
  9213  0968  3000               	movlw	0
  9214  0969  052C               	andwf	___flge@ff2,w
  9215  096A  00B0               	movwf	??___flge
  9216  096B  3000               	movlw	0
  9217  096C  052D               	andwf	___flge@ff2+1,w
  9218  096D  00B1               	movwf	??___flge+1
  9219  096E  3080               	movlw	128
  9220  096F  052E               	andwf	___flge@ff2+2,w
  9221  0970  00B2               	movwf	??___flge+2
  9222  0971  307F               	movlw	127
  9223  0972  052F               	andwf	___flge@ff2+3,w
  9224  0973  00B3               	movwf	??___flge+3
  9225  0974  0833               	movf	??___flge+3,w
  9226  0975  0432               	iorwf	??___flge+2,w
  9227  0976  0431               	iorwf	??___flge+1,w
  9228  0977  0430               	iorwf	??___flge,w
  9229  0978  1D03               	skipz
  9230  0979  2982               	goto	l3313
  9231  097A  3000               	movlw	0
  9232  097B  00AF               	movwf	___flge@ff2+3
  9233  097C  3000               	movlw	0
  9234  097D  00AE               	movwf	___flge@ff2+2
  9235  097E  3000               	movlw	0
  9236  097F  00AD               	movwf	___flge@ff2+1
  9237  0980  3000               	movlw	0
  9238  0981  00AC               	movwf	___flge@ff2
  9239  0982                     l3313:	
  9240  0982  1FAB               	btfss	___flge@ff1+3,7
  9241  0983  299C               	goto	l3317
  9242  0984  3000               	movlw	0
  9243  0985  00B0               	movwf	??___flge
  9244  0986  3000               	movlw	0
  9245  0987  00B1               	movwf	??___flge+1
  9246  0988  3000               	movlw	0
  9247  0989  00B2               	movwf	??___flge+2
  9248  098A  3080               	movlw	128
  9249  098B  00B3               	movwf	??___flge+3
  9250  098C  0828               	movf	___flge@ff1,w
  9251  098D  02B0               	subwf	??___flge,f
  9252  098E  0829               	movf	___flge@ff1+1,w
  9253  098F  3BB1               	subwfb	??___flge+1,f
  9254  0990  082A               	movf	___flge@ff1+2,w
  9255  0991  3BB2               	subwfb	??___flge+2,f
  9256  0992  082B               	movf	___flge@ff1+3,w
  9257  0993  3BB3               	subwfb	??___flge+3,f
  9258  0994  0833               	movf	??___flge+3,w
  9259  0995  00AB               	movwf	___flge@ff1+3
  9260  0996  0832               	movf	??___flge+2,w
  9261  0997  00AA               	movwf	___flge@ff1+2
  9262  0998  0831               	movf	??___flge+1,w
  9263  0999  00A9               	movwf	___flge@ff1+1
  9264  099A  0830               	movf	??___flge,w
  9265  099B  00A8               	movwf	___flge@ff1
  9266  099C                     l3317:	
  9267  099C  1FAF               	btfss	___flge@ff2+3,7
  9268  099D  29B6               	goto	l723
  9269  099E  3000               	movlw	0
  9270  099F  00B0               	movwf	??___flge
  9271  09A0  3000               	movlw	0
  9272  09A1  00B1               	movwf	??___flge+1
  9273  09A2  3000               	movlw	0
  9274  09A3  00B2               	movwf	??___flge+2
  9275  09A4  3080               	movlw	128
  9276  09A5  00B3               	movwf	??___flge+3
  9277  09A6  082C               	movf	___flge@ff2,w
  9278  09A7  02B0               	subwf	??___flge,f
  9279  09A8  082D               	movf	___flge@ff2+1,w
  9280  09A9  3BB1               	subwfb	??___flge+1,f
  9281  09AA  082E               	movf	___flge@ff2+2,w
  9282  09AB  3BB2               	subwfb	??___flge+2,f
  9283  09AC  082F               	movf	___flge@ff2+3,w
  9284  09AD  3BB3               	subwfb	??___flge+3,f
  9285  09AE  0833               	movf	??___flge+3,w
  9286  09AF  00AF               	movwf	___flge@ff2+3
  9287  09B0  0832               	movf	??___flge+2,w
  9288  09B1  00AE               	movwf	___flge@ff2+2
  9289  09B2  0831               	movf	??___flge+1,w
  9290  09B3  00AD               	movwf	___flge@ff2+1
  9291  09B4  0830               	movf	??___flge,w
  9292  09B5  00AC               	movwf	___flge@ff2
  9293  09B6                     l723:	
  9294  09B6  3080               	movlw	128
  9295  09B7  06AB               	xorwf	___flge@ff1+3,f
  9296  09B8  3080               	movlw	128
  9297  09B9  06AF               	xorwf	___flge@ff2+3,f
  9298  09BA  082F               	movf	___flge@ff2+3,w
  9299  09BB  022B               	subwf	___flge@ff1+3,w
  9300  09BC  1D03               	skipz
  9301  09BD  0008               	return
  9302  09BE  082E               	movf	___flge@ff2+2,w
  9303  09BF  022A               	subwf	___flge@ff1+2,w
  9304  09C0  1D03               	skipz
  9305  09C1  0008               	return
  9306  09C2  082D               	movf	___flge@ff2+1,w
  9307  09C3  0229               	subwf	___flge@ff1+1,w
  9308  09C4  1D03               	skipz
  9309  09C5  0008               	return
  9310  09C6  082C               	movf	___flge@ff2,w
  9311  09C7  0228               	subwf	___flge@ff1,w
  9312  09C8  0008               	return
  9313  09C9                     __end_of___flge:	
  9314                           
  9315                           	psect	text24
  9316  0E86                     __ptext24:	
  9317 ;; *************** function ___fldiv *****************
  9318 ;; Defined at:
  9319 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
  9320 ;; Parameters:    Size  Location     Type
  9321 ;;  a               4   36[BANK0 ] unsigned int 
  9322 ;;  b               4   40[BANK0 ] unsigned int 
  9323 ;; Auto vars:     Size  Location     Type
  9324 ;;  grs             4   56[BANK0 ] unsigned long 
  9325 ;;  rem             4   49[BANK0 ] unsigned long 
  9326 ;;  new_exp         2   54[BANK0 ] int 
  9327 ;;  aexp            1   61[BANK0 ] unsigned char 
  9328 ;;  bexp            1   60[BANK0 ] unsigned char 
  9329 ;;  sign            1   53[BANK0 ] unsigned char 
  9330 ;; Return value:  Size  Location     Type
  9331 ;;                  4   36[BANK0 ] unsigned char 
  9332 ;; Registers used:
  9333 ;;		wreg, status,2, status,0
  9334 ;; Tracked objects:
  9335 ;;		On entry : 0/0
  9336 ;;		On exit  : 0/0
  9337 ;;		Unchanged: 0/0
  9338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9339 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9340 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9341 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9342 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9343 ;;Total ram usage:       26 bytes
  9344 ;; Hardware stack levels used:    1
  9345 ;; Hardware stack levels required when called:    5
  9346 ;; This function calls:
  9347 ;;		Nothing
  9348 ;; This function is called by:
  9349 ;;		_main
  9350 ;; This function uses a non-reentrant model
  9351 ;;
  9352                           
  9353                           
  9354                           ;psect for function ___fldiv
  9355  0E86                     ___fldiv:	
  9356                           
  9357                           ;incstack = 0
  9358                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
  9359  0E86  0020               	movlb	0	; select bank0
  9360  0E87  084B               	movf	___fldiv@b+3,w
  9361  0E88  3980               	andlw	128
  9362  0E89  00CC               	movwf	??___fldiv
  9363  0E8A  084C               	movf	??___fldiv,w
  9364  0E8B  00D5               	movwf	___fldiv@sign
  9365  0E8C  354B               	lslf	___fldiv@b+3,w
  9366  0E8D  00CC               	movwf	??___fldiv
  9367  0E8E  084C               	movf	??___fldiv,w
  9368  0E8F  00DC               	movwf	___fldiv@bexp
  9369  0E90  1BCA               	btfsc	___fldiv@b+2,7
  9370  0E91  145C               	bsf	___fldiv@bexp,0
  9371  0E92  085C               	movf	___fldiv@bexp,w
  9372  0E93  1903               	btfsc	3,2
  9373  0E94  2EA3               	goto	l3387
  9374  0E95  0A5C               	incf	___fldiv@bexp,w
  9375  0E96  1D03               	btfss	3,2
  9376  0E97  2EA0               	goto	l3383
  9377  0E98  3000               	movlw	0
  9378  0E99  00CB               	movwf	___fldiv@b+3
  9379  0E9A  3000               	movlw	0
  9380  0E9B  00CA               	movwf	___fldiv@b+2
  9381  0E9C  3000               	movlw	0
  9382  0E9D  00C9               	movwf	___fldiv@b+1
  9383  0E9E  3000               	movlw	0
  9384  0E9F  00C8               	movwf	___fldiv@b
  9385  0EA0                     l3383:	
  9386  0EA0  17CA               	bsf	___fldiv@b+2,7
  9387  0EA1  01CB               	clrf	___fldiv@b+3
  9388  0EA2  2EAB               	goto	l3389
  9389  0EA3                     l3387:	
  9390  0EA3  3000               	movlw	0
  9391  0EA4  00CB               	movwf	___fldiv@b+3
  9392  0EA5  3000               	movlw	0
  9393  0EA6  00CA               	movwf	___fldiv@b+2
  9394  0EA7  3000               	movlw	0
  9395  0EA8  00C9               	movwf	___fldiv@b+1
  9396  0EA9  3000               	movlw	0
  9397  0EAA  00C8               	movwf	___fldiv@b
  9398  0EAB                     l3389:	
  9399  0EAB  0847               	movf	___fldiv@a+3,w
  9400  0EAC  3980               	andlw	128
  9401  0EAD  00CC               	movwf	??___fldiv
  9402  0EAE  084C               	movf	??___fldiv,w
  9403  0EAF  06D5               	xorwf	___fldiv@sign,f
  9404  0EB0  3547               	lslf	___fldiv@a+3,w
  9405  0EB1  00CC               	movwf	??___fldiv
  9406  0EB2  084C               	movf	??___fldiv,w
  9407  0EB3  00DD               	movwf	___fldiv@aexp
  9408  0EB4  1BC6               	btfsc	___fldiv@a+2,7
  9409  0EB5  145D               	bsf	___fldiv@aexp,0
  9410  0EB6  085D               	movf	___fldiv@aexp,w
  9411  0EB7  1903               	btfsc	3,2
  9412  0EB8  2EC7               	goto	l3407
  9413  0EB9  0A5D               	incf	___fldiv@aexp,w
  9414  0EBA  1D03               	btfss	3,2
  9415  0EBB  2EC4               	goto	l3403
  9416  0EBC  3000               	movlw	0
  9417  0EBD  00C7               	movwf	___fldiv@a+3
  9418  0EBE  3000               	movlw	0
  9419  0EBF  00C6               	movwf	___fldiv@a+2
  9420  0EC0  3000               	movlw	0
  9421  0EC1  00C5               	movwf	___fldiv@a+1
  9422  0EC2  3000               	movlw	0
  9423  0EC3  00C4               	movwf	___fldiv@a
  9424  0EC4                     l3403:	
  9425  0EC4  17C6               	bsf	___fldiv@a+2,7
  9426  0EC5  01C7               	clrf	___fldiv@a+3
  9427  0EC6  2ECF               	goto	l899
  9428  0EC7                     l3407:	
  9429  0EC7  3000               	movlw	0
  9430  0EC8  00C7               	movwf	___fldiv@a+3
  9431  0EC9  3000               	movlw	0
  9432  0ECA  00C6               	movwf	___fldiv@a+2
  9433  0ECB  3000               	movlw	0
  9434  0ECC  00C5               	movwf	___fldiv@a+1
  9435  0ECD  3000               	movlw	0
  9436  0ECE  00C4               	movwf	___fldiv@a
  9437  0ECF                     l899:	
  9438  0ECF  0847               	movf	___fldiv@a+3,w
  9439  0ED0  0446               	iorwf	___fldiv@a+2,w
  9440  0ED1  0445               	iorwf	___fldiv@a+1,w
  9441  0ED2  0444               	iorwf	___fldiv@a,w
  9442  0ED3  1D03               	skipz
  9443  0ED4  2EEE               	goto	l3417
  9444  0ED5  3000               	movlw	0
  9445  0ED6  00CB               	movwf	___fldiv@b+3
  9446  0ED7  3000               	movlw	0
  9447  0ED8  00CA               	movwf	___fldiv@b+2
  9448  0ED9  3000               	movlw	0
  9449  0EDA  00C9               	movwf	___fldiv@b+1
  9450  0EDB  3000               	movlw	0
  9451  0EDC  00C8               	movwf	___fldiv@b
  9452  0EDD  3080               	movlw	128
  9453  0EDE  04CA               	iorwf	___fldiv@b+2,f
  9454  0EDF  307F               	movlw	127
  9455  0EE0  04CB               	iorwf	___fldiv@b+3,f
  9456  0EE1                     L4:	
  9457  0EE1  0855               	movf	___fldiv@sign,w
  9458  0EE2  00CC               	movwf	??___fldiv
  9459  0EE3  084C               	movf	??___fldiv,w
  9460  0EE4  04CB               	iorwf	___fldiv@b+3,f
  9461  0EE5  084B               	movf	___fldiv@b+3,w
  9462  0EE6  00C7               	movwf	?___fldiv+3
  9463  0EE7  084A               	movf	___fldiv@b+2,w
  9464  0EE8  00C6               	movwf	?___fldiv+2
  9465  0EE9  0849               	movf	___fldiv@b+1,w
  9466  0EEA  00C5               	movwf	?___fldiv+1
  9467  0EEB  0848               	movf	___fldiv@b,w
  9468  0EEC  00C4               	movwf	?___fldiv
  9469  0EED  0008               	return
  9470  0EEE                     l3417:	
  9471  0EEE  085C               	movf	___fldiv@bexp,w
  9472  0EEF  1D03               	btfss	3,2
  9473  0EF0  2EFA               	goto	l3423
  9474  0EF1  3000               	movlw	0
  9475  0EF2  00C7               	movwf	?___fldiv+3
  9476  0EF3  3000               	movlw	0
  9477  0EF4  00C6               	movwf	?___fldiv+2
  9478  0EF5  3000               	movlw	0
  9479  0EF6  00C5               	movwf	?___fldiv+1
  9480  0EF7  3000               	movlw	0
  9481  0EF8  00C4               	movwf	?___fldiv
  9482  0EF9  0008               	return
  9483  0EFA                     l3423:	
  9484  0EFA  085C               	movf	___fldiv@bexp,w
  9485  0EFB  00CC               	movwf	??___fldiv
  9486  0EFC  01CD               	clrf	??___fldiv+1
  9487  0EFD  084D               	movf	??___fldiv+1,w
  9488  0EFE  00CF               	movwf	??___fldiv+3
  9489  0EFF  085D               	movf	___fldiv@aexp,w
  9490  0F00  024C               	subwf	??___fldiv,w
  9491  0F01  00CE               	movwf	??___fldiv+2
  9492  0F02  1C03               	skipc
  9493  0F03  03CF               	decf	??___fldiv+3,f
  9494  0F04  084E               	movf	??___fldiv+2,w
  9495  0F05  3E7F               	addlw	127
  9496  0F06  00D6               	movwf	___fldiv@new_exp
  9497  0F07  3000               	movlw	0
  9498  0F08  3D4F               	addwfc	??___fldiv+3,w
  9499  0F09  00D7               	movwf	___fldiv@new_exp+1
  9500  0F0A  084B               	movf	___fldiv@b+3,w
  9501  0F0B  00D4               	movwf	___fldiv@rem+3
  9502  0F0C  084A               	movf	___fldiv@b+2,w
  9503  0F0D  00D3               	movwf	___fldiv@rem+2
  9504  0F0E  0849               	movf	___fldiv@b+1,w
  9505  0F0F  00D2               	movwf	___fldiv@rem+1
  9506  0F10  0848               	movf	___fldiv@b,w
  9507  0F11  00D1               	movwf	___fldiv@rem
  9508  0F12  3000               	movlw	0
  9509  0F13  00CB               	movwf	___fldiv@b+3
  9510  0F14  3000               	movlw	0
  9511  0F15  00CA               	movwf	___fldiv@b+2
  9512  0F16  3000               	movlw	0
  9513  0F17  00C9               	movwf	___fldiv@b+1
  9514  0F18  3000               	movlw	0
  9515  0F19  00C8               	movwf	___fldiv@b
  9516  0F1A  3000               	movlw	0
  9517  0F1B  00DB               	movwf	___fldiv@grs+3
  9518  0F1C  3000               	movlw	0
  9519  0F1D  00DA               	movwf	___fldiv@grs+2
  9520  0F1E  3000               	movlw	0
  9521  0F1F  00D9               	movwf	___fldiv@grs+1
  9522  0F20  3000               	movlw	0
  9523  0F21  00D8               	movwf	___fldiv@grs
  9524  0F22  01DD               	clrf	___fldiv@aexp
  9525  0F23                     l3451:	
  9526  0F23  301A               	movlw	26
  9527  0F24  025D               	subwf	___fldiv@aexp,w
  9528  0F25  1803               	btfsc	3,0
  9529  0F26  2F5F               	goto	l3453
  9530  0F27  085D               	movf	___fldiv@aexp,w
  9531  0F28  1903               	btfsc	3,2
  9532  0F29  2F41               	goto	l3443
  9533  0F2A  3001               	movlw	1
  9534  0F2B                     u4285:	
  9535  0F2B  35D1               	lslf	___fldiv@rem,f
  9536  0F2C  0DD2               	rlf	___fldiv@rem+1,f
  9537  0F2D  0DD3               	rlf	___fldiv@rem+2,f
  9538  0F2E  0DD4               	rlf	___fldiv@rem+3,f
  9539  0F2F  0B89               	decfsz	9,f
  9540  0F30  2F2B               	goto	u4285
  9541  0F31  3001               	movlw	1
  9542  0F32                     u4295:	
  9543  0F32  35C8               	lslf	___fldiv@b,f
  9544  0F33  0DC9               	rlf	___fldiv@b+1,f
  9545  0F34  0DCA               	rlf	___fldiv@b+2,f
  9546  0F35  0DCB               	rlf	___fldiv@b+3,f
  9547  0F36  0B89               	decfsz	9,f
  9548  0F37  2F32               	goto	u4295
  9549  0F38  1BDB               	btfsc	___fldiv@grs+3,7
  9550  0F39  1448               	bsf	___fldiv@b,0
  9551  0F3A  3001               	movlw	1
  9552  0F3B                     u4315:	
  9553  0F3B  35D8               	lslf	___fldiv@grs,f
  9554  0F3C  0DD9               	rlf	___fldiv@grs+1,f
  9555  0F3D  0DDA               	rlf	___fldiv@grs+2,f
  9556  0F3E  0DDB               	rlf	___fldiv@grs+3,f
  9557  0F3F  0B89               	decfsz	9,f
  9558  0F40  2F3B               	goto	u4315
  9559  0F41                     l3443:	
  9560  0F41  0847               	movf	___fldiv@a+3,w
  9561  0F42  0254               	subwf	___fldiv@rem+3,w
  9562  0F43  1D03               	skipz
  9563  0F44  2F4F               	goto	u4325
  9564  0F45  0846               	movf	___fldiv@a+2,w
  9565  0F46  0253               	subwf	___fldiv@rem+2,w
  9566  0F47  1D03               	skipz
  9567  0F48  2F4F               	goto	u4325
  9568  0F49  0845               	movf	___fldiv@a+1,w
  9569  0F4A  0252               	subwf	___fldiv@rem+1,w
  9570  0F4B  1D03               	skipz
  9571  0F4C  2F4F               	goto	u4325
  9572  0F4D  0844               	movf	___fldiv@a,w
  9573  0F4E  0251               	subwf	___fldiv@rem,w
  9574  0F4F                     u4325:	
  9575  0F4F  1C03               	skipc
  9576  0F50  2F5A               	goto	l3449
  9577  0F51  175B               	bsf	___fldiv@grs+3,6
  9578  0F52  0844               	movf	___fldiv@a,w
  9579  0F53  02D1               	subwf	___fldiv@rem,f
  9580  0F54  0845               	movf	___fldiv@a+1,w
  9581  0F55  3BD2               	subwfb	___fldiv@rem+1,f
  9582  0F56  0846               	movf	___fldiv@a+2,w
  9583  0F57  3BD3               	subwfb	___fldiv@rem+2,f
  9584  0F58  0847               	movf	___fldiv@a+3,w
  9585  0F59  3BD4               	subwfb	___fldiv@rem+3,f
  9586  0F5A                     l3449:	
  9587  0F5A  3001               	movlw	1
  9588  0F5B  00CC               	movwf	??___fldiv
  9589  0F5C  084C               	movf	??___fldiv,w
  9590  0F5D  07DD               	addwf	___fldiv@aexp,f
  9591  0F5E  2F23               	goto	l3451
  9592  0F5F                     l3453:	
  9593  0F5F  0854               	movf	___fldiv@rem+3,w
  9594  0F60  0453               	iorwf	___fldiv@rem+2,w
  9595  0F61  0452               	iorwf	___fldiv@rem+1,w
  9596  0F62  0451               	iorwf	___fldiv@rem,w
  9597  0F63  1D03               	btfss	3,2
  9598  0F64  1458               	bsf	___fldiv@grs,0
  9599  0F65                     l3467:	
  9600  0F65  1BCA               	btfsc	___fldiv@b+2,7
  9601  0F66  2F7C               	goto	l3469
  9602  0F67  3001               	movlw	1
  9603  0F68                     u4355:	
  9604  0F68  35C8               	lslf	___fldiv@b,f
  9605  0F69  0DC9               	rlf	___fldiv@b+1,f
  9606  0F6A  0DCA               	rlf	___fldiv@b+2,f
  9607  0F6B  0DCB               	rlf	___fldiv@b+3,f
  9608  0F6C  0B89               	decfsz	9,f
  9609  0F6D  2F68               	goto	u4355
  9610  0F6E  1BDB               	btfsc	___fldiv@grs+3,7
  9611  0F6F  1448               	bsf	___fldiv@b,0
  9612  0F70  3001               	movlw	1
  9613  0F71                     u4375:	
  9614  0F71  35D8               	lslf	___fldiv@grs,f
  9615  0F72  0DD9               	rlf	___fldiv@grs+1,f
  9616  0F73  0DDA               	rlf	___fldiv@grs+2,f
  9617  0F74  0DDB               	rlf	___fldiv@grs+3,f
  9618  0F75  0B89               	decfsz	9,f
  9619  0F76  2F71               	goto	u4375
  9620  0F77  30FF               	movlw	255
  9621  0F78  07D6               	addwf	___fldiv@new_exp,f
  9622  0F79  30FF               	movlw	255
  9623  0F7A  3DD7               	addwfc	___fldiv@new_exp+1,f
  9624  0F7B  2F65               	goto	l3467
  9625  0F7C                     l3469:	
  9626  0F7C  01DD               	clrf	___fldiv@aexp
  9627  0F7D  1FDB               	btfss	___fldiv@grs+3,7
  9628  0F7E  2F95               	goto	l3479
  9629  0F7F  30FF               	movlw	255
  9630  0F80  0558               	andwf	___fldiv@grs,w
  9631  0F81  00CC               	movwf	??___fldiv
  9632  0F82  30FF               	movlw	255
  9633  0F83  0559               	andwf	___fldiv@grs+1,w
  9634  0F84  00CD               	movwf	??___fldiv+1
  9635  0F85  30FF               	movlw	255
  9636  0F86  055A               	andwf	___fldiv@grs+2,w
  9637  0F87  00CE               	movwf	??___fldiv+2
  9638  0F88  307F               	movlw	127
  9639  0F89  055B               	andwf	___fldiv@grs+3,w
  9640  0F8A  00CF               	movwf	??___fldiv+3
  9641  0F8B  084F               	movf	??___fldiv+3,w
  9642  0F8C  044E               	iorwf	??___fldiv+2,w
  9643  0F8D  044D               	iorwf	??___fldiv+1,w
  9644  0F8E  044C               	iorwf	??___fldiv,w
  9645  0F8F  1903               	skipnz
  9646  0F90  1848               	btfsc	___fldiv@b,0
  9647  0F91  2F93               	goto	l3475
  9648  0F92  2F95               	goto	l3479
  9649  0F93                     l3475:	
  9650  0F93  01DD               	clrf	___fldiv@aexp
  9651  0F94  0ADD               	incf	___fldiv@aexp,f
  9652  0F95                     l3479:	
  9653  0F95  085D               	movf	___fldiv@aexp,w
  9654  0F96  1903               	btfsc	3,2
  9655  0F97  2FBE               	goto	l3489
  9656  0F98  3001               	movlw	1
  9657  0F99  07C8               	addwf	___fldiv@b,f
  9658  0F9A  3000               	movlw	0
  9659  0F9B  3DC9               	addwfc	___fldiv@b+1,f
  9660  0F9C  3000               	movlw	0
  9661  0F9D  3DCA               	addwfc	___fldiv@b+2,f
  9662  0F9E  3000               	movlw	0
  9663  0F9F  3DCB               	addwfc	___fldiv@b+3,f
  9664  0FA0  1C4B               	btfss	___fldiv@b+3,0
  9665  0FA1  2FBE               	goto	l3489
  9666  0FA2  0848               	movf	___fldiv@b,w
  9667  0FA3  00CC               	movwf	??___fldiv
  9668  0FA4  0849               	movf	___fldiv@b+1,w
  9669  0FA5  00CD               	movwf	??___fldiv+1
  9670  0FA6  084A               	movf	___fldiv@b+2,w
  9671  0FA7  00CE               	movwf	??___fldiv+2
  9672  0FA8  084B               	movf	___fldiv@b+3,w
  9673  0FA9  00CF               	movwf	??___fldiv+3
  9674  0FAA  3001               	movlw	1
  9675  0FAB  00D0               	movwf	??___fldiv+4
  9676  0FAC                     u4445:	
  9677  0FAC  37CF               	asrf	??___fldiv+3,f
  9678  0FAD  0CCE               	rrf	??___fldiv+2,f
  9679  0FAE  0CCD               	rrf	??___fldiv+1,f
  9680  0FAF  0CCC               	rrf	??___fldiv,f
  9681  0FB0  0BD0               	decfsz	??___fldiv+4,f
  9682  0FB1  2FAC               	goto	u4445
  9683  0FB2  084F               	movf	??___fldiv+3,w
  9684  0FB3  00CB               	movwf	___fldiv@b+3
  9685  0FB4  084E               	movf	??___fldiv+2,w
  9686  0FB5  00CA               	movwf	___fldiv@b+2
  9687  0FB6  084D               	movf	??___fldiv+1,w
  9688  0FB7  00C9               	movwf	___fldiv@b+1
  9689  0FB8  084C               	movf	??___fldiv,w
  9690  0FB9  00C8               	movwf	___fldiv@b
  9691  0FBA  3001               	movlw	1
  9692  0FBB  07D6               	addwf	___fldiv@new_exp,f
  9693  0FBC  3000               	movlw	0
  9694  0FBD  3DD7               	addwfc	___fldiv@new_exp+1,f
  9695  0FBE                     l3489:	
  9696  0FBE  0857               	movf	___fldiv@new_exp+1,w
  9697  0FBF  3A80               	xorlw	128
  9698  0FC0  00CC               	movwf	??___fldiv
  9699  0FC1  3080               	movlw	128
  9700  0FC2  024C               	subwf	??___fldiv,w
  9701  0FC3  1D03               	skipz
  9702  0FC4  2FC7               	goto	u4455
  9703  0FC5  30FF               	movlw	255
  9704  0FC6  0256               	subwf	___fldiv@new_exp,w
  9705  0FC7                     u4455:	
  9706  0FC7  1C03               	skipc
  9707  0FC8  2FD6               	goto	l920
  9708  0FC9  30FF               	movlw	255
  9709  0FCA  0020               	movlb	0	; select bank0
  9710  0FCB  00D6               	movwf	___fldiv@new_exp
  9711  0FCC  3000               	movlw	0
  9712  0FCD  00D7               	movwf	___fldiv@new_exp+1
  9713  0FCE  3000               	movlw	0
  9714  0FCF  00CB               	movwf	___fldiv@b+3
  9715  0FD0  3000               	movlw	0
  9716  0FD1  00CA               	movwf	___fldiv@b+2
  9717  0FD2  3000               	movlw	0
  9718  0FD3  00C9               	movwf	___fldiv@b+1
  9719  0FD4  3000               	movlw	0
  9720  0FD5  00C8               	movwf	___fldiv@b
  9721  0FD6                     l920:	
  9722  0FD6  0020               	movlb	0	; select bank0
  9723  0FD7  0857               	movf	___fldiv@new_exp+1,w
  9724  0FD8  3A80               	xorlw	128
  9725  0FD9  00CC               	movwf	??___fldiv
  9726  0FDA  3080               	movlw	128
  9727  0FDB  024C               	subwf	??___fldiv,w
  9728  0FDC  1D03               	skipz
  9729  0FDD  2FE0               	goto	u4465
  9730  0FDE  3001               	movlw	1
  9731  0FDF  0256               	subwf	___fldiv@new_exp,w
  9732  0FE0                     u4465:	
  9733  0FE0  1803               	skipnc
  9734  0FE1  2FEE               	goto	l921
  9735  0FE2  0020               	movlb	0	; select bank0
  9736  0FE3  01D6               	clrf	___fldiv@new_exp
  9737  0FE4  01D7               	clrf	___fldiv@new_exp+1
  9738  0FE5  3000               	movlw	0
  9739  0FE6  00CB               	movwf	___fldiv@b+3
  9740  0FE7  3000               	movlw	0
  9741  0FE8  00CA               	movwf	___fldiv@b+2
  9742  0FE9  3000               	movlw	0
  9743  0FEA  00C9               	movwf	___fldiv@b+1
  9744  0FEB  3000               	movlw	0
  9745  0FEC  00C8               	movwf	___fldiv@b
  9746  0FED  01D5               	clrf	___fldiv@sign
  9747  0FEE                     l921:	
  9748  0FEE  0020               	movlb	0	; select bank0
  9749  0FEF  0856               	movf	___fldiv@new_exp,w
  9750  0FF0  00CC               	movwf	??___fldiv
  9751  0FF1  084C               	movf	??___fldiv,w
  9752  0FF2  00DC               	movwf	___fldiv@bexp
  9753  0FF3  1C5C               	btfss	___fldiv@bexp,0
  9754  0FF4  2FF7               	goto	l3503
  9755  0FF5  17CA               	bsf	___fldiv@b+2,7
  9756  0FF6  2FFB               	goto	l923
  9757  0FF7                     l3503:	
  9758  0FF7  307F               	movlw	127
  9759  0FF8  00CC               	movwf	??___fldiv
  9760  0FF9  084C               	movf	??___fldiv,w
  9761  0FFA  05CA               	andwf	___fldiv@b+2,f
  9762  0FFB                     l923:	
  9763  0FFB  365C               	lsrf	___fldiv@bexp,w
  9764  0FFC  00CC               	movwf	??___fldiv
  9765  0FFD  084C               	movf	??___fldiv,w
  9766  0FFE  00CB               	movwf	___fldiv@b+3
  9767  0FFF  2EE1               	goto	L4
  9768  1000                     __end_of___fldiv:	
  9769                           
  9770                           	psect	text25
  9771  1658                     __ptext25:	
  9772 ;; *************** function _SYSTEM_Initialize *****************
  9773 ;; Defined at:
  9774 ;;		line 4 in file "mcc_generated_files/mcc.c"
  9775 ;; Parameters:    Size  Location     Type
  9776 ;;		None
  9777 ;; Auto vars:     Size  Location     Type
  9778 ;;		None
  9779 ;; Return value:  Size  Location     Type
  9780 ;;                  1    wreg      void 
  9781 ;; Registers used:
  9782 ;;		wreg, status,2, status,0, pclath, cstack
  9783 ;; Tracked objects:
  9784 ;;		On entry : 0/0
  9785 ;;		On exit  : 0/0
  9786 ;;		Unchanged: 0/0
  9787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9792 ;;Total ram usage:        0 bytes
  9793 ;; Hardware stack levels used:    1
  9794 ;; Hardware stack levels required when called:    7
  9795 ;; This function calls:
  9796 ;;		_ADC_Initialize
  9797 ;;		_EUSART_Initialize
  9798 ;;		_OSCILLATOR_Initialize
  9799 ;;		_PIN_MANAGER_Initialize
  9800 ;;		_TMR0_Initialize
  9801 ;; This function is called by:
  9802 ;;		_main
  9803 ;; This function uses a non-reentrant model
  9804 ;;
  9805                           
  9806                           
  9807                           ;psect for function _SYSTEM_Initialize
  9808  1658                     _SYSTEM_Initialize:	
  9809                           
  9810                           ;mcc_generated_files/mcc.c: 6:     PIN_MANAGER_Initialize();
  9811                           
  9812                           ;incstack = 0
  9813                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9814  1658  3197  27C8  3196   	fcall	_PIN_MANAGER_Initialize
  9815                           
  9816                           ;mcc_generated_files/mcc.c: 7:     OSCILLATOR_Initialize();
  9817  165B  3195  25F0  3196   	fcall	_OSCILLATOR_Initialize
  9818                           
  9819                           ;mcc_generated_files/mcc.c: 8:     ADC_Initialize();
  9820  165E  3195  25F7  3196   	fcall	_ADC_Initialize
  9821                           
  9822                           ;mcc_generated_files/mcc.c: 9:     TMR0_Initialize();
  9823  1661  3196  2667  3196   	fcall	_TMR0_Initialize
  9824                           
  9825                           ;mcc_generated_files/mcc.c: 10:     EUSART_Initialize();
  9826  1664  3197  271D         	fcall	_EUSART_Initialize
  9827  1666  0008               	return
  9828  1667                     __end_of_SYSTEM_Initialize:	
  9829                           
  9830                           	psect	text26
  9831  1667                     __ptext26:	
  9832 ;; *************** function _TMR0_Initialize *****************
  9833 ;; Defined at:
  9834 ;;		line 18 in file "mcc_generated_files/tmr0.c"
  9835 ;; Parameters:    Size  Location     Type
  9836 ;;		None
  9837 ;; Auto vars:     Size  Location     Type
  9838 ;;		None
  9839 ;; Return value:  Size  Location     Type
  9840 ;;                  1    wreg      void 
  9841 ;; Registers used:
  9842 ;;		wreg, status,2, status,0, pclath, cstack
  9843 ;; Tracked objects:
  9844 ;;		On entry : 0/0
  9845 ;;		On exit  : 0/0
  9846 ;;		Unchanged: 0/0
  9847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9850 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9851 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9852 ;;Total ram usage:        1 bytes
  9853 ;; Hardware stack levels used:    1
  9854 ;; Hardware stack levels required when called:    6
  9855 ;; This function calls:
  9856 ;;		_TMR0_SetInterruptHandler
  9857 ;; This function is called by:
  9858 ;;		_SYSTEM_Initialize
  9859 ;; This function uses a non-reentrant model
  9860 ;;
  9861                           
  9862                           
  9863                           ;psect for function _TMR0_Initialize
  9864  1667                     _TMR0_Initialize:	
  9865                           
  9866                           ;mcc_generated_files/tmr0.c: 23:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD5 
      +                          & 0x3F));
  9867                           
  9868                           ;incstack = 0
  9869                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9870  1667  0021               	movlb	1	; select bank1
  9871  1668  0815               	movf	21,w	;volatile
  9872  1669  39C0               	andlw	192
  9873  166A  3815               	iorlw	21
  9874  166B  0095               	movwf	21	;volatile
  9875                           
  9876                           ;mcc_generated_files/tmr0.c: 26:     TMR0 = 0xFE;
  9877  166C  30FE               	movlw	254
  9878  166D  0020               	movlb	0	; select bank0
  9879  166E  0095               	movwf	21	;volatile
  9880                           
  9881                           ;mcc_generated_files/tmr0.c: 29:     timer0ReloadVal= 254;
  9882  166F  30FE               	movlw	254
  9883  1670  00AA               	movwf	??_TMR0_Initialize
  9884  1671  082A               	movf	??_TMR0_Initialize,w
  9885  1672  00E7               	movwf	_timer0ReloadVal	;volatile
  9886                           
  9887                           ;mcc_generated_files/tmr0.c: 32:     INTCONbits.TMR0IF = 0;
  9888  1673  110B               	bcf	11,2	;volatile
  9889                           
  9890                           ;mcc_generated_files/tmr0.c: 35:     INTCONbits.TMR0IE = 1;
  9891  1674  168B               	bsf	11,5	;volatile
  9892                           
  9893                           ;mcc_generated_files/tmr0.c: 38:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  9894  1675  3003               	movlw	low _TMR0_DefaultInterruptHandler
  9895  1676  00A8               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  9896  1677  3000               	movlw	high _TMR0_DefaultInterruptHandler
  9897  1678  00A9               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  9898  1679  3196  2633         	fcall	_TMR0_SetInterruptHandler
  9899  167B  0008               	return
  9900  167C                     __end_of_TMR0_Initialize:	
  9901                           
  9902                           	psect	text27
  9903  1633                     __ptext27:	
  9904 ;; *************** function _TMR0_SetInterruptHandler *****************
  9905 ;; Defined at:
  9906 ;;		line 79 in file "mcc_generated_files/tmr0.c"
  9907 ;; Parameters:    Size  Location     Type
  9908 ;;  InterruptHan    2    8[BANK0 ] PTR FTN()void 
  9909 ;;		 -> timerISR(1), TMR0_DefaultInterruptHandler(1), 
  9910 ;; Auto vars:     Size  Location     Type
  9911 ;;		None
  9912 ;; Return value:  Size  Location     Type
  9913 ;;                  1    wreg      void 
  9914 ;; Registers used:
  9915 ;;		wreg
  9916 ;; Tracked objects:
  9917 ;;		On entry : 0/0
  9918 ;;		On exit  : 0/0
  9919 ;;		Unchanged: 0/0
  9920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9921 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9924 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9925 ;;Total ram usage:        2 bytes
  9926 ;; Hardware stack levels used:    1
  9927 ;; Hardware stack levels required when called:    5
  9928 ;; This function calls:
  9929 ;;		Nothing
  9930 ;; This function is called by:
  9931 ;;		_TMR0_Initialize
  9932 ;;		_main
  9933 ;; This function uses a non-reentrant model
  9934 ;;
  9935                           
  9936                           
  9937                           ;psect for function _TMR0_SetInterruptHandler
  9938  1633                     _TMR0_SetInterruptHandler:	
  9939                           
  9940                           ;mcc_generated_files/tmr0.c: 80:     TMR0_InterruptHandler = InterruptHandler;
  9941                           
  9942                           ;incstack = 0
  9943                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  9944  1633  0020               	movlb	0	; select bank0
  9945  1634  0829               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  9946  1635  0021               	movlb	1	; select bank1
  9947  1636  00EB               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
  9948  1637  0020               	movlb	0	; select bank0
  9949  1638  0828               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  9950  1639  0021               	movlb	1	; select bank1
  9951  163A  00EA               	movwf	_TMR0_InterruptHandler^(0+128)
  9952  163B  0008               	return
  9953  163C                     __end_of_TMR0_SetInterruptHandler:	
  9954                           
  9955                           	psect	text28
  9956  17C8                     __ptext28:	
  9957 ;; *************** function _PIN_MANAGER_Initialize *****************
  9958 ;; Defined at:
  9959 ;;		line 6 in file "mcc_generated_files/pin_manager.c"
  9960 ;; Parameters:    Size  Location     Type
  9961 ;;		None
  9962 ;; Auto vars:     Size  Location     Type
  9963 ;;		None
  9964 ;; Return value:  Size  Location     Type
  9965 ;;                  1    wreg      void 
  9966 ;; Registers used:
  9967 ;;		wreg, status,2, status,0, pclath, cstack
  9968 ;; Tracked objects:
  9969 ;;		On entry : 0/0
  9970 ;;		On exit  : 0/0
  9971 ;;		Unchanged: 0/0
  9972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9976 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9977 ;;Total ram usage:        0 bytes
  9978 ;; Hardware stack levels used:    1
  9979 ;; Hardware stack levels required when called:    6
  9980 ;; This function calls:
  9981 ;;		_IOCCF7_SetInterruptHandler
  9982 ;; This function is called by:
  9983 ;;		_SYSTEM_Initialize
  9984 ;; This function uses a non-reentrant model
  9985 ;;
  9986                           
  9987                           
  9988                           ;psect for function _PIN_MANAGER_Initialize
  9989  17C8                     _PIN_MANAGER_Initialize:	
  9990                           
  9991                           ;mcc_generated_files/pin_manager.c: 11:     LATA = 0x00;
  9992                           
  9993                           ;incstack = 0
  9994                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9995  17C8  0022               	movlb	2	; select bank2
  9996  17C9  018C               	clrf	12	;volatile
  9997                           
  9998                           ;mcc_generated_files/pin_manager.c: 12:     LATB = 0x00;
  9999  17CA  018D               	clrf	13	;volatile
 10000                           
 10001                           ;mcc_generated_files/pin_manager.c: 13:     LATC = 0x00;
 10002  17CB  018E               	clrf	14	;volatile
 10003                           
 10004                           ;mcc_generated_files/pin_manager.c: 18:     TRISA = 0x37;
 10005  17CC  3037               	movlw	55
 10006  17CD  0021               	movlb	1	; select bank1
 10007  17CE  008C               	movwf	12	;volatile
 10008                           
 10009                           ;mcc_generated_files/pin_manager.c: 19:     TRISB = 0x70;
 10010  17CF  3070               	movlw	112
 10011  17D0  008D               	movwf	13	;volatile
 10012                           
 10013                           ;mcc_generated_files/pin_manager.c: 20:     TRISC = 0xFF;
 10014  17D1  30FF               	movlw	255
 10015  17D2  008E               	movwf	14	;volatile
 10016                           
 10017                           ;mcc_generated_files/pin_manager.c: 25:     ANSELC = 0x4F;
 10018  17D3  304F               	movlw	79
 10019  17D4  0023               	movlb	3	; select bank3
 10020  17D5  008E               	movwf	14	;volatile
 10021                           
 10022                           ;mcc_generated_files/pin_manager.c: 26:     ANSELB = 0x70;
 10023  17D6  3070               	movlw	112
 10024  17D7  008D               	movwf	13	;volatile
 10025                           
 10026                           ;mcc_generated_files/pin_manager.c: 27:     ANSELA = 0x17;
 10027  17D8  3017               	movlw	23
 10028  17D9  008C               	movwf	12	;volatile
 10029                           
 10030                           ;mcc_generated_files/pin_manager.c: 32:     WPUB = 0x00;
 10031  17DA  0024               	movlb	4	; select bank4
 10032  17DB  018D               	clrf	13	;volatile
 10033                           
 10034                           ;mcc_generated_files/pin_manager.c: 33:     WPUA = 0x00;
 10035  17DC  018C               	clrf	12	;volatile
 10036                           
 10037                           ;mcc_generated_files/pin_manager.c: 35:     WPUC = 0x80;
 10038  17DD  3080               	movlw	128
 10039  17DE  008E               	movwf	14	;volatile
 10040                           
 10041                           ;mcc_generated_files/pin_manager.c: 36:     OPTION_REGbits.nWPUEN = 0;
 10042  17DF  0021               	movlb	1	; select bank1
 10043  17E0  1395               	bcf	21,7	;volatile
 10044                           
 10045                           ;mcc_generated_files/pin_manager.c: 41:     ODCONA = 0x00;
 10046  17E1  0025               	movlb	5	; select bank5
 10047  17E2  018C               	clrf	12	;volatile
 10048                           
 10049                           ;mcc_generated_files/pin_manager.c: 42:     ODCONB = 0x00;
 10050  17E3  018D               	clrf	13	;volatile
 10051                           
 10052                           ;mcc_generated_files/pin_manager.c: 43:     ODCONC = 0x00;
 10053  17E4  018E               	clrf	14	;volatile
 10054                           
 10055                           ;mcc_generated_files/pin_manager.c: 48:     SLRCONA = 0x37;
 10056  17E5  3037               	movlw	55
 10057  17E6  0026               	movlb	6	; select bank6
 10058  17E7  008C               	movwf	12	;volatile
 10059                           
 10060                           ;mcc_generated_files/pin_manager.c: 49:     SLRCONB = 0xF0;
 10061  17E8  30F0               	movlw	240
 10062  17E9  008D               	movwf	13	;volatile
 10063                           
 10064                           ;mcc_generated_files/pin_manager.c: 50:     SLRCONC = 0xFF;
 10065  17EA  30FF               	movlw	255
 10066  17EB  008E               	movwf	14	;volatile
 10067                           
 10068                           ;mcc_generated_files/pin_manager.c: 57:     IOCCFbits.IOCCF7 = 0;
 10069  17EC  0027               	movlb	7	; select bank7
 10070  17ED  1399               	bcf	25,7	;volatile
 10071                           
 10072                           ;mcc_generated_files/pin_manager.c: 59:     IOCCNbits.IOCCN7 = 0;
 10073  17EE  1398               	bcf	24,7	;volatile
 10074                           
 10075                           ;mcc_generated_files/pin_manager.c: 61:     IOCCPbits.IOCCP7 = 1;
 10076  17EF  1797               	bsf	23,7	;volatile
 10077                           
 10078                           ;mcc_generated_files/pin_manager.c: 64:     SLRC7 = 0;
 10079  17F0  0026               	movlb	6	; select bank6
 10080  17F1  138E               	bcf	14,7	;volatile
 10081                           
 10082                           ;mcc_generated_files/pin_manager.c: 67:     INLVLC7 = 1 ;
 10083  17F2  0027               	movlb	7	; select bank7
 10084  17F3  178E               	bsf	14,7	;volatile
 10085                           
 10086                           ;mcc_generated_files/pin_manager.c: 70:     IOCCF7_SetInterruptHandler(IOCCF7_DefaultInt
      +                          erruptHandler);
 10087  17F4  3002               	movlw	low _IOCCF7_DefaultInterruptHandler
 10088  17F5  0020               	movlb	0	; select bank0
 10089  17F6  00A8               	movwf	IOCCF7_SetInterruptHandler@InterruptHandler
 10090  17F7  3000               	movlw	high _IOCCF7_DefaultInterruptHandler
 10091  17F8  00A9               	movwf	IOCCF7_SetInterruptHandler@InterruptHandler+1
 10092  17F9  3196  262A         	fcall	_IOCCF7_SetInterruptHandler
 10093                           
 10094                           ;mcc_generated_files/pin_manager.c: 73:     INTCONbits.IOCIE = 1;
 10095  17FB  158B               	bsf	11,3	;volatile
 10096                           
 10097                           ;mcc_generated_files/pin_manager.c: 76:     RB7PPS = 0x12;
 10098  17FC  3012               	movlw	18
 10099  17FD  003D               	movlb	29	; select bank29
 10100  17FE  009F               	movwf	31	;volatile
 10101  17FF  0008               	return
 10102  1800                     __end_of_PIN_MANAGER_Initialize:	
 10103                           
 10104                           	psect	text29
 10105  162A                     __ptext29:	
 10106 ;; *************** function _IOCCF7_SetInterruptHandler *****************
 10107 ;; Defined at:
 10108 ;;		line 106 in file "mcc_generated_files/pin_manager.c"
 10109 ;; Parameters:    Size  Location     Type
 10110 ;;  InterruptHan    2    8[BANK0 ] PTR FTN()void 
 10111 ;;		 -> speedCalc(1), IOCCF7_DefaultInterruptHandler(1), 
 10112 ;; Auto vars:     Size  Location     Type
 10113 ;;		None
 10114 ;; Return value:  Size  Location     Type
 10115 ;;                  1    wreg      void 
 10116 ;; Registers used:
 10117 ;;		wreg
 10118 ;; Tracked objects:
 10119 ;;		On entry : 0/0
 10120 ;;		On exit  : 0/0
 10121 ;;		Unchanged: 0/0
 10122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10123 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10126 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10127 ;;Total ram usage:        2 bytes
 10128 ;; Hardware stack levels used:    1
 10129 ;; Hardware stack levels required when called:    5
 10130 ;; This function calls:
 10131 ;;		Nothing
 10132 ;; This function is called by:
 10133 ;;		_PIN_MANAGER_Initialize
 10134 ;;		_main
 10135 ;; This function uses a non-reentrant model
 10136 ;;
 10137                           
 10138                           
 10139                           ;psect for function _IOCCF7_SetInterruptHandler
 10140  162A                     _IOCCF7_SetInterruptHandler:	
 10141                           
 10142                           ;mcc_generated_files/pin_manager.c: 107:     IOCCF7_InterruptHandler = InterruptHandler;
 10143                           
 10144                           ;incstack = 0
 10145                           ; Regs used in _IOCCF7_SetInterruptHandler: [wreg]
 10146  162A  0020               	movlb	0	; select bank0
 10147  162B  0829               	movf	IOCCF7_SetInterruptHandler@InterruptHandler+1,w
 10148  162C  0021               	movlb	1	; select bank1
 10149  162D  00ED               	movwf	(_IOCCF7_InterruptHandler+1)^(0+128)
 10150  162E  0020               	movlb	0	; select bank0
 10151  162F  0828               	movf	IOCCF7_SetInterruptHandler@InterruptHandler,w
 10152  1630  0021               	movlb	1	; select bank1
 10153  1631  00EC               	movwf	_IOCCF7_InterruptHandler^(0+128)
 10154  1632  0008               	return
 10155  1633                     __end_of_IOCCF7_SetInterruptHandler:	
 10156                           
 10157                           	psect	text30
 10158  15F0                     __ptext30:	
 10159 ;; *************** function _OSCILLATOR_Initialize *****************
 10160 ;; Defined at:
 10161 ;;		line 13 in file "mcc_generated_files/mcc.c"
 10162 ;; Parameters:    Size  Location     Type
 10163 ;;		None
 10164 ;; Auto vars:     Size  Location     Type
 10165 ;;		None
 10166 ;; Return value:  Size  Location     Type
 10167 ;;                  1    wreg      void 
 10168 ;; Registers used:
 10169 ;;		wreg, status,2
 10170 ;; Tracked objects:
 10171 ;;		On entry : 0/0
 10172 ;;		On exit  : 0/0
 10173 ;;		Unchanged: 0/0
 10174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10179 ;;Total ram usage:        0 bytes
 10180 ;; Hardware stack levels used:    1
 10181 ;; Hardware stack levels required when called:    5
 10182 ;; This function calls:
 10183 ;;		Nothing
 10184 ;; This function is called by:
 10185 ;;		_SYSTEM_Initialize
 10186 ;; This function uses a non-reentrant model
 10187 ;;
 10188                           
 10189                           
 10190                           ;psect for function _OSCILLATOR_Initialize
 10191  15F0                     _OSCILLATOR_Initialize:	
 10192                           
 10193                           ;mcc_generated_files/mcc.c: 16:     OSCCON = 0x3A;
 10194                           
 10195                           ;incstack = 0
 10196                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 10197  15F0  303A               	movlw	58
 10198  15F1  0021               	movlb	1	; select bank1
 10199  15F2  0099               	movwf	25	;volatile
 10200                           
 10201                           ;mcc_generated_files/mcc.c: 18:     OSCTUNE = 0x00;
 10202  15F3  0198               	clrf	24	;volatile
 10203                           
 10204                           ;mcc_generated_files/mcc.c: 20:     BORCON = 0x00;
 10205  15F4  0022               	movlb	2	; select bank2
 10206  15F5  0196               	clrf	22	;volatile
 10207  15F6  0008               	return
 10208  15F7                     __end_of_OSCILLATOR_Initialize:	
 10209                           
 10210                           	psect	text31
 10211  171D                     __ptext31:	
 10212 ;; *************** function _EUSART_Initialize *****************
 10213 ;; Defined at:
 10214 ;;		line 65 in file "mcc_generated_files/eusart.c"
 10215 ;; Parameters:    Size  Location     Type
 10216 ;;		None
 10217 ;; Auto vars:     Size  Location     Type
 10218 ;;		None
 10219 ;; Return value:  Size  Location     Type
 10220 ;;                  1    wreg      void 
 10221 ;; Registers used:
 10222 ;;		wreg, status,2, status,0, pclath, cstack
 10223 ;; Tracked objects:
 10224 ;;		On entry : 0/0
 10225 ;;		On exit  : 0/0
 10226 ;;		Unchanged: 0/0
 10227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10232 ;;Total ram usage:        0 bytes
 10233 ;; Hardware stack levels used:    1
 10234 ;; Hardware stack levels required when called:    6
 10235 ;; This function calls:
 10236 ;;		_EUSART_SetErrorHandler
 10237 ;;		_EUSART_SetFramingErrorHandler
 10238 ;;		_EUSART_SetOverrunErrorHandler
 10239 ;; This function is called by:
 10240 ;;		_SYSTEM_Initialize
 10241 ;; This function uses a non-reentrant model
 10242 ;;
 10243                           
 10244                           
 10245                           ;psect for function _EUSART_Initialize
 10246  171D                     _EUSART_Initialize:	
 10247                           
 10248                           ;mcc_generated_files/eusart.c: 70:     BAUD1CON = 0x08;
 10249                           
 10250                           ;incstack = 0
 10251                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10252  171D  3008               	movlw	8
 10253  171E  0023               	movlb	3	; select bank3
 10254  171F  009F               	movwf	31	;volatile
 10255                           
 10256                           ;mcc_generated_files/eusart.c: 73:     RC1STA = 0x80;
 10257  1720  3080               	movlw	128
 10258  1721  009D               	movwf	29	;volatile
 10259                           
 10260                           ;mcc_generated_files/eusart.c: 76:     TX1STA = 0x24;
 10261  1722  3024               	movlw	36
 10262  1723  009E               	movwf	30	;volatile
 10263                           
 10264                           ;mcc_generated_files/eusart.c: 79:     SPBRGL = 0x0C;
 10265  1724  300C               	movlw	12
 10266  1725  009B               	movwf	27	;volatile
 10267                           
 10268                           ;mcc_generated_files/eusart.c: 82:     SPBRGH = 0x00;
 10269  1726  019C               	clrf	28	;volatile
 10270                           
 10271                           ;mcc_generated_files/eusart.c: 85:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
 10272  1727  3000               	movlw	0
 10273  1728  0020               	movlb	0	; select bank0
 10274  1729  00A8               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
 10275  172A  3000               	movlw	0
 10276  172B  00A9               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
 10277  172C  3196  2618  3197   	fcall	_EUSART_SetFramingErrorHandler
 10278                           
 10279                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
 10280  172F  3000               	movlw	0
 10281  1730  0020               	movlb	0	; select bank0
 10282  1731  00A8               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
 10283  1732  3000               	movlw	0
 10284  1733  00A9               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
 10285  1734  3196  2621  3197   	fcall	_EUSART_SetOverrunErrorHandler
 10286                           
 10287                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
 10288  1737  3000               	movlw	0
 10289  1738  0020               	movlb	0	; select bank0
 10290  1739  00A8               	movwf	EUSART_SetErrorHandler@interruptHandler
 10291  173A  3000               	movlw	0
 10292  173B  00A9               	movwf	EUSART_SetErrorHandler@interruptHandler+1
 10293  173C  3196  260F         	fcall	_EUSART_SetErrorHandler
 10294                           
 10295                           ;mcc_generated_files/eusart.c: 89:     eusartRxLastError.status = 0;
 10296  173E  0020               	movlb	0	; select bank0
 10297  173F  01E6               	clrf	_eusartRxLastError	;volatile
 10298  1740  0008               	return
 10299  1741                     __end_of_EUSART_Initialize:	
 10300                           
 10301                           	psect	text32
 10302  1621                     __ptext32:	
 10303 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
 10304 ;; Defined at:
 10305 ;;		line 175 in file "mcc_generated_files/eusart.c"
 10306 ;; Parameters:    Size  Location     Type
 10307 ;;  interruptHan    2    8[BANK0 ] PTR FTN()void 
 10308 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
 10309 ;; Auto vars:     Size  Location     Type
 10310 ;;		None
 10311 ;; Return value:  Size  Location     Type
 10312 ;;                  1    wreg      void 
 10313 ;; Registers used:
 10314 ;;		wreg
 10315 ;; Tracked objects:
 10316 ;;		On entry : 0/0
 10317 ;;		On exit  : 0/0
 10318 ;;		Unchanged: 0/0
 10319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10320 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10323 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10324 ;;Total ram usage:        2 bytes
 10325 ;; Hardware stack levels used:    1
 10326 ;; Hardware stack levels required when called:    5
 10327 ;; This function calls:
 10328 ;;		Nothing
 10329 ;; This function is called by:
 10330 ;;		_EUSART_Initialize
 10331 ;; This function uses a non-reentrant model
 10332 ;;
 10333                           
 10334                           
 10335                           ;psect for function _EUSART_SetOverrunErrorHandler
 10336  1621                     _EUSART_SetOverrunErrorHandler:	
 10337                           
 10338                           ;mcc_generated_files/eusart.c: 176:     EUSART_OverrunErrorHandler = interruptHandler;
 10339                           
 10340                           ;incstack = 0
 10341                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
 10342  1621  0020               	movlb	0	; select bank0
 10343  1622  0829               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
 10344  1623  0022               	movlb	2	; select bank2
 10345  1624  00D8               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+256)
 10346  1625  0020               	movlb	0	; select bank0
 10347  1626  0828               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
 10348  1627  0022               	movlb	2	; select bank2
 10349  1628  00D7               	movwf	_EUSART_OverrunErrorHandler^(0+256)
 10350  1629  0008               	return
 10351  162A                     __end_of_EUSART_SetOverrunErrorHandler:	
 10352                           
 10353                           	psect	text33
 10354  1618                     __ptext33:	
 10355 ;; *************** function _EUSART_SetFramingErrorHandler *****************
 10356 ;; Defined at:
 10357 ;;		line 171 in file "mcc_generated_files/eusart.c"
 10358 ;; Parameters:    Size  Location     Type
 10359 ;;  interruptHan    2    8[BANK0 ] PTR FTN()void 
 10360 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
 10361 ;; Auto vars:     Size  Location     Type
 10362 ;;		None
 10363 ;; Return value:  Size  Location     Type
 10364 ;;                  1    wreg      void 
 10365 ;; Registers used:
 10366 ;;		wreg
 10367 ;; Tracked objects:
 10368 ;;		On entry : 0/0
 10369 ;;		On exit  : 0/0
 10370 ;;		Unchanged: 0/0
 10371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10372 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10375 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10376 ;;Total ram usage:        2 bytes
 10377 ;; Hardware stack levels used:    1
 10378 ;; Hardware stack levels required when called:    5
 10379 ;; This function calls:
 10380 ;;		Nothing
 10381 ;; This function is called by:
 10382 ;;		_EUSART_Initialize
 10383 ;; This function uses a non-reentrant model
 10384 ;;
 10385                           
 10386                           
 10387                           ;psect for function _EUSART_SetFramingErrorHandler
 10388  1618                     _EUSART_SetFramingErrorHandler:	
 10389                           
 10390                           ;mcc_generated_files/eusart.c: 172:     EUSART_FramingErrorHandler = interruptHandler;
 10391                           
 10392                           ;incstack = 0
 10393                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
 10394  1618  0020               	movlb	0	; select bank0
 10395  1619  0829               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
 10396  161A  0022               	movlb	2	; select bank2
 10397  161B  00DA               	movwf	(_EUSART_FramingErrorHandler+1)^(0+256)
 10398  161C  0020               	movlb	0	; select bank0
 10399  161D  0828               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
 10400  161E  0022               	movlb	2	; select bank2
 10401  161F  00D9               	movwf	_EUSART_FramingErrorHandler^(0+256)
 10402  1620  0008               	return
 10403  1621                     __end_of_EUSART_SetFramingErrorHandler:	
 10404                           
 10405                           	psect	text34
 10406  160F                     __ptext34:	
 10407 ;; *************** function _EUSART_SetErrorHandler *****************
 10408 ;; Defined at:
 10409 ;;		line 179 in file "mcc_generated_files/eusart.c"
 10410 ;; Parameters:    Size  Location     Type
 10411 ;;  interruptHan    2    8[BANK0 ] PTR FTN()void 
 10412 ;;		 -> EUSART_DefaultErrorHandler(1), 
 10413 ;; Auto vars:     Size  Location     Type
 10414 ;;		None
 10415 ;; Return value:  Size  Location     Type
 10416 ;;                  1    wreg      void 
 10417 ;; Registers used:
 10418 ;;		wreg
 10419 ;; Tracked objects:
 10420 ;;		On entry : 0/0
 10421 ;;		On exit  : 0/0
 10422 ;;		Unchanged: 0/0
 10423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10424 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10427 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10428 ;;Total ram usage:        2 bytes
 10429 ;; Hardware stack levels used:    1
 10430 ;; Hardware stack levels required when called:    5
 10431 ;; This function calls:
 10432 ;;		Nothing
 10433 ;; This function is called by:
 10434 ;;		_EUSART_Initialize
 10435 ;; This function uses a non-reentrant model
 10436 ;;
 10437                           
 10438                           
 10439                           ;psect for function _EUSART_SetErrorHandler
 10440  160F                     _EUSART_SetErrorHandler:	
 10441                           
 10442                           ;mcc_generated_files/eusart.c: 180:     EUSART_ErrorHandler = interruptHandler;
 10443                           
 10444                           ;incstack = 0
 10445                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
 10446  160F  0020               	movlb	0	; select bank0
 10447  1610  0829               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
 10448  1611  0022               	movlb	2	; select bank2
 10449  1612  00D6               	movwf	(_EUSART_ErrorHandler+1)^(0+256)
 10450  1613  0020               	movlb	0	; select bank0
 10451  1614  0828               	movf	EUSART_SetErrorHandler@interruptHandler,w
 10452  1615  0022               	movlb	2	; select bank2
 10453  1616  00D5               	movwf	_EUSART_ErrorHandler^(0+256)
 10454  1617  0008               	return
 10455  1618                     __end_of_EUSART_SetErrorHandler:	
 10456                           
 10457                           	psect	text35
 10458  15F7                     __ptext35:	
 10459 ;; *************** function _ADC_Initialize *****************
 10460 ;; Defined at:
 10461 ;;		line 65 in file "mcc_generated_files/adc.c"
 10462 ;; Parameters:    Size  Location     Type
 10463 ;;		None
 10464 ;; Auto vars:     Size  Location     Type
 10465 ;;		None
 10466 ;; Return value:  Size  Location     Type
 10467 ;;                  1    wreg      void 
 10468 ;; Registers used:
 10469 ;;		wreg, status,2
 10470 ;; Tracked objects:
 10471 ;;		On entry : 0/0
 10472 ;;		On exit  : 0/0
 10473 ;;		Unchanged: 0/0
 10474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10479 ;;Total ram usage:        0 bytes
 10480 ;; Hardware stack levels used:    1
 10481 ;; Hardware stack levels required when called:    5
 10482 ;; This function calls:
 10483 ;;		Nothing
 10484 ;; This function is called by:
 10485 ;;		_SYSTEM_Initialize
 10486 ;; This function uses a non-reentrant model
 10487 ;;
 10488                           
 10489                           
 10490                           ;psect for function _ADC_Initialize
 10491  15F7                     _ADC_Initialize:	
 10492                           
 10493                           ;mcc_generated_files/adc.c: 70:     ADCON0 = 0x01;
 10494                           
 10495                           ;incstack = 0
 10496                           ; Regs used in _ADC_Initialize: [wreg+status,2]
 10497  15F7  3001               	movlw	1
 10498  15F8  0021               	movlb	1	; select bank1
 10499  15F9  009D               	movwf	29	;volatile
 10500                           
 10501                           ;mcc_generated_files/adc.c: 73:     ADCON1 = 0x00;
 10502  15FA  019E               	clrf	30	;volatile
 10503                           
 10504                           ;mcc_generated_files/adc.c: 76:     ADCON2 = 0x00;
 10505  15FB  019F               	clrf	31	;volatile
 10506                           
 10507                           ;mcc_generated_files/adc.c: 79:     ADRESL = 0x00;
 10508  15FC  019B               	clrf	27	;volatile
 10509                           
 10510                           ;mcc_generated_files/adc.c: 82:     ADRESH = 0x00;
 10511  15FD  019C               	clrf	28	;volatile
 10512  15FE  0008               	return
 10513  15FF                     __end_of_ADC_Initialize:	
 10514                           
 10515                           	psect	intentry
 10516  0004                     __pintentry:	
 10517 ;; *************** function _INTERRUPT_InterruptManager *****************
 10518 ;; Defined at:
 10519 ;;		line 4 in file "mcc_generated_files/interrupt_manager.c"
 10520 ;; Parameters:    Size  Location     Type
 10521 ;;		None
 10522 ;; Auto vars:     Size  Location     Type
 10523 ;;		None
 10524 ;; Return value:  Size  Location     Type
 10525 ;;                  1    wreg      void 
 10526 ;; Registers used:
 10527 ;;		wreg, status,2, status,0, pclath, cstack
 10528 ;; Tracked objects:
 10529 ;;		On entry : 0/0
 10530 ;;		On exit  : 0/0
 10531 ;;		Unchanged: 0/0
 10532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10537 ;;Total ram usage:        0 bytes
 10538 ;; Hardware stack levels used:    1
 10539 ;; Hardware stack levels required when called:    4
 10540 ;; This function calls:
 10541 ;;		_PIN_MANAGER_IOC
 10542 ;;		_TMR0_ISR
 10543 ;; This function is called by:
 10544 ;;		Interrupt level 1
 10545 ;; This function uses a non-reentrant model
 10546 ;;
 10547                           
 10548  0004                     _INTERRUPT_InterruptManager:	
 10549                           
 10550                           ;incstack = 0
 10551  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 10552                           
 10553                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
 10554  0005  3180               	pagesel	$
 10555                           
 10556                           ;mcc_generated_files/interrupt_manager.c: 7:     if(INTCONbits.TMR0IE == 1 && INTCONbits
      +                          .TMR0IF == 1)
 10557  0006  1A8B               	btfsc	11,5	;volatile
 10558  0007  1D0B               	btfss	11,2	;volatile
 10559  0008  280D               	goto	i1l242
 10560                           
 10561                           ;mcc_generated_files/interrupt_manager.c: 8:     {;mcc_generated_files/interrupt_manager
      +                          .c: 9:         TMR0_ISR();
 10562  0009  3196  2649  3180   	fcall	_TMR0_ISR
 10563                           
 10564                           ;mcc_generated_files/interrupt_manager.c: 10:     }
 10565  000C  2812               	goto	i1l246
 10566  000D                     i1l242:	
 10567                           ;mcc_generated_files/interrupt_manager.c: 11:     else if(INTCONbits.IOCIE == 1 && INTCO
      +                          Nbits.IOCIF == 1)
 10568                           
 10569  000D  198B               	btfsc	11,3	;volatile
 10570  000E  1C0B               	btfss	11,0	;volatile
 10571  000F  2812               	goto	i1l246
 10572                           
 10573                           ;mcc_generated_files/interrupt_manager.c: 12:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 13:         PIN_MANAGER_IOC();
 10574  0010  3195  25E4         	fcall	_PIN_MANAGER_IOC
 10575  0012                     i1l246:	
 10576                           ;mcc_generated_files/interrupt_manager.c: 14:     }
 10577                           
 10578  0012  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 10579  0013  0009               	retfie
 10580  0014                     __end_of_INTERRUPT_InterruptManager:	
 10581                           
 10582                           	psect	text37
 10583  1649                     __ptext37:	
 10584 ;; *************** function _TMR0_ISR *****************
 10585 ;; Defined at:
 10586 ;;		line 62 in file "mcc_generated_files/tmr0.c"
 10587 ;; Parameters:    Size  Location     Type
 10588 ;;		None
 10589 ;; Auto vars:     Size  Location     Type
 10590 ;;		None
 10591 ;; Return value:  Size  Location     Type
 10592 ;;                  1    wreg      void 
 10593 ;; Registers used:
 10594 ;;		wreg, status,2, status,0, pclath, cstack
 10595 ;; Tracked objects:
 10596 ;;		On entry : 0/0
 10597 ;;		On exit  : 0/0
 10598 ;;		Unchanged: 0/0
 10599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10604 ;;Total ram usage:        0 bytes
 10605 ;; Hardware stack levels used:    1
 10606 ;; Hardware stack levels required when called:    1
 10607 ;; This function calls:
 10608 ;;		Absolute function
 10609 ;;		_TMR0_DefaultInterruptHandler
 10610 ;;		_timerISR
 10611 ;; This function is called by:
 10612 ;;		_INTERRUPT_InterruptManager
 10613 ;; This function uses a non-reentrant model
 10614 ;;
 10615                           
 10616                           
 10617                           ;psect for function _TMR0_ISR
 10618  1649                     _TMR0_ISR:	
 10619                           
 10620                           ;mcc_generated_files/tmr0.c: 66:     INTCONbits.TMR0IF = 0;
 10621                           
 10622                           ;incstack = 0
 10623                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 10624  1649  110B               	bcf	11,2	;volatile
 10625                           
 10626                           ;mcc_generated_files/tmr0.c: 68:     TMR0 = timer0ReloadVal;
 10627  164A  0020               	movlb	0	; select bank0
 10628  164B  0867               	movf	_timer0ReloadVal,w	;volatile
 10629  164C  0095               	movwf	21	;volatile
 10630                           
 10631                           ;mcc_generated_files/tmr0.c: 70:     if(TMR0_InterruptHandler)
 10632  164D  0021               	movlb	1	; select bank1
 10633  164E  086A               	movf	_TMR0_InterruptHandler^(0+128),w
 10634  164F  046B               	iorwf	(_TMR0_InterruptHandler+1)^(0+128),w
 10635  1650  1903               	btfsc	3,2
 10636  1651  0008               	return
 10637                           
 10638                           ;mcc_generated_files/tmr0.c: 71:     {;mcc_generated_files/tmr0.c: 72:         TMR0_Inte
      +                          rruptHandler();
 10639  1652  086B               	movf	(_TMR0_InterruptHandler+1)^(0+128),w
 10640  1653  008A               	movwf	10
 10641  1654  086A               	movf	_TMR0_InterruptHandler^(0+128),w
 10642  1655  000A               	callw
 10643  1656  3196               	pagesel	$
 10644  1657  0008               	return
 10645  1658                     __end_of_TMR0_ISR:	
 10646                           
 10647                           	psect	text38
 10648  0003                     __ptext38:	
 10649 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 10650 ;; Defined at:
 10651 ;;		line 83 in file "mcc_generated_files/tmr0.c"
 10652 ;; Parameters:    Size  Location     Type
 10653 ;;		None
 10654 ;; Auto vars:     Size  Location     Type
 10655 ;;		None
 10656 ;; Return value:  Size  Location     Type
 10657 ;;                  1    wreg      void 
 10658 ;; Registers used:
 10659 ;;		None
 10660 ;; Tracked objects:
 10661 ;;		On entry : 0/0
 10662 ;;		On exit  : 0/0
 10663 ;;		Unchanged: 0/0
 10664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10668 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10669 ;;Total ram usage:        0 bytes
 10670 ;; Hardware stack levels used:    1
 10671 ;; This function calls:
 10672 ;;		Nothing
 10673 ;; This function is called by:
 10674 ;;		_TMR0_Initialize
 10675 ;;		_TMR0_ISR
 10676 ;; This function uses a non-reentrant model
 10677 ;;
 10678                           
 10679                           
 10680                           ;psect for function _TMR0_DefaultInterruptHandler
 10681  0003                     _TMR0_DefaultInterruptHandler:	
 10682                           
 10683                           ;incstack = 0
 10684                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 10685  0003  0008               	return
 10686  0004                     __end_of_TMR0_DefaultInterruptHandler:	
 10687                           
 10688                           	psect	text39
 10689  0800                     __ptext39:	
 10690 ;; *************** function _timerISR *****************
 10691 ;; Defined at:
 10692 ;;		line 77 in file "main.c"
 10693 ;; Parameters:    Size  Location     Type
 10694 ;;		None
 10695 ;; Auto vars:     Size  Location     Type
 10696 ;;		None
 10697 ;; Return value:  Size  Location     Type
 10698 ;;                  1    wreg      void 
 10699 ;; Registers used:
 10700 ;;		wreg
 10701 ;; Tracked objects:
 10702 ;;		On entry : 0/0
 10703 ;;		On exit  : 0/0
 10704 ;;		Unchanged: 0/0
 10705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10710 ;;Total ram usage:        0 bytes
 10711 ;; Hardware stack levels used:    1
 10712 ;; This function calls:
 10713 ;;		Nothing
 10714 ;; This function is called by:
 10715 ;;		_main
 10716 ;;		_TMR0_ISR
 10717 ;; This function uses a non-reentrant model
 10718 ;;
 10719                           
 10720                           
 10721                           ;psect for function _timerISR
 10722  0800                     _timerISR:	
 10723                           
 10724                           ;main.c: 78:     counter++ ;
 10725                           
 10726                           ;incstack = 0
 10727                           ; Regs used in _timerISR: [wreg]
 10728  0800  3001               	movlw	1
 10729  0801  0021               	movlb	1	; select bank1
 10730  0802  07C0               	addwf	_counter^(0+128),f	;volatile
 10731  0803  3000               	movlw	0
 10732  0804  3DC1               	addwfc	(_counter+1)^(0+128),f	;volatile
 10733  0805  3000               	movlw	0
 10734  0806  3DC2               	addwfc	(_counter+2)^(0+128),f	;volatile
 10735  0807  3000               	movlw	0
 10736  0808  3DC3               	addwfc	(_counter+3)^(0+128),f	;volatile
 10737                           
 10738                           ;main.c: 79:     adcCounter++ ;
 10739  0809  3001               	movlw	1
 10740  080A  07BC               	addwf	_adcCounter^(0+128),f	;volatile
 10741  080B  3000               	movlw	0
 10742  080C  3DBD               	addwfc	(_adcCounter+1)^(0+128),f	;volatile
 10743  080D  3000               	movlw	0
 10744  080E  3DBE               	addwfc	(_adcCounter+2)^(0+128),f	;volatile
 10745  080F  3000               	movlw	0
 10746  0810  3DBF               	addwfc	(_adcCounter+3)^(0+128),f	;volatile
 10747  0811  0008               	return
 10748  0812                     __end_of_timerISR:	
 10749                           
 10750                           	psect	text40
 10751  15E4                     __ptext40:	
 10752 ;; *************** function _PIN_MANAGER_IOC *****************
 10753 ;; Defined at:
 10754 ;;		line 79 in file "mcc_generated_files/pin_manager.c"
 10755 ;; Parameters:    Size  Location     Type
 10756 ;;		None
 10757 ;; Auto vars:     Size  Location     Type
 10758 ;;		None
 10759 ;; Return value:  Size  Location     Type
 10760 ;;                  1    wreg      void 
 10761 ;; Registers used:
 10762 ;;		wreg, status,2, status,0, pclath, cstack
 10763 ;; Tracked objects:
 10764 ;;		On entry : 0/0
 10765 ;;		On exit  : 0/0
 10766 ;;		Unchanged: 0/0
 10767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10771 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10772 ;;Total ram usage:        0 bytes
 10773 ;; Hardware stack levels used:    1
 10774 ;; Hardware stack levels required when called:    3
 10775 ;; This function calls:
 10776 ;;		_IOCCF7_ISR
 10777 ;; This function is called by:
 10778 ;;		_INTERRUPT_InterruptManager
 10779 ;; This function uses a non-reentrant model
 10780 ;;
 10781                           
 10782                           
 10783                           ;psect for function _PIN_MANAGER_IOC
 10784  15E4                     _PIN_MANAGER_IOC:	
 10785                           
 10786                           ;mcc_generated_files/pin_manager.c: 82:     if(IOCCFbits.IOCCF7 == 1)
 10787                           
 10788                           ;incstack = 0
 10789                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
 10790  15E4  0027               	movlb	7	; select bank7
 10791  15E5  1F99               	btfss	25,7	;volatile
 10792  15E6  0008               	return
 10793                           
 10794                           ;mcc_generated_files/pin_manager.c: 83:     {;mcc_generated_files/pin_manager.c: 84:    
      +                               IOCCF7_ISR();
 10795  15E7  3196  263C         	fcall	_IOCCF7_ISR
 10796  15E9  0008               	return
 10797  15EA                     __end_of_PIN_MANAGER_IOC:	
 10798                           
 10799                           	psect	text41
 10800  163C                     __ptext41:	
 10801 ;; *************** function _IOCCF7_ISR *****************
 10802 ;; Defined at:
 10803 ;;		line 91 in file "mcc_generated_files/pin_manager.c"
 10804 ;; Parameters:    Size  Location     Type
 10805 ;;		None
 10806 ;; Auto vars:     Size  Location     Type
 10807 ;;		None
 10808 ;; Return value:  Size  Location     Type
 10809 ;;                  1    wreg      void 
 10810 ;; Registers used:
 10811 ;;		wreg, status,2, status,0, pclath, cstack
 10812 ;; Tracked objects:
 10813 ;;		On entry : 0/0
 10814 ;;		On exit  : 0/0
 10815 ;;		Unchanged: 0/0
 10816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10820 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10821 ;;Total ram usage:        0 bytes
 10822 ;; Hardware stack levels used:    1
 10823 ;; Hardware stack levels required when called:    2
 10824 ;; This function calls:
 10825 ;;		Absolute function
 10826 ;;		_IOCCF7_DefaultInterruptHandler
 10827 ;;		_speedCalc
 10828 ;; This function is called by:
 10829 ;;		_PIN_MANAGER_IOC
 10830 ;; This function uses a non-reentrant model
 10831 ;;
 10832                           
 10833                           
 10834                           ;psect for function _IOCCF7_ISR
 10835  163C                     _IOCCF7_ISR:	
 10836                           
 10837                           ;mcc_generated_files/pin_manager.c: 96:     if(IOCCF7_InterruptHandler)
 10838                           
 10839                           ;incstack = 0
 10840                           ; Regs used in _IOCCF7_ISR: [wreg+status,2+status,0+pclath+cstack]
 10841  163C  0021               	movlb	1	; select bank1
 10842  163D  086C               	movf	_IOCCF7_InterruptHandler^(0+128),w
 10843  163E  046D               	iorwf	(_IOCCF7_InterruptHandler+1)^(0+128),w
 10844  163F  1903               	btfsc	3,2
 10845  1640  2E46               	goto	i1l2989
 10846                           
 10847                           ;mcc_generated_files/pin_manager.c: 97:     {;mcc_generated_files/pin_manager.c: 98:    
      +                               IOCCF7_InterruptHandler();
 10848  1641  086D               	movf	(_IOCCF7_InterruptHandler+1)^(0+128),w
 10849  1642  008A               	movwf	10
 10850  1643  086C               	movf	_IOCCF7_InterruptHandler^(0+128),w
 10851  1644  000A               	callw
 10852  1645  3196               	pagesel	$
 10853  1646                     i1l2989:	
 10854                           
 10855                           ;mcc_generated_files/pin_manager.c: 100:     IOCCFbits.IOCCF7 = 0;
 10856  1646  0027               	movlb	7	; select bank7
 10857  1647  1399               	bcf	25,7	;volatile
 10858  1648  0008               	return
 10859  1649                     __end_of_IOCCF7_ISR:	
 10860                           
 10861                           	psect	text42
 10862  0002                     __ptext42:	
 10863 ;; *************** function _IOCCF7_DefaultInterruptHandler *****************
 10864 ;; Defined at:
 10865 ;;		line 113 in file "mcc_generated_files/pin_manager.c"
 10866 ;; Parameters:    Size  Location     Type
 10867 ;;		None
 10868 ;; Auto vars:     Size  Location     Type
 10869 ;;		None
 10870 ;; Return value:  Size  Location     Type
 10871 ;;                  1    wreg      void 
 10872 ;; Registers used:
 10873 ;;		None
 10874 ;; Tracked objects:
 10875 ;;		On entry : 0/0
 10876 ;;		On exit  : 0/0
 10877 ;;		Unchanged: 0/0
 10878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10882 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10883 ;;Total ram usage:        0 bytes
 10884 ;; Hardware stack levels used:    1
 10885 ;; This function calls:
 10886 ;;		Nothing
 10887 ;; This function is called by:
 10888 ;;		_PIN_MANAGER_Initialize
 10889 ;;		_IOCCF7_ISR
 10890 ;; This function uses a non-reentrant model
 10891 ;;
 10892                           
 10893                           
 10894                           ;psect for function _IOCCF7_DefaultInterruptHandler
 10895  0002                     _IOCCF7_DefaultInterruptHandler:	
 10896                           
 10897                           ;incstack = 0
 10898                           ; Regs used in _IOCCF7_DefaultInterruptHandler: []
 10899  0002  0008               	return
 10900  0003                     __end_of_IOCCF7_DefaultInterruptHandler:	
 10901                           
 10902                           	psect	text43
 10903  1797                     __ptext43:	
 10904 ;; *************** function _speedCalc *****************
 10905 ;; Defined at:
 10906 ;;		line 84 in file "main.c"
 10907 ;; Parameters:    Size  Location     Type
 10908 ;;		None
 10909 ;; Auto vars:     Size  Location     Type
 10910 ;;		None
 10911 ;; Return value:  Size  Location     Type
 10912 ;;                  1    wreg      void 
 10913 ;; Registers used:
 10914 ;;		wreg, status,2, status,0, pclath, cstack
 10915 ;; Tracked objects:
 10916 ;;		On entry : 0/0
 10917 ;;		On exit  : 0/0
 10918 ;;		Unchanged: 0/0
 10919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10924 ;;Total ram usage:        0 bytes
 10925 ;; Hardware stack levels used:    1
 10926 ;; Hardware stack levels required when called:    1
 10927 ;; This function calls:
 10928 ;;		i1___fladd
 10929 ;; This function is called by:
 10930 ;;		_main
 10931 ;;		_IOCCF7_ISR
 10932 ;; This function uses a non-reentrant model
 10933 ;;
 10934                           
 10935                           
 10936                           ;psect for function _speedCalc
 10937  1797                     _speedCalc:	
 10938                           
 10939                           ;main.c: 86:     hallCount += 1 ;
 10940                           
 10941                           ;incstack = 0
 10942                           ; Regs used in _speedCalc: [wreg+status,2+status,0+pclath+cstack]
 10943  1797  303F               	movlw	63
 10944  1798  00F3               	movwf	i1___fladd@b+3
 10945  1799  3080               	movlw	128
 10946  179A  00F2               	movwf	i1___fladd@b+2
 10947  179B  3000               	movlw	0
 10948  179C  00F1               	movwf	i1___fladd@b+1
 10949  179D  3000               	movlw	0
 10950  179E  00F0               	movwf	i1___fladd@b
 10951  179F  0020               	movlb	0	; select bank0
 10952  17A0  0863               	movf	_hallCount+3,w	;volatile
 10953  17A1  00F7               	movwf	i1___fladd@a+3
 10954  17A2  0862               	movf	_hallCount+2,w	;volatile
 10955  17A3  00F6               	movwf	i1___fladd@a+2
 10956  17A4  0861               	movf	_hallCount+1,w	;volatile
 10957  17A5  00F5               	movwf	i1___fladd@a+1
 10958  17A6  0860               	movf	_hallCount,w	;volatile
 10959  17A7  00F4               	movwf	i1___fladd@a
 10960  17A8  3182  228C  3197   	fcall	i1___fladd
 10961  17AB  0873               	movf	?i1___fladd+3,w
 10962  17AC  0020               	movlb	0	; select bank0
 10963  17AD  00E3               	movwf	_hallCount+3	;volatile
 10964  17AE  0872               	movf	?i1___fladd+2,w
 10965  17AF  00E2               	movwf	_hallCount+2	;volatile
 10966  17B0  0871               	movf	?i1___fladd+1,w
 10967  17B1  00E1               	movwf	_hallCount+1	;volatile
 10968  17B2  0870               	movf	?i1___fladd,w
 10969  17B3  00E0               	movwf	_hallCount	;volatile
 10970                           
 10971                           ;main.c: 88:     if( adcCounter <= (2308 ) ){
 10972  17B4  0021               	movlb	1	; select bank1
 10973  17B5  1BBF               	btfsc	(_adcCounter+3)^(0+128),7	;volatile
 10974  17B6  2FC3               	goto	i1l2847
 10975  17B7  083F               	movf	(_adcCounter+3)^(0+128),w	;volatile
 10976  17B8  1D03               	btfss	3,2
 10977  17B9  0008               	return
 10978  17BA  083E               	movf	(_adcCounter+2)^(0+128),w	;volatile
 10979  17BB  1D03               	btfss	3,2
 10980  17BC  0008               	return
 10981  17BD  3005               	movlw	5
 10982  17BE  023C               	subwf	_adcCounter^(0+128),w	;volatile
 10983  17BF  3009               	movlw	9
 10984  17C0  3B3D               	subwfb	(_adcCounter+1)^(0+128),w	;volatile
 10985  17C1  1803               	btfsc	3,0
 10986  17C2  0008               	return
 10987  17C3                     i1l2847:	
 10988                           
 10989                           ;main.c: 89:         distInt++ ;
 10990  17C3  3001               	movlw	1
 10991  17C4  07CC               	addwf	_distInt^(0+128),f	;volatile
 10992  17C5  3000               	movlw	0
 10993  17C6  3DCD               	addwfc	(_distInt+1)^(0+128),f	;volatile
 10994  17C7  0008               	return
 10995  17C8                     __end_of_speedCalc:	
 10996                           
 10997                           	psect	text44
 10998  028C                     __ptext44:	
 10999 ;; *************** function i1___fladd *****************
 11000 ;; Defined at:
 11001 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 11002 ;; Parameters:    Size  Location     Type
 11003 ;;  b               4    0[COMMON] void 
 11004 ;;  a               4    4[COMMON] void 
 11005 ;; Auto vars:     Size  Location     Type
 11006 ;;  __fladd         1   11[COMMON] unsigned char 
 11007 ;;  __fladd         1   10[COMMON] unsigned char 
 11008 ;;  __fladd         1    9[COMMON] unsigned char 
 11009 ;;  __fladd         1    8[COMMON] unsigned char 
 11010 ;; Return value:  Size  Location     Type
 11011 ;;                  4    0[COMMON] unsigned char 
 11012 ;; Registers used:
 11013 ;;		wreg, status,2, status,0
 11014 ;; Tracked objects:
 11015 ;;		On entry : 0/0
 11016 ;;		On exit  : 0/0
 11017 ;;		Unchanged: 0/0
 11018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11019 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11020 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11021 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11022 ;;      Totals:        12       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11023 ;;Total ram usage:       20 bytes
 11024 ;; Hardware stack levels used:    1
 11025 ;; This function calls:
 11026 ;;		Nothing
 11027 ;; This function is called by:
 11028 ;;		_speedCalc
 11029 ;; This function uses a non-reentrant model
 11030 ;;
 11031                           
 11032                           
 11033                           ;psect for function i1___fladd
 11034  028C                     i1___fladd:	
 11035                           
 11036                           ;incstack = 0
 11037                           ; Regs used in i1___fladd: [wreg+status,2+status,0]
 11038  028C  0873               	movf	i1___fladd@b+3,w
 11039  028D  3980               	andlw	128
 11040  028E  0020               	movlb	0	; select bank0
 11041  028F  00A0               	movwf	??i1___fladd
 11042  0290  0820               	movf	??i1___fladd,w
 11043  0291  00F8               	movwf	i1___fladd@signs
 11044  0292  3573               	lslf	i1___fladd@b+3,w
 11045  0293  00A0               	movwf	??i1___fladd
 11046  0294  0820               	movf	??i1___fladd,w
 11047  0295  00FA               	movwf	i1___fladd@bexp
 11048  0296  1BF2               	btfsc	i1___fladd@b+2,7
 11049  0297  147A               	bsf	i1___fladd@bexp,0
 11050  0298  087A               	movf	i1___fladd@bexp,w
 11051  0299  1903               	btfsc	3,2
 11052  029A  2AA9               	goto	i1l2657
 11053  029B  0A7A               	incf	i1___fladd@bexp,w
 11054  029C  1D03               	btfss	3,2
 11055  029D  2AA6               	goto	i1l2653
 11056  029E  3000               	movlw	0
 11057  029F  00F3               	movwf	i1___fladd@b+3
 11058  02A0  3000               	movlw	0
 11059  02A1  00F2               	movwf	i1___fladd@b+2
 11060  02A2  3000               	movlw	0
 11061  02A3  00F1               	movwf	i1___fladd@b+1
 11062  02A4  3000               	movlw	0
 11063  02A5  00F0               	movwf	i1___fladd@b
 11064  02A6                     i1l2653:	
 11065  02A6  17F2               	bsf	i1___fladd@b+2,7
 11066  02A7  01F3               	clrf	i1___fladd@b+3
 11067  02A8  2AB1               	goto	i1l2659
 11068  02A9                     i1l2657:	
 11069  02A9  3000               	movlw	0
 11070  02AA  00F3               	movwf	i1___fladd@b+3
 11071  02AB  3000               	movlw	0
 11072  02AC  00F2               	movwf	i1___fladd@b+2
 11073  02AD  3000               	movlw	0
 11074  02AE  00F1               	movwf	i1___fladd@b+1
 11075  02AF  3000               	movlw	0
 11076  02B0  00F0               	movwf	i1___fladd@b
 11077  02B1                     i1l2659:	
 11078  02B1  0877               	movf	i1___fladd@a+3,w
 11079  02B2  3980               	andlw	128
 11080  02B3  00A0               	movwf	??i1___fladd
 11081  02B4  0820               	movf	??i1___fladd,w
 11082  02B5  00F9               	movwf	i1___fladd@aexp
 11083  02B6  0879               	movf	i1___fladd@aexp,w
 11084  02B7  0678               	xorwf	i1___fladd@signs,w
 11085  02B8  1D03               	btfss	3,2
 11086  02B9  1778               	bsf	i1___fladd@signs,6
 11087  02BA  3577               	lslf	i1___fladd@a+3,w
 11088  02BB  00A0               	movwf	??i1___fladd
 11089  02BC  0820               	movf	??i1___fladd,w
 11090  02BD  00F9               	movwf	i1___fladd@aexp
 11091  02BE  1BF6               	btfsc	i1___fladd@a+2,7
 11092  02BF  1479               	bsf	i1___fladd@aexp,0
 11093  02C0  0879               	movf	i1___fladd@aexp,w
 11094  02C1  1903               	btfsc	3,2
 11095  02C2  2AD1               	goto	i1l2681
 11096  02C3  0A79               	incf	i1___fladd@aexp,w
 11097  02C4  1D03               	btfss	3,2
 11098  02C5  2ACE               	goto	i1l2677
 11099  02C6  3000               	movlw	0
 11100  02C7  00F7               	movwf	i1___fladd@a+3
 11101  02C8  3000               	movlw	0
 11102  02C9  00F6               	movwf	i1___fladd@a+2
 11103  02CA  3000               	movlw	0
 11104  02CB  00F5               	movwf	i1___fladd@a+1
 11105  02CC  3000               	movlw	0
 11106  02CD  00F4               	movwf	i1___fladd@a
 11107  02CE                     i1l2677:	
 11108  02CE  17F6               	bsf	i1___fladd@a+2,7
 11109  02CF  01F7               	clrf	i1___fladd@a+3
 11110  02D0  2AD9               	goto	i1l843
 11111  02D1                     i1l2681:	
 11112  02D1  3000               	movlw	0
 11113  02D2  00F7               	movwf	i1___fladd@a+3
 11114  02D3  3000               	movlw	0
 11115  02D4  00F6               	movwf	i1___fladd@a+2
 11116  02D5  3000               	movlw	0
 11117  02D6  00F5               	movwf	i1___fladd@a+1
 11118  02D7  3000               	movlw	0
 11119  02D8  00F4               	movwf	i1___fladd@a
 11120  02D9                     i1l843:	
 11121  02D9  087A               	movf	i1___fladd@bexp,w
 11122  02DA  0279               	subwf	i1___fladd@aexp,w
 11123  02DB  1803               	skipnc
 11124  02DC  2B1F               	goto	i1l2717
 11125  02DD  1F78               	btfss	i1___fladd@signs,6
 11126  02DE  2AE3               	goto	i1l2687
 11127  02DF  3080               	movlw	128
 11128  02E0  00A0               	movwf	??i1___fladd
 11129  02E1  0820               	movf	??i1___fladd,w
 11130  02E2  06F8               	xorwf	i1___fladd@signs,f
 11131  02E3                     i1l2687:	
 11132  02E3  087A               	movf	i1___fladd@bexp,w
 11133  02E4  00A0               	movwf	??i1___fladd
 11134  02E5  0820               	movf	??i1___fladd,w
 11135  02E6  00FB               	movwf	i1___fladd@grs
 11136  02E7  0879               	movf	i1___fladd@aexp,w
 11137  02E8  00A0               	movwf	??i1___fladd
 11138  02E9  0820               	movf	??i1___fladd,w
 11139  02EA  00FA               	movwf	i1___fladd@bexp
 11140  02EB  087B               	movf	i1___fladd@grs,w
 11141  02EC  00A0               	movwf	??i1___fladd
 11142  02ED  0820               	movf	??i1___fladd,w
 11143  02EE  00F9               	movwf	i1___fladd@aexp
 11144  02EF  0870               	movf	i1___fladd@b,w
 11145  02F0  00A0               	movwf	??i1___fladd
 11146  02F1  0820               	movf	??i1___fladd,w
 11147  02F2  00FB               	movwf	i1___fladd@grs
 11148  02F3  0874               	movf	i1___fladd@a,w
 11149  02F4  00A0               	movwf	??i1___fladd
 11150  02F5  0820               	movf	??i1___fladd,w
 11151  02F6  00F0               	movwf	i1___fladd@b
 11152  02F7  087B               	movf	i1___fladd@grs,w
 11153  02F8  00A0               	movwf	??i1___fladd
 11154  02F9  0820               	movf	??i1___fladd,w
 11155  02FA  00F4               	movwf	i1___fladd@a
 11156  02FB  0871               	movf	i1___fladd@b+1,w
 11157  02FC  00A0               	movwf	??i1___fladd
 11158  02FD  0820               	movf	??i1___fladd,w
 11159  02FE  00FB               	movwf	i1___fladd@grs
 11160  02FF  0875               	movf	i1___fladd@a+1,w
 11161  0300  00A0               	movwf	??i1___fladd
 11162  0301  0820               	movf	??i1___fladd,w
 11163  0302  00F1               	movwf	i1___fladd@b+1
 11164  0303  087B               	movf	i1___fladd@grs,w
 11165  0304  00A0               	movwf	??i1___fladd
 11166  0305  0820               	movf	??i1___fladd,w
 11167  0306  00F5               	movwf	i1___fladd@a+1
 11168  0307  0872               	movf	i1___fladd@b+2,w
 11169  0308  00A0               	movwf	??i1___fladd
 11170  0309  0820               	movf	??i1___fladd,w
 11171  030A  00FB               	movwf	i1___fladd@grs
 11172  030B  0876               	movf	i1___fladd@a+2,w
 11173  030C  00A0               	movwf	??i1___fladd
 11174  030D  0820               	movf	??i1___fladd,w
 11175  030E  00F2               	movwf	i1___fladd@b+2
 11176  030F  087B               	movf	i1___fladd@grs,w
 11177  0310  00A0               	movwf	??i1___fladd
 11178  0311  0820               	movf	??i1___fladd,w
 11179  0312  00F6               	movwf	i1___fladd@a+2
 11180  0313  0873               	movf	i1___fladd@b+3,w
 11181  0314  00A0               	movwf	??i1___fladd
 11182  0315  0820               	movf	??i1___fladd,w
 11183  0316  00FB               	movwf	i1___fladd@grs
 11184  0317  0877               	movf	i1___fladd@a+3,w
 11185  0318  00A0               	movwf	??i1___fladd
 11186  0319  0820               	movf	??i1___fladd,w
 11187  031A  00F3               	movwf	i1___fladd@b+3
 11188  031B  087B               	movf	i1___fladd@grs,w
 11189  031C  00A0               	movwf	??i1___fladd
 11190  031D  0820               	movf	??i1___fladd,w
 11191  031E  00F7               	movwf	i1___fladd@a+3
 11192  031F                     i1l2717:	
 11193  031F  01FB               	clrf	i1___fladd@grs
 11194  0320  0879               	movf	i1___fladd@aexp,w
 11195  0321  00A0               	movwf	??i1___fladd
 11196  0322  01A1               	clrf	??i1___fladd+1
 11197  0323  0821               	movf	??i1___fladd+1,w
 11198  0324  00A3               	movwf	??i1___fladd+3
 11199  0325  087A               	movf	i1___fladd@bexp,w
 11200  0326  0220               	subwf	??i1___fladd,w
 11201  0327  00A2               	movwf	??i1___fladd+2
 11202  0328  1C03               	skipc
 11203  0329  03A3               	decf	??i1___fladd+3,f
 11204  032A  0823               	movf	??i1___fladd+3,w
 11205  032B  3A80               	xorlw	128
 11206  032C  00A4               	movwf	??i1___fladd+4
 11207  032D  3080               	movlw	128
 11208  032E  0224               	subwf	??i1___fladd+4,w
 11209  032F  1D03               	skipz
 11210  0330  2B33               	goto	u307_25
 11211  0331  301A               	movlw	26
 11212  0332  0222               	subwf	??i1___fladd+2,w
 11213  0333                     u307_25:	
 11214  0333  1C03               	skipc
 11215  0334  2B69               	goto	i1l2735
 11216  0335  0873               	movf	i1___fladd@b+3,w
 11217  0336  0472               	iorwf	i1___fladd@b+2,w
 11218  0337  0471               	iorwf	i1___fladd@b+1,w
 11219  0338  0470               	iorwf	i1___fladd@b,w
 11220  0339  1903               	btfsc	3,2
 11221  033A  2B3D               	goto	u308_20
 11222  033B  3001               	movlw	1
 11223  033C  2B3E               	goto	u309_20
 11224  033D                     u308_20:	
 11225  033D  3000               	movlw	0
 11226  033E                     u309_20:	
 11227  033E  0020               	movlb	0	; select bank0
 11228  033F  00A0               	movwf	??i1___fladd
 11229  0340  0820               	movf	??i1___fladd,w
 11230  0341  00FB               	movwf	i1___fladd@grs
 11231  0342  3000               	movlw	0
 11232  0343  00F3               	movwf	i1___fladd@b+3
 11233  0344  3000               	movlw	0
 11234  0345  00F2               	movwf	i1___fladd@b+2
 11235  0346  3000               	movlw	0
 11236  0347  00F1               	movwf	i1___fladd@b+1
 11237  0348  3000               	movlw	0
 11238  0349  00F0               	movwf	i1___fladd@b
 11239  034A  0879               	movf	i1___fladd@aexp,w
 11240  034B  00A0               	movwf	??i1___fladd
 11241  034C  0820               	movf	??i1___fladd,w
 11242  034D  00FA               	movwf	i1___fladd@bexp
 11243  034E  2B6D               	goto	i1l847
 11244  034F                     i1l849:	
 11245  034F  1C7B               	btfss	i1___fladd@grs,0
 11246  0350  2B58               	goto	i1l2725
 11247  0351  367B               	lsrf	i1___fladd@grs,w
 11248  0352  3801               	iorlw	1
 11249  0353  0020               	movlb	0	; select bank0
 11250  0354  00A0               	movwf	??i1___fladd
 11251  0355  0820               	movf	??i1___fladd,w
 11252  0356  00FB               	movwf	i1___fladd@grs
 11253  0357  2B5A               	goto	i1l2727
 11254  0358                     i1l2725:	
 11255  0358  1003               	clrc
 11256  0359  0CFB               	rrf	i1___fladd@grs,f
 11257  035A                     i1l2727:	
 11258  035A  1870               	btfsc	i1___fladd@b,0
 11259  035B  17FB               	bsf	i1___fladd@grs,7
 11260  035C  3001               	movlw	1
 11261  035D  0020               	movlb	0	; select bank0
 11262  035E  00A0               	movwf	??i1___fladd
 11263  035F                     u312_25:	
 11264  035F  37F3               	asrf	i1___fladd@b+3,f
 11265  0360  0CF2               	rrf	i1___fladd@b+2,f
 11266  0361  0CF1               	rrf	i1___fladd@b+1,f
 11267  0362  0CF0               	rrf	i1___fladd@b,f
 11268  0363  0BA0               	decfsz	??i1___fladd& (0+127),f
 11269  0364  2B5F               	goto	u312_25
 11270  0365  3001               	movlw	1
 11271  0366  00A0               	movwf	??i1___fladd
 11272  0367  0820               	movf	??i1___fladd,w
 11273  0368  07FA               	addwf	i1___fladd@bexp,f
 11274  0369                     i1l2735:	
 11275  0369  0879               	movf	i1___fladd@aexp,w
 11276  036A  027A               	subwf	i1___fladd@bexp,w
 11277  036B  1C03               	skipc
 11278  036C  2B4F               	goto	i1l849
 11279  036D                     i1l847:	
 11280  036D  1B78               	btfsc	i1___fladd@signs,6
 11281  036E  2BA0               	goto	i1l2761
 11282  036F  087A               	movf	i1___fladd@bexp,w
 11283  0370  1D03               	btfss	3,2
 11284  0371  2B7B               	goto	i1l2743
 11285  0372  3000               	movlw	0
 11286  0373  00F3               	movwf	?i1___fladd+3
 11287  0374  3000               	movlw	0
 11288  0375  00F2               	movwf	?i1___fladd+2
 11289  0376  3000               	movlw	0
 11290  0377  00F1               	movwf	?i1___fladd+1
 11291  0378  3000               	movlw	0
 11292  0379  00F0               	movwf	?i1___fladd
 11293  037A  0008               	return
 11294  037B                     i1l2743:	
 11295  037B  0874               	movf	i1___fladd@a,w
 11296  037C  07F0               	addwf	i1___fladd@b,f
 11297  037D  0875               	movf	i1___fladd@a+1,w
 11298  037E  3DF1               	addwfc	i1___fladd@b+1,f
 11299  037F  0876               	movf	i1___fladd@a+2,w
 11300  0380  3DF2               	addwfc	i1___fladd@b+2,f
 11301  0381  0877               	movf	i1___fladd@a+3,w
 11302  0382  3DF3               	addwfc	i1___fladd@b+3,f
 11303  0383  1C73               	btfss	i1___fladd@b+3,0
 11304  0384  2C1B               	goto	i1l2795
 11305  0385  1C7B               	btfss	i1___fladd@grs,0
 11306  0386  2B8E               	goto	i1l2751
 11307  0387  367B               	lsrf	i1___fladd@grs,w
 11308  0388  3801               	iorlw	1
 11309  0389  0020               	movlb	0	; select bank0
 11310  038A  00A0               	movwf	??i1___fladd
 11311  038B  0820               	movf	??i1___fladd,w
 11312  038C  00FB               	movwf	i1___fladd@grs
 11313  038D  2B90               	goto	i1l2753
 11314  038E                     i1l2751:	
 11315  038E  1003               	clrc
 11316  038F  0CFB               	rrf	i1___fladd@grs,f
 11317  0390                     i1l2753:	
 11318  0390  1870               	btfsc	i1___fladd@b,0
 11319  0391  17FB               	bsf	i1___fladd@grs,7
 11320  0392  3001               	movlw	1
 11321  0393  0020               	movlb	0	; select bank0
 11322  0394  00A0               	movwf	??i1___fladd
 11323  0395                     u319_25:	
 11324  0395  37F3               	asrf	i1___fladd@b+3,f
 11325  0396  0CF2               	rrf	i1___fladd@b+2,f
 11326  0397  0CF1               	rrf	i1___fladd@b+1,f
 11327  0398  0CF0               	rrf	i1___fladd@b,f
 11328  0399  0BA0               	decfsz	??i1___fladd& (0+127),f
 11329  039A  2B95               	goto	u319_25
 11330  039B  3001               	movlw	1
 11331  039C  00A0               	movwf	??i1___fladd
 11332  039D  0820               	movf	??i1___fladd,w
 11333  039E  07FA               	addwf	i1___fladd@bexp,f
 11334  039F  2C1B               	goto	i1l2795
 11335  03A0                     i1l2761:	
 11336  03A0  0873               	movf	i1___fladd@b+3,w
 11337  03A1  3A80               	xorlw	128
 11338  03A2  0020               	movlb	0	; select bank0
 11339  03A3  00A0               	movwf	??i1___fladd
 11340  03A4  0877               	movf	i1___fladd@a+3,w
 11341  03A5  3A80               	xorlw	128
 11342  03A6  0220               	subwf	??i1___fladd,w
 11343  03A7  1D03               	skipz
 11344  03A8  2BB3               	goto	u320_23
 11345  03A9  0876               	movf	i1___fladd@a+2,w
 11346  03AA  0272               	subwf	i1___fladd@b+2,w
 11347  03AB  1D03               	skipz
 11348  03AC  2BB3               	goto	u320_23
 11349  03AD  0875               	movf	i1___fladd@a+1,w
 11350  03AE  0271               	subwf	i1___fladd@b+1,w
 11351  03AF  1D03               	skipz
 11352  03B0  2BB3               	goto	u320_23
 11353  03B1  0874               	movf	i1___fladd@a,w
 11354  03B2  0270               	subwf	i1___fladd@b,w
 11355  03B3                     u320_23:	
 11356  03B3  1803               	skipnc
 11357  03B4  2BEB               	goto	i1l2771
 11358  03B5  30FF               	movlw	255
 11359  03B6  00A0               	movwf	??i1___fladd
 11360  03B7  30FF               	movlw	255
 11361  03B8  00A1               	movwf	??i1___fladd+1
 11362  03B9  30FF               	movlw	255
 11363  03BA  00A2               	movwf	??i1___fladd+2
 11364  03BB  30FF               	movlw	255
 11365  03BC  00A3               	movwf	??i1___fladd+3
 11366  03BD  0870               	movf	i1___fladd@b,w
 11367  03BE  0274               	subwf	i1___fladd@a,w
 11368  03BF  00A4               	movwf	??i1___fladd+4
 11369  03C0  0871               	movf	i1___fladd@b+1,w
 11370  03C1  3B75               	subwfb	i1___fladd@a+1,w
 11371  03C2  00A5               	movwf	??i1___fladd+5
 11372  03C3  0872               	movf	i1___fladd@b+2,w
 11373  03C4  3B76               	subwfb	i1___fladd@a+2,w
 11374  03C5  00A6               	movwf	??i1___fladd+6
 11375  03C6  0873               	movf	i1___fladd@b+3,w
 11376  03C7  3B77               	subwfb	i1___fladd@a+3,w
 11377  03C8  00A7               	movwf	??i1___fladd+7
 11378  03C9  0824               	movf	??i1___fladd+4,w
 11379  03CA  07A0               	addwf	??i1___fladd,f
 11380  03CB  0825               	movf	??i1___fladd+5,w
 11381  03CC  3DA1               	addwfc	??i1___fladd+1,f
 11382  03CD  0826               	movf	??i1___fladd+6,w
 11383  03CE  3DA2               	addwfc	??i1___fladd+2,f
 11384  03CF  0827               	movf	??i1___fladd+7,w
 11385  03D0  3DA3               	addwfc	??i1___fladd+3,f
 11386  03D1  0823               	movf	??i1___fladd+3,w
 11387  03D2  00F3               	movwf	i1___fladd@b+3
 11388  03D3  0822               	movf	??i1___fladd+2,w
 11389  03D4  00F2               	movwf	i1___fladd@b+2
 11390  03D5  0821               	movf	??i1___fladd+1,w
 11391  03D6  00F1               	movwf	i1___fladd@b+1
 11392  03D7  0820               	movf	??i1___fladd,w
 11393  03D8  00F0               	movwf	i1___fladd@b
 11394  03D9  3080               	movlw	128
 11395  03DA  00A0               	movwf	??i1___fladd
 11396  03DB  0820               	movf	??i1___fladd,w
 11397  03DC  06F8               	xorwf	i1___fladd@signs,f
 11398  03DD  09FB               	comf	i1___fladd@grs,f
 11399  03DE  0AFB               	incf	i1___fladd@grs,f
 11400  03DF  087B               	movf	i1___fladd@grs,w
 11401  03E0  1D03               	btfss	3,2
 11402  03E1  2BF3               	goto	i1l864
 11403  03E2  3001               	movlw	1
 11404  03E3  07F0               	addwf	i1___fladd@b,f
 11405  03E4  3000               	movlw	0
 11406  03E5  3DF1               	addwfc	i1___fladd@b+1,f
 11407  03E6  3000               	movlw	0
 11408  03E7  3DF2               	addwfc	i1___fladd@b+2,f
 11409  03E8  3000               	movlw	0
 11410  03E9  3DF3               	addwfc	i1___fladd@b+3,f
 11411  03EA  2BF3               	goto	i1l864
 11412  03EB                     i1l2771:	
 11413  03EB  0874               	movf	i1___fladd@a,w
 11414  03EC  02F0               	subwf	i1___fladd@b,f
 11415  03ED  0875               	movf	i1___fladd@a+1,w
 11416  03EE  3BF1               	subwfb	i1___fladd@b+1,f
 11417  03EF  0876               	movf	i1___fladd@a+2,w
 11418  03F0  3BF2               	subwfb	i1___fladd@b+2,f
 11419  03F1  0877               	movf	i1___fladd@a+3,w
 11420  03F2  3BF3               	subwfb	i1___fladd@b+3,f
 11421  03F3                     i1l864:	
 11422  03F3  0873               	movf	i1___fladd@b+3,w
 11423  03F4  0472               	iorwf	i1___fladd@b+2,w
 11424  03F5  0471               	iorwf	i1___fladd@b+1,w
 11425  03F6  0470               	iorwf	i1___fladd@b,w
 11426  03F7  1D03               	skipz
 11427  03F8  2C19               	goto	i1l2793
 11428  03F9  087B               	movf	i1___fladd@grs,w
 11429  03FA  1D03               	btfss	3,2
 11430  03FB  2C19               	goto	i1l2793
 11431  03FC  3000               	movlw	0
 11432  03FD  00F3               	movwf	?i1___fladd+3
 11433  03FE  3000               	movlw	0
 11434  03FF  00F2               	movwf	?i1___fladd+2
 11435  0400  3000               	movlw	0
 11436  0401  00F1               	movwf	?i1___fladd+1
 11437  0402  3000               	movlw	0
 11438  0403  00F0               	movwf	?i1___fladd
 11439  0404  0008               	return
 11440  0405                     i1l2779:	
 11441  0405  3001               	movlw	1
 11442  0406                     u324_25:	
 11443  0406  35F0               	lslf	i1___fladd@b,f
 11444  0407  0DF1               	rlf	i1___fladd@b+1,f
 11445  0408  0DF2               	rlf	i1___fladd@b+2,f
 11446  0409  0DF3               	rlf	i1___fladd@b+3,f
 11447  040A  0B89               	decfsz	9,f
 11448  040B  2C06               	goto	u324_25
 11449  040C  1BFB               	btfsc	i1___fladd@grs,7
 11450  040D  1470               	bsf	i1___fladd@b,0
 11451  040E  1C7B               	btfss	i1___fladd@grs,0
 11452  040F  2C12               	goto	i1l2787
 11453  0410  1403               	setc
 11454  0411  2C13               	goto	L5
 11455  0412                     i1l2787:	
 11456  0412  1003               	clrc
 11457  0413                     L5:	
 11458  0413  0DFB               	rlf	i1___fladd@grs,f
 11459  0414  087A               	movf	i1___fladd@bexp,w
 11460  0415  1903               	btfsc	3,2
 11461  0416  2C19               	goto	i1l2793
 11462  0417  3001               	movlw	1
 11463  0418  02FA               	subwf	i1___fladd@bexp,f
 11464  0419                     i1l2793:	
 11465  0419  1FF2               	btfss	i1___fladd@b+2,7
 11466  041A  2C05               	goto	i1l2779
 11467  041B                     i1l2795:	
 11468  041B  01F9               	clrf	i1___fladd@aexp
 11469  041C  1FFB               	btfss	i1___fladd@grs,7
 11470  041D  2C26               	goto	i1l2805
 11471  041E  087B               	movf	i1___fladd@grs,w
 11472  041F  397F               	andlw	127
 11473  0420  1903               	btfsc	3,2
 11474  0421  1870               	btfsc	i1___fladd@b,0
 11475  0422  2C24               	goto	i1l2801
 11476  0423  2C26               	goto	i1l2805
 11477  0424                     i1l2801:	
 11478  0424  01F9               	clrf	i1___fladd@aexp
 11479  0425  0AF9               	incf	i1___fladd@aexp,f
 11480  0426                     i1l2805:	
 11481  0426  0879               	movf	i1___fladd@aexp,w
 11482  0427  1903               	btfsc	3,2
 11483  0428  2C53               	goto	i1l877
 11484  0429  3001               	movlw	1
 11485  042A  07F0               	addwf	i1___fladd@b,f
 11486  042B  3000               	movlw	0
 11487  042C  3DF1               	addwfc	i1___fladd@b+1,f
 11488  042D  3000               	movlw	0
 11489  042E  3DF2               	addwfc	i1___fladd@b+2,f
 11490  042F  3000               	movlw	0
 11491  0430  3DF3               	addwfc	i1___fladd@b+3,f
 11492  0431  1C73               	btfss	i1___fladd@b+3,0
 11493  0432  2C53               	goto	i1l877
 11494  0433  0870               	movf	i1___fladd@b,w
 11495  0434  0020               	movlb	0	; select bank0
 11496  0435  00A0               	movwf	??i1___fladd
 11497  0436  0871               	movf	i1___fladd@b+1,w
 11498  0437  00A1               	movwf	??i1___fladd+1
 11499  0438  0872               	movf	i1___fladd@b+2,w
 11500  0439  00A2               	movwf	??i1___fladd+2
 11501  043A  0873               	movf	i1___fladd@b+3,w
 11502  043B  00A3               	movwf	??i1___fladd+3
 11503  043C  3001               	movlw	1
 11504  043D  00A4               	movwf	??i1___fladd+4
 11505  043E                     u334_25:	
 11506  043E  37A3               	asrf	??i1___fladd+3,f
 11507  043F  0CA2               	rrf	??i1___fladd+2,f
 11508  0440  0CA1               	rrf	??i1___fladd+1,f
 11509  0441  0CA0               	rrf	??i1___fladd,f
 11510  0442  0BA4               	decfsz	??i1___fladd+4,f
 11511  0443  2C3E               	goto	u334_25
 11512  0444  0823               	movf	??i1___fladd+3,w
 11513  0445  00F3               	movwf	i1___fladd@b+3
 11514  0446  0822               	movf	??i1___fladd+2,w
 11515  0447  00F2               	movwf	i1___fladd@b+2
 11516  0448  0821               	movf	??i1___fladd+1,w
 11517  0449  00F1               	movwf	i1___fladd@b+1
 11518  044A  0820               	movf	??i1___fladd,w
 11519  044B  00F0               	movwf	i1___fladd@b
 11520  044C  0A7A               	incf	i1___fladd@bexp,w
 11521  044D  1903               	btfsc	3,2
 11522  044E  2C53               	goto	i1l877
 11523  044F  3001               	movlw	1
 11524  0450  00A0               	movwf	??i1___fladd
 11525  0451  0820               	movf	??i1___fladd,w
 11526  0452  07FA               	addwf	i1___fladd@bexp,f
 11527  0453                     i1l877:	
 11528  0453  0A7A               	incf	i1___fladd@bexp,w
 11529  0454  1D03               	btfss	3,2
 11530  0455  087A               	movf	i1___fladd@bexp,w
 11531  0456  1D03               	btfss	3,2
 11532  0457  2C63               	goto	i1l2823
 11533  0458  3000               	movlw	0
 11534  0459  00F3               	movwf	i1___fladd@b+3
 11535  045A  3000               	movlw	0
 11536  045B  00F2               	movwf	i1___fladd@b+2
 11537  045C  3000               	movlw	0
 11538  045D  00F1               	movwf	i1___fladd@b+1
 11539  045E  3000               	movlw	0
 11540  045F  00F0               	movwf	i1___fladd@b
 11541  0460  087A               	movf	i1___fladd@bexp,w
 11542  0461  1903               	btfsc	3,2
 11543  0462  01F8               	clrf	i1___fladd@signs
 11544  0463                     i1l2823:	
 11545  0463  1C7A               	btfss	i1___fladd@bexp,0
 11546  0464  2C67               	goto	i1l2827
 11547  0465  17F2               	bsf	i1___fladd@b+2,7
 11548  0466  2C6C               	goto	i1l885
 11549  0467                     i1l2827:	
 11550  0467  307F               	movlw	127
 11551  0468  0020               	movlb	0	; select bank0
 11552  0469  00A0               	movwf	??i1___fladd
 11553  046A  0820               	movf	??i1___fladd,w
 11554  046B  05F2               	andwf	i1___fladd@b+2,f
 11555  046C                     i1l885:	
 11556  046C  367A               	lsrf	i1___fladd@bexp,w
 11557  046D  0020               	movlb	0	; select bank0
 11558  046E  00A0               	movwf	??i1___fladd
 11559  046F  0820               	movf	??i1___fladd,w
 11560  0470  00F3               	movwf	i1___fladd@b+3
 11561  0471  1FF8               	btfss	i1___fladd@signs,7
 11562  0472  0008               	return
 11563  0473  17F3               	bsf	i1___fladd@b+3,7
 11564  0474  0008               	return
 11565  0475                     __end_ofi1___fladd:	
 11566  007E                     btemp	set	126	;btemp
 11567  007E                     int$flags	set	126
 11568  007E                     wtemp0	set	126


Data Sizes:
    Strings     6
    Constant    32
    Data        0
    BSS         99
    Persistent  43
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     64      72
    BANK1            80     28      78
    BANK2            80      9      59
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    puts@s	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_2(CODE[3]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK2[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), STR_2(CODE[3]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S1055_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK2[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfpfcnvrt@vp	PTR void  size(1) Largest target is 2
		 -> ?_printf(BANK2[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK2[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timerISR(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timerISR(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    IOCCF7_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> speedCalc(), IOCCF7_DefaultInterruptHandler(), 

    IOCCF7_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> speedCalc(), Absolute function(), IOCCF7_DefaultInterruptHandler(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _speedCalc->i1___fladd

Critical Paths under _main in BANK0

    _setCursor->_EUSART_Write
    _resetCursor->_puts
    _puts->_fputs
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _abs->___aomod
    ___flsub->___fladd
    ___flmul->___fldiv
    ___fldiv->___flsub
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCCF7_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _speedCalc->i1___fladd

Critical Paths under _main in BANK1

    _main->_printf
    _printf->_vfprintf
    _vfpfcnvrt->_dtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   21654
         _IOCCF7_SetInterruptHandler
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                             _printf
                        _resetCursor
                          _setCursor
 ---------------------------------------------------------------------------------
 (1) _setCursor                                            4     3      1     276
                                              9 BANK0      4     3      1
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (1) _resetCursor                                          0     0      0    3382
                               _puts
 ---------------------------------------------------------------------------------
 (2) _puts                                                 5     3      2    3382
                                             27 BANK0      5     3      2
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (1) _printf                                              10     4      6    8863
                                             27 BANK1      1     1      0
                                              0 BANK2      9     3      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    8596
                                             19 BANK1      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           39    37      2    8149
                                             47 BANK0     17    15      2
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    6109
                                             36 BANK0     11     3      8
                                              0 BANK1     19    19      0
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    3878
                                             27 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     166
                                              8 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _fputs                                                9     6      3    1914
                                             18 BANK0      9     6      3
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3    1210
                                             10 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      62
                                              9 BANK0      1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (2) _EUSART_Write                                         1     1      0      31
                                              8 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             27 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     613
                                              8 BANK0     19     3     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     625
                                              8 BANK0     27    11     16
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     474
                                              8 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             11     7      4     305
                                              8 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 (1) ___flsub                                              8     0      8    2433
                                             28 BANK0      8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             20    12      8    2236
                                              8 BANK0     20    12      8
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             26    18      8    3172
                                              0 BANK1     26    18      8
                          __Umul8_16
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) __Umul8_16                                            9     7      2     799
                                              8 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (1) ___flge                                              12     4      8     334
                                              8 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1425
                                             36 BANK0     26    18      8
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     642
                     _ADC_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0     174
                                             10 BANK0      1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                              8 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     174
         _IOCCF7_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCCF7_SetInterruptHandler                           2     0      2     174
                                              8 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              8 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              8 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              8 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          0     0      0    2036
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                           _timerISR *
 ---------------------------------------------------------------------------------
 (12) _timerISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _PIN_MANAGER_IOC                                     0     0      0    2036
                         _IOCCF7_ISR
 ---------------------------------------------------------------------------------
 (12) _IOCCF7_ISR                                          0     0      0    2036
                   Absolute function *
     _IOCCF7_DefaultInterruptHandler *
                          _speedCalc *
 ---------------------------------------------------------------------------------
 (13) _speedCalc                                           0     0      0    2036
                          i1___fladd
 ---------------------------------------------------------------------------------
 (14) i1___fladd                                          20    12      8    2036
                                              0 COMMON    12     4      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (13) _IOCCF7_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _IOCCF7_SetInterruptHandler
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCCF7_SetInterruptHandler
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _TMR0_SetInterruptHandler
   ___fldiv
     ___flsub (ARG)
       ___fladd
   ___flge
   ___flmul
     __Umul8_16
     ___fldiv (ARG)
       ___flsub (ARG)
         ___fladd
   ___flsub
     ___fladd
   ___fltol
   ___xxtofl
   _printf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART_Write
             _fputs
               _fputc
                 _putch
                   _EUSART_Write
             _strlen
         _fputc
           _putch
             _EUSART_Write
   _resetCursor
     _puts
       _fputc
         _putch
           _EUSART_Write
       _fputs
         _fputc
           _putch
             _EUSART_Write
   _setCursor
     _EUSART_Write

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
     _IOCCF7_ISR
       Absolute function(Fake) *
       _IOCCF7_DefaultInterruptHandler *
       _speedCalc *
         i1___fladd
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _timerISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     40      48       5       90.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     1C      4E       7       97.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      9      3B       9       73.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      DF      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      DF      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Apr 02 13:28:58 2019

                                 ___fldiv@aexp 005D                                   ___fldiv@bexp 005C  
                                  i1___fladd@a 0074                                    i1___fladd@b 0070  
                                 ___fldiv@sign 0055                                    __CFG_CP$OFF 0000  
                                           l69 1601                                _timer0ReloadVal 0067  
                          __Umul8_16@word_mpld 002E                                            l500 06B1  
                                          l501 06B9                                            l505 06D2  
                                          l506 06E2                                            l363 0893  
                                          l509 07B0                                            l720 0968  
                                          l642 0C23                                            l723 09B6  
                                          l492 08AD                                            l743 0931  
                                          l655 0B2C                                            l495 08CD  
                                          l920 0FD6                                            l921 0FEE  
                                          l923 0FFB                                            l843 04C2  
                                          l951 027F                                            l847 0555  
                                          l864 05D8                                            l849 0538  
                                          l885 064F                                            l877 0637  
                                          l990 0A31                                            l991 0A3B  
                                          l983 0A1D                                            l977 09E7  
                                          l899 0ECF                                            _abs 1691  
                                          _pad 0894                                            _rpm 00B8  
               ?_EUSART_SetFramingErrorHandler 0028                                   __CFG_BORV$LO 0000  
                                          wreg 0009                                  i1___fladd@grs 007B  
                                 __CFG_IESO$ON 0000                                   ___flmul@aexp 00DC  
                                 ___flmul@bexp 00E1         __end_of_IOCCF7_DefaultInterruptHandler 0003  
      __size_of_IOCCF7_DefaultInterruptHandler 0001                 _IOCCF7_DefaultInterruptHandler 0002  
                                 ___flmul@sign 00DB                                   ___flmul@temp 00E6  
                                 ___flmul@prod 00E2                                   __CFG_LVP$OFF 0000  
                                 __CFG_ZCD$OFF 0000                                   ___fltol@exp1 0032  
                                         ?_abs 003B                                           l1045 170E  
                                         l3103 0540                                           l3031 048F  
                                         l3201 0647                                           l3121 0563  
                                         l3105 0542                                           l3113 0550  
                                         l3131 0577                                           l3035 0492  
                                         l3205 064B                                           l3037 049A  
                                         l4005 0CE1                                           l3215 1708  
                                         l3055 04B7                                           l4015 0D06  
                                         l3313 0982                                           l3129 0575  
                                         l3065 04CC                                           l4009 0CE5  
                                         l4025 0D15                                           l3403 0EC4  
                                         l4115 004D                                           l3171 05FE  
                                         l3139 0586                                           l3059 04BA  
                                         l4019 0D0C                                           l4051 1772  
                                         l3317 099C                                           l4205 0215  
                                         l4133 0070                                           l4117 004F  
                                         l3165 05F7                                           l3157 05EA  
                                         l3149 05D0                                           l3173 0600  
                                         l3333 08FA                                           l4053 1792  
                                         l4061 0855                                           l3503 0FF7  
                                         l3423 0EFA                                           l3407 0EC7  
                                         l4223 0255                                           l4135 0072  
                                         l4119 0057                                           l3183 060B  
                                         l3095 0508                                           l3351 092D  
                                         l4311 0885                                           l4063 085F  
                                         l4071 087D                                           l3417 0EEE  
                                         l4209 0217                                           l4145 0088  
                                         l4137 007A                                           l3329 08F1  
                                         l4065 0869                                           l3443 0F41  
                                         l3451 0F23                                           l4219 0240  
                                         l3179 0609                                           l4067 0873  
                                         l3453 0F5F                                           l4229 026C  
                                         l3349 091F                                           l4261 0DC5  
                                         l3383 0EA0                                           l3359 093E  
                                         l3449 0F5A                                           l4249 0D50  
                                         l3475 0F93                                           l3467 0F65  
                                         l3387 0EA3                                           l3811 1765  
                                         l3469 0F7C                                           l3389 0EAB  
                                         l4197 01E7                                           l3661 09F6  
                                         l3821 16BC                                           ?_pad 003B  
                                         l3479 0F95                                           l4199 01FE  
                                         l3655 09DF                                           l3489 0FBE  
                                         l3665 09FA                                           l3913 0AFF  
                                         l3809 1744                                           l3833 08AB  
                                         l3675 0A2F                                           l3667 0A0A  
                                         l3907 0AC0                                           l3915 0B0B  
                                         l3819 16B0                                           l3843 08DB  
                                         l3931 06CD                                           l3677 0A22  
                                         l3861 0B92                                           l3909 0ACF  
                                         l3829 08A3                                           l3941 0713  
                                         l3863 0B97                                           l3839 08AF  
                                         l3951 06EA                                           l3689 0A56  
                                         l3873 0BAE                                           l3857 0B6A  
                                         l3793 081D                                           l3937 06DD  
                                         l3883 0BF6                                           l3875 0BBD  
                                         l3963 07C6                                           l3885 0C02  
                                         l3797 0840                                           l3973 07E1  
                                         l3895 0A8B                                           l3799 0849  
                                         l3959 07BE                                           l3969 07D1  
                                         l3899 0AB3                                           l3997 0CB4  
                                         l3989 0C78                                           STR_1 1823  
                                         STR_2 1820                                           _LATA 010C  
                                         _LATB 010D                                           _LATC 010E  
                                         u4105 0903                                           u5100 0B9F  
                                         u4135 0920                                           u3610 0527  
                                         u4315 0F3B                                           u5035 08B9  
                                         u3620 0528                                           u4325 0F4F  
                                         u3605 051C                                           u4165 0935  
                                         u5135 0BE3                                           u5055 169B  
                                         u4355 0F68                                           u5235 0AED  
                                         u4445 0FAC                                           u4285 0F2B  
                                         u3733 0598                                           u3725 057B  
                                         u5325 06C5                                           u5270 0684  
                                         u4455 0FC7                                           u4375 0F71  
                                         u4295 0F32                                           u3655 0546  
                                         u5280 0685                                           u4465 0FE0  
                                         u5355 07BC                                           u5605 010D  
                                         u5615 0146                                           u3775 05EB  
                                         u4815 0A29                                           u5375 0700  
                                         u5625 01B0                                           u5385 070E  
                                         u3955 170F                                           u5635 01C7  
                                         u3875 0622                                           u5645 01D6  
                                         u5655 01EA                                           u4855 0A43  
                                         u4775 0A03                                           u5745 022E  
                                         u5755 0249                                           u5675 01F3  
                                         u4795 0A17                                           u5765 025F  
                                         u4985 083E                                           _TMR0 0015  
                                         _WPUA 020C                                           _WPUB 020D  
                                         _WPUC 020E                                   __CFG_WRT$OFF 0000  
                                __CFG_FCMEN$ON 0000                                           abs@a 003B  
                                         _dbuf 012C                                           _main 0D38  
                                         _dtoa 0657                                           _prec 00C8  
                                         _nout 00C4                                           pad@i 003F  
                                         pad@p 003C                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           pad@w 0041  
                                         btemp 007E                                           _puts 16C3  
                                __CFG_BOREN$ON 0000                                 i1___fladd@aexp 0079  
                               i1___fladd@bexp 007A                                           start 0014  
                              ___fldiv@new_exp 0056                                  __CFG_MCLRE$ON 0000  
                                        ??_abs 003D                                          ??_pad 003E  
                      __end_of_TMR0_Initialize 167C                 ??_TMR0_DefaultInterruptHandler 0070  
                                ?_EUSART_Write 0070                 __size_of_OSCILLATOR_Initialize 0007  
                __end_of_OSCILLATOR_Initialize 15F7                            __size_of_IOCCF7_ISR 000D  
                                ___fltol@sign1 0031                                __end_of___aodiv 0C35  
                              __end_of___fladd 0657                                          ?_main 0070  
                                        ?_dtoa 0044                                __end_of___aomod 0B3E  
                              __end_of___fldiv 1000                                  __CFG_WDTE$OFF 0000  
                              __end_of___flmul 028C                                __end_of___flsub 16FD  
                              __end_of___fltol 094D                                          ?_puts 003B  
                                        i1l242 000D                                          i1l246 0012  
                                        i1l843 02D9                                          i1l847 036D  
                                        i1l864 03F3                                          i1l849 034F  
                                        i1l885 046C                                          i1l877 0453  
                                 vfpfcnvrt@fmt 004F                                          _SLRC7 1877  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TRISC 008E              __size_of_TMR0_SetInterruptHandler 0009  
                    ?_TMR0_SetInterruptHandler 0028                               __end_of_TMR0_ISR 1658  
                      __end_of_PIN_MANAGER_IOC 15EA                                          _hrInt 00CA  
                                        _flags 0064                                          _fputc 0812  
                                        _fputs 1741                                          _speed 00B4  
                                        pad@fp 0043                                          _width 00C6  
                                        _putch 15EA                                          dtoa@d 0044  
                                        dtoa@i 00DF                                          dtoa@n 00D7  
                                        dtoa@p 00D1                                          dtoa@s 00D5  
                                        dtoa@w 00D3                                          pclath 000A  
                                        puts@s 003B                                          status 0003  
                                        wtemp0 007E                             __size_ofi1___fladd 01E9  
                              i1___fladd@signs 0078                                __initialization 0016  
                                 __end_of_main 0E86                                   __end_of_dtoa 07FA  
                                 __end_of_puts 16DE                                 ??_EUSART_Write 0028  
                               __CFG_LPBOR$OFF 0000                    ?_INTERRUPT_InterruptManager 0070  
                                       ??_main 0060                                         ??_dtoa 004C  
                                       ??_puts 003D                                 __CFG_PLLEN$OFF 0000  
            _EUSART_DefaultFramingErrorHandler 0000                                         _ADCON0 009D  
                                       _ADCON1 009E                                         _ADCON2 009F  
                   _EUSART_OverrunErrorHandler 0157                                         ?_fputc 002A  
                                       ?_fputs 0032                                         _ADRESH 009C  
                                       _ADRESL 009B                                         _ANSELA 018C  
                                       ?_putch 0070                                         _ANSELB 018D  
                                       _ANSELC 018E                   ??_IOCCF7_SetInterruptHandler 002A  
                                       _BORCON 0116                                         _RC1REG 0199  
                                       _RC1STA 019D                                         _RB7PPS 0E9F  
                                       _ODCONA 028C                                         _ODCONB 028D  
                                       _ODCONC 028E                                         i1l2801 0424  
                                       i1l2805 0426                                         i1l2725 0358  
                                       i1l2717 031F                                         i1l2653 02A6  
                                       i1l2823 0463                                         i1l2751 038E  
                                       i1l2743 037B                                         i1l2727 035A  
                                       i1l2735 0369                                         i1l2753 0390  
                                       i1l2761 03A0                                         i1l2681 02D1  
                                       i1l2657 02A9                                         i1l2827 0467  
                                       i1l2771 03EB                                         i1l2659 02B1  
                                       i1l2677 02CE                                         i1l2687 02E3  
                                       i1l2847 17C3                                         i1l2793 0419  
                                       i1l2787 0412                                         i1l2779 0405  
                                       i1l2795 041B                                         i1l2989 1646  
                                       u320_23 03B3                                         u312_25 035F  
                                       u307_25 0333                                         u308_20 033D  
                                       u324_25 0406                                         u309_20 033E  
                                       u334_25 043E                                         u319_25 0395  
                                       _OSCCON 0099                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _TX1REG 019A  
                                       _TX1STA 019E                                         u507lld 0B67  
                                 ?_resetCursor 0070                                         u518lld 0A88  
                             __end_of___xxtofl 0A5F                                 __CFG_PWRTE$OFF 0000  
                                 vfprintf@cfmt 00E7                                         ___flge 094D  
                                    ??___aodiv 0038                                      ??___fladd 0030  
                                    ??___aomod 0038                                      ??___fldiv 004C  
                               __CFG_STVREN$ON 0000                                      ??___flmul 00D6  
                                    ??___flsub 0044                                      ??___fltol 002C  
                                       _hrDisp 1800                               ?_TMR0_Initialize 0070  
                                       _rpmInt 0120                                         _rpmVal 00A4  
                                       _printf 167C                                         pad@buf 003B  
                                       dtoa@fp 00D0                                         _strlen 16AA  
                            __end_ofi1___fladd 0475            __size_of_IOCCF7_SetInterruptHandler 0009  
                                       fputc@c 002A                                         fputs@c 0038  
                                       fputs@i 0039                                         fputs@s 0032  
                           __size_of__Umul8_16 0020                               __end_of_timerISR 0812  
                             __end_of_vfprintf 1797       TMR0_SetInterruptHandler@InterruptHandler 0028  
   IOCCF7_SetInterruptHandler@InterruptHandler 0028                               ?_PIN_MANAGER_IOC 0070  
                                 ??_IOCCF7_ISR 007C                                     ___flge@ff1 0028  
                                   ___flge@ff2 002C                                   ___xxtofl@arg 0032  
                         __end_of_distanceDisp 1818                                   ___xxtofl@exp 0031  
                            _SYSTEM_Initialize 1658                                   ___xxtofl@val 0028  
                      __end_of__initialization 002F                                     _adcCounter 00BC  
                           ?_SYSTEM_Initialize 0070                                     ___fltol@f1 0028  
                               __pcstackCOMMON 0070                            ??_SYSTEM_Initialize 002B  
                                    ?_TMR0_ISR 0070                                  __end_of_fputc 0852  
                                __end_of_fputs 176A                                  __end_of_putch 15F0  
                           __end_of_IOCCF7_ISR 1649                                 _OPTION_REGbits 0095  
              ??_EUSART_SetOverrunErrorHandler 002A                                        ??_fputc 002D  
                    __end_of_SYSTEM_Initialize 1667                                        ??_fputs 0035  
                                      ??_putch 0029                                     __pbssBANK0 0060  
                                   __pbssBANK1 00A0                                     __pbssBANK2 0120  
                         __end_of_EUSART_Write 1607                              __end_of__Umul8_16 171D  
                                   __pmaintext 0D38                                        ?___flge 0028  
             __end_of_TMR0_SetInterruptHandler 163C                                     ??_TMR0_ISR 0070  
                              __CFG_PPS1WAY$ON 0000                             __size_of_setCursor 0042  
                                   __pintentry 0004                                        ?_printf 014C  
                      __size_of_ADC_Initialize 0008                                        ?_strlen 0028  
                           __size_of_speedCalc 0031                                __CFG_WDTCCS$SWC 0000  
                                      _INLVLC7 1C77                                      ?___xxtofl 0028  
                           __size_of_vfpfcnvrt 0103                                        _OSCTUNE 0098  
                                      _SLRCONA 030C                                        _SLRCONB 030D  
                                      _SLRCONC 030E             __end_of_IOCCF7_SetInterruptHandler 1633  
                   _IOCCF7_SetInterruptHandler 162A                       ??_EUSART_SetErrorHandler 002A  
                         __size_of_resetCursor 0008                                      ?_timerISR 0070  
                              __size_of___flge 007C                                        ___aodiv 0B3E  
                                      ___fladd 0475                                        ___aomod 0A5F  
                                      ___fldiv 0E86                                        ___flmul 0033  
                                      ___flsub 16DE                                        ___fltol 08E7  
                                    ?_vfprintf 00E1                                        _endTime 00AC  
                                      __ptext1 0852                                        __ptext2 1607  
                                      __ptext3 16C3                                        __ptext4 167C  
                                      __ptext5 176A                                        __ptext6 0C35  
                                      __ptext7 0657                                        __ptext8 0894  
                                      __ptext9 16AA                                        _distInt 00CC  
                              __size_of_printf 0015                                __size_of_strlen 0019  
                                      _counter 00C0                          _OSCILLATOR_Initialize 15F0  
                                 __size_of_abs 0019                                   __size_of_pad 0053  
                                   ??___xxtofl 002C                       ??_PIN_MANAGER_Initialize 002A  
                                    _IOCCFbits 0399                                      _IOCCNbits 0398  
                                    _IOCCPbits 0397                     __size_of_SYSTEM_Initialize 000F  
                                      clrloop0 07FB                           end_of_initialization 002F  
                            __end_of_setCursor 0894          __end_of_EUSART_SetOverrunErrorHandler 162A  
       __size_of_EUSART_SetOverrunErrorHandler 0009                  _EUSART_SetOverrunErrorHandler 1621  
                                      fputc@fp 002C                                        fputs@fp 0034  
                            __end_of_speedCalc 17C8                              __end_of_speedDisp 1820  
                            _EUSART_Initialize 171D                             ?_EUSART_Initialize 0070  
                            __end_of_vfpfcnvrt 0D38                                     ??_timerISR 0070  
                                   _timePassed 00A8                                     ??_vfprintf 00E4  
                                      strlen@a 002B                                        strlen@s 002C  
                          ??_EUSART_Initialize 002A                                   _distanceDisp 180D  
                     _TMR0_SetInterruptHandler 1633                                    ___fladd@grs 003B  
                             __CFG_FOSC$INTOSC 0000                                  ___xxtofl@sign 0030  
                        __size_of_EUSART_Write 0008                                      i1___fladd 028C  
                                  ___fldiv@grs 0058                                    ___fldiv@rem 0051  
              __size_of_EUSART_SetErrorHandler 0009                                    ___flmul@grs 00DD  
                    __end_of_EUSART_Initialize 1741                                 __end_of___flge 09C9  
                   _EUSART_DefaultErrorHandler 0000                                    vfpfcnvrt@ap 0050  
                                  vfpfcnvrt@fp 005F                                    vfpfcnvrt@ll 0056  
                                  vfpfcnvrt@vp 005E                                 __end_of_hrDisp 180D  
                                 _EUSART_Write 15FF                              __size_of_TMR0_ISR 000F  
                               _ADC_Initialize 15F7                         ?_OSCILLATOR_Initialize 0070  
                               __end_of_printf 1691                                 __end_of_strlen 16C3  
                          start_initialization 0016                       __size_of_TMR0_Initialize 0015  
              __size_of_PIN_MANAGER_Initialize 0038                                    __end_of_abs 16AA  
                                   ?i1___fladd 0070                                    __end_of_pad 08E7  
                                  putch@txData 0029                       __size_of_PIN_MANAGER_IOC 0006  
               ?_EUSART_SetOverrunErrorHandler 0028                                    vfprintf@fmt 00E1  
                   _EUSART_FramingErrorHandler 0159                                       ??___flge 0030  
                       _EUSART_SetErrorHandler 160F                         __end_of_ADC_Initialize 15FF  
                                    __Umul8_16 16FD                                       ??_printf 00E9  
                                     ??_strlen 002A                                      ___fladd@a 002C  
                                    ___fladd@b 0028                                      ___fldiv@a 0044  
                                    ___fldiv@b 0048                                      ___flmul@a 00D2  
                                    ___flmul@b 00CE                                    __pbssCOMMON 007C  
                                    ___flsub@a 003C                                      ___flsub@b 0040  
                                    ___latbits 0002                                  __pcstackBANK0 0020  
                                __pcstackBANK1 00CE                                  __pcstackBANK2 014C  
                             ___aodiv@dividend 0030                              __size_of___xxtofl 0096  
                  ?_IOCCF7_SetInterruptHandler 0028                     __size_of_EUSART_Initialize 0024  
                        _TMR0_InterruptHandler 00EA                                      __pnvBANK0 0067  
                                    __pnvBANK1 00EA                                      __pnvBANK2 0155  
                       _PIN_MANAGER_Initialize 17C8                                      _hallCount 0060  
                                     ?___aodiv 0028                                       ?___fladd 0028  
                                     ?___aomod 0028                                       ?___fldiv 0044  
                             ___aodiv@quotient 003B                                       ?___flmul 00CE  
                                     ?___flsub 003C                                       ?___fltol 0028  
                                    _heartRate 0124                                     ?__Umul8_16 0028  
                                   setCursor@a 002C                                     setCursor@b 0029  
                              ?_ADC_Initialize 0070                              __size_of_timerISR 0012  
                 ??_INTERRUPT_InterruptManager 007C                              __size_of_vfprintf 002D  
                                     _BAUD1CON 019F                                    ??i1___fladd 0020  
                               __size_of_fputc 0040                                 __size_of_fputs 0029  
                               __size_of_putch 0006                              ??_TMR0_Initialize 002A  
                                ??_resetCursor 0040         EUSART_SetErrorHandler@interruptHandler 0028  
                                    _setCursor 0852                                      clear_ram0 07FA  
                            _eusartRxLastError 0066            __size_of_INTERRUPT_InterruptManager 0010  
                   ??_TMR0_SetInterruptHandler 002A                                       _PIR1bits 0010  
              ??_EUSART_SetFramingErrorHandler 002A                                      _puts$1101 003F  
                                    _rpmValInt 00A0                                      _speedCalc 1797  
                                    _speedDisp 1818               ??_IOCCF7_DefaultInterruptHandler 0070  
              ?_IOCCF7_DefaultInterruptHandler 0070                           __CFG_WDTCPS$WDTCPS1F 0000  
                                     _TMR0_ISR 1649              _EUSART_DefaultOverrunErrorHandler 0000  
                            ??_PIN_MANAGER_IOC 007C                                      _vfpfcnvrt 0C35  
                                   _ADCON0bits 009D                                      _startTime 00B0  
                                   ?_setCursor 0029                                     vfprintf@ap 00E3  
                                   vfprintf@fp 00E6                            __end_of_resetCursor 160F  
                                   ?_speedCalc 0070                        ??_OSCILLATOR_Initialize 0028  
                                  ??__Umul8_16 002A                            _EUSART_ErrorHandler 0155  
                             __size_of___aodiv 00F7                               __size_of___fladd 01E2  
                             __size_of___aomod 00DF                               __size_of___fldiv 017A  
                             __size_of___flmul 0259                               __size_of___flsub 001F  
                             __size_of___fltol 0066                                     ?_vfpfcnvrt 004F  
                              ___aodiv@divisor 0028                                ___aodiv@counter 0039  
                                     ___xxtofl 09C9                                       _dtoa$755 00CE  
                                     __ptext10 1741                                       __ptext11 0812  
                                     __ptext20 0475                                       __ptext12 15EA  
                                     __ptext21 0033                                       __ptext13 15FF  
                                     __ptext30 15F0                                       __ptext22 16FD  
                                     __ptext14 1691                                       __ptext31 171D  
                                     __ptext23 094D                                       __ptext15 0A5F  
                                     __ptext40 15E4                                       __ptext32 1621  
                                     __ptext24 0E86                                       __ptext16 0B3E  
                                     __ptext41 163C                                       __ptext33 1618  
                                     __ptext25 1658                                       __ptext17 09C9  
                                     __ptext42 0002                                       __ptext34 160F  
                                     __ptext26 1667                                       __ptext18 08E7  
                                     __ptext43 1797                                       __ptext35 15F7  
                                     __ptext27 1633                                       __ptext19 16DE  
                                     __ptext44 028C                                       __ptext28 17C8  
                                     __ptext37 1649                                       __ptext29 162A  
                                     __ptext38 0003                                       __ptext39 0800  
                                     _distance 0128                                     _IOCCF7_ISR 163C  
                                __size_of_main 014E                                  __size_of_dtoa 01A3  
                                __size_of_puts 001B           __end_of_TMR0_DefaultInterruptHandler 0004  
        __size_of_TMR0_DefaultInterruptHandler 0001                   _TMR0_DefaultInterruptHandler 0003  
                         __CFG_WDTCWS$WDTCWSSW 0000                        ?_EUSART_SetErrorHandler 0028  
                                   _RC1STAbits 019D  EUSART_SetOverrunErrorHandler@interruptHandler 0028  
                                     _timerISR 0800                                       _speedInt 007C  
                                     int$flags 007E                                       _vfprintf 176A  
           __end_of_INTERRUPT_InterruptManager 0014                     _INTERRUPT_InterruptManager 0004  
                                    printf@fmt 014C          __end_of_EUSART_SetFramingErrorHandler 1621  
       __size_of_EUSART_SetFramingErrorHandler 0009                  _EUSART_SetFramingErrorHandler 1618  
                             ___aomod@dividend 0030                                     _INTCONbits 000B  
                                     intlevel1 0000                        ?_PIN_MANAGER_Initialize 0070  
                                  _resetCursor 1607                 __end_of_EUSART_SetErrorHandler 1618  
                                  ??_setCursor 002A                              __CFG_CLKOUTEN$OFF 0000  
                             ??_ADC_Initialize 0028                  ?_TMR0_DefaultInterruptHandler 0070  
                                  ??_speedCalc 007C                                       printf@ap 0154  
EUSART_SetFramingErrorHandler@interruptHandler 0028                                ___aomod@divisor 0028  
                                  ??_vfpfcnvrt 0051                                ___aomod@counter 0039  
                                __pstringtext1 1800                                  __pstringtext2 180D  
                                __pstringtext3 1818                                  __pstringtext4 1820  
                                __pstringtext5 1823                                  __pstringtext6 0000  
                       __Umul8_16@multiplicand 0028                                     _OPTION_REG 0095  
                              _TMR0_Initialize 1667                                     _TX1STAbits 019E  
                                ___fladd@signs 0038                             EUSART_Write@txData 0028  
                                 ___aodiv@sign 003A                 __end_of_PIN_MANAGER_Initialize 1800  
                                  ?_IOCCF7_ISR 0070                                   ___fladd@aexp 0039  
                                 ___fladd@bexp 003A                                _PIN_MANAGER_IOC 15E4  
                         __Umul8_16@multiplier 0030                                   ___aomod@sign 003A  
                      _IOCCF7_InterruptHandler 00EC                              __Umul8_16@product 002C  
