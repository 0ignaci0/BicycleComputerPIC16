

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu Apr 11 14:05:56 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1619
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	idataBANK3,global,class=CODE,delta=2
     7                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
     8                           	psect	stringtext1,global,class=STRCODE,delta=2
     9                           	psect	stringtext2,global,class=STRCODE,delta=2
    10                           	psect	stringtext3,global,class=STRCODE,delta=2
    11                           	psect	stringtext4,global,class=STRCODE,delta=2
    12                           	psect	stringtext5,global,class=STRCODE,delta=2
    13                           	psect	stringtext6,global,class=STRCODE,delta=2
    14                           	psect	cinit,global,class=CODE,merge=1,delta=2
    15                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    18                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    19                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    20                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    21                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    22                           	psect	inittext,global,class=CODE,delta=2
    23                           	psect	clrtext,global,class=CODE,delta=2
    24                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    25                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    26                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    27                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    28                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    29                           	psect	text1,local,class=CODE,merge=1,delta=2
    30                           	psect	text2,local,class=CODE,merge=1,delta=2
    31                           	psect	text3,local,class=CODE,merge=1,delta=2
    32                           	psect	text4,local,class=CODE,merge=1,delta=2
    33                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text7,local,class=CODE,merge=1,delta=2
    36                           	psect	text8,local,class=CODE,merge=1,delta=2
    37                           	psect	text9,local,class=CODE,merge=1,delta=2
    38                           	psect	text10,local,class=CODE,merge=1,delta=2
    39                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text14,local,class=CODE,merge=1,delta=2
    43                           	psect	text15,local,class=CODE,merge=1,delta=2
    44                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    46                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    47                           	psect	text19,local,class=CODE,merge=1,delta=2
    48                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    49                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    50                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    51                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    52                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    53                           	psect	text25,local,class=CODE,merge=1,delta=2
    54                           	psect	text26,local,class=CODE,merge=1,delta=2
    55                           	psect	text27,local,class=CODE,merge=1,delta=2
    56                           	psect	text28,local,class=CODE,merge=1,delta=2
    57                           	psect	text29,local,class=CODE,merge=1,delta=2
    58                           	psect	text30,local,class=CODE,merge=1,delta=2
    59                           	psect	text31,local,class=CODE,merge=1,delta=2
    60                           	psect	text32,local,class=CODE,merge=1,delta=2
    61                           	psect	text33,local,class=CODE,merge=1,delta=2
    62                           	psect	text34,local,class=CODE,merge=1,delta=2
    63                           	psect	text35,local,class=CODE,merge=1,delta=2
    64                           	psect	text36,local,class=CODE,merge=1,delta=2
    65                           	psect	text37,local,class=CODE,merge=1,delta=2
    66                           	psect	intentry,global,class=CODE,delta=2
    67                           	psect	text39,local,class=CODE,merge=1,delta=2
    68                           	psect	text40,local,class=CODE,merge=1,delta=2
    69                           	psect	text41,local,class=CODE,merge=1,delta=2
    70                           	psect	text42,local,class=CODE,merge=1,delta=2,group=1
    71                           	psect	text43,local,class=CODE,merge=1,delta=2
    72                           	psect	text44,local,class=CODE,merge=1,delta=2
    73                           	psect	text45,local,class=CODE,merge=1,delta=2
    74                           	psect	text46,local,class=CODE,merge=1,delta=2
    75                           	psect	text47,local,class=CODE,merge=1,delta=2
    76                           	psect	text48,local,class=CODE,merge=1,delta=2,group=1
    77                           	psect	text49,local,class=CODE,merge=1,delta=2,group=1
    78                           	psect	text50,local,class=CODE,merge=1,delta=2,group=1
    79                           	psect	text51,local,class=CODE,merge=1,delta=2,group=1
    80                           	psect	text52,local,class=CODE,merge=1,delta=2,group=1
    81                           	dabs	1,0x7E,2
    82  0000                     
    83                           ; Version 2.05
    84                           ; Generated 20/12/2018 GMT
    85                           ; 
    86                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    87                           ; All rights reserved.
    88                           ; 
    89                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    90                           ; 
    91                           ; Redistribution and use in source and binary forms, with or without modification, are
    92                           ; permitted provided that the following conditions are met:
    93                           ; 
    94                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    95                           ;        conditions and the following disclaimer.
    96                           ; 
    97                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    98                           ;        of conditions and the following disclaimer in the documentation and/or other
    99                           ;        materials provided with the distribution.
   100                           ; 
   101                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   102                           ;        software without specific prior written permission.
   103                           ; 
   104                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   105                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   106                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   107                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   108                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   109                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   110                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   111                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   112                           ; 
   113                           ; 
   114                           ; Code-generator required, PIC16F1619 Definitions
   115                           ; 
   116                           ; SFR Addresses
   117  0000                     	;# 
   118  0001                     	;# 
   119  0002                     	;# 
   120  0003                     	;# 
   121  0004                     	;# 
   122  0005                     	;# 
   123  0006                     	;# 
   124  0007                     	;# 
   125  0008                     	;# 
   126  0009                     	;# 
   127  000A                     	;# 
   128  000B                     	;# 
   129  000C                     	;# 
   130  000D                     	;# 
   131  000E                     	;# 
   132  0010                     	;# 
   133  0011                     	;# 
   134  0012                     	;# 
   135  0013                     	;# 
   136  0014                     	;# 
   137  0015                     	;# 
   138  0016                     	;# 
   139  0016                     	;# 
   140  0017                     	;# 
   141  0018                     	;# 
   142  0019                     	;# 
   143  001A                     	;# 
   144  001A                     	;# 
   145  001B                     	;# 
   146  001B                     	;# 
   147  001C                     	;# 
   148  001D                     	;# 
   149  001E                     	;# 
   150  001F                     	;# 
   151  008C                     	;# 
   152  008D                     	;# 
   153  008E                     	;# 
   154  0090                     	;# 
   155  0091                     	;# 
   156  0092                     	;# 
   157  0093                     	;# 
   158  0094                     	;# 
   159  0095                     	;# 
   160  0096                     	;# 
   161  0098                     	;# 
   162  0099                     	;# 
   163  009A                     	;# 
   164  009B                     	;# 
   165  009B                     	;# 
   166  009C                     	;# 
   167  009D                     	;# 
   168  009E                     	;# 
   169  009F                     	;# 
   170  010C                     	;# 
   171  010D                     	;# 
   172  010E                     	;# 
   173  0111                     	;# 
   174  0112                     	;# 
   175  0113                     	;# 
   176  0114                     	;# 
   177  0115                     	;# 
   178  0116                     	;# 
   179  0117                     	;# 
   180  0118                     	;# 
   181  0119                     	;# 
   182  011C                     	;# 
   183  018C                     	;# 
   184  018D                     	;# 
   185  018E                     	;# 
   186  0191                     	;# 
   187  0191                     	;# 
   188  0192                     	;# 
   189  0193                     	;# 
   190  0193                     	;# 
   191  0194                     	;# 
   192  0195                     	;# 
   193  0196                     	;# 
   194  0197                     	;# 
   195  0199                     	;# 
   196  0199                     	;# 
   197  0199                     	;# 
   198  019A                     	;# 
   199  019A                     	;# 
   200  019A                     	;# 
   201  019B                     	;# 
   202  019B                     	;# 
   203  019B                     	;# 
   204  019B                     	;# 
   205  019B                     	;# 
   206  019C                     	;# 
   207  019C                     	;# 
   208  019C                     	;# 
   209  019D                     	;# 
   210  019D                     	;# 
   211  019D                     	;# 
   212  019E                     	;# 
   213  019E                     	;# 
   214  019E                     	;# 
   215  019F                     	;# 
   216  019F                     	;# 
   217  019F                     	;# 
   218  019F                     	;# 
   219  019F                     	;# 
   220  020C                     	;# 
   221  020D                     	;# 
   222  020E                     	;# 
   223  0211                     	;# 
   224  0211                     	;# 
   225  0212                     	;# 
   226  0212                     	;# 
   227  0213                     	;# 
   228  0213                     	;# 
   229  0214                     	;# 
   230  0214                     	;# 
   231  0215                     	;# 
   232  0215                     	;# 
   233  0215                     	;# 
   234  0215                     	;# 
   235  0216                     	;# 
   236  0216                     	;# 
   237  0217                     	;# 
   238  0217                     	;# 
   239  028C                     	;# 
   240  028D                     	;# 
   241  028E                     	;# 
   242  0291                     	;# 
   243  0291                     	;# 
   244  0292                     	;# 
   245  0293                     	;# 
   246  0294                     	;# 
   247  0298                     	;# 
   248  0298                     	;# 
   249  0299                     	;# 
   250  029A                     	;# 
   251  029B                     	;# 
   252  029E                     	;# 
   253  030C                     	;# 
   254  030D                     	;# 
   255  030E                     	;# 
   256  038C                     	;# 
   257  038D                     	;# 
   258  038E                     	;# 
   259  0391                     	;# 
   260  0392                     	;# 
   261  0393                     	;# 
   262  0394                     	;# 
   263  0395                     	;# 
   264  0396                     	;# 
   265  0397                     	;# 
   266  0398                     	;# 
   267  0399                     	;# 
   268  040E                     	;# 
   269  0413                     	;# 
   270  0413                     	;# 
   271  0414                     	;# 
   272  0414                     	;# 
   273  0415                     	;# 
   274  0416                     	;# 
   275  0417                     	;# 
   276  0418                     	;# 
   277  041A                     	;# 
   278  041A                     	;# 
   279  041B                     	;# 
   280  041B                     	;# 
   281  041C                     	;# 
   282  041D                     	;# 
   283  041E                     	;# 
   284  041F                     	;# 
   285  0493                     	;# 
   286  0494                     	;# 
   287  0495                     	;# 
   288  0496                     	;# 
   289  049A                     	;# 
   290  049B                     	;# 
   291  049C                     	;# 
   292  049D                     	;# 
   293  058C                     	;# 
   294  058C                     	;# 
   295  058D                     	;# 
   296  058E                     	;# 
   297  058E                     	;# 
   298  058F                     	;# 
   299  0590                     	;# 
   300  0590                     	;# 
   301  0591                     	;# 
   302  0592                     	;# 
   303  0592                     	;# 
   304  0593                     	;# 
   305  0594                     	;# 
   306  0594                     	;# 
   307  0595                     	;# 
   308  0596                     	;# 
   309  0596                     	;# 
   310  0597                     	;# 
   311  0598                     	;# 
   312  0599                     	;# 
   313  059A                     	;# 
   314  059B                     	;# 
   315  059B                     	;# 
   316  059C                     	;# 
   317  059D                     	;# 
   318  060C                     	;# 
   319  060C                     	;# 
   320  060D                     	;# 
   321  060E                     	;# 
   322  060F                     	;# 
   323  060F                     	;# 
   324  0610                     	;# 
   325  0611                     	;# 
   326  0612                     	;# 
   327  0613                     	;# 
   328  0614                     	;# 
   329  0617                     	;# 
   330  0617                     	;# 
   331  0618                     	;# 
   332  0619                     	;# 
   333  061A                     	;# 
   334  061A                     	;# 
   335  061B                     	;# 
   336  061C                     	;# 
   337  0691                     	;# 
   338  0692                     	;# 
   339  0693                     	;# 
   340  0694                     	;# 
   341  0695                     	;# 
   342  0696                     	;# 
   343  0697                     	;# 
   344  0699                     	;# 
   345  069A                     	;# 
   346  0711                     	;# 
   347  0712                     	;# 
   348  0713                     	;# 
   349  0714                     	;# 
   350  0715                     	;# 
   351  0718                     	;# 
   352  0718                     	;# 
   353  0719                     	;# 
   354  071A                     	;# 
   355  071A                     	;# 
   356  071B                     	;# 
   357  071C                     	;# 
   358  071D                     	;# 
   359  0791                     	;# 
   360  0791                     	;# 
   361  0792                     	;# 
   362  0793                     	;# 
   363  0793                     	;# 
   364  0794                     	;# 
   365  0795                     	;# 
   366  0795                     	;# 
   367  0796                     	;# 
   368  0797                     	;# 
   369  0797                     	;# 
   370  0798                     	;# 
   371  0799                     	;# 
   372  079A                     	;# 
   373  080C                     	;# 
   374  080C                     	;# 
   375  080D                     	;# 
   376  080E                     	;# 
   377  080E                     	;# 
   378  080F                     	;# 
   379  0810                     	;# 
   380  0810                     	;# 
   381  0811                     	;# 
   382  0812                     	;# 
   383  0812                     	;# 
   384  0813                     	;# 
   385  0814                     	;# 
   386  0815                     	;# 
   387  0816                     	;# 
   388  0817                     	;# 
   389  0818                     	;# 
   390  0819                     	;# 
   391  081A                     	;# 
   392  081A                     	;# 
   393  081B                     	;# 
   394  081C                     	;# 
   395  081C                     	;# 
   396  081D                     	;# 
   397  088C                     	;# 
   398  088D                     	;# 
   399  088E                     	;# 
   400  088F                     	;# 
   401  088F                     	;# 
   402  0890                     	;# 
   403  0891                     	;# 
   404  0892                     	;# 
   405  0893                     	;# 
   406  0893                     	;# 
   407  0894                     	;# 
   408  0895                     	;# 
   409  0896                     	;# 
   410  0897                     	;# 
   411  0897                     	;# 
   412  0898                     	;# 
   413  0899                     	;# 
   414  0D8C                     	;# 
   415  0D8C                     	;# 
   416  0D8D                     	;# 
   417  0D8E                     	;# 
   418  0D8F                     	;# 
   419  0D8F                     	;# 
   420  0D90                     	;# 
   421  0D91                     	;# 
   422  0D92                     	;# 
   423  0D92                     	;# 
   424  0D93                     	;# 
   425  0D94                     	;# 
   426  0D95                     	;# 
   427  0D95                     	;# 
   428  0D96                     	;# 
   429  0D97                     	;# 
   430  0D98                     	;# 
   431  0D99                     	;# 
   432  0D9A                     	;# 
   433  0D9B                     	;# 
   434  0D9C                     	;# 
   435  0D9D                     	;# 
   436  0D9E                     	;# 
   437  0D9E                     	;# 
   438  0D9F                     	;# 
   439  0DA0                     	;# 
   440  0DA1                     	;# 
   441  0DA1                     	;# 
   442  0DA2                     	;# 
   443  0DA3                     	;# 
   444  0DA4                     	;# 
   445  0DA4                     	;# 
   446  0DA5                     	;# 
   447  0DA6                     	;# 
   448  0DA7                     	;# 
   449  0DA7                     	;# 
   450  0DA8                     	;# 
   451  0DA9                     	;# 
   452  0DAA                     	;# 
   453  0DAB                     	;# 
   454  0DAC                     	;# 
   455  0DAD                     	;# 
   456  0DAE                     	;# 
   457  0DAF                     	;# 
   458  0E0F                     	;# 
   459  0E10                     	;# 
   460  0E11                     	;# 
   461  0E12                     	;# 
   462  0E13                     	;# 
   463  0E14                     	;# 
   464  0E15                     	;# 
   465  0E16                     	;# 
   466  0E17                     	;# 
   467  0E18                     	;# 
   468  0E19                     	;# 
   469  0E1A                     	;# 
   470  0E1B                     	;# 
   471  0E1C                     	;# 
   472  0E1D                     	;# 
   473  0E1E                     	;# 
   474  0E1F                     	;# 
   475  0E20                     	;# 
   476  0E21                     	;# 
   477  0E22                     	;# 
   478  0E23                     	;# 
   479  0E24                     	;# 
   480  0E25                     	;# 
   481  0E26                     	;# 
   482  0E27                     	;# 
   483  0E28                     	;# 
   484  0E29                     	;# 
   485  0E2A                     	;# 
   486  0E2B                     	;# 
   487  0E2C                     	;# 
   488  0E2D                     	;# 
   489  0E2E                     	;# 
   490  0E90                     	;# 
   491  0E91                     	;# 
   492  0E92                     	;# 
   493  0E94                     	;# 
   494  0E95                     	;# 
   495  0E9C                     	;# 
   496  0E9D                     	;# 
   497  0E9E                     	;# 
   498  0E9F                     	;# 
   499  0EA0                     	;# 
   500  0EA1                     	;# 
   501  0EA2                     	;# 
   502  0EA3                     	;# 
   503  0EA4                     	;# 
   504  0EA5                     	;# 
   505  0EA6                     	;# 
   506  0EA7                     	;# 
   507  0F0F                     	;# 
   508  0F10                     	;# 
   509  0F11                     	;# 
   510  0F12                     	;# 
   511  0F13                     	;# 
   512  0F14                     	;# 
   513  0F15                     	;# 
   514  0F16                     	;# 
   515  0F17                     	;# 
   516  0F18                     	;# 
   517  0F19                     	;# 
   518  0F1A                     	;# 
   519  0F1B                     	;# 
   520  0F1C                     	;# 
   521  0F1D                     	;# 
   522  0F1E                     	;# 
   523  0F1F                     	;# 
   524  0F20                     	;# 
   525  0F21                     	;# 
   526  0F22                     	;# 
   527  0F23                     	;# 
   528  0F24                     	;# 
   529  0F25                     	;# 
   530  0F26                     	;# 
   531  0F27                     	;# 
   532  0F28                     	;# 
   533  0F29                     	;# 
   534  0F2A                     	;# 
   535  0F2B                     	;# 
   536  0F2C                     	;# 
   537  0F2D                     	;# 
   538  0F2E                     	;# 
   539  0F2F                     	;# 
   540  0F30                     	;# 
   541  0F31                     	;# 
   542  0F32                     	;# 
   543  0F33                     	;# 
   544  0F34                     	;# 
   545  0F35                     	;# 
   546  0F36                     	;# 
   547  0F37                     	;# 
   548  0FE4                     	;# 
   549  0FE5                     	;# 
   550  0FE6                     	;# 
   551  0FE7                     	;# 
   552  0FE8                     	;# 
   553  0FE9                     	;# 
   554  0FEA                     	;# 
   555  0FEB                     	;# 
   556  0FED                     	;# 
   557  0FEE                     	;# 
   558  0FEF                     	;# 
   559  0000                     	;# 
   560  0001                     	;# 
   561  0002                     	;# 
   562  0003                     	;# 
   563  0004                     	;# 
   564  0005                     	;# 
   565  0006                     	;# 
   566  0007                     	;# 
   567  0008                     	;# 
   568  0009                     	;# 
   569  000A                     	;# 
   570  000B                     	;# 
   571  000C                     	;# 
   572  000D                     	;# 
   573  000E                     	;# 
   574  0010                     	;# 
   575  0011                     	;# 
   576  0012                     	;# 
   577  0013                     	;# 
   578  0014                     	;# 
   579  0015                     	;# 
   580  0016                     	;# 
   581  0016                     	;# 
   582  0017                     	;# 
   583  0018                     	;# 
   584  0019                     	;# 
   585  001A                     	;# 
   586  001A                     	;# 
   587  001B                     	;# 
   588  001B                     	;# 
   589  001C                     	;# 
   590  001D                     	;# 
   591  001E                     	;# 
   592  001F                     	;# 
   593  008C                     	;# 
   594  008D                     	;# 
   595  008E                     	;# 
   596  0090                     	;# 
   597  0091                     	;# 
   598  0092                     	;# 
   599  0093                     	;# 
   600  0094                     	;# 
   601  0095                     	;# 
   602  0096                     	;# 
   603  0098                     	;# 
   604  0099                     	;# 
   605  009A                     	;# 
   606  009B                     	;# 
   607  009B                     	;# 
   608  009C                     	;# 
   609  009D                     	;# 
   610  009E                     	;# 
   611  009F                     	;# 
   612  010C                     	;# 
   613  010D                     	;# 
   614  010E                     	;# 
   615  0111                     	;# 
   616  0112                     	;# 
   617  0113                     	;# 
   618  0114                     	;# 
   619  0115                     	;# 
   620  0116                     	;# 
   621  0117                     	;# 
   622  0118                     	;# 
   623  0119                     	;# 
   624  011C                     	;# 
   625  018C                     	;# 
   626  018D                     	;# 
   627  018E                     	;# 
   628  0191                     	;# 
   629  0191                     	;# 
   630  0192                     	;# 
   631  0193                     	;# 
   632  0193                     	;# 
   633  0194                     	;# 
   634  0195                     	;# 
   635  0196                     	;# 
   636  0197                     	;# 
   637  0199                     	;# 
   638  0199                     	;# 
   639  0199                     	;# 
   640  019A                     	;# 
   641  019A                     	;# 
   642  019A                     	;# 
   643  019B                     	;# 
   644  019B                     	;# 
   645  019B                     	;# 
   646  019B                     	;# 
   647  019B                     	;# 
   648  019C                     	;# 
   649  019C                     	;# 
   650  019C                     	;# 
   651  019D                     	;# 
   652  019D                     	;# 
   653  019D                     	;# 
   654  019E                     	;# 
   655  019E                     	;# 
   656  019E                     	;# 
   657  019F                     	;# 
   658  019F                     	;# 
   659  019F                     	;# 
   660  019F                     	;# 
   661  019F                     	;# 
   662  020C                     	;# 
   663  020D                     	;# 
   664  020E                     	;# 
   665  0211                     	;# 
   666  0211                     	;# 
   667  0212                     	;# 
   668  0212                     	;# 
   669  0213                     	;# 
   670  0213                     	;# 
   671  0214                     	;# 
   672  0214                     	;# 
   673  0215                     	;# 
   674  0215                     	;# 
   675  0215                     	;# 
   676  0215                     	;# 
   677  0216                     	;# 
   678  0216                     	;# 
   679  0217                     	;# 
   680  0217                     	;# 
   681  028C                     	;# 
   682  028D                     	;# 
   683  028E                     	;# 
   684  0291                     	;# 
   685  0291                     	;# 
   686  0292                     	;# 
   687  0293                     	;# 
   688  0294                     	;# 
   689  0298                     	;# 
   690  0298                     	;# 
   691  0299                     	;# 
   692  029A                     	;# 
   693  029B                     	;# 
   694  029E                     	;# 
   695  030C                     	;# 
   696  030D                     	;# 
   697  030E                     	;# 
   698  038C                     	;# 
   699  038D                     	;# 
   700  038E                     	;# 
   701  0391                     	;# 
   702  0392                     	;# 
   703  0393                     	;# 
   704  0394                     	;# 
   705  0395                     	;# 
   706  0396                     	;# 
   707  0397                     	;# 
   708  0398                     	;# 
   709  0399                     	;# 
   710  040E                     	;# 
   711  0413                     	;# 
   712  0413                     	;# 
   713  0414                     	;# 
   714  0414                     	;# 
   715  0415                     	;# 
   716  0416                     	;# 
   717  0417                     	;# 
   718  0418                     	;# 
   719  041A                     	;# 
   720  041A                     	;# 
   721  041B                     	;# 
   722  041B                     	;# 
   723  041C                     	;# 
   724  041D                     	;# 
   725  041E                     	;# 
   726  041F                     	;# 
   727  0493                     	;# 
   728  0494                     	;# 
   729  0495                     	;# 
   730  0496                     	;# 
   731  049A                     	;# 
   732  049B                     	;# 
   733  049C                     	;# 
   734  049D                     	;# 
   735  058C                     	;# 
   736  058C                     	;# 
   737  058D                     	;# 
   738  058E                     	;# 
   739  058E                     	;# 
   740  058F                     	;# 
   741  0590                     	;# 
   742  0590                     	;# 
   743  0591                     	;# 
   744  0592                     	;# 
   745  0592                     	;# 
   746  0593                     	;# 
   747  0594                     	;# 
   748  0594                     	;# 
   749  0595                     	;# 
   750  0596                     	;# 
   751  0596                     	;# 
   752  0597                     	;# 
   753  0598                     	;# 
   754  0599                     	;# 
   755  059A                     	;# 
   756  059B                     	;# 
   757  059B                     	;# 
   758  059C                     	;# 
   759  059D                     	;# 
   760  060C                     	;# 
   761  060C                     	;# 
   762  060D                     	;# 
   763  060E                     	;# 
   764  060F                     	;# 
   765  060F                     	;# 
   766  0610                     	;# 
   767  0611                     	;# 
   768  0612                     	;# 
   769  0613                     	;# 
   770  0614                     	;# 
   771  0617                     	;# 
   772  0617                     	;# 
   773  0618                     	;# 
   774  0619                     	;# 
   775  061A                     	;# 
   776  061A                     	;# 
   777  061B                     	;# 
   778  061C                     	;# 
   779  0691                     	;# 
   780  0692                     	;# 
   781  0693                     	;# 
   782  0694                     	;# 
   783  0695                     	;# 
   784  0696                     	;# 
   785  0697                     	;# 
   786  0699                     	;# 
   787  069A                     	;# 
   788  0711                     	;# 
   789  0712                     	;# 
   790  0713                     	;# 
   791  0714                     	;# 
   792  0715                     	;# 
   793  0718                     	;# 
   794  0718                     	;# 
   795  0719                     	;# 
   796  071A                     	;# 
   797  071A                     	;# 
   798  071B                     	;# 
   799  071C                     	;# 
   800  071D                     	;# 
   801  0791                     	;# 
   802  0791                     	;# 
   803  0792                     	;# 
   804  0793                     	;# 
   805  0793                     	;# 
   806  0794                     	;# 
   807  0795                     	;# 
   808  0795                     	;# 
   809  0796                     	;# 
   810  0797                     	;# 
   811  0797                     	;# 
   812  0798                     	;# 
   813  0799                     	;# 
   814  079A                     	;# 
   815  080C                     	;# 
   816  080C                     	;# 
   817  080D                     	;# 
   818  080E                     	;# 
   819  080E                     	;# 
   820  080F                     	;# 
   821  0810                     	;# 
   822  0810                     	;# 
   823  0811                     	;# 
   824  0812                     	;# 
   825  0812                     	;# 
   826  0813                     	;# 
   827  0814                     	;# 
   828  0815                     	;# 
   829  0816                     	;# 
   830  0817                     	;# 
   831  0818                     	;# 
   832  0819                     	;# 
   833  081A                     	;# 
   834  081A                     	;# 
   835  081B                     	;# 
   836  081C                     	;# 
   837  081C                     	;# 
   838  081D                     	;# 
   839  088C                     	;# 
   840  088D                     	;# 
   841  088E                     	;# 
   842  088F                     	;# 
   843  088F                     	;# 
   844  0890                     	;# 
   845  0891                     	;# 
   846  0892                     	;# 
   847  0893                     	;# 
   848  0893                     	;# 
   849  0894                     	;# 
   850  0895                     	;# 
   851  0896                     	;# 
   852  0897                     	;# 
   853  0897                     	;# 
   854  0898                     	;# 
   855  0899                     	;# 
   856  0D8C                     	;# 
   857  0D8C                     	;# 
   858  0D8D                     	;# 
   859  0D8E                     	;# 
   860  0D8F                     	;# 
   861  0D8F                     	;# 
   862  0D90                     	;# 
   863  0D91                     	;# 
   864  0D92                     	;# 
   865  0D92                     	;# 
   866  0D93                     	;# 
   867  0D94                     	;# 
   868  0D95                     	;# 
   869  0D95                     	;# 
   870  0D96                     	;# 
   871  0D97                     	;# 
   872  0D98                     	;# 
   873  0D99                     	;# 
   874  0D9A                     	;# 
   875  0D9B                     	;# 
   876  0D9C                     	;# 
   877  0D9D                     	;# 
   878  0D9E                     	;# 
   879  0D9E                     	;# 
   880  0D9F                     	;# 
   881  0DA0                     	;# 
   882  0DA1                     	;# 
   883  0DA1                     	;# 
   884  0DA2                     	;# 
   885  0DA3                     	;# 
   886  0DA4                     	;# 
   887  0DA4                     	;# 
   888  0DA5                     	;# 
   889  0DA6                     	;# 
   890  0DA7                     	;# 
   891  0DA7                     	;# 
   892  0DA8                     	;# 
   893  0DA9                     	;# 
   894  0DAA                     	;# 
   895  0DAB                     	;# 
   896  0DAC                     	;# 
   897  0DAD                     	;# 
   898  0DAE                     	;# 
   899  0DAF                     	;# 
   900  0E0F                     	;# 
   901  0E10                     	;# 
   902  0E11                     	;# 
   903  0E12                     	;# 
   904  0E13                     	;# 
   905  0E14                     	;# 
   906  0E15                     	;# 
   907  0E16                     	;# 
   908  0E17                     	;# 
   909  0E18                     	;# 
   910  0E19                     	;# 
   911  0E1A                     	;# 
   912  0E1B                     	;# 
   913  0E1C                     	;# 
   914  0E1D                     	;# 
   915  0E1E                     	;# 
   916  0E1F                     	;# 
   917  0E20                     	;# 
   918  0E21                     	;# 
   919  0E22                     	;# 
   920  0E23                     	;# 
   921  0E24                     	;# 
   922  0E25                     	;# 
   923  0E26                     	;# 
   924  0E27                     	;# 
   925  0E28                     	;# 
   926  0E29                     	;# 
   927  0E2A                     	;# 
   928  0E2B                     	;# 
   929  0E2C                     	;# 
   930  0E2D                     	;# 
   931  0E2E                     	;# 
   932  0E90                     	;# 
   933  0E91                     	;# 
   934  0E92                     	;# 
   935  0E94                     	;# 
   936  0E95                     	;# 
   937  0E9C                     	;# 
   938  0E9D                     	;# 
   939  0E9E                     	;# 
   940  0E9F                     	;# 
   941  0EA0                     	;# 
   942  0EA1                     	;# 
   943  0EA2                     	;# 
   944  0EA3                     	;# 
   945  0EA4                     	;# 
   946  0EA5                     	;# 
   947  0EA6                     	;# 
   948  0EA7                     	;# 
   949  0F0F                     	;# 
   950  0F10                     	;# 
   951  0F11                     	;# 
   952  0F12                     	;# 
   953  0F13                     	;# 
   954  0F14                     	;# 
   955  0F15                     	;# 
   956  0F16                     	;# 
   957  0F17                     	;# 
   958  0F18                     	;# 
   959  0F19                     	;# 
   960  0F1A                     	;# 
   961  0F1B                     	;# 
   962  0F1C                     	;# 
   963  0F1D                     	;# 
   964  0F1E                     	;# 
   965  0F1F                     	;# 
   966  0F20                     	;# 
   967  0F21                     	;# 
   968  0F22                     	;# 
   969  0F23                     	;# 
   970  0F24                     	;# 
   971  0F25                     	;# 
   972  0F26                     	;# 
   973  0F27                     	;# 
   974  0F28                     	;# 
   975  0F29                     	;# 
   976  0F2A                     	;# 
   977  0F2B                     	;# 
   978  0F2C                     	;# 
   979  0F2D                     	;# 
   980  0F2E                     	;# 
   981  0F2F                     	;# 
   982  0F30                     	;# 
   983  0F31                     	;# 
   984  0F32                     	;# 
   985  0F33                     	;# 
   986  0F34                     	;# 
   987  0F35                     	;# 
   988  0F36                     	;# 
   989  0F37                     	;# 
   990  0FE4                     	;# 
   991  0FE5                     	;# 
   992  0FE6                     	;# 
   993  0FE7                     	;# 
   994  0FE8                     	;# 
   995  0FE9                     	;# 
   996  0FEA                     	;# 
   997  0FEB                     	;# 
   998  0FED                     	;# 
   999  0FEE                     	;# 
  1000  0FEF                     	;# 
  1001  0000                     	;# 
  1002  0001                     	;# 
  1003  0002                     	;# 
  1004  0003                     	;# 
  1005  0004                     	;# 
  1006  0005                     	;# 
  1007  0006                     	;# 
  1008  0007                     	;# 
  1009  0008                     	;# 
  1010  0009                     	;# 
  1011  000A                     	;# 
  1012  000B                     	;# 
  1013  000C                     	;# 
  1014  000D                     	;# 
  1015  000E                     	;# 
  1016  0010                     	;# 
  1017  0011                     	;# 
  1018  0012                     	;# 
  1019  0013                     	;# 
  1020  0014                     	;# 
  1021  0015                     	;# 
  1022  0016                     	;# 
  1023  0016                     	;# 
  1024  0017                     	;# 
  1025  0018                     	;# 
  1026  0019                     	;# 
  1027  001A                     	;# 
  1028  001A                     	;# 
  1029  001B                     	;# 
  1030  001B                     	;# 
  1031  001C                     	;# 
  1032  001D                     	;# 
  1033  001E                     	;# 
  1034  001F                     	;# 
  1035  008C                     	;# 
  1036  008D                     	;# 
  1037  008E                     	;# 
  1038  0090                     	;# 
  1039  0091                     	;# 
  1040  0092                     	;# 
  1041  0093                     	;# 
  1042  0094                     	;# 
  1043  0095                     	;# 
  1044  0096                     	;# 
  1045  0098                     	;# 
  1046  0099                     	;# 
  1047  009A                     	;# 
  1048  009B                     	;# 
  1049  009B                     	;# 
  1050  009C                     	;# 
  1051  009D                     	;# 
  1052  009E                     	;# 
  1053  009F                     	;# 
  1054  010C                     	;# 
  1055  010D                     	;# 
  1056  010E                     	;# 
  1057  0111                     	;# 
  1058  0112                     	;# 
  1059  0113                     	;# 
  1060  0114                     	;# 
  1061  0115                     	;# 
  1062  0116                     	;# 
  1063  0117                     	;# 
  1064  0118                     	;# 
  1065  0119                     	;# 
  1066  011C                     	;# 
  1067  018C                     	;# 
  1068  018D                     	;# 
  1069  018E                     	;# 
  1070  0191                     	;# 
  1071  0191                     	;# 
  1072  0192                     	;# 
  1073  0193                     	;# 
  1074  0193                     	;# 
  1075  0194                     	;# 
  1076  0195                     	;# 
  1077  0196                     	;# 
  1078  0197                     	;# 
  1079  0199                     	;# 
  1080  0199                     	;# 
  1081  0199                     	;# 
  1082  019A                     	;# 
  1083  019A                     	;# 
  1084  019A                     	;# 
  1085  019B                     	;# 
  1086  019B                     	;# 
  1087  019B                     	;# 
  1088  019B                     	;# 
  1089  019B                     	;# 
  1090  019C                     	;# 
  1091  019C                     	;# 
  1092  019C                     	;# 
  1093  019D                     	;# 
  1094  019D                     	;# 
  1095  019D                     	;# 
  1096  019E                     	;# 
  1097  019E                     	;# 
  1098  019E                     	;# 
  1099  019F                     	;# 
  1100  019F                     	;# 
  1101  019F                     	;# 
  1102  019F                     	;# 
  1103  019F                     	;# 
  1104  020C                     	;# 
  1105  020D                     	;# 
  1106  020E                     	;# 
  1107  0211                     	;# 
  1108  0211                     	;# 
  1109  0212                     	;# 
  1110  0212                     	;# 
  1111  0213                     	;# 
  1112  0213                     	;# 
  1113  0214                     	;# 
  1114  0214                     	;# 
  1115  0215                     	;# 
  1116  0215                     	;# 
  1117  0215                     	;# 
  1118  0215                     	;# 
  1119  0216                     	;# 
  1120  0216                     	;# 
  1121  0217                     	;# 
  1122  0217                     	;# 
  1123  028C                     	;# 
  1124  028D                     	;# 
  1125  028E                     	;# 
  1126  0291                     	;# 
  1127  0291                     	;# 
  1128  0292                     	;# 
  1129  0293                     	;# 
  1130  0294                     	;# 
  1131  0298                     	;# 
  1132  0298                     	;# 
  1133  0299                     	;# 
  1134  029A                     	;# 
  1135  029B                     	;# 
  1136  029E                     	;# 
  1137  030C                     	;# 
  1138  030D                     	;# 
  1139  030E                     	;# 
  1140  038C                     	;# 
  1141  038D                     	;# 
  1142  038E                     	;# 
  1143  0391                     	;# 
  1144  0392                     	;# 
  1145  0393                     	;# 
  1146  0394                     	;# 
  1147  0395                     	;# 
  1148  0396                     	;# 
  1149  0397                     	;# 
  1150  0398                     	;# 
  1151  0399                     	;# 
  1152  040E                     	;# 
  1153  0413                     	;# 
  1154  0413                     	;# 
  1155  0414                     	;# 
  1156  0414                     	;# 
  1157  0415                     	;# 
  1158  0416                     	;# 
  1159  0417                     	;# 
  1160  0418                     	;# 
  1161  041A                     	;# 
  1162  041A                     	;# 
  1163  041B                     	;# 
  1164  041B                     	;# 
  1165  041C                     	;# 
  1166  041D                     	;# 
  1167  041E                     	;# 
  1168  041F                     	;# 
  1169  0493                     	;# 
  1170  0494                     	;# 
  1171  0495                     	;# 
  1172  0496                     	;# 
  1173  049A                     	;# 
  1174  049B                     	;# 
  1175  049C                     	;# 
  1176  049D                     	;# 
  1177  058C                     	;# 
  1178  058C                     	;# 
  1179  058D                     	;# 
  1180  058E                     	;# 
  1181  058E                     	;# 
  1182  058F                     	;# 
  1183  0590                     	;# 
  1184  0590                     	;# 
  1185  0591                     	;# 
  1186  0592                     	;# 
  1187  0592                     	;# 
  1188  0593                     	;# 
  1189  0594                     	;# 
  1190  0594                     	;# 
  1191  0595                     	;# 
  1192  0596                     	;# 
  1193  0596                     	;# 
  1194  0597                     	;# 
  1195  0598                     	;# 
  1196  0599                     	;# 
  1197  059A                     	;# 
  1198  059B                     	;# 
  1199  059B                     	;# 
  1200  059C                     	;# 
  1201  059D                     	;# 
  1202  060C                     	;# 
  1203  060C                     	;# 
  1204  060D                     	;# 
  1205  060E                     	;# 
  1206  060F                     	;# 
  1207  060F                     	;# 
  1208  0610                     	;# 
  1209  0611                     	;# 
  1210  0612                     	;# 
  1211  0613                     	;# 
  1212  0614                     	;# 
  1213  0617                     	;# 
  1214  0617                     	;# 
  1215  0618                     	;# 
  1216  0619                     	;# 
  1217  061A                     	;# 
  1218  061A                     	;# 
  1219  061B                     	;# 
  1220  061C                     	;# 
  1221  0691                     	;# 
  1222  0692                     	;# 
  1223  0693                     	;# 
  1224  0694                     	;# 
  1225  0695                     	;# 
  1226  0696                     	;# 
  1227  0697                     	;# 
  1228  0699                     	;# 
  1229  069A                     	;# 
  1230  0711                     	;# 
  1231  0712                     	;# 
  1232  0713                     	;# 
  1233  0714                     	;# 
  1234  0715                     	;# 
  1235  0718                     	;# 
  1236  0718                     	;# 
  1237  0719                     	;# 
  1238  071A                     	;# 
  1239  071A                     	;# 
  1240  071B                     	;# 
  1241  071C                     	;# 
  1242  071D                     	;# 
  1243  0791                     	;# 
  1244  0791                     	;# 
  1245  0792                     	;# 
  1246  0793                     	;# 
  1247  0793                     	;# 
  1248  0794                     	;# 
  1249  0795                     	;# 
  1250  0795                     	;# 
  1251  0796                     	;# 
  1252  0797                     	;# 
  1253  0797                     	;# 
  1254  0798                     	;# 
  1255  0799                     	;# 
  1256  079A                     	;# 
  1257  080C                     	;# 
  1258  080C                     	;# 
  1259  080D                     	;# 
  1260  080E                     	;# 
  1261  080E                     	;# 
  1262  080F                     	;# 
  1263  0810                     	;# 
  1264  0810                     	;# 
  1265  0811                     	;# 
  1266  0812                     	;# 
  1267  0812                     	;# 
  1268  0813                     	;# 
  1269  0814                     	;# 
  1270  0815                     	;# 
  1271  0816                     	;# 
  1272  0817                     	;# 
  1273  0818                     	;# 
  1274  0819                     	;# 
  1275  081A                     	;# 
  1276  081A                     	;# 
  1277  081B                     	;# 
  1278  081C                     	;# 
  1279  081C                     	;# 
  1280  081D                     	;# 
  1281  088C                     	;# 
  1282  088D                     	;# 
  1283  088E                     	;# 
  1284  088F                     	;# 
  1285  088F                     	;# 
  1286  0890                     	;# 
  1287  0891                     	;# 
  1288  0892                     	;# 
  1289  0893                     	;# 
  1290  0893                     	;# 
  1291  0894                     	;# 
  1292  0895                     	;# 
  1293  0896                     	;# 
  1294  0897                     	;# 
  1295  0897                     	;# 
  1296  0898                     	;# 
  1297  0899                     	;# 
  1298  0D8C                     	;# 
  1299  0D8C                     	;# 
  1300  0D8D                     	;# 
  1301  0D8E                     	;# 
  1302  0D8F                     	;# 
  1303  0D8F                     	;# 
  1304  0D90                     	;# 
  1305  0D91                     	;# 
  1306  0D92                     	;# 
  1307  0D92                     	;# 
  1308  0D93                     	;# 
  1309  0D94                     	;# 
  1310  0D95                     	;# 
  1311  0D95                     	;# 
  1312  0D96                     	;# 
  1313  0D97                     	;# 
  1314  0D98                     	;# 
  1315  0D99                     	;# 
  1316  0D9A                     	;# 
  1317  0D9B                     	;# 
  1318  0D9C                     	;# 
  1319  0D9D                     	;# 
  1320  0D9E                     	;# 
  1321  0D9E                     	;# 
  1322  0D9F                     	;# 
  1323  0DA0                     	;# 
  1324  0DA1                     	;# 
  1325  0DA1                     	;# 
  1326  0DA2                     	;# 
  1327  0DA3                     	;# 
  1328  0DA4                     	;# 
  1329  0DA4                     	;# 
  1330  0DA5                     	;# 
  1331  0DA6                     	;# 
  1332  0DA7                     	;# 
  1333  0DA7                     	;# 
  1334  0DA8                     	;# 
  1335  0DA9                     	;# 
  1336  0DAA                     	;# 
  1337  0DAB                     	;# 
  1338  0DAC                     	;# 
  1339  0DAD                     	;# 
  1340  0DAE                     	;# 
  1341  0DAF                     	;# 
  1342  0E0F                     	;# 
  1343  0E10                     	;# 
  1344  0E11                     	;# 
  1345  0E12                     	;# 
  1346  0E13                     	;# 
  1347  0E14                     	;# 
  1348  0E15                     	;# 
  1349  0E16                     	;# 
  1350  0E17                     	;# 
  1351  0E18                     	;# 
  1352  0E19                     	;# 
  1353  0E1A                     	;# 
  1354  0E1B                     	;# 
  1355  0E1C                     	;# 
  1356  0E1D                     	;# 
  1357  0E1E                     	;# 
  1358  0E1F                     	;# 
  1359  0E20                     	;# 
  1360  0E21                     	;# 
  1361  0E22                     	;# 
  1362  0E23                     	;# 
  1363  0E24                     	;# 
  1364  0E25                     	;# 
  1365  0E26                     	;# 
  1366  0E27                     	;# 
  1367  0E28                     	;# 
  1368  0E29                     	;# 
  1369  0E2A                     	;# 
  1370  0E2B                     	;# 
  1371  0E2C                     	;# 
  1372  0E2D                     	;# 
  1373  0E2E                     	;# 
  1374  0E90                     	;# 
  1375  0E91                     	;# 
  1376  0E92                     	;# 
  1377  0E94                     	;# 
  1378  0E95                     	;# 
  1379  0E9C                     	;# 
  1380  0E9D                     	;# 
  1381  0E9E                     	;# 
  1382  0E9F                     	;# 
  1383  0EA0                     	;# 
  1384  0EA1                     	;# 
  1385  0EA2                     	;# 
  1386  0EA3                     	;# 
  1387  0EA4                     	;# 
  1388  0EA5                     	;# 
  1389  0EA6                     	;# 
  1390  0EA7                     	;# 
  1391  0F0F                     	;# 
  1392  0F10                     	;# 
  1393  0F11                     	;# 
  1394  0F12                     	;# 
  1395  0F13                     	;# 
  1396  0F14                     	;# 
  1397  0F15                     	;# 
  1398  0F16                     	;# 
  1399  0F17                     	;# 
  1400  0F18                     	;# 
  1401  0F19                     	;# 
  1402  0F1A                     	;# 
  1403  0F1B                     	;# 
  1404  0F1C                     	;# 
  1405  0F1D                     	;# 
  1406  0F1E                     	;# 
  1407  0F1F                     	;# 
  1408  0F20                     	;# 
  1409  0F21                     	;# 
  1410  0F22                     	;# 
  1411  0F23                     	;# 
  1412  0F24                     	;# 
  1413  0F25                     	;# 
  1414  0F26                     	;# 
  1415  0F27                     	;# 
  1416  0F28                     	;# 
  1417  0F29                     	;# 
  1418  0F2A                     	;# 
  1419  0F2B                     	;# 
  1420  0F2C                     	;# 
  1421  0F2D                     	;# 
  1422  0F2E                     	;# 
  1423  0F2F                     	;# 
  1424  0F30                     	;# 
  1425  0F31                     	;# 
  1426  0F32                     	;# 
  1427  0F33                     	;# 
  1428  0F34                     	;# 
  1429  0F35                     	;# 
  1430  0F36                     	;# 
  1431  0F37                     	;# 
  1432  0FE4                     	;# 
  1433  0FE5                     	;# 
  1434  0FE6                     	;# 
  1435  0FE7                     	;# 
  1436  0FE8                     	;# 
  1437  0FE9                     	;# 
  1438  0FEA                     	;# 
  1439  0FEB                     	;# 
  1440  0FED                     	;# 
  1441  0FEE                     	;# 
  1442  0FEF                     	;# 
  1443  0000                     	;# 
  1444  0001                     	;# 
  1445  0002                     	;# 
  1446  0003                     	;# 
  1447  0004                     	;# 
  1448  0005                     	;# 
  1449  0006                     	;# 
  1450  0007                     	;# 
  1451  0008                     	;# 
  1452  0009                     	;# 
  1453  000A                     	;# 
  1454  000B                     	;# 
  1455  000C                     	;# 
  1456  000D                     	;# 
  1457  000E                     	;# 
  1458  0010                     	;# 
  1459  0011                     	;# 
  1460  0012                     	;# 
  1461  0013                     	;# 
  1462  0014                     	;# 
  1463  0015                     	;# 
  1464  0016                     	;# 
  1465  0016                     	;# 
  1466  0017                     	;# 
  1467  0018                     	;# 
  1468  0019                     	;# 
  1469  001A                     	;# 
  1470  001A                     	;# 
  1471  001B                     	;# 
  1472  001B                     	;# 
  1473  001C                     	;# 
  1474  001D                     	;# 
  1475  001E                     	;# 
  1476  001F                     	;# 
  1477  008C                     	;# 
  1478  008D                     	;# 
  1479  008E                     	;# 
  1480  0090                     	;# 
  1481  0091                     	;# 
  1482  0092                     	;# 
  1483  0093                     	;# 
  1484  0094                     	;# 
  1485  0095                     	;# 
  1486  0096                     	;# 
  1487  0098                     	;# 
  1488  0099                     	;# 
  1489  009A                     	;# 
  1490  009B                     	;# 
  1491  009B                     	;# 
  1492  009C                     	;# 
  1493  009D                     	;# 
  1494  009E                     	;# 
  1495  009F                     	;# 
  1496  010C                     	;# 
  1497  010D                     	;# 
  1498  010E                     	;# 
  1499  0111                     	;# 
  1500  0112                     	;# 
  1501  0113                     	;# 
  1502  0114                     	;# 
  1503  0115                     	;# 
  1504  0116                     	;# 
  1505  0117                     	;# 
  1506  0118                     	;# 
  1507  0119                     	;# 
  1508  011C                     	;# 
  1509  018C                     	;# 
  1510  018D                     	;# 
  1511  018E                     	;# 
  1512  0191                     	;# 
  1513  0191                     	;# 
  1514  0192                     	;# 
  1515  0193                     	;# 
  1516  0193                     	;# 
  1517  0194                     	;# 
  1518  0195                     	;# 
  1519  0196                     	;# 
  1520  0197                     	;# 
  1521  0199                     	;# 
  1522  0199                     	;# 
  1523  0199                     	;# 
  1524  019A                     	;# 
  1525  019A                     	;# 
  1526  019A                     	;# 
  1527  019B                     	;# 
  1528  019B                     	;# 
  1529  019B                     	;# 
  1530  019B                     	;# 
  1531  019B                     	;# 
  1532  019C                     	;# 
  1533  019C                     	;# 
  1534  019C                     	;# 
  1535  019D                     	;# 
  1536  019D                     	;# 
  1537  019D                     	;# 
  1538  019E                     	;# 
  1539  019E                     	;# 
  1540  019E                     	;# 
  1541  019F                     	;# 
  1542  019F                     	;# 
  1543  019F                     	;# 
  1544  019F                     	;# 
  1545  019F                     	;# 
  1546  020C                     	;# 
  1547  020D                     	;# 
  1548  020E                     	;# 
  1549  0211                     	;# 
  1550  0211                     	;# 
  1551  0212                     	;# 
  1552  0212                     	;# 
  1553  0213                     	;# 
  1554  0213                     	;# 
  1555  0214                     	;# 
  1556  0214                     	;# 
  1557  0215                     	;# 
  1558  0215                     	;# 
  1559  0215                     	;# 
  1560  0215                     	;# 
  1561  0216                     	;# 
  1562  0216                     	;# 
  1563  0217                     	;# 
  1564  0217                     	;# 
  1565  028C                     	;# 
  1566  028D                     	;# 
  1567  028E                     	;# 
  1568  0291                     	;# 
  1569  0291                     	;# 
  1570  0292                     	;# 
  1571  0293                     	;# 
  1572  0294                     	;# 
  1573  0298                     	;# 
  1574  0298                     	;# 
  1575  0299                     	;# 
  1576  029A                     	;# 
  1577  029B                     	;# 
  1578  029E                     	;# 
  1579  030C                     	;# 
  1580  030D                     	;# 
  1581  030E                     	;# 
  1582  038C                     	;# 
  1583  038D                     	;# 
  1584  038E                     	;# 
  1585  0391                     	;# 
  1586  0392                     	;# 
  1587  0393                     	;# 
  1588  0394                     	;# 
  1589  0395                     	;# 
  1590  0396                     	;# 
  1591  0397                     	;# 
  1592  0398                     	;# 
  1593  0399                     	;# 
  1594  040E                     	;# 
  1595  0413                     	;# 
  1596  0413                     	;# 
  1597  0414                     	;# 
  1598  0414                     	;# 
  1599  0415                     	;# 
  1600  0416                     	;# 
  1601  0417                     	;# 
  1602  0418                     	;# 
  1603  041A                     	;# 
  1604  041A                     	;# 
  1605  041B                     	;# 
  1606  041B                     	;# 
  1607  041C                     	;# 
  1608  041D                     	;# 
  1609  041E                     	;# 
  1610  041F                     	;# 
  1611  0493                     	;# 
  1612  0494                     	;# 
  1613  0495                     	;# 
  1614  0496                     	;# 
  1615  049A                     	;# 
  1616  049B                     	;# 
  1617  049C                     	;# 
  1618  049D                     	;# 
  1619  058C                     	;# 
  1620  058C                     	;# 
  1621  058D                     	;# 
  1622  058E                     	;# 
  1623  058E                     	;# 
  1624  058F                     	;# 
  1625  0590                     	;# 
  1626  0590                     	;# 
  1627  0591                     	;# 
  1628  0592                     	;# 
  1629  0592                     	;# 
  1630  0593                     	;# 
  1631  0594                     	;# 
  1632  0594                     	;# 
  1633  0595                     	;# 
  1634  0596                     	;# 
  1635  0596                     	;# 
  1636  0597                     	;# 
  1637  0598                     	;# 
  1638  0599                     	;# 
  1639  059A                     	;# 
  1640  059B                     	;# 
  1641  059B                     	;# 
  1642  059C                     	;# 
  1643  059D                     	;# 
  1644  060C                     	;# 
  1645  060C                     	;# 
  1646  060D                     	;# 
  1647  060E                     	;# 
  1648  060F                     	;# 
  1649  060F                     	;# 
  1650  0610                     	;# 
  1651  0611                     	;# 
  1652  0612                     	;# 
  1653  0613                     	;# 
  1654  0614                     	;# 
  1655  0617                     	;# 
  1656  0617                     	;# 
  1657  0618                     	;# 
  1658  0619                     	;# 
  1659  061A                     	;# 
  1660  061A                     	;# 
  1661  061B                     	;# 
  1662  061C                     	;# 
  1663  0691                     	;# 
  1664  0692                     	;# 
  1665  0693                     	;# 
  1666  0694                     	;# 
  1667  0695                     	;# 
  1668  0696                     	;# 
  1669  0697                     	;# 
  1670  0699                     	;# 
  1671  069A                     	;# 
  1672  0711                     	;# 
  1673  0712                     	;# 
  1674  0713                     	;# 
  1675  0714                     	;# 
  1676  0715                     	;# 
  1677  0718                     	;# 
  1678  0718                     	;# 
  1679  0719                     	;# 
  1680  071A                     	;# 
  1681  071A                     	;# 
  1682  071B                     	;# 
  1683  071C                     	;# 
  1684  071D                     	;# 
  1685  0791                     	;# 
  1686  0791                     	;# 
  1687  0792                     	;# 
  1688  0793                     	;# 
  1689  0793                     	;# 
  1690  0794                     	;# 
  1691  0795                     	;# 
  1692  0795                     	;# 
  1693  0796                     	;# 
  1694  0797                     	;# 
  1695  0797                     	;# 
  1696  0798                     	;# 
  1697  0799                     	;# 
  1698  079A                     	;# 
  1699  080C                     	;# 
  1700  080C                     	;# 
  1701  080D                     	;# 
  1702  080E                     	;# 
  1703  080E                     	;# 
  1704  080F                     	;# 
  1705  0810                     	;# 
  1706  0810                     	;# 
  1707  0811                     	;# 
  1708  0812                     	;# 
  1709  0812                     	;# 
  1710  0813                     	;# 
  1711  0814                     	;# 
  1712  0815                     	;# 
  1713  0816                     	;# 
  1714  0817                     	;# 
  1715  0818                     	;# 
  1716  0819                     	;# 
  1717  081A                     	;# 
  1718  081A                     	;# 
  1719  081B                     	;# 
  1720  081C                     	;# 
  1721  081C                     	;# 
  1722  081D                     	;# 
  1723  088C                     	;# 
  1724  088D                     	;# 
  1725  088E                     	;# 
  1726  088F                     	;# 
  1727  088F                     	;# 
  1728  0890                     	;# 
  1729  0891                     	;# 
  1730  0892                     	;# 
  1731  0893                     	;# 
  1732  0893                     	;# 
  1733  0894                     	;# 
  1734  0895                     	;# 
  1735  0896                     	;# 
  1736  0897                     	;# 
  1737  0897                     	;# 
  1738  0898                     	;# 
  1739  0899                     	;# 
  1740  0D8C                     	;# 
  1741  0D8C                     	;# 
  1742  0D8D                     	;# 
  1743  0D8E                     	;# 
  1744  0D8F                     	;# 
  1745  0D8F                     	;# 
  1746  0D90                     	;# 
  1747  0D91                     	;# 
  1748  0D92                     	;# 
  1749  0D92                     	;# 
  1750  0D93                     	;# 
  1751  0D94                     	;# 
  1752  0D95                     	;# 
  1753  0D95                     	;# 
  1754  0D96                     	;# 
  1755  0D97                     	;# 
  1756  0D98                     	;# 
  1757  0D99                     	;# 
  1758  0D9A                     	;# 
  1759  0D9B                     	;# 
  1760  0D9C                     	;# 
  1761  0D9D                     	;# 
  1762  0D9E                     	;# 
  1763  0D9E                     	;# 
  1764  0D9F                     	;# 
  1765  0DA0                     	;# 
  1766  0DA1                     	;# 
  1767  0DA1                     	;# 
  1768  0DA2                     	;# 
  1769  0DA3                     	;# 
  1770  0DA4                     	;# 
  1771  0DA4                     	;# 
  1772  0DA5                     	;# 
  1773  0DA6                     	;# 
  1774  0DA7                     	;# 
  1775  0DA7                     	;# 
  1776  0DA8                     	;# 
  1777  0DA9                     	;# 
  1778  0DAA                     	;# 
  1779  0DAB                     	;# 
  1780  0DAC                     	;# 
  1781  0DAD                     	;# 
  1782  0DAE                     	;# 
  1783  0DAF                     	;# 
  1784  0E0F                     	;# 
  1785  0E10                     	;# 
  1786  0E11                     	;# 
  1787  0E12                     	;# 
  1788  0E13                     	;# 
  1789  0E14                     	;# 
  1790  0E15                     	;# 
  1791  0E16                     	;# 
  1792  0E17                     	;# 
  1793  0E18                     	;# 
  1794  0E19                     	;# 
  1795  0E1A                     	;# 
  1796  0E1B                     	;# 
  1797  0E1C                     	;# 
  1798  0E1D                     	;# 
  1799  0E1E                     	;# 
  1800  0E1F                     	;# 
  1801  0E20                     	;# 
  1802  0E21                     	;# 
  1803  0E22                     	;# 
  1804  0E23                     	;# 
  1805  0E24                     	;# 
  1806  0E25                     	;# 
  1807  0E26                     	;# 
  1808  0E27                     	;# 
  1809  0E28                     	;# 
  1810  0E29                     	;# 
  1811  0E2A                     	;# 
  1812  0E2B                     	;# 
  1813  0E2C                     	;# 
  1814  0E2D                     	;# 
  1815  0E2E                     	;# 
  1816  0E90                     	;# 
  1817  0E91                     	;# 
  1818  0E92                     	;# 
  1819  0E94                     	;# 
  1820  0E95                     	;# 
  1821  0E9C                     	;# 
  1822  0E9D                     	;# 
  1823  0E9E                     	;# 
  1824  0E9F                     	;# 
  1825  0EA0                     	;# 
  1826  0EA1                     	;# 
  1827  0EA2                     	;# 
  1828  0EA3                     	;# 
  1829  0EA4                     	;# 
  1830  0EA5                     	;# 
  1831  0EA6                     	;# 
  1832  0EA7                     	;# 
  1833  0F0F                     	;# 
  1834  0F10                     	;# 
  1835  0F11                     	;# 
  1836  0F12                     	;# 
  1837  0F13                     	;# 
  1838  0F14                     	;# 
  1839  0F15                     	;# 
  1840  0F16                     	;# 
  1841  0F17                     	;# 
  1842  0F18                     	;# 
  1843  0F19                     	;# 
  1844  0F1A                     	;# 
  1845  0F1B                     	;# 
  1846  0F1C                     	;# 
  1847  0F1D                     	;# 
  1848  0F1E                     	;# 
  1849  0F1F                     	;# 
  1850  0F20                     	;# 
  1851  0F21                     	;# 
  1852  0F22                     	;# 
  1853  0F23                     	;# 
  1854  0F24                     	;# 
  1855  0F25                     	;# 
  1856  0F26                     	;# 
  1857  0F27                     	;# 
  1858  0F28                     	;# 
  1859  0F29                     	;# 
  1860  0F2A                     	;# 
  1861  0F2B                     	;# 
  1862  0F2C                     	;# 
  1863  0F2D                     	;# 
  1864  0F2E                     	;# 
  1865  0F2F                     	;# 
  1866  0F30                     	;# 
  1867  0F31                     	;# 
  1868  0F32                     	;# 
  1869  0F33                     	;# 
  1870  0F34                     	;# 
  1871  0F35                     	;# 
  1872  0F36                     	;# 
  1873  0F37                     	;# 
  1874  0FE4                     	;# 
  1875  0FE5                     	;# 
  1876  0FE6                     	;# 
  1877  0FE7                     	;# 
  1878  0FE8                     	;# 
  1879  0FE9                     	;# 
  1880  0FEA                     	;# 
  1881  0FEB                     	;# 
  1882  0FED                     	;# 
  1883  0FEE                     	;# 
  1884  0FEF                     	;# 
  1885  0000                     	;# 
  1886  0001                     	;# 
  1887  0002                     	;# 
  1888  0003                     	;# 
  1889  0004                     	;# 
  1890  0005                     	;# 
  1891  0006                     	;# 
  1892  0007                     	;# 
  1893  0008                     	;# 
  1894  0009                     	;# 
  1895  000A                     	;# 
  1896  000B                     	;# 
  1897  000C                     	;# 
  1898  000D                     	;# 
  1899  000E                     	;# 
  1900  0010                     	;# 
  1901  0011                     	;# 
  1902  0012                     	;# 
  1903  0013                     	;# 
  1904  0014                     	;# 
  1905  0015                     	;# 
  1906  0016                     	;# 
  1907  0016                     	;# 
  1908  0017                     	;# 
  1909  0018                     	;# 
  1910  0019                     	;# 
  1911  001A                     	;# 
  1912  001A                     	;# 
  1913  001B                     	;# 
  1914  001B                     	;# 
  1915  001C                     	;# 
  1916  001D                     	;# 
  1917  001E                     	;# 
  1918  001F                     	;# 
  1919  008C                     	;# 
  1920  008D                     	;# 
  1921  008E                     	;# 
  1922  0090                     	;# 
  1923  0091                     	;# 
  1924  0092                     	;# 
  1925  0093                     	;# 
  1926  0094                     	;# 
  1927  0095                     	;# 
  1928  0096                     	;# 
  1929  0098                     	;# 
  1930  0099                     	;# 
  1931  009A                     	;# 
  1932  009B                     	;# 
  1933  009B                     	;# 
  1934  009C                     	;# 
  1935  009D                     	;# 
  1936  009E                     	;# 
  1937  009F                     	;# 
  1938  010C                     	;# 
  1939  010D                     	;# 
  1940  010E                     	;# 
  1941  0111                     	;# 
  1942  0112                     	;# 
  1943  0113                     	;# 
  1944  0114                     	;# 
  1945  0115                     	;# 
  1946  0116                     	;# 
  1947  0117                     	;# 
  1948  0118                     	;# 
  1949  0119                     	;# 
  1950  011C                     	;# 
  1951  018C                     	;# 
  1952  018D                     	;# 
  1953  018E                     	;# 
  1954  0191                     	;# 
  1955  0191                     	;# 
  1956  0192                     	;# 
  1957  0193                     	;# 
  1958  0193                     	;# 
  1959  0194                     	;# 
  1960  0195                     	;# 
  1961  0196                     	;# 
  1962  0197                     	;# 
  1963  0199                     	;# 
  1964  0199                     	;# 
  1965  0199                     	;# 
  1966  019A                     	;# 
  1967  019A                     	;# 
  1968  019A                     	;# 
  1969  019B                     	;# 
  1970  019B                     	;# 
  1971  019B                     	;# 
  1972  019B                     	;# 
  1973  019B                     	;# 
  1974  019C                     	;# 
  1975  019C                     	;# 
  1976  019C                     	;# 
  1977  019D                     	;# 
  1978  019D                     	;# 
  1979  019D                     	;# 
  1980  019E                     	;# 
  1981  019E                     	;# 
  1982  019E                     	;# 
  1983  019F                     	;# 
  1984  019F                     	;# 
  1985  019F                     	;# 
  1986  019F                     	;# 
  1987  019F                     	;# 
  1988  020C                     	;# 
  1989  020D                     	;# 
  1990  020E                     	;# 
  1991  0211                     	;# 
  1992  0211                     	;# 
  1993  0212                     	;# 
  1994  0212                     	;# 
  1995  0213                     	;# 
  1996  0213                     	;# 
  1997  0214                     	;# 
  1998  0214                     	;# 
  1999  0215                     	;# 
  2000  0215                     	;# 
  2001  0215                     	;# 
  2002  0215                     	;# 
  2003  0216                     	;# 
  2004  0216                     	;# 
  2005  0217                     	;# 
  2006  0217                     	;# 
  2007  028C                     	;# 
  2008  028D                     	;# 
  2009  028E                     	;# 
  2010  0291                     	;# 
  2011  0291                     	;# 
  2012  0292                     	;# 
  2013  0293                     	;# 
  2014  0294                     	;# 
  2015  0298                     	;# 
  2016  0298                     	;# 
  2017  0299                     	;# 
  2018  029A                     	;# 
  2019  029B                     	;# 
  2020  029E                     	;# 
  2021  030C                     	;# 
  2022  030D                     	;# 
  2023  030E                     	;# 
  2024  038C                     	;# 
  2025  038D                     	;# 
  2026  038E                     	;# 
  2027  0391                     	;# 
  2028  0392                     	;# 
  2029  0393                     	;# 
  2030  0394                     	;# 
  2031  0395                     	;# 
  2032  0396                     	;# 
  2033  0397                     	;# 
  2034  0398                     	;# 
  2035  0399                     	;# 
  2036  040E                     	;# 
  2037  0413                     	;# 
  2038  0413                     	;# 
  2039  0414                     	;# 
  2040  0414                     	;# 
  2041  0415                     	;# 
  2042  0416                     	;# 
  2043  0417                     	;# 
  2044  0418                     	;# 
  2045  041A                     	;# 
  2046  041A                     	;# 
  2047  041B                     	;# 
  2048  041B                     	;# 
  2049  041C                     	;# 
  2050  041D                     	;# 
  2051  041E                     	;# 
  2052  041F                     	;# 
  2053  0493                     	;# 
  2054  0494                     	;# 
  2055  0495                     	;# 
  2056  0496                     	;# 
  2057  049A                     	;# 
  2058  049B                     	;# 
  2059  049C                     	;# 
  2060  049D                     	;# 
  2061  058C                     	;# 
  2062  058C                     	;# 
  2063  058D                     	;# 
  2064  058E                     	;# 
  2065  058E                     	;# 
  2066  058F                     	;# 
  2067  0590                     	;# 
  2068  0590                     	;# 
  2069  0591                     	;# 
  2070  0592                     	;# 
  2071  0592                     	;# 
  2072  0593                     	;# 
  2073  0594                     	;# 
  2074  0594                     	;# 
  2075  0595                     	;# 
  2076  0596                     	;# 
  2077  0596                     	;# 
  2078  0597                     	;# 
  2079  0598                     	;# 
  2080  0599                     	;# 
  2081  059A                     	;# 
  2082  059B                     	;# 
  2083  059B                     	;# 
  2084  059C                     	;# 
  2085  059D                     	;# 
  2086  060C                     	;# 
  2087  060C                     	;# 
  2088  060D                     	;# 
  2089  060E                     	;# 
  2090  060F                     	;# 
  2091  060F                     	;# 
  2092  0610                     	;# 
  2093  0611                     	;# 
  2094  0612                     	;# 
  2095  0613                     	;# 
  2096  0614                     	;# 
  2097  0617                     	;# 
  2098  0617                     	;# 
  2099  0618                     	;# 
  2100  0619                     	;# 
  2101  061A                     	;# 
  2102  061A                     	;# 
  2103  061B                     	;# 
  2104  061C                     	;# 
  2105  0691                     	;# 
  2106  0692                     	;# 
  2107  0693                     	;# 
  2108  0694                     	;# 
  2109  0695                     	;# 
  2110  0696                     	;# 
  2111  0697                     	;# 
  2112  0699                     	;# 
  2113  069A                     	;# 
  2114  0711                     	;# 
  2115  0712                     	;# 
  2116  0713                     	;# 
  2117  0714                     	;# 
  2118  0715                     	;# 
  2119  0718                     	;# 
  2120  0718                     	;# 
  2121  0719                     	;# 
  2122  071A                     	;# 
  2123  071A                     	;# 
  2124  071B                     	;# 
  2125  071C                     	;# 
  2126  071D                     	;# 
  2127  0791                     	;# 
  2128  0791                     	;# 
  2129  0792                     	;# 
  2130  0793                     	;# 
  2131  0793                     	;# 
  2132  0794                     	;# 
  2133  0795                     	;# 
  2134  0795                     	;# 
  2135  0796                     	;# 
  2136  0797                     	;# 
  2137  0797                     	;# 
  2138  0798                     	;# 
  2139  0799                     	;# 
  2140  079A                     	;# 
  2141  080C                     	;# 
  2142  080C                     	;# 
  2143  080D                     	;# 
  2144  080E                     	;# 
  2145  080E                     	;# 
  2146  080F                     	;# 
  2147  0810                     	;# 
  2148  0810                     	;# 
  2149  0811                     	;# 
  2150  0812                     	;# 
  2151  0812                     	;# 
  2152  0813                     	;# 
  2153  0814                     	;# 
  2154  0815                     	;# 
  2155  0816                     	;# 
  2156  0817                     	;# 
  2157  0818                     	;# 
  2158  0819                     	;# 
  2159  081A                     	;# 
  2160  081A                     	;# 
  2161  081B                     	;# 
  2162  081C                     	;# 
  2163  081C                     	;# 
  2164  081D                     	;# 
  2165  088C                     	;# 
  2166  088D                     	;# 
  2167  088E                     	;# 
  2168  088F                     	;# 
  2169  088F                     	;# 
  2170  0890                     	;# 
  2171  0891                     	;# 
  2172  0892                     	;# 
  2173  0893                     	;# 
  2174  0893                     	;# 
  2175  0894                     	;# 
  2176  0895                     	;# 
  2177  0896                     	;# 
  2178  0897                     	;# 
  2179  0897                     	;# 
  2180  0898                     	;# 
  2181  0899                     	;# 
  2182  0D8C                     	;# 
  2183  0D8C                     	;# 
  2184  0D8D                     	;# 
  2185  0D8E                     	;# 
  2186  0D8F                     	;# 
  2187  0D8F                     	;# 
  2188  0D90                     	;# 
  2189  0D91                     	;# 
  2190  0D92                     	;# 
  2191  0D92                     	;# 
  2192  0D93                     	;# 
  2193  0D94                     	;# 
  2194  0D95                     	;# 
  2195  0D95                     	;# 
  2196  0D96                     	;# 
  2197  0D97                     	;# 
  2198  0D98                     	;# 
  2199  0D99                     	;# 
  2200  0D9A                     	;# 
  2201  0D9B                     	;# 
  2202  0D9C                     	;# 
  2203  0D9D                     	;# 
  2204  0D9E                     	;# 
  2205  0D9E                     	;# 
  2206  0D9F                     	;# 
  2207  0DA0                     	;# 
  2208  0DA1                     	;# 
  2209  0DA1                     	;# 
  2210  0DA2                     	;# 
  2211  0DA3                     	;# 
  2212  0DA4                     	;# 
  2213  0DA4                     	;# 
  2214  0DA5                     	;# 
  2215  0DA6                     	;# 
  2216  0DA7                     	;# 
  2217  0DA7                     	;# 
  2218  0DA8                     	;# 
  2219  0DA9                     	;# 
  2220  0DAA                     	;# 
  2221  0DAB                     	;# 
  2222  0DAC                     	;# 
  2223  0DAD                     	;# 
  2224  0DAE                     	;# 
  2225  0DAF                     	;# 
  2226  0E0F                     	;# 
  2227  0E10                     	;# 
  2228  0E11                     	;# 
  2229  0E12                     	;# 
  2230  0E13                     	;# 
  2231  0E14                     	;# 
  2232  0E15                     	;# 
  2233  0E16                     	;# 
  2234  0E17                     	;# 
  2235  0E18                     	;# 
  2236  0E19                     	;# 
  2237  0E1A                     	;# 
  2238  0E1B                     	;# 
  2239  0E1C                     	;# 
  2240  0E1D                     	;# 
  2241  0E1E                     	;# 
  2242  0E1F                     	;# 
  2243  0E20                     	;# 
  2244  0E21                     	;# 
  2245  0E22                     	;# 
  2246  0E23                     	;# 
  2247  0E24                     	;# 
  2248  0E25                     	;# 
  2249  0E26                     	;# 
  2250  0E27                     	;# 
  2251  0E28                     	;# 
  2252  0E29                     	;# 
  2253  0E2A                     	;# 
  2254  0E2B                     	;# 
  2255  0E2C                     	;# 
  2256  0E2D                     	;# 
  2257  0E2E                     	;# 
  2258  0E90                     	;# 
  2259  0E91                     	;# 
  2260  0E92                     	;# 
  2261  0E94                     	;# 
  2262  0E95                     	;# 
  2263  0E9C                     	;# 
  2264  0E9D                     	;# 
  2265  0E9E                     	;# 
  2266  0E9F                     	;# 
  2267  0EA0                     	;# 
  2268  0EA1                     	;# 
  2269  0EA2                     	;# 
  2270  0EA3                     	;# 
  2271  0EA4                     	;# 
  2272  0EA5                     	;# 
  2273  0EA6                     	;# 
  2274  0EA7                     	;# 
  2275  0F0F                     	;# 
  2276  0F10                     	;# 
  2277  0F11                     	;# 
  2278  0F12                     	;# 
  2279  0F13                     	;# 
  2280  0F14                     	;# 
  2281  0F15                     	;# 
  2282  0F16                     	;# 
  2283  0F17                     	;# 
  2284  0F18                     	;# 
  2285  0F19                     	;# 
  2286  0F1A                     	;# 
  2287  0F1B                     	;# 
  2288  0F1C                     	;# 
  2289  0F1D                     	;# 
  2290  0F1E                     	;# 
  2291  0F1F                     	;# 
  2292  0F20                     	;# 
  2293  0F21                     	;# 
  2294  0F22                     	;# 
  2295  0F23                     	;# 
  2296  0F24                     	;# 
  2297  0F25                     	;# 
  2298  0F26                     	;# 
  2299  0F27                     	;# 
  2300  0F28                     	;# 
  2301  0F29                     	;# 
  2302  0F2A                     	;# 
  2303  0F2B                     	;# 
  2304  0F2C                     	;# 
  2305  0F2D                     	;# 
  2306  0F2E                     	;# 
  2307  0F2F                     	;# 
  2308  0F30                     	;# 
  2309  0F31                     	;# 
  2310  0F32                     	;# 
  2311  0F33                     	;# 
  2312  0F34                     	;# 
  2313  0F35                     	;# 
  2314  0F36                     	;# 
  2315  0F37                     	;# 
  2316  0FE4                     	;# 
  2317  0FE5                     	;# 
  2318  0FE6                     	;# 
  2319  0FE7                     	;# 
  2320  0FE8                     	;# 
  2321  0FE9                     	;# 
  2322  0FEA                     	;# 
  2323  0FEB                     	;# 
  2324  0FED                     	;# 
  2325  0FEE                     	;# 
  2326  0FEF                     	;# 
  2327  0000                     	;# 
  2328  0001                     	;# 
  2329  0002                     	;# 
  2330  0003                     	;# 
  2331  0004                     	;# 
  2332  0005                     	;# 
  2333  0006                     	;# 
  2334  0007                     	;# 
  2335  0008                     	;# 
  2336  0009                     	;# 
  2337  000A                     	;# 
  2338  000B                     	;# 
  2339  000C                     	;# 
  2340  000D                     	;# 
  2341  000E                     	;# 
  2342  0010                     	;# 
  2343  0011                     	;# 
  2344  0012                     	;# 
  2345  0013                     	;# 
  2346  0014                     	;# 
  2347  0015                     	;# 
  2348  0016                     	;# 
  2349  0016                     	;# 
  2350  0017                     	;# 
  2351  0018                     	;# 
  2352  0019                     	;# 
  2353  001A                     	;# 
  2354  001A                     	;# 
  2355  001B                     	;# 
  2356  001B                     	;# 
  2357  001C                     	;# 
  2358  001D                     	;# 
  2359  001E                     	;# 
  2360  001F                     	;# 
  2361  008C                     	;# 
  2362  008D                     	;# 
  2363  008E                     	;# 
  2364  0090                     	;# 
  2365  0091                     	;# 
  2366  0092                     	;# 
  2367  0093                     	;# 
  2368  0094                     	;# 
  2369  0095                     	;# 
  2370  0096                     	;# 
  2371  0098                     	;# 
  2372  0099                     	;# 
  2373  009A                     	;# 
  2374  009B                     	;# 
  2375  009B                     	;# 
  2376  009C                     	;# 
  2377  009D                     	;# 
  2378  009E                     	;# 
  2379  009F                     	;# 
  2380  010C                     	;# 
  2381  010D                     	;# 
  2382  010E                     	;# 
  2383  0111                     	;# 
  2384  0112                     	;# 
  2385  0113                     	;# 
  2386  0114                     	;# 
  2387  0115                     	;# 
  2388  0116                     	;# 
  2389  0117                     	;# 
  2390  0118                     	;# 
  2391  0119                     	;# 
  2392  011C                     	;# 
  2393  018C                     	;# 
  2394  018D                     	;# 
  2395  018E                     	;# 
  2396  0191                     	;# 
  2397  0191                     	;# 
  2398  0192                     	;# 
  2399  0193                     	;# 
  2400  0193                     	;# 
  2401  0194                     	;# 
  2402  0195                     	;# 
  2403  0196                     	;# 
  2404  0197                     	;# 
  2405  0199                     	;# 
  2406  0199                     	;# 
  2407  0199                     	;# 
  2408  019A                     	;# 
  2409  019A                     	;# 
  2410  019A                     	;# 
  2411  019B                     	;# 
  2412  019B                     	;# 
  2413  019B                     	;# 
  2414  019B                     	;# 
  2415  019B                     	;# 
  2416  019C                     	;# 
  2417  019C                     	;# 
  2418  019C                     	;# 
  2419  019D                     	;# 
  2420  019D                     	;# 
  2421  019D                     	;# 
  2422  019E                     	;# 
  2423  019E                     	;# 
  2424  019E                     	;# 
  2425  019F                     	;# 
  2426  019F                     	;# 
  2427  019F                     	;# 
  2428  019F                     	;# 
  2429  019F                     	;# 
  2430  020C                     	;# 
  2431  020D                     	;# 
  2432  020E                     	;# 
  2433  0211                     	;# 
  2434  0211                     	;# 
  2435  0212                     	;# 
  2436  0212                     	;# 
  2437  0213                     	;# 
  2438  0213                     	;# 
  2439  0214                     	;# 
  2440  0214                     	;# 
  2441  0215                     	;# 
  2442  0215                     	;# 
  2443  0215                     	;# 
  2444  0215                     	;# 
  2445  0216                     	;# 
  2446  0216                     	;# 
  2447  0217                     	;# 
  2448  0217                     	;# 
  2449  028C                     	;# 
  2450  028D                     	;# 
  2451  028E                     	;# 
  2452  0291                     	;# 
  2453  0291                     	;# 
  2454  0292                     	;# 
  2455  0293                     	;# 
  2456  0294                     	;# 
  2457  0298                     	;# 
  2458  0298                     	;# 
  2459  0299                     	;# 
  2460  029A                     	;# 
  2461  029B                     	;# 
  2462  029E                     	;# 
  2463  030C                     	;# 
  2464  030D                     	;# 
  2465  030E                     	;# 
  2466  038C                     	;# 
  2467  038D                     	;# 
  2468  038E                     	;# 
  2469  0391                     	;# 
  2470  0392                     	;# 
  2471  0393                     	;# 
  2472  0394                     	;# 
  2473  0395                     	;# 
  2474  0396                     	;# 
  2475  0397                     	;# 
  2476  0398                     	;# 
  2477  0399                     	;# 
  2478  040E                     	;# 
  2479  0413                     	;# 
  2480  0413                     	;# 
  2481  0414                     	;# 
  2482  0414                     	;# 
  2483  0415                     	;# 
  2484  0416                     	;# 
  2485  0417                     	;# 
  2486  0418                     	;# 
  2487  041A                     	;# 
  2488  041A                     	;# 
  2489  041B                     	;# 
  2490  041B                     	;# 
  2491  041C                     	;# 
  2492  041D                     	;# 
  2493  041E                     	;# 
  2494  041F                     	;# 
  2495  0493                     	;# 
  2496  0494                     	;# 
  2497  0495                     	;# 
  2498  0496                     	;# 
  2499  049A                     	;# 
  2500  049B                     	;# 
  2501  049C                     	;# 
  2502  049D                     	;# 
  2503  058C                     	;# 
  2504  058C                     	;# 
  2505  058D                     	;# 
  2506  058E                     	;# 
  2507  058E                     	;# 
  2508  058F                     	;# 
  2509  0590                     	;# 
  2510  0590                     	;# 
  2511  0591                     	;# 
  2512  0592                     	;# 
  2513  0592                     	;# 
  2514  0593                     	;# 
  2515  0594                     	;# 
  2516  0594                     	;# 
  2517  0595                     	;# 
  2518  0596                     	;# 
  2519  0596                     	;# 
  2520  0597                     	;# 
  2521  0598                     	;# 
  2522  0599                     	;# 
  2523  059A                     	;# 
  2524  059B                     	;# 
  2525  059B                     	;# 
  2526  059C                     	;# 
  2527  059D                     	;# 
  2528  060C                     	;# 
  2529  060C                     	;# 
  2530  060D                     	;# 
  2531  060E                     	;# 
  2532  060F                     	;# 
  2533  060F                     	;# 
  2534  0610                     	;# 
  2535  0611                     	;# 
  2536  0612                     	;# 
  2537  0613                     	;# 
  2538  0614                     	;# 
  2539  0617                     	;# 
  2540  0617                     	;# 
  2541  0618                     	;# 
  2542  0619                     	;# 
  2543  061A                     	;# 
  2544  061A                     	;# 
  2545  061B                     	;# 
  2546  061C                     	;# 
  2547  0691                     	;# 
  2548  0692                     	;# 
  2549  0693                     	;# 
  2550  0694                     	;# 
  2551  0695                     	;# 
  2552  0696                     	;# 
  2553  0697                     	;# 
  2554  0699                     	;# 
  2555  069A                     	;# 
  2556  0711                     	;# 
  2557  0712                     	;# 
  2558  0713                     	;# 
  2559  0714                     	;# 
  2560  0715                     	;# 
  2561  0718                     	;# 
  2562  0718                     	;# 
  2563  0719                     	;# 
  2564  071A                     	;# 
  2565  071A                     	;# 
  2566  071B                     	;# 
  2567  071C                     	;# 
  2568  071D                     	;# 
  2569  0791                     	;# 
  2570  0791                     	;# 
  2571  0792                     	;# 
  2572  0793                     	;# 
  2573  0793                     	;# 
  2574  0794                     	;# 
  2575  0795                     	;# 
  2576  0795                     	;# 
  2577  0796                     	;# 
  2578  0797                     	;# 
  2579  0797                     	;# 
  2580  0798                     	;# 
  2581  0799                     	;# 
  2582  079A                     	;# 
  2583  080C                     	;# 
  2584  080C                     	;# 
  2585  080D                     	;# 
  2586  080E                     	;# 
  2587  080E                     	;# 
  2588  080F                     	;# 
  2589  0810                     	;# 
  2590  0810                     	;# 
  2591  0811                     	;# 
  2592  0812                     	;# 
  2593  0812                     	;# 
  2594  0813                     	;# 
  2595  0814                     	;# 
  2596  0815                     	;# 
  2597  0816                     	;# 
  2598  0817                     	;# 
  2599  0818                     	;# 
  2600  0819                     	;# 
  2601  081A                     	;# 
  2602  081A                     	;# 
  2603  081B                     	;# 
  2604  081C                     	;# 
  2605  081C                     	;# 
  2606  081D                     	;# 
  2607  088C                     	;# 
  2608  088D                     	;# 
  2609  088E                     	;# 
  2610  088F                     	;# 
  2611  088F                     	;# 
  2612  0890                     	;# 
  2613  0891                     	;# 
  2614  0892                     	;# 
  2615  0893                     	;# 
  2616  0893                     	;# 
  2617  0894                     	;# 
  2618  0895                     	;# 
  2619  0896                     	;# 
  2620  0897                     	;# 
  2621  0897                     	;# 
  2622  0898                     	;# 
  2623  0899                     	;# 
  2624  0D8C                     	;# 
  2625  0D8C                     	;# 
  2626  0D8D                     	;# 
  2627  0D8E                     	;# 
  2628  0D8F                     	;# 
  2629  0D8F                     	;# 
  2630  0D90                     	;# 
  2631  0D91                     	;# 
  2632  0D92                     	;# 
  2633  0D92                     	;# 
  2634  0D93                     	;# 
  2635  0D94                     	;# 
  2636  0D95                     	;# 
  2637  0D95                     	;# 
  2638  0D96                     	;# 
  2639  0D97                     	;# 
  2640  0D98                     	;# 
  2641  0D99                     	;# 
  2642  0D9A                     	;# 
  2643  0D9B                     	;# 
  2644  0D9C                     	;# 
  2645  0D9D                     	;# 
  2646  0D9E                     	;# 
  2647  0D9E                     	;# 
  2648  0D9F                     	;# 
  2649  0DA0                     	;# 
  2650  0DA1                     	;# 
  2651  0DA1                     	;# 
  2652  0DA2                     	;# 
  2653  0DA3                     	;# 
  2654  0DA4                     	;# 
  2655  0DA4                     	;# 
  2656  0DA5                     	;# 
  2657  0DA6                     	;# 
  2658  0DA7                     	;# 
  2659  0DA7                     	;# 
  2660  0DA8                     	;# 
  2661  0DA9                     	;# 
  2662  0DAA                     	;# 
  2663  0DAB                     	;# 
  2664  0DAC                     	;# 
  2665  0DAD                     	;# 
  2666  0DAE                     	;# 
  2667  0DAF                     	;# 
  2668  0E0F                     	;# 
  2669  0E10                     	;# 
  2670  0E11                     	;# 
  2671  0E12                     	;# 
  2672  0E13                     	;# 
  2673  0E14                     	;# 
  2674  0E15                     	;# 
  2675  0E16                     	;# 
  2676  0E17                     	;# 
  2677  0E18                     	;# 
  2678  0E19                     	;# 
  2679  0E1A                     	;# 
  2680  0E1B                     	;# 
  2681  0E1C                     	;# 
  2682  0E1D                     	;# 
  2683  0E1E                     	;# 
  2684  0E1F                     	;# 
  2685  0E20                     	;# 
  2686  0E21                     	;# 
  2687  0E22                     	;# 
  2688  0E23                     	;# 
  2689  0E24                     	;# 
  2690  0E25                     	;# 
  2691  0E26                     	;# 
  2692  0E27                     	;# 
  2693  0E28                     	;# 
  2694  0E29                     	;# 
  2695  0E2A                     	;# 
  2696  0E2B                     	;# 
  2697  0E2C                     	;# 
  2698  0E2D                     	;# 
  2699  0E2E                     	;# 
  2700  0E90                     	;# 
  2701  0E91                     	;# 
  2702  0E92                     	;# 
  2703  0E94                     	;# 
  2704  0E95                     	;# 
  2705  0E9C                     	;# 
  2706  0E9D                     	;# 
  2707  0E9E                     	;# 
  2708  0E9F                     	;# 
  2709  0EA0                     	;# 
  2710  0EA1                     	;# 
  2711  0EA2                     	;# 
  2712  0EA3                     	;# 
  2713  0EA4                     	;# 
  2714  0EA5                     	;# 
  2715  0EA6                     	;# 
  2716  0EA7                     	;# 
  2717  0F0F                     	;# 
  2718  0F10                     	;# 
  2719  0F11                     	;# 
  2720  0F12                     	;# 
  2721  0F13                     	;# 
  2722  0F14                     	;# 
  2723  0F15                     	;# 
  2724  0F16                     	;# 
  2725  0F17                     	;# 
  2726  0F18                     	;# 
  2727  0F19                     	;# 
  2728  0F1A                     	;# 
  2729  0F1B                     	;# 
  2730  0F1C                     	;# 
  2731  0F1D                     	;# 
  2732  0F1E                     	;# 
  2733  0F1F                     	;# 
  2734  0F20                     	;# 
  2735  0F21                     	;# 
  2736  0F22                     	;# 
  2737  0F23                     	;# 
  2738  0F24                     	;# 
  2739  0F25                     	;# 
  2740  0F26                     	;# 
  2741  0F27                     	;# 
  2742  0F28                     	;# 
  2743  0F29                     	;# 
  2744  0F2A                     	;# 
  2745  0F2B                     	;# 
  2746  0F2C                     	;# 
  2747  0F2D                     	;# 
  2748  0F2E                     	;# 
  2749  0F2F                     	;# 
  2750  0F30                     	;# 
  2751  0F31                     	;# 
  2752  0F32                     	;# 
  2753  0F33                     	;# 
  2754  0F34                     	;# 
  2755  0F35                     	;# 
  2756  0F36                     	;# 
  2757  0F37                     	;# 
  2758  0FE4                     	;# 
  2759  0FE5                     	;# 
  2760  0FE6                     	;# 
  2761  0FE7                     	;# 
  2762  0FE8                     	;# 
  2763  0FE9                     	;# 
  2764  0FEA                     	;# 
  2765  0FEB                     	;# 
  2766  0FED                     	;# 
  2767  0FEE                     	;# 
  2768  0FEF                     	;# 
  2769  0000                     	;# 
  2770  0001                     	;# 
  2771  0002                     	;# 
  2772  0003                     	;# 
  2773  0004                     	;# 
  2774  0005                     	;# 
  2775  0006                     	;# 
  2776  0007                     	;# 
  2777  0008                     	;# 
  2778  0009                     	;# 
  2779  000A                     	;# 
  2780  000B                     	;# 
  2781  000C                     	;# 
  2782  000D                     	;# 
  2783  000E                     	;# 
  2784  0010                     	;# 
  2785  0011                     	;# 
  2786  0012                     	;# 
  2787  0013                     	;# 
  2788  0014                     	;# 
  2789  0015                     	;# 
  2790  0016                     	;# 
  2791  0016                     	;# 
  2792  0017                     	;# 
  2793  0018                     	;# 
  2794  0019                     	;# 
  2795  001A                     	;# 
  2796  001A                     	;# 
  2797  001B                     	;# 
  2798  001B                     	;# 
  2799  001C                     	;# 
  2800  001D                     	;# 
  2801  001E                     	;# 
  2802  001F                     	;# 
  2803  008C                     	;# 
  2804  008D                     	;# 
  2805  008E                     	;# 
  2806  0090                     	;# 
  2807  0091                     	;# 
  2808  0092                     	;# 
  2809  0093                     	;# 
  2810  0094                     	;# 
  2811  0095                     	;# 
  2812  0096                     	;# 
  2813  0098                     	;# 
  2814  0099                     	;# 
  2815  009A                     	;# 
  2816  009B                     	;# 
  2817  009B                     	;# 
  2818  009C                     	;# 
  2819  009D                     	;# 
  2820  009E                     	;# 
  2821  009F                     	;# 
  2822  010C                     	;# 
  2823  010D                     	;# 
  2824  010E                     	;# 
  2825  0111                     	;# 
  2826  0112                     	;# 
  2827  0113                     	;# 
  2828  0114                     	;# 
  2829  0115                     	;# 
  2830  0116                     	;# 
  2831  0117                     	;# 
  2832  0118                     	;# 
  2833  0119                     	;# 
  2834  011C                     	;# 
  2835  018C                     	;# 
  2836  018D                     	;# 
  2837  018E                     	;# 
  2838  0191                     	;# 
  2839  0191                     	;# 
  2840  0192                     	;# 
  2841  0193                     	;# 
  2842  0193                     	;# 
  2843  0194                     	;# 
  2844  0195                     	;# 
  2845  0196                     	;# 
  2846  0197                     	;# 
  2847  0199                     	;# 
  2848  0199                     	;# 
  2849  0199                     	;# 
  2850  019A                     	;# 
  2851  019A                     	;# 
  2852  019A                     	;# 
  2853  019B                     	;# 
  2854  019B                     	;# 
  2855  019B                     	;# 
  2856  019B                     	;# 
  2857  019B                     	;# 
  2858  019C                     	;# 
  2859  019C                     	;# 
  2860  019C                     	;# 
  2861  019D                     	;# 
  2862  019D                     	;# 
  2863  019D                     	;# 
  2864  019E                     	;# 
  2865  019E                     	;# 
  2866  019E                     	;# 
  2867  019F                     	;# 
  2868  019F                     	;# 
  2869  019F                     	;# 
  2870  019F                     	;# 
  2871  019F                     	;# 
  2872  020C                     	;# 
  2873  020D                     	;# 
  2874  020E                     	;# 
  2875  0211                     	;# 
  2876  0211                     	;# 
  2877  0212                     	;# 
  2878  0212                     	;# 
  2879  0213                     	;# 
  2880  0213                     	;# 
  2881  0214                     	;# 
  2882  0214                     	;# 
  2883  0215                     	;# 
  2884  0215                     	;# 
  2885  0215                     	;# 
  2886  0215                     	;# 
  2887  0216                     	;# 
  2888  0216                     	;# 
  2889  0217                     	;# 
  2890  0217                     	;# 
  2891  028C                     	;# 
  2892  028D                     	;# 
  2893  028E                     	;# 
  2894  0291                     	;# 
  2895  0291                     	;# 
  2896  0292                     	;# 
  2897  0293                     	;# 
  2898  0294                     	;# 
  2899  0298                     	;# 
  2900  0298                     	;# 
  2901  0299                     	;# 
  2902  029A                     	;# 
  2903  029B                     	;# 
  2904  029E                     	;# 
  2905  030C                     	;# 
  2906  030D                     	;# 
  2907  030E                     	;# 
  2908  038C                     	;# 
  2909  038D                     	;# 
  2910  038E                     	;# 
  2911  0391                     	;# 
  2912  0392                     	;# 
  2913  0393                     	;# 
  2914  0394                     	;# 
  2915  0395                     	;# 
  2916  0396                     	;# 
  2917  0397                     	;# 
  2918  0398                     	;# 
  2919  0399                     	;# 
  2920  040E                     	;# 
  2921  0413                     	;# 
  2922  0413                     	;# 
  2923  0414                     	;# 
  2924  0414                     	;# 
  2925  0415                     	;# 
  2926  0416                     	;# 
  2927  0417                     	;# 
  2928  0418                     	;# 
  2929  041A                     	;# 
  2930  041A                     	;# 
  2931  041B                     	;# 
  2932  041B                     	;# 
  2933  041C                     	;# 
  2934  041D                     	;# 
  2935  041E                     	;# 
  2936  041F                     	;# 
  2937  0493                     	;# 
  2938  0494                     	;# 
  2939  0495                     	;# 
  2940  0496                     	;# 
  2941  049A                     	;# 
  2942  049B                     	;# 
  2943  049C                     	;# 
  2944  049D                     	;# 
  2945  058C                     	;# 
  2946  058C                     	;# 
  2947  058D                     	;# 
  2948  058E                     	;# 
  2949  058E                     	;# 
  2950  058F                     	;# 
  2951  0590                     	;# 
  2952  0590                     	;# 
  2953  0591                     	;# 
  2954  0592                     	;# 
  2955  0592                     	;# 
  2956  0593                     	;# 
  2957  0594                     	;# 
  2958  0594                     	;# 
  2959  0595                     	;# 
  2960  0596                     	;# 
  2961  0596                     	;# 
  2962  0597                     	;# 
  2963  0598                     	;# 
  2964  0599                     	;# 
  2965  059A                     	;# 
  2966  059B                     	;# 
  2967  059B                     	;# 
  2968  059C                     	;# 
  2969  059D                     	;# 
  2970  060C                     	;# 
  2971  060C                     	;# 
  2972  060D                     	;# 
  2973  060E                     	;# 
  2974  060F                     	;# 
  2975  060F                     	;# 
  2976  0610                     	;# 
  2977  0611                     	;# 
  2978  0612                     	;# 
  2979  0613                     	;# 
  2980  0614                     	;# 
  2981  0617                     	;# 
  2982  0617                     	;# 
  2983  0618                     	;# 
  2984  0619                     	;# 
  2985  061A                     	;# 
  2986  061A                     	;# 
  2987  061B                     	;# 
  2988  061C                     	;# 
  2989  0691                     	;# 
  2990  0692                     	;# 
  2991  0693                     	;# 
  2992  0694                     	;# 
  2993  0695                     	;# 
  2994  0696                     	;# 
  2995  0697                     	;# 
  2996  0699                     	;# 
  2997  069A                     	;# 
  2998  0711                     	;# 
  2999  0712                     	;# 
  3000  0713                     	;# 
  3001  0714                     	;# 
  3002  0715                     	;# 
  3003  0718                     	;# 
  3004  0718                     	;# 
  3005  0719                     	;# 
  3006  071A                     	;# 
  3007  071A                     	;# 
  3008  071B                     	;# 
  3009  071C                     	;# 
  3010  071D                     	;# 
  3011  0791                     	;# 
  3012  0791                     	;# 
  3013  0792                     	;# 
  3014  0793                     	;# 
  3015  0793                     	;# 
  3016  0794                     	;# 
  3017  0795                     	;# 
  3018  0795                     	;# 
  3019  0796                     	;# 
  3020  0797                     	;# 
  3021  0797                     	;# 
  3022  0798                     	;# 
  3023  0799                     	;# 
  3024  079A                     	;# 
  3025  080C                     	;# 
  3026  080C                     	;# 
  3027  080D                     	;# 
  3028  080E                     	;# 
  3029  080E                     	;# 
  3030  080F                     	;# 
  3031  0810                     	;# 
  3032  0810                     	;# 
  3033  0811                     	;# 
  3034  0812                     	;# 
  3035  0812                     	;# 
  3036  0813                     	;# 
  3037  0814                     	;# 
  3038  0815                     	;# 
  3039  0816                     	;# 
  3040  0817                     	;# 
  3041  0818                     	;# 
  3042  0819                     	;# 
  3043  081A                     	;# 
  3044  081A                     	;# 
  3045  081B                     	;# 
  3046  081C                     	;# 
  3047  081C                     	;# 
  3048  081D                     	;# 
  3049  088C                     	;# 
  3050  088D                     	;# 
  3051  088E                     	;# 
  3052  088F                     	;# 
  3053  088F                     	;# 
  3054  0890                     	;# 
  3055  0891                     	;# 
  3056  0892                     	;# 
  3057  0893                     	;# 
  3058  0893                     	;# 
  3059  0894                     	;# 
  3060  0895                     	;# 
  3061  0896                     	;# 
  3062  0897                     	;# 
  3063  0897                     	;# 
  3064  0898                     	;# 
  3065  0899                     	;# 
  3066  0D8C                     	;# 
  3067  0D8C                     	;# 
  3068  0D8D                     	;# 
  3069  0D8E                     	;# 
  3070  0D8F                     	;# 
  3071  0D8F                     	;# 
  3072  0D90                     	;# 
  3073  0D91                     	;# 
  3074  0D92                     	;# 
  3075  0D92                     	;# 
  3076  0D93                     	;# 
  3077  0D94                     	;# 
  3078  0D95                     	;# 
  3079  0D95                     	;# 
  3080  0D96                     	;# 
  3081  0D97                     	;# 
  3082  0D98                     	;# 
  3083  0D99                     	;# 
  3084  0D9A                     	;# 
  3085  0D9B                     	;# 
  3086  0D9C                     	;# 
  3087  0D9D                     	;# 
  3088  0D9E                     	;# 
  3089  0D9E                     	;# 
  3090  0D9F                     	;# 
  3091  0DA0                     	;# 
  3092  0DA1                     	;# 
  3093  0DA1                     	;# 
  3094  0DA2                     	;# 
  3095  0DA3                     	;# 
  3096  0DA4                     	;# 
  3097  0DA4                     	;# 
  3098  0DA5                     	;# 
  3099  0DA6                     	;# 
  3100  0DA7                     	;# 
  3101  0DA7                     	;# 
  3102  0DA8                     	;# 
  3103  0DA9                     	;# 
  3104  0DAA                     	;# 
  3105  0DAB                     	;# 
  3106  0DAC                     	;# 
  3107  0DAD                     	;# 
  3108  0DAE                     	;# 
  3109  0DAF                     	;# 
  3110  0E0F                     	;# 
  3111  0E10                     	;# 
  3112  0E11                     	;# 
  3113  0E12                     	;# 
  3114  0E13                     	;# 
  3115  0E14                     	;# 
  3116  0E15                     	;# 
  3117  0E16                     	;# 
  3118  0E17                     	;# 
  3119  0E18                     	;# 
  3120  0E19                     	;# 
  3121  0E1A                     	;# 
  3122  0E1B                     	;# 
  3123  0E1C                     	;# 
  3124  0E1D                     	;# 
  3125  0E1E                     	;# 
  3126  0E1F                     	;# 
  3127  0E20                     	;# 
  3128  0E21                     	;# 
  3129  0E22                     	;# 
  3130  0E23                     	;# 
  3131  0E24                     	;# 
  3132  0E25                     	;# 
  3133  0E26                     	;# 
  3134  0E27                     	;# 
  3135  0E28                     	;# 
  3136  0E29                     	;# 
  3137  0E2A                     	;# 
  3138  0E2B                     	;# 
  3139  0E2C                     	;# 
  3140  0E2D                     	;# 
  3141  0E2E                     	;# 
  3142  0E90                     	;# 
  3143  0E91                     	;# 
  3144  0E92                     	;# 
  3145  0E94                     	;# 
  3146  0E95                     	;# 
  3147  0E9C                     	;# 
  3148  0E9D                     	;# 
  3149  0E9E                     	;# 
  3150  0E9F                     	;# 
  3151  0EA0                     	;# 
  3152  0EA1                     	;# 
  3153  0EA2                     	;# 
  3154  0EA3                     	;# 
  3155  0EA4                     	;# 
  3156  0EA5                     	;# 
  3157  0EA6                     	;# 
  3158  0EA7                     	;# 
  3159  0F0F                     	;# 
  3160  0F10                     	;# 
  3161  0F11                     	;# 
  3162  0F12                     	;# 
  3163  0F13                     	;# 
  3164  0F14                     	;# 
  3165  0F15                     	;# 
  3166  0F16                     	;# 
  3167  0F17                     	;# 
  3168  0F18                     	;# 
  3169  0F19                     	;# 
  3170  0F1A                     	;# 
  3171  0F1B                     	;# 
  3172  0F1C                     	;# 
  3173  0F1D                     	;# 
  3174  0F1E                     	;# 
  3175  0F1F                     	;# 
  3176  0F20                     	;# 
  3177  0F21                     	;# 
  3178  0F22                     	;# 
  3179  0F23                     	;# 
  3180  0F24                     	;# 
  3181  0F25                     	;# 
  3182  0F26                     	;# 
  3183  0F27                     	;# 
  3184  0F28                     	;# 
  3185  0F29                     	;# 
  3186  0F2A                     	;# 
  3187  0F2B                     	;# 
  3188  0F2C                     	;# 
  3189  0F2D                     	;# 
  3190  0F2E                     	;# 
  3191  0F2F                     	;# 
  3192  0F30                     	;# 
  3193  0F31                     	;# 
  3194  0F32                     	;# 
  3195  0F33                     	;# 
  3196  0F34                     	;# 
  3197  0F35                     	;# 
  3198  0F36                     	;# 
  3199  0F37                     	;# 
  3200  0FE4                     	;# 
  3201  0FE5                     	;# 
  3202  0FE6                     	;# 
  3203  0FE7                     	;# 
  3204  0FE8                     	;# 
  3205  0FE9                     	;# 
  3206  0FEA                     	;# 
  3207  0FEB                     	;# 
  3208  0FED                     	;# 
  3209  0FEE                     	;# 
  3210  0FEF                     	;# 
  3211  0000                     	;# 
  3212  0001                     	;# 
  3213  0002                     	;# 
  3214  0003                     	;# 
  3215  0004                     	;# 
  3216  0005                     	;# 
  3217  0006                     	;# 
  3218  0007                     	;# 
  3219  0008                     	;# 
  3220  0009                     	;# 
  3221  000A                     	;# 
  3222  000B                     	;# 
  3223  000C                     	;# 
  3224  000D                     	;# 
  3225  000E                     	;# 
  3226  0010                     	;# 
  3227  0011                     	;# 
  3228  0012                     	;# 
  3229  0013                     	;# 
  3230  0014                     	;# 
  3231  0015                     	;# 
  3232  0016                     	;# 
  3233  0016                     	;# 
  3234  0017                     	;# 
  3235  0018                     	;# 
  3236  0019                     	;# 
  3237  001A                     	;# 
  3238  001A                     	;# 
  3239  001B                     	;# 
  3240  001B                     	;# 
  3241  001C                     	;# 
  3242  001D                     	;# 
  3243  001E                     	;# 
  3244  001F                     	;# 
  3245  008C                     	;# 
  3246  008D                     	;# 
  3247  008E                     	;# 
  3248  0090                     	;# 
  3249  0091                     	;# 
  3250  0092                     	;# 
  3251  0093                     	;# 
  3252  0094                     	;# 
  3253  0095                     	;# 
  3254  0096                     	;# 
  3255  0098                     	;# 
  3256  0099                     	;# 
  3257  009A                     	;# 
  3258  009B                     	;# 
  3259  009B                     	;# 
  3260  009C                     	;# 
  3261  009D                     	;# 
  3262  009E                     	;# 
  3263  009F                     	;# 
  3264  010C                     	;# 
  3265  010D                     	;# 
  3266  010E                     	;# 
  3267  0111                     	;# 
  3268  0112                     	;# 
  3269  0113                     	;# 
  3270  0114                     	;# 
  3271  0115                     	;# 
  3272  0116                     	;# 
  3273  0117                     	;# 
  3274  0118                     	;# 
  3275  0119                     	;# 
  3276  011C                     	;# 
  3277  018C                     	;# 
  3278  018D                     	;# 
  3279  018E                     	;# 
  3280  0191                     	;# 
  3281  0191                     	;# 
  3282  0192                     	;# 
  3283  0193                     	;# 
  3284  0193                     	;# 
  3285  0194                     	;# 
  3286  0195                     	;# 
  3287  0196                     	;# 
  3288  0197                     	;# 
  3289  0199                     	;# 
  3290  0199                     	;# 
  3291  0199                     	;# 
  3292  019A                     	;# 
  3293  019A                     	;# 
  3294  019A                     	;# 
  3295  019B                     	;# 
  3296  019B                     	;# 
  3297  019B                     	;# 
  3298  019B                     	;# 
  3299  019B                     	;# 
  3300  019C                     	;# 
  3301  019C                     	;# 
  3302  019C                     	;# 
  3303  019D                     	;# 
  3304  019D                     	;# 
  3305  019D                     	;# 
  3306  019E                     	;# 
  3307  019E                     	;# 
  3308  019E                     	;# 
  3309  019F                     	;# 
  3310  019F                     	;# 
  3311  019F                     	;# 
  3312  019F                     	;# 
  3313  019F                     	;# 
  3314  020C                     	;# 
  3315  020D                     	;# 
  3316  020E                     	;# 
  3317  0211                     	;# 
  3318  0211                     	;# 
  3319  0212                     	;# 
  3320  0212                     	;# 
  3321  0213                     	;# 
  3322  0213                     	;# 
  3323  0214                     	;# 
  3324  0214                     	;# 
  3325  0215                     	;# 
  3326  0215                     	;# 
  3327  0215                     	;# 
  3328  0215                     	;# 
  3329  0216                     	;# 
  3330  0216                     	;# 
  3331  0217                     	;# 
  3332  0217                     	;# 
  3333  028C                     	;# 
  3334  028D                     	;# 
  3335  028E                     	;# 
  3336  0291                     	;# 
  3337  0291                     	;# 
  3338  0292                     	;# 
  3339  0293                     	;# 
  3340  0294                     	;# 
  3341  0298                     	;# 
  3342  0298                     	;# 
  3343  0299                     	;# 
  3344  029A                     	;# 
  3345  029B                     	;# 
  3346  029E                     	;# 
  3347  030C                     	;# 
  3348  030D                     	;# 
  3349  030E                     	;# 
  3350  038C                     	;# 
  3351  038D                     	;# 
  3352  038E                     	;# 
  3353  0391                     	;# 
  3354  0392                     	;# 
  3355  0393                     	;# 
  3356  0394                     	;# 
  3357  0395                     	;# 
  3358  0396                     	;# 
  3359  0397                     	;# 
  3360  0398                     	;# 
  3361  0399                     	;# 
  3362  040E                     	;# 
  3363  0413                     	;# 
  3364  0413                     	;# 
  3365  0414                     	;# 
  3366  0414                     	;# 
  3367  0415                     	;# 
  3368  0416                     	;# 
  3369  0417                     	;# 
  3370  0418                     	;# 
  3371  041A                     	;# 
  3372  041A                     	;# 
  3373  041B                     	;# 
  3374  041B                     	;# 
  3375  041C                     	;# 
  3376  041D                     	;# 
  3377  041E                     	;# 
  3378  041F                     	;# 
  3379  0493                     	;# 
  3380  0494                     	;# 
  3381  0495                     	;# 
  3382  0496                     	;# 
  3383  049A                     	;# 
  3384  049B                     	;# 
  3385  049C                     	;# 
  3386  049D                     	;# 
  3387  058C                     	;# 
  3388  058C                     	;# 
  3389  058D                     	;# 
  3390  058E                     	;# 
  3391  058E                     	;# 
  3392  058F                     	;# 
  3393  0590                     	;# 
  3394  0590                     	;# 
  3395  0591                     	;# 
  3396  0592                     	;# 
  3397  0592                     	;# 
  3398  0593                     	;# 
  3399  0594                     	;# 
  3400  0594                     	;# 
  3401  0595                     	;# 
  3402  0596                     	;# 
  3403  0596                     	;# 
  3404  0597                     	;# 
  3405  0598                     	;# 
  3406  0599                     	;# 
  3407  059A                     	;# 
  3408  059B                     	;# 
  3409  059B                     	;# 
  3410  059C                     	;# 
  3411  059D                     	;# 
  3412  060C                     	;# 
  3413  060C                     	;# 
  3414  060D                     	;# 
  3415  060E                     	;# 
  3416  060F                     	;# 
  3417  060F                     	;# 
  3418  0610                     	;# 
  3419  0611                     	;# 
  3420  0612                     	;# 
  3421  0613                     	;# 
  3422  0614                     	;# 
  3423  0617                     	;# 
  3424  0617                     	;# 
  3425  0618                     	;# 
  3426  0619                     	;# 
  3427  061A                     	;# 
  3428  061A                     	;# 
  3429  061B                     	;# 
  3430  061C                     	;# 
  3431  0691                     	;# 
  3432  0692                     	;# 
  3433  0693                     	;# 
  3434  0694                     	;# 
  3435  0695                     	;# 
  3436  0696                     	;# 
  3437  0697                     	;# 
  3438  0699                     	;# 
  3439  069A                     	;# 
  3440  0711                     	;# 
  3441  0712                     	;# 
  3442  0713                     	;# 
  3443  0714                     	;# 
  3444  0715                     	;# 
  3445  0718                     	;# 
  3446  0718                     	;# 
  3447  0719                     	;# 
  3448  071A                     	;# 
  3449  071A                     	;# 
  3450  071B                     	;# 
  3451  071C                     	;# 
  3452  071D                     	;# 
  3453  0791                     	;# 
  3454  0791                     	;# 
  3455  0792                     	;# 
  3456  0793                     	;# 
  3457  0793                     	;# 
  3458  0794                     	;# 
  3459  0795                     	;# 
  3460  0795                     	;# 
  3461  0796                     	;# 
  3462  0797                     	;# 
  3463  0797                     	;# 
  3464  0798                     	;# 
  3465  0799                     	;# 
  3466  079A                     	;# 
  3467  080C                     	;# 
  3468  080C                     	;# 
  3469  080D                     	;# 
  3470  080E                     	;# 
  3471  080E                     	;# 
  3472  080F                     	;# 
  3473  0810                     	;# 
  3474  0810                     	;# 
  3475  0811                     	;# 
  3476  0812                     	;# 
  3477  0812                     	;# 
  3478  0813                     	;# 
  3479  0814                     	;# 
  3480  0815                     	;# 
  3481  0816                     	;# 
  3482  0817                     	;# 
  3483  0818                     	;# 
  3484  0819                     	;# 
  3485  081A                     	;# 
  3486  081A                     	;# 
  3487  081B                     	;# 
  3488  081C                     	;# 
  3489  081C                     	;# 
  3490  081D                     	;# 
  3491  088C                     	;# 
  3492  088D                     	;# 
  3493  088E                     	;# 
  3494  088F                     	;# 
  3495  088F                     	;# 
  3496  0890                     	;# 
  3497  0891                     	;# 
  3498  0892                     	;# 
  3499  0893                     	;# 
  3500  0893                     	;# 
  3501  0894                     	;# 
  3502  0895                     	;# 
  3503  0896                     	;# 
  3504  0897                     	;# 
  3505  0897                     	;# 
  3506  0898                     	;# 
  3507  0899                     	;# 
  3508  0D8C                     	;# 
  3509  0D8C                     	;# 
  3510  0D8D                     	;# 
  3511  0D8E                     	;# 
  3512  0D8F                     	;# 
  3513  0D8F                     	;# 
  3514  0D90                     	;# 
  3515  0D91                     	;# 
  3516  0D92                     	;# 
  3517  0D92                     	;# 
  3518  0D93                     	;# 
  3519  0D94                     	;# 
  3520  0D95                     	;# 
  3521  0D95                     	;# 
  3522  0D96                     	;# 
  3523  0D97                     	;# 
  3524  0D98                     	;# 
  3525  0D99                     	;# 
  3526  0D9A                     	;# 
  3527  0D9B                     	;# 
  3528  0D9C                     	;# 
  3529  0D9D                     	;# 
  3530  0D9E                     	;# 
  3531  0D9E                     	;# 
  3532  0D9F                     	;# 
  3533  0DA0                     	;# 
  3534  0DA1                     	;# 
  3535  0DA1                     	;# 
  3536  0DA2                     	;# 
  3537  0DA3                     	;# 
  3538  0DA4                     	;# 
  3539  0DA4                     	;# 
  3540  0DA5                     	;# 
  3541  0DA6                     	;# 
  3542  0DA7                     	;# 
  3543  0DA7                     	;# 
  3544  0DA8                     	;# 
  3545  0DA9                     	;# 
  3546  0DAA                     	;# 
  3547  0DAB                     	;# 
  3548  0DAC                     	;# 
  3549  0DAD                     	;# 
  3550  0DAE                     	;# 
  3551  0DAF                     	;# 
  3552  0E0F                     	;# 
  3553  0E10                     	;# 
  3554  0E11                     	;# 
  3555  0E12                     	;# 
  3556  0E13                     	;# 
  3557  0E14                     	;# 
  3558  0E15                     	;# 
  3559  0E16                     	;# 
  3560  0E17                     	;# 
  3561  0E18                     	;# 
  3562  0E19                     	;# 
  3563  0E1A                     	;# 
  3564  0E1B                     	;# 
  3565  0E1C                     	;# 
  3566  0E1D                     	;# 
  3567  0E1E                     	;# 
  3568  0E1F                     	;# 
  3569  0E20                     	;# 
  3570  0E21                     	;# 
  3571  0E22                     	;# 
  3572  0E23                     	;# 
  3573  0E24                     	;# 
  3574  0E25                     	;# 
  3575  0E26                     	;# 
  3576  0E27                     	;# 
  3577  0E28                     	;# 
  3578  0E29                     	;# 
  3579  0E2A                     	;# 
  3580  0E2B                     	;# 
  3581  0E2C                     	;# 
  3582  0E2D                     	;# 
  3583  0E2E                     	;# 
  3584  0E90                     	;# 
  3585  0E91                     	;# 
  3586  0E92                     	;# 
  3587  0E94                     	;# 
  3588  0E95                     	;# 
  3589  0E9C                     	;# 
  3590  0E9D                     	;# 
  3591  0E9E                     	;# 
  3592  0E9F                     	;# 
  3593  0EA0                     	;# 
  3594  0EA1                     	;# 
  3595  0EA2                     	;# 
  3596  0EA3                     	;# 
  3597  0EA4                     	;# 
  3598  0EA5                     	;# 
  3599  0EA6                     	;# 
  3600  0EA7                     	;# 
  3601  0F0F                     	;# 
  3602  0F10                     	;# 
  3603  0F11                     	;# 
  3604  0F12                     	;# 
  3605  0F13                     	;# 
  3606  0F14                     	;# 
  3607  0F15                     	;# 
  3608  0F16                     	;# 
  3609  0F17                     	;# 
  3610  0F18                     	;# 
  3611  0F19                     	;# 
  3612  0F1A                     	;# 
  3613  0F1B                     	;# 
  3614  0F1C                     	;# 
  3615  0F1D                     	;# 
  3616  0F1E                     	;# 
  3617  0F1F                     	;# 
  3618  0F20                     	;# 
  3619  0F21                     	;# 
  3620  0F22                     	;# 
  3621  0F23                     	;# 
  3622  0F24                     	;# 
  3623  0F25                     	;# 
  3624  0F26                     	;# 
  3625  0F27                     	;# 
  3626  0F28                     	;# 
  3627  0F29                     	;# 
  3628  0F2A                     	;# 
  3629  0F2B                     	;# 
  3630  0F2C                     	;# 
  3631  0F2D                     	;# 
  3632  0F2E                     	;# 
  3633  0F2F                     	;# 
  3634  0F30                     	;# 
  3635  0F31                     	;# 
  3636  0F32                     	;# 
  3637  0F33                     	;# 
  3638  0F34                     	;# 
  3639  0F35                     	;# 
  3640  0F36                     	;# 
  3641  0F37                     	;# 
  3642  0FE4                     	;# 
  3643  0FE5                     	;# 
  3644  0FE6                     	;# 
  3645  0FE7                     	;# 
  3646  0FE8                     	;# 
  3647  0FE9                     	;# 
  3648  0FEA                     	;# 
  3649  0FEB                     	;# 
  3650  0FED                     	;# 
  3651  0FEE                     	;# 
  3652  0FEF                     	;# 
  3653                           
  3654 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  3655  0000                     
  3656 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  3657  0000                     
  3658 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  3659  0000                     
  3660                           	psect	idataBANK0
  3661  146D                     __pidataBANK0:	
  3662                           
  3663                           ;initializer for _IBI
  3664  146D  3458               	retlw	88
  3665  146E  3402               	retlw	2
  3666                           
  3667                           ;initializer for _thresh
  3668  146F  3412               	retlw	18
  3669  1470  3402               	retlw	2
  3670                           
  3671                           ;initializer for _T
  3672  1471  3400               	retlw	0
  3673  1472  3402               	retlw	2
  3674                           
  3675                           ;initializer for _firstBeat
  3676  1473  3401               	retlw	1
  3677                           
  3678                           	psect	idataBANK2
  3679  07FE                     __pidataBANK2:	
  3680                           
  3681                           ;initializer for _P
  3682  07FE  3400               	retlw	0
  3683  07FF  3402               	retlw	2
  3684                           
  3685                           	psect	idataBANK3
  3686  15BF                     __pidataBANK3:	
  3687                           
  3688                           ;initializer for _hrDisp
  3689  15BF  3448               	retlw	72
  3690  15C0  3465               	retlw	101
  3691  15C1  3461               	retlw	97
  3692  15C2  3472               	retlw	114
  3693  15C3  3474               	retlw	116
  3694  15C4  3420               	retlw	32
  3695  15C5  3452               	retlw	82
  3696  15C6  3461               	retlw	97
  3697  15C7  3474               	retlw	116
  3698  15C8  3465               	retlw	101
  3699  15C9  343A               	retlw	58
  3700  15CA  3420               	retlw	32
  3701  15CB  3400               	retlw	0
  3702                           
  3703                           ;initializer for _distanceDisp
  3704  15CC  3444               	retlw	68
  3705  15CD  3469               	retlw	105
  3706  15CE  3473               	retlw	115
  3707  15CF  3474               	retlw	116
  3708  15D0  3461               	retlw	97
  3709  15D1  346E               	retlw	110
  3710  15D2  3463               	retlw	99
  3711  15D3  3465               	retlw	101
  3712  15D4  343A               	retlw	58
  3713  15D5  3420               	retlw	32
  3714  15D6  3400               	retlw	0
  3715                           
  3716                           ;initializer for _speedDisp
  3717  15D7  3453               	retlw	83
  3718  15D8  3470               	retlw	112
  3719  15D9  3465               	retlw	101
  3720  15DA  3465               	retlw	101
  3721  15DB  3464               	retlw	100
  3722  15DC  343A               	retlw	58
  3723  15DD  3420               	retlw	32
  3724  15DE  3400               	retlw	0
  3725                           
  3726                           	psect	nvBANK2
  3727  015D                     __pnvBANK2:	
  3728  015D                     _TMR0_InterruptHandler:	
  3729  015D                     	ds	2
  3730  015F                     _IOCCF7_InterruptHandler:	
  3731  015F                     	ds	2
  3732  0161                     _EUSART_ErrorHandler:	
  3733  0161                     	ds	2
  3734  0163                     _EUSART_OverrunErrorHandler:	
  3735  0163                     	ds	2
  3736  0165                     _EUSART_FramingErrorHandler:	
  3737  0165                     	ds	2
  3738  0167                     _timer0ReloadVal:	
  3739  0167                     	ds	1
  3740  0015                     _TMR0	set	21
  3741  000B                     _INTCONbits	set	11
  3742  0010                     _PIR1bits	set	16
  3743  009D                     _ADCON0bits	set	157
  3744  009C                     _ADRESH	set	156
  3745  009B                     _ADRESL	set	155
  3746  009F                     _ADCON2	set	159
  3747  009E                     _ADCON1	set	158
  3748  009D                     _ADCON0	set	157
  3749  0095                     _OPTION_REG	set	149
  3750  0095                     _OPTION_REGbits	set	149
  3751  008E                     _TRISC	set	142
  3752  008D                     _TRISB	set	141
  3753  008C                     _TRISA	set	140
  3754  0098                     _OSCTUNE	set	152
  3755  0099                     _OSCCON	set	153
  3756  010E                     _LATC	set	270
  3757  010D                     _LATB	set	269
  3758  010C                     _LATA	set	268
  3759  0116                     _BORCON	set	278
  3760  018C                     _ANSELA	set	396
  3761  018D                     _ANSELB	set	397
  3762  018E                     _ANSELC	set	398
  3763  019A                     _TX1REG	set	410
  3764  0199                     _RC1REG	set	409
  3765  019D                     _RC1STAbits	set	413
  3766  019E                     _TX1STAbits	set	414
  3767  019C                     _SPBRGH	set	412
  3768  019B                     _SPBRGL	set	411
  3769  019E                     _TX1STA	set	414
  3770  019D                     _RC1STA	set	413
  3771  019F                     _BAUD1CON	set	415
  3772  020E                     _WPUC	set	526
  3773  020C                     _WPUA	set	524
  3774  020D                     _WPUB	set	525
  3775  028E                     _ODCONC	set	654
  3776  028D                     _ODCONB	set	653
  3777  028C                     _ODCONA	set	652
  3778  030E                     _SLRCONC	set	782
  3779  030D                     _SLRCONB	set	781
  3780  030C                     _SLRCONA	set	780
  3781  0397                     _IOCCPbits	set	919
  3782  0398                     _IOCCNbits	set	920
  3783  0399                     _IOCCFbits	set	921
  3784  0E9F                     _RB7PPS	set	3743
  3785                           
  3786                           	psect	stringtext1
  3787  1800                     __pstringtext1:	
  3788  1800                     STR_1:	
  3789  1800  3425               	retlw	37	;'%'
  3790  1801  3464               	retlw	100	;'d'
  3791  1802  342E               	retlw	46	;'.'
  3792  1803  3425               	retlw	37	;'%'
  3793  1804  3464               	retlw	100	;'d'
  3794  1805  3420               	retlw	32	;' '
  3795  1806  346B               	retlw	107	;'k'
  3796  1807  3470               	retlw	112	;'p'
  3797  1808  3468               	retlw	104	;'h'
  3798  1809  3420               	retlw	32	;' '
  3799  180A  3420               	retlw	32	;' '
  3800  180B  3420               	retlw	32	;' '
  3801  180C  3420               	retlw	32	;' '
  3802  180D  3420               	retlw	32	;' '
  3803  180E  3400               	retlw	0
  3804                           
  3805                           	psect	stringtext2
  3806  180F                     __pstringtext2:	
  3807  180F                     STR_2:	
  3808  180F  3430               	retlw	48	;'0'
  3809  1810  3420               	retlw	32	;' '
  3810  1811  346B               	retlw	107	;'k'
  3811  1812  3470               	retlw	112	;'p'
  3812  1813  3468               	retlw	104	;'h'
  3813  1814  3420               	retlw	32	;' '
  3814  1815  3420               	retlw	32	;' '
  3815  1816  3420               	retlw	32	;' '
  3816  1817  3420               	retlw	32	;' '
  3817  1818  3420               	retlw	32	;' '
  3818  1819  3420               	retlw	32	;' '
  3819  181A  3420               	retlw	32	;' '
  3820  181B  3420               	retlw	32	;' '
  3821  181C  3400               	retlw	0
  3822                           
  3823                           	psect	stringtext3
  3824  181D                     __pstringtext3:	
  3825  181D                     STR_4:	
  3826  181D  3425               	retlw	37	;'%'
  3827  181E  3464               	retlw	100	;'d'
  3828  181F  3420               	retlw	32	;' '
  3829  1820  3462               	retlw	98	;'b'
  3830  1821  3470               	retlw	112	;'p'
  3831  1822  346D               	retlw	109	;'m'
  3832  1823  3420               	retlw	32	;' '
  3833  1824  3420               	retlw	32	;' '
  3834  1825  3420               	retlw	32	;' '
  3835  1826  3400               	retlw	0
  3836                           
  3837                           	psect	stringtext4
  3838  1827                     __pstringtext4:	
  3839  1827                     STR_3:	
  3840  1827  3425               	retlw	37	;'%'
  3841  1828  3464               	retlw	100	;'d'
  3842  1829  342E               	retlw	46	;'.'
  3843  182A  3425               	retlw	37	;'%'
  3844  182B  3464               	retlw	100	;'d'
  3845  182C  3420               	retlw	32	;' '
  3846  182D  346B               	retlw	107	;'k'
  3847  182E  346D               	retlw	109	;'m'
  3848  182F  3400               	retlw	0
  3849                           
  3850                           	psect	stringtext5
  3851  1830                     __pstringtext5:	
  3852  1830                     STR_5:	
  3853  1830  347C               	retlw	124	;'|'
  3854  1831  342D               	retlw	45	;'-'
  3855  1832  3400               	retlw	0
  3856                           
  3857                           	psect	stringtext6
  3858  0000                     __pstringtext6:	
  3859                           
  3860                           ; #config settings
  3861  0000                     
  3862                           	psect	cinit
  3863  0016                     start_initialization:	
  3864  0016                     __initialization:	
  3865                           
  3866                           ; Initialize objects allocated to BANK0
  3867  0016  306D               	movlw	low __pidataBANK0
  3868  0017  0084               	movwf	4
  3869  0018  3094               	movlw	(high __pidataBANK0)| (0+128)
  3870  0019  0085               	movwf	5
  3871  001A  3069               	movlw	low __pdataBANK0
  3872  001B  0086               	movwf	6
  3873  001C  3000               	movlw	high __pdataBANK0
  3874  001D  0087               	movwf	7
  3875  001E  3007               	movlw	7
  3876  001F  3194  2460  3180   	fcall	init_ram
  3877                           
  3878                           ; Initialize objects allocated to BANK2
  3879  0022  0022               	movlb	2	; select bank2
  3880  0023  3187  27FE  3180   	fcall	__pidataBANK2	;fetch initializer
  3881  0026  00E8               	movwf	__pdataBANK2& (0+127)
  3882  0027  3187  27FF  3180   	fcall	__pidataBANK2+1	;fetch initializer
  3883  002A  00E9               	movwf	(__pdataBANK2+1)& (0+127)
  3884                           
  3885                           ; Initialize objects allocated to BANK3
  3886  002B  30BF               	movlw	low __pidataBANK3
  3887  002C  0084               	movwf	4
  3888  002D  3095               	movlw	(high __pidataBANK3)| (0+128)
  3889  002E  0085               	movwf	5
  3890  002F  30A0               	movlw	low __pdataBANK3
  3891  0030  0086               	movwf	6
  3892  0031  3001               	movlw	high __pdataBANK3
  3893  0032  0087               	movwf	7
  3894  0033  3020               	movlw	32
  3895  0034  3194  2460  3180   	fcall	init_ram
  3896                           
  3897                           ; Clear objects allocated to BANK0
  3898  0037  305C               	movlw	low __pbssBANK0
  3899  0038  0084               	movwf	4
  3900  0039  3000               	movlw	high __pbssBANK0
  3901  003A  0085               	movwf	5
  3902  003B  300D               	movlw	13
  3903  003C  3194  245A  3180   	fcall	clear_ram0
  3904                           
  3905                           ; Clear objects allocated to BANK2
  3906  003F  3020               	movlw	low __pbssBANK2
  3907  0040  0084               	movwf	4
  3908  0041  3001               	movlw	high __pbssBANK2
  3909  0042  0085               	movwf	5
  3910  0043  302F               	movlw	47
  3911  0044  3194  245A  3180   	fcall	clear_ram0
  3912                           
  3913                           ; Clear objects allocated to BANK3
  3914  0047  30C0               	movlw	low __pbssBANK3
  3915  0048  0084               	movwf	4
  3916  0049  3001               	movlw	high __pbssBANK3
  3917  004A  0085               	movwf	5
  3918  004B  3014               	movlw	20
  3919  004C  3194  245A  3180   	fcall	clear_ram0
  3920                           
  3921                           ; Clear objects allocated to BANK4
  3922  004F  3020               	movlw	low __pbssBANK4
  3923  0050  0084               	movwf	4
  3924  0051  3002               	movlw	high __pbssBANK4
  3925  0052  0085               	movwf	5
  3926  0053  3020               	movlw	32
  3927  0054  3194  245A         	fcall	clear_ram0
  3928  0056                     end_of_initialization:	
  3929                           ;End of C runtime variable initialization code
  3930                           
  3931  0056                     __end_of__initialization:	
  3932  0056  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3933  0057  0020               	movlb	0
  3934  0058  318B  2BCC         	ljmp	_main	;jump to C main() function
  3935                           
  3936                           	psect	bssBANK0
  3937  005C                     __pbssBANK0:	
  3938  005C                     _sampleCounter:	
  3939  005C                     	ds	4
  3940  0060                     _flags:	
  3941  0060                     	ds	2
  3942  0062                     _Signal:	
  3943  0062                     	ds	2
  3944  0064                     _distance:	
  3945  0064                     	ds	2
  3946  0066                     _Pulse:	
  3947  0066                     	ds	1
  3948  0067                     _secondBeat:	
  3949  0067                     	ds	1
  3950  0068                     _eusartRxLastError:	
  3951  0068                     	ds	1
  3952                           
  3953                           	psect	dataBANK0
  3954  0069                     __pdataBANK0:	
  3955  0069                     _IBI:	
  3956  0069                     	ds	2
  3957  006B                     _thresh:	
  3958  006B                     	ds	2
  3959  006D                     _T:	
  3960  006D                     	ds	2
  3961  006F                     _firstBeat:	
  3962  006F                     	ds	1
  3963                           
  3964                           	psect	bssBANK2
  3965  0120                     __pbssBANK2:	
  3966  0120                     _lastBeatTime:	
  3967  0120                     	ds	4
  3968  0124                     _adcCounter:	
  3969  0124                     	ds	4
  3970  0128                     _heartRate:	
  3971  0128                     	ds	4
  3972  012C                     _speed:	
  3973  012C                     	ds	4
  3974  0130                     _nout:	
  3975  0130                     	ds	2
  3976  0132                     _width:	
  3977  0132                     	ds	2
  3978  0134                     _prec:	
  3979  0134                     	ds	2
  3980  0136                     _BPM:	
  3981  0136                     	ds	2
  3982  0138                     _amp:	
  3983  0138                     	ds	2
  3984  013A                     _adcVal:	
  3985  013A                     	ds	2
  3986  013C                     _hrInt:	
  3987  013C                     	ds	2
  3988  013E                     _speedHi:	
  3989  013E                     	ds	2
  3990  0140                     _speedLo:	
  3991  0140                     	ds	2
  3992  0142                     _distLo:	
  3993  0142                     	ds	2
  3994  0144                     _distHi:	
  3995  0144                     	ds	2
  3996  0146                     _QS:	
  3997  0146                     	ds	1
  3998  0147                     _rpm:	
  3999  0147                     	ds	4
  4000  014B                     _counter:	
  4001  014B                     	ds	4
  4002                           
  4003                           	psect	dataBANK2
  4004  0168                     __pdataBANK2:	
  4005  0168                     _P:	
  4006  0168                     	ds	2
  4007                           
  4008                           	psect	bssBANK3
  4009  01C0                     __pbssBANK3:	
  4010  01C0                     _rate:	
  4011  01C0                     	ds	20
  4012                           
  4013                           	psect	dataBANK3
  4014  01A0                     __pdataBANK3:	
  4015  01A0                     _hrDisp:	
  4016  01A0                     	ds	13
  4017  01AD                     _distanceDisp:	
  4018  01AD                     	ds	11
  4019  01B8                     _speedDisp:	
  4020  01B8                     	ds	8
  4021                           
  4022                           	psect	bssBANK4
  4023  0220                     __pbssBANK4:	
  4024  0220                     _dbuf:	
  4025  0220                     	ds	32
  4026                           
  4027                           	psect	inittext
  4028  1460                     init_ram:	
  4029  1460  00FE               	movwf	126
  4030  1461                     initloop:	
  4031  1461  0012               	moviw fsr0++
  4032  1462  001E               	movwi fsr1++
  4033  1463  0BFE               	decfsz	126,f
  4034  1464  2C61               	goto	initloop
  4035  1465  3400               	retlw	0
  4036                           
  4037                           	psect	clrtext
  4038  145A                     clear_ram0:	
  4039                           ;	Called with FSR0 containing the base address, and
  4040                           ;	WREG with the size to clear
  4041                           
  4042  145A  0064               	clrwdt	;clear the watchdog before getting into this loop
  4043  145B                     clrloop0:	
  4044  145B  0180               	clrf	0	;clear RAM location pointed to by FSR
  4045  145C  3101               	addfsr 0,1
  4046  145D  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  4047  145E  2C5B               	goto	clrloop0	;have we reached the end yet?
  4048  145F  3400               	retlw	0	;all done for this memory range, return
  4049                           
  4050                           	psect	cstackBANK2
  4051  014F                     __pcstackBANK2:	
  4052  014F                     vfprintf@fp:	
  4053                           
  4054                           ; 1 bytes @ 0x0
  4055  014F                     	ds	1
  4056  0150                     vfprintf@cfmt:	
  4057                           
  4058                           ; 2 bytes @ 0x1
  4059  0150                     	ds	2
  4060  0152                     ?_printf:	
  4061  0152                     printf@fmt:	
  4062                           ; 2 bytes @ 0x3
  4063                           
  4064                           
  4065                           ; 2 bytes @ 0x3
  4066  0152                     	ds	8
  4067  015A                     printf@ap:	
  4068                           
  4069                           ; 1 bytes @ 0xB
  4070  015A                     	ds	1
  4071  015B                     ??_main:	
  4072                           
  4073                           ; 1 bytes @ 0xC
  4074  015B                     	ds	2
  4075                           
  4076                           	psect	cstackBANK1
  4077  00A0                     __pcstackBANK1:	
  4078  00A0                     ?___flge:	
  4079  00A0                     ?_EUSART_SetFramingErrorHandler:	
  4080                           ; 1 bit 
  4081                           
  4082  00A0                     ?_EUSART_SetOverrunErrorHandler:	
  4083                           ; 1 bytes @ 0x0
  4084                           
  4085  00A0                     ?_EUSART_SetErrorHandler:	
  4086                           ; 1 bytes @ 0x0
  4087                           
  4088  00A0                     ??_OSCILLATOR_Initialize:	
  4089                           ; 1 bytes @ 0x0
  4090                           
  4091  00A0                     ??_ADC_Initialize:	
  4092                           ; 1 bytes @ 0x0
  4093                           
  4094  00A0                     ?_IOCCF7_SetInterruptHandler:	
  4095                           ; 1 bytes @ 0x0
  4096                           
  4097  00A0                     ?_TMR0_SetInterruptHandler:	
  4098                           ; 1 bytes @ 0x0
  4099                           
  4100  00A0                     ??_ADC_StartConversion:	
  4101                           ; 1 bytes @ 0x0
  4102                           
  4103  00A0                     ??_EUSART_is_tx_ready:	
  4104                           ; 1 bytes @ 0x0
  4105                           
  4106  00A0                     ??_EUSART_Write:	
  4107                           ; 1 bytes @ 0x0
  4108                           
  4109  00A0                     ?_ADC_GetConversionResult:	
  4110                           ; 1 bytes @ 0x0
  4111                           
  4112  00A0                     ?_strlen:	
  4113                           ; 2 bytes @ 0x0
  4114                           
  4115  00A0                     ?___awdiv:	
  4116                           ; 2 bytes @ 0x0
  4117                           
  4118  00A0                     ?___lwdiv:	
  4119                           ; 2 bytes @ 0x0
  4120                           
  4121  00A0                     ?___aldiv:	
  4122                           ; 2 bytes @ 0x0
  4123                           
  4124  00A0                     ?___aodiv:	
  4125                           ; 4 bytes @ 0x0
  4126                           
  4127  00A0                     ?___aomod:	
  4128                           ; 8 bytes @ 0x0
  4129                           
  4130  00A0                     _EUSART_is_tx_ready$167:	
  4131                           ; 8 bytes @ 0x0
  4132                           
  4133  00A0                     EUSART_Write@txData:	
  4134                           ; 1 bytes @ 0x0
  4135                           
  4136  00A0                     EUSART_SetFramingErrorHandler@interruptHandler:	
  4137                           ; 1 bytes @ 0x0
  4138                           
  4139  00A0                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  4140                           ; 2 bytes @ 0x0
  4141                           
  4142  00A0                     EUSART_SetErrorHandler@interruptHandler:	
  4143                           ; 2 bytes @ 0x0
  4144                           
  4145  00A0                     IOCCF7_SetInterruptHandler@InterruptHandler:	
  4146                           ; 2 bytes @ 0x0
  4147                           
  4148  00A0                     TMR0_SetInterruptHandler@InterruptHandler:	
  4149                           ; 2 bytes @ 0x0
  4150                           
  4151  00A0                     ___awdiv@divisor:	
  4152                           ; 2 bytes @ 0x0
  4153                           
  4154  00A0                     ___lwdiv@divisor:	
  4155                           ; 2 bytes @ 0x0
  4156                           
  4157  00A0                     ___aldiv@divisor:	
  4158                           ; 2 bytes @ 0x0
  4159                           
  4160  00A0                     ___flge@ff1:	
  4161                           ; 4 bytes @ 0x0
  4162                           
  4163  00A0                     ___aodiv@divisor:	
  4164                           ; 4 bytes @ 0x0
  4165                           
  4166  00A0                     ___aomod@divisor:	
  4167                           ; 8 bytes @ 0x0
  4168                           
  4169                           
  4170                           ; 8 bytes @ 0x0
  4171  00A0                     	ds	1
  4172  00A1                     ?_setCursor:	
  4173  00A1                     ??_putch:	
  4174                           ; 1 bytes @ 0x1
  4175                           
  4176  00A1                     putch@txData:	
  4177                           ; 1 bytes @ 0x1
  4178                           
  4179  00A1                     setCursor@b:	
  4180                           ; 1 bytes @ 0x1
  4181                           
  4182                           
  4183                           ; 1 bytes @ 0x1
  4184  00A1                     	ds	1
  4185  00A2                     ??_EUSART_SetFramingErrorHandler:	
  4186  00A2                     ??_EUSART_SetOverrunErrorHandler:	
  4187                           ; 1 bytes @ 0x2
  4188                           
  4189  00A2                     ??_EUSART_SetErrorHandler:	
  4190                           ; 1 bytes @ 0x2
  4191                           
  4192  00A2                     ??_PIN_MANAGER_Initialize:	
  4193                           ; 1 bytes @ 0x2
  4194                           
  4195  00A2                     ??_TMR0_Initialize:	
  4196                           ; 1 bytes @ 0x2
  4197                           
  4198  00A2                     ??_IOCCF7_SetInterruptHandler:	
  4199                           ; 1 bytes @ 0x2
  4200                           
  4201  00A2                     ??_TMR0_SetInterruptHandler:	
  4202                           ; 1 bytes @ 0x2
  4203                           
  4204  00A2                     ??_setCursor:	
  4205                           ; 1 bytes @ 0x2
  4206                           
  4207  00A2                     ??_ADC_GetConversionResult:	
  4208                           ; 1 bytes @ 0x2
  4209                           
  4210  00A2                     ??_strlen:	
  4211                           ; 1 bytes @ 0x2
  4212                           
  4213  00A2                     ??_EUSART_Initialize:	
  4214                           ; 1 bytes @ 0x2
  4215                           
  4216  00A2                     ?_fputc:	
  4217                           ; 1 bytes @ 0x2
  4218                           
  4219  00A2                     ___awdiv@dividend:	
  4220                           ; 2 bytes @ 0x2
  4221                           
  4222  00A2                     ___lwdiv@dividend:	
  4223                           ; 2 bytes @ 0x2
  4224                           
  4225  00A2                     fputc@c:	
  4226                           ; 2 bytes @ 0x2
  4227                           
  4228                           
  4229                           ; 2 bytes @ 0x2
  4230  00A2                     	ds	1
  4231  00A3                     ??_SYSTEM_Initialize:	
  4232  00A3                     strlen@a:	
  4233                           ; 1 bytes @ 0x3
  4234                           
  4235                           
  4236                           ; 1 bytes @ 0x3
  4237  00A3                     	ds	1
  4238  00A4                     ??___awdiv:	
  4239  00A4                     ??___lwdiv:	
  4240                           ; 1 bytes @ 0x4
  4241                           
  4242  00A4                     setCursor@a:	
  4243                           ; 1 bytes @ 0x4
  4244                           
  4245  00A4                     fputc@fp:	
  4246                           ; 1 bytes @ 0x4
  4247                           
  4248  00A4                     strlen@s:	
  4249                           ; 1 bytes @ 0x4
  4250                           
  4251  00A4                     ___aldiv@dividend:	
  4252                           ; 1 bytes @ 0x4
  4253                           
  4254  00A4                     ___flge@ff2:	
  4255                           ; 4 bytes @ 0x4
  4256                           
  4257                           
  4258                           ; 4 bytes @ 0x4
  4259  00A4                     	ds	1
  4260  00A5                     ??_fputc:	
  4261  00A5                     ___awdiv@counter:	
  4262                           ; 1 bytes @ 0x5
  4263                           
  4264  00A5                     ___lwdiv@quotient:	
  4265                           ; 1 bytes @ 0x5
  4266                           
  4267                           
  4268                           ; 2 bytes @ 0x5
  4269  00A5                     	ds	1
  4270  00A6                     ___awdiv@sign:	
  4271                           
  4272                           ; 1 bytes @ 0x6
  4273  00A6                     	ds	1
  4274  00A7                     ___lwdiv@counter:	
  4275  00A7                     ___awdiv@quotient:	
  4276                           ; 1 bytes @ 0x7
  4277                           
  4278                           
  4279                           ; 2 bytes @ 0x7
  4280  00A7                     	ds	1
  4281  00A8                     ??___aldiv:	
  4282  00A8                     ??___flge:	
  4283                           ; 1 bytes @ 0x8
  4284                           
  4285  00A8                     ___aodiv@dividend:	
  4286                           ; 1 bytes @ 0x8
  4287                           
  4288  00A8                     ___aomod@dividend:	
  4289                           ; 8 bytes @ 0x8
  4290                           
  4291                           
  4292                           ; 8 bytes @ 0x8
  4293  00A8                     	ds	1
  4294  00A9                     ?___wmul:	
  4295  00A9                     ___aldiv@counter:	
  4296                           ; 2 bytes @ 0x9
  4297                           
  4298  00A9                     ___wmul@multiplier:	
  4299                           ; 1 bytes @ 0x9
  4300                           
  4301                           
  4302                           ; 2 bytes @ 0x9
  4303  00A9                     	ds	1
  4304  00AA                     ?_fputs:	
  4305  00AA                     ___aldiv@sign:	
  4306                           ; 2 bytes @ 0xA
  4307                           
  4308  00AA                     fputs@s:	
  4309                           ; 1 bytes @ 0xA
  4310                           
  4311                           
  4312                           ; 2 bytes @ 0xA
  4313  00AA                     	ds	1
  4314  00AB                     ___wmul@multiplicand:	
  4315  00AB                     ___aldiv@quotient:	
  4316                           ; 2 bytes @ 0xB
  4317                           
  4318                           
  4319                           ; 4 bytes @ 0xB
  4320  00AB                     	ds	1
  4321  00AC                     fputs@fp:	
  4322                           
  4323                           ; 1 bytes @ 0xC
  4324  00AC                     	ds	1
  4325  00AD                     ??_fputs:	
  4326  00AD                     ??___wmul:	
  4327                           ; 1 bytes @ 0xD
  4328                           
  4329  00AD                     ___wmul@product:	
  4330                           ; 1 bytes @ 0xD
  4331                           
  4332                           
  4333                           ; 2 bytes @ 0xD
  4334  00AD                     	ds	2
  4335  00AF                     ?_heartBeatCalc:	
  4336  00AF                     heartBeatCalc@adcVal:	
  4337                           ; 1 bytes @ 0xF
  4338                           
  4339                           
  4340                           ; 2 bytes @ 0xF
  4341  00AF                     	ds	1
  4342  00B0                     ??___aodiv:	
  4343  00B0                     ??___aomod:	
  4344                           ; 1 bytes @ 0x10
  4345                           
  4346  00B0                     fputs@c:	
  4347                           ; 1 bytes @ 0x10
  4348                           
  4349                           
  4350                           ; 1 bytes @ 0x10
  4351  00B0                     	ds	1
  4352  00B1                     ??_heartBeatCalc:	
  4353  00B1                     ___aodiv@counter:	
  4354                           ; 1 bytes @ 0x11
  4355                           
  4356  00B1                     ___aomod@counter:	
  4357                           ; 1 bytes @ 0x11
  4358                           
  4359  00B1                     fputs@i:	
  4360                           ; 1 bytes @ 0x11
  4361                           
  4362                           
  4363                           ; 2 bytes @ 0x11
  4364  00B1                     	ds	1
  4365  00B2                     ___aodiv@sign:	
  4366  00B2                     ___aomod@sign:	
  4367                           ; 1 bytes @ 0x12
  4368                           
  4369                           
  4370                           ; 1 bytes @ 0x12
  4371  00B2                     	ds	1
  4372  00B3                     ?_puts:	
  4373  00B3                     ?_abs:	
  4374                           ; 2 bytes @ 0x13
  4375                           
  4376  00B3                     ?_pad:	
  4377                           ; 2 bytes @ 0x13
  4378                           
  4379  00B3                     pad@buf:	
  4380                           ; 2 bytes @ 0x13
  4381                           
  4382  00B3                     heartBeatCalc@runningTotal:	
  4383                           ; 1 bytes @ 0x13
  4384                           
  4385  00B3                     abs@a:	
  4386                           ; 2 bytes @ 0x13
  4387                           
  4388  00B3                     puts@s:	
  4389                           ; 2 bytes @ 0x13
  4390                           
  4391  00B3                     ___aodiv@quotient:	
  4392                           ; 2 bytes @ 0x13
  4393                           
  4394                           
  4395                           ; 8 bytes @ 0x13
  4396  00B3                     	ds	1
  4397  00B4                     pad@p:	
  4398                           
  4399                           ; 2 bytes @ 0x14
  4400  00B4                     	ds	1
  4401  00B5                     ??_puts:	
  4402  00B5                     ??_abs:	
  4403                           ; 1 bytes @ 0x15
  4404                           
  4405  00B5                     heartBeatCalc@i:	
  4406                           ; 1 bytes @ 0x15
  4407                           
  4408                           
  4409                           ; 2 bytes @ 0x15
  4410  00B5                     	ds	1
  4411  00B6                     ??_pad:	
  4412                           
  4413                           ; 1 bytes @ 0x16
  4414  00B6                     	ds	1
  4415  00B7                     _puts$1138:	
  4416  00B7                     heartBeatCalc@N:	
  4417                           ; 1 bytes @ 0x17
  4418                           
  4419  00B7                     pad@i:	
  4420                           ; 2 bytes @ 0x17
  4421                           
  4422                           
  4423                           ; 2 bytes @ 0x17
  4424  00B7                     	ds	1
  4425  00B8                     ??_resetCursor:	
  4426  00B8                     ??_writeString:	
  4427                           ; 1 bytes @ 0x18
  4428                           
  4429  00B8                     writeString@string:	
  4430                           ; 1 bytes @ 0x18
  4431                           
  4432                           
  4433                           ; 1 bytes @ 0x18
  4434  00B8                     	ds	1
  4435  00B9                     heartBeatCalc@i_630:	
  4436  00B9                     pad@w:	
  4437                           ; 2 bytes @ 0x19
  4438                           
  4439                           
  4440                           ; 2 bytes @ 0x19
  4441  00B9                     	ds	2
  4442  00BB                     pad@fp:	
  4443                           
  4444                           ; 1 bytes @ 0x1B
  4445  00BB                     	ds	1
  4446  00BC                     ?_dtoa:	
  4447  00BC                     dtoa@d:	
  4448                           ; 2 bytes @ 0x1C
  4449                           
  4450                           
  4451                           ; 8 bytes @ 0x1C
  4452  00BC                     	ds	8
  4453  00C4                     ??_dtoa:	
  4454                           
  4455                           ; 1 bytes @ 0x24
  4456  00C4                     	ds	3
  4457  00C7                     _dtoa$792:	
  4458                           
  4459                           ; 2 bytes @ 0x27
  4460  00C7                     	ds	2
  4461  00C9                     dtoa@p:	
  4462                           
  4463                           ; 2 bytes @ 0x29
  4464  00C9                     	ds	2
  4465  00CB                     dtoa@fp:	
  4466                           
  4467                           ; 1 bytes @ 0x2B
  4468  00CB                     	ds	1
  4469  00CC                     dtoa@w:	
  4470                           
  4471                           ; 2 bytes @ 0x2C
  4472  00CC                     	ds	2
  4473  00CE                     dtoa@s:	
  4474                           
  4475                           ; 2 bytes @ 0x2E
  4476  00CE                     	ds	2
  4477  00D0                     dtoa@n:	
  4478                           
  4479                           ; 8 bytes @ 0x30
  4480  00D0                     	ds	8
  4481  00D8                     dtoa@i:	
  4482                           
  4483                           ; 2 bytes @ 0x38
  4484  00D8                     	ds	2
  4485  00DA                     ?_vfpfcnvrt:	
  4486  00DA                     vfpfcnvrt@fmt:	
  4487                           ; 2 bytes @ 0x3A
  4488                           
  4489                           
  4490                           ; 1 bytes @ 0x3A
  4491  00DA                     	ds	1
  4492  00DB                     vfpfcnvrt@ap:	
  4493                           
  4494                           ; 1 bytes @ 0x3B
  4495  00DB                     	ds	1
  4496  00DC                     ??_vfpfcnvrt:	
  4497                           
  4498                           ; 1 bytes @ 0x3C
  4499  00DC                     	ds	5
  4500  00E1                     vfpfcnvrt@ll:	
  4501                           
  4502                           ; 8 bytes @ 0x41
  4503  00E1                     	ds	8
  4504  00E9                     vfpfcnvrt@fp:	
  4505                           
  4506                           ; 1 bytes @ 0x49
  4507  00E9                     	ds	1
  4508  00EA                     ?_vfprintf:	
  4509  00EA                     vfprintf@fmt:	
  4510                           ; 2 bytes @ 0x4A
  4511                           
  4512                           
  4513                           ; 2 bytes @ 0x4A
  4514  00EA                     	ds	2
  4515  00EC                     vfprintf@ap:	
  4516                           
  4517                           ; 1 bytes @ 0x4C
  4518  00EC                     	ds	1
  4519  00ED                     ??_vfprintf:	
  4520                           
  4521                           ; 1 bytes @ 0x4D
  4522  00ED                     	ds	2
  4523  00EF                     ??_printf:	
  4524                           
  4525                           ; 1 bytes @ 0x4F
  4526  00EF                     	ds	1
  4527                           
  4528                           	psect	cstackCOMMON
  4529  0070                     __pcstackCOMMON:	
  4530  0070                     ?_PIN_MANAGER_Initialize:	
  4531  0070                     ?_OSCILLATOR_Initialize:	
  4532                           ; 1 bytes @ 0x0
  4533                           
  4534  0070                     ?_ADC_Initialize:	
  4535                           ; 1 bytes @ 0x0
  4536                           
  4537  0070                     ?_TMR0_Initialize:	
  4538                           ; 1 bytes @ 0x0
  4539                           
  4540  0070                     ?_IOCCF7_DefaultInterruptHandler:	
  4541                           ; 1 bytes @ 0x0
  4542                           
  4543  0070                     ??_IOCCF7_DefaultInterruptHandler:	
  4544                           ; 1 bytes @ 0x0
  4545                           
  4546  0070                     ?_IOCCF7_ISR:	
  4547                           ; 1 bytes @ 0x0
  4548                           
  4549  0070                     ?_TMR0_DefaultInterruptHandler:	
  4550                           ; 1 bytes @ 0x0
  4551                           
  4552  0070                     ??_TMR0_DefaultInterruptHandler:	
  4553                           ; 1 bytes @ 0x0
  4554                           
  4555  0070                     ?_timerISR:	
  4556                           ; 1 bytes @ 0x0
  4557                           
  4558  0070                     ?_speedCalc:	
  4559                           ; 1 bytes @ 0x0
  4560                           
  4561  0070                     ?_resetCursor:	
  4562                           ; 1 bytes @ 0x0
  4563                           
  4564  0070                     ?_writeString:	
  4565                           ; 1 bytes @ 0x0
  4566                           
  4567  0070                     ?_ADC_StartConversion:	
  4568                           ; 1 bytes @ 0x0
  4569                           
  4570  0070                     ?_EUSART_Initialize:	
  4571                           ; 1 bytes @ 0x0
  4572                           
  4573  0070                     ?_EUSART_is_tx_ready:	
  4574                           ; 1 bytes @ 0x0
  4575                           
  4576  0070                     ?_EUSART_Write:	
  4577                           ; 1 bytes @ 0x0
  4578                           
  4579  0070                     ?_putch:	
  4580                           ; 1 bytes @ 0x0
  4581                           
  4582  0070                     ?_SYSTEM_Initialize:	
  4583                           ; 1 bytes @ 0x0
  4584                           
  4585  0070                     ?_PIN_MANAGER_IOC:	
  4586                           ; 1 bytes @ 0x0
  4587                           
  4588  0070                     ?_TMR0_ISR:	
  4589                           ; 1 bytes @ 0x0
  4590                           
  4591  0070                     ?_INTERRUPT_InterruptManager:	
  4592                           ; 1 bytes @ 0x0
  4593                           
  4594  0070                     ?_main:	
  4595                           ; 1 bytes @ 0x0
  4596                           
  4597  0070                     ?__Umul8_16:	
  4598                           ; 1 bytes @ 0x0
  4599                           
  4600  0070                     ?i1___awdiv:	
  4601                           ; 2 bytes @ 0x0
  4602                           
  4603  0070                     ?___fladd:	
  4604                           ; 2 bytes @ 0x0
  4605                           
  4606  0070                     ?___fldiv:	
  4607                           ; 4 bytes @ 0x0
  4608                           
  4609  0070                     __Umul8_16@multiplicand:	
  4610                           ; 4 bytes @ 0x0
  4611                           
  4612  0070                     i1___awdiv@divisor:	
  4613                           ; 1 bytes @ 0x0
  4614                           
  4615  0070                     ___fladd@b:	
  4616                           ; 2 bytes @ 0x0
  4617                           
  4618  0070                     ___fldiv@a:	
  4619                           ; 4 bytes @ 0x0
  4620                           
  4621                           
  4622                           ; 4 bytes @ 0x0
  4623  0070                     	ds	2
  4624  0072                     ??__Umul8_16:	
  4625  0072                     i1___awdiv@dividend:	
  4626                           ; 1 bytes @ 0x2
  4627                           
  4628                           
  4629                           ; 2 bytes @ 0x2
  4630  0072                     	ds	2
  4631  0074                     ??i1___awdiv:	
  4632  0074                     __Umul8_16@product:	
  4633                           ; 1 bytes @ 0x4
  4634                           
  4635  0074                     ___fladd@a:	
  4636                           ; 2 bytes @ 0x4
  4637                           
  4638  0074                     ___fldiv@b:	
  4639                           ; 4 bytes @ 0x4
  4640                           
  4641                           
  4642                           ; 4 bytes @ 0x4
  4643  0074                     	ds	1
  4644  0075                     i1___awdiv@counter:	
  4645                           
  4646                           ; 1 bytes @ 0x5
  4647  0075                     	ds	1
  4648  0076                     i1___awdiv@sign:	
  4649  0076                     __Umul8_16@word_mpld:	
  4650                           ; 1 bytes @ 0x6
  4651                           
  4652                           
  4653                           ; 2 bytes @ 0x6
  4654  0076                     	ds	1
  4655  0077                     i1___awdiv@quotient:	
  4656                           
  4657                           ; 2 bytes @ 0x7
  4658  0077                     	ds	1
  4659  0078                     ??___fldiv:	
  4660  0078                     ___fladd@signs:	
  4661                           ; 1 bytes @ 0x8
  4662                           
  4663  0078                     __Umul8_16@multiplier:	
  4664                           ; 1 bytes @ 0x8
  4665                           
  4666                           
  4667                           ; 1 bytes @ 0x8
  4668  0078                     	ds	1
  4669  0079                     ___fladd@aexp:	
  4670                           
  4671                           ; 1 bytes @ 0x9
  4672  0079                     	ds	1
  4673  007A                     ___fladd@bexp:	
  4674                           
  4675                           ; 1 bytes @ 0xA
  4676  007A                     	ds	1
  4677  007B                     ___fladd@grs:	
  4678                           
  4679                           ; 1 bytes @ 0xB
  4680  007B                     	ds	1
  4681  007C                     ??_timerISR:	
  4682  007C                     ??_TMR0_ISR:	
  4683                           ; 1 bytes @ 0xC
  4684                           
  4685                           
  4686                           ; 1 bytes @ 0xC
  4687  007C                     	ds	1
  4688  007D                     ??___awmod:	
  4689                           
  4690                           ; 1 bytes @ 0xD
  4691  007D                     	ds	1
  4692  007E                     ??_IOCCF7_ISR:	
  4693  007E                     ??_speedCalc:	
  4694                           ; 1 bytes @ 0xE
  4695                           
  4696  007E                     ??_PIN_MANAGER_IOC:	
  4697                           ; 1 bytes @ 0xE
  4698                           
  4699  007E                     ??_INTERRUPT_InterruptManager:	
  4700                           ; 1 bytes @ 0xE
  4701                           
  4702                           
  4703                           	psect	cstackBANK0
  4704  0020                     __pcstackBANK0:	
  4705                           ; 1 bytes @ 0xE
  4706                           
  4707  0020                     ??___fladd:	
  4708  0020                     ___fldiv@rem:	
  4709                           ; 1 bytes @ 0x0
  4710                           
  4711                           
  4712                           ; 4 bytes @ 0x0
  4713  0020                     	ds	4
  4714  0024                     ___fldiv@sign:	
  4715                           
  4716                           ; 1 bytes @ 0x4
  4717  0024                     	ds	1
  4718  0025                     ___fldiv@new_exp:	
  4719                           
  4720                           ; 2 bytes @ 0x5
  4721  0025                     	ds	2
  4722  0027                     ___fldiv@grs:	
  4723                           
  4724                           ; 4 bytes @ 0x7
  4725  0027                     	ds	4
  4726  002B                     ___fldiv@bexp:	
  4727                           
  4728                           ; 1 bytes @ 0xB
  4729  002B                     	ds	1
  4730  002C                     ___fldiv@aexp:	
  4731                           
  4732                           ; 1 bytes @ 0xC
  4733  002C                     	ds	1
  4734  002D                     ?___flmul:	
  4735  002D                     ___flmul@b:	
  4736                           ; 4 bytes @ 0xD
  4737                           
  4738                           
  4739                           ; 4 bytes @ 0xD
  4740  002D                     	ds	4
  4741  0031                     ___flmul@a:	
  4742                           
  4743                           ; 4 bytes @ 0x11
  4744  0031                     	ds	4
  4745  0035                     ??___flmul:	
  4746                           
  4747                           ; 1 bytes @ 0x15
  4748  0035                     	ds	5
  4749  003A                     ___flmul@sign:	
  4750                           
  4751                           ; 1 bytes @ 0x1A
  4752  003A                     	ds	1
  4753  003B                     ___flmul@grs:	
  4754                           
  4755                           ; 4 bytes @ 0x1B
  4756  003B                     	ds	4
  4757  003F                     ___flmul@aexp:	
  4758                           
  4759                           ; 1 bytes @ 0x1F
  4760  003F                     	ds	1
  4761  0040                     ___flmul@bexp:	
  4762                           
  4763                           ; 1 bytes @ 0x20
  4764  0040                     	ds	1
  4765  0041                     ___flmul@prod:	
  4766                           
  4767                           ; 4 bytes @ 0x21
  4768  0041                     	ds	4
  4769  0045                     ___flmul@temp:	
  4770                           
  4771                           ; 2 bytes @ 0x25
  4772  0045                     	ds	2
  4773  0047                     ?___fltol:	
  4774  0047                     ___fltol@f1:	
  4775                           ; 4 bytes @ 0x27
  4776                           
  4777                           
  4778                           ; 4 bytes @ 0x27
  4779  0047                     	ds	4
  4780  004B                     ??___fltol:	
  4781                           
  4782                           ; 1 bytes @ 0x2B
  4783  004B                     	ds	5
  4784  0050                     ___fltol@sign1:	
  4785                           
  4786                           ; 1 bytes @ 0x30
  4787  0050                     	ds	1
  4788  0051                     ___fltol@exp1:	
  4789                           
  4790                           ; 1 bytes @ 0x31
  4791  0051                     	ds	1
  4792  0052                     ?___awmod:	
  4793  0052                     ___awmod@divisor:	
  4794                           ; 2 bytes @ 0x32
  4795                           
  4796                           
  4797                           ; 2 bytes @ 0x32
  4798  0052                     	ds	2
  4799  0054                     ___awmod@dividend:	
  4800                           
  4801                           ; 2 bytes @ 0x34
  4802  0054                     	ds	2
  4803  0056                     ___awmod@counter:	
  4804                           
  4805                           ; 1 bytes @ 0x36
  4806  0056                     	ds	1
  4807  0057                     ___awmod@sign:	
  4808                           
  4809                           ; 1 bytes @ 0x37
  4810  0057                     	ds	1
  4811  0058                     _speedCalc$1328:	
  4812                           
  4813                           ; 4 bytes @ 0x38
  4814  0058                     	ds	4
  4815                           
  4816                           	psect	maintext
  4817  0BCC                     __pmaintext:	
  4818 ;;
  4819 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  4820 ;;
  4821 ;; *************** function _main *****************
  4822 ;; Defined at:
  4823 ;;		line 52 in file "main.c"
  4824 ;; Parameters:    Size  Location     Type
  4825 ;;		None
  4826 ;; Auto vars:     Size  Location     Type
  4827 ;;		None
  4828 ;; Return value:  Size  Location     Type
  4829 ;;                  1    wreg      void 
  4830 ;; Registers used:
  4831 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4832 ;; Tracked objects:
  4833 ;;		On entry : B1F/0
  4834 ;;		On exit  : 0/0
  4835 ;;		Unchanged: 0/0
  4836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4839 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  4840 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  4841 ;;Total ram usage:        2 bytes
  4842 ;; Hardware stack levels required when called:   15
  4843 ;; This function calls:
  4844 ;;		_ADC_GetConversionResult
  4845 ;;		_ADC_StartConversion
  4846 ;;		_IOCCF7_SetInterruptHandler
  4847 ;;		_SYSTEM_Initialize
  4848 ;;		_TMR0_SetInterruptHandler
  4849 ;;		___flge
  4850 ;;		_heartBeatCalc
  4851 ;;		_printf
  4852 ;;		_resetCursor
  4853 ;;		_setCursor
  4854 ;;		_writeString
  4855 ;; This function is called by:
  4856 ;;		Startup code after reset
  4857 ;; This function uses a non-reentrant model
  4858 ;;
  4859                           
  4860                           
  4861                           ;psect for function _main
  4862  0BCC                     _main:	
  4863                           
  4864                           ;main.c: 55:     SYSTEM_Initialize();
  4865                           
  4866                           ;incstack = 0
  4867                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4868  0BCC  3194  24D6  318B   	fcall	_SYSTEM_Initialize
  4869                           
  4870                           ;main.c: 58:     TMR0_SetInterruptHandler( timerISR ) ;
  4871  0BCF  30DF               	movlw	low _timerISR
  4872  0BD0  0021               	movlb	1	; select bank1
  4873  0BD1  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler^(0+128)
  4874  0BD2  3015               	movlw	high _timerISR
  4875  0BD3  00A1               	movwf	(TMR0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  4876  0BD4  3194  24A8  318B   	fcall	_TMR0_SetInterruptHandler
  4877                           
  4878                           ;main.c: 59:     IOCCF7_SetInterruptHandler( speedCalc ) ;
  4879  0BD7  30A3               	movlw	low _speedCalc
  4880  0BD8  0021               	movlb	1	; select bank1
  4881  0BD9  00A0               	movwf	IOCCF7_SetInterruptHandler@InterruptHandler^(0+128)
  4882  0BDA  300D               	movlw	high _speedCalc
  4883  0BDB  00A1               	movwf	(IOCCF7_SetInterruptHandler@InterruptHandler^(0+128)+1)
  4884  0BDC  3194  249F  318B   	fcall	_IOCCF7_SetInterruptHandler
  4885                           
  4886                           ;main.c: 62:     _delay((unsigned long)((1000)*(16000000/4000.0))) ;
  4887  0BDF  3015               	movlw	21
  4888  0BE0  0022               	movlb	2	; select bank2
  4889  0BE1  00DC               	movwf	(??_main^(0+256)+1)
  4890  0BE2  304B               	movlw	75
  4891  0BE3  00DB               	movwf	??_main^(0+256)
  4892  0BE4  30BE               	movlw	190
  4893  0BE5                     u5207:	
  4894  0BE5  0B89               	decfsz	9,f
  4895  0BE6  2BE5               	goto	u5207
  4896  0BE7  0BDB               	decfsz	??_main^(0+256),f
  4897  0BE8  2BE5               	goto	u5207
  4898  0BE9  0BDC               	decfsz	(??_main^(0+256)+1),f
  4899  0BEA  2BE5               	goto	u5207
  4900  0BEB  0000               	nop
  4901                           
  4902                           ;main.c: 64:     resetCursor() ;
  4903  0BEC  3194  247C  318B   	fcall	_resetCursor
  4904                           
  4905                           ;main.c: 66:     (INTCONbits.GIE = 1);
  4906  0BEF  178B               	bsf	11,7	;volatile
  4907                           
  4908                           ;main.c: 67:     (INTCONbits.PEIE = 1);
  4909  0BF0  170B               	bsf	11,6	;volatile
  4910  0BF1                     l3926:	
  4911                           
  4912                           ;main.c: 72:         setCursor(1,0) ;
  4913  0BF1  0021               	movlb	1	; select bank1
  4914  0BF2  01A1               	clrf	setCursor@b^(0+128)
  4915  0BF3  3001               	movlw	1
  4916  0BF4  3196  26EC  318B   	fcall	_setCursor
  4917                           
  4918                           ;main.c: 73:         writeString(speedDisp);
  4919  0BF7  30B8               	movlw	(low (_speedDisp| (0+256)))& (0+255)
  4920  0BF8  3195  250A  318B   	fcall	_writeString
  4921                           
  4922                           ;main.c: 74:         setCursor(2,0) ;
  4923  0BFB  0021               	movlb	1	; select bank1
  4924  0BFC  01A1               	clrf	setCursor@b^(0+128)
  4925  0BFD  3002               	movlw	2
  4926  0BFE  3196  26EC  318B   	fcall	_setCursor
  4927                           
  4928                           ;main.c: 75:         writeString(distanceDisp);
  4929  0C01  30AD               	movlw	(low (_distanceDisp| (0+256)))& (0+255)
  4930  0C02  3195  250A  318B   	fcall	_writeString
  4931                           
  4932                           ;main.c: 76:         setCursor(3,0) ;
  4933  0C05  0021               	movlb	1	; select bank1
  4934  0C06  01A1               	clrf	setCursor@b^(0+128)
  4935  0C07  3003               	movlw	3
  4936  0C08  3196  26EC  318B   	fcall	_setCursor
  4937                           
  4938                           ;main.c: 77:         writeString(hrDisp);
  4939  0C0B  30A0               	movlw	(low (_hrDisp| (0+256)))& (0+255)
  4940  0C0C  3195  250A  318B   	fcall	_writeString
  4941                           
  4942                           ;main.c: 78:         setCursor(4,0) ;
  4943  0C0F  0021               	movlb	1	; select bank1
  4944  0C10  01A1               	clrf	setCursor@b^(0+128)
  4945  0C11  3004               	movlw	4
  4946  0C12  3196  26EC  318B   	fcall	_setCursor
  4947                           
  4948                           ;main.c: 81:         if (adcCounter == 2){
  4949  0C15  3002               	movlw	2
  4950  0C16  0022               	movlb	2	; select bank2
  4951  0C17  0624               	xorwf	_adcCounter^(0+256),w	;volatile
  4952  0C18  0425               	iorwf	(_adcCounter+1)^(0+256),w	;volatile
  4953  0C19  0426               	iorwf	(_adcCounter+2)^(0+256),w	;volatile
  4954  0C1A  0427               	iorwf	(_adcCounter+3)^(0+256),w	;volatile
  4955  0C1B  1D03               	btfss	3,2
  4956  0C1C  2C3E               	goto	l3950
  4957                           
  4958                           ;main.c: 83:             ADC_StartConversion();
  4959  0C1D  3188  2000  318B   	fcall	_ADC_StartConversion
  4960                           
  4961                           ;main.c: 84:             adcVal = ADC_GetConversionResult() ;
  4962  0C20  3194  244E  318B   	fcall	_ADC_GetConversionResult
  4963  0C23  0021               	movlb	1	; select bank1
  4964  0C24  0821               	movf	(?_ADC_GetConversionResult+1)^(0+128),w
  4965  0C25  0022               	movlb	2	; select bank2
  4966  0C26  00BB               	movwf	(_adcVal+1)^(0+256)	;volatile
  4967  0C27  0021               	movlb	1	; select bank1
  4968  0C28  0820               	movf	?_ADC_GetConversionResult^(0+128),w
  4969  0C29  0022               	movlb	2	; select bank2
  4970  0C2A  00BA               	movwf	_adcVal^(0+256)	;volatile
  4971                           
  4972                           ;main.c: 85:             heartBeatCalc(adcVal) ;
  4973  0C2B  083B               	movf	(_adcVal+1)^(0+256),w	;volatile
  4974  0C2C  0021               	movlb	1	; select bank1
  4975  0C2D  00B0               	movwf	(heartBeatCalc@adcVal+1)^(0+128)
  4976  0C2E  0022               	movlb	2	; select bank2
  4977  0C2F  083A               	movf	_adcVal^(0+256),w	;volatile
  4978  0C30  0021               	movlb	1	; select bank1
  4979  0C31  00AF               	movwf	heartBeatCalc@adcVal^(0+128)
  4980  0C32  3182  2286  318B   	fcall	_heartBeatCalc
  4981                           
  4982                           ;main.c: 86:             adcCounter = 0 ;
  4983  0C35  3000               	movlw	0
  4984  0C36  0022               	movlb	2	; select bank2
  4985  0C37  00A7               	movwf	(_adcCounter+3)^(0+256)	;volatile
  4986  0C38  3000               	movlw	0
  4987  0C39  00A6               	movwf	(_adcCounter+2)^(0+256)	;volatile
  4988  0C3A  3000               	movlw	0
  4989  0C3B  00A5               	movwf	(_adcCounter+1)^(0+256)	;volatile
  4990  0C3C  3000               	movlw	0
  4991  0C3D  00A4               	movwf	_adcCounter^(0+256)	;volatile
  4992  0C3E                     l3950:	
  4993                           
  4994                           ;main.c: 90:         setCursor(1,7) ;
  4995  0C3E  3007               	movlw	7
  4996  0C3F  00DB               	movwf	??_main^(0+256)
  4997  0C40  085B               	movf	??_main^(0+256),w
  4998  0C41  0021               	movlb	1	; select bank1
  4999  0C42  00A1               	movwf	setCursor@b^(0+128)
  5000  0C43  3001               	movlw	1
  5001  0C44  3196  26EC  318B   	fcall	_setCursor
  5002                           
  5003                           ;main.c: 91:         if( counter <= 15000 ) {
  5004  0C47  3046               	movlw	70
  5005  0C48  0021               	movlb	1	; select bank1
  5006  0C49  00A3               	movwf	(___flge@ff1+3)^(0+128)
  5007  0C4A  306A               	movlw	106
  5008  0C4B  00A2               	movwf	(___flge@ff1+2)^(0+128)
  5009  0C4C  3060               	movlw	96
  5010  0C4D  00A1               	movwf	(___flge@ff1+1)^(0+128)
  5011  0C4E  3000               	movlw	0
  5012  0C4F  00A0               	movwf	___flge@ff1^(0+128)
  5013  0C50  0022               	movlb	2	; select bank2
  5014  0C51  084E               	movf	(_counter+3)^(0+256),w	;volatile
  5015  0C52  0021               	movlb	1	; select bank1
  5016  0C53  00A7               	movwf	(___flge@ff2+3)^(0+128)
  5017  0C54  0022               	movlb	2	; select bank2
  5018  0C55  084D               	movf	(_counter+2)^(0+256),w	;volatile
  5019  0C56  0021               	movlb	1	; select bank1
  5020  0C57  00A6               	movwf	(___flge@ff2+2)^(0+128)
  5021  0C58  0022               	movlb	2	; select bank2
  5022  0C59  084C               	movf	(_counter+1)^(0+256),w	;volatile
  5023  0C5A  0021               	movlb	1	; select bank1
  5024  0C5B  00A5               	movwf	(___flge@ff2+1)^(0+128)
  5025  0C5C  0022               	movlb	2	; select bank2
  5026  0C5D  084B               	movf	_counter^(0+256),w	;volatile
  5027  0C5E  0021               	movlb	1	; select bank1
  5028  0C5F  00A4               	movwf	___flge@ff2^(0+128)
  5029  0C60  3189  2111  318B   	fcall	___flge
  5030  0C63  1C03               	btfss	3,0
  5031  0C64  2C73               	goto	l3956
  5032                           
  5033                           ;main.c: 92:             printf( "%d.%d kph     ", speedHi, speedLo ) ;
  5034  0C65  3000               	movlw	low (STR_1| (0+32768))
  5035  0C66  0022               	movlb	2	; select bank2
  5036  0C67  00D2               	movwf	printf@fmt^(0+256)
  5037  0C68  3098               	movlw	high (STR_1| (0+32768))
  5038  0C69  00D3               	movwf	(printf@fmt^(0+256)+1)
  5039  0C6A  083F               	movf	(_speedHi+1)^(0+256),w	;volatile
  5040  0C6B  00D5               	movwf	((?_printf+1)^(0+256)+2)
  5041  0C6C  083E               	movf	_speedHi^(0+256),w	;volatile
  5042  0C6D  00D4               	movwf	(?_printf^(0+256)+2)
  5043  0C6E  0841               	movf	(_speedLo+1)^(0+256),w	;volatile
  5044  0C6F  00D7               	movwf	((?_printf+1)^(0+256)+4)
  5045  0C70  0840               	movf	_speedLo^(0+256),w	;volatile
  5046  0C71  00D6               	movwf	(?_printf^(0+256)+4)
  5047  0C72  2C78               	goto	L1
  5048  0C73                     l3956:	
  5049                           ;main.c: 93:         }
  5050                           
  5051                           
  5052                           ;main.c: 95:             printf( "0 kph        " ) ;
  5053  0C73  300F               	movlw	low (STR_2| (0+32768))
  5054  0C74  0022               	movlb	2	; select bank2
  5055  0C75  00D2               	movwf	printf@fmt^(0+256)
  5056  0C76  3098               	movlw	high (STR_2| (0+32768))
  5057  0C77  00D3               	movwf	(printf@fmt^(0+256)+1)
  5058  0C78                     L1:	
  5059  0C78  3194  24F5  318B   	fcall	_printf
  5060                           
  5061                           ;main.c: 99:         setCursor(2,10) ;
  5062  0C7B  300A               	movlw	10
  5063  0C7C  0022               	movlb	2	; select bank2
  5064  0C7D  00DB               	movwf	??_main^(0+256)
  5065  0C7E  085B               	movf	??_main^(0+256),w
  5066  0C7F  0021               	movlb	1	; select bank1
  5067  0C80  00A1               	movwf	setCursor@b^(0+128)
  5068  0C81  3002               	movlw	2
  5069  0C82  3196  26EC  318B   	fcall	_setCursor
  5070                           
  5071                           ;main.c: 100:         printf( "%d.%d km" , distHi, distLo );
  5072  0C85  3027               	movlw	low (STR_3| (0+32768))
  5073  0C86  0022               	movlb	2	; select bank2
  5074  0C87  00D2               	movwf	printf@fmt^(0+256)
  5075  0C88  3098               	movlw	high (STR_3| (0+32768))
  5076  0C89  00D3               	movwf	(printf@fmt^(0+256)+1)
  5077  0C8A  0845               	movf	(_distHi+1)^(0+256),w	;volatile
  5078  0C8B  00D5               	movwf	((?_printf+1)^(0+256)+2)
  5079  0C8C  0844               	movf	_distHi^(0+256),w	;volatile
  5080  0C8D  00D4               	movwf	(?_printf^(0+256)+2)
  5081  0C8E  0843               	movf	(_distLo+1)^(0+256),w	;volatile
  5082  0C8F  00D7               	movwf	((?_printf+1)^(0+256)+4)
  5083  0C90  0842               	movf	_distLo^(0+256),w	;volatile
  5084  0C91  00D6               	movwf	(?_printf^(0+256)+4)
  5085  0C92  3194  24F5  318B   	fcall	_printf
  5086                           
  5087                           ;main.c: 103:         setCursor(3,13) ;
  5088  0C95  300D               	movlw	13
  5089  0C96  0022               	movlb	2	; select bank2
  5090  0C97  00DB               	movwf	??_main^(0+256)
  5091  0C98  085B               	movf	??_main^(0+256),w
  5092  0C99  0021               	movlb	1	; select bank1
  5093  0C9A  00A1               	movwf	setCursor@b^(0+128)
  5094  0C9B  3003               	movlw	3
  5095  0C9C  3196  26EC  318B   	fcall	_setCursor
  5096                           
  5097                           ;main.c: 104:         printf( "%d bpm   " , BPM ) ;
  5098  0C9F  301D               	movlw	low (STR_4| (0+32768))
  5099  0CA0  0022               	movlb	2	; select bank2
  5100  0CA1  00D2               	movwf	printf@fmt^(0+256)
  5101  0CA2  3098               	movlw	high (STR_4| (0+32768))
  5102  0CA3  00D3               	movwf	(printf@fmt^(0+256)+1)
  5103  0CA4  0837               	movf	(_BPM+1)^(0+256),w	;volatile
  5104  0CA5  00D5               	movwf	((?_printf+1)^(0+256)+2)
  5105  0CA6  0836               	movf	_BPM^(0+256),w	;volatile
  5106  0CA7  00D4               	movwf	(?_printf^(0+256)+2)
  5107  0CA8  3194  24F5  318B   	fcall	_printf
  5108  0CAB  2BF1               	goto	l3926
  5109  0CAC                     __end_of_main:	
  5110                           
  5111                           	psect	text1
  5112  150A                     __ptext1:	
  5113 ;; *************** function _writeString *****************
  5114 ;; Defined at:
  5115 ;;		line 11 in file "displayOptions.c"
  5116 ;; Parameters:    Size  Location     Type
  5117 ;;  string          1    wreg     PTR unsigned char 
  5118 ;;		 -> hrDisp(13), distanceDisp(11), speedDisp(8), 
  5119 ;; Auto vars:     Size  Location     Type
  5120 ;;  string          1   24[BANK1 ] PTR unsigned char 
  5121 ;;		 -> hrDisp(13), distanceDisp(11), speedDisp(8), 
  5122 ;; Return value:  Size  Location     Type
  5123 ;;                  1    wreg      void 
  5124 ;; Registers used:
  5125 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5126 ;; Tracked objects:
  5127 ;;		On entry : 0/0
  5128 ;;		On exit  : 0/0
  5129 ;;		Unchanged: 0/0
  5130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5132 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5134 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5135 ;;Total ram usage:        1 bytes
  5136 ;; Hardware stack levels used:    1
  5137 ;; Hardware stack levels required when called:   11
  5138 ;; This function calls:
  5139 ;;		_EUSART_is_tx_ready
  5140 ;;		_puts
  5141 ;; This function is called by:
  5142 ;;		_main
  5143 ;; This function uses a non-reentrant model
  5144 ;;
  5145                           
  5146                           
  5147                           ;psect for function _writeString
  5148  150A                     _writeString:	
  5149                           
  5150                           ;incstack = 0
  5151                           ; Regs used in _writeString: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5152                           ;writeString@string stored from wreg
  5153  150A  0021               	movlb	1	; select bank1
  5154  150B  00B8               	movwf	writeString@string^(0+128)
  5155  150C                     l3744:	
  5156                           ;displayOptions.c: 12:     while( !EUSART_is_tx_ready() ) ;
  5157                           
  5158  150C  3194  24C8  3195   	fcall	_EUSART_is_tx_ready
  5159  150F  3A00               	xorlw	0
  5160  1510  1903               	skipnz
  5161  1511  2D0C               	goto	l3744
  5162                           
  5163                           ;displayOptions.c: 13:     puts( string );
  5164  1512  0021               	movlb	1	; select bank1
  5165  1513  0838               	movf	writeString@string^(0+128),w
  5166  1514  00B3               	movwf	puts@s^(0+128)
  5167  1515  3001               	movlw	1
  5168  1516  00B4               	movwf	(puts@s+1)^(0+128)
  5169  1517  3195  2569  3195   	fcall	_puts
  5170                           
  5171                           ;displayOptions.c: 14:     _delay((unsigned long)((200)*(16000000/4000000.0)));
  5172  151A  30A0               	movlw	160
  5173  151B                     u5217:	
  5174  151B  3200               	nop2
  5175  151C  0B89               	decfsz	9,f
  5176  151D  2D1B               	goto	u5217
  5177  151E  0008               	return
  5178  151F                     __end_of_writeString:	
  5179                           
  5180                           	psect	text2
  5181  16EC                     __ptext2:	
  5182 ;; *************** function _setCursor *****************
  5183 ;; Defined at:
  5184 ;;		line 17 in file "displayOptions.c"
  5185 ;; Parameters:    Size  Location     Type
  5186 ;;  a               1    wreg     unsigned char 
  5187 ;;  b               1    1[BANK1 ] unsigned char 
  5188 ;; Auto vars:     Size  Location     Type
  5189 ;;  a               1    4[BANK1 ] unsigned char 
  5190 ;; Return value:  Size  Location     Type
  5191 ;;                  1    wreg      void 
  5192 ;; Registers used:
  5193 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5194 ;; Tracked objects:
  5195 ;;		On entry : 0/0
  5196 ;;		On exit  : 0/0
  5197 ;;		Unchanged: 0/0
  5198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5199 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5200 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5201 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5202 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5203 ;;Total ram usage:        4 bytes
  5204 ;; Hardware stack levels used:    1
  5205 ;; Hardware stack levels required when called:    7
  5206 ;; This function calls:
  5207 ;;		_EUSART_Write
  5208 ;;		_EUSART_is_tx_ready
  5209 ;; This function is called by:
  5210 ;;		_main
  5211 ;; This function uses a non-reentrant model
  5212 ;;
  5213                           
  5214                           
  5215                           ;psect for function _setCursor
  5216  16EC                     _setCursor:	
  5217                           
  5218                           ;incstack = 0
  5219                           ; Regs used in _setCursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5220                           ;setCursor@a stored from wreg
  5221  16EC  0021               	movlb	1	; select bank1
  5222  16ED  00A4               	movwf	setCursor@a^(0+128)
  5223  16EE                     l3718:	
  5224                           ;displayOptions.c: 18:     while( !EUSART_is_tx_ready() ) ;
  5225                           
  5226  16EE  3194  24C8  3196   	fcall	_EUSART_is_tx_ready
  5227  16F1  3A00               	xorlw	0
  5228  16F2  1903               	skipnz
  5229  16F3  2EEE               	goto	l3718
  5230                           
  5231                           ;displayOptions.c: 19:     EUSART_Write( 254 );
  5232  16F4  30FE               	movlw	254
  5233  16F5  3194  24B1  3196   	fcall	_EUSART_Write
  5234                           
  5235                           ;displayOptions.c: 20:     _delay((unsigned long)((200)*(16000000/4000000.0)));
  5236  16F8  30A0               	movlw	160
  5237  16F9                     u5227:	
  5238  16F9  3200               	nop2
  5239  16FA  0B89               	decfsz	9,f
  5240  16FB  2EF9               	goto	u5227
  5241                           
  5242                           ;displayOptions.c: 21:     switch ( a ){
  5243  16FC  2F11               	goto	l3734
  5244  16FD                     l3724:	
  5245                           
  5246                           ;displayOptions.c: 23:         {;displayOptions.c: 24:             EUSART_Write(128 + 0 
      +                          + b) ;
  5247  16FD  0821               	movf	setCursor@b^(0+128),w
  5248  16FE  3E80               	addlw	128
  5249  16FF  3194  24B1         	fcall	_EUSART_Write
  5250                           
  5251                           ;displayOptions.c: 25:             break ;
  5252  1701  0008               	return
  5253  1702                     l3726:	
  5254                           
  5255                           ;displayOptions.c: 28:         {;displayOptions.c: 29:            EUSART_Write(128 + 64 
      +                          + b) ;
  5256  1702  0821               	movf	setCursor@b^(0+128),w
  5257  1703  3EC0               	addlw	192
  5258  1704  3194  24B1         	fcall	_EUSART_Write
  5259                           
  5260                           ;displayOptions.c: 30:            break ;
  5261  1706  0008               	return
  5262  1707                     l3728:	
  5263                           
  5264                           ;displayOptions.c: 33:         {;displayOptions.c: 34:             EUSART_Write(128 + 20
      +                           + b) ;
  5265  1707  0821               	movf	setCursor@b^(0+128),w
  5266  1708  3E94               	addlw	148
  5267  1709  3194  24B1         	fcall	_EUSART_Write
  5268                           
  5269                           ;displayOptions.c: 35:             break ;
  5270  170B  0008               	return
  5271  170C                     l3730:	
  5272                           
  5273                           ;displayOptions.c: 38:         {;displayOptions.c: 39:             EUSART_Write(128 + 84
      +                           + b) ;
  5274  170C  0821               	movf	setCursor@b^(0+128),w
  5275  170D  3ED4               	addlw	212
  5276  170E  3194  24B1         	fcall	_EUSART_Write
  5277                           
  5278                           ;displayOptions.c: 40:             break ;
  5279  1710  0008               	return
  5280  1711                     l3734:	
  5281  1711  0021               	movlb	1	; select bank1
  5282  1712  0824               	movf	setCursor@a^(0+128),w
  5283  1713  00A2               	movwf	??_setCursor^(0+128)
  5284  1714  01A3               	clrf	(??_setCursor^(0+128)+1)
  5285                           
  5286                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5287                           ; Switch size 1, requested type "simple"
  5288                           ; Number of cases is 1, Range of values is 0 to 0
  5289                           ; switch strategies available:
  5290                           ; Name         Instructions Cycles
  5291                           ; simple_byte            4     3 (average)
  5292                           ; direct_byte            8     6 (fixed)
  5293                           ; jumptable            260     6 (fixed)
  5294                           ;	Chosen strategy is simple_byte
  5295  1715  0823               	movf	(??_setCursor+1)^(0+128),w
  5296  1716  3A00               	xorlw	0	; case 0
  5297  1717  1903               	skipnz
  5298  1718  2F1A               	goto	l3998
  5299  1719  2F28               	goto	l387
  5300  171A                     l3998:	
  5301                           
  5302                           ; Switch size 1, requested type "simple"
  5303                           ; Number of cases is 4, Range of values is 1 to 4
  5304                           ; switch strategies available:
  5305                           ; Name         Instructions Cycles
  5306                           ; simple_byte           13     7 (average)
  5307                           ; direct_byte           17     9 (fixed)
  5308                           ; jumptable            263     9 (fixed)
  5309                           ;	Chosen strategy is simple_byte
  5310  171A  0822               	movf	??_setCursor^(0+128),w
  5311  171B  3A01               	xorlw	1	; case 1
  5312  171C  1903               	skipnz
  5313  171D  2EFD               	goto	l3724
  5314  171E  3A03               	xorlw	3	; case 2
  5315  171F  1903               	skipnz
  5316  1720  2F02               	goto	l3726
  5317  1721  3A01               	xorlw	1	; case 3
  5318  1722  1903               	skipnz
  5319  1723  2F07               	goto	l3728
  5320  1724  3A07               	xorlw	7	; case 4
  5321  1725  1903               	skipnz
  5322  1726  2F0C               	goto	l3730
  5323  1727  2F28               	goto	l387
  5324  1728                     l387:	
  5325  1728  0008               	return
  5326  1729                     __end_of_setCursor:	
  5327                           
  5328                           	psect	text3
  5329  14C8                     __ptext3:	
  5330 ;; *************** function _EUSART_is_tx_ready *****************
  5331 ;; Defined at:
  5332 ;;		line 93 in file "mcc_generated_files/eusart.c"
  5333 ;; Parameters:    Size  Location     Type
  5334 ;;		None
  5335 ;; Auto vars:     Size  Location     Type
  5336 ;;		None
  5337 ;; Return value:  Size  Location     Type
  5338 ;;                  1    wreg      _Bool 
  5339 ;; Registers used:
  5340 ;;		wreg, status,2
  5341 ;; Tracked objects:
  5342 ;;		On entry : 0/0
  5343 ;;		On exit  : 0/0
  5344 ;;		Unchanged: 0/0
  5345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5347 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5349 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5350 ;;Total ram usage:        1 bytes
  5351 ;; Hardware stack levels used:    1
  5352 ;; Hardware stack levels required when called:    6
  5353 ;; This function calls:
  5354 ;;		Nothing
  5355 ;; This function is called by:
  5356 ;;		_writeString
  5357 ;;		_setCursor
  5358 ;;		_backlightBrightness
  5359 ;; This function uses a non-reentrant model
  5360 ;;
  5361                           
  5362                           
  5363                           ;psect for function _EUSART_is_tx_ready
  5364  14C8                     _EUSART_is_tx_ready:	
  5365                           
  5366                           ;mcc_generated_files/eusart.c: 95:     return (_Bool)(PIR1bits.TXIF && TX1STAbits.TXEN);
  5367                           
  5368                           ;incstack = 0
  5369                           ; Regs used in _EUSART_is_tx_ready: [wreg+status,2]
  5370  14C8  0021               	movlb	1	; select bank1
  5371  14C9  01A0               	clrf	_EUSART_is_tx_ready$167^(0+128)
  5372  14CA  0020               	movlb	0	; select bank0
  5373  14CB  1E10               	btfss	16,4	;volatile
  5374  14CC  2CD3               	goto	l3452
  5375  14CD  0023               	movlb	3	; select bank3
  5376  14CE  1E9E               	btfss	30,5	;volatile
  5377  14CF  2CD3               	goto	l3452
  5378  14D0  0021               	movlb	1	; select bank1
  5379  14D1  01A0               	clrf	_EUSART_is_tx_ready$167^(0+128)
  5380  14D2  0AA0               	incf	_EUSART_is_tx_ready$167^(0+128),f
  5381  14D3                     l3452:	
  5382  14D3  0021               	movlb	1	; select bank1
  5383  14D4  0820               	movf	_EUSART_is_tx_ready$167^(0+128),w
  5384  14D5  0008               	return
  5385  14D6                     __end_of_EUSART_is_tx_ready:	
  5386                           
  5387                           	psect	text4
  5388  147C                     __ptext4:	
  5389 ;; *************** function _resetCursor *****************
  5390 ;; Defined at:
  5391 ;;		line 91 in file "displayOptions.c"
  5392 ;; Parameters:    Size  Location     Type
  5393 ;;		None
  5394 ;; Auto vars:     Size  Location     Type
  5395 ;;		None
  5396 ;; Return value:  Size  Location     Type
  5397 ;;                  1    wreg      void 
  5398 ;; Registers used:
  5399 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5400 ;; Tracked objects:
  5401 ;;		On entry : 0/0
  5402 ;;		On exit  : 0/0
  5403 ;;		Unchanged: 0/0
  5404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5409 ;;Total ram usage:        0 bytes
  5410 ;; Hardware stack levels used:    1
  5411 ;; Hardware stack levels required when called:   11
  5412 ;; This function calls:
  5413 ;;		_puts
  5414 ;; This function is called by:
  5415 ;;		_main
  5416 ;; This function uses a non-reentrant model
  5417 ;;
  5418                           
  5419                           
  5420                           ;psect for function _resetCursor
  5421  147C                     _resetCursor:	
  5422                           
  5423                           ;displayOptions.c: 92:     puts("|-");
  5424                           
  5425                           ;incstack = 0
  5426                           ; Regs used in _resetCursor: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5427  147C  3030               	movlw	low (STR_5| (0+32768))
  5428  147D  0021               	movlb	1	; select bank1
  5429  147E  00B3               	movwf	puts@s^(0+128)
  5430  147F  3098               	movlw	high (STR_5| (0+32768))
  5431  1480  00B4               	movwf	(puts@s^(0+128)+1)
  5432  1481  3195  2569         	fcall	_puts
  5433  1483  0008               	return
  5434  1484                     __end_of_resetCursor:	
  5435                           
  5436                           	psect	text5
  5437  1569                     __ptext5:	
  5438 ;; *************** function _puts *****************
  5439 ;; Defined at:
  5440 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\puts.c"
  5441 ;; Parameters:    Size  Location     Type
  5442 ;;  s               2   19[BANK1 ] PTR const unsigned char 
  5443 ;;		 -> STR_5(3), hrDisp(13), distanceDisp(11), speedDisp(8), 
  5444 ;; Auto vars:     Size  Location     Type
  5445 ;;  r               2    0        int 
  5446 ;; Return value:  Size  Location     Type
  5447 ;;                  2   19[BANK1 ] int 
  5448 ;; Registers used:
  5449 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5450 ;; Tracked objects:
  5451 ;;		On entry : 0/0
  5452 ;;		On exit  : 0/0
  5453 ;;		Unchanged: 0/0
  5454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5455 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5456 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5458 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  5459 ;;Total ram usage:        5 bytes
  5460 ;; Hardware stack levels used:    1
  5461 ;; Hardware stack levels required when called:   10
  5462 ;; This function calls:
  5463 ;;		_fputc
  5464 ;;		_fputs
  5465 ;; This function is called by:
  5466 ;;		_writeString
  5467 ;;		_resetCursor
  5468 ;; This function uses a non-reentrant model
  5469 ;;
  5470                           
  5471                           
  5472                           ;psect for function _puts
  5473  1569                     _puts:	
  5474                           
  5475                           ;incstack = 0
  5476                           ; Regs used in _puts: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5477  1569  0021               	movlb	1	; select bank1
  5478  156A  01B7               	clrf	_puts$1138^(0+128)
  5479  156B  0AB7               	incf	_puts$1138^(0+128),f
  5480  156C  0834               	movf	(puts@s+1)^(0+128),w
  5481  156D  00AB               	movwf	(fputs@s+1)^(0+128)
  5482  156E  0833               	movf	puts@s^(0+128),w
  5483  156F  00AA               	movwf	fputs@s^(0+128)
  5484  1570  01AC               	clrf	fputs@fp^(0+128)
  5485  1571  3196  2629  3195   	fcall	_fputs
  5486  1574  0021               	movlb	1	; select bank1
  5487  1575  1BAB               	btfsc	(?_fputs+1)^(0+128),7
  5488  1576  0008               	return
  5489  1577  300A               	movlw	10
  5490  1578  00A2               	movwf	fputc@c^(0+128)
  5491  1579  3000               	movlw	0
  5492  157A  00A3               	movwf	(fputc@c^(0+128)+1)
  5493  157B  01A4               	clrf	fputc@fp^(0+128)
  5494  157C  3197  2729  3195   	fcall	_fputc
  5495  157F  0021               	movlb	1	; select bank1
  5496  1580  1BA3               	btfsc	(?_fputc+1)^(0+128),7
  5497  1581  0008               	return
  5498  1582  01B7               	clrf	_puts$1138^(0+128)
  5499  1583  0008               	return
  5500  1584                     __end_of_puts:	
  5501                           
  5502                           	psect	text6
  5503  14F5                     __ptext6:	
  5504 ;; *************** function _printf *****************
  5505 ;; Defined at:
  5506 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  5507 ;; Parameters:    Size  Location     Type
  5508 ;;  fmt             2    3[BANK2 ] PTR const unsigned char 
  5509 ;;		 -> STR_4(10), STR_3(9), STR_2(14), STR_1(15), 
  5510 ;; Auto vars:     Size  Location     Type
  5511 ;;  ret             2    0        int 
  5512 ;;  ap              1   11[BANK2 ] PTR void [1]
  5513 ;;		 -> ?_printf(2), 
  5514 ;; Return value:  Size  Location     Type
  5515 ;;                  2    3[BANK2 ] int 
  5516 ;; Registers used:
  5517 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5518 ;; Tracked objects:
  5519 ;;		On entry : 0/0
  5520 ;;		On exit  : 0/0
  5521 ;;		Unchanged: 0/0
  5522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5523 ;;      Params:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0
  5524 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  5525 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5526 ;;      Totals:         0       0       1       9       0       0       0       0       0       0       0       0       
      +0       0
  5527 ;;Total ram usage:       10 bytes
  5528 ;; Hardware stack levels used:    1
  5529 ;; Hardware stack levels required when called:   14
  5530 ;; This function calls:
  5531 ;;		_vfprintf
  5532 ;; This function is called by:
  5533 ;;		_main
  5534 ;; This function uses a non-reentrant model
  5535 ;;
  5536                           
  5537                           
  5538                           ;psect for function _printf
  5539  14F5                     _printf:	
  5540                           
  5541                           ;incstack = 0
  5542                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5543  14F5  3054               	movlw	(low ((?_printf| (0+256)+2)))& (0+255)
  5544  14F6  0021               	movlb	1	; select bank1
  5545  14F7  00EF               	movwf	??_printf^(0+128)
  5546  14F8  086F               	movf	??_printf^(0+128),w
  5547  14F9  0022               	movlb	2	; select bank2
  5548  14FA  00DA               	movwf	printf@ap^(0+256)
  5549  14FB  0853               	movf	(printf@fmt+1)^(0+256),w
  5550  14FC  0021               	movlb	1	; select bank1
  5551  14FD  00EB               	movwf	(vfprintf@fmt+1)^(0+128)
  5552  14FE  0022               	movlb	2	; select bank2
  5553  14FF  0852               	movf	printf@fmt^(0+256),w
  5554  1500  0021               	movlb	1	; select bank1
  5555  1501  00EA               	movwf	vfprintf@fmt^(0+128)
  5556  1502  305A               	movlw	(low (printf@ap| (0+256)))& (0+255)
  5557  1503  00EF               	movwf	??_printf^(0+128)
  5558  1504  086F               	movf	??_printf^(0+128),w
  5559  1505  00EC               	movwf	vfprintf@ap^(0+128)
  5560  1506  3000               	movlw	0
  5561  1507  3196  2652         	fcall	_vfprintf
  5562  1509  0008               	return
  5563  150A                     __end_of_printf:	
  5564                           
  5565                           	psect	text7
  5566  1652                     __ptext7:	
  5567 ;; *************** function _vfprintf *****************
  5568 ;; Defined at:
  5569 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5570 ;; Parameters:    Size  Location     Type
  5571 ;;  fp              1    wreg     PTR struct _IO_FILE
  5572 ;;		 -> NULL(0), 
  5573 ;;  fmt             2   74[BANK1 ] PTR const unsigned char 
  5574 ;;		 -> STR_4(10), STR_3(9), STR_2(14), STR_1(15), 
  5575 ;;  ap              1   76[BANK1 ] PTR PTR void 
  5576 ;;		 -> printf@ap(1), 
  5577 ;; Auto vars:     Size  Location     Type
  5578 ;;  fp              1    0[BANK2 ] PTR struct _IO_FILE
  5579 ;;		 -> NULL(0), 
  5580 ;;  cfmt            2    1[BANK2 ] PTR unsigned char 
  5581 ;;		 -> STR_4(10), STR_3(9), STR_2(14), STR_1(15), 
  5582 ;; Return value:  Size  Location     Type
  5583 ;;                  2   74[BANK1 ] int 
  5584 ;; Registers used:
  5585 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5586 ;; Tracked objects:
  5587 ;;		On entry : 0/0
  5588 ;;		On exit  : 0/0
  5589 ;;		Unchanged: 0/0
  5590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5591 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5592 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  5593 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5594 ;;      Totals:         0       0       5       3       0       0       0       0       0       0       0       0       
      +0       0
  5595 ;;Total ram usage:        8 bytes
  5596 ;; Hardware stack levels used:    1
  5597 ;; Hardware stack levels required when called:   13
  5598 ;; This function calls:
  5599 ;;		_vfpfcnvrt
  5600 ;; This function is called by:
  5601 ;;		_printf
  5602 ;; This function uses a non-reentrant model
  5603 ;;
  5604                           
  5605                           
  5606                           ;psect for function _vfprintf
  5607  1652                     _vfprintf:	
  5608                           
  5609                           ;incstack = 0
  5610                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5611                           ;vfprintf@fp stored from wreg
  5612  1652  0022               	movlb	2	; select bank2
  5613  1653  00CF               	movwf	vfprintf@fp^(0+256)
  5614                           
  5615                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  5616  1654  0021               	movlb	1	; select bank1
  5617  1655  086B               	movf	(vfprintf@fmt+1)^(0+128),w
  5618  1656  0022               	movlb	2	; select bank2
  5619  1657  00D1               	movwf	(vfprintf@cfmt+1)^(0+256)
  5620  1658  0021               	movlb	1	; select bank1
  5621  1659  086A               	movf	vfprintf@fmt^(0+128),w
  5622  165A  0022               	movlb	2	; select bank2
  5623  165B  00D0               	movwf	vfprintf@cfmt^(0+256)
  5624                           
  5625                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  5626  165C  01B0               	clrf	_nout^(0+256)
  5627  165D  01B1               	clrf	(_nout+1)^(0+256)
  5628  165E                     l3546:	
  5629                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  5630                           
  5631                           
  5632                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  5633  165E  0850               	movf	vfprintf@cfmt^(0+256),w
  5634  165F  0084               	movwf	4
  5635  1660  0851               	movf	(vfprintf@cfmt+1)^(0+256),w
  5636  1661  0085               	movwf	5
  5637  1662  0012               	moviw fsr0++
  5638  1663  1903               	btfsc	3,2
  5639  1664  2E7C               	goto	l3548
  5640                           
  5641                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  5642  1665  3050               	movlw	(low (vfprintf@cfmt| (0+256)))& (0+255)
  5643  1666  0021               	movlb	1	; select bank1
  5644  1667  00ED               	movwf	??_vfprintf^(0+128)
  5645  1668  086D               	movf	??_vfprintf^(0+128),w
  5646  1669  00DA               	movwf	vfpfcnvrt@fmt^(0+128)
  5647  166A  086C               	movf	vfprintf@ap^(0+128),w
  5648  166B  00EE               	movwf	(??_vfprintf+1)^(0+128)
  5649  166C  086E               	movf	(??_vfprintf+1)^(0+128),w
  5650  166D  00DB               	movwf	vfpfcnvrt@ap^(0+128)
  5651  166E  0022               	movlb	2	; select bank2
  5652  166F  084F               	movf	vfprintf@fp^(0+256),w
  5653  1670  318A  220F  3196   	fcall	_vfpfcnvrt
  5654  1673  0021               	movlb	1	; select bank1
  5655  1674  085A               	movf	?_vfpfcnvrt^(0+128),w
  5656  1675  0022               	movlb	2	; select bank2
  5657  1676  07B0               	addwf	_nout^(0+256),f
  5658  1677  0021               	movlb	1	; select bank1
  5659  1678  085B               	movf	(?_vfpfcnvrt+1)^(0+128),w
  5660  1679  0022               	movlb	2	; select bank2
  5661  167A  3DB1               	addwfc	(_nout+1)^(0+256),f
  5662  167B  2E5E               	goto	l3546
  5663  167C                     l3548:	
  5664                           
  5665                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  5666  167C  0831               	movf	(_nout+1)^(0+256),w
  5667  167D  0021               	movlb	1	; select bank1
  5668  167E  00EB               	movwf	(?_vfprintf+1)^(0+128)
  5669  167F  0022               	movlb	2	; select bank2
  5670  1680  0830               	movf	_nout^(0+256),w
  5671  1681  0021               	movlb	1	; select bank1
  5672  1682  00EA               	movwf	?_vfprintf^(0+128)
  5673  1683  0008               	return
  5674  1684                     __end_of_vfprintf:	
  5675                           
  5676                           	psect	text8
  5677  0A0F                     __ptext8:	
  5678 ;; *************** function _vfpfcnvrt *****************
  5679 ;; Defined at:
  5680 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5681 ;; Parameters:    Size  Location     Type
  5682 ;;  fp              1    wreg     PTR struct _IO_FILE
  5683 ;;		 -> NULL(0), 
  5684 ;;  fmt             1   58[BANK1 ] PTR PTR unsigned char 
  5685 ;;		 -> vfprintf@cfmt(2), 
  5686 ;;  ap              1   59[BANK1 ] PTR PTR void 
  5687 ;;		 -> printf@ap(1), 
  5688 ;; Auto vars:     Size  Location     Type
  5689 ;;  fp              1   73[BANK1 ] PTR struct _IO_FILE
  5690 ;;		 -> NULL(0), 
  5691 ;;  ll              8   65[BANK1 ] long long 
  5692 ;;  llu             8    0        unsigned long long 
  5693 ;;  f               4    0        unsigned long long 
  5694 ;;  ct              3    0        unsigned char [3]
  5695 ;;  vp              2    0        PTR void 
  5696 ;;  i               2    0        int 
  5697 ;;  done            2    0        int 
  5698 ;;  cp              2    0        PTR unsigned char 
  5699 ;;  c               1    0        unsigned char 
  5700 ;; Return value:  Size  Location     Type
  5701 ;;                  2   58[BANK1 ] int 
  5702 ;; Registers used:
  5703 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5704 ;; Tracked objects:
  5705 ;;		On entry : 0/0
  5706 ;;		On exit  : 0/0
  5707 ;;		Unchanged: 0/0
  5708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5709 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5710 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  5711 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  5712 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  5713 ;;Total ram usage:       16 bytes
  5714 ;; Hardware stack levels used:    1
  5715 ;; Hardware stack levels required when called:   12
  5716 ;; This function calls:
  5717 ;;		_dtoa
  5718 ;;		_fputc
  5719 ;; This function is called by:
  5720 ;;		_vfprintf
  5721 ;; This function uses a non-reentrant model
  5722 ;;
  5723                           
  5724                           
  5725                           ;psect for function _vfpfcnvrt
  5726  0A0F                     _vfpfcnvrt:	
  5727                           
  5728                           ;incstack = 0
  5729                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5730                           ;vfpfcnvrt@fp stored from wreg
  5731  0A0F  0021               	movlb	1	; select bank1
  5732  0A10  00E9               	movwf	vfpfcnvrt@fp^(0+128)
  5733                           
  5734                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  5735  0A11  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5736  0A12  0086               	movwf	6
  5737  0A13  3001               	movlw	1	; select bank2/3
  5738  0A14  0087               	movwf	7
  5739  0A15  3F40               	moviw [0]fsr1
  5740  0A16  00DC               	movwf	??_vfpfcnvrt^(0+128)
  5741  0A17  3F41               	moviw [1]fsr1
  5742  0A18  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5743  0A19  085C               	movf	??_vfpfcnvrt^(0+128),w
  5744  0A1A  0084               	movwf	4
  5745  0A1B  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5746  0A1C  0085               	movwf	5
  5747  0A1D  0012               	moviw fsr0++
  5748  0A1E  3A25               	xorlw	37
  5749  0A1F  1D03               	btfss	3,2
  5750  0A20  2AC8               	goto	l3232
  5751                           
  5752                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  5753  0A21  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5754  0A22  0086               	movwf	6
  5755  0A23  3001               	movlw	1	; select bank2/3
  5756  0A24  0087               	movwf	7
  5757  0A25  3001               	movlw	1
  5758  0A26  0781               	addwf	1,f
  5759  0A27  3141               	addfsr 1,1
  5760  0A28  1803               	skipnc
  5761  0A29  0A81               	incf	1,f
  5762                           
  5763                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  5764  0A2A  0022               	movlb	2	; select bank2
  5765  0A2B  01B2               	clrf	_width^(0+256)
  5766  0A2C  01B3               	clrf	(_width+1)^(0+256)
  5767  0A2D  0020               	movlb	0	; select bank0
  5768  0A2E  01E0               	clrf	_flags
  5769  0A2F  01E1               	clrf	_flags+1
  5770                           
  5771                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  5772  0A30  30FF               	movlw	255
  5773  0A31  0022               	movlb	2	; select bank2
  5774  0A32  00B4               	movwf	_prec^(0+256)
  5775  0A33  30FF               	movlw	255
  5776  0A34  00B5               	movwf	(_prec^(0+256)+1)
  5777                           
  5778                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  5779  0A35  0021               	movlb	1	; select bank1
  5780  0A36  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5781  0A37  0086               	movwf	6
  5782  0A38  3001               	movlw	1	; select bank2/3
  5783  0A39  0087               	movwf	7
  5784  0A3A  3F40               	moviw [0]fsr1
  5785  0A3B  00DC               	movwf	??_vfpfcnvrt^(0+128)
  5786  0A3C  3F41               	moviw [1]fsr1
  5787  0A3D  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5788  0A3E  085C               	movf	??_vfpfcnvrt^(0+128),w
  5789  0A3F  0084               	movwf	4
  5790  0A40  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5791  0A41  0085               	movwf	5
  5792  0A42  0012               	moviw fsr0++
  5793  0A43  3A64               	xorlw	100
  5794  0A44  1903               	btfsc	3,2
  5795  0A45  2A56               	goto	l3208
  5796  0A46  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5797  0A47  0086               	movwf	6
  5798  0A48  3001               	movlw	1	; select bank2/3
  5799  0A49  0087               	movwf	7
  5800  0A4A  3F40               	moviw [0]fsr1
  5801  0A4B  00DC               	movwf	??_vfpfcnvrt^(0+128)
  5802  0A4C  3F41               	moviw [1]fsr1
  5803  0A4D  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5804  0A4E  085C               	movf	??_vfpfcnvrt^(0+128),w
  5805  0A4F  0084               	movwf	4
  5806  0A50  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5807  0A51  0085               	movwf	5
  5808  0A52  0012               	moviw fsr0++
  5809  0A53  3A69               	xorlw	105
  5810  0A54  1D03               	btfss	3,2
  5811  0A55  2A93               	goto	l3216
  5812  0A56                     l3208:	
  5813                           
  5814                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  5815  0A56  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5816  0A57  0086               	movwf	6
  5817  0A58  3001               	movlw	1	; select bank2/3
  5818  0A59  0087               	movwf	7
  5819  0A5A  3001               	movlw	1
  5820  0A5B  0781               	addwf	1,f
  5821  0A5C  3141               	addfsr 1,1
  5822  0A5D  1803               	skipnc
  5823  0A5E  0A81               	incf	1,f
  5824                           
  5825                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  5826  0A5F  085B               	movf	vfpfcnvrt@ap^(0+128),w
  5827  0A60  0086               	movwf	6
  5828  0A61  3001               	movlw	1	; select bank2/3
  5829  0A62  0087               	movwf	7
  5830  0A63  0801               	movf	1,w
  5831  0A64  0084               	movwf	4
  5832  0A65  3001               	movlw	1	; select bank2/3
  5833  0A66  0085               	movwf	5
  5834  0A67  3002               	movlw	2
  5835  0A68  0781               	addwf	1,f
  5836  0A69  3F00               	moviw [0]fsr0
  5837  0A6A  00DC               	movwf	??_vfpfcnvrt^(0+128)
  5838  0A6B  3F01               	moviw [1]fsr0
  5839  0A6C  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5840  0A6D  085C               	movf	??_vfpfcnvrt^(0+128),w
  5841  0A6E  00E1               	movwf	vfpfcnvrt@ll^(0+128)
  5842  0A6F  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5843  0A70  00E2               	movwf	(vfpfcnvrt@ll+1)^(0+128)
  5844  0A71  0D89               	rlf	9,f
  5845  0A72  3B89               	subwfb	9,f
  5846  0A73  0989               	comf	9,f
  5847  0A74  00E3               	movwf	(vfpfcnvrt@ll+2)^(0+128)
  5848  0A75  00E4               	movwf	(vfpfcnvrt@ll+3)^(0+128)
  5849  0A76  00E5               	movwf	(vfpfcnvrt@ll+4)^(0+128)
  5850  0A77  00E6               	movwf	(vfpfcnvrt@ll+5)^(0+128)
  5851  0A78  00E7               	movwf	(vfpfcnvrt@ll+6)^(0+128)
  5852  0A79  00E8               	movwf	(vfpfcnvrt@ll+7)^(0+128)
  5853                           
  5854                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  5855  0A7A  0861               	movf	vfpfcnvrt@ll^(0+128),w
  5856  0A7B  00BC               	movwf	dtoa@d^(0+128)
  5857  0A7C  0862               	movf	(vfpfcnvrt@ll+1)^(0+128),w
  5858  0A7D  00BD               	movwf	(dtoa@d+1)^(0+128)
  5859  0A7E  0863               	movf	(vfpfcnvrt@ll+2)^(0+128),w
  5860  0A7F  00BE               	movwf	(dtoa@d+2)^(0+128)
  5861  0A80  0864               	movf	(vfpfcnvrt@ll+3)^(0+128),w
  5862  0A81  00BF               	movwf	(dtoa@d+3)^(0+128)
  5863  0A82  0865               	movf	(vfpfcnvrt@ll+4)^(0+128),w
  5864  0A83  00C0               	movwf	(dtoa@d+4)^(0+128)
  5865  0A84  0866               	movf	(vfpfcnvrt@ll+5)^(0+128),w
  5866  0A85  00C1               	movwf	(dtoa@d+5)^(0+128)
  5867  0A86  0867               	movf	(vfpfcnvrt@ll+6)^(0+128),w
  5868  0A87  00C2               	movwf	(dtoa@d+6)^(0+128)
  5869  0A88  0868               	movf	(vfpfcnvrt@ll+7)^(0+128),w
  5870  0A89  00C3               	movwf	(dtoa@d+7)^(0+128)
  5871  0A8A  0869               	movf	vfpfcnvrt@fp^(0+128),w
  5872  0A8B  318E  26AD         	fcall	_dtoa
  5873  0A8D  0021               	movlb	1	; select bank1
  5874  0A8E  083D               	movf	(?_dtoa+1)^(0+128),w
  5875  0A8F  00DB               	movwf	(?_vfpfcnvrt+1)^(0+128)
  5876  0A90  083C               	movf	?_dtoa^(0+128),w
  5877  0A91  00DA               	movwf	?_vfpfcnvrt^(0+128)
  5878  0A92  0008               	return
  5879  0A93                     l3216:	
  5880                           
  5881                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  5882  0A93  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5883  0A94  0086               	movwf	6
  5884  0A95  3001               	movlw	1	; select bank2/3
  5885  0A96  0087               	movwf	7
  5886  0A97  3F40               	moviw [0]fsr1
  5887  0A98  00DC               	movwf	??_vfpfcnvrt^(0+128)
  5888  0A99  3F41               	moviw [1]fsr1
  5889  0A9A  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5890  0A9B  085C               	movf	??_vfpfcnvrt^(0+128),w
  5891  0A9C  0084               	movwf	4
  5892  0A9D  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5893  0A9E  0085               	movwf	5
  5894  0A9F  0012               	moviw fsr0++
  5895  0AA0  3A25               	xorlw	37
  5896  0AA1  1D03               	btfss	3,2
  5897  0AA2  2ABC               	goto	l3226
  5898                           
  5899                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  5900  0AA3  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5901  0AA4  0086               	movwf	6
  5902  0AA5  3001               	movlw	1	; select bank2/3
  5903  0AA6  0087               	movwf	7
  5904  0AA7  3001               	movlw	1
  5905  0AA8  0781               	addwf	1,f
  5906  0AA9  3141               	addfsr 1,1
  5907  0AAA  1803               	skipnc
  5908  0AAB  0A81               	incf	1,f
  5909                           
  5910                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  5911  0AAC  3025               	movlw	37
  5912  0AAD  00A2               	movwf	fputc@c^(0+128)
  5913  0AAE  3000               	movlw	0
  5914  0AAF  00A3               	movwf	(fputc@c^(0+128)+1)
  5915  0AB0  0869               	movf	vfpfcnvrt@fp^(0+128),w
  5916  0AB1  00DC               	movwf	??_vfpfcnvrt^(0+128)
  5917  0AB2  085C               	movf	??_vfpfcnvrt^(0+128),w
  5918  0AB3  00A4               	movwf	fputc@fp^(0+128)
  5919  0AB4  3197  2729         	fcall	_fputc
  5920  0AB6                     l3222:	
  5921                           
  5922                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  5923  0AB6  3001               	movlw	1
  5924  0AB7  0021               	movlb	1	; select bank1
  5925  0AB8  00DA               	movwf	?_vfpfcnvrt^(0+128)
  5926  0AB9  3000               	movlw	0
  5927  0ABA  00DB               	movwf	(?_vfpfcnvrt^(0+128)+1)
  5928  0ABB  0008               	return
  5929  0ABC                     l3226:	
  5930                           
  5931                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  5932  0ABC  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5933  0ABD  0086               	movwf	6
  5934  0ABE  3001               	movlw	1	; select bank2/3
  5935  0ABF  0087               	movwf	7
  5936  0AC0  3001               	movlw	1
  5937  0AC1  0781               	addwf	1,f
  5938  0AC2  3141               	addfsr 1,1
  5939  0AC3  1803               	skipnc
  5940  0AC4  0A81               	incf	1,f
  5941                           
  5942                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  5943  0AC5  01DA               	clrf	?_vfpfcnvrt^(0+128)
  5944  0AC6  01DB               	clrf	(?_vfpfcnvrt+1)^(0+128)
  5945  0AC7  0008               	return
  5946  0AC8                     l3232:	
  5947                           
  5948                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  5949  0AC8  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5950  0AC9  0086               	movwf	6
  5951  0ACA  3001               	movlw	1	; select bank2/3
  5952  0ACB  0087               	movwf	7
  5953  0ACC  3F40               	moviw [0]fsr1
  5954  0ACD  00DC               	movwf	??_vfpfcnvrt^(0+128)
  5955  0ACE  3F41               	moviw [1]fsr1
  5956  0ACF  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5957  0AD0  085C               	movf	??_vfpfcnvrt^(0+128),w
  5958  0AD1  0084               	movwf	4
  5959  0AD2  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5960  0AD3  0085               	movwf	5
  5961  0AD4  0800               	movf	0,w	;code access
  5962  0AD5  00DE               	movwf	(??_vfpfcnvrt+2)^(0+128)
  5963  0AD6  01DF               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  5964  0AD7  085E               	movf	(??_vfpfcnvrt+2)^(0+128),w
  5965  0AD8  00A2               	movwf	fputc@c^(0+128)
  5966  0AD9  085F               	movf	(??_vfpfcnvrt+3)^(0+128),w
  5967  0ADA  00A3               	movwf	(fputc@c+1)^(0+128)
  5968  0ADB  0869               	movf	vfpfcnvrt@fp^(0+128),w
  5969  0ADC  00E0               	movwf	(??_vfpfcnvrt+4)^(0+128)
  5970  0ADD  0860               	movf	(??_vfpfcnvrt+4)^(0+128),w
  5971  0ADE  00A4               	movwf	fputc@fp^(0+128)
  5972  0ADF  3197  2729  318A   	fcall	_fputc
  5973                           
  5974                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  5975  0AE2  0021               	movlb	1	; select bank1
  5976  0AE3  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5977  0AE4  0086               	movwf	6
  5978  0AE5  3001               	movlw	1	; select bank2/3
  5979  0AE6  0087               	movwf	7
  5980  0AE7  3001               	movlw	1
  5981  0AE8  0781               	addwf	1,f
  5982  0AE9  3141               	addfsr 1,1
  5983  0AEA  1803               	skipnc
  5984  0AEB  0A81               	incf	1,f
  5985  0AEC  2AB6               	goto	l3222
  5986  0AED                     __end_of_vfpfcnvrt:	
  5987                           
  5988                           	psect	text9
  5989  0EAD                     __ptext9:	
  5990 ;; *************** function _dtoa *****************
  5991 ;; Defined at:
  5992 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5993 ;; Parameters:    Size  Location     Type
  5994 ;;  fp              1    wreg     PTR struct _IO_FILE
  5995 ;;		 -> NULL(0), 
  5996 ;;  d               8   28[BANK1 ] long long 
  5997 ;; Auto vars:     Size  Location     Type
  5998 ;;  fp              1   43[BANK1 ] PTR struct _IO_FILE
  5999 ;;		 -> NULL(0), 
  6000 ;;  n               8   48[BANK1 ] long long 
  6001 ;;  i               2   56[BANK1 ] int 
  6002 ;;  s               2   46[BANK1 ] int 
  6003 ;;  w               2   44[BANK1 ] int 
  6004 ;;  p               2   41[BANK1 ] int 
  6005 ;; Return value:  Size  Location     Type
  6006 ;;                  2   28[BANK1 ] int 
  6007 ;; Registers used:
  6008 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6009 ;; Tracked objects:
  6010 ;;		On entry : 0/0
  6011 ;;		On exit  : 0/0
  6012 ;;		Unchanged: 0/0
  6013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6014 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  6015 ;;      Locals:         0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0
  6016 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6017 ;;      Totals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0
  6018 ;;Total ram usage:       30 bytes
  6019 ;; Hardware stack levels used:    1
  6020 ;; Hardware stack levels required when called:   11
  6021 ;; This function calls:
  6022 ;;		___aodiv
  6023 ;;		___aomod
  6024 ;;		_abs
  6025 ;;		_pad
  6026 ;; This function is called by:
  6027 ;;		_vfpfcnvrt
  6028 ;; This function uses a non-reentrant model
  6029 ;;
  6030                           
  6031                           
  6032                           ;psect for function _dtoa
  6033  0EAD                     _dtoa:	
  6034                           
  6035                           ;incstack = 0
  6036                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6037                           ;dtoa@fp stored from wreg
  6038  0EAD  0021               	movlb	1	; select bank1
  6039  0EAE  00CB               	movwf	dtoa@fp^(0+128)
  6040                           
  6041                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  6042  0EAF  083C               	movf	dtoa@d^(0+128),w
  6043  0EB0  00D0               	movwf	dtoa@n^(0+128)
  6044  0EB1  083D               	movf	(dtoa@d+1)^(0+128),w
  6045  0EB2  00D1               	movwf	(dtoa@n+1)^(0+128)
  6046  0EB3  083E               	movf	(dtoa@d+2)^(0+128),w
  6047  0EB4  00D2               	movwf	(dtoa@n+2)^(0+128)
  6048  0EB5  083F               	movf	(dtoa@d+3)^(0+128),w
  6049  0EB6  00D3               	movwf	(dtoa@n+3)^(0+128)
  6050  0EB7  0840               	movf	(dtoa@d+4)^(0+128),w
  6051  0EB8  00D4               	movwf	(dtoa@n+4)^(0+128)
  6052  0EB9  0841               	movf	(dtoa@d+5)^(0+128),w
  6053  0EBA  00D5               	movwf	(dtoa@n+5)^(0+128)
  6054  0EBB  0842               	movf	(dtoa@d+6)^(0+128),w
  6055  0EBC  00D6               	movwf	(dtoa@n+6)^(0+128)
  6056  0EBD  0843               	movf	(dtoa@d+7)^(0+128),w
  6057  0EBE  00D7               	movwf	(dtoa@n+7)^(0+128)
  6058                           
  6059                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  6060  0EBF  30D0               	movlw	low dtoa@n
  6061  0EC0  0086               	movwf	6
  6062  0EC1  3000               	movlw	high dtoa@n
  6063  0EC2  0087               	movwf	7
  6064  0EC3  3F47               	moviw [7]fsr1
  6065  0EC4  00C4               	movwf	??_dtoa^(0+128)
  6066  0EC5  1FC4               	btfss	??_dtoa^(0+128),7
  6067  0EC6  2EC9               	goto	u2970
  6068  0EC7  3001               	movlw	1
  6069  0EC8  2ECA               	goto	u2980
  6070  0EC9                     u2970:	
  6071  0EC9  3000               	movlw	0
  6072  0ECA                     u2980:	
  6073  0ECA  0021               	movlb	1	; select bank1
  6074  0ECB  00C5               	movwf	(??_dtoa+1)^(0+128)
  6075  0ECC  01C6               	clrf	((??_dtoa+1)^(0+128)+1)
  6076  0ECD  0845               	movf	(??_dtoa+1)^(0+128),w
  6077  0ECE  00CE               	movwf	dtoa@s^(0+128)
  6078  0ECF  0846               	movf	(??_dtoa+2)^(0+128),w
  6079  0ED0  00CF               	movwf	(dtoa@s+1)^(0+128)
  6080                           
  6081                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  6082  0ED1  084E               	movf	dtoa@s^(0+128),w
  6083  0ED2  044F               	iorwf	(dtoa@s+1)^(0+128),w
  6084  0ED3  1903               	btfsc	3,2
  6085  0ED4  2EF3               	goto	l552
  6086                           
  6087                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  6088  0ED5  09D0               	comf	dtoa@n^(0+128),f
  6089  0ED6  09D1               	comf	(dtoa@n+1)^(0+128),f
  6090  0ED7  09D2               	comf	(dtoa@n+2)^(0+128),f
  6091  0ED8  09D3               	comf	(dtoa@n+3)^(0+128),f
  6092  0ED9  09D4               	comf	(dtoa@n+4)^(0+128),f
  6093  0EDA  09D5               	comf	(dtoa@n+5)^(0+128),f
  6094  0EDB  09D6               	comf	(dtoa@n+6)^(0+128),f
  6095  0EDC  09D7               	comf	(dtoa@n+7)^(0+128),f
  6096  0EDD  0AD0               	incf	dtoa@n^(0+128),f
  6097  0EDE  1D03               	skipz
  6098  0EDF  2EF3               	goto	l552
  6099  0EE0  0AD1               	incf	(dtoa@n+1)^(0+128),f
  6100  0EE1  1D03               	skipz
  6101  0EE2  2EF3               	goto	l552
  6102  0EE3  0AD2               	incf	(dtoa@n+2)^(0+128),f
  6103  0EE4  1D03               	skipz
  6104  0EE5  2EF3               	goto	l552
  6105  0EE6  0AD3               	incf	(dtoa@n+3)^(0+128),f
  6106  0EE7  1D03               	skipz
  6107  0EE8  2EF3               	goto	l552
  6108  0EE9  0AD4               	incf	(dtoa@n+4)^(0+128),f
  6109  0EEA  1D03               	skipz
  6110  0EEB  2EF3               	goto	l552
  6111  0EEC  0AD5               	incf	(dtoa@n+5)^(0+128),f
  6112  0EED  1D03               	skipz
  6113  0EEE  2EF3               	goto	l552
  6114  0EEF  0AD6               	incf	(dtoa@n+6)^(0+128),f
  6115  0EF0  1D03               	skipz
  6116  0EF1  2EF3               	goto	l552
  6117  0EF2  0AD7               	incf	(dtoa@n+7)^(0+128),f
  6118  0EF3                     l552:	
  6119                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 284:     }
  6120                           
  6121                           
  6122                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  6123  0EF3  0022               	movlb	2	; select bank2
  6124  0EF4  1BB5               	btfsc	(_prec+1)^(0+256),7
  6125  0EF5  2EFB               	goto	l553
  6126                           
  6127                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  6128  0EF6  30FD               	movlw	253
  6129  0EF7  0020               	movlb	0	; select bank0
  6130  0EF8  05E0               	andwf	_flags,f
  6131  0EF9  30FF               	movlw	255
  6132  0EFA  05E1               	andwf	_flags+1,f
  6133  0EFB                     l553:	
  6134                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 289:     }
  6135                           
  6136                           
  6137                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  6138  0EFB  0022               	movlb	2	; select bank2
  6139  0EFC  0835               	movf	(_prec+1)^(0+256),w
  6140  0EFD  3A80               	xorlw	128
  6141  0EFE  0021               	movlb	1	; select bank1
  6142  0EFF  00C4               	movwf	??_dtoa^(0+128)
  6143  0F00  3080               	movlw	128
  6144  0F01  0244               	subwf	??_dtoa^(0+128),w
  6145  0F02  1D03               	skipz
  6146  0F03  2F07               	goto	u3025
  6147  0F04  3001               	movlw	1
  6148  0F05  0022               	movlb	2	; select bank2
  6149  0F06  0234               	subwf	_prec^(0+256),w
  6150  0F07                     u3025:	
  6151  0F07  1803               	skipnc
  6152  0F08  2F0F               	goto	l2732
  6153  0F09  3001               	movlw	1
  6154  0F0A  0021               	movlb	1	; select bank1
  6155  0F0B  00C9               	movwf	dtoa@p^(0+128)
  6156  0F0C  3000               	movlw	0
  6157  0F0D  00CA               	movwf	(dtoa@p^(0+128)+1)
  6158  0F0E  2F17               	goto	l557
  6159  0F0F                     l2732:	
  6160  0F0F  0022               	movlb	2	; select bank2
  6161  0F10  0835               	movf	(_prec+1)^(0+256),w
  6162  0F11  0021               	movlb	1	; select bank1
  6163  0F12  00CA               	movwf	(dtoa@p+1)^(0+128)
  6164  0F13  0022               	movlb	2	; select bank2
  6165  0F14  0834               	movf	_prec^(0+256),w
  6166  0F15  0021               	movlb	1	; select bank1
  6167  0F16  00C9               	movwf	dtoa@p^(0+128)
  6168  0F17                     l557:	
  6169                           
  6170                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  6171  0F17  0022               	movlb	2	; select bank2
  6172  0F18  0833               	movf	(_width+1)^(0+256),w
  6173  0F19  0021               	movlb	1	; select bank1
  6174  0F1A  00CD               	movwf	(dtoa@w+1)^(0+128)
  6175  0F1B  0022               	movlb	2	; select bank2
  6176  0F1C  0832               	movf	_width^(0+256),w
  6177  0F1D  0021               	movlb	1	; select bank1
  6178  0F1E  00CC               	movwf	dtoa@w^(0+128)
  6179                           
  6180                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  6181  0F1F  084E               	movf	dtoa@s^(0+128),w
  6182  0F20  044F               	iorwf	(dtoa@s+1)^(0+128),w
  6183  0F21  1D03               	btfss	3,2
  6184  0F22  2F26               	goto	l2738
  6185  0F23  0020               	movlb	0	; select bank0
  6186  0F24  1D60               	btfss	_flags,2
  6187  0F25  2F2B               	goto	l558
  6188  0F26                     l2738:	
  6189                           
  6190                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  6191  0F26  30FF               	movlw	255
  6192  0F27  0021               	movlb	1	; select bank1
  6193  0F28  07CC               	addwf	dtoa@w^(0+128),f
  6194  0F29  30FF               	movlw	255
  6195  0F2A  3DCD               	addwfc	(dtoa@w+1)^(0+128),f
  6196  0F2B                     l558:	
  6197                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 294:     }
  6198                           
  6199                           
  6200                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  6201  0F2B  301F               	movlw	31
  6202  0F2C  0021               	movlb	1	; select bank1
  6203  0F2D  00D8               	movwf	dtoa@i^(0+128)
  6204  0F2E  3000               	movlw	0
  6205  0F2F  00D9               	movwf	(dtoa@i^(0+128)+1)
  6206                           
  6207                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  6208  0F30  0024               	movlb	4	; select bank4
  6209  0F31  01BF               	clrf	(_dbuf^(0+512)+31)
  6210                           
  6211                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6212  0F32  2FC1               	goto	l561
  6213  0F33                     l2752:	
  6214  0F33  0021               	movlb	1	; select bank1
  6215  0F34  0850               	movf	dtoa@n^(0+128),w
  6216  0F35  0451               	iorwf	(dtoa@n+1)^(0+128),w
  6217  0F36  0452               	iorwf	(dtoa@n+2)^(0+128),w
  6218  0F37  0453               	iorwf	(dtoa@n+3)^(0+128),w
  6219  0F38  0454               	iorwf	(dtoa@n+4)^(0+128),w
  6220  0F39  0455               	iorwf	(dtoa@n+5)^(0+128),w
  6221  0F3A  0456               	iorwf	(dtoa@n+6)^(0+128),w
  6222  0F3B  0457               	iorwf	(dtoa@n+7)^(0+128),w
  6223  0F3C  1D03               	skipz
  6224  0F3D  2F58               	goto	l2742
  6225  0F3E  084A               	movf	(dtoa@p+1)^(0+128),w
  6226  0F3F  3A80               	xorlw	128
  6227  0F40  00C4               	movwf	??_dtoa^(0+128)
  6228  0F41  3080               	movlw	128
  6229  0F42  0244               	subwf	??_dtoa^(0+128),w
  6230  0F43  1D03               	skipz
  6231  0F44  2F47               	goto	u3075
  6232  0F45  3001               	movlw	1
  6233  0F46  0249               	subwf	dtoa@p^(0+128),w
  6234  0F47                     u3075:	
  6235  0F47  1803               	skipnc
  6236  0F48  2F58               	goto	l2742
  6237  0F49  0021               	movlb	1	; select bank1
  6238  0F4A  084D               	movf	(dtoa@w+1)^(0+128),w
  6239  0F4B  3A80               	xorlw	128
  6240  0F4C  00C4               	movwf	??_dtoa^(0+128)
  6241  0F4D  3080               	movlw	128
  6242  0F4E  0244               	subwf	??_dtoa^(0+128),w
  6243  0F4F  1D03               	skipz
  6244  0F50  2F53               	goto	u3085
  6245  0F51  3001               	movlw	1
  6246  0F52  024C               	subwf	dtoa@w^(0+128),w
  6247  0F53                     u3085:	
  6248  0F53  1C03               	skipc
  6249  0F54  2FCD               	goto	l2760
  6250  0F55  0020               	movlb	0	; select bank0
  6251  0F56  1CE0               	btfss	_flags,1
  6252  0F57  2FCD               	goto	l2760
  6253  0F58                     l2742:	
  6254                           
  6255                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  6256  0F58  30FF               	movlw	255
  6257  0F59  0021               	movlb	1	; select bank1
  6258  0F5A  07D8               	addwf	dtoa@i^(0+128),f
  6259  0F5B  30FF               	movlw	255
  6260  0F5C  3DD9               	addwfc	(dtoa@i+1)^(0+128),f
  6261                           
  6262                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  6263  0F5D  300A               	movlw	10
  6264  0F5E  00A0               	movwf	___aomod@divisor^(0+128)
  6265  0F5F  01A1               	clrf	(___aomod@divisor+1)^(0+128)
  6266  0F60  01A2               	clrf	(___aomod@divisor+2)^(0+128)
  6267  0F61  01A3               	clrf	(___aomod@divisor+3)^(0+128)
  6268  0F62  01A4               	clrf	(___aomod@divisor+4)^(0+128)
  6269  0F63  01A5               	clrf	(___aomod@divisor+5)^(0+128)
  6270  0F64  01A6               	clrf	(___aomod@divisor+6)^(0+128)
  6271  0F65  01A7               	clrf	(___aomod@divisor+7)^(0+128)
  6272  0F66  0850               	movf	dtoa@n^(0+128),w
  6273  0F67  00A8               	movwf	___aomod@dividend^(0+128)
  6274  0F68  0851               	movf	(dtoa@n+1)^(0+128),w
  6275  0F69  00A9               	movwf	(___aomod@dividend+1)^(0+128)
  6276  0F6A  0852               	movf	(dtoa@n+2)^(0+128),w
  6277  0F6B  00AA               	movwf	(___aomod@dividend+2)^(0+128)
  6278  0F6C  0853               	movf	(dtoa@n+3)^(0+128),w
  6279  0F6D  00AB               	movwf	(___aomod@dividend+3)^(0+128)
  6280  0F6E  0854               	movf	(dtoa@n+4)^(0+128),w
  6281  0F6F  00AC               	movwf	(___aomod@dividend+4)^(0+128)
  6282  0F70  0855               	movf	(dtoa@n+5)^(0+128),w
  6283  0F71  00AD               	movwf	(___aomod@dividend+5)^(0+128)
  6284  0F72  0856               	movf	(dtoa@n+6)^(0+128),w
  6285  0F73  00AE               	movwf	(___aomod@dividend+6)^(0+128)
  6286  0F74  0857               	movf	(dtoa@n+7)^(0+128),w
  6287  0F75  00AF               	movwf	(___aomod@dividend+7)^(0+128)
  6288  0F76  318A  22ED  318E   	fcall	___aomod
  6289  0F79  0021               	movlb	1	; select bank1
  6290  0F7A  0821               	movf	(?___aomod+1)^(0+128),w
  6291  0F7B  00B4               	movwf	(abs@a+1)^(0+128)
  6292  0F7C  0820               	movf	?___aomod^(0+128),w
  6293  0F7D  00B3               	movwf	abs@a^(0+128)
  6294  0F7E  3195  2537  318E   	fcall	_abs
  6295  0F81  0021               	movlb	1	; select bank1
  6296  0F82  0833               	movf	?_abs^(0+128),w
  6297  0F83  3E30               	addlw	48
  6298  0F84  00C4               	movwf	??_dtoa^(0+128)
  6299  0F85  0858               	movf	dtoa@i^(0+128),w
  6300  0F86  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6301  0F87  0086               	movwf	6
  6302  0F88  3002               	movlw	2	; select bank4/5
  6303  0F89  0087               	movwf	7
  6304  0F8A  0844               	movf	??_dtoa^(0+128),w
  6305  0F8B  0081               	movwf	1
  6306                           
  6307                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  6308  0F8C  30FF               	movlw	255
  6309  0F8D  07C9               	addwf	dtoa@p^(0+128),f
  6310  0F8E  30FF               	movlw	255
  6311  0F8F  3DCA               	addwfc	(dtoa@p+1)^(0+128),f
  6312                           
  6313                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  6314  0F90  30FF               	movlw	255
  6315  0F91  07CC               	addwf	dtoa@w^(0+128),f
  6316  0F92  30FF               	movlw	255
  6317  0F93  3DCD               	addwfc	(dtoa@w+1)^(0+128),f
  6318                           
  6319                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  6320  0F94  300A               	movlw	10
  6321  0F95  00A0               	movwf	___aodiv@divisor^(0+128)
  6322  0F96  01A1               	clrf	(___aodiv@divisor+1)^(0+128)
  6323  0F97  01A2               	clrf	(___aodiv@divisor+2)^(0+128)
  6324  0F98  01A3               	clrf	(___aodiv@divisor+3)^(0+128)
  6325  0F99  01A4               	clrf	(___aodiv@divisor+4)^(0+128)
  6326  0F9A  01A5               	clrf	(___aodiv@divisor+5)^(0+128)
  6327  0F9B  01A6               	clrf	(___aodiv@divisor+6)^(0+128)
  6328  0F9C  01A7               	clrf	(___aodiv@divisor+7)^(0+128)
  6329  0F9D  0850               	movf	dtoa@n^(0+128),w
  6330  0F9E  00A8               	movwf	___aodiv@dividend^(0+128)
  6331  0F9F  0851               	movf	(dtoa@n+1)^(0+128),w
  6332  0FA0  00A9               	movwf	(___aodiv@dividend+1)^(0+128)
  6333  0FA1  0852               	movf	(dtoa@n+2)^(0+128),w
  6334  0FA2  00AA               	movwf	(___aodiv@dividend+2)^(0+128)
  6335  0FA3  0853               	movf	(dtoa@n+3)^(0+128),w
  6336  0FA4  00AB               	movwf	(___aodiv@dividend+3)^(0+128)
  6337  0FA5  0854               	movf	(dtoa@n+4)^(0+128),w
  6338  0FA6  00AC               	movwf	(___aodiv@dividend+4)^(0+128)
  6339  0FA7  0855               	movf	(dtoa@n+5)^(0+128),w
  6340  0FA8  00AD               	movwf	(___aodiv@dividend+5)^(0+128)
  6341  0FA9  0856               	movf	(dtoa@n+6)^(0+128),w
  6342  0FAA  00AE               	movwf	(___aodiv@dividend+6)^(0+128)
  6343  0FAB  0857               	movf	(dtoa@n+7)^(0+128),w
  6344  0FAC  00AF               	movwf	(___aodiv@dividend+7)^(0+128)
  6345  0FAD  318C  24AC  318E   	fcall	___aodiv
  6346  0FB0  0021               	movlb	1	; select bank1
  6347  0FB1  0820               	movf	?___aodiv^(0+128),w
  6348  0FB2  00D0               	movwf	dtoa@n^(0+128)
  6349  0FB3  0821               	movf	(?___aodiv+1)^(0+128),w
  6350  0FB4  00D1               	movwf	(dtoa@n+1)^(0+128)
  6351  0FB5  0822               	movf	(?___aodiv+2)^(0+128),w
  6352  0FB6  00D2               	movwf	(dtoa@n+2)^(0+128)
  6353  0FB7  0823               	movf	(?___aodiv+3)^(0+128),w
  6354  0FB8  00D3               	movwf	(dtoa@n+3)^(0+128)
  6355  0FB9  0824               	movf	(?___aodiv+4)^(0+128),w
  6356  0FBA  00D4               	movwf	(dtoa@n+4)^(0+128)
  6357  0FBB  0825               	movf	(?___aodiv+5)^(0+128),w
  6358  0FBC  00D5               	movwf	(dtoa@n+5)^(0+128)
  6359  0FBD  0826               	movf	(?___aodiv+6)^(0+128),w
  6360  0FBE  00D6               	movwf	(dtoa@n+6)^(0+128)
  6361  0FBF  0827               	movf	(?___aodiv+7)^(0+128),w
  6362  0FC0  00D7               	movwf	(dtoa@n+7)^(0+128)
  6363  0FC1                     l561:	
  6364                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 305:     }
  6365                           
  6366                           
  6367                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6368  0FC1  0021               	movlb	1	; select bank1
  6369  0FC2  0859               	movf	(dtoa@i+1)^(0+128),w
  6370  0FC3  3A80               	xorlw	128
  6371  0FC4  00C4               	movwf	??_dtoa^(0+128)
  6372  0FC5  3080               	movlw	128
  6373  0FC6  0244               	subwf	??_dtoa^(0+128),w
  6374  0FC7  1D03               	skipz
  6375  0FC8  2FCB               	goto	u3055
  6376  0FC9  3001               	movlw	1
  6377  0FCA  0258               	subwf	dtoa@i^(0+128),w
  6378  0FCB                     u3055:	
  6379  0FCB  1803               	btfsc	3,0
  6380  0FCC  2F33               	goto	l2752
  6381  0FCD                     l2760:	
  6382                           
  6383                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  6384  0FCD  0021               	movlb	1	; select bank1
  6385  0FCE  084E               	movf	dtoa@s^(0+128),w
  6386  0FCF  044F               	iorwf	(dtoa@s+1)^(0+128),w
  6387  0FD0  1D03               	btfss	3,2
  6388  0FD1  2FD5               	goto	l2764
  6389  0FD2  0020               	movlb	0	; select bank0
  6390  0FD3  1D60               	btfss	_flags,2
  6391  0FD4  2FED               	goto	l2774
  6392  0FD5                     l2764:	
  6393                           
  6394                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  6395  0FD5  30FF               	movlw	255
  6396  0FD6  0021               	movlb	1	; select bank1
  6397  0FD7  07D8               	addwf	dtoa@i^(0+128),f
  6398  0FD8  30FF               	movlw	255
  6399  0FD9  3DD9               	addwfc	(dtoa@i+1)^(0+128),f
  6400                           
  6401                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  6402  0FDA  084E               	movf	dtoa@s^(0+128),w
  6403  0FDB  044F               	iorwf	(dtoa@s+1)^(0+128),w
  6404  0FDC  1D03               	btfss	3,2
  6405  0FDD  2FE0               	goto	l2770
  6406  0FDE  302B               	movlw	43
  6407  0FDF  2FE1               	goto	L2
  6408  0FE0                     l2770:	
  6409  0FE0  302D               	movlw	45
  6410  0FE1                     L2:	
  6411  0FE1  00C7               	movwf	_dtoa$792^(0+128)
  6412  0FE2  3000               	movlw	0
  6413  0FE3  00C8               	movwf	(_dtoa$792^(0+128)+1)
  6414  0FE4  0847               	movf	_dtoa$792^(0+128),w
  6415  0FE5  00C4               	movwf	??_dtoa^(0+128)
  6416  0FE6  0858               	movf	dtoa@i^(0+128),w
  6417  0FE7  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6418  0FE8  0086               	movwf	6
  6419  0FE9  3002               	movlw	2	; select bank4/5
  6420  0FEA  0087               	movwf	7
  6421  0FEB  0844               	movf	??_dtoa^(0+128),w
  6422  0FEC  0081               	movwf	1
  6423  0FED                     l2774:	
  6424                           
  6425                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  6426  0FED  0021               	movlb	1	; select bank1
  6427  0FEE  0858               	movf	dtoa@i^(0+128),w
  6428  0FEF  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6429  0FF0  00C4               	movwf	??_dtoa^(0+128)
  6430  0FF1  0844               	movf	??_dtoa^(0+128),w
  6431  0FF2  00B3               	movwf	pad@buf^(0+128)
  6432  0FF3  084D               	movf	(dtoa@w+1)^(0+128),w
  6433  0FF4  00B5               	movwf	(pad@p+1)^(0+128)
  6434  0FF5  084C               	movf	dtoa@w^(0+128),w
  6435  0FF6  00B4               	movwf	pad@p^(0+128)
  6436  0FF7  084B               	movf	dtoa@fp^(0+128),w
  6437  0FF8  3188  2055         	fcall	_pad
  6438  0FFA  0021               	movlb	1	; select bank1
  6439  0FFB  0834               	movf	(?_pad+1)^(0+128),w
  6440  0FFC  00BD               	movwf	(?_dtoa+1)^(0+128)
  6441  0FFD  0833               	movf	?_pad^(0+128),w
  6442  0FFE  00BC               	movwf	?_dtoa^(0+128)
  6443  0FFF  0008               	return
  6444  1000                     __end_of_dtoa:	
  6445                           
  6446                           	psect	text10
  6447  0855                     __ptext10:	
  6448 ;; *************** function _pad *****************
  6449 ;; Defined at:
  6450 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6451 ;; Parameters:    Size  Location     Type
  6452 ;;  fp              1    wreg     PTR struct _IO_FILE
  6453 ;;		 -> NULL(0), 
  6454 ;;  buf             1   19[BANK1 ] PTR unsigned char 
  6455 ;;		 -> dbuf(32), 
  6456 ;;  p               2   20[BANK1 ] int 
  6457 ;; Auto vars:     Size  Location     Type
  6458 ;;  fp              1   27[BANK1 ] PTR struct _IO_FILE
  6459 ;;		 -> NULL(0), 
  6460 ;;  w               2   25[BANK1 ] int 
  6461 ;;  i               2   23[BANK1 ] int 
  6462 ;; Return value:  Size  Location     Type
  6463 ;;                  2   19[BANK1 ] int 
  6464 ;; Registers used:
  6465 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6466 ;; Tracked objects:
  6467 ;;		On entry : 0/0
  6468 ;;		On exit  : 0/0
  6469 ;;		Unchanged: 0/0
  6470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6471 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6472 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  6473 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6474 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  6475 ;;Total ram usage:        9 bytes
  6476 ;; Hardware stack levels used:    1
  6477 ;; Hardware stack levels required when called:   10
  6478 ;; This function calls:
  6479 ;;		_fputc
  6480 ;;		_fputs
  6481 ;;		_strlen
  6482 ;; This function is called by:
  6483 ;;		_dtoa
  6484 ;; This function uses a non-reentrant model
  6485 ;;
  6486                           
  6487                           
  6488                           ;psect for function _pad
  6489  0855                     _pad:	
  6490                           
  6491                           ;incstack = 0
  6492                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6493                           ;pad@fp stored from wreg
  6494  0855  0021               	movlb	1	; select bank1
  6495  0856  00BB               	movwf	pad@fp^(0+128)
  6496                           
  6497                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  6498  0857  0020               	movlb	0	; select bank0
  6499  0858  1C60               	btfss	_flags,0
  6500  0859  2866               	goto	l2616
  6501                           
  6502                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  6503  085A  0021               	movlb	1	; select bank1
  6504  085B  0833               	movf	pad@buf^(0+128),w
  6505  085C  00AA               	movwf	fputs@s^(0+128)
  6506  085D  3002               	movlw	2
  6507  085E  00AB               	movwf	(fputs@s+1)^(0+128)
  6508  085F  083B               	movf	pad@fp^(0+128),w
  6509  0860  00B6               	movwf	??_pad^(0+128)
  6510  0861  0836               	movf	??_pad^(0+128),w
  6511  0862  00AC               	movwf	fputs@fp^(0+128)
  6512  0863  3196  2629  3188   	fcall	_fputs
  6513  0866                     l2616:	
  6514                           
  6515                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  6516  0866  0021               	movlb	1	; select bank1
  6517  0867  1BB5               	btfsc	(pad@p+1)^(0+128),7
  6518  0868  286E               	goto	l2620
  6519  0869  0835               	movf	(pad@p+1)^(0+128),w
  6520  086A  00BA               	movwf	(pad@w+1)^(0+128)
  6521  086B  0834               	movf	pad@p^(0+128),w
  6522  086C  00B9               	movwf	pad@w^(0+128)
  6523  086D  2870               	goto	l544
  6524  086E                     l2620:	
  6525  086E  01B9               	clrf	pad@w^(0+128)
  6526  086F  01BA               	clrf	(pad@w+1)^(0+128)
  6527  0870                     l544:	
  6528                           
  6529                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  6530  0870  01B7               	clrf	pad@i^(0+128)
  6531  0871  01B8               	clrf	(pad@i+1)^(0+128)
  6532  0872                     l2626:	
  6533                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  6534                           
  6535                           
  6536                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  6537  0872  0838               	movf	(pad@i+1)^(0+128),w
  6538  0873  3A80               	xorlw	128
  6539  0874  00B6               	movwf	??_pad^(0+128)
  6540  0875  083A               	movf	(pad@w+1)^(0+128),w
  6541  0876  3A80               	xorlw	128
  6542  0877  0236               	subwf	??_pad^(0+128),w
  6543  0878  1D03               	skipz
  6544  0879  287C               	goto	u2705
  6545  087A  0839               	movf	pad@w^(0+128),w
  6546  087B  0237               	subwf	pad@i^(0+128),w
  6547  087C                     u2705:	
  6548  087C  1803               	btfsc	3,0
  6549  087D  2890               	goto	l547
  6550                           
  6551                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  6552  087E  3020               	movlw	32
  6553  087F  0021               	movlb	1	; select bank1
  6554  0880  00A2               	movwf	fputc@c^(0+128)
  6555  0881  3000               	movlw	0
  6556  0882  00A3               	movwf	(fputc@c^(0+128)+1)
  6557  0883  083B               	movf	pad@fp^(0+128),w
  6558  0884  00B6               	movwf	??_pad^(0+128)
  6559  0885  0836               	movf	??_pad^(0+128),w
  6560  0886  00A4               	movwf	fputc@fp^(0+128)
  6561  0887  3197  2729  3188   	fcall	_fputc
  6562                           
  6563                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  6564  088A  3001               	movlw	1
  6565  088B  0021               	movlb	1	; select bank1
  6566  088C  07B7               	addwf	pad@i^(0+128),f
  6567  088D  3000               	movlw	0
  6568  088E  3DB8               	addwfc	(pad@i+1)^(0+128),f
  6569  088F  2872               	goto	l2626
  6570  0890                     l547:	
  6571                           
  6572                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  6573  0890  0020               	movlb	0	; select bank0
  6574  0891  1860               	btfsc	_flags,0
  6575  0892  289F               	goto	l2630
  6576                           
  6577                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  6578  0893  0021               	movlb	1	; select bank1
  6579  0894  0833               	movf	pad@buf^(0+128),w
  6580  0895  00AA               	movwf	fputs@s^(0+128)
  6581  0896  3002               	movlw	2
  6582  0897  00AB               	movwf	(fputs@s+1)^(0+128)
  6583  0898  083B               	movf	pad@fp^(0+128),w
  6584  0899  00B6               	movwf	??_pad^(0+128)
  6585  089A  0836               	movf	??_pad^(0+128),w
  6586  089B  00AC               	movwf	fputs@fp^(0+128)
  6587  089C  3196  2629  3188   	fcall	_fputs
  6588  089F                     l2630:	
  6589                           
  6590                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  6591  089F  0021               	movlb	1	; select bank1
  6592  08A0  0833               	movf	pad@buf^(0+128),w
  6593  08A1  3195  2550         	fcall	_strlen
  6594  08A3  0021               	movlb	1	; select bank1
  6595  08A4  0839               	movf	pad@w^(0+128),w
  6596  08A5  0720               	addwf	?_strlen^(0+128),w
  6597  08A6  00B3               	movwf	?_pad^(0+128)
  6598  08A7  083A               	movf	(pad@w+1)^(0+128),w
  6599  08A8  3D21               	addwfc	(?_strlen+1)^(0+128),w
  6600  08A9  00B4               	movwf	(?_pad+1)^(0+128)
  6601  08AA  0008               	return
  6602  08AB                     __end_of_pad:	
  6603                           
  6604                           	psect	text11
  6605  1550                     __ptext11:	
  6606 ;; *************** function _strlen *****************
  6607 ;; Defined at:
  6608 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  6609 ;; Parameters:    Size  Location     Type
  6610 ;;  s               1    wreg     PTR const unsigned char 
  6611 ;;		 -> dbuf(32), 
  6612 ;; Auto vars:     Size  Location     Type
  6613 ;;  s               1    4[BANK1 ] PTR const unsigned char 
  6614 ;;		 -> dbuf(32), 
  6615 ;;  a               1    3[BANK1 ] PTR const unsigned char 
  6616 ;;		 -> dbuf(32), 
  6617 ;; Return value:  Size  Location     Type
  6618 ;;                  2    0[BANK1 ] unsigned int 
  6619 ;; Registers used:
  6620 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6621 ;; Tracked objects:
  6622 ;;		On entry : 0/0
  6623 ;;		On exit  : 0/0
  6624 ;;		Unchanged: 0/0
  6625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6626 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6627 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6628 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6629 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  6630 ;;Total ram usage:        5 bytes
  6631 ;; Hardware stack levels used:    1
  6632 ;; Hardware stack levels required when called:    6
  6633 ;; This function calls:
  6634 ;;		Nothing
  6635 ;; This function is called by:
  6636 ;;		_pad
  6637 ;; This function uses a non-reentrant model
  6638 ;;
  6639                           
  6640                           
  6641                           ;psect for function _strlen
  6642  1550                     _strlen:	
  6643                           
  6644                           ;incstack = 0
  6645                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  6646                           ;strlen@s stored from wreg
  6647  1550  0021               	movlb	1	; select bank1
  6648  1551  00A4               	movwf	strlen@s^(0+128)
  6649  1552  0824               	movf	strlen@s^(0+128),w
  6650  1553  00A2               	movwf	??_strlen^(0+128)
  6651  1554  0822               	movf	??_strlen^(0+128),w
  6652  1555  00A3               	movwf	strlen@a^(0+128)
  6653  1556                     l2606:	
  6654  1556  0824               	movf	strlen@s^(0+128),w
  6655  1557  0086               	movwf	6
  6656  1558  3002               	movlw	2	; select bank4/5
  6657  1559  0087               	movwf	7
  6658  155A  0801               	movf	1,w
  6659  155B  1903               	btfsc	3,2
  6660  155C  2D62               	goto	l2608
  6661  155D  3001               	movlw	1
  6662  155E  00A2               	movwf	??_strlen^(0+128)
  6663  155F  0822               	movf	??_strlen^(0+128),w
  6664  1560  07A4               	addwf	strlen@s^(0+128),f
  6665  1561  2D56               	goto	l2606
  6666  1562                     l2608:	
  6667  1562  0823               	movf	strlen@a^(0+128),w
  6668  1563  0224               	subwf	strlen@s^(0+128),w
  6669  1564  00A0               	movwf	?_strlen^(0+128)
  6670  1565  01A1               	clrf	(?_strlen+1)^(0+128)
  6671  1566  1BA0               	btfsc	?_strlen^(0+128),7
  6672  1567  03A1               	decf	(?_strlen+1)^(0+128),f
  6673  1568  0008               	return
  6674  1569                     __end_of_strlen:	
  6675                           
  6676                           	psect	text12
  6677  1629                     __ptext12:	
  6678 ;; *************** function _fputs *****************
  6679 ;; Defined at:
  6680 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  6681 ;; Parameters:    Size  Location     Type
  6682 ;;  s               2   10[BANK1 ] PTR const unsigned char 
  6683 ;;		 -> dbuf(32), STR_5(3), hrDisp(13), distanceDisp(11), 
  6684 ;;		 -> speedDisp(8), 
  6685 ;;  fp              1   12[BANK1 ] PTR struct _IO_FILE
  6686 ;;		 -> NULL(0), 
  6687 ;; Auto vars:     Size  Location     Type
  6688 ;;  i               2   17[BANK1 ] int 
  6689 ;;  c               1   16[BANK1 ] unsigned char 
  6690 ;; Return value:  Size  Location     Type
  6691 ;;                  2   10[BANK1 ] int 
  6692 ;; Registers used:
  6693 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6694 ;; Tracked objects:
  6695 ;;		On entry : 0/0
  6696 ;;		On exit  : 0/0
  6697 ;;		Unchanged: 0/0
  6698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6699 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6700 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6701 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6702 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  6703 ;;Total ram usage:        9 bytes
  6704 ;; Hardware stack levels used:    1
  6705 ;; Hardware stack levels required when called:    9
  6706 ;; This function calls:
  6707 ;;		_fputc
  6708 ;; This function is called by:
  6709 ;;		_pad
  6710 ;;		_puts
  6711 ;; This function uses a non-reentrant model
  6712 ;;
  6713                           
  6714                           
  6715                           ;psect for function _fputs
  6716  1629                     _fputs:	
  6717                           
  6718                           ;incstack = 0
  6719                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6720  1629  0021               	movlb	1	; select bank1
  6721  162A  01B1               	clrf	fputs@i^(0+128)
  6722  162B  01B2               	clrf	(fputs@i+1)^(0+128)
  6723  162C                     l2596:	
  6724  162C  082A               	movf	fputs@s^(0+128),w
  6725  162D  0731               	addwf	fputs@i^(0+128),w
  6726  162E  0084               	movwf	4
  6727  162F  082B               	movf	(fputs@s+1)^(0+128),w
  6728  1630  3D32               	addwfc	(fputs@i+1)^(0+128),w
  6729  1631  0085               	movwf	5
  6730  1632  0800               	movf	0,w	;code access
  6731  1633  00AD               	movwf	??_fputs^(0+128)
  6732  1634  082D               	movf	??_fputs^(0+128),w
  6733  1635  00B0               	movwf	fputs@c^(0+128)
  6734  1636  0830               	movf	fputs@c^(0+128),w
  6735  1637  1903               	btfsc	3,2
  6736  1638  2E4D               	goto	l2598
  6737  1639  0830               	movf	fputs@c^(0+128),w
  6738  163A  00AD               	movwf	??_fputs^(0+128)
  6739  163B  01AE               	clrf	(??_fputs^(0+128)+1)
  6740  163C  082D               	movf	??_fputs^(0+128),w
  6741  163D  00A2               	movwf	fputc@c^(0+128)
  6742  163E  082E               	movf	(??_fputs+1)^(0+128),w
  6743  163F  00A3               	movwf	(fputc@c+1)^(0+128)
  6744  1640  082C               	movf	fputs@fp^(0+128),w
  6745  1641  00AF               	movwf	(??_fputs+2)^(0+128)
  6746  1642  082F               	movf	(??_fputs+2)^(0+128),w
  6747  1643  00A4               	movwf	fputc@fp^(0+128)
  6748  1644  3197  2729  3196   	fcall	_fputc
  6749  1647  3001               	movlw	1
  6750  1648  0021               	movlb	1	; select bank1
  6751  1649  07B1               	addwf	fputs@i^(0+128),f
  6752  164A  3000               	movlw	0
  6753  164B  3DB2               	addwfc	(fputs@i+1)^(0+128),f
  6754  164C  2E2C               	goto	l2596
  6755  164D                     l2598:	
  6756  164D  0832               	movf	(fputs@i+1)^(0+128),w
  6757  164E  00AB               	movwf	(?_fputs+1)^(0+128)
  6758  164F  0831               	movf	fputs@i^(0+128),w
  6759  1650  00AA               	movwf	?_fputs^(0+128)
  6760  1651  0008               	return
  6761  1652                     __end_of_fputs:	
  6762                           
  6763                           	psect	text13
  6764  1729                     __ptext13:	
  6765 ;; *************** function _fputc *****************
  6766 ;; Defined at:
  6767 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  6768 ;; Parameters:    Size  Location     Type
  6769 ;;  c               2    2[BANK1 ] int 
  6770 ;;  fp              1    4[BANK1 ] PTR struct _IO_FILE
  6771 ;;		 -> NULL(0), 
  6772 ;; Auto vars:     Size  Location     Type
  6773 ;;		None
  6774 ;; Return value:  Size  Location     Type
  6775 ;;                  2    2[BANK1 ] int 
  6776 ;; Registers used:
  6777 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6778 ;; Tracked objects:
  6779 ;;		On entry : 0/0
  6780 ;;		On exit  : 0/0
  6781 ;;		Unchanged: 0/0
  6782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6783 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6785 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  6786 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  6787 ;;Total ram usage:        8 bytes
  6788 ;; Hardware stack levels used:    1
  6789 ;; Hardware stack levels required when called:    8
  6790 ;; This function calls:
  6791 ;;		_putch
  6792 ;; This function is called by:
  6793 ;;		_pad
  6794 ;;		_vfpfcnvrt
  6795 ;;		_fputs
  6796 ;;		_puts
  6797 ;; This function uses a non-reentrant model
  6798 ;;
  6799                           
  6800                           
  6801                           ;psect for function _fputc
  6802  1729                     _fputc:	
  6803                           
  6804                           ;incstack = 0
  6805                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6806  1729  0021               	movlb	1	; select bank1
  6807  172A  0824               	movf	fputc@fp^(0+128),w
  6808  172B  1D03               	btfss	3,2
  6809  172C  0824               	movf	fputc@fp^(0+128),w
  6810  172D  1D03               	btfss	3,2
  6811  172E  2F34               	goto	l2580
  6812  172F  0822               	movf	fputc@c^(0+128),w
  6813  1730  3194  2454  3197   	fcall	_putch
  6814  1733  2F60               	goto	l2586
  6815  1734                     l2580:	
  6816  1734  0824               	movf	fputc@fp^(0+128),w
  6817  1735  3E03               	addlw	3
  6818  1736  0086               	movwf	6
  6819  1737  0187               	clrf	7
  6820  1738  0016               	moviw fsr1++
  6821  1739  0401               	iorwf	1,w
  6822  173A  1903               	btfsc	3,2
  6823  173B  2F57               	goto	l2584
  6824  173C  0824               	movf	fputc@fp^(0+128),w
  6825  173D  3E03               	addlw	3
  6826  173E  0086               	movwf	6
  6827  173F  0187               	clrf	7
  6828  1740  3F40               	moviw [0]fsr1
  6829  1741  00A5               	movwf	??_fputc^(0+128)
  6830  1742  3F41               	moviw [1]fsr1
  6831  1743  00A6               	movwf	(??_fputc^(0+128)+1)
  6832  1744  0A24               	incf	fputc@fp^(0+128),w
  6833  1745  0086               	movwf	6
  6834  1746  0187               	clrf	7
  6835  1747  3F40               	moviw [0]fsr1
  6836  1748  00A7               	movwf	(??_fputc+2)^(0+128)
  6837  1749  3F41               	moviw [1]fsr1
  6838  174A  00A8               	movwf	((??_fputc+2)^(0+128)+1)
  6839  174B  0828               	movf	(??_fputc+3)^(0+128),w
  6840  174C  3A80               	xorlw	128
  6841  174D  00A9               	movwf	(??_fputc+4)^(0+128)
  6842  174E  0826               	movf	(??_fputc+1)^(0+128),w
  6843  174F  3A80               	xorlw	128
  6844  1750  0229               	subwf	(??_fputc+4)^(0+128),w
  6845  1751  1D03               	skipz
  6846  1752  2F55               	goto	u2655
  6847  1753  0825               	movf	??_fputc^(0+128),w
  6848  1754  0227               	subwf	(??_fputc+2)^(0+128),w
  6849  1755                     u2655:	
  6850  1755  1803               	skipnc
  6851  1756  2F60               	goto	l2586
  6852  1757                     l2584:	
  6853  1757  0021               	movlb	1	; select bank1
  6854  1758  0A24               	incf	fputc@fp^(0+128),w
  6855  1759  0086               	movwf	6
  6856  175A  0187               	clrf	7
  6857  175B  3001               	movlw	1
  6858  175C  0781               	addwf	1,f
  6859  175D  3141               	addfsr 1,1
  6860  175E  1803               	skipnc
  6861  175F  0A81               	incf	1,f
  6862  1760                     l2586:	
  6863  1760  0021               	movlb	1	; select bank1
  6864  1761  0822               	movf	fputc@c^(0+128),w
  6865  1762  00A5               	movwf	??_fputc^(0+128)
  6866  1763  01A6               	clrf	(??_fputc^(0+128)+1)
  6867  1764  0825               	movf	??_fputc^(0+128),w
  6868  1765  00A2               	movwf	?_fputc^(0+128)
  6869  1766  0826               	movf	(??_fputc+1)^(0+128),w
  6870  1767  00A3               	movwf	(?_fputc+1)^(0+128)
  6871  1768  0008               	return
  6872  1769                     __end_of_fputc:	
  6873                           
  6874                           	psect	text14
  6875  1454                     __ptext14:	
  6876 ;; *************** function _putch *****************
  6877 ;; Defined at:
  6878 ;;		line 151 in file "mcc_generated_files/eusart.c"
  6879 ;; Parameters:    Size  Location     Type
  6880 ;;  txData          1    wreg     unsigned char 
  6881 ;; Auto vars:     Size  Location     Type
  6882 ;;  txData          1    1[BANK1 ] unsigned char 
  6883 ;; Return value:  Size  Location     Type
  6884 ;;                  1    wreg      void 
  6885 ;; Registers used:
  6886 ;;		wreg, status,2, status,0, pclath, cstack
  6887 ;; Tracked objects:
  6888 ;;		On entry : 0/0
  6889 ;;		On exit  : 0/0
  6890 ;;		Unchanged: 0/0
  6891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6893 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6895 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6896 ;;Total ram usage:        1 bytes
  6897 ;; Hardware stack levels used:    1
  6898 ;; Hardware stack levels required when called:    7
  6899 ;; This function calls:
  6900 ;;		_EUSART_Write
  6901 ;; This function is called by:
  6902 ;;		_fputc
  6903 ;; This function uses a non-reentrant model
  6904 ;;
  6905                           
  6906                           
  6907                           ;psect for function _putch
  6908  1454                     _putch:	
  6909                           
  6910                           ;incstack = 0
  6911                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  6912                           ;putch@txData stored from wreg
  6913  1454  0021               	movlb	1	; select bank1
  6914  1455  00A1               	movwf	putch@txData^(0+128)
  6915                           
  6916                           ;mcc_generated_files/eusart.c: 151: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 152: {;mcc_generated_files/eusart.c: 153:     EUSART_Write(txData);
  6917  1456  0821               	movf	putch@txData^(0+128),w
  6918  1457  3194  24B1         	fcall	_EUSART_Write
  6919  1459  0008               	return
  6920  145A                     __end_of_putch:	
  6921                           
  6922                           	psect	text15
  6923  14B1                     __ptext15:	
  6924 ;; *************** function _EUSART_Write *****************
  6925 ;; Defined at:
  6926 ;;		line 137 in file "mcc_generated_files/eusart.c"
  6927 ;; Parameters:    Size  Location     Type
  6928 ;;  txData          1    wreg     unsigned char 
  6929 ;; Auto vars:     Size  Location     Type
  6930 ;;  txData          1    0[BANK1 ] unsigned char 
  6931 ;; Return value:  Size  Location     Type
  6932 ;;                  1    wreg      void 
  6933 ;; Registers used:
  6934 ;;		wreg
  6935 ;; Tracked objects:
  6936 ;;		On entry : 0/0
  6937 ;;		On exit  : 0/0
  6938 ;;		Unchanged: 0/0
  6939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6941 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6943 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6944 ;;Total ram usage:        1 bytes
  6945 ;; Hardware stack levels used:    1
  6946 ;; Hardware stack levels required when called:    6
  6947 ;; This function calls:
  6948 ;;		Nothing
  6949 ;; This function is called by:
  6950 ;;		_putch
  6951 ;;		_setCursor
  6952 ;;		_backlightBrightness
  6953 ;; This function uses a non-reentrant model
  6954 ;;
  6955                           
  6956                           
  6957                           ;psect for function _EUSART_Write
  6958  14B1                     _EUSART_Write:	
  6959                           
  6960                           ;incstack = 0
  6961                           ; Regs used in _EUSART_Write: [wreg]
  6962                           ;EUSART_Write@txData stored from wreg
  6963  14B1  0021               	movlb	1	; select bank1
  6964  14B2  00A0               	movwf	EUSART_Write@txData^(0+128)
  6965  14B3                     l69:	
  6966                           ;mcc_generated_files/eusart.c: 140:     {;mcc_generated_files/eusart.c: 141:     }
  6967                           
  6968                           
  6969                           ;mcc_generated_files/eusart.c: 139:     while(0 == PIR1bits.TXIF)
  6970  14B3  0020               	movlb	0	; select bank0
  6971  14B4  1E10               	btfss	16,4	;volatile
  6972  14B5  2CB3               	goto	l69
  6973                           
  6974                           ;mcc_generated_files/eusart.c: 143:     TX1REG = txData;
  6975  14B6  0021               	movlb	1	; select bank1
  6976  14B7  0820               	movf	EUSART_Write@txData^(0+128),w
  6977  14B8  0023               	movlb	3	; select bank3
  6978  14B9  009A               	movwf	26	;volatile
  6979  14BA  0008               	return
  6980  14BB                     __end_of_EUSART_Write:	
  6981                           
  6982                           	psect	text16
  6983  1537                     __ptext16:	
  6984 ;; *************** function _abs *****************
  6985 ;; Defined at:
  6986 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  6987 ;; Parameters:    Size  Location     Type
  6988 ;;  a               2   19[BANK1 ] int 
  6989 ;; Auto vars:     Size  Location     Type
  6990 ;;		None
  6991 ;; Return value:  Size  Location     Type
  6992 ;;                  2   19[BANK1 ] int 
  6993 ;; Registers used:
  6994 ;;		wreg, status,2, status,0
  6995 ;; Tracked objects:
  6996 ;;		On entry : 0/0
  6997 ;;		On exit  : 0/0
  6998 ;;		Unchanged: 0/0
  6999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7000 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7002 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7003 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  7004 ;;Total ram usage:        4 bytes
  7005 ;; Hardware stack levels used:    1
  7006 ;; Hardware stack levels required when called:    6
  7007 ;; This function calls:
  7008 ;;		Nothing
  7009 ;; This function is called by:
  7010 ;;		_dtoa
  7011 ;; This function uses a non-reentrant model
  7012 ;;
  7013                           
  7014                           
  7015                           ;psect for function _abs
  7016  1537                     _abs:	
  7017                           
  7018                           ;incstack = 0
  7019                           ; Regs used in _abs: [wreg+status,2+status,0]
  7020  1537  0021               	movlb	1	; select bank1
  7021  1538  0834               	movf	(abs@a+1)^(0+128),w
  7022  1539  3A80               	xorlw	128
  7023  153A  00B5               	movwf	??_abs^(0+128)
  7024  153B  3080               	movlw	128
  7025  153C  0235               	subwf	??_abs^(0+128),w
  7026  153D  1D03               	skipz
  7027  153E  2D41               	goto	u2725
  7028  153F  3001               	movlw	1
  7029  1540  0233               	subwf	abs@a^(0+128),w
  7030  1541                     u2725:	
  7031  1541  1803               	skipnc
  7032  1542  0008               	return
  7033  1543  0021               	movlb	1	; select bank1
  7034  1544  0933               	comf	abs@a^(0+128),w
  7035  1545  00B5               	movwf	??_abs^(0+128)
  7036  1546  0934               	comf	(abs@a+1)^(0+128),w
  7037  1547  00B6               	movwf	(??_abs^(0+128)+1)
  7038  1548  0AB5               	incf	??_abs^(0+128),f
  7039  1549  1903               	skipnz
  7040  154A  0AB6               	incf	(??_abs^(0+128)+1),f
  7041  154B  0835               	movf	??_abs^(0+128),w
  7042  154C  00B3               	movwf	?_abs^(0+128)
  7043  154D  0836               	movf	(??_abs+1)^(0+128),w
  7044  154E  00B4               	movwf	(?_abs+1)^(0+128)
  7045  154F  0008               	return
  7046  1550                     __end_of_abs:	
  7047                           
  7048                           	psect	text17
  7049  0AED                     __ptext17:	
  7050 ;; *************** function ___aomod *****************
  7051 ;; Defined at:
  7052 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  7053 ;; Parameters:    Size  Location     Type
  7054 ;;  divisor         8    0[BANK1 ] long long 
  7055 ;;  dividend        8    8[BANK1 ] long long 
  7056 ;; Auto vars:     Size  Location     Type
  7057 ;;  sign            1   18[BANK1 ] unsigned char 
  7058 ;;  counter         1   17[BANK1 ] unsigned char 
  7059 ;; Return value:  Size  Location     Type
  7060 ;;                  8    0[BANK1 ] long long 
  7061 ;; Registers used:
  7062 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7063 ;; Tracked objects:
  7064 ;;		On entry : 0/0
  7065 ;;		On exit  : 0/0
  7066 ;;		Unchanged: 0/0
  7067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7068 ;;      Params:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  7069 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7070 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7071 ;;      Totals:         0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0
  7072 ;;Total ram usage:       19 bytes
  7073 ;; Hardware stack levels used:    1
  7074 ;; Hardware stack levels required when called:    6
  7075 ;; This function calls:
  7076 ;;		Nothing
  7077 ;; This function is called by:
  7078 ;;		_dtoa
  7079 ;; This function uses a non-reentrant model
  7080 ;;
  7081                           
  7082                           
  7083                           ;psect for function ___aomod
  7084  0AED                     ___aomod:	
  7085                           
  7086                           ;incstack = 0
  7087                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  7088  0AED  0021               	movlb	1	; select bank1
  7089  0AEE  01B2               	clrf	___aomod@sign^(0+128)
  7090  0AEF  30A8               	movlw	low ___aomod@dividend
  7091  0AF0  0086               	movwf	6
  7092  0AF1  3000               	movlw	high ___aomod@dividend
  7093  0AF2  0087               	movwf	7
  7094  0AF3  3F47               	moviw [7]fsr1
  7095  0AF4  00B0               	movwf	??___aomod^(0+128)
  7096  0AF5  1FB0               	btfss	??___aomod^(0+128),7
  7097  0AF6  2B19               	goto	l2682
  7098  0AF7  0021               	movlb	1	; select bank1
  7099  0AF8  09A8               	comf	___aomod@dividend^(0+128),f
  7100  0AF9  09A9               	comf	(___aomod@dividend+1)^(0+128),f
  7101  0AFA  09AA               	comf	(___aomod@dividend+2)^(0+128),f
  7102  0AFB  09AB               	comf	(___aomod@dividend+3)^(0+128),f
  7103  0AFC  09AC               	comf	(___aomod@dividend+4)^(0+128),f
  7104  0AFD  09AD               	comf	(___aomod@dividend+5)^(0+128),f
  7105  0AFE  09AE               	comf	(___aomod@dividend+6)^(0+128),f
  7106  0AFF  09AF               	comf	(___aomod@dividend+7)^(0+128),f
  7107  0B00  0AA8               	incf	___aomod@dividend^(0+128),f
  7108  0B01  1D03               	skipz
  7109  0B02  2B16               	goto	u285lld
  7110  0B03  0AA9               	incf	(___aomod@dividend+1)^(0+128),f
  7111  0B04  1D03               	skipz
  7112  0B05  2B16               	goto	u285lld
  7113  0B06  0AAA               	incf	(___aomod@dividend+2)^(0+128),f
  7114  0B07  1D03               	skipz
  7115  0B08  2B16               	goto	u285lld
  7116  0B09  0AAB               	incf	(___aomod@dividend+3)^(0+128),f
  7117  0B0A  1D03               	skipz
  7118  0B0B  2B16               	goto	u285lld
  7119  0B0C  0AAC               	incf	(___aomod@dividend+4)^(0+128),f
  7120  0B0D  1D03               	skipz
  7121  0B0E  2B16               	goto	u285lld
  7122  0B0F  0AAD               	incf	(___aomod@dividend+5)^(0+128),f
  7123  0B10  1D03               	skipz
  7124  0B11  2B16               	goto	u285lld
  7125  0B12  0AAE               	incf	(___aomod@dividend+6)^(0+128),f
  7126  0B13  1D03               	skipz
  7127  0B14  2B16               	goto	u285lld
  7128  0B15  0AAF               	incf	(___aomod@dividend+7)^(0+128),f
  7129  0B16                     u285lld:	
  7130  0B16  0021               	movlb	1	; select bank1
  7131  0B17  01B2               	clrf	___aomod@sign^(0+128)
  7132  0B18  0AB2               	incf	___aomod@sign^(0+128),f
  7133  0B19                     l2682:	
  7134  0B19  30A0               	movlw	low ___aomod@divisor
  7135  0B1A  0086               	movwf	6
  7136  0B1B  3000               	movlw	high ___aomod@divisor
  7137  0B1C  0087               	movwf	7
  7138  0B1D  3F47               	moviw [7]fsr1
  7139  0B1E  0021               	movlb	1	; select bank1
  7140  0B1F  00B0               	movwf	??___aomod^(0+128)
  7141  0B20  1FB0               	btfss	??___aomod^(0+128),7
  7142  0B21  2B41               	goto	l2686
  7143  0B22  0021               	movlb	1	; select bank1
  7144  0B23  09A0               	comf	___aomod@divisor^(0+128),f
  7145  0B24  09A1               	comf	(___aomod@divisor+1)^(0+128),f
  7146  0B25  09A2               	comf	(___aomod@divisor+2)^(0+128),f
  7147  0B26  09A3               	comf	(___aomod@divisor+3)^(0+128),f
  7148  0B27  09A4               	comf	(___aomod@divisor+4)^(0+128),f
  7149  0B28  09A5               	comf	(___aomod@divisor+5)^(0+128),f
  7150  0B29  09A6               	comf	(___aomod@divisor+6)^(0+128),f
  7151  0B2A  09A7               	comf	(___aomod@divisor+7)^(0+128),f
  7152  0B2B  0AA0               	incf	___aomod@divisor^(0+128),f
  7153  0B2C  1D03               	skipz
  7154  0B2D  2B41               	goto	l2686
  7155  0B2E  0AA1               	incf	(___aomod@divisor+1)^(0+128),f
  7156  0B2F  1D03               	skipz
  7157  0B30  2B41               	goto	l2686
  7158  0B31  0AA2               	incf	(___aomod@divisor+2)^(0+128),f
  7159  0B32  1D03               	skipz
  7160  0B33  2B41               	goto	l2686
  7161  0B34  0AA3               	incf	(___aomod@divisor+3)^(0+128),f
  7162  0B35  1D03               	skipz
  7163  0B36  2B41               	goto	l2686
  7164  0B37  0AA4               	incf	(___aomod@divisor+4)^(0+128),f
  7165  0B38  1D03               	skipz
  7166  0B39  2B41               	goto	l2686
  7167  0B3A  0AA5               	incf	(___aomod@divisor+5)^(0+128),f
  7168  0B3B  1D03               	skipz
  7169  0B3C  2B41               	goto	l2686
  7170  0B3D  0AA6               	incf	(___aomod@divisor+6)^(0+128),f
  7171  0B3E  1D03               	skipz
  7172  0B3F  2B41               	goto	l2686
  7173  0B40  0AA7               	incf	(___aomod@divisor+7)^(0+128),f
  7174  0B41                     l2686:	
  7175  0B41  0021               	movlb	1	; select bank1
  7176  0B42  0820               	movf	___aomod@divisor^(0+128),w
  7177  0B43  0421               	iorwf	(___aomod@divisor+1)^(0+128),w
  7178  0B44  0422               	iorwf	(___aomod@divisor+2)^(0+128),w
  7179  0B45  0423               	iorwf	(___aomod@divisor+3)^(0+128),w
  7180  0B46  0424               	iorwf	(___aomod@divisor+4)^(0+128),w
  7181  0B47  0425               	iorwf	(___aomod@divisor+5)^(0+128),w
  7182  0B48  0426               	iorwf	(___aomod@divisor+6)^(0+128),w
  7183  0B49  0427               	iorwf	(___aomod@divisor+7)^(0+128),w
  7184  0B4A  1903               	skipnz
  7185  0B4B  2B99               	goto	l2702
  7186  0B4C  01B1               	clrf	___aomod@counter^(0+128)
  7187  0B4D  0AB1               	incf	___aomod@counter^(0+128),f
  7188  0B4E                     l2694:	
  7189  0B4E  1BA7               	btfsc	(___aomod@divisor+7)^(0+128),7
  7190  0B4F  2B5D               	goto	l2696
  7191  0B50  35A0               	lslf	___aomod@divisor^(0+128),f
  7192  0B51  0DA1               	rlf	(___aomod@divisor+1)^(0+128),f
  7193  0B52  0DA2               	rlf	(___aomod@divisor+2)^(0+128),f
  7194  0B53  0DA3               	rlf	(___aomod@divisor+3)^(0+128),f
  7195  0B54  0DA4               	rlf	(___aomod@divisor+4)^(0+128),f
  7196  0B55  0DA5               	rlf	(___aomod@divisor+5)^(0+128),f
  7197  0B56  0DA6               	rlf	(___aomod@divisor+6)^(0+128),f
  7198  0B57  0DA7               	rlf	(___aomod@divisor+7)^(0+128),f
  7199  0B58  3001               	movlw	1
  7200  0B59  00B0               	movwf	??___aomod^(0+128)
  7201  0B5A  0830               	movf	??___aomod^(0+128),w
  7202  0B5B  07B1               	addwf	___aomod@counter^(0+128),f
  7203  0B5C  2B4E               	goto	l2694
  7204  0B5D                     l2696:	
  7205  0B5D  0827               	movf	(___aomod@divisor+7)^(0+128),w
  7206  0B5E  022F               	subwf	(___aomod@dividend+7)^(0+128),w
  7207  0B5F  1D03               	skipz
  7208  0B60  2B7B               	goto	u2905
  7209  0B61  0826               	movf	(___aomod@divisor+6)^(0+128),w
  7210  0B62  022E               	subwf	(___aomod@dividend+6)^(0+128),w
  7211  0B63  1D03               	skipz
  7212  0B64  2B7B               	goto	u2905
  7213  0B65  0825               	movf	(___aomod@divisor+5)^(0+128),w
  7214  0B66  022D               	subwf	(___aomod@dividend+5)^(0+128),w
  7215  0B67  1D03               	skipz
  7216  0B68  2B7B               	goto	u2905
  7217  0B69  0824               	movf	(___aomod@divisor+4)^(0+128),w
  7218  0B6A  022C               	subwf	(___aomod@dividend+4)^(0+128),w
  7219  0B6B  1D03               	skipz
  7220  0B6C  2B7B               	goto	u2905
  7221  0B6D  0823               	movf	(___aomod@divisor+3)^(0+128),w
  7222  0B6E  022B               	subwf	(___aomod@dividend+3)^(0+128),w
  7223  0B6F  1D03               	skipz
  7224  0B70  2B7B               	goto	u2905
  7225  0B71  0822               	movf	(___aomod@divisor+2)^(0+128),w
  7226  0B72  022A               	subwf	(___aomod@dividend+2)^(0+128),w
  7227  0B73  1D03               	skipz
  7228  0B74  2B7B               	goto	u2905
  7229  0B75  0821               	movf	(___aomod@divisor+1)^(0+128),w
  7230  0B76  0229               	subwf	(___aomod@dividend+1)^(0+128),w
  7231  0B77  1D03               	skipz
  7232  0B78  2B7B               	goto	u2905
  7233  0B79  0820               	movf	___aomod@divisor^(0+128),w
  7234  0B7A  0228               	subwf	___aomod@dividend^(0+128),w
  7235  0B7B                     u2905:	
  7236  0B7B  1C03               	skipc
  7237  0B7C  2B8D               	goto	l2700
  7238  0B7D  0820               	movf	___aomod@divisor^(0+128),w
  7239  0B7E  02A8               	subwf	___aomod@dividend^(0+128),f
  7240  0B7F  0821               	movf	(___aomod@divisor+1)^(0+128),w
  7241  0B80  3BA9               	subwfb	(___aomod@dividend+1)^(0+128),f
  7242  0B81  0822               	movf	(___aomod@divisor+2)^(0+128),w
  7243  0B82  3BAA               	subwfb	(___aomod@dividend+2)^(0+128),f
  7244  0B83  0823               	movf	(___aomod@divisor+3)^(0+128),w
  7245  0B84  3BAB               	subwfb	(___aomod@dividend+3)^(0+128),f
  7246  0B85  0824               	movf	(___aomod@divisor+4)^(0+128),w
  7247  0B86  3BAC               	subwfb	(___aomod@dividend+4)^(0+128),f
  7248  0B87  0825               	movf	(___aomod@divisor+5)^(0+128),w
  7249  0B88  3BAD               	subwfb	(___aomod@dividend+5)^(0+128),f
  7250  0B89  0826               	movf	(___aomod@divisor+6)^(0+128),w
  7251  0B8A  3BAE               	subwfb	(___aomod@dividend+6)^(0+128),f
  7252  0B8B  0827               	movf	(___aomod@divisor+7)^(0+128),w
  7253  0B8C  3BAF               	subwfb	(___aomod@dividend+7)^(0+128),f
  7254  0B8D                     l2700:	
  7255  0B8D  36A7               	lsrf	(___aomod@divisor+7)^(0+128),f
  7256  0B8E  0CA6               	rrf	(___aomod@divisor+6)^(0+128),f
  7257  0B8F  0CA5               	rrf	(___aomod@divisor+5)^(0+128),f
  7258  0B90  0CA4               	rrf	(___aomod@divisor+4)^(0+128),f
  7259  0B91  0CA3               	rrf	(___aomod@divisor+3)^(0+128),f
  7260  0B92  0CA2               	rrf	(___aomod@divisor+2)^(0+128),f
  7261  0B93  0CA1               	rrf	(___aomod@divisor+1)^(0+128),f
  7262  0B94  0CA0               	rrf	___aomod@divisor^(0+128),f
  7263  0B95  3001               	movlw	1
  7264  0B96  02B1               	subwf	___aomod@counter^(0+128),f
  7265  0B97  1D03               	btfss	3,2
  7266  0B98  2B5D               	goto	l2696
  7267  0B99                     l2702:	
  7268  0B99  0832               	movf	___aomod@sign^(0+128),w
  7269  0B9A  1903               	btfsc	3,2
  7270  0B9B  2BBA               	goto	l706
  7271  0B9C  09A8               	comf	___aomod@dividend^(0+128),f
  7272  0B9D  09A9               	comf	(___aomod@dividend+1)^(0+128),f
  7273  0B9E  09AA               	comf	(___aomod@dividend+2)^(0+128),f
  7274  0B9F  09AB               	comf	(___aomod@dividend+3)^(0+128),f
  7275  0BA0  09AC               	comf	(___aomod@dividend+4)^(0+128),f
  7276  0BA1  09AD               	comf	(___aomod@dividend+5)^(0+128),f
  7277  0BA2  09AE               	comf	(___aomod@dividend+6)^(0+128),f
  7278  0BA3  09AF               	comf	(___aomod@dividend+7)^(0+128),f
  7279  0BA4  0AA8               	incf	___aomod@dividend^(0+128),f
  7280  0BA5  1D03               	skipz
  7281  0BA6  2BBA               	goto	l706
  7282  0BA7  0AA9               	incf	(___aomod@dividend+1)^(0+128),f
  7283  0BA8  1D03               	skipz
  7284  0BA9  2BBA               	goto	l706
  7285  0BAA  0AAA               	incf	(___aomod@dividend+2)^(0+128),f
  7286  0BAB  1D03               	skipz
  7287  0BAC  2BBA               	goto	l706
  7288  0BAD  0AAB               	incf	(___aomod@dividend+3)^(0+128),f
  7289  0BAE  1D03               	skipz
  7290  0BAF  2BBA               	goto	l706
  7291  0BB0  0AAC               	incf	(___aomod@dividend+4)^(0+128),f
  7292  0BB1  1D03               	skipz
  7293  0BB2  2BBA               	goto	l706
  7294  0BB3  0AAD               	incf	(___aomod@dividend+5)^(0+128),f
  7295  0BB4  1D03               	skipz
  7296  0BB5  2BBA               	goto	l706
  7297  0BB6  0AAE               	incf	(___aomod@dividend+6)^(0+128),f
  7298  0BB7  1D03               	skipz
  7299  0BB8  2BBA               	goto	l706
  7300  0BB9  0AAF               	incf	(___aomod@dividend+7)^(0+128),f
  7301  0BBA                     l706:	
  7302  0BBA  0021               	movlb	1	; select bank1
  7303  0BBB  0828               	movf	___aomod@dividend^(0+128),w
  7304  0BBC  00A0               	movwf	?___aomod^(0+128)
  7305  0BBD  0829               	movf	(___aomod@dividend+1)^(0+128),w
  7306  0BBE  00A1               	movwf	(?___aomod+1)^(0+128)
  7307  0BBF  082A               	movf	(___aomod@dividend+2)^(0+128),w
  7308  0BC0  00A2               	movwf	(?___aomod+2)^(0+128)
  7309  0BC1  082B               	movf	(___aomod@dividend+3)^(0+128),w
  7310  0BC2  00A3               	movwf	(?___aomod+3)^(0+128)
  7311  0BC3  082C               	movf	(___aomod@dividend+4)^(0+128),w
  7312  0BC4  00A4               	movwf	(?___aomod+4)^(0+128)
  7313  0BC5  082D               	movf	(___aomod@dividend+5)^(0+128),w
  7314  0BC6  00A5               	movwf	(?___aomod+5)^(0+128)
  7315  0BC7  082E               	movf	(___aomod@dividend+6)^(0+128),w
  7316  0BC8  00A6               	movwf	(?___aomod+6)^(0+128)
  7317  0BC9  082F               	movf	(___aomod@dividend+7)^(0+128),w
  7318  0BCA  00A7               	movwf	(?___aomod+7)^(0+128)
  7319  0BCB  0008               	return
  7320  0BCC                     __end_of___aomod:	
  7321                           
  7322                           	psect	text18
  7323  0CAC                     __ptext18:	
  7324 ;; *************** function ___aodiv *****************
  7325 ;; Defined at:
  7326 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  7327 ;; Parameters:    Size  Location     Type
  7328 ;;  divisor         8    0[BANK1 ] long long 
  7329 ;;  dividend        8    8[BANK1 ] long long 
  7330 ;; Auto vars:     Size  Location     Type
  7331 ;;  quotient        8   19[BANK1 ] long long 
  7332 ;;  sign            1   18[BANK1 ] unsigned char 
  7333 ;;  counter         1   17[BANK1 ] unsigned char 
  7334 ;; Return value:  Size  Location     Type
  7335 ;;                  8    0[BANK1 ] long long 
  7336 ;; Registers used:
  7337 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7338 ;; Tracked objects:
  7339 ;;		On entry : 0/0
  7340 ;;		On exit  : 0/0
  7341 ;;		Unchanged: 0/0
  7342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7343 ;;      Params:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  7344 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  7345 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7346 ;;      Totals:         0       0      27       0       0       0       0       0       0       0       0       0       
      +0       0
  7347 ;;Total ram usage:       27 bytes
  7348 ;; Hardware stack levels used:    1
  7349 ;; Hardware stack levels required when called:    6
  7350 ;; This function calls:
  7351 ;;		Nothing
  7352 ;; This function is called by:
  7353 ;;		_dtoa
  7354 ;; This function uses a non-reentrant model
  7355 ;;
  7356                           
  7357                           
  7358                           ;psect for function ___aodiv
  7359  0CAC                     ___aodiv:	
  7360                           
  7361                           ;incstack = 0
  7362                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  7363  0CAC  0021               	movlb	1	; select bank1
  7364  0CAD  01B2               	clrf	___aodiv@sign^(0+128)
  7365  0CAE  30A0               	movlw	low ___aodiv@divisor
  7366  0CAF  0086               	movwf	6
  7367  0CB0  3000               	movlw	high ___aodiv@divisor
  7368  0CB1  0087               	movwf	7
  7369  0CB2  3F47               	moviw [7]fsr1
  7370  0CB3  00B0               	movwf	??___aodiv^(0+128)
  7371  0CB4  1FB0               	btfss	??___aodiv^(0+128),7
  7372  0CB5  2CD8               	goto	l2644
  7373  0CB6  0021               	movlb	1	; select bank1
  7374  0CB7  09A0               	comf	___aodiv@divisor^(0+128),f
  7375  0CB8  09A1               	comf	(___aodiv@divisor+1)^(0+128),f
  7376  0CB9  09A2               	comf	(___aodiv@divisor+2)^(0+128),f
  7377  0CBA  09A3               	comf	(___aodiv@divisor+3)^(0+128),f
  7378  0CBB  09A4               	comf	(___aodiv@divisor+4)^(0+128),f
  7379  0CBC  09A5               	comf	(___aodiv@divisor+5)^(0+128),f
  7380  0CBD  09A6               	comf	(___aodiv@divisor+6)^(0+128),f
  7381  0CBE  09A7               	comf	(___aodiv@divisor+7)^(0+128),f
  7382  0CBF  0AA0               	incf	___aodiv@divisor^(0+128),f
  7383  0CC0  1D03               	skipz
  7384  0CC1  2CD5               	goto	u274lld
  7385  0CC2  0AA1               	incf	(___aodiv@divisor+1)^(0+128),f
  7386  0CC3  1D03               	skipz
  7387  0CC4  2CD5               	goto	u274lld
  7388  0CC5  0AA2               	incf	(___aodiv@divisor+2)^(0+128),f
  7389  0CC6  1D03               	skipz
  7390  0CC7  2CD5               	goto	u274lld
  7391  0CC8  0AA3               	incf	(___aodiv@divisor+3)^(0+128),f
  7392  0CC9  1D03               	skipz
  7393  0CCA  2CD5               	goto	u274lld
  7394  0CCB  0AA4               	incf	(___aodiv@divisor+4)^(0+128),f
  7395  0CCC  1D03               	skipz
  7396  0CCD  2CD5               	goto	u274lld
  7397  0CCE  0AA5               	incf	(___aodiv@divisor+5)^(0+128),f
  7398  0CCF  1D03               	skipz
  7399  0CD0  2CD5               	goto	u274lld
  7400  0CD1  0AA6               	incf	(___aodiv@divisor+6)^(0+128),f
  7401  0CD2  1D03               	skipz
  7402  0CD3  2CD5               	goto	u274lld
  7403  0CD4  0AA7               	incf	(___aodiv@divisor+7)^(0+128),f
  7404  0CD5                     u274lld:	
  7405  0CD5  0021               	movlb	1	; select bank1
  7406  0CD6  01B2               	clrf	___aodiv@sign^(0+128)
  7407  0CD7  0AB2               	incf	___aodiv@sign^(0+128),f
  7408  0CD8                     l2644:	
  7409  0CD8  30A8               	movlw	low ___aodiv@dividend
  7410  0CD9  0086               	movwf	6
  7411  0CDA  3000               	movlw	high ___aodiv@dividend
  7412  0CDB  0087               	movwf	7
  7413  0CDC  3F47               	moviw [7]fsr1
  7414  0CDD  0021               	movlb	1	; select bank1
  7415  0CDE  00B0               	movwf	??___aodiv^(0+128)
  7416  0CDF  1FB0               	btfss	??___aodiv^(0+128),7
  7417  0CE0  2D05               	goto	l2650
  7418  0CE1  0021               	movlb	1	; select bank1
  7419  0CE2  09A8               	comf	___aodiv@dividend^(0+128),f
  7420  0CE3  09A9               	comf	(___aodiv@dividend+1)^(0+128),f
  7421  0CE4  09AA               	comf	(___aodiv@dividend+2)^(0+128),f
  7422  0CE5  09AB               	comf	(___aodiv@dividend+3)^(0+128),f
  7423  0CE6  09AC               	comf	(___aodiv@dividend+4)^(0+128),f
  7424  0CE7  09AD               	comf	(___aodiv@dividend+5)^(0+128),f
  7425  0CE8  09AE               	comf	(___aodiv@dividend+6)^(0+128),f
  7426  0CE9  09AF               	comf	(___aodiv@dividend+7)^(0+128),f
  7427  0CEA  0AA8               	incf	___aodiv@dividend^(0+128),f
  7428  0CEB  1D03               	skipz
  7429  0CEC  2D00               	goto	l2648
  7430  0CED  0AA9               	incf	(___aodiv@dividend+1)^(0+128),f
  7431  0CEE  1D03               	skipz
  7432  0CEF  2D00               	goto	l2648
  7433  0CF0  0AAA               	incf	(___aodiv@dividend+2)^(0+128),f
  7434  0CF1  1D03               	skipz
  7435  0CF2  2D00               	goto	l2648
  7436  0CF3  0AAB               	incf	(___aodiv@dividend+3)^(0+128),f
  7437  0CF4  1D03               	skipz
  7438  0CF5  2D00               	goto	l2648
  7439  0CF6  0AAC               	incf	(___aodiv@dividend+4)^(0+128),f
  7440  0CF7  1D03               	skipz
  7441  0CF8  2D00               	goto	l2648
  7442  0CF9  0AAD               	incf	(___aodiv@dividend+5)^(0+128),f
  7443  0CFA  1D03               	skipz
  7444  0CFB  2D00               	goto	l2648
  7445  0CFC  0AAE               	incf	(___aodiv@dividend+6)^(0+128),f
  7446  0CFD  1D03               	skipz
  7447  0CFE  2D00               	goto	l2648
  7448  0CFF  0AAF               	incf	(___aodiv@dividend+7)^(0+128),f
  7449  0D00                     l2648:	
  7450  0D00  3001               	movlw	1
  7451  0D01  0021               	movlb	1	; select bank1
  7452  0D02  00B0               	movwf	??___aodiv^(0+128)
  7453  0D03  0830               	movf	??___aodiv^(0+128),w
  7454  0D04  06B2               	xorwf	___aodiv@sign^(0+128),f
  7455  0D05                     l2650:	
  7456  0D05  30B3               	movlw	low ___aodiv@quotient
  7457  0D06  0086               	movwf	6
  7458  0D07  3000               	movlw	high ___aodiv@quotient
  7459  0D08  0087               	movwf	7
  7460  0D09  3008               	movlw	8
  7461  0D0A  0021               	movlb	1	; select bank1
  7462  0D0B  00B0               	movwf	??___aodiv^(0+128)
  7463  0D0C  3000               	movlw	0
  7464  0D0D                     u2770:	
  7465  0D0D  001E               	movwi fsr1++
  7466  0D0E  0BB0               	decfsz	??___aodiv^(0+128),f
  7467  0D0F  2D0D               	goto	u2770
  7468  0D10  0820               	movf	___aodiv@divisor^(0+128),w
  7469  0D11  0421               	iorwf	(___aodiv@divisor+1)^(0+128),w
  7470  0D12  0422               	iorwf	(___aodiv@divisor+2)^(0+128),w
  7471  0D13  0423               	iorwf	(___aodiv@divisor+3)^(0+128),w
  7472  0D14  0424               	iorwf	(___aodiv@divisor+4)^(0+128),w
  7473  0D15  0425               	iorwf	(___aodiv@divisor+5)^(0+128),w
  7474  0D16  0426               	iorwf	(___aodiv@divisor+6)^(0+128),w
  7475  0D17  0427               	iorwf	(___aodiv@divisor+7)^(0+128),w
  7476  0D18  1903               	skipnz
  7477  0D19  2D70               	goto	l2672
  7478  0D1A  01B1               	clrf	___aodiv@counter^(0+128)
  7479  0D1B  0AB1               	incf	___aodiv@counter^(0+128),f
  7480  0D1C                     l2660:	
  7481  0D1C  1BA7               	btfsc	(___aodiv@divisor+7)^(0+128),7
  7482  0D1D  2D2B               	goto	l2662
  7483  0D1E  35A0               	lslf	___aodiv@divisor^(0+128),f
  7484  0D1F  0DA1               	rlf	(___aodiv@divisor+1)^(0+128),f
  7485  0D20  0DA2               	rlf	(___aodiv@divisor+2)^(0+128),f
  7486  0D21  0DA3               	rlf	(___aodiv@divisor+3)^(0+128),f
  7487  0D22  0DA4               	rlf	(___aodiv@divisor+4)^(0+128),f
  7488  0D23  0DA5               	rlf	(___aodiv@divisor+5)^(0+128),f
  7489  0D24  0DA6               	rlf	(___aodiv@divisor+6)^(0+128),f
  7490  0D25  0DA7               	rlf	(___aodiv@divisor+7)^(0+128),f
  7491  0D26  3001               	movlw	1
  7492  0D27  00B0               	movwf	??___aodiv^(0+128)
  7493  0D28  0830               	movf	??___aodiv^(0+128),w
  7494  0D29  07B1               	addwf	___aodiv@counter^(0+128),f
  7495  0D2A  2D1C               	goto	l2660
  7496  0D2B                     l2662:	
  7497  0D2B  35B3               	lslf	___aodiv@quotient^(0+128),f
  7498  0D2C  0DB4               	rlf	(___aodiv@quotient+1)^(0+128),f
  7499  0D2D  0DB5               	rlf	(___aodiv@quotient+2)^(0+128),f
  7500  0D2E  0DB6               	rlf	(___aodiv@quotient+3)^(0+128),f
  7501  0D2F  0DB7               	rlf	(___aodiv@quotient+4)^(0+128),f
  7502  0D30  0DB8               	rlf	(___aodiv@quotient+5)^(0+128),f
  7503  0D31  0DB9               	rlf	(___aodiv@quotient+6)^(0+128),f
  7504  0D32  0DBA               	rlf	(___aodiv@quotient+7)^(0+128),f
  7505  0D33  0827               	movf	(___aodiv@divisor+7)^(0+128),w
  7506  0D34  022F               	subwf	(___aodiv@dividend+7)^(0+128),w
  7507  0D35  1D03               	skipz
  7508  0D36  2D51               	goto	u2805
  7509  0D37  0826               	movf	(___aodiv@divisor+6)^(0+128),w
  7510  0D38  022E               	subwf	(___aodiv@dividend+6)^(0+128),w
  7511  0D39  1D03               	skipz
  7512  0D3A  2D51               	goto	u2805
  7513  0D3B  0825               	movf	(___aodiv@divisor+5)^(0+128),w
  7514  0D3C  022D               	subwf	(___aodiv@dividend+5)^(0+128),w
  7515  0D3D  1D03               	skipz
  7516  0D3E  2D51               	goto	u2805
  7517  0D3F  0824               	movf	(___aodiv@divisor+4)^(0+128),w
  7518  0D40  022C               	subwf	(___aodiv@dividend+4)^(0+128),w
  7519  0D41  1D03               	skipz
  7520  0D42  2D51               	goto	u2805
  7521  0D43  0823               	movf	(___aodiv@divisor+3)^(0+128),w
  7522  0D44  022B               	subwf	(___aodiv@dividend+3)^(0+128),w
  7523  0D45  1D03               	skipz
  7524  0D46  2D51               	goto	u2805
  7525  0D47  0822               	movf	(___aodiv@divisor+2)^(0+128),w
  7526  0D48  022A               	subwf	(___aodiv@dividend+2)^(0+128),w
  7527  0D49  1D03               	skipz
  7528  0D4A  2D51               	goto	u2805
  7529  0D4B  0821               	movf	(___aodiv@divisor+1)^(0+128),w
  7530  0D4C  0229               	subwf	(___aodiv@dividend+1)^(0+128),w
  7531  0D4D  1D03               	skipz
  7532  0D4E  2D51               	goto	u2805
  7533  0D4F  0820               	movf	___aodiv@divisor^(0+128),w
  7534  0D50  0228               	subwf	___aodiv@dividend^(0+128),w
  7535  0D51                     u2805:	
  7536  0D51  1C03               	skipc
  7537  0D52  2D64               	goto	l2670
  7538  0D53  0820               	movf	___aodiv@divisor^(0+128),w
  7539  0D54  02A8               	subwf	___aodiv@dividend^(0+128),f
  7540  0D55  0821               	movf	(___aodiv@divisor+1)^(0+128),w
  7541  0D56  3BA9               	subwfb	(___aodiv@dividend+1)^(0+128),f
  7542  0D57  0822               	movf	(___aodiv@divisor+2)^(0+128),w
  7543  0D58  3BAA               	subwfb	(___aodiv@dividend+2)^(0+128),f
  7544  0D59  0823               	movf	(___aodiv@divisor+3)^(0+128),w
  7545  0D5A  3BAB               	subwfb	(___aodiv@dividend+3)^(0+128),f
  7546  0D5B  0824               	movf	(___aodiv@divisor+4)^(0+128),w
  7547  0D5C  3BAC               	subwfb	(___aodiv@dividend+4)^(0+128),f
  7548  0D5D  0825               	movf	(___aodiv@divisor+5)^(0+128),w
  7549  0D5E  3BAD               	subwfb	(___aodiv@dividend+5)^(0+128),f
  7550  0D5F  0826               	movf	(___aodiv@divisor+6)^(0+128),w
  7551  0D60  3BAE               	subwfb	(___aodiv@dividend+6)^(0+128),f
  7552  0D61  0827               	movf	(___aodiv@divisor+7)^(0+128),w
  7553  0D62  3BAF               	subwfb	(___aodiv@dividend+7)^(0+128),f
  7554  0D63  1433               	bsf	___aodiv@quotient^(0+128),0
  7555  0D64                     l2670:	
  7556  0D64  36A7               	lsrf	(___aodiv@divisor+7)^(0+128),f
  7557  0D65  0CA6               	rrf	(___aodiv@divisor+6)^(0+128),f
  7558  0D66  0CA5               	rrf	(___aodiv@divisor+5)^(0+128),f
  7559  0D67  0CA4               	rrf	(___aodiv@divisor+4)^(0+128),f
  7560  0D68  0CA3               	rrf	(___aodiv@divisor+3)^(0+128),f
  7561  0D69  0CA2               	rrf	(___aodiv@divisor+2)^(0+128),f
  7562  0D6A  0CA1               	rrf	(___aodiv@divisor+1)^(0+128),f
  7563  0D6B  0CA0               	rrf	___aodiv@divisor^(0+128),f
  7564  0D6C  3001               	movlw	1
  7565  0D6D  02B1               	subwf	___aodiv@counter^(0+128),f
  7566  0D6E  1D03               	btfss	3,2
  7567  0D6F  2D2B               	goto	l2662
  7568  0D70                     l2672:	
  7569  0D70  0832               	movf	___aodiv@sign^(0+128),w
  7570  0D71  1903               	btfsc	3,2
  7571  0D72  2D91               	goto	l693
  7572  0D73  09B3               	comf	___aodiv@quotient^(0+128),f
  7573  0D74  09B4               	comf	(___aodiv@quotient+1)^(0+128),f
  7574  0D75  09B5               	comf	(___aodiv@quotient+2)^(0+128),f
  7575  0D76  09B6               	comf	(___aodiv@quotient+3)^(0+128),f
  7576  0D77  09B7               	comf	(___aodiv@quotient+4)^(0+128),f
  7577  0D78  09B8               	comf	(___aodiv@quotient+5)^(0+128),f
  7578  0D79  09B9               	comf	(___aodiv@quotient+6)^(0+128),f
  7579  0D7A  09BA               	comf	(___aodiv@quotient+7)^(0+128),f
  7580  0D7B  0AB3               	incf	___aodiv@quotient^(0+128),f
  7581  0D7C  1D03               	skipz
  7582  0D7D  2D91               	goto	l693
  7583  0D7E  0AB4               	incf	(___aodiv@quotient+1)^(0+128),f
  7584  0D7F  1D03               	skipz
  7585  0D80  2D91               	goto	l693
  7586  0D81  0AB5               	incf	(___aodiv@quotient+2)^(0+128),f
  7587  0D82  1D03               	skipz
  7588  0D83  2D91               	goto	l693
  7589  0D84  0AB6               	incf	(___aodiv@quotient+3)^(0+128),f
  7590  0D85  1D03               	skipz
  7591  0D86  2D91               	goto	l693
  7592  0D87  0AB7               	incf	(___aodiv@quotient+4)^(0+128),f
  7593  0D88  1D03               	skipz
  7594  0D89  2D91               	goto	l693
  7595  0D8A  0AB8               	incf	(___aodiv@quotient+5)^(0+128),f
  7596  0D8B  1D03               	skipz
  7597  0D8C  2D91               	goto	l693
  7598  0D8D  0AB9               	incf	(___aodiv@quotient+6)^(0+128),f
  7599  0D8E  1D03               	skipz
  7600  0D8F  2D91               	goto	l693
  7601  0D90  0ABA               	incf	(___aodiv@quotient+7)^(0+128),f
  7602  0D91                     l693:	
  7603  0D91  0021               	movlb	1	; select bank1
  7604  0D92  0833               	movf	___aodiv@quotient^(0+128),w
  7605  0D93  00A0               	movwf	?___aodiv^(0+128)
  7606  0D94  0834               	movf	(___aodiv@quotient+1)^(0+128),w
  7607  0D95  00A1               	movwf	(?___aodiv+1)^(0+128)
  7608  0D96  0835               	movf	(___aodiv@quotient+2)^(0+128),w
  7609  0D97  00A2               	movwf	(?___aodiv+2)^(0+128)
  7610  0D98  0836               	movf	(___aodiv@quotient+3)^(0+128),w
  7611  0D99  00A3               	movwf	(?___aodiv+3)^(0+128)
  7612  0D9A  0837               	movf	(___aodiv@quotient+4)^(0+128),w
  7613  0D9B  00A4               	movwf	(?___aodiv+4)^(0+128)
  7614  0D9C  0838               	movf	(___aodiv@quotient+5)^(0+128),w
  7615  0D9D  00A5               	movwf	(?___aodiv+5)^(0+128)
  7616  0D9E  0839               	movf	(___aodiv@quotient+6)^(0+128),w
  7617  0D9F  00A6               	movwf	(?___aodiv+6)^(0+128)
  7618  0DA0  083A               	movf	(___aodiv@quotient+7)^(0+128),w
  7619  0DA1  00A7               	movwf	(?___aodiv+7)^(0+128)
  7620  0DA2  0008               	return
  7621  0DA3                     __end_of___aodiv:	
  7622                           
  7623                           	psect	text19
  7624  0286                     __ptext19:	
  7625 ;; *************** function _heartBeatCalc *****************
  7626 ;; Defined at:
  7627 ;;		line 136 in file "main.c"
  7628 ;; Parameters:    Size  Location     Type
  7629 ;;  adcVal          2   15[BANK1 ] int 
  7630 ;; Auto vars:     Size  Location     Type
  7631 ;;  i               2   21[BANK1 ] int 
  7632 ;;  i               2   25[BANK1 ] int 
  7633 ;;  runningTotal    2   19[BANK1 ] unsigned short 
  7634 ;;  N               2   23[BANK1 ] int 
  7635 ;; Return value:  Size  Location     Type
  7636 ;;                  1    wreg      void 
  7637 ;; Registers used:
  7638 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7639 ;; Tracked objects:
  7640 ;;		On entry : 0/0
  7641 ;;		On exit  : 0/0
  7642 ;;		Unchanged: 0/0
  7643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7644 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7645 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  7646 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7647 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  7648 ;;Total ram usage:       12 bytes
  7649 ;; Hardware stack levels used:    1
  7650 ;; Hardware stack levels required when called:    7
  7651 ;; This function calls:
  7652 ;;		___aldiv
  7653 ;;		___awdiv
  7654 ;;		___lwdiv
  7655 ;;		___wmul
  7656 ;; This function is called by:
  7657 ;;		_main
  7658 ;; This function uses a non-reentrant model
  7659 ;;
  7660                           
  7661                           
  7662                           ;psect for function _heartBeatCalc
  7663  0286                     _heartBeatCalc:	
  7664                           
  7665                           ;main.c: 137:     Signal = adcVal ;
  7666                           
  7667                           ;incstack = 0
  7668                           ; Regs used in _heartBeatCalc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7669  0286  0021               	movlb	1	; select bank1
  7670  0287  0830               	movf	(heartBeatCalc@adcVal+1)^(0+128),w
  7671  0288  0020               	movlb	0	; select bank0
  7672  0289  00E3               	movwf	_Signal+1	;volatile
  7673  028A  0021               	movlb	1	; select bank1
  7674  028B  082F               	movf	heartBeatCalc@adcVal^(0+128),w
  7675  028C  0020               	movlb	0	; select bank0
  7676  028D  00E2               	movwf	_Signal	;volatile
  7677                           
  7678                           ;main.c: 138:     sampleCounter += 2;
  7679  028E  3002               	movlw	2
  7680  028F  07DC               	addwf	_sampleCounter,f	;volatile
  7681  0290  3000               	movlw	0
  7682  0291  3DDD               	addwfc	_sampleCounter+1,f	;volatile
  7683  0292  3000               	movlw	0
  7684  0293  3DDE               	addwfc	_sampleCounter+2,f	;volatile
  7685  0294  3000               	movlw	0
  7686  0295  3DDF               	addwfc	_sampleCounter+3,f	;volatile
  7687                           
  7688                           ;main.c: 139:     int N = sampleCounter - lastBeatTime;
  7689  0296  0022               	movlb	2	; select bank2
  7690  0297  0820               	movf	_lastBeatTime^(0+256),w	;volatile
  7691  0298  0020               	movlb	0	; select bank0
  7692  0299  025C               	subwf	_sampleCounter,w	;volatile
  7693  029A  0021               	movlb	1	; select bank1
  7694  029B  00B7               	movwf	heartBeatCalc@N^(0+128)
  7695  029C  0022               	movlb	2	; select bank2
  7696  029D  0821               	movf	(_lastBeatTime+1)^(0+256),w	;volatile
  7697  029E  0020               	movlb	0	; select bank0
  7698  029F  3B5D               	subwfb	_sampleCounter+1,w	;volatile
  7699  02A0  0021               	movlb	1	; select bank1
  7700  02A1  00B8               	movwf	(heartBeatCalc@N+1)^(0+128)
  7701                           
  7702                           ;main.c: 142:     if (Signal < thresh && N > (IBI / 5)*3) {
  7703  02A2  0020               	movlb	0	; select bank0
  7704  02A3  0863               	movf	_Signal+1,w	;volatile
  7705  02A4  3A80               	xorlw	128
  7706  02A5  0021               	movlb	1	; select bank1
  7707  02A6  00B1               	movwf	??_heartBeatCalc^(0+128)
  7708  02A7  0020               	movlb	0	; select bank0
  7709  02A8  086C               	movf	_thresh+1,w	;volatile
  7710  02A9  3A80               	xorlw	128
  7711  02AA  0021               	movlb	1	; select bank1
  7712  02AB  0231               	subwf	??_heartBeatCalc^(0+128),w
  7713  02AC  1D03               	skipz
  7714  02AD  2AB1               	goto	u4895
  7715  02AE  0020               	movlb	0	; select bank0
  7716  02AF  086B               	movf	_thresh,w	;volatile
  7717  02B0  0262               	subwf	_Signal,w	;volatile
  7718  02B1                     u4895:	
  7719  02B1  1803               	skipnc
  7720  02B2  2AF2               	goto	l348
  7721  02B3  3005               	movlw	5
  7722  02B4  0021               	movlb	1	; select bank1
  7723  02B5  00A0               	movwf	___awdiv@divisor^(0+128)
  7724  02B6  3000               	movlw	0
  7725  02B7  00A1               	movwf	(___awdiv@divisor^(0+128)+1)
  7726  02B8  0020               	movlb	0	; select bank0
  7727  02B9  086A               	movf	_IBI+1,w	;volatile
  7728  02BA  0021               	movlb	1	; select bank1
  7729  02BB  00A3               	movwf	(___awdiv@dividend+1)^(0+128)
  7730  02BC  0020               	movlb	0	; select bank0
  7731  02BD  0869               	movf	_IBI,w	;volatile
  7732  02BE  0021               	movlb	1	; select bank1
  7733  02BF  00A2               	movwf	___awdiv@dividend^(0+128)
  7734  02C0  3188  2003  3182   	fcall	___awdiv
  7735  02C3  0021               	movlb	1	; select bank1
  7736  02C4  0821               	movf	(?___awdiv+1)^(0+128),w
  7737  02C5  00AA               	movwf	(___wmul@multiplier+1)^(0+128)
  7738  02C6  0820               	movf	?___awdiv^(0+128),w
  7739  02C7  00A9               	movwf	___wmul@multiplier^(0+128)
  7740  02C8  3003               	movlw	3
  7741  02C9  00AB               	movwf	___wmul@multiplicand^(0+128)
  7742  02CA  3000               	movlw	0
  7743  02CB  00AC               	movwf	(___wmul@multiplicand^(0+128)+1)
  7744  02CC  3195  2584  3182   	fcall	___wmul
  7745  02CF  0021               	movlb	1	; select bank1
  7746  02D0  082A               	movf	(?___wmul+1)^(0+128),w
  7747  02D1  3A80               	xorlw	128
  7748  02D2  00B1               	movwf	??_heartBeatCalc^(0+128)
  7749  02D3  0838               	movf	(heartBeatCalc@N+1)^(0+128),w
  7750  02D4  3A80               	xorlw	128
  7751  02D5  0231               	subwf	??_heartBeatCalc^(0+128),w
  7752  02D6  1D03               	skipz
  7753  02D7  2ADA               	goto	u4905
  7754  02D8  0837               	movf	heartBeatCalc@N^(0+128),w
  7755  02D9  0229               	subwf	?___wmul^(0+128),w
  7756  02DA                     u4905:	
  7757  02DA  1803               	skipnc
  7758  02DB  2AF2               	goto	l348
  7759                           
  7760                           ;main.c: 143:         if (Signal < T) {
  7761  02DC  0020               	movlb	0	; select bank0
  7762  02DD  0863               	movf	_Signal+1,w	;volatile
  7763  02DE  3A80               	xorlw	128
  7764  02DF  0021               	movlb	1	; select bank1
  7765  02E0  00B1               	movwf	??_heartBeatCalc^(0+128)
  7766  02E1  0020               	movlb	0	; select bank0
  7767  02E2  086E               	movf	_T+1,w	;volatile
  7768  02E3  3A80               	xorlw	128
  7769  02E4  0021               	movlb	1	; select bank1
  7770  02E5  0231               	subwf	??_heartBeatCalc^(0+128),w
  7771  02E6  1D03               	skipz
  7772  02E7  2AEB               	goto	u4915
  7773  02E8  0020               	movlb	0	; select bank0
  7774  02E9  086D               	movf	_T,w	;volatile
  7775  02EA  0262               	subwf	_Signal,w	;volatile
  7776  02EB                     u4915:	
  7777  02EB  1803               	skipnc
  7778  02EC  2AF2               	goto	l348
  7779                           
  7780                           ;main.c: 144:             T = Signal;
  7781  02ED  0020               	movlb	0	; select bank0
  7782  02EE  0863               	movf	_Signal+1,w	;volatile
  7783  02EF  00EE               	movwf	_T+1	;volatile
  7784  02F0  0862               	movf	_Signal,w	;volatile
  7785  02F1  00ED               	movwf	_T	;volatile
  7786  02F2                     l348:	
  7787                           ;main.c: 146:     }
  7788                           
  7789                           
  7790                           ;main.c: 147:         if (Signal > thresh && Signal > P) {
  7791  02F2  0020               	movlb	0	; select bank0
  7792  02F3  086C               	movf	_thresh+1,w	;volatile
  7793  02F4  3A80               	xorlw	128
  7794  02F5  0021               	movlb	1	; select bank1
  7795  02F6  00B1               	movwf	??_heartBeatCalc^(0+128)
  7796  02F7  0020               	movlb	0	; select bank0
  7797  02F8  0863               	movf	_Signal+1,w	;volatile
  7798  02F9  3A80               	xorlw	128
  7799  02FA  0021               	movlb	1	; select bank1
  7800  02FB  0231               	subwf	??_heartBeatCalc^(0+128),w
  7801  02FC  1D03               	skipz
  7802  02FD  2B01               	goto	u4925
  7803  02FE  0020               	movlb	0	; select bank0
  7804  02FF  0862               	movf	_Signal,w	;volatile
  7805  0300  026B               	subwf	_thresh,w	;volatile
  7806  0301                     u4925:	
  7807  0301  1803               	skipnc
  7808  0302  2B1D               	goto	l350
  7809  0303  0022               	movlb	2	; select bank2
  7810  0304  0869               	movf	(_P+1)^(0+256),w	;volatile
  7811  0305  3A80               	xorlw	128
  7812  0306  0021               	movlb	1	; select bank1
  7813  0307  00B1               	movwf	??_heartBeatCalc^(0+128)
  7814  0308  0020               	movlb	0	; select bank0
  7815  0309  0863               	movf	_Signal+1,w	;volatile
  7816  030A  3A80               	xorlw	128
  7817  030B  0021               	movlb	1	; select bank1
  7818  030C  0231               	subwf	??_heartBeatCalc^(0+128),w
  7819  030D  1D03               	skipz
  7820  030E  2B13               	goto	u4935
  7821  030F  0020               	movlb	0	; select bank0
  7822  0310  0862               	movf	_Signal,w	;volatile
  7823  0311  0022               	movlb	2	; select bank2
  7824  0312  0268               	subwf	_P^(0+256),w	;volatile
  7825  0313                     u4935:	
  7826  0313  1803               	skipnc
  7827  0314  2B1D               	goto	l350
  7828                           
  7829                           ;main.c: 148:         P = Signal;
  7830  0315  0020               	movlb	0	; select bank0
  7831  0316  0863               	movf	_Signal+1,w	;volatile
  7832  0317  0022               	movlb	2	; select bank2
  7833  0318  00E9               	movwf	(_P+1)^(0+256)	;volatile
  7834  0319  0020               	movlb	0	; select bank0
  7835  031A  0862               	movf	_Signal,w	;volatile
  7836  031B  0022               	movlb	2	; select bank2
  7837  031C  00E8               	movwf	_P^(0+256)	;volatile
  7838  031D                     l350:	
  7839                           ;main.c: 149:     }
  7840                           
  7841                           
  7842                           ;main.c: 153:     if (N > 250) {
  7843  031D  0021               	movlb	1	; select bank1
  7844  031E  0838               	movf	(heartBeatCalc@N+1)^(0+128),w
  7845  031F  3A80               	xorlw	128
  7846  0320  00B1               	movwf	??_heartBeatCalc^(0+128)
  7847  0321  3080               	movlw	128
  7848  0322  0231               	subwf	??_heartBeatCalc^(0+128),w
  7849  0323  1D03               	skipz
  7850  0324  2B27               	goto	u4945
  7851  0325  30FB               	movlw	251
  7852  0326  0237               	subwf	heartBeatCalc@N^(0+128),w
  7853  0327                     u4945:	
  7854  0327  1C03               	skipc
  7855  0328  2C23               	goto	l351
  7856                           
  7857                           ;main.c: 154:         if ((Signal > thresh) && (Pulse == 0) && (N > (IBI / 5)*3)) {
  7858  0329  0020               	movlb	0	; select bank0
  7859  032A  086C               	movf	_thresh+1,w	;volatile
  7860  032B  3A80               	xorlw	128
  7861  032C  0021               	movlb	1	; select bank1
  7862  032D  00B1               	movwf	??_heartBeatCalc^(0+128)
  7863  032E  0020               	movlb	0	; select bank0
  7864  032F  0863               	movf	_Signal+1,w	;volatile
  7865  0330  3A80               	xorlw	128
  7866  0331  0021               	movlb	1	; select bank1
  7867  0332  0231               	subwf	??_heartBeatCalc^(0+128),w
  7868  0333  1D03               	skipz
  7869  0334  2B38               	goto	u4955
  7870  0335  0020               	movlb	0	; select bank0
  7871  0336  0862               	movf	_Signal,w	;volatile
  7872  0337  026B               	subwf	_thresh,w	;volatile
  7873  0338                     u4955:	
  7874  0338  1803               	skipnc
  7875  0339  2C23               	goto	l351
  7876  033A  0020               	movlb	0	; select bank0
  7877  033B  0866               	movf	_Pulse,w	;volatile
  7878  033C  1D03               	btfss	3,2
  7879  033D  2C23               	goto	l351
  7880  033E  3005               	movlw	5
  7881  033F  0021               	movlb	1	; select bank1
  7882  0340  00A0               	movwf	___awdiv@divisor^(0+128)
  7883  0341  3000               	movlw	0
  7884  0342  00A1               	movwf	(___awdiv@divisor^(0+128)+1)
  7885  0343  0020               	movlb	0	; select bank0
  7886  0344  086A               	movf	_IBI+1,w	;volatile
  7887  0345  0021               	movlb	1	; select bank1
  7888  0346  00A3               	movwf	(___awdiv@dividend+1)^(0+128)
  7889  0347  0020               	movlb	0	; select bank0
  7890  0348  0869               	movf	_IBI,w	;volatile
  7891  0349  0021               	movlb	1	; select bank1
  7892  034A  00A2               	movwf	___awdiv@dividend^(0+128)
  7893  034B  3188  2003  3182   	fcall	___awdiv
  7894  034E  0021               	movlb	1	; select bank1
  7895  034F  0821               	movf	(?___awdiv+1)^(0+128),w
  7896  0350  00AA               	movwf	(___wmul@multiplier+1)^(0+128)
  7897  0351  0820               	movf	?___awdiv^(0+128),w
  7898  0352  00A9               	movwf	___wmul@multiplier^(0+128)
  7899  0353  3003               	movlw	3
  7900  0354  00AB               	movwf	___wmul@multiplicand^(0+128)
  7901  0355  3000               	movlw	0
  7902  0356  00AC               	movwf	(___wmul@multiplicand^(0+128)+1)
  7903  0357  3195  2584  3182   	fcall	___wmul
  7904  035A  0021               	movlb	1	; select bank1
  7905  035B  082A               	movf	(?___wmul+1)^(0+128),w
  7906  035C  3A80               	xorlw	128
  7907  035D  00B1               	movwf	??_heartBeatCalc^(0+128)
  7908  035E  0838               	movf	(heartBeatCalc@N+1)^(0+128),w
  7909  035F  3A80               	xorlw	128
  7910  0360  0231               	subwf	??_heartBeatCalc^(0+128),w
  7911  0361  1D03               	skipz
  7912  0362  2B65               	goto	u4975
  7913  0363  0837               	movf	heartBeatCalc@N^(0+128),w
  7914  0364  0229               	subwf	?___wmul^(0+128),w
  7915  0365                     u4975:	
  7916  0365  1803               	skipnc
  7917  0366  2C23               	goto	l351
  7918                           
  7919                           ;main.c: 155:             Pulse = 1;
  7920  0367  3001               	movlw	1
  7921  0368  0021               	movlb	1	; select bank1
  7922  0369  00B1               	movwf	??_heartBeatCalc^(0+128)
  7923  036A  0831               	movf	??_heartBeatCalc^(0+128),w
  7924  036B  0020               	movlb	0	; select bank0
  7925  036C  00E6               	movwf	_Pulse	;volatile
  7926                           
  7927                           ;main.c: 156:             IBI = sampleCounter - lastBeatTime;
  7928  036D  0022               	movlb	2	; select bank2
  7929  036E  0820               	movf	_lastBeatTime^(0+256),w	;volatile
  7930  036F  0020               	movlb	0	; select bank0
  7931  0370  025C               	subwf	_sampleCounter,w	;volatile
  7932  0371  00E9               	movwf	_IBI	;volatile
  7933  0372  0022               	movlb	2	; select bank2
  7934  0373  0821               	movf	(_lastBeatTime+1)^(0+256),w	;volatile
  7935  0374  0020               	movlb	0	; select bank0
  7936  0375  3B5D               	subwfb	_sampleCounter+1,w	;volatile
  7937  0376  00EA               	movwf	_IBI+1	;volatile
  7938                           
  7939                           ;main.c: 157:             lastBeatTime = sampleCounter;
  7940  0377  085F               	movf	_sampleCounter+3,w	;volatile
  7941  0378  0022               	movlb	2	; select bank2
  7942  0379  00A3               	movwf	(_lastBeatTime+3)^(0+256)	;volatile
  7943  037A  0020               	movlb	0	; select bank0
  7944  037B  085E               	movf	_sampleCounter+2,w	;volatile
  7945  037C  0022               	movlb	2	; select bank2
  7946  037D  00A2               	movwf	(_lastBeatTime+2)^(0+256)	;volatile
  7947  037E  0020               	movlb	0	; select bank0
  7948  037F  085D               	movf	_sampleCounter+1,w	;volatile
  7949  0380  0022               	movlb	2	; select bank2
  7950  0381  00A1               	movwf	(_lastBeatTime+1)^(0+256)	;volatile
  7951  0382  0020               	movlb	0	; select bank0
  7952  0383  085C               	movf	_sampleCounter,w	;volatile
  7953  0384  0022               	movlb	2	; select bank2
  7954  0385  00A0               	movwf	_lastBeatTime^(0+256)	;volatile
  7955                           
  7956                           ;main.c: 159:             if (secondBeat) {
  7957  0386  0020               	movlb	0	; select bank0
  7958  0387  0867               	movf	_secondBeat,w	;volatile
  7959  0388  1903               	btfsc	3,2
  7960  0389  2BA9               	goto	l3796
  7961                           
  7962                           ;main.c: 160:                 secondBeat = 0;
  7963  038A  01E7               	clrf	_secondBeat	;volatile
  7964                           
  7965                           ;main.c: 161:                 int i;;main.c: 162:                 for (i = 0; i <= 9; i+
      +                          +) {
  7966  038B  0021               	movlb	1	; select bank1
  7967  038C  01B5               	clrf	heartBeatCalc@i^(0+128)
  7968  038D  01B6               	clrf	(heartBeatCalc@i+1)^(0+128)
  7969  038E                     l3790:	
  7970                           
  7971                           ;main.c: 163:                     rate[i] = IBI;
  7972  038E  0021               	movlb	1	; select bank1
  7973  038F  3535               	lslf	heartBeatCalc@i^(0+128),w
  7974  0390  3EC0               	addlw	(low (_rate| (0+256)))& (0+255)
  7975  0391  0086               	movwf	6
  7976  0392  3001               	movlw	1	; select bank3/4
  7977  0393  0087               	movwf	7
  7978  0394  0020               	movlb	0	; select bank0
  7979  0395  0869               	movf	_IBI,w	;volatile
  7980  0396  3FC0               	movwi [0]fsr1
  7981  0397  086A               	movf	_IBI+1,w	;volatile
  7982  0398  3FC1               	movwi [1]fsr1
  7983                           
  7984                           ;main.c: 164:                 }
  7985  0399  3001               	movlw	1
  7986  039A  0021               	movlb	1	; select bank1
  7987  039B  07B5               	addwf	heartBeatCalc@i^(0+128),f
  7988  039C  3000               	movlw	0
  7989  039D  3DB6               	addwfc	(heartBeatCalc@i+1)^(0+128),f
  7990  039E  0836               	movf	(heartBeatCalc@i+1)^(0+128),w
  7991  039F  3A80               	xorlw	128
  7992  03A0  00B1               	movwf	??_heartBeatCalc^(0+128)
  7993  03A1  3080               	movlw	128
  7994  03A2  0231               	subwf	??_heartBeatCalc^(0+128),w
  7995  03A3  1D03               	skipz
  7996  03A4  2BA7               	goto	u4995
  7997  03A5  300A               	movlw	10
  7998  03A6  0235               	subwf	heartBeatCalc@i^(0+128),w
  7999  03A7                     u4995:	
  8000  03A7  1C03               	skipc
  8001  03A8  2B8E               	goto	l3790
  8002  03A9                     l3796:	
  8003                           
  8004                           ;main.c: 167:             if (firstBeat) {
  8005  03A9  0020               	movlb	0	; select bank0
  8006  03AA  086F               	movf	_firstBeat,w	;volatile
  8007  03AB  1903               	btfsc	3,2
  8008  03AC  2BB5               	goto	l3804
  8009                           
  8010                           ;main.c: 168:                 firstBeat = 0;
  8011  03AD  01EF               	clrf	_firstBeat	;volatile
  8012                           
  8013                           ;main.c: 169:                 secondBeat = 1;
  8014  03AE  3001               	movlw	1
  8015  03AF  0021               	movlb	1	; select bank1
  8016  03B0  00B1               	movwf	??_heartBeatCalc^(0+128)
  8017  03B1  0831               	movf	??_heartBeatCalc^(0+128),w
  8018  03B2  0020               	movlb	0	; select bank0
  8019  03B3  00E7               	movwf	_secondBeat	;volatile
  8020  03B4  0008               	return
  8021  03B5                     l3804:	
  8022                           
  8023                           ;main.c: 175:             uint16_t runningTotal = 0;
  8024  03B5  0021               	movlb	1	; select bank1
  8025  03B6  01B3               	clrf	heartBeatCalc@runningTotal^(0+128)
  8026  03B7  01B4               	clrf	(heartBeatCalc@runningTotal+1)^(0+128)
  8027                           
  8028                           ;main.c: 176:             int i;;main.c: 177:             for (i = 0; i <= 8; i++) {
  8029  03B8  01B9               	clrf	heartBeatCalc@i_630^(0+128)
  8030  03B9  01BA               	clrf	(heartBeatCalc@i_630+1)^(0+128)
  8031  03BA                     l3810:	
  8032                           
  8033                           ;main.c: 178:                 rate[i] = rate[i + 1];
  8034  03BA  0021               	movlb	1	; select bank1
  8035  03BB  3539               	lslf	heartBeatCalc@i_630^(0+128),w
  8036  03BC  3EC2               	addlw	(low ((_rate| (0+256)+2)))& (0+255)
  8037  03BD  0086               	movwf	6
  8038  03BE  3001               	movlw	1	; select bank3/4
  8039  03BF  0087               	movwf	7
  8040  03C0  3539               	lslf	heartBeatCalc@i_630^(0+128),w
  8041  03C1  3EC0               	addlw	(low (_rate| (0+256)))& (0+255)
  8042  03C2  0084               	movwf	4
  8043  03C3  3001               	movlw	1	; select bank3/4
  8044  03C4  0085               	movwf	5
  8045  03C5  3F40               	moviw [0]fsr1
  8046  03C6  3F80               	movwi [0]fsr0
  8047  03C7  3F41               	moviw [1]fsr1
  8048  03C8  3F81               	movwi [1]fsr0
  8049                           
  8050                           ;main.c: 179:                 runningTotal += rate[i];
  8051  03C9  3539               	lslf	heartBeatCalc@i_630^(0+128),w
  8052  03CA  3EC0               	addlw	(low (_rate| (0+256)))& (0+255)
  8053  03CB  0086               	movwf	6
  8054  03CC  3001               	movlw	1	; select bank3/4
  8055  03CD  0087               	movwf	7
  8056  03CE  3F40               	moviw [0]fsr1
  8057  03CF  00B1               	movwf	??_heartBeatCalc^(0+128)
  8058  03D0  3F41               	moviw [1]fsr1
  8059  03D1  00B2               	movwf	(??_heartBeatCalc^(0+128)+1)
  8060  03D2  0831               	movf	??_heartBeatCalc^(0+128),w
  8061  03D3  07B3               	addwf	heartBeatCalc@runningTotal^(0+128),f
  8062  03D4  0832               	movf	(??_heartBeatCalc+1)^(0+128),w
  8063  03D5  3DB4               	addwfc	(heartBeatCalc@runningTotal+1)^(0+128),f
  8064                           
  8065                           ;main.c: 180:             }
  8066  03D6  3001               	movlw	1
  8067  03D7  07B9               	addwf	heartBeatCalc@i_630^(0+128),f
  8068  03D8  3000               	movlw	0
  8069  03D9  3DBA               	addwfc	(heartBeatCalc@i_630+1)^(0+128),f
  8070  03DA  083A               	movf	(heartBeatCalc@i_630+1)^(0+128),w
  8071  03DB  3A80               	xorlw	128
  8072  03DC  00B1               	movwf	??_heartBeatCalc^(0+128)
  8073  03DD  3080               	movlw	128
  8074  03DE  0231               	subwf	??_heartBeatCalc^(0+128),w
  8075  03DF  1D03               	skipz
  8076  03E0  2BE3               	goto	u5015
  8077  03E1  3009               	movlw	9
  8078  03E2  0239               	subwf	heartBeatCalc@i_630^(0+128),w
  8079  03E3                     u5015:	
  8080  03E3  1C03               	skipc
  8081  03E4  2BBA               	goto	l3810
  8082                           
  8083                           ;main.c: 182:             rate[9] = IBI;
  8084  03E5  0020               	movlb	0	; select bank0
  8085  03E6  086A               	movf	_IBI+1,w	;volatile
  8086  03E7  0023               	movlb	3	; select bank3
  8087  03E8  00D3               	movwf	((_rate+1)^(0+384)+18)	;volatile
  8088  03E9  0020               	movlb	0	; select bank0
  8089  03EA  0869               	movf	_IBI,w	;volatile
  8090  03EB  0023               	movlb	3	; select bank3
  8091  03EC  00D2               	movwf	(_rate^(0+384)+18)	;volatile
  8092                           
  8093                           ;main.c: 183:             runningTotal += rate[9];
  8094  03ED  0852               	movf	(_rate^(0+384)+18),w	;volatile
  8095  03EE  0021               	movlb	1	; select bank1
  8096  03EF  07B3               	addwf	heartBeatCalc@runningTotal^(0+128),f
  8097  03F0  0023               	movlb	3	; select bank3
  8098  03F1  0853               	movf	((_rate+1)^(0+384)+18),w	;volatile
  8099  03F2  0021               	movlb	1	; select bank1
  8100  03F3  3DB4               	addwfc	(heartBeatCalc@runningTotal+1)^(0+128),f
  8101                           
  8102                           ;main.c: 184:             runningTotal /= 10;
  8103  03F4  300A               	movlw	10
  8104  03F5  00A0               	movwf	___lwdiv@divisor^(0+128)
  8105  03F6  3000               	movlw	0
  8106  03F7  00A1               	movwf	(___lwdiv@divisor^(0+128)+1)
  8107  03F8  0834               	movf	(heartBeatCalc@runningTotal+1)^(0+128),w
  8108  03F9  00A3               	movwf	(___lwdiv@dividend+1)^(0+128)
  8109  03FA  0833               	movf	heartBeatCalc@runningTotal^(0+128),w
  8110  03FB  00A2               	movwf	___lwdiv@dividend^(0+128)
  8111  03FC  3196  26B7  3182   	fcall	___lwdiv
  8112  03FF  0021               	movlb	1	; select bank1
  8113  0400  0821               	movf	(?___lwdiv+1)^(0+128),w
  8114  0401  00B4               	movwf	(heartBeatCalc@runningTotal+1)^(0+128)
  8115  0402  0820               	movf	?___lwdiv^(0+128),w
  8116  0403  00B3               	movwf	heartBeatCalc@runningTotal^(0+128)
  8117                           
  8118                           ;main.c: 185:             BPM = 60000 / runningTotal;
  8119  0404  0833               	movf	heartBeatCalc@runningTotal^(0+128),w
  8120  0405  00A0               	movwf	___aldiv@divisor^(0+128)
  8121  0406  0834               	movf	(heartBeatCalc@runningTotal+1)^(0+128),w
  8122  0407  00A1               	movwf	(___aldiv@divisor^(0+128)+1)
  8123  0408  01A2               	clrf	(___aldiv@divisor^(0+128)+2)
  8124  0409  01A3               	clrf	(___aldiv@divisor^(0+128)+3)
  8125  040A  3000               	movlw	0
  8126  040B  00A7               	movwf	(___aldiv@dividend+3)^(0+128)
  8127  040C  3000               	movlw	0
  8128  040D  00A6               	movwf	(___aldiv@dividend+2)^(0+128)
  8129  040E  30EA               	movlw	234
  8130  040F  00A5               	movwf	(___aldiv@dividend+1)^(0+128)
  8131  0410  3060               	movlw	96
  8132  0411  00A4               	movwf	___aldiv@dividend^(0+128)
  8133  0412  3189  218D  3182   	fcall	___aldiv
  8134  0415  0021               	movlb	1	; select bank1
  8135  0416  0821               	movf	(?___aldiv+1)^(0+128),w
  8136  0417  0022               	movlb	2	; select bank2
  8137  0418  00B7               	movwf	(_BPM+1)^(0+256)	;volatile
  8138  0419  0021               	movlb	1	; select bank1
  8139  041A  0820               	movf	?___aldiv^(0+128),w
  8140  041B  0022               	movlb	2	; select bank2
  8141  041C  00B6               	movwf	_BPM^(0+256)	;volatile
  8142                           
  8143                           ;main.c: 186:             QS = 1;
  8144  041D  3001               	movlw	1
  8145  041E  0021               	movlb	1	; select bank1
  8146  041F  00B1               	movwf	??_heartBeatCalc^(0+128)
  8147  0420  0831               	movf	??_heartBeatCalc^(0+128),w
  8148  0421  0022               	movlb	2	; select bank2
  8149  0422  00C6               	movwf	_QS^(0+256)	;volatile
  8150  0423                     l351:	
  8151                           ;main.c: 189:     }
  8152                           
  8153                           
  8154                           ;main.c: 190:     if (Signal < thresh && Pulse == 1) {
  8155  0423  0020               	movlb	0	; select bank0
  8156  0424  0863               	movf	_Signal+1,w	;volatile
  8157  0425  3A80               	xorlw	128
  8158  0426  0021               	movlb	1	; select bank1
  8159  0427  00B1               	movwf	??_heartBeatCalc^(0+128)
  8160  0428  0020               	movlb	0	; select bank0
  8161  0429  086C               	movf	_thresh+1,w	;volatile
  8162  042A  3A80               	xorlw	128
  8163  042B  0021               	movlb	1	; select bank1
  8164  042C  0231               	subwf	??_heartBeatCalc^(0+128),w
  8165  042D  1D03               	skipz
  8166  042E  2C32               	goto	u5025
  8167  042F  0020               	movlb	0	; select bank0
  8168  0430  086B               	movf	_thresh,w	;volatile
  8169  0431  0262               	subwf	_Signal,w	;volatile
  8170  0432                     u5025:	
  8171  0432  1803               	skipnc
  8172  0433  2C69               	goto	l3836
  8173  0434  0020               	movlb	0	; select bank0
  8174  0435  0366               	decf	_Pulse,w	;volatile
  8175  0436  1D03               	btfss	3,2
  8176  0437  2C69               	goto	l3836
  8177                           
  8178                           ;main.c: 191:         Pulse = 0;
  8179  0438  01E6               	clrf	_Pulse	;volatile
  8180                           
  8181                           ;main.c: 192:         amp = P - T;
  8182  0439  086D               	movf	_T,w	;volatile
  8183  043A  0022               	movlb	2	; select bank2
  8184  043B  0268               	subwf	_P^(0+256),w	;volatile
  8185  043C  00B8               	movwf	_amp^(0+256)	;volatile
  8186  043D  0020               	movlb	0	; select bank0
  8187  043E  086E               	movf	_T+1,w	;volatile
  8188  043F  0022               	movlb	2	; select bank2
  8189  0440  3B69               	subwfb	(_P+1)^(0+256),w	;volatile
  8190  0441  00B9               	movwf	(_amp+1)^(0+256)	;volatile
  8191                           
  8192                           ;main.c: 193:         thresh = amp / 2 + T;
  8193  0442  3002               	movlw	2
  8194  0443  0021               	movlb	1	; select bank1
  8195  0444  00A0               	movwf	___awdiv@divisor^(0+128)
  8196  0445  3000               	movlw	0
  8197  0446  00A1               	movwf	(___awdiv@divisor^(0+128)+1)
  8198  0447  0022               	movlb	2	; select bank2
  8199  0448  0839               	movf	(_amp+1)^(0+256),w	;volatile
  8200  0449  0021               	movlb	1	; select bank1
  8201  044A  00A3               	movwf	(___awdiv@dividend+1)^(0+128)
  8202  044B  0022               	movlb	2	; select bank2
  8203  044C  0838               	movf	_amp^(0+256),w	;volatile
  8204  044D  0021               	movlb	1	; select bank1
  8205  044E  00A2               	movwf	___awdiv@dividend^(0+128)
  8206  044F  3188  2003  3182   	fcall	___awdiv
  8207  0452  0020               	movlb	0	; select bank0
  8208  0453  086D               	movf	_T,w	;volatile
  8209  0454  0021               	movlb	1	; select bank1
  8210  0455  0720               	addwf	?___awdiv^(0+128),w
  8211  0456  0020               	movlb	0	; select bank0
  8212  0457  00EB               	movwf	_thresh	;volatile
  8213  0458  086E               	movf	_T+1,w	;volatile
  8214  0459  0021               	movlb	1	; select bank1
  8215  045A  3D21               	addwfc	(?___awdiv+1)^(0+128),w
  8216  045B  0020               	movlb	0	; select bank0
  8217  045C  00EC               	movwf	_thresh+1	;volatile
  8218                           
  8219                           ;main.c: 194:         P = thresh;
  8220  045D  086C               	movf	_thresh+1,w	;volatile
  8221  045E  0022               	movlb	2	; select bank2
  8222  045F  00E9               	movwf	(_P+1)^(0+256)	;volatile
  8223  0460  0020               	movlb	0	; select bank0
  8224  0461  086B               	movf	_thresh,w	;volatile
  8225  0462  0022               	movlb	2	; select bank2
  8226  0463  00E8               	movwf	_P^(0+256)	;volatile
  8227                           
  8228                           ;main.c: 195:         T = thresh;
  8229  0464  0020               	movlb	0	; select bank0
  8230  0465  086C               	movf	_thresh+1,w	;volatile
  8231  0466  00EE               	movwf	_T+1	;volatile
  8232  0467  086B               	movf	_thresh,w	;volatile
  8233  0468  00ED               	movwf	_T	;volatile
  8234  0469                     l3836:	
  8235                           
  8236                           ;main.c: 198:     if (N > 2500) {
  8237  0469  0021               	movlb	1	; select bank1
  8238  046A  0838               	movf	(heartBeatCalc@N+1)^(0+128),w
  8239  046B  3A80               	xorlw	128
  8240  046C  00B1               	movwf	??_heartBeatCalc^(0+128)
  8241  046D  3089               	movlw	137
  8242  046E  0231               	subwf	??_heartBeatCalc^(0+128),w
  8243  046F  1D03               	skipz
  8244  0470  2C73               	goto	u5045
  8245  0471  30C5               	movlw	197
  8246  0472  0237               	subwf	heartBeatCalc@N^(0+128),w
  8247  0473                     u5045:	
  8248  0473  1C03               	skipc
  8249  0474  0008               	return
  8250                           
  8251                           ;main.c: 199:         thresh = 530;
  8252  0475  3012               	movlw	18
  8253  0476  0020               	movlb	0	; select bank0
  8254  0477  00EB               	movwf	_thresh	;volatile
  8255  0478  3002               	movlw	2
  8256  0479  00EC               	movwf	_thresh+1	;volatile
  8257                           
  8258                           ;main.c: 200:         P = 512;
  8259  047A  3000               	movlw	0
  8260  047B  0022               	movlb	2	; select bank2
  8261  047C  00E8               	movwf	_P^(0+256)	;volatile
  8262  047D  3002               	movlw	2
  8263  047E  00E9               	movwf	(_P^(0+256)+1)	;volatile
  8264                           
  8265                           ;main.c: 201:         T = 512;
  8266  047F  3000               	movlw	0
  8267  0480  0020               	movlb	0	; select bank0
  8268  0481  00ED               	movwf	_T	;volatile
  8269  0482  3002               	movlw	2
  8270  0483  00EE               	movwf	_T+1	;volatile
  8271                           
  8272                           ;main.c: 202:         lastBeatTime = sampleCounter;
  8273  0484  085F               	movf	_sampleCounter+3,w	;volatile
  8274  0485  0022               	movlb	2	; select bank2
  8275  0486  00A3               	movwf	(_lastBeatTime+3)^(0+256)	;volatile
  8276  0487  0020               	movlb	0	; select bank0
  8277  0488  085E               	movf	_sampleCounter+2,w	;volatile
  8278  0489  0022               	movlb	2	; select bank2
  8279  048A  00A2               	movwf	(_lastBeatTime+2)^(0+256)	;volatile
  8280  048B  0020               	movlb	0	; select bank0
  8281  048C  085D               	movf	_sampleCounter+1,w	;volatile
  8282  048D  0022               	movlb	2	; select bank2
  8283  048E  00A1               	movwf	(_lastBeatTime+1)^(0+256)	;volatile
  8284  048F  0020               	movlb	0	; select bank0
  8285  0490  085C               	movf	_sampleCounter,w	;volatile
  8286  0491  0022               	movlb	2	; select bank2
  8287  0492  00A0               	movwf	_lastBeatTime^(0+256)	;volatile
  8288                           
  8289                           ;main.c: 203:         firstBeat = 1;
  8290  0493  3001               	movlw	1
  8291  0494  0021               	movlb	1	; select bank1
  8292  0495  00B1               	movwf	??_heartBeatCalc^(0+128)
  8293  0496  0831               	movf	??_heartBeatCalc^(0+128),w
  8294  0497  0020               	movlb	0	; select bank0
  8295  0498  00EF               	movwf	_firstBeat	;volatile
  8296                           
  8297                           ;main.c: 204:         secondBeat = 0;
  8298  0499  01E7               	clrf	_secondBeat	;volatile
  8299  049A  0008               	return
  8300  049B                     __end_of_heartBeatCalc:	
  8301                           
  8302                           	psect	text20
  8303  1584                     __ptext20:	
  8304 ;; *************** function ___wmul *****************
  8305 ;; Defined at:
  8306 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  8307 ;; Parameters:    Size  Location     Type
  8308 ;;  multiplier      2    9[BANK1 ] unsigned int 
  8309 ;;  multiplicand    2   11[BANK1 ] unsigned int 
  8310 ;; Auto vars:     Size  Location     Type
  8311 ;;  product         2   13[BANK1 ] unsigned int 
  8312 ;; Return value:  Size  Location     Type
  8313 ;;                  2    9[BANK1 ] unsigned int 
  8314 ;; Registers used:
  8315 ;;		wreg, status,2, status,0
  8316 ;; Tracked objects:
  8317 ;;		On entry : 0/0
  8318 ;;		On exit  : 0/0
  8319 ;;		Unchanged: 0/0
  8320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8321 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8322 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8324 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  8325 ;;Total ram usage:        6 bytes
  8326 ;; Hardware stack levels used:    1
  8327 ;; Hardware stack levels required when called:    6
  8328 ;; This function calls:
  8329 ;;		Nothing
  8330 ;; This function is called by:
  8331 ;;		_heartBeatCalc
  8332 ;; This function uses a non-reentrant model
  8333 ;;
  8334                           
  8335                           
  8336                           ;psect for function ___wmul
  8337  1584                     ___wmul:	
  8338                           
  8339                           ;incstack = 0
  8340                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8341  1584  0021               	movlb	1	; select bank1
  8342  1585  01AD               	clrf	___wmul@product^(0+128)
  8343  1586  01AE               	clrf	(___wmul@product+1)^(0+128)
  8344  1587                     l3554:	
  8345  1587  1C29               	btfss	___wmul@multiplier^(0+128),0
  8346  1588  2D8D               	goto	l593
  8347  1589  082B               	movf	___wmul@multiplicand^(0+128),w
  8348  158A  07AD               	addwf	___wmul@product^(0+128),f
  8349  158B  082C               	movf	(___wmul@multiplicand+1)^(0+128),w
  8350  158C  3DAE               	addwfc	(___wmul@product+1)^(0+128),f
  8351  158D                     l593:	
  8352  158D  3001               	movlw	1
  8353  158E                     u4515:	
  8354  158E  35AB               	lslf	___wmul@multiplicand^(0+128),f
  8355  158F  0DAC               	rlf	(___wmul@multiplicand+1)^(0+128),f
  8356  1590  0B89               	decfsz	9,f
  8357  1591  2D8E               	goto	u4515
  8358  1592  3001               	movlw	1
  8359  1593                     u4525:	
  8360  1593  36AA               	lsrf	(___wmul@multiplier+1)^(0+128),f
  8361  1594  0CA9               	rrf	___wmul@multiplier^(0+128),f
  8362  1595  0B89               	decfsz	9,f
  8363  1596  2D93               	goto	u4525
  8364  1597  0829               	movf	___wmul@multiplier^(0+128),w
  8365  1598  042A               	iorwf	(___wmul@multiplier+1)^(0+128),w
  8366  1599  1D03               	btfss	3,2
  8367  159A  2D87               	goto	l3554
  8368  159B  082E               	movf	(___wmul@product+1)^(0+128),w
  8369  159C  00AA               	movwf	(?___wmul+1)^(0+128)
  8370  159D  082D               	movf	___wmul@product^(0+128),w
  8371  159E  00A9               	movwf	?___wmul^(0+128)
  8372  159F  0008               	return
  8373  15A0                     __end_of___wmul:	
  8374                           
  8375                           	psect	text21
  8376  16B7                     __ptext21:	
  8377 ;; *************** function ___lwdiv *****************
  8378 ;; Defined at:
  8379 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwdiv.c"
  8380 ;; Parameters:    Size  Location     Type
  8381 ;;  divisor         2    0[BANK1 ] unsigned int 
  8382 ;;  dividend        2    2[BANK1 ] unsigned int 
  8383 ;; Auto vars:     Size  Location     Type
  8384 ;;  quotient        2    5[BANK1 ] unsigned int 
  8385 ;;  counter         1    7[BANK1 ] unsigned char 
  8386 ;; Return value:  Size  Location     Type
  8387 ;;                  2    0[BANK1 ] unsigned int 
  8388 ;; Registers used:
  8389 ;;		wreg, status,2, status,0
  8390 ;; Tracked objects:
  8391 ;;		On entry : 0/0
  8392 ;;		On exit  : 0/0
  8393 ;;		Unchanged: 0/0
  8394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8395 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8396 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  8397 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8398 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  8399 ;;Total ram usage:        8 bytes
  8400 ;; Hardware stack levels used:    1
  8401 ;; Hardware stack levels required when called:    6
  8402 ;; This function calls:
  8403 ;;		Nothing
  8404 ;; This function is called by:
  8405 ;;		_heartBeatCalc
  8406 ;; This function uses a non-reentrant model
  8407 ;;
  8408                           
  8409                           
  8410                           ;psect for function ___lwdiv
  8411  16B7                     ___lwdiv:	
  8412                           
  8413                           ;incstack = 0
  8414                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  8415  16B7  0021               	movlb	1	; select bank1
  8416  16B8  01A5               	clrf	___lwdiv@quotient^(0+128)
  8417  16B9  01A6               	clrf	(___lwdiv@quotient+1)^(0+128)
  8418  16BA  0820               	movf	___lwdiv@divisor^(0+128),w
  8419  16BB  0421               	iorwf	(___lwdiv@divisor+1)^(0+128),w
  8420  16BC  1903               	btfsc	3,2
  8421  16BD  2EE7               	goto	l3672
  8422  16BE  01A7               	clrf	___lwdiv@counter^(0+128)
  8423  16BF  0AA7               	incf	___lwdiv@counter^(0+128),f
  8424  16C0                     l3660:	
  8425  16C0  1BA1               	btfsc	(___lwdiv@divisor+1)^(0+128),7
  8426  16C1  2ECC               	goto	l3662
  8427  16C2  3001               	movlw	1
  8428  16C3                     u4755:	
  8429  16C3  35A0               	lslf	___lwdiv@divisor^(0+128),f
  8430  16C4  0DA1               	rlf	(___lwdiv@divisor+1)^(0+128),f
  8431  16C5  0B89               	decfsz	9,f
  8432  16C6  2EC3               	goto	u4755
  8433  16C7  3001               	movlw	1
  8434  16C8  00A4               	movwf	??___lwdiv^(0+128)
  8435  16C9  0824               	movf	??___lwdiv^(0+128),w
  8436  16CA  07A7               	addwf	___lwdiv@counter^(0+128),f
  8437  16CB  2EC0               	goto	l3660
  8438  16CC                     l3662:	
  8439  16CC  3001               	movlw	1
  8440  16CD                     u4775:	
  8441  16CD  35A5               	lslf	___lwdiv@quotient^(0+128),f
  8442  16CE  0DA6               	rlf	(___lwdiv@quotient+1)^(0+128),f
  8443  16CF  0B89               	decfsz	9,f
  8444  16D0  2ECD               	goto	u4775
  8445  16D1  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
  8446  16D2  0223               	subwf	(___lwdiv@dividend+1)^(0+128),w
  8447  16D3  1D03               	skipz
  8448  16D4  2ED7               	goto	u4785
  8449  16D5  0820               	movf	___lwdiv@divisor^(0+128),w
  8450  16D6  0222               	subwf	___lwdiv@dividend^(0+128),w
  8451  16D7                     u4785:	
  8452  16D7  1C03               	skipc
  8453  16D8  2EDE               	goto	l3668
  8454  16D9  0820               	movf	___lwdiv@divisor^(0+128),w
  8455  16DA  02A2               	subwf	___lwdiv@dividend^(0+128),f
  8456  16DB  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
  8457  16DC  3BA3               	subwfb	(___lwdiv@dividend+1)^(0+128),f
  8458  16DD  1425               	bsf	___lwdiv@quotient^(0+128),0
  8459  16DE                     l3668:	
  8460  16DE  3001               	movlw	1
  8461  16DF                     u4795:	
  8462  16DF  36A1               	lsrf	(___lwdiv@divisor+1)^(0+128),f
  8463  16E0  0CA0               	rrf	___lwdiv@divisor^(0+128),f
  8464  16E1  0B89               	decfsz	9,f
  8465  16E2  2EDF               	goto	u4795
  8466  16E3  3001               	movlw	1
  8467  16E4  02A7               	subwf	___lwdiv@counter^(0+128),f
  8468  16E5  1D03               	btfss	3,2
  8469  16E6  2ECC               	goto	l3662
  8470  16E7                     l3672:	
  8471  16E7  0826               	movf	(___lwdiv@quotient+1)^(0+128),w
  8472  16E8  00A1               	movwf	(?___lwdiv+1)^(0+128)
  8473  16E9  0825               	movf	___lwdiv@quotient^(0+128),w
  8474  16EA  00A0               	movwf	?___lwdiv^(0+128)
  8475  16EB  0008               	return
  8476  16EC                     __end_of___lwdiv:	
  8477                           
  8478                           	psect	text22
  8479  0803                     __ptext22:	
  8480 ;; *************** function ___awdiv *****************
  8481 ;; Defined at:
  8482 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  8483 ;; Parameters:    Size  Location     Type
  8484 ;;  divisor         2    0[BANK1 ] int 
  8485 ;;  dividend        2    2[BANK1 ] int 
  8486 ;; Auto vars:     Size  Location     Type
  8487 ;;  quotient        2    7[BANK1 ] int 
  8488 ;;  sign            1    6[BANK1 ] unsigned char 
  8489 ;;  counter         1    5[BANK1 ] unsigned char 
  8490 ;; Return value:  Size  Location     Type
  8491 ;;                  2    0[BANK1 ] int 
  8492 ;; Registers used:
  8493 ;;		wreg, status,2, status,0
  8494 ;; Tracked objects:
  8495 ;;		On entry : 0/0
  8496 ;;		On exit  : 0/0
  8497 ;;		Unchanged: 0/0
  8498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8499 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8500 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8501 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8502 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  8503 ;;Total ram usage:        9 bytes
  8504 ;; Hardware stack levels used:    1
  8505 ;; Hardware stack levels required when called:    6
  8506 ;; This function calls:
  8507 ;;		Nothing
  8508 ;; This function is called by:
  8509 ;;		_heartBeatCalc
  8510 ;; This function uses a non-reentrant model
  8511 ;;
  8512                           
  8513                           
  8514                           ;psect for function ___awdiv
  8515  0803                     ___awdiv:	
  8516                           
  8517                           ;incstack = 0
  8518                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  8519  0803  0021               	movlb	1	; select bank1
  8520  0804  01A6               	clrf	___awdiv@sign^(0+128)
  8521  0805  1FA1               	btfss	(___awdiv@divisor+1)^(0+128),7
  8522  0806  280E               	goto	l3614
  8523  0807  09A0               	comf	___awdiv@divisor^(0+128),f
  8524  0808  09A1               	comf	(___awdiv@divisor+1)^(0+128),f
  8525  0809  0AA0               	incf	___awdiv@divisor^(0+128),f
  8526  080A  1903               	skipnz
  8527  080B  0AA1               	incf	(___awdiv@divisor+1)^(0+128),f
  8528  080C  01A6               	clrf	___awdiv@sign^(0+128)
  8529  080D  0AA6               	incf	___awdiv@sign^(0+128),f
  8530  080E                     l3614:	
  8531  080E  1FA3               	btfss	(___awdiv@dividend+1)^(0+128),7
  8532  080F  2819               	goto	l3620
  8533  0810  09A2               	comf	___awdiv@dividend^(0+128),f
  8534  0811  09A3               	comf	(___awdiv@dividend+1)^(0+128),f
  8535  0812  0AA2               	incf	___awdiv@dividend^(0+128),f
  8536  0813  1903               	skipnz
  8537  0814  0AA3               	incf	(___awdiv@dividend+1)^(0+128),f
  8538  0815  3001               	movlw	1
  8539  0816  00A4               	movwf	??___awdiv^(0+128)
  8540  0817  0824               	movf	??___awdiv^(0+128),w
  8541  0818  06A6               	xorwf	___awdiv@sign^(0+128),f
  8542  0819                     l3620:	
  8543  0819  01A7               	clrf	___awdiv@quotient^(0+128)
  8544  081A  01A8               	clrf	(___awdiv@quotient+1)^(0+128)
  8545  081B  0820               	movf	___awdiv@divisor^(0+128),w
  8546  081C  0421               	iorwf	(___awdiv@divisor+1)^(0+128),w
  8547  081D  1903               	btfsc	3,2
  8548  081E  2848               	goto	l3642
  8549  081F  01A5               	clrf	___awdiv@counter^(0+128)
  8550  0820  0AA5               	incf	___awdiv@counter^(0+128),f
  8551  0821                     l3630:	
  8552  0821  1BA1               	btfsc	(___awdiv@divisor+1)^(0+128),7
  8553  0822  282D               	goto	l3632
  8554  0823  3001               	movlw	1
  8555  0824                     u4675:	
  8556  0824  35A0               	lslf	___awdiv@divisor^(0+128),f
  8557  0825  0DA1               	rlf	(___awdiv@divisor+1)^(0+128),f
  8558  0826  0B89               	decfsz	9,f
  8559  0827  2824               	goto	u4675
  8560  0828  3001               	movlw	1
  8561  0829  00A4               	movwf	??___awdiv^(0+128)
  8562  082A  0824               	movf	??___awdiv^(0+128),w
  8563  082B  07A5               	addwf	___awdiv@counter^(0+128),f
  8564  082C  2821               	goto	l3630
  8565  082D                     l3632:	
  8566  082D  3001               	movlw	1
  8567  082E                     u4695:	
  8568  082E  35A7               	lslf	___awdiv@quotient^(0+128),f
  8569  082F  0DA8               	rlf	(___awdiv@quotient+1)^(0+128),f
  8570  0830  0B89               	decfsz	9,f
  8571  0831  282E               	goto	u4695
  8572  0832  0821               	movf	(___awdiv@divisor+1)^(0+128),w
  8573  0833  0223               	subwf	(___awdiv@dividend+1)^(0+128),w
  8574  0834  1D03               	skipz
  8575  0835  2838               	goto	u4705
  8576  0836  0820               	movf	___awdiv@divisor^(0+128),w
  8577  0837  0222               	subwf	___awdiv@dividend^(0+128),w
  8578  0838                     u4705:	
  8579  0838  1C03               	skipc
  8580  0839  283F               	goto	l3638
  8581  083A  0820               	movf	___awdiv@divisor^(0+128),w
  8582  083B  02A2               	subwf	___awdiv@dividend^(0+128),f
  8583  083C  0821               	movf	(___awdiv@divisor+1)^(0+128),w
  8584  083D  3BA3               	subwfb	(___awdiv@dividend+1)^(0+128),f
  8585  083E  1427               	bsf	___awdiv@quotient^(0+128),0
  8586  083F                     l3638:	
  8587  083F  3001               	movlw	1
  8588  0840                     u4715:	
  8589  0840  36A1               	lsrf	(___awdiv@divisor+1)^(0+128),f
  8590  0841  0CA0               	rrf	___awdiv@divisor^(0+128),f
  8591  0842  0B89               	decfsz	9,f
  8592  0843  2840               	goto	u4715
  8593  0844  3001               	movlw	1
  8594  0845  02A5               	subwf	___awdiv@counter^(0+128),f
  8595  0846  1D03               	btfss	3,2
  8596  0847  282D               	goto	l3632
  8597  0848                     l3642:	
  8598  0848  0826               	movf	___awdiv@sign^(0+128),w
  8599  0849  1903               	btfsc	3,2
  8600  084A  2850               	goto	l3646
  8601  084B  09A7               	comf	___awdiv@quotient^(0+128),f
  8602  084C  09A8               	comf	(___awdiv@quotient+1)^(0+128),f
  8603  084D  0AA7               	incf	___awdiv@quotient^(0+128),f
  8604  084E  1903               	skipnz
  8605  084F  0AA8               	incf	(___awdiv@quotient+1)^(0+128),f
  8606  0850                     l3646:	
  8607  0850  0828               	movf	(___awdiv@quotient+1)^(0+128),w
  8608  0851  00A1               	movwf	(?___awdiv+1)^(0+128)
  8609  0852  0827               	movf	___awdiv@quotient^(0+128),w
  8610  0853  00A0               	movwf	?___awdiv^(0+128)
  8611  0854  0008               	return
  8612  0855                     __end_of___awdiv:	
  8613                           
  8614                           	psect	text23
  8615  098D                     __ptext23:	
  8616 ;; *************** function ___aldiv *****************
  8617 ;; Defined at:
  8618 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aldiv.c"
  8619 ;; Parameters:    Size  Location     Type
  8620 ;;  divisor         4    0[BANK1 ] long 
  8621 ;;  dividend        4    4[BANK1 ] long 
  8622 ;; Auto vars:     Size  Location     Type
  8623 ;;  quotient        4   11[BANK1 ] long 
  8624 ;;  sign            1   10[BANK1 ] unsigned char 
  8625 ;;  counter         1    9[BANK1 ] unsigned char 
  8626 ;; Return value:  Size  Location     Type
  8627 ;;                  4    0[BANK1 ] long 
  8628 ;; Registers used:
  8629 ;;		wreg, status,2, status,0
  8630 ;; Tracked objects:
  8631 ;;		On entry : 0/0
  8632 ;;		On exit  : 0/0
  8633 ;;		Unchanged: 0/0
  8634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8635 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  8636 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  8637 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8638 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0
  8639 ;;Total ram usage:       15 bytes
  8640 ;; Hardware stack levels used:    1
  8641 ;; Hardware stack levels required when called:    6
  8642 ;; This function calls:
  8643 ;;		Nothing
  8644 ;; This function is called by:
  8645 ;;		_heartBeatCalc
  8646 ;; This function uses a non-reentrant model
  8647 ;;
  8648                           
  8649                           
  8650                           ;psect for function ___aldiv
  8651  098D                     ___aldiv:	
  8652                           
  8653                           ;incstack = 0
  8654                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  8655  098D  0021               	movlb	1	; select bank1
  8656  098E  01AA               	clrf	___aldiv@sign^(0+128)
  8657  098F  1FA3               	btfss	(___aldiv@divisor+3)^(0+128),7
  8658  0990  299E               	goto	l658
  8659  0991  09A0               	comf	___aldiv@divisor^(0+128),f
  8660  0992  09A1               	comf	(___aldiv@divisor+1)^(0+128),f
  8661  0993  09A2               	comf	(___aldiv@divisor+2)^(0+128),f
  8662  0994  09A3               	comf	(___aldiv@divisor+3)^(0+128),f
  8663  0995  0AA0               	incf	___aldiv@divisor^(0+128),f
  8664  0996  1903               	skipnz
  8665  0997  0AA1               	incf	(___aldiv@divisor+1)^(0+128),f
  8666  0998  1903               	skipnz
  8667  0999  0AA2               	incf	(___aldiv@divisor+2)^(0+128),f
  8668  099A  1903               	skipnz
  8669  099B  0AA3               	incf	(___aldiv@divisor+3)^(0+128),f
  8670  099C  01AA               	clrf	___aldiv@sign^(0+128)
  8671  099D  0AAA               	incf	___aldiv@sign^(0+128),f
  8672  099E                     l658:	
  8673  099E  1FA7               	btfss	(___aldiv@dividend+3)^(0+128),7
  8674  099F  29AF               	goto	l3576
  8675  09A0  09A4               	comf	___aldiv@dividend^(0+128),f
  8676  09A1  09A5               	comf	(___aldiv@dividend+1)^(0+128),f
  8677  09A2  09A6               	comf	(___aldiv@dividend+2)^(0+128),f
  8678  09A3  09A7               	comf	(___aldiv@dividend+3)^(0+128),f
  8679  09A4  0AA4               	incf	___aldiv@dividend^(0+128),f
  8680  09A5  1903               	skipnz
  8681  09A6  0AA5               	incf	(___aldiv@dividend+1)^(0+128),f
  8682  09A7  1903               	skipnz
  8683  09A8  0AA6               	incf	(___aldiv@dividend+2)^(0+128),f
  8684  09A9  1903               	skipnz
  8685  09AA  0AA7               	incf	(___aldiv@dividend+3)^(0+128),f
  8686  09AB  3001               	movlw	1
  8687  09AC  00A8               	movwf	??___aldiv^(0+128)
  8688  09AD  0828               	movf	??___aldiv^(0+128),w
  8689  09AE  06AA               	xorwf	___aldiv@sign^(0+128),f
  8690  09AF                     l3576:	
  8691  09AF  3000               	movlw	0
  8692  09B0  00AE               	movwf	(___aldiv@quotient+3)^(0+128)
  8693  09B1  3000               	movlw	0
  8694  09B2  00AD               	movwf	(___aldiv@quotient+2)^(0+128)
  8695  09B3  3000               	movlw	0
  8696  09B4  00AC               	movwf	(___aldiv@quotient+1)^(0+128)
  8697  09B5  3000               	movlw	0
  8698  09B6  00AB               	movwf	___aldiv@quotient^(0+128)
  8699  09B7  0823               	movf	(___aldiv@divisor+3)^(0+128),w
  8700  09B8  0422               	iorwf	(___aldiv@divisor+2)^(0+128),w
  8701  09B9  0421               	iorwf	(___aldiv@divisor+1)^(0+128),w
  8702  09BA  0420               	iorwf	___aldiv@divisor^(0+128),w
  8703  09BB  1903               	skipnz
  8704  09BC  29F8               	goto	l3598
  8705  09BD  01A9               	clrf	___aldiv@counter^(0+128)
  8706  09BE  0AA9               	incf	___aldiv@counter^(0+128),f
  8707  09BF                     l3584:	
  8708  09BF  1BA3               	btfsc	(___aldiv@divisor+3)^(0+128),7
  8709  09C0  29CD               	goto	l3586
  8710  09C1  3001               	movlw	1
  8711  09C2                     u4575:	
  8712  09C2  35A0               	lslf	___aldiv@divisor^(0+128),f
  8713  09C3  0DA1               	rlf	(___aldiv@divisor+1)^(0+128),f
  8714  09C4  0DA2               	rlf	(___aldiv@divisor+2)^(0+128),f
  8715  09C5  0DA3               	rlf	(___aldiv@divisor+3)^(0+128),f
  8716  09C6  0B89               	decfsz	9,f
  8717  09C7  29C2               	goto	u4575
  8718  09C8  3001               	movlw	1
  8719  09C9  00A8               	movwf	??___aldiv^(0+128)
  8720  09CA  0828               	movf	??___aldiv^(0+128),w
  8721  09CB  07A9               	addwf	___aldiv@counter^(0+128),f
  8722  09CC  29BF               	goto	l3584
  8723  09CD                     l3586:	
  8724  09CD  3001               	movlw	1
  8725  09CE                     u4595:	
  8726  09CE  35AB               	lslf	___aldiv@quotient^(0+128),f
  8727  09CF  0DAC               	rlf	(___aldiv@quotient+1)^(0+128),f
  8728  09D0  0DAD               	rlf	(___aldiv@quotient+2)^(0+128),f
  8729  09D1  0DAE               	rlf	(___aldiv@quotient+3)^(0+128),f
  8730  09D2  0B89               	decfsz	9,f
  8731  09D3  29CE               	goto	u4595
  8732  09D4  0823               	movf	(___aldiv@divisor+3)^(0+128),w
  8733  09D5  0227               	subwf	(___aldiv@dividend+3)^(0+128),w
  8734  09D6  1D03               	skipz
  8735  09D7  29E2               	goto	u4605
  8736  09D8  0822               	movf	(___aldiv@divisor+2)^(0+128),w
  8737  09D9  0226               	subwf	(___aldiv@dividend+2)^(0+128),w
  8738  09DA  1D03               	skipz
  8739  09DB  29E2               	goto	u4605
  8740  09DC  0821               	movf	(___aldiv@divisor+1)^(0+128),w
  8741  09DD  0225               	subwf	(___aldiv@dividend+1)^(0+128),w
  8742  09DE  1D03               	skipz
  8743  09DF  29E2               	goto	u4605
  8744  09E0  0820               	movf	___aldiv@divisor^(0+128),w
  8745  09E1  0224               	subwf	___aldiv@dividend^(0+128),w
  8746  09E2                     u4605:	
  8747  09E2  1C03               	skipc
  8748  09E3  29ED               	goto	l3594
  8749  09E4  0820               	movf	___aldiv@divisor^(0+128),w
  8750  09E5  02A4               	subwf	___aldiv@dividend^(0+128),f
  8751  09E6  0821               	movf	(___aldiv@divisor+1)^(0+128),w
  8752  09E7  3BA5               	subwfb	(___aldiv@dividend+1)^(0+128),f
  8753  09E8  0822               	movf	(___aldiv@divisor+2)^(0+128),w
  8754  09E9  3BA6               	subwfb	(___aldiv@dividend+2)^(0+128),f
  8755  09EA  0823               	movf	(___aldiv@divisor+3)^(0+128),w
  8756  09EB  3BA7               	subwfb	(___aldiv@dividend+3)^(0+128),f
  8757  09EC  142B               	bsf	___aldiv@quotient^(0+128),0
  8758  09ED                     l3594:	
  8759  09ED  3001               	movlw	1
  8760  09EE                     u4615:	
  8761  09EE  36A3               	lsrf	(___aldiv@divisor+3)^(0+128),f
  8762  09EF  0CA2               	rrf	(___aldiv@divisor+2)^(0+128),f
  8763  09F0  0CA1               	rrf	(___aldiv@divisor+1)^(0+128),f
  8764  09F1  0CA0               	rrf	___aldiv@divisor^(0+128),f
  8765  09F2  0B89               	decfsz	9,f
  8766  09F3  29EE               	goto	u4615
  8767  09F4  3001               	movlw	1
  8768  09F5  02A9               	subwf	___aldiv@counter^(0+128),f
  8769  09F6  1D03               	btfss	3,2
  8770  09F7  29CD               	goto	l3586
  8771  09F8                     l3598:	
  8772  09F8  082A               	movf	___aldiv@sign^(0+128),w
  8773  09F9  1903               	btfsc	3,2
  8774  09FA  2A06               	goto	l3602
  8775  09FB  09AB               	comf	___aldiv@quotient^(0+128),f
  8776  09FC  09AC               	comf	(___aldiv@quotient+1)^(0+128),f
  8777  09FD  09AD               	comf	(___aldiv@quotient+2)^(0+128),f
  8778  09FE  09AE               	comf	(___aldiv@quotient+3)^(0+128),f
  8779  09FF  0AAB               	incf	___aldiv@quotient^(0+128),f
  8780  0A00  1903               	skipnz
  8781  0A01  0AAC               	incf	(___aldiv@quotient+1)^(0+128),f
  8782  0A02  1903               	skipnz
  8783  0A03  0AAD               	incf	(___aldiv@quotient+2)^(0+128),f
  8784  0A04  1903               	skipnz
  8785  0A05  0AAE               	incf	(___aldiv@quotient+3)^(0+128),f
  8786  0A06                     l3602:	
  8787  0A06  082E               	movf	(___aldiv@quotient+3)^(0+128),w
  8788  0A07  00A3               	movwf	(?___aldiv+3)^(0+128)
  8789  0A08  082D               	movf	(___aldiv@quotient+2)^(0+128),w
  8790  0A09  00A2               	movwf	(?___aldiv+2)^(0+128)
  8791  0A0A  082C               	movf	(___aldiv@quotient+1)^(0+128),w
  8792  0A0B  00A1               	movwf	(?___aldiv+1)^(0+128)
  8793  0A0C  082B               	movf	___aldiv@quotient^(0+128),w
  8794  0A0D  00A0               	movwf	?___aldiv^(0+128)
  8795  0A0E  0008               	return
  8796  0A0F                     __end_of___aldiv:	
  8797                           
  8798                           	psect	text24
  8799  0911                     __ptext24:	
  8800 ;; *************** function ___flge *****************
  8801 ;; Defined at:
  8802 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
  8803 ;; Parameters:    Size  Location     Type
  8804 ;;  ff1             4    0[BANK1 ] long 
  8805 ;;  ff2             4    4[BANK1 ] long 
  8806 ;; Auto vars:     Size  Location     Type
  8807 ;;		None
  8808 ;; Return value:  Size  Location     Type
  8809 ;;		None               void
  8810 ;; Registers used:
  8811 ;;		wreg, status,2, status,0
  8812 ;; Tracked objects:
  8813 ;;		On entry : 0/0
  8814 ;;		On exit  : 0/0
  8815 ;;		Unchanged: 0/0
  8816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8817 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  8818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8819 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8820 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  8821 ;;Total ram usage:       12 bytes
  8822 ;; Hardware stack levels used:    1
  8823 ;; Hardware stack levels required when called:    6
  8824 ;; This function calls:
  8825 ;;		Nothing
  8826 ;; This function is called by:
  8827 ;;		_main
  8828 ;; This function uses a non-reentrant model
  8829 ;;
  8830                           
  8831                           
  8832                           ;psect for function ___flge
  8833  0911                     ___flge:	
  8834                           
  8835                           ;incstack = 0
  8836                           ; Regs used in ___flge: [wreg+status,2+status,0]
  8837  0911  3000               	movlw	0
  8838  0912  0021               	movlb	1	; select bank1
  8839  0913  0520               	andwf	___flge@ff1^(0+128),w
  8840  0914  00A8               	movwf	??___flge^(0+128)
  8841  0915  3000               	movlw	0
  8842  0916  0521               	andwf	(___flge@ff1+1)^(0+128),w
  8843  0917  00A9               	movwf	(??___flge^(0+128)+1)
  8844  0918  3080               	movlw	128
  8845  0919  0522               	andwf	(___flge@ff1+2)^(0+128),w
  8846  091A  00AA               	movwf	(??___flge^(0+128)+2)
  8847  091B  307F               	movlw	127
  8848  091C  0523               	andwf	(___flge@ff1+3)^(0+128),w
  8849  091D  00AB               	movwf	(??___flge^(0+128)+3)
  8850  091E  082B               	movf	(??___flge+3)^(0+128),w
  8851  091F  042A               	iorwf	(??___flge+2)^(0+128),w
  8852  0920  0429               	iorwf	(??___flge+1)^(0+128),w
  8853  0921  0428               	iorwf	??___flge^(0+128),w
  8854  0922  1D03               	skipz
  8855  0923  292C               	goto	l771
  8856  0924  3000               	movlw	0
  8857  0925  00A3               	movwf	(___flge@ff1+3)^(0+128)
  8858  0926  3000               	movlw	0
  8859  0927  00A2               	movwf	(___flge@ff1+2)^(0+128)
  8860  0928  3000               	movlw	0
  8861  0929  00A1               	movwf	(___flge@ff1+1)^(0+128)
  8862  092A  3000               	movlw	0
  8863  092B  00A0               	movwf	___flge@ff1^(0+128)
  8864  092C                     l771:	
  8865  092C  3000               	movlw	0
  8866  092D  0524               	andwf	___flge@ff2^(0+128),w
  8867  092E  00A8               	movwf	??___flge^(0+128)
  8868  092F  3000               	movlw	0
  8869  0930  0525               	andwf	(___flge@ff2+1)^(0+128),w
  8870  0931  00A9               	movwf	(??___flge^(0+128)+1)
  8871  0932  3080               	movlw	128
  8872  0933  0526               	andwf	(___flge@ff2+2)^(0+128),w
  8873  0934  00AA               	movwf	(??___flge^(0+128)+2)
  8874  0935  307F               	movlw	127
  8875  0936  0527               	andwf	(___flge@ff2+3)^(0+128),w
  8876  0937  00AB               	movwf	(??___flge^(0+128)+3)
  8877  0938  082B               	movf	(??___flge+3)^(0+128),w
  8878  0939  042A               	iorwf	(??___flge+2)^(0+128),w
  8879  093A  0429               	iorwf	(??___flge+1)^(0+128),w
  8880  093B  0428               	iorwf	??___flge^(0+128),w
  8881  093C  1D03               	skipz
  8882  093D  2946               	goto	l3884
  8883  093E  3000               	movlw	0
  8884  093F  00A7               	movwf	(___flge@ff2+3)^(0+128)
  8885  0940  3000               	movlw	0
  8886  0941  00A6               	movwf	(___flge@ff2+2)^(0+128)
  8887  0942  3000               	movlw	0
  8888  0943  00A5               	movwf	(___flge@ff2+1)^(0+128)
  8889  0944  3000               	movlw	0
  8890  0945  00A4               	movwf	___flge@ff2^(0+128)
  8891  0946                     l3884:	
  8892  0946  1FA3               	btfss	(___flge@ff1+3)^(0+128),7
  8893  0947  2960               	goto	l3888
  8894  0948  3000               	movlw	0
  8895  0949  00A8               	movwf	??___flge^(0+128)
  8896  094A  3000               	movlw	0
  8897  094B  00A9               	movwf	(??___flge^(0+128)+1)
  8898  094C  3000               	movlw	0
  8899  094D  00AA               	movwf	(??___flge^(0+128)+2)
  8900  094E  3080               	movlw	128
  8901  094F  00AB               	movwf	(??___flge^(0+128)+3)
  8902  0950  0820               	movf	___flge@ff1^(0+128),w
  8903  0951  02A8               	subwf	??___flge^(0+128),f
  8904  0952  0821               	movf	(___flge@ff1+1)^(0+128),w
  8905  0953  3BA9               	subwfb	(??___flge^(0+128)+1),f
  8906  0954  0822               	movf	(___flge@ff1+2)^(0+128),w
  8907  0955  3BAA               	subwfb	(??___flge^(0+128)+2),f
  8908  0956  0823               	movf	(___flge@ff1+3)^(0+128),w
  8909  0957  3BAB               	subwfb	(??___flge^(0+128)+3),f
  8910  0958  082B               	movf	(??___flge+3)^(0+128),w
  8911  0959  00A3               	movwf	(___flge@ff1+3)^(0+128)
  8912  095A  082A               	movf	(??___flge+2)^(0+128),w
  8913  095B  00A2               	movwf	(___flge@ff1+2)^(0+128)
  8914  095C  0829               	movf	(??___flge+1)^(0+128),w
  8915  095D  00A1               	movwf	(___flge@ff1+1)^(0+128)
  8916  095E  0828               	movf	??___flge^(0+128),w
  8917  095F  00A0               	movwf	___flge@ff1^(0+128)
  8918  0960                     l3888:	
  8919  0960  1FA7               	btfss	(___flge@ff2+3)^(0+128),7
  8920  0961  297A               	goto	l774
  8921  0962  3000               	movlw	0
  8922  0963  00A8               	movwf	??___flge^(0+128)
  8923  0964  3000               	movlw	0
  8924  0965  00A9               	movwf	(??___flge^(0+128)+1)
  8925  0966  3000               	movlw	0
  8926  0967  00AA               	movwf	(??___flge^(0+128)+2)
  8927  0968  3080               	movlw	128
  8928  0969  00AB               	movwf	(??___flge^(0+128)+3)
  8929  096A  0824               	movf	___flge@ff2^(0+128),w
  8930  096B  02A8               	subwf	??___flge^(0+128),f
  8931  096C  0825               	movf	(___flge@ff2+1)^(0+128),w
  8932  096D  3BA9               	subwfb	(??___flge^(0+128)+1),f
  8933  096E  0826               	movf	(___flge@ff2+2)^(0+128),w
  8934  096F  3BAA               	subwfb	(??___flge^(0+128)+2),f
  8935  0970  0827               	movf	(___flge@ff2+3)^(0+128),w
  8936  0971  3BAB               	subwfb	(??___flge^(0+128)+3),f
  8937  0972  082B               	movf	(??___flge+3)^(0+128),w
  8938  0973  00A7               	movwf	(___flge@ff2+3)^(0+128)
  8939  0974  082A               	movf	(??___flge+2)^(0+128),w
  8940  0975  00A6               	movwf	(___flge@ff2+2)^(0+128)
  8941  0976  0829               	movf	(??___flge+1)^(0+128),w
  8942  0977  00A5               	movwf	(___flge@ff2+1)^(0+128)
  8943  0978  0828               	movf	??___flge^(0+128),w
  8944  0979  00A4               	movwf	___flge@ff2^(0+128)
  8945  097A                     l774:	
  8946  097A  3080               	movlw	128
  8947  097B  06A3               	xorwf	(___flge@ff1+3)^(0+128),f
  8948  097C  3080               	movlw	128
  8949  097D  06A7               	xorwf	(___flge@ff2+3)^(0+128),f
  8950  097E  0827               	movf	(___flge@ff2+3)^(0+128),w
  8951  097F  0223               	subwf	(___flge@ff1+3)^(0+128),w
  8952  0980  1D03               	skipz
  8953  0981  0008               	return
  8954  0982  0826               	movf	(___flge@ff2+2)^(0+128),w
  8955  0983  0222               	subwf	(___flge@ff1+2)^(0+128),w
  8956  0984  1D03               	skipz
  8957  0985  0008               	return
  8958  0986  0825               	movf	(___flge@ff2+1)^(0+128),w
  8959  0987  0221               	subwf	(___flge@ff1+1)^(0+128),w
  8960  0988  1D03               	skipz
  8961  0989  0008               	return
  8962  098A  0824               	movf	___flge@ff2^(0+128),w
  8963  098B  0220               	subwf	___flge@ff1^(0+128),w
  8964  098C  0008               	return
  8965  098D                     __end_of___flge:	
  8966                           
  8967                           	psect	text25
  8968  14D6                     __ptext25:	
  8969 ;; *************** function _SYSTEM_Initialize *****************
  8970 ;; Defined at:
  8971 ;;		line 4 in file "mcc_generated_files/mcc.c"
  8972 ;; Parameters:    Size  Location     Type
  8973 ;;		None
  8974 ;; Auto vars:     Size  Location     Type
  8975 ;;		None
  8976 ;; Return value:  Size  Location     Type
  8977 ;;                  1    wreg      void 
  8978 ;; Registers used:
  8979 ;;		wreg, status,2, status,0, pclath, cstack
  8980 ;; Tracked objects:
  8981 ;;		On entry : 0/0
  8982 ;;		On exit  : 0/0
  8983 ;;		Unchanged: 0/0
  8984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8988 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8989 ;;Total ram usage:        0 bytes
  8990 ;; Hardware stack levels used:    1
  8991 ;; Hardware stack levels required when called:    8
  8992 ;; This function calls:
  8993 ;;		_ADC_Initialize
  8994 ;;		_EUSART_Initialize
  8995 ;;		_OSCILLATOR_Initialize
  8996 ;;		_PIN_MANAGER_Initialize
  8997 ;;		_TMR0_Initialize
  8998 ;; This function is called by:
  8999 ;;		_main
  9000 ;; This function uses a non-reentrant model
  9001 ;;
  9002                           
  9003                           
  9004                           ;psect for function _SYSTEM_Initialize
  9005  14D6                     _SYSTEM_Initialize:	
  9006                           
  9007                           ;mcc_generated_files/mcc.c: 6:     PIN_MANAGER_Initialize();
  9008                           
  9009                           ;incstack = 0
  9010                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9011  14D6  3196  2684  3194   	fcall	_PIN_MANAGER_Initialize
  9012                           
  9013                           ;mcc_generated_files/mcc.c: 7:     OSCILLATOR_Initialize();
  9014  14D9  3194  2466  3194   	fcall	_OSCILLATOR_Initialize
  9015                           
  9016                           ;mcc_generated_files/mcc.c: 8:     ADC_Initialize();
  9017  14DC  3194  2474  3194   	fcall	_ADC_Initialize
  9018                           
  9019                           ;mcc_generated_files/mcc.c: 9:     TMR0_Initialize();
  9020  14DF  3195  251F  3194   	fcall	_TMR0_Initialize
  9021                           
  9022                           ;mcc_generated_files/mcc.c: 10:     EUSART_Initialize();
  9023  14E2  3196  2604         	fcall	_EUSART_Initialize
  9024  14E4  0008               	return
  9025  14E5                     __end_of_SYSTEM_Initialize:	
  9026                           
  9027                           	psect	text26
  9028  151F                     __ptext26:	
  9029 ;; *************** function _TMR0_Initialize *****************
  9030 ;; Defined at:
  9031 ;;		line 18 in file "mcc_generated_files/tmr0.c"
  9032 ;; Parameters:    Size  Location     Type
  9033 ;;		None
  9034 ;; Auto vars:     Size  Location     Type
  9035 ;;		None
  9036 ;; Return value:  Size  Location     Type
  9037 ;;                  1    wreg      void 
  9038 ;; Registers used:
  9039 ;;		wreg, status,2, status,0, pclath, cstack
  9040 ;; Tracked objects:
  9041 ;;		On entry : 0/0
  9042 ;;		On exit  : 0/0
  9043 ;;		Unchanged: 0/0
  9044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9047 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9048 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9049 ;;Total ram usage:        1 bytes
  9050 ;; Hardware stack levels used:    1
  9051 ;; Hardware stack levels required when called:    7
  9052 ;; This function calls:
  9053 ;;		_TMR0_SetInterruptHandler
  9054 ;; This function is called by:
  9055 ;;		_SYSTEM_Initialize
  9056 ;; This function uses a non-reentrant model
  9057 ;;
  9058                           
  9059                           
  9060                           ;psect for function _TMR0_Initialize
  9061  151F                     _TMR0_Initialize:	
  9062                           
  9063                           ;mcc_generated_files/tmr0.c: 23:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD4 
      +                          & 0x3F));
  9064                           
  9065                           ;incstack = 0
  9066                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9067  151F  0021               	movlb	1	; select bank1
  9068  1520  0815               	movf	21,w	;volatile
  9069  1521  39C0               	andlw	192
  9070  1522  3814               	iorlw	20
  9071  1523  0095               	movwf	21	;volatile
  9072                           
  9073                           ;mcc_generated_files/tmr0.c: 26:     TMR0 = 0x83;
  9074  1524  3083               	movlw	131
  9075  1525  0020               	movlb	0	; select bank0
  9076  1526  0095               	movwf	21	;volatile
  9077                           
  9078                           ;mcc_generated_files/tmr0.c: 29:     timer0ReloadVal= 131;
  9079  1527  3083               	movlw	131
  9080  1528  0021               	movlb	1	; select bank1
  9081  1529  00A2               	movwf	??_TMR0_Initialize^(0+128)
  9082  152A  0822               	movf	??_TMR0_Initialize^(0+128),w
  9083  152B  0022               	movlb	2	; select bank2
  9084  152C  00E7               	movwf	_timer0ReloadVal^(0+256)	;volatile
  9085                           
  9086                           ;mcc_generated_files/tmr0.c: 32:     INTCONbits.TMR0IF = 0;
  9087  152D  110B               	bcf	11,2	;volatile
  9088                           
  9089                           ;mcc_generated_files/tmr0.c: 35:     INTCONbits.TMR0IE = 1;
  9090  152E  168B               	bsf	11,5	;volatile
  9091                           
  9092                           ;mcc_generated_files/tmr0.c: 38:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  9093  152F  3003               	movlw	low _TMR0_DefaultInterruptHandler
  9094  1530  0021               	movlb	1	; select bank1
  9095  1531  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler^(0+128)
  9096  1532  3000               	movlw	high _TMR0_DefaultInterruptHandler
  9097  1533  00A1               	movwf	(TMR0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  9098  1534  3194  24A8         	fcall	_TMR0_SetInterruptHandler
  9099  1536  0008               	return
  9100  1537                     __end_of_TMR0_Initialize:	
  9101                           
  9102                           	psect	text27
  9103  14A8                     __ptext27:	
  9104 ;; *************** function _TMR0_SetInterruptHandler *****************
  9105 ;; Defined at:
  9106 ;;		line 79 in file "mcc_generated_files/tmr0.c"
  9107 ;; Parameters:    Size  Location     Type
  9108 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  9109 ;;		 -> timerISR(1), TMR0_DefaultInterruptHandler(1), 
  9110 ;; Auto vars:     Size  Location     Type
  9111 ;;		None
  9112 ;; Return value:  Size  Location     Type
  9113 ;;                  1    wreg      void 
  9114 ;; Registers used:
  9115 ;;		wreg
  9116 ;; Tracked objects:
  9117 ;;		On entry : 0/0
  9118 ;;		On exit  : 0/0
  9119 ;;		Unchanged: 0/0
  9120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9121 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9124 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9125 ;;Total ram usage:        2 bytes
  9126 ;; Hardware stack levels used:    1
  9127 ;; Hardware stack levels required when called:    6
  9128 ;; This function calls:
  9129 ;;		Nothing
  9130 ;; This function is called by:
  9131 ;;		_TMR0_Initialize
  9132 ;;		_main
  9133 ;; This function uses a non-reentrant model
  9134 ;;
  9135                           
  9136                           
  9137                           ;psect for function _TMR0_SetInterruptHandler
  9138  14A8                     _TMR0_SetInterruptHandler:	
  9139                           
  9140                           ;mcc_generated_files/tmr0.c: 80:     TMR0_InterruptHandler = InterruptHandler;
  9141                           
  9142                           ;incstack = 0
  9143                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  9144  14A8  0021               	movlb	1	; select bank1
  9145  14A9  0821               	movf	(TMR0_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  9146  14AA  0022               	movlb	2	; select bank2
  9147  14AB  00DE               	movwf	(_TMR0_InterruptHandler+1)^(0+256)
  9148  14AC  0021               	movlb	1	; select bank1
  9149  14AD  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler^(0+128),w
  9150  14AE  0022               	movlb	2	; select bank2
  9151  14AF  00DD               	movwf	_TMR0_InterruptHandler^(0+256)
  9152  14B0  0008               	return
  9153  14B1                     __end_of_TMR0_SetInterruptHandler:	
  9154                           
  9155                           	psect	text28
  9156  1684                     __ptext28:	
  9157 ;; *************** function _PIN_MANAGER_Initialize *****************
  9158 ;; Defined at:
  9159 ;;		line 6 in file "mcc_generated_files/pin_manager.c"
  9160 ;; Parameters:    Size  Location     Type
  9161 ;;		None
  9162 ;; Auto vars:     Size  Location     Type
  9163 ;;		None
  9164 ;; Return value:  Size  Location     Type
  9165 ;;                  1    wreg      void 
  9166 ;; Registers used:
  9167 ;;		wreg, status,2, status,0, pclath, cstack
  9168 ;; Tracked objects:
  9169 ;;		On entry : 0/0
  9170 ;;		On exit  : 0/0
  9171 ;;		Unchanged: 0/0
  9172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9177 ;;Total ram usage:        0 bytes
  9178 ;; Hardware stack levels used:    1
  9179 ;; Hardware stack levels required when called:    7
  9180 ;; This function calls:
  9181 ;;		_IOCCF7_SetInterruptHandler
  9182 ;; This function is called by:
  9183 ;;		_SYSTEM_Initialize
  9184 ;; This function uses a non-reentrant model
  9185 ;;
  9186                           
  9187                           
  9188                           ;psect for function _PIN_MANAGER_Initialize
  9189  1684                     _PIN_MANAGER_Initialize:	
  9190                           
  9191                           ;mcc_generated_files/pin_manager.c: 11:     LATA = 0x00;
  9192                           
  9193                           ;incstack = 0
  9194                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9195  1684  0022               	movlb	2	; select bank2
  9196  1685  018C               	clrf	12	;volatile
  9197                           
  9198                           ;mcc_generated_files/pin_manager.c: 12:     LATB = 0x00;
  9199  1686  018D               	clrf	13	;volatile
  9200                           
  9201                           ;mcc_generated_files/pin_manager.c: 13:     LATC = 0x00;
  9202  1687  018E               	clrf	14	;volatile
  9203                           
  9204                           ;mcc_generated_files/pin_manager.c: 18:     TRISA = 0x37;
  9205  1688  3037               	movlw	55
  9206  1689  0021               	movlb	1	; select bank1
  9207  168A  008C               	movwf	12	;volatile
  9208                           
  9209                           ;mcc_generated_files/pin_manager.c: 19:     TRISB = 0x70;
  9210  168B  3070               	movlw	112
  9211  168C  008D               	movwf	13	;volatile
  9212                           
  9213                           ;mcc_generated_files/pin_manager.c: 20:     TRISC = 0xFF;
  9214  168D  30FF               	movlw	255
  9215  168E  008E               	movwf	14	;volatile
  9216                           
  9217                           ;mcc_generated_files/pin_manager.c: 25:     ANSELC = 0x4F;
  9218  168F  304F               	movlw	79
  9219  1690  0023               	movlb	3	; select bank3
  9220  1691  008E               	movwf	14	;volatile
  9221                           
  9222                           ;mcc_generated_files/pin_manager.c: 26:     ANSELB = 0x70;
  9223  1692  3070               	movlw	112
  9224  1693  008D               	movwf	13	;volatile
  9225                           
  9226                           ;mcc_generated_files/pin_manager.c: 27:     ANSELA = 0x17;
  9227  1694  3017               	movlw	23
  9228  1695  008C               	movwf	12	;volatile
  9229                           
  9230                           ;mcc_generated_files/pin_manager.c: 32:     WPUB = 0x00;
  9231  1696  0024               	movlb	4	; select bank4
  9232  1697  018D               	clrf	13	;volatile
  9233                           
  9234                           ;mcc_generated_files/pin_manager.c: 33:     WPUA = 0x00;
  9235  1698  018C               	clrf	12	;volatile
  9236                           
  9237                           ;mcc_generated_files/pin_manager.c: 34:     WPUC = 0x00;
  9238  1699  018E               	clrf	14	;volatile
  9239                           
  9240                           ;mcc_generated_files/pin_manager.c: 35:     OPTION_REGbits.nWPUEN = 1;
  9241  169A  0021               	movlb	1	; select bank1
  9242  169B  1795               	bsf	21,7	;volatile
  9243                           
  9244                           ;mcc_generated_files/pin_manager.c: 40:     ODCONA = 0x00;
  9245  169C  0025               	movlb	5	; select bank5
  9246  169D  018C               	clrf	12	;volatile
  9247                           
  9248                           ;mcc_generated_files/pin_manager.c: 41:     ODCONB = 0x00;
  9249  169E  018D               	clrf	13	;volatile
  9250                           
  9251                           ;mcc_generated_files/pin_manager.c: 42:     ODCONC = 0x00;
  9252  169F  018E               	clrf	14	;volatile
  9253                           
  9254                           ;mcc_generated_files/pin_manager.c: 47:     SLRCONA = 0x37;
  9255  16A0  3037               	movlw	55
  9256  16A1  0026               	movlb	6	; select bank6
  9257  16A2  008C               	movwf	12	;volatile
  9258                           
  9259                           ;mcc_generated_files/pin_manager.c: 48:     SLRCONB = 0xF0;
  9260  16A3  30F0               	movlw	240
  9261  16A4  008D               	movwf	13	;volatile
  9262                           
  9263                           ;mcc_generated_files/pin_manager.c: 49:     SLRCONC = 0xFF;
  9264  16A5  30FF               	movlw	255
  9265  16A6  008E               	movwf	14	;volatile
  9266                           
  9267                           ;mcc_generated_files/pin_manager.c: 56:     IOCCFbits.IOCCF7 = 0;
  9268  16A7  0027               	movlb	7	; select bank7
  9269  16A8  1399               	bcf	25,7	;volatile
  9270                           
  9271                           ;mcc_generated_files/pin_manager.c: 58:     IOCCNbits.IOCCN7 = 0;
  9272  16A9  1398               	bcf	24,7	;volatile
  9273                           
  9274                           ;mcc_generated_files/pin_manager.c: 60:     IOCCPbits.IOCCP7 = 1;
  9275  16AA  1797               	bsf	23,7	;volatile
  9276                           
  9277                           ;mcc_generated_files/pin_manager.c: 65:     IOCCF7_SetInterruptHandler(IOCCF7_DefaultInt
      +                          erruptHandler);
  9278  16AB  3002               	movlw	low _IOCCF7_DefaultInterruptHandler
  9279  16AC  0021               	movlb	1	; select bank1
  9280  16AD  00A0               	movwf	IOCCF7_SetInterruptHandler@InterruptHandler^(0+128)
  9281  16AE  3000               	movlw	high _IOCCF7_DefaultInterruptHandler
  9282  16AF  00A1               	movwf	(IOCCF7_SetInterruptHandler@InterruptHandler^(0+128)+1)
  9283  16B0  3194  249F         	fcall	_IOCCF7_SetInterruptHandler
  9284                           
  9285                           ;mcc_generated_files/pin_manager.c: 68:     INTCONbits.IOCIE = 1;
  9286  16B2  158B               	bsf	11,3	;volatile
  9287                           
  9288                           ;mcc_generated_files/pin_manager.c: 71:     RB7PPS = 0x12;
  9289  16B3  3012               	movlw	18
  9290  16B4  003D               	movlb	29	; select bank29
  9291  16B5  009F               	movwf	31	;volatile
  9292  16B6  0008               	return
  9293  16B7                     __end_of_PIN_MANAGER_Initialize:	
  9294                           
  9295                           	psect	text29
  9296  149F                     __ptext29:	
  9297 ;; *************** function _IOCCF7_SetInterruptHandler *****************
  9298 ;; Defined at:
  9299 ;;		line 101 in file "mcc_generated_files/pin_manager.c"
  9300 ;; Parameters:    Size  Location     Type
  9301 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  9302 ;;		 -> speedCalc(1), IOCCF7_DefaultInterruptHandler(1), 
  9303 ;; Auto vars:     Size  Location     Type
  9304 ;;		None
  9305 ;; Return value:  Size  Location     Type
  9306 ;;                  1    wreg      void 
  9307 ;; Registers used:
  9308 ;;		wreg
  9309 ;; Tracked objects:
  9310 ;;		On entry : 0/0
  9311 ;;		On exit  : 0/0
  9312 ;;		Unchanged: 0/0
  9313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9314 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9317 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9318 ;;Total ram usage:        2 bytes
  9319 ;; Hardware stack levels used:    1
  9320 ;; Hardware stack levels required when called:    6
  9321 ;; This function calls:
  9322 ;;		Nothing
  9323 ;; This function is called by:
  9324 ;;		_PIN_MANAGER_Initialize
  9325 ;;		_main
  9326 ;; This function uses a non-reentrant model
  9327 ;;
  9328                           
  9329                           
  9330                           ;psect for function _IOCCF7_SetInterruptHandler
  9331  149F                     _IOCCF7_SetInterruptHandler:	
  9332                           
  9333                           ;mcc_generated_files/pin_manager.c: 102:     IOCCF7_InterruptHandler = InterruptHandler;
  9334                           
  9335                           ;incstack = 0
  9336                           ; Regs used in _IOCCF7_SetInterruptHandler: [wreg]
  9337  149F  0021               	movlb	1	; select bank1
  9338  14A0  0821               	movf	(IOCCF7_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  9339  14A1  0022               	movlb	2	; select bank2
  9340  14A2  00E0               	movwf	(_IOCCF7_InterruptHandler+1)^(0+256)
  9341  14A3  0021               	movlb	1	; select bank1
  9342  14A4  0820               	movf	IOCCF7_SetInterruptHandler@InterruptHandler^(0+128),w
  9343  14A5  0022               	movlb	2	; select bank2
  9344  14A6  00DF               	movwf	_IOCCF7_InterruptHandler^(0+256)
  9345  14A7  0008               	return
  9346  14A8                     __end_of_IOCCF7_SetInterruptHandler:	
  9347                           
  9348                           	psect	text30
  9349  1466                     __ptext30:	
  9350 ;; *************** function _OSCILLATOR_Initialize *****************
  9351 ;; Defined at:
  9352 ;;		line 13 in file "mcc_generated_files/mcc.c"
  9353 ;; Parameters:    Size  Location     Type
  9354 ;;		None
  9355 ;; Auto vars:     Size  Location     Type
  9356 ;;		None
  9357 ;; Return value:  Size  Location     Type
  9358 ;;                  1    wreg      void 
  9359 ;; Registers used:
  9360 ;;		wreg, status,2
  9361 ;; Tracked objects:
  9362 ;;		On entry : 0/0
  9363 ;;		On exit  : 0/0
  9364 ;;		Unchanged: 0/0
  9365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9370 ;;Total ram usage:        0 bytes
  9371 ;; Hardware stack levels used:    1
  9372 ;; Hardware stack levels required when called:    6
  9373 ;; This function calls:
  9374 ;;		Nothing
  9375 ;; This function is called by:
  9376 ;;		_SYSTEM_Initialize
  9377 ;; This function uses a non-reentrant model
  9378 ;;
  9379                           
  9380                           
  9381                           ;psect for function _OSCILLATOR_Initialize
  9382  1466                     _OSCILLATOR_Initialize:	
  9383                           
  9384                           ;mcc_generated_files/mcc.c: 16:     OSCCON = 0x7A;
  9385                           
  9386                           ;incstack = 0
  9387                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  9388  1466  307A               	movlw	122
  9389  1467  0021               	movlb	1	; select bank1
  9390  1468  0099               	movwf	25	;volatile
  9391                           
  9392                           ;mcc_generated_files/mcc.c: 18:     OSCTUNE = 0x00;
  9393  1469  0198               	clrf	24	;volatile
  9394                           
  9395                           ;mcc_generated_files/mcc.c: 20:     BORCON = 0x00;
  9396  146A  0022               	movlb	2	; select bank2
  9397  146B  0196               	clrf	22	;volatile
  9398  146C  0008               	return
  9399  146D                     __end_of_OSCILLATOR_Initialize:	
  9400                           
  9401                           	psect	text31
  9402  1604                     __ptext31:	
  9403 ;; *************** function _EUSART_Initialize *****************
  9404 ;; Defined at:
  9405 ;;		line 65 in file "mcc_generated_files/eusart.c"
  9406 ;; Parameters:    Size  Location     Type
  9407 ;;		None
  9408 ;; Auto vars:     Size  Location     Type
  9409 ;;		None
  9410 ;; Return value:  Size  Location     Type
  9411 ;;                  1    wreg      void 
  9412 ;; Registers used:
  9413 ;;		wreg, status,2, status,0, pclath, cstack
  9414 ;; Tracked objects:
  9415 ;;		On entry : 0/0
  9416 ;;		On exit  : 0/0
  9417 ;;		Unchanged: 0/0
  9418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9423 ;;Total ram usage:        0 bytes
  9424 ;; Hardware stack levels used:    1
  9425 ;; Hardware stack levels required when called:    7
  9426 ;; This function calls:
  9427 ;;		_EUSART_SetErrorHandler
  9428 ;;		_EUSART_SetFramingErrorHandler
  9429 ;;		_EUSART_SetOverrunErrorHandler
  9430 ;; This function is called by:
  9431 ;;		_SYSTEM_Initialize
  9432 ;; This function uses a non-reentrant model
  9433 ;;
  9434                           
  9435                           
  9436                           ;psect for function _EUSART_Initialize
  9437  1604                     _EUSART_Initialize:	
  9438                           
  9439                           ;mcc_generated_files/eusart.c: 70:     BAUD1CON = 0x08;
  9440                           
  9441                           ;incstack = 0
  9442                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9443  1604  3008               	movlw	8
  9444  1605  0023               	movlb	3	; select bank3
  9445  1606  009F               	movwf	31	;volatile
  9446                           
  9447                           ;mcc_generated_files/eusart.c: 73:     RC1STA = 0x80;
  9448  1607  3080               	movlw	128
  9449  1608  009D               	movwf	29	;volatile
  9450                           
  9451                           ;mcc_generated_files/eusart.c: 76:     TX1STA = 0x24;
  9452  1609  3024               	movlw	36
  9453  160A  009E               	movwf	30	;volatile
  9454                           
  9455                           ;mcc_generated_files/eusart.c: 79:     SPBRGL = 0xA0;
  9456  160B  30A0               	movlw	160
  9457  160C  009B               	movwf	27	;volatile
  9458                           
  9459                           ;mcc_generated_files/eusart.c: 82:     SPBRGH = 0x01;
  9460  160D  3001               	movlw	1
  9461  160E  009C               	movwf	28	;volatile
  9462                           
  9463                           ;mcc_generated_files/eusart.c: 85:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  9464  160F  3000               	movlw	0
  9465  1610  0021               	movlb	1	; select bank1
  9466  1611  00A0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128)
  9467  1612  3000               	movlw	0
  9468  1613  00A1               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler^(0+128)+1)
  9469  1614  3194  248D  3196   	fcall	_EUSART_SetFramingErrorHandler
  9470                           
  9471                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  9472  1617  3000               	movlw	0
  9473  1618  0021               	movlb	1	; select bank1
  9474  1619  00A0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)
  9475  161A  3000               	movlw	0
  9476  161B  00A1               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)+1)
  9477  161C  3194  2496  3196   	fcall	_EUSART_SetOverrunErrorHandler
  9478                           
  9479                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  9480  161F  3000               	movlw	0
  9481  1620  0021               	movlb	1	; select bank1
  9482  1621  00A0               	movwf	EUSART_SetErrorHandler@interruptHandler^(0+128)
  9483  1622  3000               	movlw	0
  9484  1623  00A1               	movwf	(EUSART_SetErrorHandler@interruptHandler^(0+128)+1)
  9485  1624  3194  2484         	fcall	_EUSART_SetErrorHandler
  9486                           
  9487                           ;mcc_generated_files/eusart.c: 89:     eusartRxLastError.status = 0;
  9488  1626  0020               	movlb	0	; select bank0
  9489  1627  01E8               	clrf	_eusartRxLastError	;volatile
  9490  1628  0008               	return
  9491  1629                     __end_of_EUSART_Initialize:	
  9492                           
  9493                           	psect	text32
  9494  1496                     __ptext32:	
  9495 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  9496 ;; Defined at:
  9497 ;;		line 175 in file "mcc_generated_files/eusart.c"
  9498 ;; Parameters:    Size  Location     Type
  9499 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  9500 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  9501 ;; Auto vars:     Size  Location     Type
  9502 ;;		None
  9503 ;; Return value:  Size  Location     Type
  9504 ;;                  1    wreg      void 
  9505 ;; Registers used:
  9506 ;;		wreg
  9507 ;; Tracked objects:
  9508 ;;		On entry : 0/0
  9509 ;;		On exit  : 0/0
  9510 ;;		Unchanged: 0/0
  9511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9512 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9515 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9516 ;;Total ram usage:        2 bytes
  9517 ;; Hardware stack levels used:    1
  9518 ;; Hardware stack levels required when called:    6
  9519 ;; This function calls:
  9520 ;;		Nothing
  9521 ;; This function is called by:
  9522 ;;		_EUSART_Initialize
  9523 ;; This function uses a non-reentrant model
  9524 ;;
  9525                           
  9526                           
  9527                           ;psect for function _EUSART_SetOverrunErrorHandler
  9528  1496                     _EUSART_SetOverrunErrorHandler:	
  9529                           
  9530                           ;mcc_generated_files/eusart.c: 176:     EUSART_OverrunErrorHandler = interruptHandler;
  9531                           
  9532                           ;incstack = 0
  9533                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  9534  1496  0021               	movlb	1	; select bank1
  9535  1497  0821               	movf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^(0+128),w
  9536  1498  0022               	movlb	2	; select bank2
  9537  1499  00E4               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+256)
  9538  149A  0021               	movlb	1	; select bank1
  9539  149B  0820               	movf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128),w
  9540  149C  0022               	movlb	2	; select bank2
  9541  149D  00E3               	movwf	_EUSART_OverrunErrorHandler^(0+256)
  9542  149E  0008               	return
  9543  149F                     __end_of_EUSART_SetOverrunErrorHandler:	
  9544                           
  9545                           	psect	text33
  9546  148D                     __ptext33:	
  9547 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  9548 ;; Defined at:
  9549 ;;		line 171 in file "mcc_generated_files/eusart.c"
  9550 ;; Parameters:    Size  Location     Type
  9551 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  9552 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  9553 ;; Auto vars:     Size  Location     Type
  9554 ;;		None
  9555 ;; Return value:  Size  Location     Type
  9556 ;;                  1    wreg      void 
  9557 ;; Registers used:
  9558 ;;		wreg
  9559 ;; Tracked objects:
  9560 ;;		On entry : 0/0
  9561 ;;		On exit  : 0/0
  9562 ;;		Unchanged: 0/0
  9563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9564 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9567 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9568 ;;Total ram usage:        2 bytes
  9569 ;; Hardware stack levels used:    1
  9570 ;; Hardware stack levels required when called:    6
  9571 ;; This function calls:
  9572 ;;		Nothing
  9573 ;; This function is called by:
  9574 ;;		_EUSART_Initialize
  9575 ;; This function uses a non-reentrant model
  9576 ;;
  9577                           
  9578                           
  9579                           ;psect for function _EUSART_SetFramingErrorHandler
  9580  148D                     _EUSART_SetFramingErrorHandler:	
  9581                           
  9582                           ;mcc_generated_files/eusart.c: 172:     EUSART_FramingErrorHandler = interruptHandler;
  9583                           
  9584                           ;incstack = 0
  9585                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  9586  148D  0021               	movlb	1	; select bank1
  9587  148E  0821               	movf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^(0+128),w
  9588  148F  0022               	movlb	2	; select bank2
  9589  1490  00E6               	movwf	(_EUSART_FramingErrorHandler+1)^(0+256)
  9590  1491  0021               	movlb	1	; select bank1
  9591  1492  0820               	movf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128),w
  9592  1493  0022               	movlb	2	; select bank2
  9593  1494  00E5               	movwf	_EUSART_FramingErrorHandler^(0+256)
  9594  1495  0008               	return
  9595  1496                     __end_of_EUSART_SetFramingErrorHandler:	
  9596                           
  9597                           	psect	text34
  9598  1484                     __ptext34:	
  9599 ;; *************** function _EUSART_SetErrorHandler *****************
  9600 ;; Defined at:
  9601 ;;		line 179 in file "mcc_generated_files/eusart.c"
  9602 ;; Parameters:    Size  Location     Type
  9603 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  9604 ;;		 -> EUSART_DefaultErrorHandler(1), 
  9605 ;; Auto vars:     Size  Location     Type
  9606 ;;		None
  9607 ;; Return value:  Size  Location     Type
  9608 ;;                  1    wreg      void 
  9609 ;; Registers used:
  9610 ;;		wreg
  9611 ;; Tracked objects:
  9612 ;;		On entry : 0/0
  9613 ;;		On exit  : 0/0
  9614 ;;		Unchanged: 0/0
  9615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9616 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9619 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9620 ;;Total ram usage:        2 bytes
  9621 ;; Hardware stack levels used:    1
  9622 ;; Hardware stack levels required when called:    6
  9623 ;; This function calls:
  9624 ;;		Nothing
  9625 ;; This function is called by:
  9626 ;;		_EUSART_Initialize
  9627 ;; This function uses a non-reentrant model
  9628 ;;
  9629                           
  9630                           
  9631                           ;psect for function _EUSART_SetErrorHandler
  9632  1484                     _EUSART_SetErrorHandler:	
  9633                           
  9634                           ;mcc_generated_files/eusart.c: 180:     EUSART_ErrorHandler = interruptHandler;
  9635                           
  9636                           ;incstack = 0
  9637                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  9638  1484  0021               	movlb	1	; select bank1
  9639  1485  0821               	movf	(EUSART_SetErrorHandler@interruptHandler+1)^(0+128),w
  9640  1486  0022               	movlb	2	; select bank2
  9641  1487  00E2               	movwf	(_EUSART_ErrorHandler+1)^(0+256)
  9642  1488  0021               	movlb	1	; select bank1
  9643  1489  0820               	movf	EUSART_SetErrorHandler@interruptHandler^(0+128),w
  9644  148A  0022               	movlb	2	; select bank2
  9645  148B  00E1               	movwf	_EUSART_ErrorHandler^(0+256)
  9646  148C  0008               	return
  9647  148D                     __end_of_EUSART_SetErrorHandler:	
  9648                           
  9649                           	psect	text35
  9650  1474                     __ptext35:	
  9651 ;; *************** function _ADC_Initialize *****************
  9652 ;; Defined at:
  9653 ;;		line 65 in file "mcc_generated_files/adc.c"
  9654 ;; Parameters:    Size  Location     Type
  9655 ;;		None
  9656 ;; Auto vars:     Size  Location     Type
  9657 ;;		None
  9658 ;; Return value:  Size  Location     Type
  9659 ;;                  1    wreg      void 
  9660 ;; Registers used:
  9661 ;;		wreg, status,2
  9662 ;; Tracked objects:
  9663 ;;		On entry : 0/0
  9664 ;;		On exit  : 0/0
  9665 ;;		Unchanged: 0/0
  9666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9671 ;;Total ram usage:        0 bytes
  9672 ;; Hardware stack levels used:    1
  9673 ;; Hardware stack levels required when called:    6
  9674 ;; This function calls:
  9675 ;;		Nothing
  9676 ;; This function is called by:
  9677 ;;		_SYSTEM_Initialize
  9678 ;; This function uses a non-reentrant model
  9679 ;;
  9680                           
  9681                           
  9682                           ;psect for function _ADC_Initialize
  9683  1474                     _ADC_Initialize:	
  9684                           
  9685                           ;mcc_generated_files/adc.c: 70:     ADCON0 = 0x01;
  9686                           
  9687                           ;incstack = 0
  9688                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  9689  1474  3001               	movlw	1
  9690  1475  0021               	movlb	1	; select bank1
  9691  1476  009D               	movwf	29	;volatile
  9692                           
  9693                           ;mcc_generated_files/adc.c: 73:     ADCON1 = 0x00;
  9694  1477  019E               	clrf	30	;volatile
  9695                           
  9696                           ;mcc_generated_files/adc.c: 76:     ADCON2 = 0x00;
  9697  1478  019F               	clrf	31	;volatile
  9698                           
  9699                           ;mcc_generated_files/adc.c: 79:     ADRESL = 0x00;
  9700  1479  019B               	clrf	27	;volatile
  9701                           
  9702                           ;mcc_generated_files/adc.c: 82:     ADRESH = 0x00;
  9703  147A  019C               	clrf	28	;volatile
  9704  147B  0008               	return
  9705  147C                     __end_of_ADC_Initialize:	
  9706                           
  9707                           	psect	text36
  9708  0800                     __ptext36:	
  9709 ;; *************** function _ADC_StartConversion *****************
  9710 ;; Defined at:
  9711 ;;		line 94 in file "mcc_generated_files/adc.c"
  9712 ;; Parameters:    Size  Location     Type
  9713 ;;		None
  9714 ;; Auto vars:     Size  Location     Type
  9715 ;;		None
  9716 ;; Return value:  Size  Location     Type
  9717 ;;                  1    wreg      void 
  9718 ;; Registers used:
  9719 ;;		None
  9720 ;; Tracked objects:
  9721 ;;		On entry : 0/0
  9722 ;;		On exit  : 0/0
  9723 ;;		Unchanged: 0/0
  9724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9729 ;;Total ram usage:        0 bytes
  9730 ;; Hardware stack levels used:    1
  9731 ;; Hardware stack levels required when called:    6
  9732 ;; This function calls:
  9733 ;;		Nothing
  9734 ;; This function is called by:
  9735 ;;		_main
  9736 ;; This function uses a non-reentrant model
  9737 ;;
  9738                           
  9739                           
  9740                           ;psect for function _ADC_StartConversion
  9741  0800                     _ADC_StartConversion:	
  9742                           
  9743                           ;mcc_generated_files/adc.c: 97:     ADCON0bits.GO_nDONE = 1;
  9744                           
  9745                           ;incstack = 0
  9746                           ; Regs used in _ADC_StartConversion: []
  9747  0800  0021               	movlb	1	; select bank1
  9748  0801  149D               	bsf	29,1	;volatile
  9749  0802  0008               	return
  9750  0803                     __end_of_ADC_StartConversion:	
  9751                           
  9752                           	psect	text37
  9753  144E                     __ptext37:	
  9754 ;; *************** function _ADC_GetConversionResult *****************
  9755 ;; Defined at:
  9756 ;;		line 107 in file "mcc_generated_files/adc.c"
  9757 ;; Parameters:    Size  Location     Type
  9758 ;;		None
  9759 ;; Auto vars:     Size  Location     Type
  9760 ;;		None
  9761 ;; Return value:  Size  Location     Type
  9762 ;;                  2    0[BANK1 ] unsigned short 
  9763 ;; Registers used:
  9764 ;;		wreg
  9765 ;; Tracked objects:
  9766 ;;		On entry : 0/0
  9767 ;;		On exit  : 0/0
  9768 ;;		Unchanged: 0/0
  9769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9770 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9773 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9774 ;;Total ram usage:        2 bytes
  9775 ;; Hardware stack levels used:    1
  9776 ;; Hardware stack levels required when called:    6
  9777 ;; This function calls:
  9778 ;;		Nothing
  9779 ;; This function is called by:
  9780 ;;		_main
  9781 ;; This function uses a non-reentrant model
  9782 ;;
  9783                           
  9784                           
  9785                           ;psect for function _ADC_GetConversionResult
  9786  144E                     _ADC_GetConversionResult:	
  9787                           
  9788                           ;mcc_generated_files/adc.c: 110:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  9789                           
  9790                           ;incstack = 0
  9791                           ; Regs used in _ADC_GetConversionResult: [wreg]
  9792  144E  0021               	movlb	1	; select bank1
  9793  144F  081C               	movf	28,w	;volatile
  9794  1450  00A1               	movwf	(?_ADC_GetConversionResult+1)^(0+128)
  9795  1451  081B               	movf	27,w	;volatile
  9796  1452  00A0               	movwf	?_ADC_GetConversionResult^(0+128)
  9797  1453  0008               	return
  9798  1454                     __end_of_ADC_GetConversionResult:	
  9799                           
  9800                           	psect	intentry
  9801  0004                     __pintentry:	
  9802 ;; *************** function _INTERRUPT_InterruptManager *****************
  9803 ;; Defined at:
  9804 ;;		line 4 in file "mcc_generated_files/interrupt_manager.c"
  9805 ;; Parameters:    Size  Location     Type
  9806 ;;		None
  9807 ;; Auto vars:     Size  Location     Type
  9808 ;;		None
  9809 ;; Return value:  Size  Location     Type
  9810 ;;                  1    wreg      void 
  9811 ;; Registers used:
  9812 ;;		wreg, status,2, status,0, pclath, cstack
  9813 ;; Tracked objects:
  9814 ;;		On entry : 0/0
  9815 ;;		On exit  : 0/0
  9816 ;;		Unchanged: 0/0
  9817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9821 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9822 ;;Total ram usage:        0 bytes
  9823 ;; Hardware stack levels used:    1
  9824 ;; Hardware stack levels required when called:    5
  9825 ;; This function calls:
  9826 ;;		_PIN_MANAGER_IOC
  9827 ;;		_TMR0_ISR
  9828 ;; This function is called by:
  9829 ;;		Interrupt level 1
  9830 ;; This function uses a non-reentrant model
  9831 ;;
  9832                           
  9833  0004                     _INTERRUPT_InterruptManager:	
  9834                           
  9835                           ;incstack = 0
  9836  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  9837                           
  9838                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  9839  0005  3180               	pagesel	$
  9840                           
  9841                           ;mcc_generated_files/interrupt_manager.c: 7:     if(INTCONbits.TMR0IE == 1 && INTCONbits
      +                          .TMR0IF == 1)
  9842  0006  1A8B               	btfsc	11,5	;volatile
  9843  0007  1D0B               	btfss	11,2	;volatile
  9844  0008  280D               	goto	i1l238
  9845                           
  9846                           ;mcc_generated_files/interrupt_manager.c: 8:     {;mcc_generated_files/interrupt_manager
      +                          .c: 9:         TMR0_ISR();
  9847  0009  3194  24E5  3180   	fcall	_TMR0_ISR
  9848                           
  9849                           ;mcc_generated_files/interrupt_manager.c: 10:     }
  9850  000C  2812               	goto	i1l242
  9851  000D                     i1l238:	
  9852                           ;mcc_generated_files/interrupt_manager.c: 11:     else if(INTCONbits.IOCIE == 1 && INTCO
      +                          Nbits.IOCIF == 1)
  9853                           
  9854  000D  198B               	btfsc	11,3	;volatile
  9855  000E  1C0B               	btfss	11,0	;volatile
  9856  000F  2812               	goto	i1l242
  9857                           
  9858                           ;mcc_generated_files/interrupt_manager.c: 12:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 13:         PIN_MANAGER_IOC();
  9859  0010  3194  2448         	fcall	_PIN_MANAGER_IOC
  9860  0012                     i1l242:	
  9861                           ;mcc_generated_files/interrupt_manager.c: 14:     }
  9862                           
  9863  0012  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  9864  0013  0009               	retfie
  9865  0014                     __end_of_INTERRUPT_InterruptManager:	
  9866                           
  9867                           	psect	text39
  9868  14E5                     __ptext39:	
  9869 ;; *************** function _TMR0_ISR *****************
  9870 ;; Defined at:
  9871 ;;		line 62 in file "mcc_generated_files/tmr0.c"
  9872 ;; Parameters:    Size  Location     Type
  9873 ;;		None
  9874 ;; Auto vars:     Size  Location     Type
  9875 ;;		None
  9876 ;; Return value:  Size  Location     Type
  9877 ;;                  1    wreg      void 
  9878 ;; Registers used:
  9879 ;;		wreg, status,2, status,0, pclath, cstack
  9880 ;; Tracked objects:
  9881 ;;		On entry : 0/0
  9882 ;;		On exit  : 0/0
  9883 ;;		Unchanged: 0/0
  9884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9889 ;;Total ram usage:        0 bytes
  9890 ;; Hardware stack levels used:    1
  9891 ;; Hardware stack levels required when called:    2
  9892 ;; This function calls:
  9893 ;;		Absolute function
  9894 ;;		_TMR0_DefaultInterruptHandler
  9895 ;;		_timerISR
  9896 ;; This function is called by:
  9897 ;;		_INTERRUPT_InterruptManager
  9898 ;; This function uses a non-reentrant model
  9899 ;;
  9900                           
  9901                           
  9902                           ;psect for function _TMR0_ISR
  9903  14E5                     _TMR0_ISR:	
  9904                           
  9905                           ;mcc_generated_files/tmr0.c: 66:     INTCONbits.TMR0IF = 0;
  9906                           
  9907                           ;incstack = 0
  9908                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  9909  14E5  110B               	bcf	11,2	;volatile
  9910                           
  9911                           ;mcc_generated_files/tmr0.c: 68:     TMR0 = timer0ReloadVal;
  9912  14E6  0022               	movlb	2	; select bank2
  9913  14E7  0867               	movf	_timer0ReloadVal^(0+256),w	;volatile
  9914  14E8  0020               	movlb	0	; select bank0
  9915  14E9  0095               	movwf	21	;volatile
  9916                           
  9917                           ;mcc_generated_files/tmr0.c: 70:     if(TMR0_InterruptHandler)
  9918  14EA  0022               	movlb	2	; select bank2
  9919  14EB  085D               	movf	_TMR0_InterruptHandler^(0+256),w
  9920  14EC  045E               	iorwf	(_TMR0_InterruptHandler+1)^(0+256),w
  9921  14ED  1903               	btfsc	3,2
  9922  14EE  0008               	return
  9923                           
  9924                           ;mcc_generated_files/tmr0.c: 71:     {;mcc_generated_files/tmr0.c: 72:         TMR0_Inte
      +                          rruptHandler();
  9925  14EF  085E               	movf	(_TMR0_InterruptHandler+1)^(0+256),w
  9926  14F0  008A               	movwf	10
  9927  14F1  085D               	movf	_TMR0_InterruptHandler^(0+256),w
  9928  14F2  000A               	callw
  9929  14F3  3194               	pagesel	$
  9930  14F4  0008               	return
  9931  14F5                     __end_of_TMR0_ISR:	
  9932                           
  9933                           	psect	text40
  9934  0003                     __ptext40:	
  9935 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  9936 ;; Defined at:
  9937 ;;		line 83 in file "mcc_generated_files/tmr0.c"
  9938 ;; Parameters:    Size  Location     Type
  9939 ;;		None
  9940 ;; Auto vars:     Size  Location     Type
  9941 ;;		None
  9942 ;; Return value:  Size  Location     Type
  9943 ;;                  1    wreg      void 
  9944 ;; Registers used:
  9945 ;;		None
  9946 ;; Tracked objects:
  9947 ;;		On entry : 0/0
  9948 ;;		On exit  : 0/0
  9949 ;;		Unchanged: 0/0
  9950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9955 ;;Total ram usage:        0 bytes
  9956 ;; Hardware stack levels used:    1
  9957 ;; This function calls:
  9958 ;;		Nothing
  9959 ;; This function is called by:
  9960 ;;		_TMR0_Initialize
  9961 ;;		_TMR0_ISR
  9962 ;; This function uses a non-reentrant model
  9963 ;;
  9964                           
  9965                           
  9966                           ;psect for function _TMR0_DefaultInterruptHandler
  9967  0003                     _TMR0_DefaultInterruptHandler:	
  9968                           
  9969                           ;incstack = 0
  9970                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  9971  0003  0008               	return
  9972  0004                     __end_of_TMR0_DefaultInterruptHandler:	
  9973                           
  9974                           	psect	text41
  9975  15DF                     __ptext41:	
  9976 ;; *************** function _timerISR *****************
  9977 ;; Defined at:
  9978 ;;		line 109 in file "main.c"
  9979 ;; Parameters:    Size  Location     Type
  9980 ;;		None
  9981 ;; Auto vars:     Size  Location     Type
  9982 ;;		None
  9983 ;; Return value:  Size  Location     Type
  9984 ;;                  1    wreg      void 
  9985 ;; Registers used:
  9986 ;;		wreg, status,2, status,0, pclath, cstack
  9987 ;; Tracked objects:
  9988 ;;		On entry : 0/0
  9989 ;;		On exit  : 0/0
  9990 ;;		Unchanged: 0/0
  9991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9995 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9996 ;;Total ram usage:        0 bytes
  9997 ;; Hardware stack levels used:    1
  9998 ;; Hardware stack levels required when called:    1
  9999 ;; This function calls:
 10000 ;;		___fladd
 10001 ;; This function is called by:
 10002 ;;		_main
 10003 ;;		_TMR0_ISR
 10004 ;; This function uses a non-reentrant model
 10005 ;;
 10006                           
 10007                           
 10008                           ;psect for function _timerISR
 10009  15DF                     _timerISR:	
 10010                           
 10011                           ;main.c: 111:     counter++ ;
 10012                           
 10013                           ;incstack = 0
 10014                           ; Regs used in _timerISR: [wreg+status,2+status,0+pclath+cstack]
 10015  15DF  303F               	movlw	63
 10016  15E0  00F3               	movwf	___fladd@b+3
 10017  15E1  3080               	movlw	128
 10018  15E2  00F2               	movwf	___fladd@b+2
 10019  15E3  3000               	movlw	0
 10020  15E4  00F1               	movwf	___fladd@b+1
 10021  15E5  3000               	movlw	0
 10022  15E6  00F0               	movwf	___fladd@b
 10023  15E7  0022               	movlb	2	; select bank2
 10024  15E8  084E               	movf	(_counter+3)^(0+256),w	;volatile
 10025  15E9  00F7               	movwf	___fladd@a+3
 10026  15EA  084D               	movf	(_counter+2)^(0+256),w	;volatile
 10027  15EB  00F6               	movwf	___fladd@a+2
 10028  15EC  084C               	movf	(_counter+1)^(0+256),w	;volatile
 10029  15ED  00F5               	movwf	___fladd@a+1
 10030  15EE  084B               	movf	_counter^(0+256),w	;volatile
 10031  15EF  00F4               	movwf	___fladd@a
 10032  15F0  3184  249B         	fcall	___fladd
 10033  15F2  0873               	movf	?___fladd+3,w
 10034  15F3  0022               	movlb	2	; select bank2
 10035  15F4  00CE               	movwf	(_counter+3)^(0+256)	;volatile
 10036  15F5  0872               	movf	?___fladd+2,w
 10037  15F6  00CD               	movwf	(_counter+2)^(0+256)	;volatile
 10038  15F7  0871               	movf	?___fladd+1,w
 10039  15F8  00CC               	movwf	(_counter+1)^(0+256)	;volatile
 10040  15F9  0870               	movf	?___fladd,w
 10041  15FA  00CB               	movwf	_counter^(0+256)	;volatile
 10042                           
 10043                           ;main.c: 112:     adcCounter++ ;
 10044  15FB  3001               	movlw	1
 10045  15FC  07A4               	addwf	_adcCounter^(0+256),f	;volatile
 10046  15FD  3000               	movlw	0
 10047  15FE  3DA5               	addwfc	(_adcCounter+1)^(0+256),f	;volatile
 10048  15FF  3000               	movlw	0
 10049  1600  3DA6               	addwfc	(_adcCounter+2)^(0+256),f	;volatile
 10050  1601  3000               	movlw	0
 10051  1602  3DA7               	addwfc	(_adcCounter+3)^(0+256),f	;volatile
 10052  1603  0008               	return
 10053  1604                     __end_of_timerISR:	
 10054                           
 10055                           	psect	text42
 10056  049B                     __ptext42:	
 10057 ;; *************** function ___fladd *****************
 10058 ;; Defined at:
 10059 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 10060 ;; Parameters:    Size  Location     Type
 10061 ;;  b               4    0[COMMON] void 
 10062 ;;  a               4    4[COMMON] void 
 10063 ;; Auto vars:     Size  Location     Type
 10064 ;;  grs             1   11[COMMON] unsigned char 
 10065 ;;  bexp            1   10[COMMON] unsigned char 
 10066 ;;  aexp            1    9[COMMON] unsigned char 
 10067 ;;  signs           1    8[COMMON] unsigned char 
 10068 ;; Return value:  Size  Location     Type
 10069 ;;                  4    0[COMMON] unsigned char 
 10070 ;; Registers used:
 10071 ;;		wreg, status,2, status,0
 10072 ;; Tracked objects:
 10073 ;;		On entry : 0/0
 10074 ;;		On exit  : 0/0
 10075 ;;		Unchanged: 0/0
 10076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10077 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10078 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10079 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10080 ;;      Totals:        12       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10081 ;;Total ram usage:       20 bytes
 10082 ;; Hardware stack levels used:    1
 10083 ;; This function calls:
 10084 ;;		Nothing
 10085 ;; This function is called by:
 10086 ;;		_timerISR
 10087 ;; This function uses a non-reentrant model
 10088 ;;
 10089                           
 10090                           
 10091                           ;psect for function ___fladd
 10092  049B                     ___fladd:	
 10093                           
 10094                           ;incstack = 0
 10095                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 10096  049B  0873               	movf	___fladd@b+3,w
 10097  049C  3980               	andlw	128
 10098  049D  0020               	movlb	0	; select bank0
 10099  049E  00A0               	movwf	??___fladd
 10100  049F  0820               	movf	??___fladd,w
 10101  04A0  00F8               	movwf	___fladd@signs
 10102  04A1  3573               	lslf	___fladd@b+3,w
 10103  04A2  00A0               	movwf	??___fladd
 10104  04A3  0820               	movf	??___fladd,w
 10105  04A4  00FA               	movwf	___fladd@bexp
 10106  04A5  1BF2               	btfsc	___fladd@b+2,7
 10107  04A6  147A               	bsf	___fladd@bexp,0
 10108  04A7  087A               	movf	___fladd@bexp,w
 10109  04A8  1903               	btfsc	3,2
 10110  04A9  2CB8               	goto	i1l3258
 10111  04AA  0A7A               	incf	___fladd@bexp,w
 10112  04AB  1D03               	btfss	3,2
 10113  04AC  2CB5               	goto	i1l3254
 10114  04AD  3000               	movlw	0
 10115  04AE  00F3               	movwf	___fladd@b+3
 10116  04AF  3000               	movlw	0
 10117  04B0  00F2               	movwf	___fladd@b+2
 10118  04B1  3000               	movlw	0
 10119  04B2  00F1               	movwf	___fladd@b+1
 10120  04B3  3000               	movlw	0
 10121  04B4  00F0               	movwf	___fladd@b
 10122  04B5                     i1l3254:	
 10123  04B5  17F2               	bsf	___fladd@b+2,7
 10124  04B6  01F3               	clrf	___fladd@b+3
 10125  04B7  2CC0               	goto	i1l3260
 10126  04B8                     i1l3258:	
 10127  04B8  3000               	movlw	0
 10128  04B9  00F3               	movwf	___fladd@b+3
 10129  04BA  3000               	movlw	0
 10130  04BB  00F2               	movwf	___fladd@b+2
 10131  04BC  3000               	movlw	0
 10132  04BD  00F1               	movwf	___fladd@b+1
 10133  04BE  3000               	movlw	0
 10134  04BF  00F0               	movwf	___fladd@b
 10135  04C0                     i1l3260:	
 10136  04C0  0877               	movf	___fladd@a+3,w
 10137  04C1  3980               	andlw	128
 10138  04C2  00A0               	movwf	??___fladd
 10139  04C3  0820               	movf	??___fladd,w
 10140  04C4  00F9               	movwf	___fladd@aexp
 10141  04C5  0879               	movf	___fladd@aexp,w
 10142  04C6  0678               	xorwf	___fladd@signs,w
 10143  04C7  1D03               	btfss	3,2
 10144  04C8  1778               	bsf	___fladd@signs,6
 10145  04C9  3577               	lslf	___fladd@a+3,w
 10146  04CA  00A0               	movwf	??___fladd
 10147  04CB  0820               	movf	??___fladd,w
 10148  04CC  00F9               	movwf	___fladd@aexp
 10149  04CD  1BF6               	btfsc	___fladd@a+2,7
 10150  04CE  1479               	bsf	___fladd@aexp,0
 10151  04CF  0879               	movf	___fladd@aexp,w
 10152  04D0  1903               	btfsc	3,2
 10153  04D1  2CE0               	goto	i1l3282
 10154  04D2  0A79               	incf	___fladd@aexp,w
 10155  04D3  1D03               	btfss	3,2
 10156  04D4  2CDD               	goto	i1l3278
 10157  04D5  3000               	movlw	0
 10158  04D6  00F7               	movwf	___fladd@a+3
 10159  04D7  3000               	movlw	0
 10160  04D8  00F6               	movwf	___fladd@a+2
 10161  04D9  3000               	movlw	0
 10162  04DA  00F5               	movwf	___fladd@a+1
 10163  04DB  3000               	movlw	0
 10164  04DC  00F4               	movwf	___fladd@a
 10165  04DD                     i1l3278:	
 10166  04DD  17F6               	bsf	___fladd@a+2,7
 10167  04DE  01F7               	clrf	___fladd@a+3
 10168  04DF  2CE8               	goto	i1l894
 10169  04E0                     i1l3282:	
 10170  04E0  3000               	movlw	0
 10171  04E1  00F7               	movwf	___fladd@a+3
 10172  04E2  3000               	movlw	0
 10173  04E3  00F6               	movwf	___fladd@a+2
 10174  04E4  3000               	movlw	0
 10175  04E5  00F5               	movwf	___fladd@a+1
 10176  04E6  3000               	movlw	0
 10177  04E7  00F4               	movwf	___fladd@a
 10178  04E8                     i1l894:	
 10179  04E8  087A               	movf	___fladd@bexp,w
 10180  04E9  0279               	subwf	___fladd@aexp,w
 10181  04EA  1803               	skipnc
 10182  04EB  2D2E               	goto	i1l3318
 10183  04EC  1F78               	btfss	___fladd@signs,6
 10184  04ED  2CF2               	goto	i1l3288
 10185  04EE  3080               	movlw	128
 10186  04EF  00A0               	movwf	??___fladd
 10187  04F0  0820               	movf	??___fladd,w
 10188  04F1  06F8               	xorwf	___fladd@signs,f
 10189  04F2                     i1l3288:	
 10190  04F2  087A               	movf	___fladd@bexp,w
 10191  04F3  00A0               	movwf	??___fladd
 10192  04F4  0820               	movf	??___fladd,w
 10193  04F5  00FB               	movwf	___fladd@grs
 10194  04F6  0879               	movf	___fladd@aexp,w
 10195  04F7  00A0               	movwf	??___fladd
 10196  04F8  0820               	movf	??___fladd,w
 10197  04F9  00FA               	movwf	___fladd@bexp
 10198  04FA  087B               	movf	___fladd@grs,w
 10199  04FB  00A0               	movwf	??___fladd
 10200  04FC  0820               	movf	??___fladd,w
 10201  04FD  00F9               	movwf	___fladd@aexp
 10202  04FE  0870               	movf	___fladd@b,w
 10203  04FF  00A0               	movwf	??___fladd
 10204  0500  0820               	movf	??___fladd,w
 10205  0501  00FB               	movwf	___fladd@grs
 10206  0502  0874               	movf	___fladd@a,w
 10207  0503  00A0               	movwf	??___fladd
 10208  0504  0820               	movf	??___fladd,w
 10209  0505  00F0               	movwf	___fladd@b
 10210  0506  087B               	movf	___fladd@grs,w
 10211  0507  00A0               	movwf	??___fladd
 10212  0508  0820               	movf	??___fladd,w
 10213  0509  00F4               	movwf	___fladd@a
 10214  050A  0871               	movf	___fladd@b+1,w
 10215  050B  00A0               	movwf	??___fladd
 10216  050C  0820               	movf	??___fladd,w
 10217  050D  00FB               	movwf	___fladd@grs
 10218  050E  0875               	movf	___fladd@a+1,w
 10219  050F  00A0               	movwf	??___fladd
 10220  0510  0820               	movf	??___fladd,w
 10221  0511  00F1               	movwf	___fladd@b+1
 10222  0512  087B               	movf	___fladd@grs,w
 10223  0513  00A0               	movwf	??___fladd
 10224  0514  0820               	movf	??___fladd,w
 10225  0515  00F5               	movwf	___fladd@a+1
 10226  0516  0872               	movf	___fladd@b+2,w
 10227  0517  00A0               	movwf	??___fladd
 10228  0518  0820               	movf	??___fladd,w
 10229  0519  00FB               	movwf	___fladd@grs
 10230  051A  0876               	movf	___fladd@a+2,w
 10231  051B  00A0               	movwf	??___fladd
 10232  051C  0820               	movf	??___fladd,w
 10233  051D  00F2               	movwf	___fladd@b+2
 10234  051E  087B               	movf	___fladd@grs,w
 10235  051F  00A0               	movwf	??___fladd
 10236  0520  0820               	movf	??___fladd,w
 10237  0521  00F6               	movwf	___fladd@a+2
 10238  0522  0873               	movf	___fladd@b+3,w
 10239  0523  00A0               	movwf	??___fladd
 10240  0524  0820               	movf	??___fladd,w
 10241  0525  00FB               	movwf	___fladd@grs
 10242  0526  0877               	movf	___fladd@a+3,w
 10243  0527  00A0               	movwf	??___fladd
 10244  0528  0820               	movf	??___fladd,w
 10245  0529  00F3               	movwf	___fladd@b+3
 10246  052A  087B               	movf	___fladd@grs,w
 10247  052B  00A0               	movwf	??___fladd
 10248  052C  0820               	movf	??___fladd,w
 10249  052D  00F7               	movwf	___fladd@a+3
 10250  052E                     i1l3318:	
 10251  052E  01FB               	clrf	___fladd@grs
 10252  052F  0879               	movf	___fladd@aexp,w
 10253  0530  00A0               	movwf	??___fladd
 10254  0531  01A1               	clrf	??___fladd+1
 10255  0532  0821               	movf	??___fladd+1,w
 10256  0533  00A3               	movwf	??___fladd+3
 10257  0534  087A               	movf	___fladd@bexp,w
 10258  0535  0220               	subwf	??___fladd,w
 10259  0536  00A2               	movwf	??___fladd+2
 10260  0537  1C03               	skipc
 10261  0538  03A3               	decf	??___fladd+3,f
 10262  0539  0823               	movf	??___fladd+3,w
 10263  053A  3A80               	xorlw	128
 10264  053B  00A4               	movwf	??___fladd+4
 10265  053C  3080               	movlw	128
 10266  053D  0224               	subwf	??___fladd+4,w
 10267  053E  1D03               	skipz
 10268  053F  2D42               	goto	u410_25
 10269  0540  301A               	movlw	26
 10270  0541  0222               	subwf	??___fladd+2,w
 10271  0542                     u410_25:	
 10272  0542  1C03               	skipc
 10273  0543  2D78               	goto	i1l3336
 10274  0544  0873               	movf	___fladd@b+3,w
 10275  0545  0472               	iorwf	___fladd@b+2,w
 10276  0546  0471               	iorwf	___fladd@b+1,w
 10277  0547  0470               	iorwf	___fladd@b,w
 10278  0548  1903               	btfsc	3,2
 10279  0549  2D4C               	goto	u411_20
 10280  054A  3001               	movlw	1
 10281  054B  2D4D               	goto	u412_20
 10282  054C                     u411_20:	
 10283  054C  3000               	movlw	0
 10284  054D                     u412_20:	
 10285  054D  0020               	movlb	0	; select bank0
 10286  054E  00A0               	movwf	??___fladd
 10287  054F  0820               	movf	??___fladd,w
 10288  0550  00FB               	movwf	___fladd@grs
 10289  0551  3000               	movlw	0
 10290  0552  00F3               	movwf	___fladd@b+3
 10291  0553  3000               	movlw	0
 10292  0554  00F2               	movwf	___fladd@b+2
 10293  0555  3000               	movlw	0
 10294  0556  00F1               	movwf	___fladd@b+1
 10295  0557  3000               	movlw	0
 10296  0558  00F0               	movwf	___fladd@b
 10297  0559  0879               	movf	___fladd@aexp,w
 10298  055A  00A0               	movwf	??___fladd
 10299  055B  0820               	movf	??___fladd,w
 10300  055C  00FA               	movwf	___fladd@bexp
 10301  055D  2D7C               	goto	i1l898
 10302  055E                     i1l900:	
 10303  055E  1C7B               	btfss	___fladd@grs,0
 10304  055F  2D67               	goto	i1l3326
 10305  0560  367B               	lsrf	___fladd@grs,w
 10306  0561  3801               	iorlw	1
 10307  0562  0020               	movlb	0	; select bank0
 10308  0563  00A0               	movwf	??___fladd
 10309  0564  0820               	movf	??___fladd,w
 10310  0565  00FB               	movwf	___fladd@grs
 10311  0566  2D69               	goto	i1l3328
 10312  0567                     i1l3326:	
 10313  0567  1003               	clrc
 10314  0568  0CFB               	rrf	___fladd@grs,f
 10315  0569                     i1l3328:	
 10316  0569  1870               	btfsc	___fladd@b,0
 10317  056A  17FB               	bsf	___fladd@grs,7
 10318  056B  3001               	movlw	1
 10319  056C  0020               	movlb	0	; select bank0
 10320  056D  00A0               	movwf	??___fladd
 10321  056E                     u415_25:	
 10322  056E  37F3               	asrf	___fladd@b+3,f
 10323  056F  0CF2               	rrf	___fladd@b+2,f
 10324  0570  0CF1               	rrf	___fladd@b+1,f
 10325  0571  0CF0               	rrf	___fladd@b,f
 10326  0572  0BA0               	decfsz	??___fladd& (0+127),f
 10327  0573  2D6E               	goto	u415_25
 10328  0574  3001               	movlw	1
 10329  0575  00A0               	movwf	??___fladd
 10330  0576  0820               	movf	??___fladd,w
 10331  0577  07FA               	addwf	___fladd@bexp,f
 10332  0578                     i1l3336:	
 10333  0578  0879               	movf	___fladd@aexp,w
 10334  0579  027A               	subwf	___fladd@bexp,w
 10335  057A  1C03               	skipc
 10336  057B  2D5E               	goto	i1l900
 10337  057C                     i1l898:	
 10338  057C  1B78               	btfsc	___fladd@signs,6
 10339  057D  2DAF               	goto	i1l3362
 10340  057E  087A               	movf	___fladd@bexp,w
 10341  057F  1D03               	btfss	3,2
 10342  0580  2D8A               	goto	i1l3344
 10343  0581  3000               	movlw	0
 10344  0582  00F3               	movwf	?___fladd+3
 10345  0583  3000               	movlw	0
 10346  0584  00F2               	movwf	?___fladd+2
 10347  0585  3000               	movlw	0
 10348  0586  00F1               	movwf	?___fladd+1
 10349  0587  3000               	movlw	0
 10350  0588  00F0               	movwf	?___fladd
 10351  0589  0008               	return
 10352  058A                     i1l3344:	
 10353  058A  0874               	movf	___fladd@a,w
 10354  058B  07F0               	addwf	___fladd@b,f
 10355  058C  0875               	movf	___fladd@a+1,w
 10356  058D  3DF1               	addwfc	___fladd@b+1,f
 10357  058E  0876               	movf	___fladd@a+2,w
 10358  058F  3DF2               	addwfc	___fladd@b+2,f
 10359  0590  0877               	movf	___fladd@a+3,w
 10360  0591  3DF3               	addwfc	___fladd@b+3,f
 10361  0592  1C73               	btfss	___fladd@b+3,0
 10362  0593  2E2A               	goto	i1l3396
 10363  0594  1C7B               	btfss	___fladd@grs,0
 10364  0595  2D9D               	goto	i1l3352
 10365  0596  367B               	lsrf	___fladd@grs,w
 10366  0597  3801               	iorlw	1
 10367  0598  0020               	movlb	0	; select bank0
 10368  0599  00A0               	movwf	??___fladd
 10369  059A  0820               	movf	??___fladd,w
 10370  059B  00FB               	movwf	___fladd@grs
 10371  059C  2D9F               	goto	i1l3354
 10372  059D                     i1l3352:	
 10373  059D  1003               	clrc
 10374  059E  0CFB               	rrf	___fladd@grs,f
 10375  059F                     i1l3354:	
 10376  059F  1870               	btfsc	___fladd@b,0
 10377  05A0  17FB               	bsf	___fladd@grs,7
 10378  05A1  3001               	movlw	1
 10379  05A2  0020               	movlb	0	; select bank0
 10380  05A3  00A0               	movwf	??___fladd
 10381  05A4                     u422_25:	
 10382  05A4  37F3               	asrf	___fladd@b+3,f
 10383  05A5  0CF2               	rrf	___fladd@b+2,f
 10384  05A6  0CF1               	rrf	___fladd@b+1,f
 10385  05A7  0CF0               	rrf	___fladd@b,f
 10386  05A8  0BA0               	decfsz	??___fladd& (0+127),f
 10387  05A9  2DA4               	goto	u422_25
 10388  05AA  3001               	movlw	1
 10389  05AB  00A0               	movwf	??___fladd
 10390  05AC  0820               	movf	??___fladd,w
 10391  05AD  07FA               	addwf	___fladd@bexp,f
 10392  05AE  2E2A               	goto	i1l3396
 10393  05AF                     i1l3362:	
 10394  05AF  0873               	movf	___fladd@b+3,w
 10395  05B0  3A80               	xorlw	128
 10396  05B1  0020               	movlb	0	; select bank0
 10397  05B2  00A0               	movwf	??___fladd
 10398  05B3  0877               	movf	___fladd@a+3,w
 10399  05B4  3A80               	xorlw	128
 10400  05B5  0220               	subwf	??___fladd,w
 10401  05B6  1D03               	skipz
 10402  05B7  2DC2               	goto	u423_23
 10403  05B8  0876               	movf	___fladd@a+2,w
 10404  05B9  0272               	subwf	___fladd@b+2,w
 10405  05BA  1D03               	skipz
 10406  05BB  2DC2               	goto	u423_23
 10407  05BC  0875               	movf	___fladd@a+1,w
 10408  05BD  0271               	subwf	___fladd@b+1,w
 10409  05BE  1D03               	skipz
 10410  05BF  2DC2               	goto	u423_23
 10411  05C0  0874               	movf	___fladd@a,w
 10412  05C1  0270               	subwf	___fladd@b,w
 10413  05C2                     u423_23:	
 10414  05C2  1803               	skipnc
 10415  05C3  2DFA               	goto	i1l3372
 10416  05C4  30FF               	movlw	255
 10417  05C5  00A0               	movwf	??___fladd
 10418  05C6  30FF               	movlw	255
 10419  05C7  00A1               	movwf	??___fladd+1
 10420  05C8  30FF               	movlw	255
 10421  05C9  00A2               	movwf	??___fladd+2
 10422  05CA  30FF               	movlw	255
 10423  05CB  00A3               	movwf	??___fladd+3
 10424  05CC  0870               	movf	___fladd@b,w
 10425  05CD  0274               	subwf	___fladd@a,w
 10426  05CE  00A4               	movwf	??___fladd+4
 10427  05CF  0871               	movf	___fladd@b+1,w
 10428  05D0  3B75               	subwfb	___fladd@a+1,w
 10429  05D1  00A5               	movwf	??___fladd+5
 10430  05D2  0872               	movf	___fladd@b+2,w
 10431  05D3  3B76               	subwfb	___fladd@a+2,w
 10432  05D4  00A6               	movwf	??___fladd+6
 10433  05D5  0873               	movf	___fladd@b+3,w
 10434  05D6  3B77               	subwfb	___fladd@a+3,w
 10435  05D7  00A7               	movwf	??___fladd+7
 10436  05D8  0824               	movf	??___fladd+4,w
 10437  05D9  07A0               	addwf	??___fladd,f
 10438  05DA  0825               	movf	??___fladd+5,w
 10439  05DB  3DA1               	addwfc	??___fladd+1,f
 10440  05DC  0826               	movf	??___fladd+6,w
 10441  05DD  3DA2               	addwfc	??___fladd+2,f
 10442  05DE  0827               	movf	??___fladd+7,w
 10443  05DF  3DA3               	addwfc	??___fladd+3,f
 10444  05E0  0823               	movf	??___fladd+3,w
 10445  05E1  00F3               	movwf	___fladd@b+3
 10446  05E2  0822               	movf	??___fladd+2,w
 10447  05E3  00F2               	movwf	___fladd@b+2
 10448  05E4  0821               	movf	??___fladd+1,w
 10449  05E5  00F1               	movwf	___fladd@b+1
 10450  05E6  0820               	movf	??___fladd,w
 10451  05E7  00F0               	movwf	___fladd@b
 10452  05E8  3080               	movlw	128
 10453  05E9  00A0               	movwf	??___fladd
 10454  05EA  0820               	movf	??___fladd,w
 10455  05EB  06F8               	xorwf	___fladd@signs,f
 10456  05EC  09FB               	comf	___fladd@grs,f
 10457  05ED  0AFB               	incf	___fladd@grs,f
 10458  05EE  087B               	movf	___fladd@grs,w
 10459  05EF  1D03               	btfss	3,2
 10460  05F0  2E02               	goto	i1l915
 10461  05F1  3001               	movlw	1
 10462  05F2  07F0               	addwf	___fladd@b,f
 10463  05F3  3000               	movlw	0
 10464  05F4  3DF1               	addwfc	___fladd@b+1,f
 10465  05F5  3000               	movlw	0
 10466  05F6  3DF2               	addwfc	___fladd@b+2,f
 10467  05F7  3000               	movlw	0
 10468  05F8  3DF3               	addwfc	___fladd@b+3,f
 10469  05F9  2E02               	goto	i1l915
 10470  05FA                     i1l3372:	
 10471  05FA  0874               	movf	___fladd@a,w
 10472  05FB  02F0               	subwf	___fladd@b,f
 10473  05FC  0875               	movf	___fladd@a+1,w
 10474  05FD  3BF1               	subwfb	___fladd@b+1,f
 10475  05FE  0876               	movf	___fladd@a+2,w
 10476  05FF  3BF2               	subwfb	___fladd@b+2,f
 10477  0600  0877               	movf	___fladd@a+3,w
 10478  0601  3BF3               	subwfb	___fladd@b+3,f
 10479  0602                     i1l915:	
 10480  0602  0873               	movf	___fladd@b+3,w
 10481  0603  0472               	iorwf	___fladd@b+2,w
 10482  0604  0471               	iorwf	___fladd@b+1,w
 10483  0605  0470               	iorwf	___fladd@b,w
 10484  0606  1D03               	skipz
 10485  0607  2E28               	goto	i1l3394
 10486  0608  087B               	movf	___fladd@grs,w
 10487  0609  1D03               	btfss	3,2
 10488  060A  2E28               	goto	i1l3394
 10489  060B  3000               	movlw	0
 10490  060C  00F3               	movwf	?___fladd+3
 10491  060D  3000               	movlw	0
 10492  060E  00F2               	movwf	?___fladd+2
 10493  060F  3000               	movlw	0
 10494  0610  00F1               	movwf	?___fladd+1
 10495  0611  3000               	movlw	0
 10496  0612  00F0               	movwf	?___fladd
 10497  0613  0008               	return
 10498  0614                     i1l3380:	
 10499  0614  3001               	movlw	1
 10500  0615                     u427_25:	
 10501  0615  35F0               	lslf	___fladd@b,f
 10502  0616  0DF1               	rlf	___fladd@b+1,f
 10503  0617  0DF2               	rlf	___fladd@b+2,f
 10504  0618  0DF3               	rlf	___fladd@b+3,f
 10505  0619  0B89               	decfsz	9,f
 10506  061A  2E15               	goto	u427_25
 10507  061B  1BFB               	btfsc	___fladd@grs,7
 10508  061C  1470               	bsf	___fladd@b,0
 10509  061D  1C7B               	btfss	___fladd@grs,0
 10510  061E  2E21               	goto	i1l3388
 10511  061F  1403               	setc
 10512  0620  2E22               	goto	L4
 10513  0621                     i1l3388:	
 10514  0621  1003               	clrc
 10515  0622                     L4:	
 10516  0622  0DFB               	rlf	___fladd@grs,f
 10517  0623  087A               	movf	___fladd@bexp,w
 10518  0624  1903               	btfsc	3,2
 10519  0625  2E28               	goto	i1l3394
 10520  0626  3001               	movlw	1
 10521  0627  02FA               	subwf	___fladd@bexp,f
 10522  0628                     i1l3394:	
 10523  0628  1FF2               	btfss	___fladd@b+2,7
 10524  0629  2E14               	goto	i1l3380
 10525  062A                     i1l3396:	
 10526  062A  01F9               	clrf	___fladd@aexp
 10527  062B  1FFB               	btfss	___fladd@grs,7
 10528  062C  2E35               	goto	i1l3406
 10529  062D  087B               	movf	___fladd@grs,w
 10530  062E  397F               	andlw	127
 10531  062F  1903               	btfsc	3,2
 10532  0630  1870               	btfsc	___fladd@b,0
 10533  0631  2E33               	goto	i1l3402
 10534  0632  2E35               	goto	i1l3406
 10535  0633                     i1l3402:	
 10536  0633  01F9               	clrf	___fladd@aexp
 10537  0634  0AF9               	incf	___fladd@aexp,f
 10538  0635                     i1l3406:	
 10539  0635  0879               	movf	___fladd@aexp,w
 10540  0636  1903               	btfsc	3,2
 10541  0637  2E62               	goto	i1l928
 10542  0638  3001               	movlw	1
 10543  0639  07F0               	addwf	___fladd@b,f
 10544  063A  3000               	movlw	0
 10545  063B  3DF1               	addwfc	___fladd@b+1,f
 10546  063C  3000               	movlw	0
 10547  063D  3DF2               	addwfc	___fladd@b+2,f
 10548  063E  3000               	movlw	0
 10549  063F  3DF3               	addwfc	___fladd@b+3,f
 10550  0640  1C73               	btfss	___fladd@b+3,0
 10551  0641  2E62               	goto	i1l928
 10552  0642  0870               	movf	___fladd@b,w
 10553  0643  0020               	movlb	0	; select bank0
 10554  0644  00A0               	movwf	??___fladd
 10555  0645  0871               	movf	___fladd@b+1,w
 10556  0646  00A1               	movwf	??___fladd+1
 10557  0647  0872               	movf	___fladd@b+2,w
 10558  0648  00A2               	movwf	??___fladd+2
 10559  0649  0873               	movf	___fladd@b+3,w
 10560  064A  00A3               	movwf	??___fladd+3
 10561  064B  3001               	movlw	1
 10562  064C  00A4               	movwf	??___fladd+4
 10563  064D                     u437_25:	
 10564  064D  37A3               	asrf	??___fladd+3,f
 10565  064E  0CA2               	rrf	??___fladd+2,f
 10566  064F  0CA1               	rrf	??___fladd+1,f
 10567  0650  0CA0               	rrf	??___fladd,f
 10568  0651  0BA4               	decfsz	??___fladd+4,f
 10569  0652  2E4D               	goto	u437_25
 10570  0653  0823               	movf	??___fladd+3,w
 10571  0654  00F3               	movwf	___fladd@b+3
 10572  0655  0822               	movf	??___fladd+2,w
 10573  0656  00F2               	movwf	___fladd@b+2
 10574  0657  0821               	movf	??___fladd+1,w
 10575  0658  00F1               	movwf	___fladd@b+1
 10576  0659  0820               	movf	??___fladd,w
 10577  065A  00F0               	movwf	___fladd@b
 10578  065B  0A7A               	incf	___fladd@bexp,w
 10579  065C  1903               	btfsc	3,2
 10580  065D  2E62               	goto	i1l928
 10581  065E  3001               	movlw	1
 10582  065F  00A0               	movwf	??___fladd
 10583  0660  0820               	movf	??___fladd,w
 10584  0661  07FA               	addwf	___fladd@bexp,f
 10585  0662                     i1l928:	
 10586  0662  0A7A               	incf	___fladd@bexp,w
 10587  0663  1D03               	btfss	3,2
 10588  0664  087A               	movf	___fladd@bexp,w
 10589  0665  1D03               	btfss	3,2
 10590  0666  2E72               	goto	i1l3424
 10591  0667  3000               	movlw	0
 10592  0668  00F3               	movwf	___fladd@b+3
 10593  0669  3000               	movlw	0
 10594  066A  00F2               	movwf	___fladd@b+2
 10595  066B  3000               	movlw	0
 10596  066C  00F1               	movwf	___fladd@b+1
 10597  066D  3000               	movlw	0
 10598  066E  00F0               	movwf	___fladd@b
 10599  066F  087A               	movf	___fladd@bexp,w
 10600  0670  1903               	btfsc	3,2
 10601  0671  01F8               	clrf	___fladd@signs
 10602  0672                     i1l3424:	
 10603  0672  1C7A               	btfss	___fladd@bexp,0
 10604  0673  2E76               	goto	i1l3428
 10605  0674  17F2               	bsf	___fladd@b+2,7
 10606  0675  2E7B               	goto	i1l936
 10607  0676                     i1l3428:	
 10608  0676  307F               	movlw	127
 10609  0677  0020               	movlb	0	; select bank0
 10610  0678  00A0               	movwf	??___fladd
 10611  0679  0820               	movf	??___fladd,w
 10612  067A  05F2               	andwf	___fladd@b+2,f
 10613  067B                     i1l936:	
 10614  067B  367A               	lsrf	___fladd@bexp,w
 10615  067C  0020               	movlb	0	; select bank0
 10616  067D  00A0               	movwf	??___fladd
 10617  067E  0820               	movf	??___fladd,w
 10618  067F  00F3               	movwf	___fladd@b+3
 10619  0680  1FF8               	btfss	___fladd@signs,7
 10620  0681  0008               	return
 10621  0682  17F3               	bsf	___fladd@b+3,7
 10622  0683  0008               	return
 10623  0684                     __end_of___fladd:	
 10624                           
 10625                           	psect	text43
 10626  1448                     __ptext43:	
 10627 ;; *************** function _PIN_MANAGER_IOC *****************
 10628 ;; Defined at:
 10629 ;;		line 74 in file "mcc_generated_files/pin_manager.c"
 10630 ;; Parameters:    Size  Location     Type
 10631 ;;		None
 10632 ;; Auto vars:     Size  Location     Type
 10633 ;;		None
 10634 ;; Return value:  Size  Location     Type
 10635 ;;                  1    wreg      void 
 10636 ;; Registers used:
 10637 ;;		wreg, status,2, status,0, pclath, cstack
 10638 ;; Tracked objects:
 10639 ;;		On entry : 0/0
 10640 ;;		On exit  : 0/0
 10641 ;;		Unchanged: 0/0
 10642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10647 ;;Total ram usage:        0 bytes
 10648 ;; Hardware stack levels used:    1
 10649 ;; Hardware stack levels required when called:    4
 10650 ;; This function calls:
 10651 ;;		_IOCCF7_ISR
 10652 ;; This function is called by:
 10653 ;;		_INTERRUPT_InterruptManager
 10654 ;; This function uses a non-reentrant model
 10655 ;;
 10656                           
 10657                           
 10658                           ;psect for function _PIN_MANAGER_IOC
 10659  1448                     _PIN_MANAGER_IOC:	
 10660                           
 10661                           ;mcc_generated_files/pin_manager.c: 77:     if(IOCCFbits.IOCCF7 == 1)
 10662                           
 10663                           ;incstack = 0
 10664                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
 10665  1448  0027               	movlb	7	; select bank7
 10666  1449  1F99               	btfss	25,7	;volatile
 10667  144A  0008               	return
 10668                           
 10669                           ;mcc_generated_files/pin_manager.c: 78:     {;mcc_generated_files/pin_manager.c: 79:    
      +                               IOCCF7_ISR();
 10670  144B  3194  24BB         	fcall	_IOCCF7_ISR
 10671  144D  0008               	return
 10672  144E                     __end_of_PIN_MANAGER_IOC:	
 10673                           
 10674                           	psect	text44
 10675  14BB                     __ptext44:	
 10676 ;; *************** function _IOCCF7_ISR *****************
 10677 ;; Defined at:
 10678 ;;		line 86 in file "mcc_generated_files/pin_manager.c"
 10679 ;; Parameters:    Size  Location     Type
 10680 ;;		None
 10681 ;; Auto vars:     Size  Location     Type
 10682 ;;		None
 10683 ;; Return value:  Size  Location     Type
 10684 ;;                  1    wreg      void 
 10685 ;; Registers used:
 10686 ;;		wreg, status,2, status,0, pclath, cstack
 10687 ;; Tracked objects:
 10688 ;;		On entry : 0/0
 10689 ;;		On exit  : 0/0
 10690 ;;		Unchanged: 0/0
 10691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10695 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10696 ;;Total ram usage:        0 bytes
 10697 ;; Hardware stack levels used:    1
 10698 ;; Hardware stack levels required when called:    3
 10699 ;; This function calls:
 10700 ;;		Absolute function
 10701 ;;		_IOCCF7_DefaultInterruptHandler
 10702 ;;		_speedCalc
 10703 ;; This function is called by:
 10704 ;;		_PIN_MANAGER_IOC
 10705 ;; This function uses a non-reentrant model
 10706 ;;
 10707                           
 10708                           
 10709                           ;psect for function _IOCCF7_ISR
 10710  14BB                     _IOCCF7_ISR:	
 10711                           
 10712                           ;mcc_generated_files/pin_manager.c: 91:     if(IOCCF7_InterruptHandler)
 10713                           
 10714                           ;incstack = 0
 10715                           ; Regs used in _IOCCF7_ISR: [wreg+status,2+status,0+pclath+cstack]
 10716  14BB  0022               	movlb	2	; select bank2
 10717  14BC  085F               	movf	_IOCCF7_InterruptHandler^(0+256),w
 10718  14BD  0460               	iorwf	(_IOCCF7_InterruptHandler+1)^(0+256),w
 10719  14BE  1903               	btfsc	3,2
 10720  14BF  2CC5               	goto	i1l3522
 10721                           
 10722                           ;mcc_generated_files/pin_manager.c: 92:     {;mcc_generated_files/pin_manager.c: 93:    
      +                               IOCCF7_InterruptHandler();
 10723  14C0  0860               	movf	(_IOCCF7_InterruptHandler+1)^(0+256),w
 10724  14C1  008A               	movwf	10
 10725  14C2  085F               	movf	_IOCCF7_InterruptHandler^(0+256),w
 10726  14C3  000A               	callw
 10727  14C4  3194               	pagesel	$
 10728  14C5                     i1l3522:	
 10729                           
 10730                           ;mcc_generated_files/pin_manager.c: 95:     IOCCFbits.IOCCF7 = 0;
 10731  14C5  0027               	movlb	7	; select bank7
 10732  14C6  1399               	bcf	25,7	;volatile
 10733  14C7  0008               	return
 10734  14C8                     __end_of_IOCCF7_ISR:	
 10735                           
 10736                           	psect	text45
 10737  0002                     __ptext45:	
 10738 ;; *************** function _IOCCF7_DefaultInterruptHandler *****************
 10739 ;; Defined at:
 10740 ;;		line 108 in file "mcc_generated_files/pin_manager.c"
 10741 ;; Parameters:    Size  Location     Type
 10742 ;;		None
 10743 ;; Auto vars:     Size  Location     Type
 10744 ;;		None
 10745 ;; Return value:  Size  Location     Type
 10746 ;;                  1    wreg      void 
 10747 ;; Registers used:
 10748 ;;		None
 10749 ;; Tracked objects:
 10750 ;;		On entry : 0/0
 10751 ;;		On exit  : 0/0
 10752 ;;		Unchanged: 0/0
 10753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10758 ;;Total ram usage:        0 bytes
 10759 ;; Hardware stack levels used:    1
 10760 ;; This function calls:
 10761 ;;		Nothing
 10762 ;; This function is called by:
 10763 ;;		_PIN_MANAGER_Initialize
 10764 ;;		_IOCCF7_ISR
 10765 ;; This function uses a non-reentrant model
 10766 ;;
 10767                           
 10768                           
 10769                           ;psect for function _IOCCF7_DefaultInterruptHandler
 10770  0002                     _IOCCF7_DefaultInterruptHandler:	
 10771                           
 10772                           ;incstack = 0
 10773                           ; Regs used in _IOCCF7_DefaultInterruptHandler: []
 10774  0002  0008               	return
 10775  0003                     __end_of_IOCCF7_DefaultInterruptHandler:	
 10776                           
 10777                           	psect	text46
 10778  0DA3                     __ptext46:	
 10779 ;; *************** function _speedCalc *****************
 10780 ;; Defined at:
 10781 ;;		line 116 in file "main.c"
 10782 ;; Parameters:    Size  Location     Type
 10783 ;;		None
 10784 ;; Auto vars:     Size  Location     Type
 10785 ;;		None
 10786 ;; Return value:  Size  Location     Type
 10787 ;;                  1    wreg      void 
 10788 ;; Registers used:
 10789 ;;		wreg, status,2, status,0, pclath, cstack
 10790 ;; Tracked objects:
 10791 ;;		On entry : 0/0
 10792 ;;		On exit  : 0/0
 10793 ;;		Unchanged: 0/0
 10794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10796 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10798 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10799 ;;Total ram usage:        4 bytes
 10800 ;; Hardware stack levels used:    1
 10801 ;; Hardware stack levels required when called:    2
 10802 ;; This function calls:
 10803 ;;		___awmod
 10804 ;;		___fldiv
 10805 ;;		___flmul
 10806 ;;		___fltol
 10807 ;;		i1___awdiv
 10808 ;; This function is called by:
 10809 ;;		_main
 10810 ;;		_IOCCF7_ISR
 10811 ;; This function uses a non-reentrant model
 10812 ;;
 10813                           
 10814                           
 10815                           ;psect for function _speedCalc
 10816  0DA3                     _speedCalc:	
 10817                           
 10818                           ;main.c: 119:     rpm = ( ( 1000 / counter ) * 60 ) ;
 10819                           
 10820                           ;incstack = 0
 10821                           ; Regs used in _speedCalc: [wreg+status,2+status,0+pclath+cstack]
 10822  0DA3  3042               	movlw	66
 10823  0DA4  0020               	movlb	0	; select bank0
 10824  0DA5  00B0               	movwf	___flmul@b+3
 10825  0DA6  3070               	movlw	112
 10826  0DA7  00AF               	movwf	___flmul@b+2
 10827  0DA8  3000               	movlw	0
 10828  0DA9  00AE               	movwf	___flmul@b+1
 10829  0DAA  3000               	movlw	0
 10830  0DAB  00AD               	movwf	___flmul@b
 10831  0DAC  0022               	movlb	2	; select bank2
 10832  0DAD  084E               	movf	(_counter+3)^(0+256),w	;volatile
 10833  0DAE  00F3               	movwf	___fldiv@a+3
 10834  0DAF  084D               	movf	(_counter+2)^(0+256),w	;volatile
 10835  0DB0  00F2               	movwf	___fldiv@a+2
 10836  0DB1  084C               	movf	(_counter+1)^(0+256),w	;volatile
 10837  0DB2  00F1               	movwf	___fldiv@a+1
 10838  0DB3  084B               	movf	_counter^(0+256),w	;volatile
 10839  0DB4  00F0               	movwf	___fldiv@a
 10840  0DB5  3044               	movlw	68
 10841  0DB6  00F7               	movwf	___fldiv@b+3
 10842  0DB7  307A               	movlw	122
 10843  0DB8  00F6               	movwf	___fldiv@b+2
 10844  0DB9  3000               	movlw	0
 10845  0DBA  00F5               	movwf	___fldiv@b+1
 10846  0DBB  3000               	movlw	0
 10847  0DBC  00F4               	movwf	___fldiv@b
 10848  0DBD  3186  2684  318D   	fcall	___fldiv
 10849  0DC0  0873               	movf	?___fldiv+3,w
 10850  0DC1  0020               	movlb	0	; select bank0
 10851  0DC2  00B4               	movwf	___flmul@a+3
 10852  0DC3  0872               	movf	?___fldiv+2,w
 10853  0DC4  00B3               	movwf	___flmul@a+2
 10854  0DC5  0871               	movf	?___fldiv+1,w
 10855  0DC6  00B2               	movwf	___flmul@a+1
 10856  0DC7  0870               	movf	?___fldiv,w
 10857  0DC8  00B1               	movwf	___flmul@a
 10858  0DC9  3180  205A  318D   	fcall	___flmul
 10859  0DCC  0020               	movlb	0	; select bank0
 10860  0DCD  0830               	movf	?___flmul+3,w
 10861  0DCE  0022               	movlb	2	; select bank2
 10862  0DCF  00CA               	movwf	(_rpm+3)^(0+256)	;volatile
 10863  0DD0  0020               	movlb	0	; select bank0
 10864  0DD1  082F               	movf	?___flmul+2,w
 10865  0DD2  0022               	movlb	2	; select bank2
 10866  0DD3  00C9               	movwf	(_rpm+2)^(0+256)	;volatile
 10867  0DD4  0020               	movlb	0	; select bank0
 10868  0DD5  082E               	movf	?___flmul+1,w
 10869  0DD6  0022               	movlb	2	; select bank2
 10870  0DD7  00C8               	movwf	(_rpm+1)^(0+256)	;volatile
 10871  0DD8  0020               	movlb	0	; select bank0
 10872  0DD9  082D               	movf	?___flmul,w
 10873  0DDA  0022               	movlb	2	; select bank2
 10874  0DDB  00C7               	movwf	_rpm^(0+256)	;volatile
 10875                           
 10876                           ;main.c: 121:     speed = 2 * rpm * (0.06) ;
 10877  0DDC  3040               	movlw	64
 10878  0DDD  0020               	movlb	0	; select bank0
 10879  0DDE  00B0               	movwf	___flmul@b+3
 10880  0DDF  3000               	movlw	0
 10881  0DE0  00AF               	movwf	___flmul@b+2
 10882  0DE1  3000               	movlw	0
 10883  0DE2  00AE               	movwf	___flmul@b+1
 10884  0DE3  3000               	movlw	0
 10885  0DE4  00AD               	movwf	___flmul@b
 10886  0DE5  0022               	movlb	2	; select bank2
 10887  0DE6  084A               	movf	(_rpm+3)^(0+256),w	;volatile
 10888  0DE7  0020               	movlb	0	; select bank0
 10889  0DE8  00B4               	movwf	___flmul@a+3
 10890  0DE9  0022               	movlb	2	; select bank2
 10891  0DEA  0849               	movf	(_rpm+2)^(0+256),w	;volatile
 10892  0DEB  0020               	movlb	0	; select bank0
 10893  0DEC  00B3               	movwf	___flmul@a+2
 10894  0DED  0022               	movlb	2	; select bank2
 10895  0DEE  0848               	movf	(_rpm+1)^(0+256),w	;volatile
 10896  0DEF  0020               	movlb	0	; select bank0
 10897  0DF0  00B2               	movwf	___flmul@a+1
 10898  0DF1  0022               	movlb	2	; select bank2
 10899  0DF2  0847               	movf	_rpm^(0+256),w	;volatile
 10900  0DF3  0020               	movlb	0	; select bank0
 10901  0DF4  00B1               	movwf	___flmul@a
 10902  0DF5  3180  205A  318D   	fcall	___flmul
 10903  0DF8  0020               	movlb	0	; select bank0
 10904  0DF9  0830               	movf	?___flmul+3,w
 10905  0DFA  00DB               	movwf	_speedCalc$1328+3
 10906  0DFB  082F               	movf	?___flmul+2,w
 10907  0DFC  00DA               	movwf	_speedCalc$1328+2
 10908  0DFD  082E               	movf	?___flmul+1,w
 10909  0DFE  00D9               	movwf	_speedCalc$1328+1
 10910  0DFF  082D               	movf	?___flmul,w
 10911  0E00  00D8               	movwf	_speedCalc$1328
 10912                           
 10913                           ;main.c: 121:     speed = 2 * rpm * (0.06) ;
 10914  0E01  303D               	movlw	61
 10915  0E02  00B0               	movwf	___flmul@b+3
 10916  0E03  3075               	movlw	117
 10917  0E04  00AF               	movwf	___flmul@b+2
 10918  0E05  30C2               	movlw	194
 10919  0E06  00AE               	movwf	___flmul@b+1
 10920  0E07  308F               	movlw	143
 10921  0E08  00AD               	movwf	___flmul@b
 10922  0E09  085B               	movf	_speedCalc$1328+3,w
 10923  0E0A  00B4               	movwf	___flmul@a+3
 10924  0E0B  085A               	movf	_speedCalc$1328+2,w
 10925  0E0C  00B3               	movwf	___flmul@a+2
 10926  0E0D  0859               	movf	_speedCalc$1328+1,w
 10927  0E0E  00B2               	movwf	___flmul@a+1
 10928  0E0F  0858               	movf	_speedCalc$1328,w
 10929  0E10  00B1               	movwf	___flmul@a
 10930  0E11  3180  205A  318D   	fcall	___flmul
 10931  0E14  0020               	movlb	0	; select bank0
 10932  0E15  0830               	movf	?___flmul+3,w
 10933  0E16  0022               	movlb	2	; select bank2
 10934  0E17  00AF               	movwf	(_speed+3)^(0+256)	;volatile
 10935  0E18  0020               	movlb	0	; select bank0
 10936  0E19  082F               	movf	?___flmul+2,w
 10937  0E1A  0022               	movlb	2	; select bank2
 10938  0E1B  00AE               	movwf	(_speed+2)^(0+256)	;volatile
 10939  0E1C  0020               	movlb	0	; select bank0
 10940  0E1D  082E               	movf	?___flmul+1,w
 10941  0E1E  0022               	movlb	2	; select bank2
 10942  0E1F  00AD               	movwf	(_speed+1)^(0+256)	;volatile
 10943  0E20  0020               	movlb	0	; select bank0
 10944  0E21  082D               	movf	?___flmul,w
 10945  0E22  0022               	movlb	2	; select bank2
 10946  0E23  00AC               	movwf	_speed^(0+256)	;volatile
 10947                           
 10948                           ;main.c: 124:     speedHi = speed ;
 10949  0E24  082F               	movf	(_speed+3)^(0+256),w	;volatile
 10950  0E25  0020               	movlb	0	; select bank0
 10951  0E26  00CA               	movwf	___fltol@f1+3
 10952  0E27  0022               	movlb	2	; select bank2
 10953  0E28  082E               	movf	(_speed+2)^(0+256),w	;volatile
 10954  0E29  0020               	movlb	0	; select bank0
 10955  0E2A  00C9               	movwf	___fltol@f1+2
 10956  0E2B  0022               	movlb	2	; select bank2
 10957  0E2C  082D               	movf	(_speed+1)^(0+256),w	;volatile
 10958  0E2D  0020               	movlb	0	; select bank0
 10959  0E2E  00C8               	movwf	___fltol@f1+1
 10960  0E2F  0022               	movlb	2	; select bank2
 10961  0E30  082C               	movf	_speed^(0+256),w	;volatile
 10962  0E31  0020               	movlb	0	; select bank0
 10963  0E32  00C7               	movwf	___fltol@f1
 10964  0E33  3188  20AB  318D   	fcall	___fltol
 10965  0E36  0020               	movlb	0	; select bank0
 10966  0E37  0848               	movf	?___fltol+1,w
 10967  0E38  0022               	movlb	2	; select bank2
 10968  0E39  00BF               	movwf	(_speedHi+1)^(0+256)	;volatile
 10969  0E3A  0020               	movlb	0	; select bank0
 10970  0E3B  0847               	movf	?___fltol,w
 10971  0E3C  0022               	movlb	2	; select bank2
 10972  0E3D  00BE               	movwf	_speedHi^(0+256)	;volatile
 10973                           
 10974                           ;main.c: 125:     speedLo = ( (int)(speed*10.0) % 10 ) ;
 10975  0E3E  300A               	movlw	10
 10976  0E3F  0020               	movlb	0	; select bank0
 10977  0E40  00D2               	movwf	___awmod@divisor
 10978  0E41  3000               	movlw	0
 10979  0E42  00D3               	movwf	___awmod@divisor+1
 10980  0E43  0022               	movlb	2	; select bank2
 10981  0E44  082F               	movf	(_speed+3)^(0+256),w	;volatile
 10982  0E45  0020               	movlb	0	; select bank0
 10983  0E46  00B4               	movwf	___flmul@a+3
 10984  0E47  0022               	movlb	2	; select bank2
 10985  0E48  082E               	movf	(_speed+2)^(0+256),w	;volatile
 10986  0E49  0020               	movlb	0	; select bank0
 10987  0E4A  00B3               	movwf	___flmul@a+2
 10988  0E4B  0022               	movlb	2	; select bank2
 10989  0E4C  082D               	movf	(_speed+1)^(0+256),w	;volatile
 10990  0E4D  0020               	movlb	0	; select bank0
 10991  0E4E  00B2               	movwf	___flmul@a+1
 10992  0E4F  0022               	movlb	2	; select bank2
 10993  0E50  082C               	movf	_speed^(0+256),w	;volatile
 10994  0E51  0020               	movlb	0	; select bank0
 10995  0E52  00B1               	movwf	___flmul@a
 10996  0E53  3041               	movlw	65
 10997  0E54  00B0               	movwf	___flmul@b+3
 10998  0E55  3020               	movlw	32
 10999  0E56  00AF               	movwf	___flmul@b+2
 11000  0E57  3000               	movlw	0
 11001  0E58  00AE               	movwf	___flmul@b+1
 11002  0E59  3000               	movlw	0
 11003  0E5A  00AD               	movwf	___flmul@b
 11004  0E5B  3180  205A  318D   	fcall	___flmul
 11005  0E5E  0020               	movlb	0	; select bank0
 11006  0E5F  0830               	movf	?___flmul+3,w
 11007  0E60  00CA               	movwf	___fltol@f1+3
 11008  0E61  082F               	movf	?___flmul+2,w
 11009  0E62  00C9               	movwf	___fltol@f1+2
 11010  0E63  082E               	movf	?___flmul+1,w
 11011  0E64  00C8               	movwf	___fltol@f1+1
 11012  0E65  082D               	movf	?___flmul,w
 11013  0E66  00C7               	movwf	___fltol@f1
 11014  0E67  3188  20AB  318D   	fcall	___fltol
 11015  0E6A  0020               	movlb	0	; select bank0
 11016  0E6B  0848               	movf	?___fltol+1,w
 11017  0E6C  00D5               	movwf	___awmod@dividend+1
 11018  0E6D  0847               	movf	?___fltol,w
 11019  0E6E  00D4               	movwf	___awmod@dividend
 11020  0E6F  3197  2769  318D   	fcall	___awmod
 11021  0E72  0020               	movlb	0	; select bank0
 11022  0E73  0853               	movf	?___awmod+1,w
 11023  0E74  0022               	movlb	2	; select bank2
 11024  0E75  00C1               	movwf	(_speedLo+1)^(0+256)	;volatile
 11025  0E76  0020               	movlb	0	; select bank0
 11026  0E77  0852               	movf	?___awmod,w
 11027  0E78  0022               	movlb	2	; select bank2
 11028  0E79  00C0               	movwf	_speedLo^(0+256)	;volatile
 11029                           
 11030                           ;main.c: 128:     counter = 0 ;
 11031  0E7A  3000               	movlw	0
 11032  0E7B  00CE               	movwf	(_counter+3)^(0+256)	;volatile
 11033  0E7C  3000               	movlw	0
 11034  0E7D  00CD               	movwf	(_counter+2)^(0+256)	;volatile
 11035  0E7E  3000               	movlw	0
 11036  0E7F  00CC               	movwf	(_counter+1)^(0+256)	;volatile
 11037  0E80  3000               	movlw	0
 11038  0E81  00CB               	movwf	_counter^(0+256)	;volatile
 11039                           
 11040                           ;main.c: 129:     distance = distance + 2 ;
 11041  0E82  0020               	movlb	0	; select bank0
 11042  0E83  0864               	movf	_distance,w	;volatile
 11043  0E84  3E02               	addlw	2
 11044  0E85  00E4               	movwf	_distance	;volatile
 11045  0E86  3000               	movlw	0
 11046  0E87  3D65               	addwfc	_distance+1,w	;volatile
 11047  0E88  00E5               	movwf	_distance+1	;volatile
 11048                           
 11049                           ;main.c: 131:     distLo = distance % 1000 ;
 11050  0E89  30E8               	movlw	232
 11051  0E8A  00D2               	movwf	___awmod@divisor
 11052  0E8B  3003               	movlw	3
 11053  0E8C  00D3               	movwf	___awmod@divisor+1
 11054  0E8D  0865               	movf	_distance+1,w	;volatile
 11055  0E8E  00D5               	movwf	___awmod@dividend+1
 11056  0E8F  0864               	movf	_distance,w	;volatile
 11057  0E90  00D4               	movwf	___awmod@dividend
 11058  0E91  3197  2769  318D   	fcall	___awmod
 11059  0E94  0020               	movlb	0	; select bank0
 11060  0E95  0853               	movf	?___awmod+1,w
 11061  0E96  0022               	movlb	2	; select bank2
 11062  0E97  00C3               	movwf	(_distLo+1)^(0+256)	;volatile
 11063  0E98  0020               	movlb	0	; select bank0
 11064  0E99  0852               	movf	?___awmod,w
 11065  0E9A  0022               	movlb	2	; select bank2
 11066  0E9B  00C2               	movwf	_distLo^(0+256)	;volatile
 11067                           
 11068                           ;main.c: 132:     distHi = distance / 1000 ;
 11069  0E9C  30E8               	movlw	232
 11070  0E9D  00F0               	movwf	i1___awdiv@divisor
 11071  0E9E  3003               	movlw	3
 11072  0E9F  00F1               	movwf	i1___awdiv@divisor+1
 11073  0EA0  0020               	movlb	0	; select bank0
 11074  0EA1  0865               	movf	_distance+1,w	;volatile
 11075  0EA2  00F3               	movwf	i1___awdiv@dividend+1
 11076  0EA3  0864               	movf	_distance,w	;volatile
 11077  0EA4  00F2               	movwf	i1___awdiv@dividend
 11078  0EA5  3197  27AF         	fcall	i1___awdiv
 11079  0EA7  0871               	movf	?i1___awdiv+1,w
 11080  0EA8  0022               	movlb	2	; select bank2
 11081  0EA9  00C5               	movwf	(_distHi+1)^(0+256)	;volatile
 11082  0EAA  0870               	movf	?i1___awdiv,w
 11083  0EAB  00C4               	movwf	_distHi^(0+256)	;volatile
 11084  0EAC  0008               	return
 11085  0EAD                     __end_of_speedCalc:	
 11086                           
 11087                           	psect	text47
 11088  17AF                     __ptext47:	
 11089 ;; *************** function i1___awdiv *****************
 11090 ;; Defined at:
 11091 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
 11092 ;; Parameters:    Size  Location     Type
 11093 ;;  divisor         2    0[COMMON] int 
 11094 ;;  dividend        2    2[COMMON] int 
 11095 ;; Auto vars:     Size  Location     Type
 11096 ;;  __awdiv         2    7[COMMON] int 
 11097 ;;  __awdiv         1    6[COMMON] unsigned char 
 11098 ;;  __awdiv         1    5[COMMON] unsigned char 
 11099 ;; Return value:  Size  Location     Type
 11100 ;;                  2    0[COMMON] int 
 11101 ;; Registers used:
 11102 ;;		wreg, status,2, status,0
 11103 ;; Tracked objects:
 11104 ;;		On entry : 0/0
 11105 ;;		On exit  : 0/0
 11106 ;;		Unchanged: 0/0
 11107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11108 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11109 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11110 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11111 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11112 ;;Total ram usage:        9 bytes
 11113 ;; Hardware stack levels used:    1
 11114 ;; This function calls:
 11115 ;;		Nothing
 11116 ;; This function is called by:
 11117 ;;		_speedCalc
 11118 ;; This function uses a non-reentrant model
 11119 ;;
 11120                           
 11121                           
 11122                           ;psect for function i1___awdiv
 11123  17AF                     i1___awdiv:	
 11124                           
 11125                           ;incstack = 0
 11126                           ; Regs used in i1___awdiv: [wreg+status,2+status,0]
 11127  17AF  01F6               	clrf	i1___awdiv@sign
 11128  17B0  1FF1               	btfss	i1___awdiv@divisor+1,7
 11129  17B1  2FB9               	goto	i1l3140
 11130  17B2  09F0               	comf	i1___awdiv@divisor,f
 11131  17B3  09F1               	comf	i1___awdiv@divisor+1,f
 11132  17B4  0AF0               	incf	i1___awdiv@divisor,f
 11133  17B5  1903               	skipnz
 11134  17B6  0AF1               	incf	i1___awdiv@divisor+1,f
 11135  17B7  01F6               	clrf	i1___awdiv@sign
 11136  17B8  0AF6               	incf	i1___awdiv@sign,f
 11137  17B9                     i1l3140:	
 11138  17B9  1FF3               	btfss	i1___awdiv@dividend+1,7
 11139  17BA  2FC4               	goto	i1l3146
 11140  17BB  09F2               	comf	i1___awdiv@dividend,f
 11141  17BC  09F3               	comf	i1___awdiv@dividend+1,f
 11142  17BD  0AF2               	incf	i1___awdiv@dividend,f
 11143  17BE  1903               	skipnz
 11144  17BF  0AF3               	incf	i1___awdiv@dividend+1,f
 11145  17C0  3001               	movlw	1
 11146  17C1  00F4               	movwf	??i1___awdiv
 11147  17C2  0874               	movf	??i1___awdiv,w
 11148  17C3  06F6               	xorwf	i1___awdiv@sign,f
 11149  17C4                     i1l3146:	
 11150  17C4  01F7               	clrf	i1___awdiv@quotient
 11151  17C5  01F8               	clrf	i1___awdiv@quotient+1
 11152  17C6  0870               	movf	i1___awdiv@divisor,w
 11153  17C7  0471               	iorwf	i1___awdiv@divisor+1,w
 11154  17C8  1903               	btfsc	3,2
 11155  17C9  2FF3               	goto	i1l3168
 11156  17CA  01F5               	clrf	i1___awdiv@counter
 11157  17CB  0AF5               	incf	i1___awdiv@counter,f
 11158  17CC                     i1l3156:	
 11159  17CC  1BF1               	btfsc	i1___awdiv@divisor+1,7
 11160  17CD  2FD8               	goto	i1l3158
 11161  17CE  3001               	movlw	1
 11162  17CF                     u390_25:	
 11163  17CF  35F0               	lslf	i1___awdiv@divisor,f
 11164  17D0  0DF1               	rlf	i1___awdiv@divisor+1,f
 11165  17D1  0B89               	decfsz	9,f
 11166  17D2  2FCF               	goto	u390_25
 11167  17D3  3001               	movlw	1
 11168  17D4  00F4               	movwf	??i1___awdiv
 11169  17D5  0874               	movf	??i1___awdiv,w
 11170  17D6  07F5               	addwf	i1___awdiv@counter,f
 11171  17D7  2FCC               	goto	i1l3156
 11172  17D8                     i1l3158:	
 11173  17D8  3001               	movlw	1
 11174  17D9                     u392_25:	
 11175  17D9  35F7               	lslf	i1___awdiv@quotient,f
 11176  17DA  0DF8               	rlf	i1___awdiv@quotient+1,f
 11177  17DB  0B89               	decfsz	9,f
 11178  17DC  2FD9               	goto	u392_25
 11179  17DD  0871               	movf	i1___awdiv@divisor+1,w
 11180  17DE  0273               	subwf	i1___awdiv@dividend+1,w
 11181  17DF  1D03               	skipz
 11182  17E0  2FE3               	goto	u393_25
 11183  17E1  0870               	movf	i1___awdiv@divisor,w
 11184  17E2  0272               	subwf	i1___awdiv@dividend,w
 11185  17E3                     u393_25:	
 11186  17E3  1C03               	skipc
 11187  17E4  2FEA               	goto	i1l3164
 11188  17E5  0870               	movf	i1___awdiv@divisor,w
 11189  17E6  02F2               	subwf	i1___awdiv@dividend,f
 11190  17E7  0871               	movf	i1___awdiv@divisor+1,w
 11191  17E8  3BF3               	subwfb	i1___awdiv@dividend+1,f
 11192  17E9  1477               	bsf	i1___awdiv@quotient,0
 11193  17EA                     i1l3164:	
 11194  17EA  3001               	movlw	1
 11195  17EB                     u394_25:	
 11196  17EB  36F1               	lsrf	i1___awdiv@divisor+1,f
 11197  17EC  0CF0               	rrf	i1___awdiv@divisor,f
 11198  17ED  0B89               	decfsz	9,f
 11199  17EE  2FEB               	goto	u394_25
 11200  17EF  3001               	movlw	1
 11201  17F0  02F5               	subwf	i1___awdiv@counter,f
 11202  17F1  1D03               	btfss	3,2
 11203  17F2  2FD8               	goto	i1l3158
 11204  17F3                     i1l3168:	
 11205  17F3  0876               	movf	i1___awdiv@sign,w
 11206  17F4  1903               	btfsc	3,2
 11207  17F5  2FFB               	goto	i1l3172
 11208  17F6  09F7               	comf	i1___awdiv@quotient,f
 11209  17F7  09F8               	comf	i1___awdiv@quotient+1,f
 11210  17F8  0AF7               	incf	i1___awdiv@quotient,f
 11211  17F9  1903               	skipnz
 11212  17FA  0AF8               	incf	i1___awdiv@quotient+1,f
 11213  17FB                     i1l3172:	
 11214  17FB  0878               	movf	i1___awdiv@quotient+1,w
 11215  17FC  00F1               	movwf	?i1___awdiv+1
 11216  17FD  0877               	movf	i1___awdiv@quotient,w
 11217  17FE  00F0               	movwf	?i1___awdiv
 11218  17FF  0008               	return
 11219  1800                     __end_ofi1___awdiv:	
 11220                           
 11221                           	psect	text48
 11222  08AB                     __ptext48:	
 11223 ;; *************** function ___fltol *****************
 11224 ;; Defined at:
 11225 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
 11226 ;; Parameters:    Size  Location     Type
 11227 ;;  f1              4   39[BANK0 ] int 
 11228 ;; Auto vars:     Size  Location     Type
 11229 ;;  exp1            1   49[BANK0 ] unsigned char 
 11230 ;;  sign1           1   48[BANK0 ] unsigned char 
 11231 ;; Return value:  Size  Location     Type
 11232 ;;                  4   39[BANK0 ] long 
 11233 ;; Registers used:
 11234 ;;		wreg, status,2, status,0
 11235 ;; Tracked objects:
 11236 ;;		On entry : 0/0
 11237 ;;		On exit  : 0/0
 11238 ;;		Unchanged: 0/0
 11239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11240 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11241 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11242 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11243 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11244 ;;Total ram usage:       11 bytes
 11245 ;; Hardware stack levels used:    1
 11246 ;; This function calls:
 11247 ;;		Nothing
 11248 ;; This function is called by:
 11249 ;;		_speedCalc
 11250 ;; This function uses a non-reentrant model
 11251 ;;
 11252                           
 11253                           
 11254                           ;psect for function ___fltol
 11255  08AB                     ___fltol:	
 11256                           
 11257                           ;incstack = 0
 11258                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 11259  08AB  1003               	clrc
 11260  08AC  0020               	movlb	0	; select bank0
 11261  08AD  0D49               	rlf	___fltol@f1+2,w
 11262  08AE  0D4A               	rlf	___fltol@f1+3,w
 11263  08AF  00CB               	movwf	??___fltol
 11264  08B0  084B               	movf	??___fltol,w
 11265  08B1  00D1               	movwf	___fltol@exp1
 11266  08B2  0851               	movf	___fltol@exp1,w
 11267  08B3  1D03               	btfss	3,2
 11268  08B4  28BE               	goto	i1l2822
 11269  08B5                     i1l2818:	
 11270  08B5  3000               	movlw	0
 11271  08B6  00CA               	movwf	?___fltol+3
 11272  08B7  3000               	movlw	0
 11273  08B8  00C9               	movwf	?___fltol+2
 11274  08B9  3000               	movlw	0
 11275  08BA  00C8               	movwf	?___fltol+1
 11276  08BB  3000               	movlw	0
 11277  08BC  00C7               	movwf	?___fltol
 11278  08BD  0008               	return
 11279  08BE                     i1l2822:	
 11280  08BE  0847               	movf	___fltol@f1,w
 11281  08BF  00CB               	movwf	??___fltol
 11282  08C0  0848               	movf	___fltol@f1+1,w
 11283  08C1  00CC               	movwf	??___fltol+1
 11284  08C2  0849               	movf	___fltol@f1+2,w
 11285  08C3  00CD               	movwf	??___fltol+2
 11286  08C4  084A               	movf	___fltol@f1+3,w
 11287  08C5  00CE               	movwf	??___fltol+3
 11288  08C6  301F               	movlw	31
 11289  08C7                     u323_25:	
 11290  08C7  36CE               	lsrf	??___fltol+3,f
 11291  08C8  0CCD               	rrf	??___fltol+2,f
 11292  08C9  0CCC               	rrf	??___fltol+1,f
 11293  08CA  0CCB               	rrf	??___fltol,f
 11294  08CB  0B89               	decfsz	9,f
 11295  08CC  28C7               	goto	u323_25
 11296  08CD  084B               	movf	??___fltol,w
 11297  08CE  00CF               	movwf	??___fltol+4
 11298  08CF  084F               	movf	??___fltol+4,w
 11299  08D0  00D0               	movwf	___fltol@sign1
 11300  08D1  17C9               	bsf	___fltol@f1+2,7
 11301  08D2  30FF               	movlw	255
 11302  08D3  05C7               	andwf	___fltol@f1,f
 11303  08D4  30FF               	movlw	255
 11304  08D5  05C8               	andwf	___fltol@f1+1,f
 11305  08D6  30FF               	movlw	255
 11306  08D7  05C9               	andwf	___fltol@f1+2,f
 11307  08D8  3000               	movlw	0
 11308  08D9  05CA               	andwf	___fltol@f1+3,f
 11309  08DA  3096               	movlw	150
 11310  08DB  02D1               	subwf	___fltol@exp1,f
 11311  08DC  1FD1               	btfss	___fltol@exp1,7
 11312  08DD  28F1               	goto	i1l2840
 11313  08DE  0851               	movf	___fltol@exp1,w
 11314  08DF  3A80               	xorlw	128
 11315  08E0  3E97               	addlw	151
 11316  08E1  1C03               	btfss	3,0
 11317  08E2  28B5               	goto	i1l2818
 11318  08E3                     i1l2838:	
 11319  08E3  3001               	movlw	1
 11320  08E4                     u326_25:	
 11321  08E4  36CA               	lsrf	___fltol@f1+3,f
 11322  08E5  0CC9               	rrf	___fltol@f1+2,f
 11323  08E6  0CC8               	rrf	___fltol@f1+1,f
 11324  08E7  0CC7               	rrf	___fltol@f1,f
 11325  08E8  0B89               	decfsz	9,f
 11326  08E9  28E4               	goto	u326_25
 11327  08EA  3001               	movlw	1
 11328  08EB  00CB               	movwf	??___fltol
 11329  08EC  084B               	movf	??___fltol,w
 11330  08ED  07D1               	addwf	___fltol@exp1,f
 11331  08EE  1903               	btfsc	3,2
 11332  08EF  2902               	goto	i1l2848
 11333  08F0  28E3               	goto	i1l2838
 11334  08F1                     i1l2840:	
 11335  08F1  3020               	movlw	32
 11336  08F2  0251               	subwf	___fltol@exp1,w
 11337  08F3  1803               	btfsc	3,0
 11338  08F4  28B5               	goto	i1l2818
 11339  08F5                     i1l794:	
 11340  08F5  0851               	movf	___fltol@exp1,w
 11341  08F6  1903               	btfsc	3,2
 11342  08F7  2902               	goto	i1l2848
 11343  08F8  3001               	movlw	1
 11344  08F9                     u329_25:	
 11345  08F9  35C7               	lslf	___fltol@f1,f
 11346  08FA  0DC8               	rlf	___fltol@f1+1,f
 11347  08FB  0DC9               	rlf	___fltol@f1+2,f
 11348  08FC  0DCA               	rlf	___fltol@f1+3,f
 11349  08FD  0B89               	decfsz	9,f
 11350  08FE  28F9               	goto	u329_25
 11351  08FF  3001               	movlw	1
 11352  0900  02D1               	subwf	___fltol@exp1,f
 11353  0901  28F5               	goto	i1l794
 11354  0902                     i1l2848:	
 11355  0902  0850               	movf	___fltol@sign1,w
 11356  0903  1903               	btfsc	3,2
 11357  0904  0008               	return
 11358  0905  09C7               	comf	___fltol@f1,f
 11359  0906  09C8               	comf	___fltol@f1+1,f
 11360  0907  09C9               	comf	___fltol@f1+2,f
 11361  0908  09CA               	comf	___fltol@f1+3,f
 11362  0909  0AC7               	incf	___fltol@f1,f
 11363  090A  1903               	skipnz
 11364  090B  0AC8               	incf	___fltol@f1+1,f
 11365  090C  1903               	skipnz
 11366  090D  0AC9               	incf	___fltol@f1+2,f
 11367  090E  1903               	skipnz
 11368  090F  0ACA               	incf	___fltol@f1+3,f
 11369  0910  0008               	return
 11370  0911                     __end_of___fltol:	
 11371                           
 11372                           	psect	text49
 11373  005A                     __ptext49:	
 11374 ;; *************** function ___flmul *****************
 11375 ;; Defined at:
 11376 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
 11377 ;; Parameters:    Size  Location     Type
 11378 ;;  b               4   13[BANK0 ] long 
 11379 ;;  a               4   17[BANK0 ] long 
 11380 ;; Auto vars:     Size  Location     Type
 11381 ;;  prod            4   33[BANK0 ] struct .
 11382 ;;  grs             4   27[BANK0 ] unsigned long 
 11383 ;;  temp            2   37[BANK0 ] struct .
 11384 ;;  bexp            1   32[BANK0 ] unsigned char 
 11385 ;;  aexp            1   31[BANK0 ] unsigned char 
 11386 ;;  sign            1   26[BANK0 ] unsigned char 
 11387 ;; Return value:  Size  Location     Type
 11388 ;;                  4   13[BANK0 ] unsigned char 
 11389 ;; Registers used:
 11390 ;;		wreg, status,2, status,0, pclath, cstack
 11391 ;; Tracked objects:
 11392 ;;		On entry : 0/0
 11393 ;;		On exit  : 0/0
 11394 ;;		Unchanged: 0/0
 11395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11396 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11397 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11398 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11399 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11400 ;;Total ram usage:       26 bytes
 11401 ;; Hardware stack levels used:    1
 11402 ;; Hardware stack levels required when called:    1
 11403 ;; This function calls:
 11404 ;;		__Umul8_16
 11405 ;; This function is called by:
 11406 ;;		_speedCalc
 11407 ;; This function uses a non-reentrant model
 11408 ;;
 11409                           
 11410                           
 11411                           ;psect for function ___flmul
 11412  005A                     ___flmul:	
 11413                           
 11414                           ;incstack = 0
 11415                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 11416  005A  0020               	movlb	0	; select bank0
 11417  005B  0830               	movf	___flmul@b+3,w
 11418  005C  3980               	andlw	128
 11419  005D  00B5               	movwf	??___flmul
 11420  005E  0835               	movf	??___flmul,w
 11421  005F  00BA               	movwf	___flmul@sign
 11422  0060  3530               	lslf	___flmul@b+3,w
 11423  0061  00B5               	movwf	??___flmul
 11424  0062  0835               	movf	??___flmul,w
 11425  0063  00C0               	movwf	___flmul@bexp
 11426  0064  1BAF               	btfsc	___flmul@b+2,7
 11427  0065  1440               	bsf	___flmul@bexp,0
 11428  0066  0840               	movf	___flmul@bexp,w
 11429  0067  1903               	btfsc	3,2
 11430  0068  2876               	goto	i1l3008
 11431  0069  0A40               	incf	___flmul@bexp,w
 11432  006A  1D03               	btfss	3,2
 11433  006B  2874               	goto	i1l3006
 11434  006C  3000               	movlw	0
 11435  006D  00B0               	movwf	___flmul@b+3
 11436  006E  3000               	movlw	0
 11437  006F  00AF               	movwf	___flmul@b+2
 11438  0070  3000               	movlw	0
 11439  0071  00AE               	movwf	___flmul@b+1
 11440  0072  3000               	movlw	0
 11441  0073  00AD               	movwf	___flmul@b
 11442  0074                     i1l3006:	
 11443  0074  17AF               	bsf	___flmul@b+2,7
 11444  0075  287E               	goto	i1l3010
 11445  0076                     i1l3008:	
 11446  0076  3000               	movlw	0
 11447  0077  00B0               	movwf	___flmul@b+3
 11448  0078  3000               	movlw	0
 11449  0079  00AF               	movwf	___flmul@b+2
 11450  007A  3000               	movlw	0
 11451  007B  00AE               	movwf	___flmul@b+1
 11452  007C  3000               	movlw	0
 11453  007D  00AD               	movwf	___flmul@b
 11454  007E                     i1l3010:	
 11455  007E  0834               	movf	___flmul@a+3,w
 11456  007F  3980               	andlw	128
 11457  0080  00B5               	movwf	??___flmul
 11458  0081  0835               	movf	??___flmul,w
 11459  0082  06BA               	xorwf	___flmul@sign,f
 11460  0083  3534               	lslf	___flmul@a+3,w
 11461  0084  00B5               	movwf	??___flmul
 11462  0085  0835               	movf	??___flmul,w
 11463  0086  00BF               	movwf	___flmul@aexp
 11464  0087  1BB3               	btfsc	___flmul@a+2,7
 11465  0088  143F               	bsf	___flmul@aexp,0
 11466  0089  083F               	movf	___flmul@aexp,w
 11467  008A  1903               	btfsc	3,2
 11468  008B  2899               	goto	i1l3026
 11469  008C  0A3F               	incf	___flmul@aexp,w
 11470  008D  1D03               	btfss	3,2
 11471  008E  2897               	goto	i1l3024
 11472  008F  3000               	movlw	0
 11473  0090  00B4               	movwf	___flmul@a+3
 11474  0091  3000               	movlw	0
 11475  0092  00B3               	movwf	___flmul@a+2
 11476  0093  3000               	movlw	0
 11477  0094  00B2               	movwf	___flmul@a+1
 11478  0095  3000               	movlw	0
 11479  0096  00B1               	movwf	___flmul@a
 11480  0097                     i1l3024:	
 11481  0097  17B3               	bsf	___flmul@a+2,7
 11482  0098  28A1               	goto	i1l3028
 11483  0099                     i1l3026:	
 11484  0099  3000               	movlw	0
 11485  009A  00B4               	movwf	___flmul@a+3
 11486  009B  3000               	movlw	0
 11487  009C  00B3               	movwf	___flmul@a+2
 11488  009D  3000               	movlw	0
 11489  009E  00B2               	movwf	___flmul@a+1
 11490  009F  3000               	movlw	0
 11491  00A0  00B1               	movwf	___flmul@a
 11492  00A1                     i1l3028:	
 11493  00A1  083F               	movf	___flmul@aexp,w
 11494  00A2  1D03               	btfss	3,2
 11495  00A3  0840               	movf	___flmul@bexp,w
 11496  00A4  1D03               	btfss	3,2
 11497  00A5  28AF               	goto	i1l3036
 11498  00A6  3000               	movlw	0
 11499  00A7  00B0               	movwf	?___flmul+3
 11500  00A8  3000               	movlw	0
 11501  00A9  00AF               	movwf	?___flmul+2
 11502  00AA  3000               	movlw	0
 11503  00AB  00AE               	movwf	?___flmul+1
 11504  00AC  3000               	movlw	0
 11505  00AD  00AD               	movwf	?___flmul
 11506  00AE  0008               	return
 11507  00AF                     i1l3036:	
 11508  00AF  082D               	movf	___flmul@b,w
 11509  00B0  00B5               	movwf	??___flmul
 11510  00B1  0835               	movf	??___flmul,w
 11511  00B2  00F0               	movwf	__Umul8_16@multiplicand
 11512  00B3  0833               	movf	___flmul@a+2,w
 11513  00B4  3195  25A0  3180   	fcall	__Umul8_16
 11514  00B7  0871               	movf	?__Umul8_16+1,w
 11515  00B8  0020               	movlb	0	; select bank0
 11516  00B9  00C6               	movwf	___flmul@temp+1
 11517  00BA  0870               	movf	?__Umul8_16,w
 11518  00BB  00C5               	movwf	___flmul@temp
 11519  00BC  0845               	movf	___flmul@temp,w
 11520  00BD  00B5               	movwf	??___flmul
 11521  00BE  01B6               	clrf	??___flmul+1
 11522  00BF  01B7               	clrf	??___flmul+2
 11523  00C0  01B8               	clrf	??___flmul+3
 11524  00C1  0838               	movf	??___flmul+3,w
 11525  00C2  00BE               	movwf	___flmul@grs+3
 11526  00C3  0837               	movf	??___flmul+2,w
 11527  00C4  00BD               	movwf	___flmul@grs+2
 11528  00C5  0836               	movf	??___flmul+1,w
 11529  00C6  00BC               	movwf	___flmul@grs+1
 11530  00C7  0835               	movf	??___flmul,w
 11531  00C8  00BB               	movwf	___flmul@grs
 11532  00C9  0846               	movf	___flmul@temp+1,w
 11533  00CA  00B5               	movwf	??___flmul
 11534  00CB  01B6               	clrf	??___flmul+1
 11535  00CC  01B7               	clrf	??___flmul+2
 11536  00CD  01B8               	clrf	??___flmul+3
 11537  00CE  0838               	movf	??___flmul+3,w
 11538  00CF  00C4               	movwf	___flmul@prod+3
 11539  00D0  0837               	movf	??___flmul+2,w
 11540  00D1  00C3               	movwf	___flmul@prod+2
 11541  00D2  0836               	movf	??___flmul+1,w
 11542  00D3  00C2               	movwf	___flmul@prod+1
 11543  00D4  0835               	movf	??___flmul,w
 11544  00D5  00C1               	movwf	___flmul@prod
 11545  00D6  082E               	movf	___flmul@b+1,w
 11546  00D7  00B5               	movwf	??___flmul
 11547  00D8  0835               	movf	??___flmul,w
 11548  00D9  00F0               	movwf	__Umul8_16@multiplicand
 11549  00DA  0832               	movf	___flmul@a+1,w
 11550  00DB  3195  25A0  3180   	fcall	__Umul8_16
 11551  00DE  0871               	movf	?__Umul8_16+1,w
 11552  00DF  0020               	movlb	0	; select bank0
 11553  00E0  00C6               	movwf	___flmul@temp+1
 11554  00E1  0870               	movf	?__Umul8_16,w
 11555  00E2  00C5               	movwf	___flmul@temp
 11556  00E3  0845               	movf	___flmul@temp,w
 11557  00E4  00B5               	movwf	??___flmul
 11558  00E5  01B6               	clrf	??___flmul+1
 11559  00E6  01B7               	clrf	??___flmul+2
 11560  00E7  01B8               	clrf	??___flmul+3
 11561  00E8  0835               	movf	??___flmul,w
 11562  00E9  07BB               	addwf	___flmul@grs,f
 11563  00EA  0836               	movf	??___flmul+1,w
 11564  00EB  3DBC               	addwfc	___flmul@grs+1,f
 11565  00EC  0837               	movf	??___flmul+2,w
 11566  00ED  3DBD               	addwfc	___flmul@grs+2,f
 11567  00EE  0838               	movf	??___flmul+3,w
 11568  00EF  3DBE               	addwfc	___flmul@grs+3,f
 11569  00F0  0846               	movf	___flmul@temp+1,w
 11570  00F1  00B5               	movwf	??___flmul
 11571  00F2  01B6               	clrf	??___flmul+1
 11572  00F3  01B7               	clrf	??___flmul+2
 11573  00F4  01B8               	clrf	??___flmul+3
 11574  00F5  0835               	movf	??___flmul,w
 11575  00F6  07C1               	addwf	___flmul@prod,f
 11576  00F7  0836               	movf	??___flmul+1,w
 11577  00F8  3DC2               	addwfc	___flmul@prod+1,f
 11578  00F9  0837               	movf	??___flmul+2,w
 11579  00FA  3DC3               	addwfc	___flmul@prod+2,f
 11580  00FB  0838               	movf	??___flmul+3,w
 11581  00FC  3DC4               	addwfc	___flmul@prod+3,f
 11582  00FD  082F               	movf	___flmul@b+2,w
 11583  00FE  00B5               	movwf	??___flmul
 11584  00FF  0835               	movf	??___flmul,w
 11585  0100  00F0               	movwf	__Umul8_16@multiplicand
 11586  0101  0831               	movf	___flmul@a,w
 11587  0102  3195  25A0  3180   	fcall	__Umul8_16
 11588  0105  0871               	movf	?__Umul8_16+1,w
 11589  0106  0020               	movlb	0	; select bank0
 11590  0107  00C6               	movwf	___flmul@temp+1
 11591  0108  0870               	movf	?__Umul8_16,w
 11592  0109  00C5               	movwf	___flmul@temp
 11593  010A  0845               	movf	___flmul@temp,w
 11594  010B  00B5               	movwf	??___flmul
 11595  010C  01B6               	clrf	??___flmul+1
 11596  010D  01B7               	clrf	??___flmul+2
 11597  010E  01B8               	clrf	??___flmul+3
 11598  010F  0835               	movf	??___flmul,w
 11599  0110  07BB               	addwf	___flmul@grs,f
 11600  0111  0836               	movf	??___flmul+1,w
 11601  0112  3DBC               	addwfc	___flmul@grs+1,f
 11602  0113  0837               	movf	??___flmul+2,w
 11603  0114  3DBD               	addwfc	___flmul@grs+2,f
 11604  0115  0838               	movf	??___flmul+3,w
 11605  0116  3DBE               	addwfc	___flmul@grs+3,f
 11606  0117  0846               	movf	___flmul@temp+1,w
 11607  0118  00B5               	movwf	??___flmul
 11608  0119  01B6               	clrf	??___flmul+1
 11609  011A  01B7               	clrf	??___flmul+2
 11610  011B  01B8               	clrf	??___flmul+3
 11611  011C  0835               	movf	??___flmul,w
 11612  011D  07C1               	addwf	___flmul@prod,f
 11613  011E  0836               	movf	??___flmul+1,w
 11614  011F  3DC2               	addwfc	___flmul@prod+1,f
 11615  0120  0837               	movf	??___flmul+2,w
 11616  0121  3DC3               	addwfc	___flmul@prod+2,f
 11617  0122  0838               	movf	??___flmul+3,w
 11618  0123  3DC4               	addwfc	___flmul@prod+3,f
 11619  0124  3008               	movlw	8
 11620  0125                     u369_25:	
 11621  0125  35BB               	lslf	___flmul@grs,f
 11622  0126  0DBC               	rlf	___flmul@grs+1,f
 11623  0127  0DBD               	rlf	___flmul@grs+2,f
 11624  0128  0DBE               	rlf	___flmul@grs+3,f
 11625  0129  0B89               	decfsz	9,f
 11626  012A  2925               	goto	u369_25
 11627  012B  082E               	movf	___flmul@b+1,w
 11628  012C  00B5               	movwf	??___flmul
 11629  012D  0835               	movf	??___flmul,w
 11630  012E  00F0               	movwf	__Umul8_16@multiplicand
 11631  012F  0831               	movf	___flmul@a,w
 11632  0130  3195  25A0  3180   	fcall	__Umul8_16
 11633  0133  0871               	movf	?__Umul8_16+1,w
 11634  0134  0020               	movlb	0	; select bank0
 11635  0135  00C6               	movwf	___flmul@temp+1
 11636  0136  0870               	movf	?__Umul8_16,w
 11637  0137  00C5               	movwf	___flmul@temp
 11638  0138  0845               	movf	___flmul@temp,w
 11639  0139  07BB               	addwf	___flmul@grs,f
 11640  013A  0846               	movf	___flmul@temp+1,w
 11641  013B  3DBC               	addwfc	___flmul@grs+1,f
 11642  013C  3000               	movlw	0
 11643  013D  3DBD               	addwfc	___flmul@grs+2,f
 11644  013E  3DBE               	addwfc	___flmul@grs+3,f
 11645  013F  082D               	movf	___flmul@b,w
 11646  0140  00B5               	movwf	??___flmul
 11647  0141  0835               	movf	??___flmul,w
 11648  0142  00F0               	movwf	__Umul8_16@multiplicand
 11649  0143  0832               	movf	___flmul@a+1,w
 11650  0144  3195  25A0  3180   	fcall	__Umul8_16
 11651  0147  0871               	movf	?__Umul8_16+1,w
 11652  0148  0020               	movlb	0	; select bank0
 11653  0149  00C6               	movwf	___flmul@temp+1
 11654  014A  0870               	movf	?__Umul8_16,w
 11655  014B  00C5               	movwf	___flmul@temp
 11656  014C  0845               	movf	___flmul@temp,w
 11657  014D  07BB               	addwf	___flmul@grs,f
 11658  014E  0846               	movf	___flmul@temp+1,w
 11659  014F  3DBC               	addwfc	___flmul@grs+1,f
 11660  0150  3000               	movlw	0
 11661  0151  3DBD               	addwfc	___flmul@grs+2,f
 11662  0152  3DBE               	addwfc	___flmul@grs+3,f
 11663  0153  3008               	movlw	8
 11664  0154                     u370_25:	
 11665  0154  35BB               	lslf	___flmul@grs,f
 11666  0155  0DBC               	rlf	___flmul@grs+1,f
 11667  0156  0DBD               	rlf	___flmul@grs+2,f
 11668  0157  0DBE               	rlf	___flmul@grs+3,f
 11669  0158  0B89               	decfsz	9,f
 11670  0159  2954               	goto	u370_25
 11671  015A  082D               	movf	___flmul@b,w
 11672  015B  00B5               	movwf	??___flmul
 11673  015C  0835               	movf	??___flmul,w
 11674  015D  00F0               	movwf	__Umul8_16@multiplicand
 11675  015E  0831               	movf	___flmul@a,w
 11676  015F  3195  25A0  3180   	fcall	__Umul8_16
 11677  0162  0871               	movf	?__Umul8_16+1,w
 11678  0163  0020               	movlb	0	; select bank0
 11679  0164  00C6               	movwf	___flmul@temp+1
 11680  0165  0870               	movf	?__Umul8_16,w
 11681  0166  00C5               	movwf	___flmul@temp
 11682  0167  0845               	movf	___flmul@temp,w
 11683  0168  07BB               	addwf	___flmul@grs,f
 11684  0169  0846               	movf	___flmul@temp+1,w
 11685  016A  3DBC               	addwfc	___flmul@grs+1,f
 11686  016B  3000               	movlw	0
 11687  016C  3DBD               	addwfc	___flmul@grs+2,f
 11688  016D  3DBE               	addwfc	___flmul@grs+3,f
 11689  016E  082E               	movf	___flmul@b+1,w
 11690  016F  00B5               	movwf	??___flmul
 11691  0170  0835               	movf	??___flmul,w
 11692  0171  00F0               	movwf	__Umul8_16@multiplicand
 11693  0172  0833               	movf	___flmul@a+2,w
 11694  0173  3195  25A0  3180   	fcall	__Umul8_16
 11695  0176  0871               	movf	?__Umul8_16+1,w
 11696  0177  0020               	movlb	0	; select bank0
 11697  0178  00C6               	movwf	___flmul@temp+1
 11698  0179  0870               	movf	?__Umul8_16,w
 11699  017A  00C5               	movwf	___flmul@temp
 11700  017B  0845               	movf	___flmul@temp,w
 11701  017C  07C1               	addwf	___flmul@prod,f
 11702  017D  0846               	movf	___flmul@temp+1,w
 11703  017E  3DC2               	addwfc	___flmul@prod+1,f
 11704  017F  3000               	movlw	0
 11705  0180  3DC3               	addwfc	___flmul@prod+2,f
 11706  0181  3DC4               	addwfc	___flmul@prod+3,f
 11707  0182  082F               	movf	___flmul@b+2,w
 11708  0183  00B5               	movwf	??___flmul
 11709  0184  0835               	movf	??___flmul,w
 11710  0185  00F0               	movwf	__Umul8_16@multiplicand
 11711  0186  0832               	movf	___flmul@a+1,w
 11712  0187  3195  25A0  3180   	fcall	__Umul8_16
 11713  018A  0871               	movf	?__Umul8_16+1,w
 11714  018B  0020               	movlb	0	; select bank0
 11715  018C  00C6               	movwf	___flmul@temp+1
 11716  018D  0870               	movf	?__Umul8_16,w
 11717  018E  00C5               	movwf	___flmul@temp
 11718  018F  0845               	movf	___flmul@temp,w
 11719  0190  07C1               	addwf	___flmul@prod,f
 11720  0191  0846               	movf	___flmul@temp+1,w
 11721  0192  3DC2               	addwfc	___flmul@prod+1,f
 11722  0193  3000               	movlw	0
 11723  0194  3DC3               	addwfc	___flmul@prod+2,f
 11724  0195  3DC4               	addwfc	___flmul@prod+3,f
 11725  0196  082F               	movf	___flmul@b+2,w
 11726  0197  00B5               	movwf	??___flmul
 11727  0198  0835               	movf	??___flmul,w
 11728  0199  00F0               	movwf	__Umul8_16@multiplicand
 11729  019A  0833               	movf	___flmul@a+2,w
 11730  019B  3195  25A0  3180   	fcall	__Umul8_16
 11731  019E  0871               	movf	?__Umul8_16+1,w
 11732  019F  0020               	movlb	0	; select bank0
 11733  01A0  00C6               	movwf	___flmul@temp+1
 11734  01A1  0870               	movf	?__Umul8_16,w
 11735  01A2  00C5               	movwf	___flmul@temp
 11736  01A3  0845               	movf	___flmul@temp,w
 11737  01A4  00B5               	movwf	??___flmul
 11738  01A5  0846               	movf	___flmul@temp+1,w
 11739  01A6  00B6               	movwf	??___flmul+1
 11740  01A7  01B7               	clrf	??___flmul+2
 11741  01A8  01B8               	clrf	??___flmul+3
 11742  01A9  3008               	movlw	8
 11743  01AA                     u371_25:	
 11744  01AA  35B5               	lslf	??___flmul,f
 11745  01AB  0DB6               	rlf	??___flmul+1,f
 11746  01AC  0DB7               	rlf	??___flmul+2,f
 11747  01AD  0DB8               	rlf	??___flmul+3,f
 11748  01AE  0B89               	decfsz	9,f
 11749  01AF  29AA               	goto	u371_25
 11750  01B0  0835               	movf	??___flmul,w
 11751  01B1  07C1               	addwf	___flmul@prod,f
 11752  01B2  0836               	movf	??___flmul+1,w
 11753  01B3  3DC2               	addwfc	___flmul@prod+1,f
 11754  01B4  0837               	movf	??___flmul+2,w
 11755  01B5  3DC3               	addwfc	___flmul@prod+2,f
 11756  01B6  0838               	movf	??___flmul+3,w
 11757  01B7  3DC4               	addwfc	___flmul@prod+3,f
 11758  01B8  083B               	movf	___flmul@grs,w
 11759  01B9  00B5               	movwf	??___flmul
 11760  01BA  083C               	movf	___flmul@grs+1,w
 11761  01BB  00B6               	movwf	??___flmul+1
 11762  01BC  083D               	movf	___flmul@grs+2,w
 11763  01BD  00B7               	movwf	??___flmul+2
 11764  01BE  083E               	movf	___flmul@grs+3,w
 11765  01BF  00B8               	movwf	??___flmul+3
 11766  01C0  3018               	movlw	24
 11767  01C1                     u372_25:	
 11768  01C1  36B8               	lsrf	??___flmul+3,f
 11769  01C2  0CB7               	rrf	??___flmul+2,f
 11770  01C3  0CB6               	rrf	??___flmul+1,f
 11771  01C4  0CB5               	rrf	??___flmul,f
 11772  01C5  0B89               	decfsz	9,f
 11773  01C6  29C1               	goto	u372_25
 11774  01C7  0835               	movf	??___flmul,w
 11775  01C8  07C1               	addwf	___flmul@prod,f
 11776  01C9  0836               	movf	??___flmul+1,w
 11777  01CA  3DC2               	addwfc	___flmul@prod+1,f
 11778  01CB  0837               	movf	??___flmul+2,w
 11779  01CC  3DC3               	addwfc	___flmul@prod+2,f
 11780  01CD  0838               	movf	??___flmul+3,w
 11781  01CE  3DC4               	addwfc	___flmul@prod+3,f
 11782  01CF  3008               	movlw	8
 11783  01D0                     u373_25:	
 11784  01D0  35BB               	lslf	___flmul@grs,f
 11785  01D1  0DBC               	rlf	___flmul@grs+1,f
 11786  01D2  0DBD               	rlf	___flmul@grs+2,f
 11787  01D3  0DBE               	rlf	___flmul@grs+3,f
 11788  01D4  0B89               	decfsz	9,f
 11789  01D5  29D0               	goto	u373_25
 11790  01D6  0840               	movf	___flmul@bexp,w
 11791  01D7  073F               	addwf	___flmul@aexp,w
 11792  01D8  00B5               	movwf	??___flmul
 11793  01D9  01B6               	clrf	??___flmul+1
 11794  01DA  0DB6               	rlf	??___flmul+1,f
 11795  01DB  0835               	movf	??___flmul,w
 11796  01DC  3E82               	addlw	130
 11797  01DD  00C5               	movwf	___flmul@temp
 11798  01DE  30FF               	movlw	255
 11799  01DF  3D36               	addwfc	??___flmul+1,w
 11800  01E0  00C6               	movwf	___flmul@temp+1
 11801  01E1                     i1l3088:	
 11802  01E1  1BC3               	btfsc	___flmul@prod+2,7
 11803  01E2  29F8               	goto	i1l3090
 11804  01E3  3001               	movlw	1
 11805  01E4                     u374_25:	
 11806  01E4  35C1               	lslf	___flmul@prod,f
 11807  01E5  0DC2               	rlf	___flmul@prod+1,f
 11808  01E6  0DC3               	rlf	___flmul@prod+2,f
 11809  01E7  0DC4               	rlf	___flmul@prod+3,f
 11810  01E8  0B89               	decfsz	9,f
 11811  01E9  29E4               	goto	u374_25
 11812  01EA  1BBE               	btfsc	___flmul@grs+3,7
 11813  01EB  1441               	bsf	___flmul@prod,0
 11814  01EC  3001               	movlw	1
 11815  01ED                     u376_25:	
 11816  01ED  35BB               	lslf	___flmul@grs,f
 11817  01EE  0DBC               	rlf	___flmul@grs+1,f
 11818  01EF  0DBD               	rlf	___flmul@grs+2,f
 11819  01F0  0DBE               	rlf	___flmul@grs+3,f
 11820  01F1  0B89               	decfsz	9,f
 11821  01F2  29ED               	goto	u376_25
 11822  01F3  30FF               	movlw	255
 11823  01F4  07C5               	addwf	___flmul@temp,f
 11824  01F5  30FF               	movlw	255
 11825  01F6  3DC6               	addwfc	___flmul@temp+1,f
 11826  01F7  29E1               	goto	i1l3088
 11827  01F8                     i1l3090:	
 11828  01F8  01BF               	clrf	___flmul@aexp
 11829  01F9  1FBE               	btfss	___flmul@grs+3,7
 11830  01FA  2A11               	goto	i1l3100
 11831  01FB  30FF               	movlw	255
 11832  01FC  053B               	andwf	___flmul@grs,w
 11833  01FD  00B5               	movwf	??___flmul
 11834  01FE  30FF               	movlw	255
 11835  01FF  053C               	andwf	___flmul@grs+1,w
 11836  0200  00B6               	movwf	??___flmul+1
 11837  0201  30FF               	movlw	255
 11838  0202  053D               	andwf	___flmul@grs+2,w
 11839  0203  00B7               	movwf	??___flmul+2
 11840  0204  307F               	movlw	127
 11841  0205  053E               	andwf	___flmul@grs+3,w
 11842  0206  00B8               	movwf	??___flmul+3
 11843  0207  0838               	movf	??___flmul+3,w
 11844  0208  0437               	iorwf	??___flmul+2,w
 11845  0209  0436               	iorwf	??___flmul+1,w
 11846  020A  0435               	iorwf	??___flmul,w
 11847  020B  1903               	skipnz
 11848  020C  1841               	btfsc	___flmul@prod,0
 11849  020D  2A0F               	goto	i1l3096
 11850  020E  2A11               	goto	i1l3100
 11851  020F                     i1l3096:	
 11852  020F  01BF               	clrf	___flmul@aexp
 11853  0210  0ABF               	incf	___flmul@aexp,f
 11854  0211                     i1l3100:	
 11855  0211  083F               	movf	___flmul@aexp,w
 11856  0212  1903               	btfsc	3,2
 11857  0213  2A3A               	goto	i1l3110
 11858  0214  3001               	movlw	1
 11859  0215  07C1               	addwf	___flmul@prod,f
 11860  0216  3000               	movlw	0
 11861  0217  3DC2               	addwfc	___flmul@prod+1,f
 11862  0218  3000               	movlw	0
 11863  0219  3DC3               	addwfc	___flmul@prod+2,f
 11864  021A  3000               	movlw	0
 11865  021B  3DC4               	addwfc	___flmul@prod+3,f
 11866  021C  1C44               	btfss	___flmul@prod+3,0
 11867  021D  2A3A               	goto	i1l3110
 11868  021E  0841               	movf	___flmul@prod,w
 11869  021F  00B5               	movwf	??___flmul
 11870  0220  0842               	movf	___flmul@prod+1,w
 11871  0221  00B6               	movwf	??___flmul+1
 11872  0222  0843               	movf	___flmul@prod+2,w
 11873  0223  00B7               	movwf	??___flmul+2
 11874  0224  0844               	movf	___flmul@prod+3,w
 11875  0225  00B8               	movwf	??___flmul+3
 11876  0226  3001               	movlw	1
 11877  0227  00B9               	movwf	??___flmul+4
 11878  0228                     u383_25:	
 11879  0228  37B8               	asrf	??___flmul+3,f
 11880  0229  0CB7               	rrf	??___flmul+2,f
 11881  022A  0CB6               	rrf	??___flmul+1,f
 11882  022B  0CB5               	rrf	??___flmul,f
 11883  022C  0BB9               	decfsz	??___flmul+4,f
 11884  022D  2A28               	goto	u383_25
 11885  022E  0838               	movf	??___flmul+3,w
 11886  022F  00C4               	movwf	___flmul@prod+3
 11887  0230  0837               	movf	??___flmul+2,w
 11888  0231  00C3               	movwf	___flmul@prod+2
 11889  0232  0836               	movf	??___flmul+1,w
 11890  0233  00C2               	movwf	___flmul@prod+1
 11891  0234  0835               	movf	??___flmul,w
 11892  0235  00C1               	movwf	___flmul@prod
 11893  0236  3001               	movlw	1
 11894  0237  07C5               	addwf	___flmul@temp,f
 11895  0238  3000               	movlw	0
 11896  0239  3DC6               	addwfc	___flmul@temp+1,f
 11897  023A                     i1l3110:	
 11898  023A  0846               	movf	___flmul@temp+1,w
 11899  023B  3A80               	xorlw	128
 11900  023C  00B5               	movwf	??___flmul
 11901  023D  3080               	movlw	128
 11902  023E  0235               	subwf	??___flmul,w
 11903  023F  1D03               	skipz
 11904  0240  2A43               	goto	u384_25
 11905  0241  30FF               	movlw	255
 11906  0242  0245               	subwf	___flmul@temp,w
 11907  0243                     u384_25:	
 11908  0243  1C03               	skipc
 11909  0244  2A4F               	goto	i1l3114
 11910  0245  307F               	movlw	127
 11911  0246  0020               	movlb	0	; select bank0
 11912  0247  00C4               	movwf	___flmul@prod+3
 11913  0248  3080               	movlw	128
 11914  0249  00C3               	movwf	___flmul@prod+2
 11915  024A  3000               	movlw	0
 11916  024B  00C2               	movwf	___flmul@prod+1
 11917  024C  3000               	movlw	0
 11918  024D  00C1               	movwf	___flmul@prod
 11919  024E  2A79               	goto	i1l1002
 11920  024F                     i1l3114:	
 11921  024F  0020               	movlb	0	; select bank0
 11922  0250  0846               	movf	___flmul@temp+1,w
 11923  0251  3A80               	xorlw	128
 11924  0252  00B5               	movwf	??___flmul
 11925  0253  3080               	movlw	128
 11926  0254  0235               	subwf	??___flmul,w
 11927  0255  1D03               	skipz
 11928  0256  2A59               	goto	u385_25
 11929  0257  3001               	movlw	1
 11930  0258  0245               	subwf	___flmul@temp,w
 11931  0259                     u385_25:	
 11932  0259  1803               	skipnc
 11933  025A  2A66               	goto	i1l3120
 11934  025B  3000               	movlw	0
 11935  025C  0020               	movlb	0	; select bank0
 11936  025D  00C4               	movwf	___flmul@prod+3
 11937  025E  3000               	movlw	0
 11938  025F  00C3               	movwf	___flmul@prod+2
 11939  0260  3000               	movlw	0
 11940  0261  00C2               	movwf	___flmul@prod+1
 11941  0262  3000               	movlw	0
 11942  0263  00C1               	movwf	___flmul@prod
 11943  0264  01BA               	clrf	___flmul@sign
 11944  0265  2A79               	goto	i1l1002
 11945  0266                     i1l3120:	
 11946  0266  0020               	movlb	0	; select bank0
 11947  0267  0845               	movf	___flmul@temp,w
 11948  0268  00B5               	movwf	??___flmul
 11949  0269  0835               	movf	??___flmul,w
 11950  026A  00C0               	movwf	___flmul@bexp
 11951  026B  30FF               	movlw	255
 11952  026C  05C1               	andwf	___flmul@prod,f
 11953  026D  30FF               	movlw	255
 11954  026E  05C2               	andwf	___flmul@prod+1,f
 11955  026F  307F               	movlw	127
 11956  0270  05C3               	andwf	___flmul@prod+2,f
 11957  0271  3000               	movlw	0
 11958  0272  05C4               	andwf	___flmul@prod+3,f
 11959  0273  1840               	btfsc	___flmul@bexp,0
 11960  0274  17C3               	bsf	___flmul@prod+2,7
 11961  0275  3640               	lsrf	___flmul@bexp,w
 11962  0276  00B5               	movwf	??___flmul
 11963  0277  0835               	movf	??___flmul,w
 11964  0278  00C4               	movwf	___flmul@prod+3
 11965  0279                     i1l1002:	
 11966  0279  083A               	movf	___flmul@sign,w
 11967  027A  00B5               	movwf	??___flmul
 11968  027B  0835               	movf	??___flmul,w
 11969  027C  04C4               	iorwf	___flmul@prod+3,f
 11970  027D  0844               	movf	___flmul@prod+3,w
 11971  027E  00B0               	movwf	?___flmul+3
 11972  027F  0843               	movf	___flmul@prod+2,w
 11973  0280  00AF               	movwf	?___flmul+2
 11974  0281  0842               	movf	___flmul@prod+1,w
 11975  0282  00AE               	movwf	?___flmul+1
 11976  0283  0841               	movf	___flmul@prod,w
 11977  0284  00AD               	movwf	?___flmul
 11978  0285  0008               	return
 11979  0286                     __end_of___flmul:	
 11980                           
 11981                           	psect	text50
 11982  15A0                     __ptext50:	
 11983 ;; *************** function __Umul8_16 *****************
 11984 ;; Defined at:
 11985 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul8_16.c"
 11986 ;; Parameters:    Size  Location     Type
 11987 ;;  multiplier      1    wreg     unsigned char 
 11988 ;;  multiplicand    1    0[COMMON] unsigned char 
 11989 ;; Auto vars:     Size  Location     Type
 11990 ;;  multiplier      1    8[COMMON] unsigned char 
 11991 ;;  word_mpld       2    6[COMMON] unsigned int 
 11992 ;;  product         2    4[COMMON] unsigned int 
 11993 ;; Return value:  Size  Location     Type
 11994 ;;                  2    0[COMMON] unsigned int 
 11995 ;; Registers used:
 11996 ;;		wreg, status,2, status,0
 11997 ;; Tracked objects:
 11998 ;;		On entry : 0/0
 11999 ;;		On exit  : 0/0
 12000 ;;		Unchanged: 0/0
 12001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12002 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12003 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12004 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12005 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12006 ;;Total ram usage:        9 bytes
 12007 ;; Hardware stack levels used:    1
 12008 ;; This function calls:
 12009 ;;		Nothing
 12010 ;; This function is called by:
 12011 ;;		___flmul
 12012 ;; This function uses a non-reentrant model
 12013 ;;
 12014                           
 12015                           
 12016                           ;psect for function __Umul8_16
 12017  15A0                     __Umul8_16:	
 12018                           
 12019                           ;incstack = 0
 12020                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 12021                           ;__Umul8_16@multiplier stored from wreg
 12022  15A0  00F8               	movwf	__Umul8_16@multiplier
 12023  15A1  01F4               	clrf	__Umul8_16@product
 12024  15A2  01F5               	clrf	__Umul8_16@product+1
 12025  15A3  0870               	movf	__Umul8_16@multiplicand,w
 12026  15A4  00F2               	movwf	??__Umul8_16
 12027  15A5  01F3               	clrf	??__Umul8_16+1
 12028  15A6  0872               	movf	??__Umul8_16,w
 12029  15A7  00F6               	movwf	__Umul8_16@word_mpld
 12030  15A8  0873               	movf	??__Umul8_16+1,w
 12031  15A9  00F7               	movwf	__Umul8_16@word_mpld+1
 12032  15AA                     i1l2710:	
 12033  15AA  1C78               	btfss	__Umul8_16@multiplier,0
 12034  15AB  2DB0               	goto	i1l1096
 12035  15AC  0876               	movf	__Umul8_16@word_mpld,w
 12036  15AD  07F4               	addwf	__Umul8_16@product,f
 12037  15AE  0877               	movf	__Umul8_16@word_mpld+1,w
 12038  15AF  3DF5               	addwfc	__Umul8_16@product+1,f
 12039  15B0                     i1l1096:	
 12040  15B0  3001               	movlw	1
 12041  15B1                     u295_25:	
 12042  15B1  35F6               	lslf	__Umul8_16@word_mpld,f
 12043  15B2  0DF7               	rlf	__Umul8_16@word_mpld+1,f
 12044  15B3  0B89               	decfsz	9,f
 12045  15B4  2DB1               	goto	u295_25
 12046  15B5  1003               	clrc
 12047  15B6  0CF8               	rrf	__Umul8_16@multiplier,f
 12048  15B7  0878               	movf	__Umul8_16@multiplier,w
 12049  15B8  1D03               	btfss	3,2
 12050  15B9  2DAA               	goto	i1l2710
 12051  15BA  0875               	movf	__Umul8_16@product+1,w
 12052  15BB  00F1               	movwf	?__Umul8_16+1
 12053  15BC  0874               	movf	__Umul8_16@product,w
 12054  15BD  00F0               	movwf	?__Umul8_16
 12055  15BE  0008               	return
 12056  15BF                     __end_of__Umul8_16:	
 12057                           
 12058                           	psect	text51
 12059  0684                     __ptext51:	
 12060 ;; *************** function ___fldiv *****************
 12061 ;; Defined at:
 12062 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
 12063 ;; Parameters:    Size  Location     Type
 12064 ;;  a               4    0[COMMON] unsigned int 
 12065 ;;  b               4    4[COMMON] unsigned int 
 12066 ;; Auto vars:     Size  Location     Type
 12067 ;;  grs             4    7[BANK0 ] unsigned long 
 12068 ;;  rem             4    0[BANK0 ] unsigned long 
 12069 ;;  new_exp         2    5[BANK0 ] int 
 12070 ;;  aexp            1   12[BANK0 ] unsigned char 
 12071 ;;  bexp            1   11[BANK0 ] unsigned char 
 12072 ;;  sign            1    4[BANK0 ] unsigned char 
 12073 ;; Return value:  Size  Location     Type
 12074 ;;                  4    0[COMMON] unsigned char 
 12075 ;; Registers used:
 12076 ;;		wreg, status,2, status,0
 12077 ;; Tracked objects:
 12078 ;;		On entry : 0/0
 12079 ;;		On exit  : 0/0
 12080 ;;		Unchanged: 0/0
 12081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12082 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12083 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12084 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12085 ;;      Totals:        13      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12086 ;;Total ram usage:       26 bytes
 12087 ;; Hardware stack levels used:    1
 12088 ;; This function calls:
 12089 ;;		Nothing
 12090 ;; This function is called by:
 12091 ;;		_speedCalc
 12092 ;; This function uses a non-reentrant model
 12093 ;;
 12094                           
 12095                           
 12096                           ;psect for function ___fldiv
 12097  0684                     ___fldiv:	
 12098                           
 12099                           ;incstack = 0
 12100                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 12101  0684  0877               	movf	___fldiv@b+3,w
 12102  0685  3980               	andlw	128
 12103  0686  00F8               	movwf	??___fldiv
 12104  0687  0878               	movf	??___fldiv,w
 12105  0688  0020               	movlb	0	; select bank0
 12106  0689  00A4               	movwf	___fldiv@sign
 12107  068A  3577               	lslf	___fldiv@b+3,w
 12108  068B  00F8               	movwf	??___fldiv
 12109  068C  0878               	movf	??___fldiv,w
 12110  068D  00AB               	movwf	___fldiv@bexp
 12111  068E  1BF6               	btfsc	___fldiv@b+2,7
 12112  068F  142B               	bsf	___fldiv@bexp,0
 12113  0690  082B               	movf	___fldiv@bexp,w
 12114  0691  1903               	btfsc	3,2
 12115  0692  2EA1               	goto	i1l2870
 12116  0693  0A2B               	incf	___fldiv@bexp,w
 12117  0694  1D03               	btfss	3,2
 12118  0695  2E9E               	goto	i1l2866
 12119  0696  3000               	movlw	0
 12120  0697  00F7               	movwf	___fldiv@b+3
 12121  0698  3000               	movlw	0
 12122  0699  00F6               	movwf	___fldiv@b+2
 12123  069A  3000               	movlw	0
 12124  069B  00F5               	movwf	___fldiv@b+1
 12125  069C  3000               	movlw	0
 12126  069D  00F4               	movwf	___fldiv@b
 12127  069E                     i1l2866:	
 12128  069E  17F6               	bsf	___fldiv@b+2,7
 12129  069F  01F7               	clrf	___fldiv@b+3
 12130  06A0  2EA9               	goto	i1l2872
 12131  06A1                     i1l2870:	
 12132  06A1  3000               	movlw	0
 12133  06A2  00F7               	movwf	___fldiv@b+3
 12134  06A3  3000               	movlw	0
 12135  06A4  00F6               	movwf	___fldiv@b+2
 12136  06A5  3000               	movlw	0
 12137  06A6  00F5               	movwf	___fldiv@b+1
 12138  06A7  3000               	movlw	0
 12139  06A8  00F4               	movwf	___fldiv@b
 12140  06A9                     i1l2872:	
 12141  06A9  0873               	movf	___fldiv@a+3,w
 12142  06AA  3980               	andlw	128
 12143  06AB  00F8               	movwf	??___fldiv
 12144  06AC  0878               	movf	??___fldiv,w
 12145  06AD  06A4               	xorwf	___fldiv@sign,f
 12146  06AE  3573               	lslf	___fldiv@a+3,w
 12147  06AF  00F8               	movwf	??___fldiv
 12148  06B0  0878               	movf	??___fldiv,w
 12149  06B1  00AC               	movwf	___fldiv@aexp
 12150  06B2  1BF2               	btfsc	___fldiv@a+2,7
 12151  06B3  142C               	bsf	___fldiv@aexp,0
 12152  06B4  082C               	movf	___fldiv@aexp,w
 12153  06B5  1903               	btfsc	3,2
 12154  06B6  2EC5               	goto	i1l2890
 12155  06B7  0A2C               	incf	___fldiv@aexp,w
 12156  06B8  1D03               	btfss	3,2
 12157  06B9  2EC2               	goto	i1l2886
 12158  06BA  3000               	movlw	0
 12159  06BB  00F3               	movwf	___fldiv@a+3
 12160  06BC  3000               	movlw	0
 12161  06BD  00F2               	movwf	___fldiv@a+2
 12162  06BE  3000               	movlw	0
 12163  06BF  00F1               	movwf	___fldiv@a+1
 12164  06C0  3000               	movlw	0
 12165  06C1  00F0               	movwf	___fldiv@a
 12166  06C2                     i1l2886:	
 12167  06C2  17F2               	bsf	___fldiv@a+2,7
 12168  06C3  01F3               	clrf	___fldiv@a+3
 12169  06C4  2ECD               	goto	i1l950
 12170  06C5                     i1l2890:	
 12171  06C5  3000               	movlw	0
 12172  06C6  00F3               	movwf	___fldiv@a+3
 12173  06C7  3000               	movlw	0
 12174  06C8  00F2               	movwf	___fldiv@a+2
 12175  06C9  3000               	movlw	0
 12176  06CA  00F1               	movwf	___fldiv@a+1
 12177  06CB  3000               	movlw	0
 12178  06CC  00F0               	movwf	___fldiv@a
 12179  06CD                     i1l950:	
 12180  06CD  0873               	movf	___fldiv@a+3,w
 12181  06CE  0472               	iorwf	___fldiv@a+2,w
 12182  06CF  0471               	iorwf	___fldiv@a+1,w
 12183  06D0  0470               	iorwf	___fldiv@a,w
 12184  06D1  1D03               	skipz
 12185  06D2  2EEC               	goto	i1l2900
 12186  06D3  3000               	movlw	0
 12187  06D4  00F7               	movwf	___fldiv@b+3
 12188  06D5  3000               	movlw	0
 12189  06D6  00F6               	movwf	___fldiv@b+2
 12190  06D7  3000               	movlw	0
 12191  06D8  00F5               	movwf	___fldiv@b+1
 12192  06D9  3000               	movlw	0
 12193  06DA  00F4               	movwf	___fldiv@b
 12194  06DB  3080               	movlw	128
 12195  06DC  04F6               	iorwf	___fldiv@b+2,f
 12196  06DD  307F               	movlw	127
 12197  06DE  04F7               	iorwf	___fldiv@b+3,f
 12198  06DF                     L5:	
 12199  06DF  0824               	movf	___fldiv@sign,w
 12200  06E0  00F8               	movwf	??___fldiv
 12201  06E1  0878               	movf	??___fldiv,w
 12202  06E2  04F7               	iorwf	___fldiv@b+3,f
 12203  06E3  0877               	movf	___fldiv@b+3,w
 12204  06E4  00F3               	movwf	?___fldiv+3
 12205  06E5  0876               	movf	___fldiv@b+2,w
 12206  06E6  00F2               	movwf	?___fldiv+2
 12207  06E7  0875               	movf	___fldiv@b+1,w
 12208  06E8  00F1               	movwf	?___fldiv+1
 12209  06E9  0874               	movf	___fldiv@b,w
 12210  06EA  00F0               	movwf	?___fldiv
 12211  06EB  0008               	return
 12212  06EC                     i1l2900:	
 12213  06EC  082B               	movf	___fldiv@bexp,w
 12214  06ED  1D03               	btfss	3,2
 12215  06EE  2EF8               	goto	i1l2906
 12216  06EF  3000               	movlw	0
 12217  06F0  00F3               	movwf	?___fldiv+3
 12218  06F1  3000               	movlw	0
 12219  06F2  00F2               	movwf	?___fldiv+2
 12220  06F3  3000               	movlw	0
 12221  06F4  00F1               	movwf	?___fldiv+1
 12222  06F5  3000               	movlw	0
 12223  06F6  00F0               	movwf	?___fldiv
 12224  06F7  0008               	return
 12225  06F8                     i1l2906:	
 12226  06F8  082B               	movf	___fldiv@bexp,w
 12227  06F9  00F8               	movwf	??___fldiv
 12228  06FA  01F9               	clrf	??___fldiv+1
 12229  06FB  0879               	movf	??___fldiv+1,w
 12230  06FC  00FB               	movwf	??___fldiv+3
 12231  06FD  082C               	movf	___fldiv@aexp,w
 12232  06FE  0278               	subwf	??___fldiv,w
 12233  06FF  00FA               	movwf	??___fldiv+2
 12234  0700  1C03               	skipc
 12235  0701  03FB               	decf	??___fldiv+3,f
 12236  0702  087A               	movf	??___fldiv+2,w
 12237  0703  3E7F               	addlw	127
 12238  0704  00A5               	movwf	___fldiv@new_exp
 12239  0705  3000               	movlw	0
 12240  0706  3D7B               	addwfc	??___fldiv+3,w
 12241  0707  00A6               	movwf	___fldiv@new_exp+1
 12242  0708  0877               	movf	___fldiv@b+3,w
 12243  0709  00A3               	movwf	___fldiv@rem+3
 12244  070A  0876               	movf	___fldiv@b+2,w
 12245  070B  00A2               	movwf	___fldiv@rem+2
 12246  070C  0875               	movf	___fldiv@b+1,w
 12247  070D  00A1               	movwf	___fldiv@rem+1
 12248  070E  0874               	movf	___fldiv@b,w
 12249  070F  00A0               	movwf	___fldiv@rem
 12250  0710  3000               	movlw	0
 12251  0711  00F7               	movwf	___fldiv@b+3
 12252  0712  3000               	movlw	0
 12253  0713  00F6               	movwf	___fldiv@b+2
 12254  0714  3000               	movlw	0
 12255  0715  00F5               	movwf	___fldiv@b+1
 12256  0716  3000               	movlw	0
 12257  0717  00F4               	movwf	___fldiv@b
 12258  0718  3000               	movlw	0
 12259  0719  00AA               	movwf	___fldiv@grs+3
 12260  071A  3000               	movlw	0
 12261  071B  00A9               	movwf	___fldiv@grs+2
 12262  071C  3000               	movlw	0
 12263  071D  00A8               	movwf	___fldiv@grs+1
 12264  071E  3000               	movlw	0
 12265  071F  00A7               	movwf	___fldiv@grs
 12266  0720  01AC               	clrf	___fldiv@aexp
 12267  0721                     i1l2934:	
 12268  0721  301A               	movlw	26
 12269  0722  022C               	subwf	___fldiv@aexp,w
 12270  0723  1803               	btfsc	3,0
 12271  0724  2F5D               	goto	i1l2936
 12272  0725  082C               	movf	___fldiv@aexp,w
 12273  0726  1903               	btfsc	3,2
 12274  0727  2F3F               	goto	i1l2926
 12275  0728  3001               	movlw	1
 12276  0729                     u341_25:	
 12277  0729  35A0               	lslf	___fldiv@rem,f
 12278  072A  0DA1               	rlf	___fldiv@rem+1,f
 12279  072B  0DA2               	rlf	___fldiv@rem+2,f
 12280  072C  0DA3               	rlf	___fldiv@rem+3,f
 12281  072D  0B89               	decfsz	9,f
 12282  072E  2F29               	goto	u341_25
 12283  072F  3001               	movlw	1
 12284  0730                     u342_25:	
 12285  0730  35F4               	lslf	___fldiv@b,f
 12286  0731  0DF5               	rlf	___fldiv@b+1,f
 12287  0732  0DF6               	rlf	___fldiv@b+2,f
 12288  0733  0DF7               	rlf	___fldiv@b+3,f
 12289  0734  0B89               	decfsz	9,f
 12290  0735  2F30               	goto	u342_25
 12291  0736  1BAA               	btfsc	___fldiv@grs+3,7
 12292  0737  1474               	bsf	___fldiv@b,0
 12293  0738  3001               	movlw	1
 12294  0739                     u344_25:	
 12295  0739  35A7               	lslf	___fldiv@grs,f
 12296  073A  0DA8               	rlf	___fldiv@grs+1,f
 12297  073B  0DA9               	rlf	___fldiv@grs+2,f
 12298  073C  0DAA               	rlf	___fldiv@grs+3,f
 12299  073D  0B89               	decfsz	9,f
 12300  073E  2F39               	goto	u344_25
 12301  073F                     i1l2926:	
 12302  073F  0873               	movf	___fldiv@a+3,w
 12303  0740  0223               	subwf	___fldiv@rem+3,w
 12304  0741  1D03               	skipz
 12305  0742  2F4D               	goto	u345_25
 12306  0743  0872               	movf	___fldiv@a+2,w
 12307  0744  0222               	subwf	___fldiv@rem+2,w
 12308  0745  1D03               	skipz
 12309  0746  2F4D               	goto	u345_25
 12310  0747  0871               	movf	___fldiv@a+1,w
 12311  0748  0221               	subwf	___fldiv@rem+1,w
 12312  0749  1D03               	skipz
 12313  074A  2F4D               	goto	u345_25
 12314  074B  0870               	movf	___fldiv@a,w
 12315  074C  0220               	subwf	___fldiv@rem,w
 12316  074D                     u345_25:	
 12317  074D  1C03               	skipc
 12318  074E  2F58               	goto	i1l2932
 12319  074F  172A               	bsf	___fldiv@grs+3,6
 12320  0750  0870               	movf	___fldiv@a,w
 12321  0751  02A0               	subwf	___fldiv@rem,f
 12322  0752  0871               	movf	___fldiv@a+1,w
 12323  0753  3BA1               	subwfb	___fldiv@rem+1,f
 12324  0754  0872               	movf	___fldiv@a+2,w
 12325  0755  3BA2               	subwfb	___fldiv@rem+2,f
 12326  0756  0873               	movf	___fldiv@a+3,w
 12327  0757  3BA3               	subwfb	___fldiv@rem+3,f
 12328  0758                     i1l2932:	
 12329  0758  3001               	movlw	1
 12330  0759  00F8               	movwf	??___fldiv
 12331  075A  0878               	movf	??___fldiv,w
 12332  075B  07AC               	addwf	___fldiv@aexp,f
 12333  075C  2F21               	goto	i1l2934
 12334  075D                     i1l2936:	
 12335  075D  0823               	movf	___fldiv@rem+3,w
 12336  075E  0422               	iorwf	___fldiv@rem+2,w
 12337  075F  0421               	iorwf	___fldiv@rem+1,w
 12338  0760  0420               	iorwf	___fldiv@rem,w
 12339  0761  1D03               	btfss	3,2
 12340  0762  1427               	bsf	___fldiv@grs,0
 12341  0763                     i1l2950:	
 12342  0763  1BF6               	btfsc	___fldiv@b+2,7
 12343  0764  2F7A               	goto	i1l2952
 12344  0765  3001               	movlw	1
 12345  0766                     u348_25:	
 12346  0766  35F4               	lslf	___fldiv@b,f
 12347  0767  0DF5               	rlf	___fldiv@b+1,f
 12348  0768  0DF6               	rlf	___fldiv@b+2,f
 12349  0769  0DF7               	rlf	___fldiv@b+3,f
 12350  076A  0B89               	decfsz	9,f
 12351  076B  2F66               	goto	u348_25
 12352  076C  1BAA               	btfsc	___fldiv@grs+3,7
 12353  076D  1474               	bsf	___fldiv@b,0
 12354  076E  3001               	movlw	1
 12355  076F                     u350_25:	
 12356  076F  35A7               	lslf	___fldiv@grs,f
 12357  0770  0DA8               	rlf	___fldiv@grs+1,f
 12358  0771  0DA9               	rlf	___fldiv@grs+2,f
 12359  0772  0DAA               	rlf	___fldiv@grs+3,f
 12360  0773  0B89               	decfsz	9,f
 12361  0774  2F6F               	goto	u350_25
 12362  0775  30FF               	movlw	255
 12363  0776  07A5               	addwf	___fldiv@new_exp,f
 12364  0777  30FF               	movlw	255
 12365  0778  3DA6               	addwfc	___fldiv@new_exp+1,f
 12366  0779  2F63               	goto	i1l2950
 12367  077A                     i1l2952:	
 12368  077A  01AC               	clrf	___fldiv@aexp
 12369  077B  1FAA               	btfss	___fldiv@grs+3,7
 12370  077C  2F93               	goto	i1l2962
 12371  077D  30FF               	movlw	255
 12372  077E  0527               	andwf	___fldiv@grs,w
 12373  077F  00F8               	movwf	??___fldiv
 12374  0780  30FF               	movlw	255
 12375  0781  0528               	andwf	___fldiv@grs+1,w
 12376  0782  00F9               	movwf	??___fldiv+1
 12377  0783  30FF               	movlw	255
 12378  0784  0529               	andwf	___fldiv@grs+2,w
 12379  0785  00FA               	movwf	??___fldiv+2
 12380  0786  307F               	movlw	127
 12381  0787  052A               	andwf	___fldiv@grs+3,w
 12382  0788  00FB               	movwf	??___fldiv+3
 12383  0789  087B               	movf	??___fldiv+3,w
 12384  078A  047A               	iorwf	??___fldiv+2,w
 12385  078B  0479               	iorwf	??___fldiv+1,w
 12386  078C  0478               	iorwf	??___fldiv,w
 12387  078D  1903               	skipnz
 12388  078E  1874               	btfsc	___fldiv@b,0
 12389  078F  2F91               	goto	i1l2958
 12390  0790  2F93               	goto	i1l2962
 12391  0791                     i1l2958:	
 12392  0791  01AC               	clrf	___fldiv@aexp
 12393  0792  0AAC               	incf	___fldiv@aexp,f
 12394  0793                     i1l2962:	
 12395  0793  082C               	movf	___fldiv@aexp,w
 12396  0794  1903               	btfsc	3,2
 12397  0795  2FBC               	goto	i1l2972
 12398  0796  3001               	movlw	1
 12399  0797  07F4               	addwf	___fldiv@b,f
 12400  0798  3000               	movlw	0
 12401  0799  3DF5               	addwfc	___fldiv@b+1,f
 12402  079A  3000               	movlw	0
 12403  079B  3DF6               	addwfc	___fldiv@b+2,f
 12404  079C  3000               	movlw	0
 12405  079D  3DF7               	addwfc	___fldiv@b+3,f
 12406  079E  1C77               	btfss	___fldiv@b+3,0
 12407  079F  2FBC               	goto	i1l2972
 12408  07A0  0874               	movf	___fldiv@b,w
 12409  07A1  00F8               	movwf	??___fldiv
 12410  07A2  0875               	movf	___fldiv@b+1,w
 12411  07A3  00F9               	movwf	??___fldiv+1
 12412  07A4  0876               	movf	___fldiv@b+2,w
 12413  07A5  00FA               	movwf	??___fldiv+2
 12414  07A6  0877               	movf	___fldiv@b+3,w
 12415  07A7  00FB               	movwf	??___fldiv+3
 12416  07A8  3001               	movlw	1
 12417  07A9  00FC               	movwf	??___fldiv+4
 12418  07AA                     u357_25:	
 12419  07AA  37FB               	asrf	??___fldiv+3,f
 12420  07AB  0CFA               	rrf	??___fldiv+2,f
 12421  07AC  0CF9               	rrf	??___fldiv+1,f
 12422  07AD  0CF8               	rrf	??___fldiv,f
 12423  07AE  0BFC               	decfsz	??___fldiv+4,f
 12424  07AF  2FAA               	goto	u357_25
 12425  07B0  087B               	movf	??___fldiv+3,w
 12426  07B1  00F7               	movwf	___fldiv@b+3
 12427  07B2  087A               	movf	??___fldiv+2,w
 12428  07B3  00F6               	movwf	___fldiv@b+2
 12429  07B4  0879               	movf	??___fldiv+1,w
 12430  07B5  00F5               	movwf	___fldiv@b+1
 12431  07B6  0878               	movf	??___fldiv,w
 12432  07B7  00F4               	movwf	___fldiv@b
 12433  07B8  3001               	movlw	1
 12434  07B9  07A5               	addwf	___fldiv@new_exp,f
 12435  07BA  3000               	movlw	0
 12436  07BB  3DA6               	addwfc	___fldiv@new_exp+1,f
 12437  07BC                     i1l2972:	
 12438  07BC  0826               	movf	___fldiv@new_exp+1,w
 12439  07BD  3A80               	xorlw	128
 12440  07BE  00F8               	movwf	??___fldiv
 12441  07BF  3080               	movlw	128
 12442  07C0  0278               	subwf	??___fldiv,w
 12443  07C1  1D03               	skipz
 12444  07C2  2FC5               	goto	u358_25
 12445  07C3  30FF               	movlw	255
 12446  07C4  0225               	subwf	___fldiv@new_exp,w
 12447  07C5                     u358_25:	
 12448  07C5  1C03               	skipc
 12449  07C6  2FD4               	goto	i1l971
 12450  07C7  30FF               	movlw	255
 12451  07C8  0020               	movlb	0	; select bank0
 12452  07C9  00A5               	movwf	___fldiv@new_exp
 12453  07CA  3000               	movlw	0
 12454  07CB  00A6               	movwf	___fldiv@new_exp+1
 12455  07CC  3000               	movlw	0
 12456  07CD  00F7               	movwf	___fldiv@b+3
 12457  07CE  3000               	movlw	0
 12458  07CF  00F6               	movwf	___fldiv@b+2
 12459  07D0  3000               	movlw	0
 12460  07D1  00F5               	movwf	___fldiv@b+1
 12461  07D2  3000               	movlw	0
 12462  07D3  00F4               	movwf	___fldiv@b
 12463  07D4                     i1l971:	
 12464  07D4  0020               	movlb	0	; select bank0
 12465  07D5  0826               	movf	___fldiv@new_exp+1,w
 12466  07D6  3A80               	xorlw	128
 12467  07D7  00F8               	movwf	??___fldiv
 12468  07D8  3080               	movlw	128
 12469  07D9  0278               	subwf	??___fldiv,w
 12470  07DA  1D03               	skipz
 12471  07DB  2FDE               	goto	u359_25
 12472  07DC  3001               	movlw	1
 12473  07DD  0225               	subwf	___fldiv@new_exp,w
 12474  07DE                     u359_25:	
 12475  07DE  1803               	skipnc
 12476  07DF  2FEC               	goto	i1l972
 12477  07E0  0020               	movlb	0	; select bank0
 12478  07E1  01A5               	clrf	___fldiv@new_exp
 12479  07E2  01A6               	clrf	___fldiv@new_exp+1
 12480  07E3  3000               	movlw	0
 12481  07E4  00F7               	movwf	___fldiv@b+3
 12482  07E5  3000               	movlw	0
 12483  07E6  00F6               	movwf	___fldiv@b+2
 12484  07E7  3000               	movlw	0
 12485  07E8  00F5               	movwf	___fldiv@b+1
 12486  07E9  3000               	movlw	0
 12487  07EA  00F4               	movwf	___fldiv@b
 12488  07EB  01A4               	clrf	___fldiv@sign
 12489  07EC                     i1l972:	
 12490  07EC  0020               	movlb	0	; select bank0
 12491  07ED  0825               	movf	___fldiv@new_exp,w
 12492  07EE  00F8               	movwf	??___fldiv
 12493  07EF  0878               	movf	??___fldiv,w
 12494  07F0  00AB               	movwf	___fldiv@bexp
 12495  07F1  1C2B               	btfss	___fldiv@bexp,0
 12496  07F2  2FF5               	goto	i1l2986
 12497  07F3  17F6               	bsf	___fldiv@b+2,7
 12498  07F4  2FF9               	goto	i1l974
 12499  07F5                     i1l2986:	
 12500  07F5  307F               	movlw	127
 12501  07F6  00F8               	movwf	??___fldiv
 12502  07F7  0878               	movf	??___fldiv,w
 12503  07F8  05F6               	andwf	___fldiv@b+2,f
 12504  07F9                     i1l974:	
 12505  07F9  362B               	lsrf	___fldiv@bexp,w
 12506  07FA  00F8               	movwf	??___fldiv
 12507  07FB  0878               	movf	??___fldiv,w
 12508  07FC  00F7               	movwf	___fldiv@b+3
 12509  07FD  2EDF               	goto	L5
 12510  07FE                     __end_of___fldiv:	
 12511                           
 12512                           	psect	text52
 12513  1769                     __ptext52:	
 12514 ;; *************** function ___awmod *****************
 12515 ;; Defined at:
 12516 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
 12517 ;; Parameters:    Size  Location     Type
 12518 ;;  divisor         2   50[BANK0 ] int 
 12519 ;;  dividend        2   52[BANK0 ] int 
 12520 ;; Auto vars:     Size  Location     Type
 12521 ;;  sign            1   55[BANK0 ] unsigned char 
 12522 ;;  counter         1   54[BANK0 ] unsigned char 
 12523 ;; Return value:  Size  Location     Type
 12524 ;;                  2   50[BANK0 ] int 
 12525 ;; Registers used:
 12526 ;;		wreg, status,2, status,0
 12527 ;; Tracked objects:
 12528 ;;		On entry : 0/0
 12529 ;;		On exit  : 0/0
 12530 ;;		Unchanged: 0/0
 12531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12532 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12533 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12534 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12535 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12536 ;;Total ram usage:        7 bytes
 12537 ;; Hardware stack levels used:    1
 12538 ;; This function calls:
 12539 ;;		Nothing
 12540 ;; This function is called by:
 12541 ;;		_speedCalc
 12542 ;; This function uses a non-reentrant model
 12543 ;;
 12544                           
 12545                           
 12546                           ;psect for function ___awmod
 12547  1769                     ___awmod:	
 12548                           
 12549                           ;incstack = 0
 12550                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 12551  1769  0020               	movlb	0	; select bank0
 12552  176A  01D7               	clrf	___awmod@sign
 12553  176B  1FD5               	btfss	___awmod@dividend+1,7
 12554  176C  2F74               	goto	i1l2786
 12555  176D  09D4               	comf	___awmod@dividend,f
 12556  176E  09D5               	comf	___awmod@dividend+1,f
 12557  176F  0AD4               	incf	___awmod@dividend,f
 12558  1770  1903               	skipnz
 12559  1771  0AD5               	incf	___awmod@dividend+1,f
 12560  1772  01D7               	clrf	___awmod@sign
 12561  1773  0AD7               	incf	___awmod@sign,f
 12562  1774                     i1l2786:	
 12563  1774  1FD3               	btfss	___awmod@divisor+1,7
 12564  1775  2F7B               	goto	i1l2790
 12565  1776  09D2               	comf	___awmod@divisor,f
 12566  1777  09D3               	comf	___awmod@divisor+1,f
 12567  1778  0AD2               	incf	___awmod@divisor,f
 12568  1779  1903               	skipnz
 12569  177A  0AD3               	incf	___awmod@divisor+1,f
 12570  177B                     i1l2790:	
 12571  177B  0852               	movf	___awmod@divisor,w
 12572  177C  0453               	iorwf	___awmod@divisor+1,w
 12573  177D  1903               	btfsc	3,2
 12574  177E  2FA2               	goto	i1l2808
 12575  177F  01D6               	clrf	___awmod@counter
 12576  1780  0AD6               	incf	___awmod@counter,f
 12577  1781                     i1l2798:	
 12578  1781  1BD3               	btfsc	___awmod@divisor+1,7
 12579  1782  2F8D               	goto	i1l2800
 12580  1783  3001               	movlw	1
 12581  1784                     u316_25:	
 12582  1784  35D2               	lslf	___awmod@divisor,f
 12583  1785  0DD3               	rlf	___awmod@divisor+1,f
 12584  1786  0B89               	decfsz	9,f
 12585  1787  2F84               	goto	u316_25
 12586  1788  3001               	movlw	1
 12587  1789  00FD               	movwf	??___awmod
 12588  178A  087D               	movf	??___awmod,w
 12589  178B  07D6               	addwf	___awmod@counter,f
 12590  178C  2F81               	goto	i1l2798
 12591  178D                     i1l2800:	
 12592  178D  0853               	movf	___awmod@divisor+1,w
 12593  178E  0255               	subwf	___awmod@dividend+1,w
 12594  178F  1D03               	skipz
 12595  1790  2F93               	goto	u318_25
 12596  1791  0852               	movf	___awmod@divisor,w
 12597  1792  0254               	subwf	___awmod@dividend,w
 12598  1793                     u318_25:	
 12599  1793  1C03               	skipc
 12600  1794  2F99               	goto	i1l2804
 12601  1795  0852               	movf	___awmod@divisor,w
 12602  1796  02D4               	subwf	___awmod@dividend,f
 12603  1797  0853               	movf	___awmod@divisor+1,w
 12604  1798  3BD5               	subwfb	___awmod@dividend+1,f
 12605  1799                     i1l2804:	
 12606  1799  3001               	movlw	1
 12607  179A                     u319_25:	
 12608  179A  36D3               	lsrf	___awmod@divisor+1,f
 12609  179B  0CD2               	rrf	___awmod@divisor,f
 12610  179C  0B89               	decfsz	9,f
 12611  179D  2F9A               	goto	u319_25
 12612  179E  3001               	movlw	1
 12613  179F  02D6               	subwf	___awmod@counter,f
 12614  17A0  1D03               	btfss	3,2
 12615  17A1  2F8D               	goto	i1l2800
 12616  17A2                     i1l2808:	
 12617  17A2  0857               	movf	___awmod@sign,w
 12618  17A3  1903               	btfsc	3,2
 12619  17A4  2FAA               	goto	i1l2812
 12620  17A5  09D4               	comf	___awmod@dividend,f
 12621  17A6  09D5               	comf	___awmod@dividend+1,f
 12622  17A7  0AD4               	incf	___awmod@dividend,f
 12623  17A8  1903               	skipnz
 12624  17A9  0AD5               	incf	___awmod@dividend+1,f
 12625  17AA                     i1l2812:	
 12626  17AA  0855               	movf	___awmod@dividend+1,w
 12627  17AB  00D3               	movwf	?___awmod+1
 12628  17AC  0854               	movf	___awmod@dividend,w
 12629  17AD  00D2               	movwf	?___awmod
 12630  17AE  0008               	return
 12631  17AF                     __end_of___awmod:	
 12632  007E                     btemp	set	126	;btemp
 12633  007E                     int$flags	set	126
 12634  007E                     wtemp0	set	126


Data Sizes:
    Strings     51
    Constant    0
    Data        41
    BSS         112
    Persistent  43
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     60      80
    BANK1            80     80      80
    BANK2            80     14      74
    BANK3            80      0      52
    BANK4            80      0      32
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK4[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK4[32]), 

    puts@s	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_5(CODE[3]), hrDisp(BANK3[13]), distanceDisp(BANK3[11]), speedDisp(BANK3[8]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_4(CODE[10]), STR_3(CODE[9]), STR_2(CODE[14]), STR_1(CODE[15]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK2[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK4[32]), STR_5(CODE[3]), hrDisp(BANK3[13]), distanceDisp(BANK3[11]), 
		 -> speedDisp(BANK3[8]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S1091_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK2[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_4(CODE[10]), STR_3(CODE[9]), STR_2(CODE[14]), STR_1(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 15
		 -> STR_4(CODE[10]), STR_3(CODE[9]), STR_2(CODE[14]), STR_1(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK2[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK2[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK4[32]), 

    writeString@string	PTR unsigned char  size(1) Largest target is 13
		 -> hrDisp(BANK3[13]), distanceDisp(BANK3[11]), speedDisp(BANK3[8]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timerISR(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timerISR(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    IOCCF7_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> speedCalc(), IOCCF7_DefaultInterruptHandler(), 

    IOCCF7_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> speedCalc(), Absolute function(), IOCCF7_DefaultInterruptHandler(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _timerISR->___fladd
    _speedCalc->___awmod
    ___flmul->___fldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _timerISR->___fladd
    _IOCCF7_ISR->_speedCalc
    _speedCalc->___awmod
    ___fltol->___flmul
    ___flmul->___fldiv
    ___awmod->___fltol

Critical Paths under _main in BANK1

    _main->_printf
    _writeString->_puts
    _setCursor->_EUSART_Write
    _setCursor->_EUSART_is_tx_ready
    _resetCursor->_puts
    _puts->_fputs
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _abs->___aomod
    _heartBeatCalc->___aldiv
    _heartBeatCalc->___wmul
    ___wmul->___awdiv
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCCF7_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_printf
    _printf->_vfprintf

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   16980
                                             12 BANK2      2     2      0
            _ADC_GetConversionResult
                _ADC_StartConversion
         _IOCCF7_SetInterruptHandler
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                             ___flge
                      _heartBeatCalc
                             _printf
                        _resetCursor
                          _setCursor
                        _writeString
 ---------------------------------------------------------------------------------
 (1) _writeString                                          1     1      0    2879
                                             24 BANK1      1     1      0
                 _EUSART_is_tx_ready
                               _puts
 ---------------------------------------------------------------------------------
 (1) _setCursor                                            4     3      1     688
                                              1 BANK1      4     3      1
                       _EUSART_Write
                 _EUSART_is_tx_ready
 ---------------------------------------------------------------------------------
 (2) _EUSART_is_tx_ready                                   1     1      0      24
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _resetCursor                                          0     0      0    2734
                               _puts
 ---------------------------------------------------------------------------------
 (2) _puts                                                 5     3      2    2734
                                             19 BANK1      5     3      2
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (1) _printf                                              10     4      6    6922
                                             79 BANK1      1     1      0
                                              3 BANK2      9     3      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    6564
                                             74 BANK1      5     2      3
                                              0 BANK2      3     3      0
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    6236
                                             58 BANK1     16    14      2
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    4723
                                             28 BANK1     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    3100
                                             19 BANK1      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     123
                                              0 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 (3) _fputs                                                9     6      3    1549
                                             10 BANK1      9     6      3
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     980
                                              2 BANK1      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      44
                                              1 BANK1      1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             19 BANK1      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     448
                                              0 BANK1     19     3     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     452
                                              0 BANK1     27    11     16
 ---------------------------------------------------------------------------------
 (1) _heartBeatCalc                                       12    10      2    2433
                                             15 BANK1     12    10      2
                            ___aldiv
                            ___awdiv
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              9 BANK1      6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     856
                                              0 BANK1      9     5      4
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                              0 BANK1     15     7      8
 ---------------------------------------------------------------------------------
 (1) ___flge                                              12     4      8     334
                                              0 BANK1     12     4      8
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     642
                     _ADC_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0     174
                                              2 BANK1      1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     174
         _IOCCF7_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCCF7_SetInterruptHandler                           2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_StartConversion                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversionResult                              2     0      2       0
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          0     0      0    7764
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR0_ISR                                            0     0      0    2262
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                           _timerISR *
 ---------------------------------------------------------------------------------
 (12) _timerISR                                            0     0      0    2262
                            ___fladd
 ---------------------------------------------------------------------------------
 (13) ___fladd                                            20    12      8    2262
                                              0 COMMON    12     4      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (12) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _PIN_MANAGER_IOC                                     0     0      0    5502
                         _IOCCF7_ISR
 ---------------------------------------------------------------------------------
 (12) _IOCCF7_ISR                                          0     0      0    5502
                   Absolute function *
     _IOCCF7_DefaultInterruptHandler *
                          _speedCalc *
 ---------------------------------------------------------------------------------
 (13) _speedCalc                                           4     4      0    5502
                                             56 BANK0      4     4      0
                            ___awmod
                            ___fldiv
                            ___flmul
                            ___fltol
                          i1___awdiv
 ---------------------------------------------------------------------------------
 (14) i1___awdiv                                           9     5      4     352
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (14) ___fltol                                            11     7      4     381
                                             39 BANK0     11     7      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (14) ___flmul                                            26    18      8    2873
                                             13 BANK0     26    18      8
                          __Umul8_16
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (15) __Umul8_16                                           9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (14) ___fldiv                                            26    18      8    1273
                                              0 COMMON    13     5      8
                                              0 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 (14) ___awmod                                             7     3      4     600
                                             13 COMMON     1     1      0
                                             50 BANK0      6     2      4
                            ___flmul (ARG)
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (13) _IOCCF7_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversionResult
   _ADC_StartConversion
   _IOCCF7_SetInterruptHandler
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCCF7_SetInterruptHandler
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _TMR0_SetInterruptHandler
   ___flge
   _heartBeatCalc
     ___aldiv
     ___awdiv
     ___lwdiv
     ___wmul
       ___awdiv (ARG)
   _printf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART_Write
             _fputs
               _fputc
                 _putch
                   _EUSART_Write
             _strlen
         _fputc
           _putch
             _EUSART_Write
   _resetCursor
     _puts
       _fputc
         _putch
           _EUSART_Write
       _fputs
         _fputc
           _putch
             _EUSART_Write
   _setCursor
     _EUSART_Write
     _EUSART_is_tx_ready
   _writeString
     _EUSART_is_tx_ready
     _puts
       _fputc
         _putch
           _EUSART_Write
       _fputs
         _fputc
           _putch
             _EUSART_Write

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
     _IOCCF7_ISR
       Absolute function(Fake) *
       _IOCCF7_DefaultInterruptHandler *
       _speedCalc *
         ___awmod
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
         ___fldiv
         ___flmul
           __Umul8_16
           ___fldiv (ARG)
         ___fltol
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
         i1___awdiv
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _timerISR *
       ___fladd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3C      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     50      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      E      4A       9       92.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      34      11       65.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      20      13       40.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     14C      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     14C      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu Apr 11 14:05:56 2019

                                            _P 0168                                              _T 006D  
                                 ___fldiv@aexp 002C                                   ___fldiv@bexp 002B  
                                 ___fldiv@sign 0024                                    __CFG_CP$OFF 0000  
                                           l69 14B3                                             _QS 0146  
                                 ___awdiv@sign 00A6                            ___wmul@multiplicand 00AB  
                              _timer0ReloadVal 0167                            __Umul8_16@word_mpld 0076  
                                          l350 031D                                            l351 0423  
                                          l348 02F2                                            l544 0870  
                                          l552 0EF3                                            l561 0FC1  
                                          l553 0EFB                                            l706 0BBA  
                                          l547 0890                                            l387 1728  
                                          l557 0F17                                            l558 0F2B  
                                          l593 158D                                            l658 099E  
                                          l771 092C                                            l693 0D91  
                                          l774 097A                                            _IBI 0069  
                                          _BPM 0136                                            _abs 1537  
                                          _amp 0138                                            _pad 0855  
                                          _rpm 0147                 ?_EUSART_SetFramingErrorHandler 00A0  
                                 ___awmod@sign 0057                                   __CFG_BORV$LO 0000  
                                          wreg 0009                                   __CFG_IESO$ON 0000  
                                 ___flmul@aexp 003F                                   ___flmul@bexp 0040  
       __end_of_IOCCF7_DefaultInterruptHandler 0003        __size_of_IOCCF7_DefaultInterruptHandler 0001  
               _IOCCF7_DefaultInterruptHandler 0002                                   ___flmul@sign 003A  
                                 ___flmul@temp 0045                                   ___flmul@prod 0041  
                                 __CFG_LVP$OFF 0000                                   __CFG_ZCD$OFF 0000  
                                 ___fltol@exp1 0051                                           ?_abs 00B3  
                                         l3222 0AB6                                           l3216 0A93  
                                         l3208 0A56                                           l3232 0AC8  
                                         l3226 0ABC                                           l2700 0B8D  
                                         l2620 086E                                           l2702 0B99  
                                         l2606 1556                                           l2630 089F  
                                         l2608 1562                                           l2616 0866  
                                         l3602 0A06                                           l2650 0D05  
                                         l2626 0872                                           l3620 0819  
                                         l2660 0D1C                                           l2644 0CD8  
                                         l2580 1734                                           l2732 0F0F  
                                         l3452 14D3                                           l3630 0821  
                                         l3614 080E                                           l2670 0D64  
                                         l2662 0D2B                                           l2742 0F58  
                                         l3632 082D                                           l2672 0D70  
                                         l2648 0D00                                           l2584 1757  
                                         l2752 0F33                                           l2760 0FCD  
                                         l3642 0848                                           l3554 1587  
                                         l3810 03BA                                           l2682 0B19  
                                         l2586 1760                                           l2770 0FE0  
                                         l2738 0F26                                           l3546 165E  
                                         l3730 170C                                           l3660 16C0  
                                         l3804 03B5                                           l2596 162C  
                                         l2764 0FD5                                           l3548 167C  
                                         l3724 16FD                                           l3646 0850  
                                         l3638 083F                                           l3662 16CC  
                                         l2694 0B4E                                           l2686 0B41  
                                         l2598 164D                                           l2774 0FED  
                                         l3726 1702                                           l3734 1711  
                                         l3718 16EE                                           ?_pad 00B3  
                                         l3584 09BF                                           l3576 09AF  
                                         l3672 16E7                                           l2696 0B5D  
                                         l3728 1707                                           l3744 150C  
                                         l3594 09ED                                           l3586 09CD  
                                         l3668 16DE                                           l3836 0469  
                                         l3598 09F8                                           l3790 038E  
                                         l3950 0C3E                                           l3926 0BF1  
                                         l3884 0946                                           l3796 03A9  
                                         l3956 0C73                                           l3888 0960  
                                         l3998 171A                                           STR_1 1800  
                                         STR_2 180F                                           STR_3 1827  
                                         STR_4 181D                                           STR_5 1830  
                                         _LATA 010C                                           _LATB 010D  
                                         _LATC 010E                                           u3025 0F07  
                                         u3055 0FCB                                           u3075 0F47  
                                         u3085 0F53                                           u5015 03E3  
                                         u5025 0432                                           u2705 087C  
                                         u5045 0473                                           u2805 0D51  
                                         u2725 1541                                           u2655 1755  
                                         u5207 0BE5                                           u2905 0B7B  
                                         u5217 151B                                           u2770 0D0D  
                                         u4515 158E                                           u5227 16F9  
                                         u4605 09E2                                           u4525 1593  
                                         u4615 09EE                                           u4705 0838  
                                         u2970 0EC9                                           u4715 0840  
                                         u2980 0ECA                                           u4575 09C2  
                                         u4905 02DA                                           u4595 09CE  
                                         u4675 0824                                           u4755 16C3  
                                         u4915 02EB                                           u4925 0301  
                                         u4695 082E                                           u4775 16CD  
                                         u4935 0313                                           u4785 16D7  
                                         u4945 0327                                           u4795 16DF  
                                         u4955 0338                                           u4975 0365  
                                         u4895 02B1                                           u4995 03A7  
                                         _TMR0 0015                                           _WPUA 020C  
                                         _WPUB 020D                                           _WPUC 020E  
                                 __CFG_WRT$OFF 0000                                  __CFG_FCMEN$ON 0000  
                                         abs@a 00B3                                           _dbuf 0220  
                                         _main 0BCC                                           _dtoa 0EAD  
                                         _rate 01C0                                           _prec 0134  
                                         _nout 0130                                           pad@i 00B7  
                                         pad@p 00B4                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           pad@w 00B9  
                                         btemp 007E                                           _puts 1569  
                                __CFG_BOREN$ON 0000                                           start 0014  
                              ___fldiv@new_exp 0025                                  __CFG_MCLRE$ON 0000  
                                        ??_abs 00B5                                          ??_pad 00B6  
                      __end_of_TMR0_Initialize 1537                 ??_TMR0_DefaultInterruptHandler 0070  
                                ?_EUSART_Write 0070                 __size_of_OSCILLATOR_Initialize 0007  
                __end_of_OSCILLATOR_Initialize 146D                            __size_of_IOCCF7_ISR 000D  
                                ___fltol@sign1 0050                                __end_of___aldiv 0A0F  
                              __end_of___aodiv 0DA3                                __end_of___fladd 0684  
                                        ?_main 0070                                          ?_dtoa 00BC  
                               i1___awdiv@sign 0076                                __end_of___aomod 0BCC  
                              __end_of___fldiv 07FE                                __end_of___awdiv 0855  
                                __CFG_WDTE$OFF 0000                                __end_of___awmod 17AF  
                              __end_of___flmul 0286                                __end_of___fltol 0911  
                                        ?_puts 00B3                                ___awdiv@divisor 00A0  
                              __end_of___lwdiv 16EC                                          i1l242 0012  
                                        i1l238 000D                                          i1l900 055E  
                                        i1l915 0602                                          i1l950 06CD  
                                        i1l936 067B                                          i1l928 0662  
                                        i1l794 08F5                                          i1l971 07D4  
                                        i1l972 07EC                                          i1l974 07F9  
                                        i1l894 04E8                                          i1l898 057C  
                              ___awdiv@counter 00A5                                   vfpfcnvrt@fmt 00DA  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TRISC 008E               __size_of_ADC_GetConversionResult 0006  
                                  _writeString 150A              __size_of_TMR0_SetInterruptHandler 0009  
                    ?_TMR0_SetInterruptHandler 00A0                               __end_of_TMR0_ISR 14F5  
                                        _Pulse 0066                        __end_of_PIN_MANAGER_IOC 144E  
                                        _hrInt 013C                                          _flags 0060  
                                        _fputc 1729                                          _fputs 1629  
                                        _speed 012C                                          pad@fp 00BB  
                                        _width 0132                                          _putch 1454  
                                        dtoa@d 00BC                                          dtoa@i 00D8  
                                        dtoa@n 00D0                                          dtoa@p 00C9  
                                        dtoa@s 00CE                                          dtoa@w 00CC  
                                        pclath 000A                                          puts@s 00B3  
                                        status 0003                                          wtemp0 007E  
                           __size_ofi1___awdiv 0051                                __initialization 0016  
                                 __end_of_main 0CAC                                   __end_of_dtoa 1000  
                                 __end_of_puts 1584                                 ??_EUSART_Write 00A0  
                               __CFG_LPBOR$OFF 0000                    ?_INTERRUPT_InterruptManager 0070  
                                       ??_main 015B                                         ??_dtoa 00C4  
                                       ??_puts 00B5                                 __CFG_PLLEN$OFF 0000  
            _EUSART_DefaultFramingErrorHandler 0000                                         _ADCON0 009D  
                                       _ADCON1 009E                                         _ADCON2 009F  
                   _EUSART_OverrunErrorHandler 0163                                         ?_fputc 00A2  
                                       ?_fputs 00AA                                         _ADRESH 009C  
                                       _ADRESL 009B                               ___awdiv@dividend 00A2  
                                       _ANSELA 018C                                         ?_putch 0070  
                                       _ANSELB 018D                                         _ANSELC 018E  
                 ??_IOCCF7_SetInterruptHandler 00A2                                         _BORCON 0116  
                                       _RC1REG 0199                                         _RC1STA 019D  
                                       i1l1002 0279                                         i1l3010 007E  
                                       _RB7PPS 0E9F                                         i1l3100 0211  
                                       i1l3110 023A                                         i1l3006 0074  
                                       i1l1096 15B0                                         i1l3120 0266  
                                       i1l3024 0097                                         i1l3008 0076  
                                       _ODCONA 028C                                         i1l3114 024F  
                                       i1l3026 0099                                         _ODCONB 028D  
                                       _ODCONC 028E                                         i1l3036 00AF  
                                       i1l3028 00A1                                         i1l3140 17B9  
                                       i1l3090 01F8                                         i1l3146 17C4  
                                       i1l3402 0633                                         i1l3172 17FB  
                                       i1l3164 17EA                                         i1l3156 17CC  
                                       i1l3260 04C0                                         i1l2710 15AA  
                                       i1l3158 17D8                                         i1l3406 0635  
                                       i1l3326 0567                                         i1l3318 052E  
                                       i1l3254 04B5                                         i1l2800 178D  
                                       i1l3096 020F                                         i1l3088 01E1  
                                       i1l3168 17F3                                         i1l3424 0672  
                                       i1l3352 059D                                         i1l3344 058A  
                                       i1l3328 0569                                         i1l3336 0578  
                                       i1l3522 14C5                                         i1l3354 059F  
                                       i1l3362 05AF                                         i1l3282 04E0  
                                       i1l3258 04B8                                         i1l2812 17AA  
                                       i1l2804 1799                                         i1l2900 06EC  
                                       i1l3428 0676                                         i1l3380 0614  
                                       i1l3372 05FA                                         i1l2822 08BE  
                                       i1l3278 04DD                                         i1l2808 17A2  
                                       i1l2840 08F1                                         i1l3288 04F2  
                                       i1l2906 06F8                                         i1l2818 08B5  
                                       i1l3394 0628                                         i1l2932 0758  
                                       i1l3388 0621                                         i1l3396 062A  
                                       i1l2790 177B                                         i1l2950 0763  
                                       i1l2926 073F                                         i1l2934 0721  
                                       i1l2870 06A1                                         i1l2838 08E3  
                                       i1l2952 077A                                         i1l2936 075D  
                                       i1l2872 06A9                                         i1l2848 0902  
                                       i1l2786 1774                                         i1l2962 0793  
                                       i1l2890 06C5                                         i1l2866 069E  
                                       i1l2972 07BC                                         i1l2798 1781  
                                       i1l2958 0791                                         i1l2886 06C2  
                                       i1l2986 07F5                                         u410_25 0542  
                                       u411_20 054C                                         u323_25 08C7  
                                       u412_20 054D                                         u316_25 1784  
                   __end_of_EUSART_is_tx_ready 14D6                                         u341_25 0729  
                                       u318_25 1793                                         u350_25 076F  
                                       u342_25 0730                                         u326_25 08E4  
                                       u422_25 05A4                                         u423_23 05C2  
                                       u319_25 179A                                         u415_25 056E  
                                       u344_25 0739                                         u345_25 074D  
                                       u329_25 08F9                                         u370_25 0154  
                                       u371_25 01AA                                         u427_25 0615  
                                       u348_25 0766                                         u372_25 01C1  
                                       u357_25 07AA                                         u373_25 01D0  
                                       u437_25 064D                                         u358_25 07C5  
                                       u374_25 01E4                                         u390_25 17CF  
                                       u359_25 07DE                                         u295_25 15B1  
                                       u383_25 0228                                         u384_25 0243  
                                       u376_25 01ED                                         u392_25 17D9  
                                       u385_25 0259                                         u369_25 0125  
                                       u393_25 17E3                                         _OSCCON 0099  
                                       u394_25 17EB                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _TX1REG 019A  
                                       u274lld 0CD5                                         _TX1STA 019E  
                                 ?_resetCursor 0070                                         u285lld 0B16  
                           heartBeatCalc@i_630 00B9                                 __CFG_PWRTE$OFF 0000  
                                       _Signal 0062                                   vfprintf@cfmt 0150  
                                       ___flge 0911                                         _adcVal 013A  
                                    ??___aldiv 00A8                                      ??___aodiv 00B0  
                                    ??___fladd 0020                                      ??___aomod 00B0  
                                       ___wmul 1584                                      ??___fldiv 0078  
                                    ??___awdiv 00A4                                 __CFG_STVREN$ON 0000  
                                    ??___awmod 007D                                      ??___flmul 0035  
                                    ??___fltol 004B                                         _hrDisp 01A0  
                                    ??___lwdiv 00A4                                         _distHi 0144  
                                       _distLo 0142                               ?_TMR0_Initialize 0070  
                             ___awdiv@quotient 00A7                                ___awmod@divisor 0052  
                              ___awmod@counter 0056                                         _printf 14F5  
                                       _thresh 006B                                         pad@buf 00B3  
                                       dtoa@fp 00CB                                         _strlen 1550  
                            __end_ofi1___awdiv 1800            __size_of_IOCCF7_SetInterruptHandler 0009  
                                       fputc@c 00A2                                         fputs@c 00B0  
                                       fputs@i 00B1                                         fputs@s 00AA  
                           __size_of__Umul8_16 001F                               __end_of_timerISR 1604  
                             __end_of_vfprintf 1684       TMR0_SetInterruptHandler@InterruptHandler 00A0  
   IOCCF7_SetInterruptHandler@InterruptHandler 00A0                               ?_PIN_MANAGER_IOC 0070  
                                 ??_IOCCF7_ISR 007E                                     ___flge@ff1 00A0  
                                   ___flge@ff2 00A4                              _SYSTEM_Initialize 14D6  
                      __end_of__initialization 0056                                     _adcCounter 0124  
                           ?_SYSTEM_Initialize 0070                                     ___fltol@f1 0047  
                 __size_of_ADC_StartConversion 0003                                 __pcstackCOMMON 0070  
                                 __pidataBANK0 146D                                   __pidataBANK2 07FE  
                                 __pidataBANK3 15BF                            ??_SYSTEM_Initialize 00A3  
                                    ?_TMR0_ISR 0070                                  __end_of_fputc 1769  
                                __end_of_fputs 1652                                  __end_of_putch 145A  
                           __end_of_IOCCF7_ISR 14C8                        _ADC_GetConversionResult 144E  
                               _OPTION_REGbits 0095                ??_EUSART_SetOverrunErrorHandler 00A2  
                        __end_of_heartBeatCalc 049B                                        ??_fputc 00A5  
                    __end_of_SYSTEM_Initialize 14E5                                        ??_fputs 00AD  
                                      ??_putch 00A1                                     __pbssBANK0 005C  
                                   __pbssBANK2 0120                                     __pbssBANK3 01C0  
                                   __pbssBANK4 0220                           __end_of_EUSART_Write 14BB  
                            __end_of__Umul8_16 15BF                                     __pmaintext 0BCC  
                                      ?___flge 00A0               __end_of_TMR0_SetInterruptHandler 14B1  
                                      ?___wmul 00A9                                     ??_TMR0_ISR 007C  
                              __CFG_PPS1WAY$ON 0000                             __size_of_setCursor 003D  
                                   __pintentry 0004                                        ?_printf 0152  
                      __size_of_ADC_Initialize 0008                                        ?_strlen 00A0  
                           __size_of_speedCalc 010A                             i1___awdiv@dividend 0072  
                              __CFG_WDTCCS$SWC 0000                                   ?_writeString 0070  
                           __size_of_vfpfcnvrt 00DE                                        _OSCTUNE 0098  
                                      _SLRCONA 030C                                        _SLRCONB 030D  
                                      _SLRCONC 030E             __end_of_IOCCF7_SetInterruptHandler 14A8  
                   _IOCCF7_SetInterruptHandler 149F                       ??_EUSART_SetErrorHandler 00A2  
                          heartBeatCalc@adcVal 00AF                           __size_of_resetCursor 0008  
                           i1___awdiv@quotient 0077                                      ?_timerISR 0070  
                                      ___aldiv 098D                                __size_of___flge 007C  
                                      ___aodiv 0CAC                                        ___fladd 049B  
                                      ___aomod 0AED                                        ___fldiv 0684  
                                      ___awdiv 0803                                        ___awmod 1769  
                                      ___flmul 005A                                        ___fltol 08AB  
                              __size_of___wmul 001C                                        ___lwdiv 16B7  
                                    ?_vfprintf 00EA                      ??_ADC_GetConversionResult 00A2  
                                      __ptext1 150A                                        __ptext2 16EC  
                                      __ptext3 14C8                                        __ptext4 147C  
                                      __ptext5 1569                                        __ptext6 14F5  
                                      __ptext7 1652                                        __ptext8 0A0F  
                                      __ptext9 0EAD                                __size_of_printf 0015  
                              __size_of_strlen 0019                                        _counter 014B  
                        _OSCILLATOR_Initialize 1466                                   __size_of_abs 0019  
                                 __size_of_pad 0056                               ___awmod@dividend 0054  
                             ___aldiv@dividend 00A4                       ??_PIN_MANAGER_Initialize 00A2  
                                    _IOCCFbits 0399                                        _speedHi 013E  
                                    _IOCCNbits 0398                                        _speedLo 0140  
                                    _IOCCPbits 0397                     __size_of_SYSTEM_Initialize 000F  
                                      clrloop0 145B                                     _secondBeat 0067  
                         end_of_initialization 0056                              __end_of_setCursor 1729  
        __end_of_EUSART_SetOverrunErrorHandler 149F         __size_of_EUSART_SetOverrunErrorHandler 0009  
                _EUSART_SetOverrunErrorHandler 1496                                        fputc@fp 00A4  
                                      init_ram 1460                                        fputs@fp 00AC  
                                      initloop 1461                              __end_of_speedCalc 0EAD  
                            _EUSART_Initialize 1604                             ?_EUSART_Initialize 0070  
                            __end_of_vfpfcnvrt 0AED                                     ??_timerISR 007C  
                             ___aldiv@quotient 00AB                             _EUSART_is_tx_ready 14C8  
                                   ??_vfprintf 00ED                                        strlen@a 00A3  
                                      strlen@s 00A4                            ??_EUSART_Initialize 00A2  
                                 _distanceDisp 01AD                       _TMR0_SetInterruptHandler 14A8  
                          ?_EUSART_is_tx_ready 0070                                    ___fladd@grs 007B  
                             __CFG_FOSC$INTOSC 0000                          __size_of_EUSART_Write 000A  
                          _ADC_StartConversion 0800                                      i1___awdiv 17AF  
                                  ___fldiv@grs 0027                                    ___fldiv@rem 0020  
              __size_of_EUSART_SetErrorHandler 0009                                    ___flmul@grs 003B  
                    __end_of_EUSART_Initialize 1629                           ??_EUSART_is_tx_ready 00A0  
                         ?_ADC_StartConversion 0070                                 _speedCalc$1328 0058  
                               __end_of___flge 098D                     _EUSART_DefaultErrorHandler 0000  
                                  vfpfcnvrt@ap 00DB                                    vfpfcnvrt@fp 00E9  
                                  vfpfcnvrt@ll 00E1                                 __end_of___wmul 15A0  
                                 _lastBeatTime 0120                                   _EUSART_Write 14B1  
                            __size_of_TMR0_ISR 0010                                 _ADC_Initialize 1474  
                       ?_OSCILLATOR_Initialize 0070                              writeString@string 00B8  
                               __end_of_printf 150A                                 __end_of_strlen 1569  
                          start_initialization 0016                       __size_of_TMR0_Initialize 0018  
              __size_of_PIN_MANAGER_Initialize 0033                                    __end_of_abs 1550  
                                  __end_of_pad 08AB                                     ?i1___awdiv 0070  
                         __size_of_writeString 0015                         _EUSART_is_tx_ready$167 00A0  
                                  putch@txData 00A1                                  _sampleCounter 005C  
                     __size_of_PIN_MANAGER_IOC 0006                 ?_EUSART_SetOverrunErrorHandler 00A0  
                        ??_ADC_StartConversion 00A0                                    vfprintf@fmt 00EA  
                   _EUSART_FramingErrorHandler 0165                                       ??___flge 00A8  
                                     ??___wmul 00AD                         _EUSART_SetErrorHandler 1484  
                       __end_of_ADC_Initialize 147C                                      __Umul8_16 15A0  
                                  __pdataBANK0 0069                                    __pdataBANK2 0168  
                                  __pdataBANK3 01A0                                       ??_printf 00EF  
                                     ??_strlen 00A2                                      ___fladd@a 0074  
                                    ___fladd@b 0070                                      ___fldiv@a 0070  
                                    ___fldiv@b 0074                                      ___flmul@a 0031  
                                    ___flmul@b 002D                                      ___latbits 0002  
                                __pcstackBANK0 0020                                  __pcstackBANK1 00A0  
                                __pcstackBANK2 014F                               ___aodiv@dividend 00A8  
                               heartBeatCalc@N 00B7                                 heartBeatCalc@i 00B5  
                  ?_IOCCF7_SetInterruptHandler 00A0                     __size_of_EUSART_Initialize 0025  
                        _TMR0_InterruptHandler 015D                                      __pnvBANK2 015D  
                             ___lwdiv@dividend 00A2                         _PIN_MANAGER_Initialize 1684  
                                     ?___aldiv 00A0                                       ?___aodiv 00A0  
                                     ?___fladd 0070                                       ?___aomod 00A0  
                                     ?___fldiv 0070                                       ?___awdiv 00A0  
                             ___aodiv@quotient 00B3                                       ?___awmod 0052  
                                     ?___flmul 002D                                       ?___fltol 0047  
                       __size_of_heartBeatCalc 0215                                      _heartRate 0128  
                                   ?__Umul8_16 0070                                     setCursor@a 00A4  
                                   setCursor@b 00A1                                       ?___lwdiv 00A0  
                              ?_ADC_Initialize 0070                              __size_of_timerISR 0025  
                            i1___awdiv@divisor 0070                              i1___awdiv@counter 0075  
                 ??_INTERRUPT_InterruptManager 007E                              __size_of_vfprintf 0032  
                                     _BAUD1CON 019F                                      _firstBeat 006F  
                                  ??i1___awdiv 0074                               ___lwdiv@quotient 00A5  
                               __size_of_fputc 0040                                 __size_of_fputs 0029  
                               __size_of_putch 0006                                ___aldiv@divisor 00A0  
                            ??_TMR0_Initialize 00A2                                  ??_resetCursor 00B8  
                    heartBeatCalc@runningTotal 00B3                                ___aldiv@counter 00A9  
                               ___wmul@product 00AD         EUSART_SetErrorHandler@interruptHandler 00A0  
                                    _setCursor 16EC                                      clear_ram0 145A  
                            _eusartRxLastError 0068            __size_of_INTERRUPT_InterruptManager 0010  
                   ??_TMR0_SetInterruptHandler 00A2                                       _PIR1bits 0010  
              ??_EUSART_SetFramingErrorHandler 00A2                                      _puts$1138 00B7  
                                    _speedCalc 0DA3                                      _speedDisp 01B8  
             ??_IOCCF7_DefaultInterruptHandler 0070                ?_IOCCF7_DefaultInterruptHandler 0070  
                         __CFG_WDTCPS$WDTCPS1F 0000                                       _TMR0_ISR 14E5  
            _EUSART_DefaultOverrunErrorHandler 0000                              ??_PIN_MANAGER_IOC 007E  
                                    _vfpfcnvrt 0A0F                                     _ADCON0bits 009D  
                            ___wmul@multiplier 00A9                                  _heartBeatCalc 0286  
                                   ?_setCursor 00A1                                     vfprintf@ap 00EC  
                                   vfprintf@fp 014F                       ?_ADC_GetConversionResult 00A0  
                          __end_of_resetCursor 1484                                     ?_speedCalc 0070  
                      ??_OSCILLATOR_Initialize 00A0                                    ??__Umul8_16 0072  
                          _EUSART_ErrorHandler 0161                               __size_of___aldiv 0082  
                             __size_of___aodiv 00F7                               __size_of___fladd 01E9  
                             __size_of___aomod 00DF                               __size_of___fldiv 017A  
                             __size_of___awdiv 0052                               __size_of___awmod 0046  
                             __size_of___flmul 022C                               __size_of___fltol 0066  
                                   ?_vfpfcnvrt 00DA                               __size_of___lwdiv 0035  
                              ___aodiv@divisor 00A0                                ___aodiv@counter 00B1  
                                     _dtoa$792 00C7                                ___lwdiv@divisor 00A0  
                              ___lwdiv@counter 00A7                                       __ptext10 0855  
                                     __ptext11 1550                                       __ptext20 1584  
                                     __ptext12 1629                                       __ptext21 16B7  
                                     __ptext13 1729                                       __ptext30 1466  
                                     __ptext22 0803                                       __ptext14 1454  
                                     __ptext31 1604                                       __ptext23 098D  
                                     __ptext15 14B1                                       __ptext40 0003  
                                     __ptext32 1496                                       __ptext24 0911  
                                     __ptext16 1537                                       __ptext41 15DF  
                                     __ptext33 148D                                       __ptext25 14D6  
                                     __ptext17 0AED                                       __ptext50 15A0  
                                     __ptext42 049B                                       __ptext34 1484  
                                     __ptext26 151F                                       __ptext18 0CAC  
                                     __ptext51 0684                                       __ptext43 1448  
                                     __ptext35 1474                                       __ptext27 14A8  
                                     __ptext19 0286                                       __ptext52 1769  
                                     __ptext44 14BB                                       __ptext36 0800  
                                     __ptext28 1684                                       __ptext45 0002  
                                     __ptext37 144E                                       __ptext29 149F  
                                     __ptext46 0DA3                                       __ptext47 17AF  
                                     __ptext39 14E5                                       __ptext48 08AB  
                                     __ptext49 005A                                 ?_heartBeatCalc 00AF  
                                     _distance 0064                                     _IOCCF7_ISR 14BB  
                                __size_of_main 00E0                                  __size_of_dtoa 0153  
                                __size_of_puts 001B                    __size_of_EUSART_is_tx_ready 000E  
         __end_of_TMR0_DefaultInterruptHandler 0004          __size_of_TMR0_DefaultInterruptHandler 0001  
                 _TMR0_DefaultInterruptHandler 0003                           __CFG_WDTCWS$WDTCWSSW 0000  
                      ?_EUSART_SetErrorHandler 00A0                                     _RC1STAbits 019D  
EUSART_SetOverrunErrorHandler@interruptHandler 00A0                                       _timerISR 15DF  
                                     int$flags 007E                                       _vfprintf 1652  
           __end_of_INTERRUPT_InterruptManager 0014                     _INTERRUPT_InterruptManager 0004  
                                    printf@fmt 0152          __end_of_EUSART_SetFramingErrorHandler 1496  
       __size_of_EUSART_SetFramingErrorHandler 0009                  _EUSART_SetFramingErrorHandler 148D  
                             ___aomod@dividend 00A8                                  ??_writeString 00B8  
                                   _INTCONbits 000B                                       intlevel1 0000  
                  __end_of_ADC_StartConversion 0803                        ?_PIN_MANAGER_Initialize 0070  
                                  _resetCursor 147C                __end_of_ADC_GetConversionResult 1454  
               __end_of_EUSART_SetErrorHandler 148D                                    ??_setCursor 00A2  
                            __CFG_CLKOUTEN$OFF 0000                               ??_ADC_Initialize 00A0  
                ?_TMR0_DefaultInterruptHandler 0070                                    ??_speedCalc 007E  
                                     printf@ap 015A  EUSART_SetFramingErrorHandler@interruptHandler 00A0  
                              ___aomod@divisor 00A0                                    ??_vfpfcnvrt 00DC  
                              ___aomod@counter 00B1                                  __pstringtext1 1800  
                                __pstringtext2 180F                                  __pstringtext3 181D  
                                __pstringtext4 1827                                  __pstringtext5 1830  
                                __pstringtext6 0000                         __Umul8_16@multiplicand 0070  
                                   _OPTION_REG 0095                                _TMR0_Initialize 151F  
                              ??_heartBeatCalc 00B1                                   ___aldiv@sign 00AA  
                                   _TX1STAbits 019E                                  ___fladd@signs 0078  
                           EUSART_Write@txData 00A0                            __end_of_writeString 151F  
                                 ___aodiv@sign 00B2                 __end_of_PIN_MANAGER_Initialize 16B7  
                                  ?_IOCCF7_ISR 0070                                   ___fladd@aexp 0079  
                                 ___fladd@bexp 007A                                _PIN_MANAGER_IOC 1448  
                         __Umul8_16@multiplier 0078                                   ___aomod@sign 00B2  
                      _IOCCF7_InterruptHandler 015F                              __Umul8_16@product 0074  
