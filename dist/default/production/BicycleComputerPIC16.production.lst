

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Apr 13 16:17:25 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1619
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	idataBANK3,global,class=CODE,delta=2
     7                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
     8                           	psect	stringtext1,global,class=STRCODE,delta=2
     9                           	psect	stringtext2,global,class=STRCODE,delta=2
    10                           	psect	stringtext3,global,class=STRCODE,delta=2
    11                           	psect	stringtext4,global,class=STRCODE,delta=2
    12                           	psect	stringtext5,global,class=STRCODE,delta=2
    13                           	psect	stringtext6,global,class=STRCODE,delta=2
    14                           	psect	cinit,global,class=CODE,merge=1,delta=2
    15                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    18                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    19                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    20                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    21                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    22                           	psect	inittext,global,class=CODE,delta=2
    23                           	psect	clrtext,global,class=CODE,delta=2
    24                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    25                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    26                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    27                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    28                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    29                           	psect	text1,local,class=CODE,merge=1,delta=2
    30                           	psect	text2,local,class=CODE,merge=1,delta=2
    31                           	psect	text3,local,class=CODE,merge=1,delta=2
    32                           	psect	text4,local,class=CODE,merge=1,delta=2
    33                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text7,local,class=CODE,merge=1,delta=2
    36                           	psect	text8,local,class=CODE,merge=1,delta=2
    37                           	psect	text9,local,class=CODE,merge=1,delta=2
    38                           	psect	text10,local,class=CODE,merge=1,delta=2
    39                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text14,local,class=CODE,merge=1,delta=2
    43                           	psect	text15,local,class=CODE,merge=1,delta=2
    44                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    46                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    47                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    48                           	psect	text20,local,class=CODE,merge=1,delta=2
    49                           	psect	text21,local,class=CODE,merge=1,delta=2
    50                           	psect	text22,local,class=CODE,merge=1,delta=2
    51                           	psect	text23,local,class=CODE,merge=1,delta=2
    52                           	psect	text24,local,class=CODE,merge=1,delta=2
    53                           	psect	text25,local,class=CODE,merge=1,delta=2
    54                           	psect	text26,local,class=CODE,merge=1,delta=2
    55                           	psect	text27,local,class=CODE,merge=1,delta=2
    56                           	psect	text28,local,class=CODE,merge=1,delta=2
    57                           	psect	text29,local,class=CODE,merge=1,delta=2
    58                           	psect	text30,local,class=CODE,merge=1,delta=2
    59                           	psect	text31,local,class=CODE,merge=1,delta=2
    60                           	psect	text32,local,class=CODE,merge=1,delta=2
    61                           	psect	intentry,global,class=CODE,delta=2
    62                           	psect	text34,local,class=CODE,merge=1,delta=2
    63                           	psect	text35,local,class=CODE,merge=1,delta=2
    64                           	psect	text36,local,class=CODE,merge=1,delta=2
    65                           	psect	text37,local,class=CODE,merge=1,delta=2,group=1
    66                           	psect	text38,local,class=CODE,merge=1,delta=2,group=1
    67                           	psect	text39,local,class=CODE,merge=1,delta=2
    68                           	psect	text40,local,class=CODE,merge=1,delta=2
    69                           	psect	text41,local,class=CODE,merge=1,delta=2
    70                           	psect	text42,local,class=CODE,merge=1,delta=2
    71                           	psect	text43,local,class=CODE,merge=1,delta=2
    72                           	psect	text44,local,class=CODE,merge=1,delta=2,group=1
    73                           	psect	text45,local,class=CODE,merge=1,delta=2
    74                           	psect	text46,local,class=CODE,merge=1,delta=2
    75                           	psect	text47,local,class=CODE,merge=1,delta=2
    76                           	psect	text48,local,class=CODE,merge=1,delta=2
    77                           	psect	text49,local,class=CODE,merge=1,delta=2,group=1
    78                           	psect	text50,local,class=CODE,merge=1,delta=2,group=1
    79                           	psect	text51,local,class=CODE,merge=1,delta=2,group=1
    80                           	psect	text52,local,class=CODE,merge=1,delta=2,group=1
    81                           	psect	text53,local,class=CODE,merge=1,delta=2,group=1
    82                           	psect	text54,local,class=CODE,merge=1,delta=2,group=1
    83                           	dabs	1,0x7E,2
    84  0000                     
    85                           ; Version 2.05
    86                           ; Generated 20/12/2018 GMT
    87                           ; 
    88                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    89                           ; All rights reserved.
    90                           ; 
    91                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    92                           ; 
    93                           ; Redistribution and use in source and binary forms, with or without modification, are
    94                           ; permitted provided that the following conditions are met:
    95                           ; 
    96                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    97                           ;        conditions and the following disclaimer.
    98                           ; 
    99                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   100                           ;        of conditions and the following disclaimer in the documentation and/or other
   101                           ;        materials provided with the distribution.
   102                           ; 
   103                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   104                           ;        software without specific prior written permission.
   105                           ; 
   106                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   107                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   108                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   109                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   110                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   111                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   112                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   113                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   114                           ; 
   115                           ; 
   116                           ; Code-generator required, PIC16F1619 Definitions
   117                           ; 
   118                           ; SFR Addresses
   119  0000                     	;# 
   120  0001                     	;# 
   121  0002                     	;# 
   122  0003                     	;# 
   123  0004                     	;# 
   124  0005                     	;# 
   125  0006                     	;# 
   126  0007                     	;# 
   127  0008                     	;# 
   128  0009                     	;# 
   129  000A                     	;# 
   130  000B                     	;# 
   131  000C                     	;# 
   132  000D                     	;# 
   133  000E                     	;# 
   134  0010                     	;# 
   135  0011                     	;# 
   136  0012                     	;# 
   137  0013                     	;# 
   138  0014                     	;# 
   139  0015                     	;# 
   140  0016                     	;# 
   141  0016                     	;# 
   142  0017                     	;# 
   143  0018                     	;# 
   144  0019                     	;# 
   145  001A                     	;# 
   146  001A                     	;# 
   147  001B                     	;# 
   148  001B                     	;# 
   149  001C                     	;# 
   150  001D                     	;# 
   151  001E                     	;# 
   152  001F                     	;# 
   153  008C                     	;# 
   154  008D                     	;# 
   155  008E                     	;# 
   156  0090                     	;# 
   157  0091                     	;# 
   158  0092                     	;# 
   159  0093                     	;# 
   160  0094                     	;# 
   161  0095                     	;# 
   162  0096                     	;# 
   163  0098                     	;# 
   164  0099                     	;# 
   165  009A                     	;# 
   166  009B                     	;# 
   167  009B                     	;# 
   168  009C                     	;# 
   169  009D                     	;# 
   170  009E                     	;# 
   171  009F                     	;# 
   172  010C                     	;# 
   173  010D                     	;# 
   174  010E                     	;# 
   175  0111                     	;# 
   176  0112                     	;# 
   177  0113                     	;# 
   178  0114                     	;# 
   179  0115                     	;# 
   180  0116                     	;# 
   181  0117                     	;# 
   182  0118                     	;# 
   183  0119                     	;# 
   184  011C                     	;# 
   185  018C                     	;# 
   186  018D                     	;# 
   187  018E                     	;# 
   188  0191                     	;# 
   189  0191                     	;# 
   190  0192                     	;# 
   191  0193                     	;# 
   192  0193                     	;# 
   193  0194                     	;# 
   194  0195                     	;# 
   195  0196                     	;# 
   196  0197                     	;# 
   197  0199                     	;# 
   198  0199                     	;# 
   199  0199                     	;# 
   200  019A                     	;# 
   201  019A                     	;# 
   202  019A                     	;# 
   203  019B                     	;# 
   204  019B                     	;# 
   205  019B                     	;# 
   206  019B                     	;# 
   207  019B                     	;# 
   208  019C                     	;# 
   209  019C                     	;# 
   210  019C                     	;# 
   211  019D                     	;# 
   212  019D                     	;# 
   213  019D                     	;# 
   214  019E                     	;# 
   215  019E                     	;# 
   216  019E                     	;# 
   217  019F                     	;# 
   218  019F                     	;# 
   219  019F                     	;# 
   220  019F                     	;# 
   221  019F                     	;# 
   222  020C                     	;# 
   223  020D                     	;# 
   224  020E                     	;# 
   225  0211                     	;# 
   226  0211                     	;# 
   227  0212                     	;# 
   228  0212                     	;# 
   229  0213                     	;# 
   230  0213                     	;# 
   231  0214                     	;# 
   232  0214                     	;# 
   233  0215                     	;# 
   234  0215                     	;# 
   235  0215                     	;# 
   236  0215                     	;# 
   237  0216                     	;# 
   238  0216                     	;# 
   239  0217                     	;# 
   240  0217                     	;# 
   241  028C                     	;# 
   242  028D                     	;# 
   243  028E                     	;# 
   244  0291                     	;# 
   245  0291                     	;# 
   246  0292                     	;# 
   247  0293                     	;# 
   248  0294                     	;# 
   249  0298                     	;# 
   250  0298                     	;# 
   251  0299                     	;# 
   252  029A                     	;# 
   253  029B                     	;# 
   254  029E                     	;# 
   255  030C                     	;# 
   256  030D                     	;# 
   257  030E                     	;# 
   258  038C                     	;# 
   259  038D                     	;# 
   260  038E                     	;# 
   261  0391                     	;# 
   262  0392                     	;# 
   263  0393                     	;# 
   264  0394                     	;# 
   265  0395                     	;# 
   266  0396                     	;# 
   267  0397                     	;# 
   268  0398                     	;# 
   269  0399                     	;# 
   270  040E                     	;# 
   271  0413                     	;# 
   272  0413                     	;# 
   273  0414                     	;# 
   274  0414                     	;# 
   275  0415                     	;# 
   276  0416                     	;# 
   277  0417                     	;# 
   278  0418                     	;# 
   279  041A                     	;# 
   280  041A                     	;# 
   281  041B                     	;# 
   282  041B                     	;# 
   283  041C                     	;# 
   284  041D                     	;# 
   285  041E                     	;# 
   286  041F                     	;# 
   287  0493                     	;# 
   288  0494                     	;# 
   289  0495                     	;# 
   290  0496                     	;# 
   291  049A                     	;# 
   292  049B                     	;# 
   293  049C                     	;# 
   294  049D                     	;# 
   295  058C                     	;# 
   296  058C                     	;# 
   297  058D                     	;# 
   298  058E                     	;# 
   299  058E                     	;# 
   300  058F                     	;# 
   301  0590                     	;# 
   302  0590                     	;# 
   303  0591                     	;# 
   304  0592                     	;# 
   305  0592                     	;# 
   306  0593                     	;# 
   307  0594                     	;# 
   308  0594                     	;# 
   309  0595                     	;# 
   310  0596                     	;# 
   311  0596                     	;# 
   312  0597                     	;# 
   313  0598                     	;# 
   314  0599                     	;# 
   315  059A                     	;# 
   316  059B                     	;# 
   317  059B                     	;# 
   318  059C                     	;# 
   319  059D                     	;# 
   320  060C                     	;# 
   321  060C                     	;# 
   322  060D                     	;# 
   323  060E                     	;# 
   324  060F                     	;# 
   325  060F                     	;# 
   326  0610                     	;# 
   327  0611                     	;# 
   328  0612                     	;# 
   329  0613                     	;# 
   330  0614                     	;# 
   331  0617                     	;# 
   332  0617                     	;# 
   333  0618                     	;# 
   334  0619                     	;# 
   335  061A                     	;# 
   336  061A                     	;# 
   337  061B                     	;# 
   338  061C                     	;# 
   339  0691                     	;# 
   340  0692                     	;# 
   341  0693                     	;# 
   342  0694                     	;# 
   343  0695                     	;# 
   344  0696                     	;# 
   345  0697                     	;# 
   346  0699                     	;# 
   347  069A                     	;# 
   348  0711                     	;# 
   349  0712                     	;# 
   350  0713                     	;# 
   351  0714                     	;# 
   352  0715                     	;# 
   353  0718                     	;# 
   354  0718                     	;# 
   355  0719                     	;# 
   356  071A                     	;# 
   357  071A                     	;# 
   358  071B                     	;# 
   359  071C                     	;# 
   360  071D                     	;# 
   361  0791                     	;# 
   362  0791                     	;# 
   363  0792                     	;# 
   364  0793                     	;# 
   365  0793                     	;# 
   366  0794                     	;# 
   367  0795                     	;# 
   368  0795                     	;# 
   369  0796                     	;# 
   370  0797                     	;# 
   371  0797                     	;# 
   372  0798                     	;# 
   373  0799                     	;# 
   374  079A                     	;# 
   375  080C                     	;# 
   376  080C                     	;# 
   377  080D                     	;# 
   378  080E                     	;# 
   379  080E                     	;# 
   380  080F                     	;# 
   381  0810                     	;# 
   382  0810                     	;# 
   383  0811                     	;# 
   384  0812                     	;# 
   385  0812                     	;# 
   386  0813                     	;# 
   387  0814                     	;# 
   388  0815                     	;# 
   389  0816                     	;# 
   390  0817                     	;# 
   391  0818                     	;# 
   392  0819                     	;# 
   393  081A                     	;# 
   394  081A                     	;# 
   395  081B                     	;# 
   396  081C                     	;# 
   397  081C                     	;# 
   398  081D                     	;# 
   399  088C                     	;# 
   400  088D                     	;# 
   401  088E                     	;# 
   402  088F                     	;# 
   403  088F                     	;# 
   404  0890                     	;# 
   405  0891                     	;# 
   406  0892                     	;# 
   407  0893                     	;# 
   408  0893                     	;# 
   409  0894                     	;# 
   410  0895                     	;# 
   411  0896                     	;# 
   412  0897                     	;# 
   413  0897                     	;# 
   414  0898                     	;# 
   415  0899                     	;# 
   416  0D8C                     	;# 
   417  0D8C                     	;# 
   418  0D8D                     	;# 
   419  0D8E                     	;# 
   420  0D8F                     	;# 
   421  0D8F                     	;# 
   422  0D90                     	;# 
   423  0D91                     	;# 
   424  0D92                     	;# 
   425  0D92                     	;# 
   426  0D93                     	;# 
   427  0D94                     	;# 
   428  0D95                     	;# 
   429  0D95                     	;# 
   430  0D96                     	;# 
   431  0D97                     	;# 
   432  0D98                     	;# 
   433  0D99                     	;# 
   434  0D9A                     	;# 
   435  0D9B                     	;# 
   436  0D9C                     	;# 
   437  0D9D                     	;# 
   438  0D9E                     	;# 
   439  0D9E                     	;# 
   440  0D9F                     	;# 
   441  0DA0                     	;# 
   442  0DA1                     	;# 
   443  0DA1                     	;# 
   444  0DA2                     	;# 
   445  0DA3                     	;# 
   446  0DA4                     	;# 
   447  0DA4                     	;# 
   448  0DA5                     	;# 
   449  0DA6                     	;# 
   450  0DA7                     	;# 
   451  0DA7                     	;# 
   452  0DA8                     	;# 
   453  0DA9                     	;# 
   454  0DAA                     	;# 
   455  0DAB                     	;# 
   456  0DAC                     	;# 
   457  0DAD                     	;# 
   458  0DAE                     	;# 
   459  0DAF                     	;# 
   460  0E0F                     	;# 
   461  0E10                     	;# 
   462  0E11                     	;# 
   463  0E12                     	;# 
   464  0E13                     	;# 
   465  0E14                     	;# 
   466  0E15                     	;# 
   467  0E16                     	;# 
   468  0E17                     	;# 
   469  0E18                     	;# 
   470  0E19                     	;# 
   471  0E1A                     	;# 
   472  0E1B                     	;# 
   473  0E1C                     	;# 
   474  0E1D                     	;# 
   475  0E1E                     	;# 
   476  0E1F                     	;# 
   477  0E20                     	;# 
   478  0E21                     	;# 
   479  0E22                     	;# 
   480  0E23                     	;# 
   481  0E24                     	;# 
   482  0E25                     	;# 
   483  0E26                     	;# 
   484  0E27                     	;# 
   485  0E28                     	;# 
   486  0E29                     	;# 
   487  0E2A                     	;# 
   488  0E2B                     	;# 
   489  0E2C                     	;# 
   490  0E2D                     	;# 
   491  0E2E                     	;# 
   492  0E90                     	;# 
   493  0E91                     	;# 
   494  0E92                     	;# 
   495  0E94                     	;# 
   496  0E95                     	;# 
   497  0E9C                     	;# 
   498  0E9D                     	;# 
   499  0E9E                     	;# 
   500  0E9F                     	;# 
   501  0EA0                     	;# 
   502  0EA1                     	;# 
   503  0EA2                     	;# 
   504  0EA3                     	;# 
   505  0EA4                     	;# 
   506  0EA5                     	;# 
   507  0EA6                     	;# 
   508  0EA7                     	;# 
   509  0F0F                     	;# 
   510  0F10                     	;# 
   511  0F11                     	;# 
   512  0F12                     	;# 
   513  0F13                     	;# 
   514  0F14                     	;# 
   515  0F15                     	;# 
   516  0F16                     	;# 
   517  0F17                     	;# 
   518  0F18                     	;# 
   519  0F19                     	;# 
   520  0F1A                     	;# 
   521  0F1B                     	;# 
   522  0F1C                     	;# 
   523  0F1D                     	;# 
   524  0F1E                     	;# 
   525  0F1F                     	;# 
   526  0F20                     	;# 
   527  0F21                     	;# 
   528  0F22                     	;# 
   529  0F23                     	;# 
   530  0F24                     	;# 
   531  0F25                     	;# 
   532  0F26                     	;# 
   533  0F27                     	;# 
   534  0F28                     	;# 
   535  0F29                     	;# 
   536  0F2A                     	;# 
   537  0F2B                     	;# 
   538  0F2C                     	;# 
   539  0F2D                     	;# 
   540  0F2E                     	;# 
   541  0F2F                     	;# 
   542  0F30                     	;# 
   543  0F31                     	;# 
   544  0F32                     	;# 
   545  0F33                     	;# 
   546  0F34                     	;# 
   547  0F35                     	;# 
   548  0F36                     	;# 
   549  0F37                     	;# 
   550  0FE4                     	;# 
   551  0FE5                     	;# 
   552  0FE6                     	;# 
   553  0FE7                     	;# 
   554  0FE8                     	;# 
   555  0FE9                     	;# 
   556  0FEA                     	;# 
   557  0FEB                     	;# 
   558  0FED                     	;# 
   559  0FEE                     	;# 
   560  0FEF                     	;# 
   561  0000                     	;# 
   562  0001                     	;# 
   563  0002                     	;# 
   564  0003                     	;# 
   565  0004                     	;# 
   566  0005                     	;# 
   567  0006                     	;# 
   568  0007                     	;# 
   569  0008                     	;# 
   570  0009                     	;# 
   571  000A                     	;# 
   572  000B                     	;# 
   573  000C                     	;# 
   574  000D                     	;# 
   575  000E                     	;# 
   576  0010                     	;# 
   577  0011                     	;# 
   578  0012                     	;# 
   579  0013                     	;# 
   580  0014                     	;# 
   581  0015                     	;# 
   582  0016                     	;# 
   583  0016                     	;# 
   584  0017                     	;# 
   585  0018                     	;# 
   586  0019                     	;# 
   587  001A                     	;# 
   588  001A                     	;# 
   589  001B                     	;# 
   590  001B                     	;# 
   591  001C                     	;# 
   592  001D                     	;# 
   593  001E                     	;# 
   594  001F                     	;# 
   595  008C                     	;# 
   596  008D                     	;# 
   597  008E                     	;# 
   598  0090                     	;# 
   599  0091                     	;# 
   600  0092                     	;# 
   601  0093                     	;# 
   602  0094                     	;# 
   603  0095                     	;# 
   604  0096                     	;# 
   605  0098                     	;# 
   606  0099                     	;# 
   607  009A                     	;# 
   608  009B                     	;# 
   609  009B                     	;# 
   610  009C                     	;# 
   611  009D                     	;# 
   612  009E                     	;# 
   613  009F                     	;# 
   614  010C                     	;# 
   615  010D                     	;# 
   616  010E                     	;# 
   617  0111                     	;# 
   618  0112                     	;# 
   619  0113                     	;# 
   620  0114                     	;# 
   621  0115                     	;# 
   622  0116                     	;# 
   623  0117                     	;# 
   624  0118                     	;# 
   625  0119                     	;# 
   626  011C                     	;# 
   627  018C                     	;# 
   628  018D                     	;# 
   629  018E                     	;# 
   630  0191                     	;# 
   631  0191                     	;# 
   632  0192                     	;# 
   633  0193                     	;# 
   634  0193                     	;# 
   635  0194                     	;# 
   636  0195                     	;# 
   637  0196                     	;# 
   638  0197                     	;# 
   639  0199                     	;# 
   640  0199                     	;# 
   641  0199                     	;# 
   642  019A                     	;# 
   643  019A                     	;# 
   644  019A                     	;# 
   645  019B                     	;# 
   646  019B                     	;# 
   647  019B                     	;# 
   648  019B                     	;# 
   649  019B                     	;# 
   650  019C                     	;# 
   651  019C                     	;# 
   652  019C                     	;# 
   653  019D                     	;# 
   654  019D                     	;# 
   655  019D                     	;# 
   656  019E                     	;# 
   657  019E                     	;# 
   658  019E                     	;# 
   659  019F                     	;# 
   660  019F                     	;# 
   661  019F                     	;# 
   662  019F                     	;# 
   663  019F                     	;# 
   664  020C                     	;# 
   665  020D                     	;# 
   666  020E                     	;# 
   667  0211                     	;# 
   668  0211                     	;# 
   669  0212                     	;# 
   670  0212                     	;# 
   671  0213                     	;# 
   672  0213                     	;# 
   673  0214                     	;# 
   674  0214                     	;# 
   675  0215                     	;# 
   676  0215                     	;# 
   677  0215                     	;# 
   678  0215                     	;# 
   679  0216                     	;# 
   680  0216                     	;# 
   681  0217                     	;# 
   682  0217                     	;# 
   683  028C                     	;# 
   684  028D                     	;# 
   685  028E                     	;# 
   686  0291                     	;# 
   687  0291                     	;# 
   688  0292                     	;# 
   689  0293                     	;# 
   690  0294                     	;# 
   691  0298                     	;# 
   692  0298                     	;# 
   693  0299                     	;# 
   694  029A                     	;# 
   695  029B                     	;# 
   696  029E                     	;# 
   697  030C                     	;# 
   698  030D                     	;# 
   699  030E                     	;# 
   700  038C                     	;# 
   701  038D                     	;# 
   702  038E                     	;# 
   703  0391                     	;# 
   704  0392                     	;# 
   705  0393                     	;# 
   706  0394                     	;# 
   707  0395                     	;# 
   708  0396                     	;# 
   709  0397                     	;# 
   710  0398                     	;# 
   711  0399                     	;# 
   712  040E                     	;# 
   713  0413                     	;# 
   714  0413                     	;# 
   715  0414                     	;# 
   716  0414                     	;# 
   717  0415                     	;# 
   718  0416                     	;# 
   719  0417                     	;# 
   720  0418                     	;# 
   721  041A                     	;# 
   722  041A                     	;# 
   723  041B                     	;# 
   724  041B                     	;# 
   725  041C                     	;# 
   726  041D                     	;# 
   727  041E                     	;# 
   728  041F                     	;# 
   729  0493                     	;# 
   730  0494                     	;# 
   731  0495                     	;# 
   732  0496                     	;# 
   733  049A                     	;# 
   734  049B                     	;# 
   735  049C                     	;# 
   736  049D                     	;# 
   737  058C                     	;# 
   738  058C                     	;# 
   739  058D                     	;# 
   740  058E                     	;# 
   741  058E                     	;# 
   742  058F                     	;# 
   743  0590                     	;# 
   744  0590                     	;# 
   745  0591                     	;# 
   746  0592                     	;# 
   747  0592                     	;# 
   748  0593                     	;# 
   749  0594                     	;# 
   750  0594                     	;# 
   751  0595                     	;# 
   752  0596                     	;# 
   753  0596                     	;# 
   754  0597                     	;# 
   755  0598                     	;# 
   756  0599                     	;# 
   757  059A                     	;# 
   758  059B                     	;# 
   759  059B                     	;# 
   760  059C                     	;# 
   761  059D                     	;# 
   762  060C                     	;# 
   763  060C                     	;# 
   764  060D                     	;# 
   765  060E                     	;# 
   766  060F                     	;# 
   767  060F                     	;# 
   768  0610                     	;# 
   769  0611                     	;# 
   770  0612                     	;# 
   771  0613                     	;# 
   772  0614                     	;# 
   773  0617                     	;# 
   774  0617                     	;# 
   775  0618                     	;# 
   776  0619                     	;# 
   777  061A                     	;# 
   778  061A                     	;# 
   779  061B                     	;# 
   780  061C                     	;# 
   781  0691                     	;# 
   782  0692                     	;# 
   783  0693                     	;# 
   784  0694                     	;# 
   785  0695                     	;# 
   786  0696                     	;# 
   787  0697                     	;# 
   788  0699                     	;# 
   789  069A                     	;# 
   790  0711                     	;# 
   791  0712                     	;# 
   792  0713                     	;# 
   793  0714                     	;# 
   794  0715                     	;# 
   795  0718                     	;# 
   796  0718                     	;# 
   797  0719                     	;# 
   798  071A                     	;# 
   799  071A                     	;# 
   800  071B                     	;# 
   801  071C                     	;# 
   802  071D                     	;# 
   803  0791                     	;# 
   804  0791                     	;# 
   805  0792                     	;# 
   806  0793                     	;# 
   807  0793                     	;# 
   808  0794                     	;# 
   809  0795                     	;# 
   810  0795                     	;# 
   811  0796                     	;# 
   812  0797                     	;# 
   813  0797                     	;# 
   814  0798                     	;# 
   815  0799                     	;# 
   816  079A                     	;# 
   817  080C                     	;# 
   818  080C                     	;# 
   819  080D                     	;# 
   820  080E                     	;# 
   821  080E                     	;# 
   822  080F                     	;# 
   823  0810                     	;# 
   824  0810                     	;# 
   825  0811                     	;# 
   826  0812                     	;# 
   827  0812                     	;# 
   828  0813                     	;# 
   829  0814                     	;# 
   830  0815                     	;# 
   831  0816                     	;# 
   832  0817                     	;# 
   833  0818                     	;# 
   834  0819                     	;# 
   835  081A                     	;# 
   836  081A                     	;# 
   837  081B                     	;# 
   838  081C                     	;# 
   839  081C                     	;# 
   840  081D                     	;# 
   841  088C                     	;# 
   842  088D                     	;# 
   843  088E                     	;# 
   844  088F                     	;# 
   845  088F                     	;# 
   846  0890                     	;# 
   847  0891                     	;# 
   848  0892                     	;# 
   849  0893                     	;# 
   850  0893                     	;# 
   851  0894                     	;# 
   852  0895                     	;# 
   853  0896                     	;# 
   854  0897                     	;# 
   855  0897                     	;# 
   856  0898                     	;# 
   857  0899                     	;# 
   858  0D8C                     	;# 
   859  0D8C                     	;# 
   860  0D8D                     	;# 
   861  0D8E                     	;# 
   862  0D8F                     	;# 
   863  0D8F                     	;# 
   864  0D90                     	;# 
   865  0D91                     	;# 
   866  0D92                     	;# 
   867  0D92                     	;# 
   868  0D93                     	;# 
   869  0D94                     	;# 
   870  0D95                     	;# 
   871  0D95                     	;# 
   872  0D96                     	;# 
   873  0D97                     	;# 
   874  0D98                     	;# 
   875  0D99                     	;# 
   876  0D9A                     	;# 
   877  0D9B                     	;# 
   878  0D9C                     	;# 
   879  0D9D                     	;# 
   880  0D9E                     	;# 
   881  0D9E                     	;# 
   882  0D9F                     	;# 
   883  0DA0                     	;# 
   884  0DA1                     	;# 
   885  0DA1                     	;# 
   886  0DA2                     	;# 
   887  0DA3                     	;# 
   888  0DA4                     	;# 
   889  0DA4                     	;# 
   890  0DA5                     	;# 
   891  0DA6                     	;# 
   892  0DA7                     	;# 
   893  0DA7                     	;# 
   894  0DA8                     	;# 
   895  0DA9                     	;# 
   896  0DAA                     	;# 
   897  0DAB                     	;# 
   898  0DAC                     	;# 
   899  0DAD                     	;# 
   900  0DAE                     	;# 
   901  0DAF                     	;# 
   902  0E0F                     	;# 
   903  0E10                     	;# 
   904  0E11                     	;# 
   905  0E12                     	;# 
   906  0E13                     	;# 
   907  0E14                     	;# 
   908  0E15                     	;# 
   909  0E16                     	;# 
   910  0E17                     	;# 
   911  0E18                     	;# 
   912  0E19                     	;# 
   913  0E1A                     	;# 
   914  0E1B                     	;# 
   915  0E1C                     	;# 
   916  0E1D                     	;# 
   917  0E1E                     	;# 
   918  0E1F                     	;# 
   919  0E20                     	;# 
   920  0E21                     	;# 
   921  0E22                     	;# 
   922  0E23                     	;# 
   923  0E24                     	;# 
   924  0E25                     	;# 
   925  0E26                     	;# 
   926  0E27                     	;# 
   927  0E28                     	;# 
   928  0E29                     	;# 
   929  0E2A                     	;# 
   930  0E2B                     	;# 
   931  0E2C                     	;# 
   932  0E2D                     	;# 
   933  0E2E                     	;# 
   934  0E90                     	;# 
   935  0E91                     	;# 
   936  0E92                     	;# 
   937  0E94                     	;# 
   938  0E95                     	;# 
   939  0E9C                     	;# 
   940  0E9D                     	;# 
   941  0E9E                     	;# 
   942  0E9F                     	;# 
   943  0EA0                     	;# 
   944  0EA1                     	;# 
   945  0EA2                     	;# 
   946  0EA3                     	;# 
   947  0EA4                     	;# 
   948  0EA5                     	;# 
   949  0EA6                     	;# 
   950  0EA7                     	;# 
   951  0F0F                     	;# 
   952  0F10                     	;# 
   953  0F11                     	;# 
   954  0F12                     	;# 
   955  0F13                     	;# 
   956  0F14                     	;# 
   957  0F15                     	;# 
   958  0F16                     	;# 
   959  0F17                     	;# 
   960  0F18                     	;# 
   961  0F19                     	;# 
   962  0F1A                     	;# 
   963  0F1B                     	;# 
   964  0F1C                     	;# 
   965  0F1D                     	;# 
   966  0F1E                     	;# 
   967  0F1F                     	;# 
   968  0F20                     	;# 
   969  0F21                     	;# 
   970  0F22                     	;# 
   971  0F23                     	;# 
   972  0F24                     	;# 
   973  0F25                     	;# 
   974  0F26                     	;# 
   975  0F27                     	;# 
   976  0F28                     	;# 
   977  0F29                     	;# 
   978  0F2A                     	;# 
   979  0F2B                     	;# 
   980  0F2C                     	;# 
   981  0F2D                     	;# 
   982  0F2E                     	;# 
   983  0F2F                     	;# 
   984  0F30                     	;# 
   985  0F31                     	;# 
   986  0F32                     	;# 
   987  0F33                     	;# 
   988  0F34                     	;# 
   989  0F35                     	;# 
   990  0F36                     	;# 
   991  0F37                     	;# 
   992  0FE4                     	;# 
   993  0FE5                     	;# 
   994  0FE6                     	;# 
   995  0FE7                     	;# 
   996  0FE8                     	;# 
   997  0FE9                     	;# 
   998  0FEA                     	;# 
   999  0FEB                     	;# 
  1000  0FED                     	;# 
  1001  0FEE                     	;# 
  1002  0FEF                     	;# 
  1003  0000                     	;# 
  1004  0001                     	;# 
  1005  0002                     	;# 
  1006  0003                     	;# 
  1007  0004                     	;# 
  1008  0005                     	;# 
  1009  0006                     	;# 
  1010  0007                     	;# 
  1011  0008                     	;# 
  1012  0009                     	;# 
  1013  000A                     	;# 
  1014  000B                     	;# 
  1015  000C                     	;# 
  1016  000D                     	;# 
  1017  000E                     	;# 
  1018  0010                     	;# 
  1019  0011                     	;# 
  1020  0012                     	;# 
  1021  0013                     	;# 
  1022  0014                     	;# 
  1023  0015                     	;# 
  1024  0016                     	;# 
  1025  0016                     	;# 
  1026  0017                     	;# 
  1027  0018                     	;# 
  1028  0019                     	;# 
  1029  001A                     	;# 
  1030  001A                     	;# 
  1031  001B                     	;# 
  1032  001B                     	;# 
  1033  001C                     	;# 
  1034  001D                     	;# 
  1035  001E                     	;# 
  1036  001F                     	;# 
  1037  008C                     	;# 
  1038  008D                     	;# 
  1039  008E                     	;# 
  1040  0090                     	;# 
  1041  0091                     	;# 
  1042  0092                     	;# 
  1043  0093                     	;# 
  1044  0094                     	;# 
  1045  0095                     	;# 
  1046  0096                     	;# 
  1047  0098                     	;# 
  1048  0099                     	;# 
  1049  009A                     	;# 
  1050  009B                     	;# 
  1051  009B                     	;# 
  1052  009C                     	;# 
  1053  009D                     	;# 
  1054  009E                     	;# 
  1055  009F                     	;# 
  1056  010C                     	;# 
  1057  010D                     	;# 
  1058  010E                     	;# 
  1059  0111                     	;# 
  1060  0112                     	;# 
  1061  0113                     	;# 
  1062  0114                     	;# 
  1063  0115                     	;# 
  1064  0116                     	;# 
  1065  0117                     	;# 
  1066  0118                     	;# 
  1067  0119                     	;# 
  1068  011C                     	;# 
  1069  018C                     	;# 
  1070  018D                     	;# 
  1071  018E                     	;# 
  1072  0191                     	;# 
  1073  0191                     	;# 
  1074  0192                     	;# 
  1075  0193                     	;# 
  1076  0193                     	;# 
  1077  0194                     	;# 
  1078  0195                     	;# 
  1079  0196                     	;# 
  1080  0197                     	;# 
  1081  0199                     	;# 
  1082  0199                     	;# 
  1083  0199                     	;# 
  1084  019A                     	;# 
  1085  019A                     	;# 
  1086  019A                     	;# 
  1087  019B                     	;# 
  1088  019B                     	;# 
  1089  019B                     	;# 
  1090  019B                     	;# 
  1091  019B                     	;# 
  1092  019C                     	;# 
  1093  019C                     	;# 
  1094  019C                     	;# 
  1095  019D                     	;# 
  1096  019D                     	;# 
  1097  019D                     	;# 
  1098  019E                     	;# 
  1099  019E                     	;# 
  1100  019E                     	;# 
  1101  019F                     	;# 
  1102  019F                     	;# 
  1103  019F                     	;# 
  1104  019F                     	;# 
  1105  019F                     	;# 
  1106  020C                     	;# 
  1107  020D                     	;# 
  1108  020E                     	;# 
  1109  0211                     	;# 
  1110  0211                     	;# 
  1111  0212                     	;# 
  1112  0212                     	;# 
  1113  0213                     	;# 
  1114  0213                     	;# 
  1115  0214                     	;# 
  1116  0214                     	;# 
  1117  0215                     	;# 
  1118  0215                     	;# 
  1119  0215                     	;# 
  1120  0215                     	;# 
  1121  0216                     	;# 
  1122  0216                     	;# 
  1123  0217                     	;# 
  1124  0217                     	;# 
  1125  028C                     	;# 
  1126  028D                     	;# 
  1127  028E                     	;# 
  1128  0291                     	;# 
  1129  0291                     	;# 
  1130  0292                     	;# 
  1131  0293                     	;# 
  1132  0294                     	;# 
  1133  0298                     	;# 
  1134  0298                     	;# 
  1135  0299                     	;# 
  1136  029A                     	;# 
  1137  029B                     	;# 
  1138  029E                     	;# 
  1139  030C                     	;# 
  1140  030D                     	;# 
  1141  030E                     	;# 
  1142  038C                     	;# 
  1143  038D                     	;# 
  1144  038E                     	;# 
  1145  0391                     	;# 
  1146  0392                     	;# 
  1147  0393                     	;# 
  1148  0394                     	;# 
  1149  0395                     	;# 
  1150  0396                     	;# 
  1151  0397                     	;# 
  1152  0398                     	;# 
  1153  0399                     	;# 
  1154  040E                     	;# 
  1155  0413                     	;# 
  1156  0413                     	;# 
  1157  0414                     	;# 
  1158  0414                     	;# 
  1159  0415                     	;# 
  1160  0416                     	;# 
  1161  0417                     	;# 
  1162  0418                     	;# 
  1163  041A                     	;# 
  1164  041A                     	;# 
  1165  041B                     	;# 
  1166  041B                     	;# 
  1167  041C                     	;# 
  1168  041D                     	;# 
  1169  041E                     	;# 
  1170  041F                     	;# 
  1171  0493                     	;# 
  1172  0494                     	;# 
  1173  0495                     	;# 
  1174  0496                     	;# 
  1175  049A                     	;# 
  1176  049B                     	;# 
  1177  049C                     	;# 
  1178  049D                     	;# 
  1179  058C                     	;# 
  1180  058C                     	;# 
  1181  058D                     	;# 
  1182  058E                     	;# 
  1183  058E                     	;# 
  1184  058F                     	;# 
  1185  0590                     	;# 
  1186  0590                     	;# 
  1187  0591                     	;# 
  1188  0592                     	;# 
  1189  0592                     	;# 
  1190  0593                     	;# 
  1191  0594                     	;# 
  1192  0594                     	;# 
  1193  0595                     	;# 
  1194  0596                     	;# 
  1195  0596                     	;# 
  1196  0597                     	;# 
  1197  0598                     	;# 
  1198  0599                     	;# 
  1199  059A                     	;# 
  1200  059B                     	;# 
  1201  059B                     	;# 
  1202  059C                     	;# 
  1203  059D                     	;# 
  1204  060C                     	;# 
  1205  060C                     	;# 
  1206  060D                     	;# 
  1207  060E                     	;# 
  1208  060F                     	;# 
  1209  060F                     	;# 
  1210  0610                     	;# 
  1211  0611                     	;# 
  1212  0612                     	;# 
  1213  0613                     	;# 
  1214  0614                     	;# 
  1215  0617                     	;# 
  1216  0617                     	;# 
  1217  0618                     	;# 
  1218  0619                     	;# 
  1219  061A                     	;# 
  1220  061A                     	;# 
  1221  061B                     	;# 
  1222  061C                     	;# 
  1223  0691                     	;# 
  1224  0692                     	;# 
  1225  0693                     	;# 
  1226  0694                     	;# 
  1227  0695                     	;# 
  1228  0696                     	;# 
  1229  0697                     	;# 
  1230  0699                     	;# 
  1231  069A                     	;# 
  1232  0711                     	;# 
  1233  0712                     	;# 
  1234  0713                     	;# 
  1235  0714                     	;# 
  1236  0715                     	;# 
  1237  0718                     	;# 
  1238  0718                     	;# 
  1239  0719                     	;# 
  1240  071A                     	;# 
  1241  071A                     	;# 
  1242  071B                     	;# 
  1243  071C                     	;# 
  1244  071D                     	;# 
  1245  0791                     	;# 
  1246  0791                     	;# 
  1247  0792                     	;# 
  1248  0793                     	;# 
  1249  0793                     	;# 
  1250  0794                     	;# 
  1251  0795                     	;# 
  1252  0795                     	;# 
  1253  0796                     	;# 
  1254  0797                     	;# 
  1255  0797                     	;# 
  1256  0798                     	;# 
  1257  0799                     	;# 
  1258  079A                     	;# 
  1259  080C                     	;# 
  1260  080C                     	;# 
  1261  080D                     	;# 
  1262  080E                     	;# 
  1263  080E                     	;# 
  1264  080F                     	;# 
  1265  0810                     	;# 
  1266  0810                     	;# 
  1267  0811                     	;# 
  1268  0812                     	;# 
  1269  0812                     	;# 
  1270  0813                     	;# 
  1271  0814                     	;# 
  1272  0815                     	;# 
  1273  0816                     	;# 
  1274  0817                     	;# 
  1275  0818                     	;# 
  1276  0819                     	;# 
  1277  081A                     	;# 
  1278  081A                     	;# 
  1279  081B                     	;# 
  1280  081C                     	;# 
  1281  081C                     	;# 
  1282  081D                     	;# 
  1283  088C                     	;# 
  1284  088D                     	;# 
  1285  088E                     	;# 
  1286  088F                     	;# 
  1287  088F                     	;# 
  1288  0890                     	;# 
  1289  0891                     	;# 
  1290  0892                     	;# 
  1291  0893                     	;# 
  1292  0893                     	;# 
  1293  0894                     	;# 
  1294  0895                     	;# 
  1295  0896                     	;# 
  1296  0897                     	;# 
  1297  0897                     	;# 
  1298  0898                     	;# 
  1299  0899                     	;# 
  1300  0D8C                     	;# 
  1301  0D8C                     	;# 
  1302  0D8D                     	;# 
  1303  0D8E                     	;# 
  1304  0D8F                     	;# 
  1305  0D8F                     	;# 
  1306  0D90                     	;# 
  1307  0D91                     	;# 
  1308  0D92                     	;# 
  1309  0D92                     	;# 
  1310  0D93                     	;# 
  1311  0D94                     	;# 
  1312  0D95                     	;# 
  1313  0D95                     	;# 
  1314  0D96                     	;# 
  1315  0D97                     	;# 
  1316  0D98                     	;# 
  1317  0D99                     	;# 
  1318  0D9A                     	;# 
  1319  0D9B                     	;# 
  1320  0D9C                     	;# 
  1321  0D9D                     	;# 
  1322  0D9E                     	;# 
  1323  0D9E                     	;# 
  1324  0D9F                     	;# 
  1325  0DA0                     	;# 
  1326  0DA1                     	;# 
  1327  0DA1                     	;# 
  1328  0DA2                     	;# 
  1329  0DA3                     	;# 
  1330  0DA4                     	;# 
  1331  0DA4                     	;# 
  1332  0DA5                     	;# 
  1333  0DA6                     	;# 
  1334  0DA7                     	;# 
  1335  0DA7                     	;# 
  1336  0DA8                     	;# 
  1337  0DA9                     	;# 
  1338  0DAA                     	;# 
  1339  0DAB                     	;# 
  1340  0DAC                     	;# 
  1341  0DAD                     	;# 
  1342  0DAE                     	;# 
  1343  0DAF                     	;# 
  1344  0E0F                     	;# 
  1345  0E10                     	;# 
  1346  0E11                     	;# 
  1347  0E12                     	;# 
  1348  0E13                     	;# 
  1349  0E14                     	;# 
  1350  0E15                     	;# 
  1351  0E16                     	;# 
  1352  0E17                     	;# 
  1353  0E18                     	;# 
  1354  0E19                     	;# 
  1355  0E1A                     	;# 
  1356  0E1B                     	;# 
  1357  0E1C                     	;# 
  1358  0E1D                     	;# 
  1359  0E1E                     	;# 
  1360  0E1F                     	;# 
  1361  0E20                     	;# 
  1362  0E21                     	;# 
  1363  0E22                     	;# 
  1364  0E23                     	;# 
  1365  0E24                     	;# 
  1366  0E25                     	;# 
  1367  0E26                     	;# 
  1368  0E27                     	;# 
  1369  0E28                     	;# 
  1370  0E29                     	;# 
  1371  0E2A                     	;# 
  1372  0E2B                     	;# 
  1373  0E2C                     	;# 
  1374  0E2D                     	;# 
  1375  0E2E                     	;# 
  1376  0E90                     	;# 
  1377  0E91                     	;# 
  1378  0E92                     	;# 
  1379  0E94                     	;# 
  1380  0E95                     	;# 
  1381  0E9C                     	;# 
  1382  0E9D                     	;# 
  1383  0E9E                     	;# 
  1384  0E9F                     	;# 
  1385  0EA0                     	;# 
  1386  0EA1                     	;# 
  1387  0EA2                     	;# 
  1388  0EA3                     	;# 
  1389  0EA4                     	;# 
  1390  0EA5                     	;# 
  1391  0EA6                     	;# 
  1392  0EA7                     	;# 
  1393  0F0F                     	;# 
  1394  0F10                     	;# 
  1395  0F11                     	;# 
  1396  0F12                     	;# 
  1397  0F13                     	;# 
  1398  0F14                     	;# 
  1399  0F15                     	;# 
  1400  0F16                     	;# 
  1401  0F17                     	;# 
  1402  0F18                     	;# 
  1403  0F19                     	;# 
  1404  0F1A                     	;# 
  1405  0F1B                     	;# 
  1406  0F1C                     	;# 
  1407  0F1D                     	;# 
  1408  0F1E                     	;# 
  1409  0F1F                     	;# 
  1410  0F20                     	;# 
  1411  0F21                     	;# 
  1412  0F22                     	;# 
  1413  0F23                     	;# 
  1414  0F24                     	;# 
  1415  0F25                     	;# 
  1416  0F26                     	;# 
  1417  0F27                     	;# 
  1418  0F28                     	;# 
  1419  0F29                     	;# 
  1420  0F2A                     	;# 
  1421  0F2B                     	;# 
  1422  0F2C                     	;# 
  1423  0F2D                     	;# 
  1424  0F2E                     	;# 
  1425  0F2F                     	;# 
  1426  0F30                     	;# 
  1427  0F31                     	;# 
  1428  0F32                     	;# 
  1429  0F33                     	;# 
  1430  0F34                     	;# 
  1431  0F35                     	;# 
  1432  0F36                     	;# 
  1433  0F37                     	;# 
  1434  0FE4                     	;# 
  1435  0FE5                     	;# 
  1436  0FE6                     	;# 
  1437  0FE7                     	;# 
  1438  0FE8                     	;# 
  1439  0FE9                     	;# 
  1440  0FEA                     	;# 
  1441  0FEB                     	;# 
  1442  0FED                     	;# 
  1443  0FEE                     	;# 
  1444  0FEF                     	;# 
  1445  0000                     	;# 
  1446  0001                     	;# 
  1447  0002                     	;# 
  1448  0003                     	;# 
  1449  0004                     	;# 
  1450  0005                     	;# 
  1451  0006                     	;# 
  1452  0007                     	;# 
  1453  0008                     	;# 
  1454  0009                     	;# 
  1455  000A                     	;# 
  1456  000B                     	;# 
  1457  000C                     	;# 
  1458  000D                     	;# 
  1459  000E                     	;# 
  1460  0010                     	;# 
  1461  0011                     	;# 
  1462  0012                     	;# 
  1463  0013                     	;# 
  1464  0014                     	;# 
  1465  0015                     	;# 
  1466  0016                     	;# 
  1467  0016                     	;# 
  1468  0017                     	;# 
  1469  0018                     	;# 
  1470  0019                     	;# 
  1471  001A                     	;# 
  1472  001A                     	;# 
  1473  001B                     	;# 
  1474  001B                     	;# 
  1475  001C                     	;# 
  1476  001D                     	;# 
  1477  001E                     	;# 
  1478  001F                     	;# 
  1479  008C                     	;# 
  1480  008D                     	;# 
  1481  008E                     	;# 
  1482  0090                     	;# 
  1483  0091                     	;# 
  1484  0092                     	;# 
  1485  0093                     	;# 
  1486  0094                     	;# 
  1487  0095                     	;# 
  1488  0096                     	;# 
  1489  0098                     	;# 
  1490  0099                     	;# 
  1491  009A                     	;# 
  1492  009B                     	;# 
  1493  009B                     	;# 
  1494  009C                     	;# 
  1495  009D                     	;# 
  1496  009E                     	;# 
  1497  009F                     	;# 
  1498  010C                     	;# 
  1499  010D                     	;# 
  1500  010E                     	;# 
  1501  0111                     	;# 
  1502  0112                     	;# 
  1503  0113                     	;# 
  1504  0114                     	;# 
  1505  0115                     	;# 
  1506  0116                     	;# 
  1507  0117                     	;# 
  1508  0118                     	;# 
  1509  0119                     	;# 
  1510  011C                     	;# 
  1511  018C                     	;# 
  1512  018D                     	;# 
  1513  018E                     	;# 
  1514  0191                     	;# 
  1515  0191                     	;# 
  1516  0192                     	;# 
  1517  0193                     	;# 
  1518  0193                     	;# 
  1519  0194                     	;# 
  1520  0195                     	;# 
  1521  0196                     	;# 
  1522  0197                     	;# 
  1523  0199                     	;# 
  1524  0199                     	;# 
  1525  0199                     	;# 
  1526  019A                     	;# 
  1527  019A                     	;# 
  1528  019A                     	;# 
  1529  019B                     	;# 
  1530  019B                     	;# 
  1531  019B                     	;# 
  1532  019B                     	;# 
  1533  019B                     	;# 
  1534  019C                     	;# 
  1535  019C                     	;# 
  1536  019C                     	;# 
  1537  019D                     	;# 
  1538  019D                     	;# 
  1539  019D                     	;# 
  1540  019E                     	;# 
  1541  019E                     	;# 
  1542  019E                     	;# 
  1543  019F                     	;# 
  1544  019F                     	;# 
  1545  019F                     	;# 
  1546  019F                     	;# 
  1547  019F                     	;# 
  1548  020C                     	;# 
  1549  020D                     	;# 
  1550  020E                     	;# 
  1551  0211                     	;# 
  1552  0211                     	;# 
  1553  0212                     	;# 
  1554  0212                     	;# 
  1555  0213                     	;# 
  1556  0213                     	;# 
  1557  0214                     	;# 
  1558  0214                     	;# 
  1559  0215                     	;# 
  1560  0215                     	;# 
  1561  0215                     	;# 
  1562  0215                     	;# 
  1563  0216                     	;# 
  1564  0216                     	;# 
  1565  0217                     	;# 
  1566  0217                     	;# 
  1567  028C                     	;# 
  1568  028D                     	;# 
  1569  028E                     	;# 
  1570  0291                     	;# 
  1571  0291                     	;# 
  1572  0292                     	;# 
  1573  0293                     	;# 
  1574  0294                     	;# 
  1575  0298                     	;# 
  1576  0298                     	;# 
  1577  0299                     	;# 
  1578  029A                     	;# 
  1579  029B                     	;# 
  1580  029E                     	;# 
  1581  030C                     	;# 
  1582  030D                     	;# 
  1583  030E                     	;# 
  1584  038C                     	;# 
  1585  038D                     	;# 
  1586  038E                     	;# 
  1587  0391                     	;# 
  1588  0392                     	;# 
  1589  0393                     	;# 
  1590  0394                     	;# 
  1591  0395                     	;# 
  1592  0396                     	;# 
  1593  0397                     	;# 
  1594  0398                     	;# 
  1595  0399                     	;# 
  1596  040E                     	;# 
  1597  0413                     	;# 
  1598  0413                     	;# 
  1599  0414                     	;# 
  1600  0414                     	;# 
  1601  0415                     	;# 
  1602  0416                     	;# 
  1603  0417                     	;# 
  1604  0418                     	;# 
  1605  041A                     	;# 
  1606  041A                     	;# 
  1607  041B                     	;# 
  1608  041B                     	;# 
  1609  041C                     	;# 
  1610  041D                     	;# 
  1611  041E                     	;# 
  1612  041F                     	;# 
  1613  0493                     	;# 
  1614  0494                     	;# 
  1615  0495                     	;# 
  1616  0496                     	;# 
  1617  049A                     	;# 
  1618  049B                     	;# 
  1619  049C                     	;# 
  1620  049D                     	;# 
  1621  058C                     	;# 
  1622  058C                     	;# 
  1623  058D                     	;# 
  1624  058E                     	;# 
  1625  058E                     	;# 
  1626  058F                     	;# 
  1627  0590                     	;# 
  1628  0590                     	;# 
  1629  0591                     	;# 
  1630  0592                     	;# 
  1631  0592                     	;# 
  1632  0593                     	;# 
  1633  0594                     	;# 
  1634  0594                     	;# 
  1635  0595                     	;# 
  1636  0596                     	;# 
  1637  0596                     	;# 
  1638  0597                     	;# 
  1639  0598                     	;# 
  1640  0599                     	;# 
  1641  059A                     	;# 
  1642  059B                     	;# 
  1643  059B                     	;# 
  1644  059C                     	;# 
  1645  059D                     	;# 
  1646  060C                     	;# 
  1647  060C                     	;# 
  1648  060D                     	;# 
  1649  060E                     	;# 
  1650  060F                     	;# 
  1651  060F                     	;# 
  1652  0610                     	;# 
  1653  0611                     	;# 
  1654  0612                     	;# 
  1655  0613                     	;# 
  1656  0614                     	;# 
  1657  0617                     	;# 
  1658  0617                     	;# 
  1659  0618                     	;# 
  1660  0619                     	;# 
  1661  061A                     	;# 
  1662  061A                     	;# 
  1663  061B                     	;# 
  1664  061C                     	;# 
  1665  0691                     	;# 
  1666  0692                     	;# 
  1667  0693                     	;# 
  1668  0694                     	;# 
  1669  0695                     	;# 
  1670  0696                     	;# 
  1671  0697                     	;# 
  1672  0699                     	;# 
  1673  069A                     	;# 
  1674  0711                     	;# 
  1675  0712                     	;# 
  1676  0713                     	;# 
  1677  0714                     	;# 
  1678  0715                     	;# 
  1679  0718                     	;# 
  1680  0718                     	;# 
  1681  0719                     	;# 
  1682  071A                     	;# 
  1683  071A                     	;# 
  1684  071B                     	;# 
  1685  071C                     	;# 
  1686  071D                     	;# 
  1687  0791                     	;# 
  1688  0791                     	;# 
  1689  0792                     	;# 
  1690  0793                     	;# 
  1691  0793                     	;# 
  1692  0794                     	;# 
  1693  0795                     	;# 
  1694  0795                     	;# 
  1695  0796                     	;# 
  1696  0797                     	;# 
  1697  0797                     	;# 
  1698  0798                     	;# 
  1699  0799                     	;# 
  1700  079A                     	;# 
  1701  080C                     	;# 
  1702  080C                     	;# 
  1703  080D                     	;# 
  1704  080E                     	;# 
  1705  080E                     	;# 
  1706  080F                     	;# 
  1707  0810                     	;# 
  1708  0810                     	;# 
  1709  0811                     	;# 
  1710  0812                     	;# 
  1711  0812                     	;# 
  1712  0813                     	;# 
  1713  0814                     	;# 
  1714  0815                     	;# 
  1715  0816                     	;# 
  1716  0817                     	;# 
  1717  0818                     	;# 
  1718  0819                     	;# 
  1719  081A                     	;# 
  1720  081A                     	;# 
  1721  081B                     	;# 
  1722  081C                     	;# 
  1723  081C                     	;# 
  1724  081D                     	;# 
  1725  088C                     	;# 
  1726  088D                     	;# 
  1727  088E                     	;# 
  1728  088F                     	;# 
  1729  088F                     	;# 
  1730  0890                     	;# 
  1731  0891                     	;# 
  1732  0892                     	;# 
  1733  0893                     	;# 
  1734  0893                     	;# 
  1735  0894                     	;# 
  1736  0895                     	;# 
  1737  0896                     	;# 
  1738  0897                     	;# 
  1739  0897                     	;# 
  1740  0898                     	;# 
  1741  0899                     	;# 
  1742  0D8C                     	;# 
  1743  0D8C                     	;# 
  1744  0D8D                     	;# 
  1745  0D8E                     	;# 
  1746  0D8F                     	;# 
  1747  0D8F                     	;# 
  1748  0D90                     	;# 
  1749  0D91                     	;# 
  1750  0D92                     	;# 
  1751  0D92                     	;# 
  1752  0D93                     	;# 
  1753  0D94                     	;# 
  1754  0D95                     	;# 
  1755  0D95                     	;# 
  1756  0D96                     	;# 
  1757  0D97                     	;# 
  1758  0D98                     	;# 
  1759  0D99                     	;# 
  1760  0D9A                     	;# 
  1761  0D9B                     	;# 
  1762  0D9C                     	;# 
  1763  0D9D                     	;# 
  1764  0D9E                     	;# 
  1765  0D9E                     	;# 
  1766  0D9F                     	;# 
  1767  0DA0                     	;# 
  1768  0DA1                     	;# 
  1769  0DA1                     	;# 
  1770  0DA2                     	;# 
  1771  0DA3                     	;# 
  1772  0DA4                     	;# 
  1773  0DA4                     	;# 
  1774  0DA5                     	;# 
  1775  0DA6                     	;# 
  1776  0DA7                     	;# 
  1777  0DA7                     	;# 
  1778  0DA8                     	;# 
  1779  0DA9                     	;# 
  1780  0DAA                     	;# 
  1781  0DAB                     	;# 
  1782  0DAC                     	;# 
  1783  0DAD                     	;# 
  1784  0DAE                     	;# 
  1785  0DAF                     	;# 
  1786  0E0F                     	;# 
  1787  0E10                     	;# 
  1788  0E11                     	;# 
  1789  0E12                     	;# 
  1790  0E13                     	;# 
  1791  0E14                     	;# 
  1792  0E15                     	;# 
  1793  0E16                     	;# 
  1794  0E17                     	;# 
  1795  0E18                     	;# 
  1796  0E19                     	;# 
  1797  0E1A                     	;# 
  1798  0E1B                     	;# 
  1799  0E1C                     	;# 
  1800  0E1D                     	;# 
  1801  0E1E                     	;# 
  1802  0E1F                     	;# 
  1803  0E20                     	;# 
  1804  0E21                     	;# 
  1805  0E22                     	;# 
  1806  0E23                     	;# 
  1807  0E24                     	;# 
  1808  0E25                     	;# 
  1809  0E26                     	;# 
  1810  0E27                     	;# 
  1811  0E28                     	;# 
  1812  0E29                     	;# 
  1813  0E2A                     	;# 
  1814  0E2B                     	;# 
  1815  0E2C                     	;# 
  1816  0E2D                     	;# 
  1817  0E2E                     	;# 
  1818  0E90                     	;# 
  1819  0E91                     	;# 
  1820  0E92                     	;# 
  1821  0E94                     	;# 
  1822  0E95                     	;# 
  1823  0E9C                     	;# 
  1824  0E9D                     	;# 
  1825  0E9E                     	;# 
  1826  0E9F                     	;# 
  1827  0EA0                     	;# 
  1828  0EA1                     	;# 
  1829  0EA2                     	;# 
  1830  0EA3                     	;# 
  1831  0EA4                     	;# 
  1832  0EA5                     	;# 
  1833  0EA6                     	;# 
  1834  0EA7                     	;# 
  1835  0F0F                     	;# 
  1836  0F10                     	;# 
  1837  0F11                     	;# 
  1838  0F12                     	;# 
  1839  0F13                     	;# 
  1840  0F14                     	;# 
  1841  0F15                     	;# 
  1842  0F16                     	;# 
  1843  0F17                     	;# 
  1844  0F18                     	;# 
  1845  0F19                     	;# 
  1846  0F1A                     	;# 
  1847  0F1B                     	;# 
  1848  0F1C                     	;# 
  1849  0F1D                     	;# 
  1850  0F1E                     	;# 
  1851  0F1F                     	;# 
  1852  0F20                     	;# 
  1853  0F21                     	;# 
  1854  0F22                     	;# 
  1855  0F23                     	;# 
  1856  0F24                     	;# 
  1857  0F25                     	;# 
  1858  0F26                     	;# 
  1859  0F27                     	;# 
  1860  0F28                     	;# 
  1861  0F29                     	;# 
  1862  0F2A                     	;# 
  1863  0F2B                     	;# 
  1864  0F2C                     	;# 
  1865  0F2D                     	;# 
  1866  0F2E                     	;# 
  1867  0F2F                     	;# 
  1868  0F30                     	;# 
  1869  0F31                     	;# 
  1870  0F32                     	;# 
  1871  0F33                     	;# 
  1872  0F34                     	;# 
  1873  0F35                     	;# 
  1874  0F36                     	;# 
  1875  0F37                     	;# 
  1876  0FE4                     	;# 
  1877  0FE5                     	;# 
  1878  0FE6                     	;# 
  1879  0FE7                     	;# 
  1880  0FE8                     	;# 
  1881  0FE9                     	;# 
  1882  0FEA                     	;# 
  1883  0FEB                     	;# 
  1884  0FED                     	;# 
  1885  0FEE                     	;# 
  1886  0FEF                     	;# 
  1887  0000                     	;# 
  1888  0001                     	;# 
  1889  0002                     	;# 
  1890  0003                     	;# 
  1891  0004                     	;# 
  1892  0005                     	;# 
  1893  0006                     	;# 
  1894  0007                     	;# 
  1895  0008                     	;# 
  1896  0009                     	;# 
  1897  000A                     	;# 
  1898  000B                     	;# 
  1899  000C                     	;# 
  1900  000D                     	;# 
  1901  000E                     	;# 
  1902  0010                     	;# 
  1903  0011                     	;# 
  1904  0012                     	;# 
  1905  0013                     	;# 
  1906  0014                     	;# 
  1907  0015                     	;# 
  1908  0016                     	;# 
  1909  0016                     	;# 
  1910  0017                     	;# 
  1911  0018                     	;# 
  1912  0019                     	;# 
  1913  001A                     	;# 
  1914  001A                     	;# 
  1915  001B                     	;# 
  1916  001B                     	;# 
  1917  001C                     	;# 
  1918  001D                     	;# 
  1919  001E                     	;# 
  1920  001F                     	;# 
  1921  008C                     	;# 
  1922  008D                     	;# 
  1923  008E                     	;# 
  1924  0090                     	;# 
  1925  0091                     	;# 
  1926  0092                     	;# 
  1927  0093                     	;# 
  1928  0094                     	;# 
  1929  0095                     	;# 
  1930  0096                     	;# 
  1931  0098                     	;# 
  1932  0099                     	;# 
  1933  009A                     	;# 
  1934  009B                     	;# 
  1935  009B                     	;# 
  1936  009C                     	;# 
  1937  009D                     	;# 
  1938  009E                     	;# 
  1939  009F                     	;# 
  1940  010C                     	;# 
  1941  010D                     	;# 
  1942  010E                     	;# 
  1943  0111                     	;# 
  1944  0112                     	;# 
  1945  0113                     	;# 
  1946  0114                     	;# 
  1947  0115                     	;# 
  1948  0116                     	;# 
  1949  0117                     	;# 
  1950  0118                     	;# 
  1951  0119                     	;# 
  1952  011C                     	;# 
  1953  018C                     	;# 
  1954  018D                     	;# 
  1955  018E                     	;# 
  1956  0191                     	;# 
  1957  0191                     	;# 
  1958  0192                     	;# 
  1959  0193                     	;# 
  1960  0193                     	;# 
  1961  0194                     	;# 
  1962  0195                     	;# 
  1963  0196                     	;# 
  1964  0197                     	;# 
  1965  0199                     	;# 
  1966  0199                     	;# 
  1967  0199                     	;# 
  1968  019A                     	;# 
  1969  019A                     	;# 
  1970  019A                     	;# 
  1971  019B                     	;# 
  1972  019B                     	;# 
  1973  019B                     	;# 
  1974  019B                     	;# 
  1975  019B                     	;# 
  1976  019C                     	;# 
  1977  019C                     	;# 
  1978  019C                     	;# 
  1979  019D                     	;# 
  1980  019D                     	;# 
  1981  019D                     	;# 
  1982  019E                     	;# 
  1983  019E                     	;# 
  1984  019E                     	;# 
  1985  019F                     	;# 
  1986  019F                     	;# 
  1987  019F                     	;# 
  1988  019F                     	;# 
  1989  019F                     	;# 
  1990  020C                     	;# 
  1991  020D                     	;# 
  1992  020E                     	;# 
  1993  0211                     	;# 
  1994  0211                     	;# 
  1995  0212                     	;# 
  1996  0212                     	;# 
  1997  0213                     	;# 
  1998  0213                     	;# 
  1999  0214                     	;# 
  2000  0214                     	;# 
  2001  0215                     	;# 
  2002  0215                     	;# 
  2003  0215                     	;# 
  2004  0215                     	;# 
  2005  0216                     	;# 
  2006  0216                     	;# 
  2007  0217                     	;# 
  2008  0217                     	;# 
  2009  028C                     	;# 
  2010  028D                     	;# 
  2011  028E                     	;# 
  2012  0291                     	;# 
  2013  0291                     	;# 
  2014  0292                     	;# 
  2015  0293                     	;# 
  2016  0294                     	;# 
  2017  0298                     	;# 
  2018  0298                     	;# 
  2019  0299                     	;# 
  2020  029A                     	;# 
  2021  029B                     	;# 
  2022  029E                     	;# 
  2023  030C                     	;# 
  2024  030D                     	;# 
  2025  030E                     	;# 
  2026  038C                     	;# 
  2027  038D                     	;# 
  2028  038E                     	;# 
  2029  0391                     	;# 
  2030  0392                     	;# 
  2031  0393                     	;# 
  2032  0394                     	;# 
  2033  0395                     	;# 
  2034  0396                     	;# 
  2035  0397                     	;# 
  2036  0398                     	;# 
  2037  0399                     	;# 
  2038  040E                     	;# 
  2039  0413                     	;# 
  2040  0413                     	;# 
  2041  0414                     	;# 
  2042  0414                     	;# 
  2043  0415                     	;# 
  2044  0416                     	;# 
  2045  0417                     	;# 
  2046  0418                     	;# 
  2047  041A                     	;# 
  2048  041A                     	;# 
  2049  041B                     	;# 
  2050  041B                     	;# 
  2051  041C                     	;# 
  2052  041D                     	;# 
  2053  041E                     	;# 
  2054  041F                     	;# 
  2055  0493                     	;# 
  2056  0494                     	;# 
  2057  0495                     	;# 
  2058  0496                     	;# 
  2059  049A                     	;# 
  2060  049B                     	;# 
  2061  049C                     	;# 
  2062  049D                     	;# 
  2063  058C                     	;# 
  2064  058C                     	;# 
  2065  058D                     	;# 
  2066  058E                     	;# 
  2067  058E                     	;# 
  2068  058F                     	;# 
  2069  0590                     	;# 
  2070  0590                     	;# 
  2071  0591                     	;# 
  2072  0592                     	;# 
  2073  0592                     	;# 
  2074  0593                     	;# 
  2075  0594                     	;# 
  2076  0594                     	;# 
  2077  0595                     	;# 
  2078  0596                     	;# 
  2079  0596                     	;# 
  2080  0597                     	;# 
  2081  0598                     	;# 
  2082  0599                     	;# 
  2083  059A                     	;# 
  2084  059B                     	;# 
  2085  059B                     	;# 
  2086  059C                     	;# 
  2087  059D                     	;# 
  2088  060C                     	;# 
  2089  060C                     	;# 
  2090  060D                     	;# 
  2091  060E                     	;# 
  2092  060F                     	;# 
  2093  060F                     	;# 
  2094  0610                     	;# 
  2095  0611                     	;# 
  2096  0612                     	;# 
  2097  0613                     	;# 
  2098  0614                     	;# 
  2099  0617                     	;# 
  2100  0617                     	;# 
  2101  0618                     	;# 
  2102  0619                     	;# 
  2103  061A                     	;# 
  2104  061A                     	;# 
  2105  061B                     	;# 
  2106  061C                     	;# 
  2107  0691                     	;# 
  2108  0692                     	;# 
  2109  0693                     	;# 
  2110  0694                     	;# 
  2111  0695                     	;# 
  2112  0696                     	;# 
  2113  0697                     	;# 
  2114  0699                     	;# 
  2115  069A                     	;# 
  2116  0711                     	;# 
  2117  0712                     	;# 
  2118  0713                     	;# 
  2119  0714                     	;# 
  2120  0715                     	;# 
  2121  0718                     	;# 
  2122  0718                     	;# 
  2123  0719                     	;# 
  2124  071A                     	;# 
  2125  071A                     	;# 
  2126  071B                     	;# 
  2127  071C                     	;# 
  2128  071D                     	;# 
  2129  0791                     	;# 
  2130  0791                     	;# 
  2131  0792                     	;# 
  2132  0793                     	;# 
  2133  0793                     	;# 
  2134  0794                     	;# 
  2135  0795                     	;# 
  2136  0795                     	;# 
  2137  0796                     	;# 
  2138  0797                     	;# 
  2139  0797                     	;# 
  2140  0798                     	;# 
  2141  0799                     	;# 
  2142  079A                     	;# 
  2143  080C                     	;# 
  2144  080C                     	;# 
  2145  080D                     	;# 
  2146  080E                     	;# 
  2147  080E                     	;# 
  2148  080F                     	;# 
  2149  0810                     	;# 
  2150  0810                     	;# 
  2151  0811                     	;# 
  2152  0812                     	;# 
  2153  0812                     	;# 
  2154  0813                     	;# 
  2155  0814                     	;# 
  2156  0815                     	;# 
  2157  0816                     	;# 
  2158  0817                     	;# 
  2159  0818                     	;# 
  2160  0819                     	;# 
  2161  081A                     	;# 
  2162  081A                     	;# 
  2163  081B                     	;# 
  2164  081C                     	;# 
  2165  081C                     	;# 
  2166  081D                     	;# 
  2167  088C                     	;# 
  2168  088D                     	;# 
  2169  088E                     	;# 
  2170  088F                     	;# 
  2171  088F                     	;# 
  2172  0890                     	;# 
  2173  0891                     	;# 
  2174  0892                     	;# 
  2175  0893                     	;# 
  2176  0893                     	;# 
  2177  0894                     	;# 
  2178  0895                     	;# 
  2179  0896                     	;# 
  2180  0897                     	;# 
  2181  0897                     	;# 
  2182  0898                     	;# 
  2183  0899                     	;# 
  2184  0D8C                     	;# 
  2185  0D8C                     	;# 
  2186  0D8D                     	;# 
  2187  0D8E                     	;# 
  2188  0D8F                     	;# 
  2189  0D8F                     	;# 
  2190  0D90                     	;# 
  2191  0D91                     	;# 
  2192  0D92                     	;# 
  2193  0D92                     	;# 
  2194  0D93                     	;# 
  2195  0D94                     	;# 
  2196  0D95                     	;# 
  2197  0D95                     	;# 
  2198  0D96                     	;# 
  2199  0D97                     	;# 
  2200  0D98                     	;# 
  2201  0D99                     	;# 
  2202  0D9A                     	;# 
  2203  0D9B                     	;# 
  2204  0D9C                     	;# 
  2205  0D9D                     	;# 
  2206  0D9E                     	;# 
  2207  0D9E                     	;# 
  2208  0D9F                     	;# 
  2209  0DA0                     	;# 
  2210  0DA1                     	;# 
  2211  0DA1                     	;# 
  2212  0DA2                     	;# 
  2213  0DA3                     	;# 
  2214  0DA4                     	;# 
  2215  0DA4                     	;# 
  2216  0DA5                     	;# 
  2217  0DA6                     	;# 
  2218  0DA7                     	;# 
  2219  0DA7                     	;# 
  2220  0DA8                     	;# 
  2221  0DA9                     	;# 
  2222  0DAA                     	;# 
  2223  0DAB                     	;# 
  2224  0DAC                     	;# 
  2225  0DAD                     	;# 
  2226  0DAE                     	;# 
  2227  0DAF                     	;# 
  2228  0E0F                     	;# 
  2229  0E10                     	;# 
  2230  0E11                     	;# 
  2231  0E12                     	;# 
  2232  0E13                     	;# 
  2233  0E14                     	;# 
  2234  0E15                     	;# 
  2235  0E16                     	;# 
  2236  0E17                     	;# 
  2237  0E18                     	;# 
  2238  0E19                     	;# 
  2239  0E1A                     	;# 
  2240  0E1B                     	;# 
  2241  0E1C                     	;# 
  2242  0E1D                     	;# 
  2243  0E1E                     	;# 
  2244  0E1F                     	;# 
  2245  0E20                     	;# 
  2246  0E21                     	;# 
  2247  0E22                     	;# 
  2248  0E23                     	;# 
  2249  0E24                     	;# 
  2250  0E25                     	;# 
  2251  0E26                     	;# 
  2252  0E27                     	;# 
  2253  0E28                     	;# 
  2254  0E29                     	;# 
  2255  0E2A                     	;# 
  2256  0E2B                     	;# 
  2257  0E2C                     	;# 
  2258  0E2D                     	;# 
  2259  0E2E                     	;# 
  2260  0E90                     	;# 
  2261  0E91                     	;# 
  2262  0E92                     	;# 
  2263  0E94                     	;# 
  2264  0E95                     	;# 
  2265  0E9C                     	;# 
  2266  0E9D                     	;# 
  2267  0E9E                     	;# 
  2268  0E9F                     	;# 
  2269  0EA0                     	;# 
  2270  0EA1                     	;# 
  2271  0EA2                     	;# 
  2272  0EA3                     	;# 
  2273  0EA4                     	;# 
  2274  0EA5                     	;# 
  2275  0EA6                     	;# 
  2276  0EA7                     	;# 
  2277  0F0F                     	;# 
  2278  0F10                     	;# 
  2279  0F11                     	;# 
  2280  0F12                     	;# 
  2281  0F13                     	;# 
  2282  0F14                     	;# 
  2283  0F15                     	;# 
  2284  0F16                     	;# 
  2285  0F17                     	;# 
  2286  0F18                     	;# 
  2287  0F19                     	;# 
  2288  0F1A                     	;# 
  2289  0F1B                     	;# 
  2290  0F1C                     	;# 
  2291  0F1D                     	;# 
  2292  0F1E                     	;# 
  2293  0F1F                     	;# 
  2294  0F20                     	;# 
  2295  0F21                     	;# 
  2296  0F22                     	;# 
  2297  0F23                     	;# 
  2298  0F24                     	;# 
  2299  0F25                     	;# 
  2300  0F26                     	;# 
  2301  0F27                     	;# 
  2302  0F28                     	;# 
  2303  0F29                     	;# 
  2304  0F2A                     	;# 
  2305  0F2B                     	;# 
  2306  0F2C                     	;# 
  2307  0F2D                     	;# 
  2308  0F2E                     	;# 
  2309  0F2F                     	;# 
  2310  0F30                     	;# 
  2311  0F31                     	;# 
  2312  0F32                     	;# 
  2313  0F33                     	;# 
  2314  0F34                     	;# 
  2315  0F35                     	;# 
  2316  0F36                     	;# 
  2317  0F37                     	;# 
  2318  0FE4                     	;# 
  2319  0FE5                     	;# 
  2320  0FE6                     	;# 
  2321  0FE7                     	;# 
  2322  0FE8                     	;# 
  2323  0FE9                     	;# 
  2324  0FEA                     	;# 
  2325  0FEB                     	;# 
  2326  0FED                     	;# 
  2327  0FEE                     	;# 
  2328  0FEF                     	;# 
  2329  0000                     	;# 
  2330  0001                     	;# 
  2331  0002                     	;# 
  2332  0003                     	;# 
  2333  0004                     	;# 
  2334  0005                     	;# 
  2335  0006                     	;# 
  2336  0007                     	;# 
  2337  0008                     	;# 
  2338  0009                     	;# 
  2339  000A                     	;# 
  2340  000B                     	;# 
  2341  000C                     	;# 
  2342  000D                     	;# 
  2343  000E                     	;# 
  2344  0010                     	;# 
  2345  0011                     	;# 
  2346  0012                     	;# 
  2347  0013                     	;# 
  2348  0014                     	;# 
  2349  0015                     	;# 
  2350  0016                     	;# 
  2351  0016                     	;# 
  2352  0017                     	;# 
  2353  0018                     	;# 
  2354  0019                     	;# 
  2355  001A                     	;# 
  2356  001A                     	;# 
  2357  001B                     	;# 
  2358  001B                     	;# 
  2359  001C                     	;# 
  2360  001D                     	;# 
  2361  001E                     	;# 
  2362  001F                     	;# 
  2363  008C                     	;# 
  2364  008D                     	;# 
  2365  008E                     	;# 
  2366  0090                     	;# 
  2367  0091                     	;# 
  2368  0092                     	;# 
  2369  0093                     	;# 
  2370  0094                     	;# 
  2371  0095                     	;# 
  2372  0096                     	;# 
  2373  0098                     	;# 
  2374  0099                     	;# 
  2375  009A                     	;# 
  2376  009B                     	;# 
  2377  009B                     	;# 
  2378  009C                     	;# 
  2379  009D                     	;# 
  2380  009E                     	;# 
  2381  009F                     	;# 
  2382  010C                     	;# 
  2383  010D                     	;# 
  2384  010E                     	;# 
  2385  0111                     	;# 
  2386  0112                     	;# 
  2387  0113                     	;# 
  2388  0114                     	;# 
  2389  0115                     	;# 
  2390  0116                     	;# 
  2391  0117                     	;# 
  2392  0118                     	;# 
  2393  0119                     	;# 
  2394  011C                     	;# 
  2395  018C                     	;# 
  2396  018D                     	;# 
  2397  018E                     	;# 
  2398  0191                     	;# 
  2399  0191                     	;# 
  2400  0192                     	;# 
  2401  0193                     	;# 
  2402  0193                     	;# 
  2403  0194                     	;# 
  2404  0195                     	;# 
  2405  0196                     	;# 
  2406  0197                     	;# 
  2407  0199                     	;# 
  2408  0199                     	;# 
  2409  0199                     	;# 
  2410  019A                     	;# 
  2411  019A                     	;# 
  2412  019A                     	;# 
  2413  019B                     	;# 
  2414  019B                     	;# 
  2415  019B                     	;# 
  2416  019B                     	;# 
  2417  019B                     	;# 
  2418  019C                     	;# 
  2419  019C                     	;# 
  2420  019C                     	;# 
  2421  019D                     	;# 
  2422  019D                     	;# 
  2423  019D                     	;# 
  2424  019E                     	;# 
  2425  019E                     	;# 
  2426  019E                     	;# 
  2427  019F                     	;# 
  2428  019F                     	;# 
  2429  019F                     	;# 
  2430  019F                     	;# 
  2431  019F                     	;# 
  2432  020C                     	;# 
  2433  020D                     	;# 
  2434  020E                     	;# 
  2435  0211                     	;# 
  2436  0211                     	;# 
  2437  0212                     	;# 
  2438  0212                     	;# 
  2439  0213                     	;# 
  2440  0213                     	;# 
  2441  0214                     	;# 
  2442  0214                     	;# 
  2443  0215                     	;# 
  2444  0215                     	;# 
  2445  0215                     	;# 
  2446  0215                     	;# 
  2447  0216                     	;# 
  2448  0216                     	;# 
  2449  0217                     	;# 
  2450  0217                     	;# 
  2451  028C                     	;# 
  2452  028D                     	;# 
  2453  028E                     	;# 
  2454  0291                     	;# 
  2455  0291                     	;# 
  2456  0292                     	;# 
  2457  0293                     	;# 
  2458  0294                     	;# 
  2459  0298                     	;# 
  2460  0298                     	;# 
  2461  0299                     	;# 
  2462  029A                     	;# 
  2463  029B                     	;# 
  2464  029E                     	;# 
  2465  030C                     	;# 
  2466  030D                     	;# 
  2467  030E                     	;# 
  2468  038C                     	;# 
  2469  038D                     	;# 
  2470  038E                     	;# 
  2471  0391                     	;# 
  2472  0392                     	;# 
  2473  0393                     	;# 
  2474  0394                     	;# 
  2475  0395                     	;# 
  2476  0396                     	;# 
  2477  0397                     	;# 
  2478  0398                     	;# 
  2479  0399                     	;# 
  2480  040E                     	;# 
  2481  0413                     	;# 
  2482  0413                     	;# 
  2483  0414                     	;# 
  2484  0414                     	;# 
  2485  0415                     	;# 
  2486  0416                     	;# 
  2487  0417                     	;# 
  2488  0418                     	;# 
  2489  041A                     	;# 
  2490  041A                     	;# 
  2491  041B                     	;# 
  2492  041B                     	;# 
  2493  041C                     	;# 
  2494  041D                     	;# 
  2495  041E                     	;# 
  2496  041F                     	;# 
  2497  0493                     	;# 
  2498  0494                     	;# 
  2499  0495                     	;# 
  2500  0496                     	;# 
  2501  049A                     	;# 
  2502  049B                     	;# 
  2503  049C                     	;# 
  2504  049D                     	;# 
  2505  058C                     	;# 
  2506  058C                     	;# 
  2507  058D                     	;# 
  2508  058E                     	;# 
  2509  058E                     	;# 
  2510  058F                     	;# 
  2511  0590                     	;# 
  2512  0590                     	;# 
  2513  0591                     	;# 
  2514  0592                     	;# 
  2515  0592                     	;# 
  2516  0593                     	;# 
  2517  0594                     	;# 
  2518  0594                     	;# 
  2519  0595                     	;# 
  2520  0596                     	;# 
  2521  0596                     	;# 
  2522  0597                     	;# 
  2523  0598                     	;# 
  2524  0599                     	;# 
  2525  059A                     	;# 
  2526  059B                     	;# 
  2527  059B                     	;# 
  2528  059C                     	;# 
  2529  059D                     	;# 
  2530  060C                     	;# 
  2531  060C                     	;# 
  2532  060D                     	;# 
  2533  060E                     	;# 
  2534  060F                     	;# 
  2535  060F                     	;# 
  2536  0610                     	;# 
  2537  0611                     	;# 
  2538  0612                     	;# 
  2539  0613                     	;# 
  2540  0614                     	;# 
  2541  0617                     	;# 
  2542  0617                     	;# 
  2543  0618                     	;# 
  2544  0619                     	;# 
  2545  061A                     	;# 
  2546  061A                     	;# 
  2547  061B                     	;# 
  2548  061C                     	;# 
  2549  0691                     	;# 
  2550  0692                     	;# 
  2551  0693                     	;# 
  2552  0694                     	;# 
  2553  0695                     	;# 
  2554  0696                     	;# 
  2555  0697                     	;# 
  2556  0699                     	;# 
  2557  069A                     	;# 
  2558  0711                     	;# 
  2559  0712                     	;# 
  2560  0713                     	;# 
  2561  0714                     	;# 
  2562  0715                     	;# 
  2563  0718                     	;# 
  2564  0718                     	;# 
  2565  0719                     	;# 
  2566  071A                     	;# 
  2567  071A                     	;# 
  2568  071B                     	;# 
  2569  071C                     	;# 
  2570  071D                     	;# 
  2571  0791                     	;# 
  2572  0791                     	;# 
  2573  0792                     	;# 
  2574  0793                     	;# 
  2575  0793                     	;# 
  2576  0794                     	;# 
  2577  0795                     	;# 
  2578  0795                     	;# 
  2579  0796                     	;# 
  2580  0797                     	;# 
  2581  0797                     	;# 
  2582  0798                     	;# 
  2583  0799                     	;# 
  2584  079A                     	;# 
  2585  080C                     	;# 
  2586  080C                     	;# 
  2587  080D                     	;# 
  2588  080E                     	;# 
  2589  080E                     	;# 
  2590  080F                     	;# 
  2591  0810                     	;# 
  2592  0810                     	;# 
  2593  0811                     	;# 
  2594  0812                     	;# 
  2595  0812                     	;# 
  2596  0813                     	;# 
  2597  0814                     	;# 
  2598  0815                     	;# 
  2599  0816                     	;# 
  2600  0817                     	;# 
  2601  0818                     	;# 
  2602  0819                     	;# 
  2603  081A                     	;# 
  2604  081A                     	;# 
  2605  081B                     	;# 
  2606  081C                     	;# 
  2607  081C                     	;# 
  2608  081D                     	;# 
  2609  088C                     	;# 
  2610  088D                     	;# 
  2611  088E                     	;# 
  2612  088F                     	;# 
  2613  088F                     	;# 
  2614  0890                     	;# 
  2615  0891                     	;# 
  2616  0892                     	;# 
  2617  0893                     	;# 
  2618  0893                     	;# 
  2619  0894                     	;# 
  2620  0895                     	;# 
  2621  0896                     	;# 
  2622  0897                     	;# 
  2623  0897                     	;# 
  2624  0898                     	;# 
  2625  0899                     	;# 
  2626  0D8C                     	;# 
  2627  0D8C                     	;# 
  2628  0D8D                     	;# 
  2629  0D8E                     	;# 
  2630  0D8F                     	;# 
  2631  0D8F                     	;# 
  2632  0D90                     	;# 
  2633  0D91                     	;# 
  2634  0D92                     	;# 
  2635  0D92                     	;# 
  2636  0D93                     	;# 
  2637  0D94                     	;# 
  2638  0D95                     	;# 
  2639  0D95                     	;# 
  2640  0D96                     	;# 
  2641  0D97                     	;# 
  2642  0D98                     	;# 
  2643  0D99                     	;# 
  2644  0D9A                     	;# 
  2645  0D9B                     	;# 
  2646  0D9C                     	;# 
  2647  0D9D                     	;# 
  2648  0D9E                     	;# 
  2649  0D9E                     	;# 
  2650  0D9F                     	;# 
  2651  0DA0                     	;# 
  2652  0DA1                     	;# 
  2653  0DA1                     	;# 
  2654  0DA2                     	;# 
  2655  0DA3                     	;# 
  2656  0DA4                     	;# 
  2657  0DA4                     	;# 
  2658  0DA5                     	;# 
  2659  0DA6                     	;# 
  2660  0DA7                     	;# 
  2661  0DA7                     	;# 
  2662  0DA8                     	;# 
  2663  0DA9                     	;# 
  2664  0DAA                     	;# 
  2665  0DAB                     	;# 
  2666  0DAC                     	;# 
  2667  0DAD                     	;# 
  2668  0DAE                     	;# 
  2669  0DAF                     	;# 
  2670  0E0F                     	;# 
  2671  0E10                     	;# 
  2672  0E11                     	;# 
  2673  0E12                     	;# 
  2674  0E13                     	;# 
  2675  0E14                     	;# 
  2676  0E15                     	;# 
  2677  0E16                     	;# 
  2678  0E17                     	;# 
  2679  0E18                     	;# 
  2680  0E19                     	;# 
  2681  0E1A                     	;# 
  2682  0E1B                     	;# 
  2683  0E1C                     	;# 
  2684  0E1D                     	;# 
  2685  0E1E                     	;# 
  2686  0E1F                     	;# 
  2687  0E20                     	;# 
  2688  0E21                     	;# 
  2689  0E22                     	;# 
  2690  0E23                     	;# 
  2691  0E24                     	;# 
  2692  0E25                     	;# 
  2693  0E26                     	;# 
  2694  0E27                     	;# 
  2695  0E28                     	;# 
  2696  0E29                     	;# 
  2697  0E2A                     	;# 
  2698  0E2B                     	;# 
  2699  0E2C                     	;# 
  2700  0E2D                     	;# 
  2701  0E2E                     	;# 
  2702  0E90                     	;# 
  2703  0E91                     	;# 
  2704  0E92                     	;# 
  2705  0E94                     	;# 
  2706  0E95                     	;# 
  2707  0E9C                     	;# 
  2708  0E9D                     	;# 
  2709  0E9E                     	;# 
  2710  0E9F                     	;# 
  2711  0EA0                     	;# 
  2712  0EA1                     	;# 
  2713  0EA2                     	;# 
  2714  0EA3                     	;# 
  2715  0EA4                     	;# 
  2716  0EA5                     	;# 
  2717  0EA6                     	;# 
  2718  0EA7                     	;# 
  2719  0F0F                     	;# 
  2720  0F10                     	;# 
  2721  0F11                     	;# 
  2722  0F12                     	;# 
  2723  0F13                     	;# 
  2724  0F14                     	;# 
  2725  0F15                     	;# 
  2726  0F16                     	;# 
  2727  0F17                     	;# 
  2728  0F18                     	;# 
  2729  0F19                     	;# 
  2730  0F1A                     	;# 
  2731  0F1B                     	;# 
  2732  0F1C                     	;# 
  2733  0F1D                     	;# 
  2734  0F1E                     	;# 
  2735  0F1F                     	;# 
  2736  0F20                     	;# 
  2737  0F21                     	;# 
  2738  0F22                     	;# 
  2739  0F23                     	;# 
  2740  0F24                     	;# 
  2741  0F25                     	;# 
  2742  0F26                     	;# 
  2743  0F27                     	;# 
  2744  0F28                     	;# 
  2745  0F29                     	;# 
  2746  0F2A                     	;# 
  2747  0F2B                     	;# 
  2748  0F2C                     	;# 
  2749  0F2D                     	;# 
  2750  0F2E                     	;# 
  2751  0F2F                     	;# 
  2752  0F30                     	;# 
  2753  0F31                     	;# 
  2754  0F32                     	;# 
  2755  0F33                     	;# 
  2756  0F34                     	;# 
  2757  0F35                     	;# 
  2758  0F36                     	;# 
  2759  0F37                     	;# 
  2760  0FE4                     	;# 
  2761  0FE5                     	;# 
  2762  0FE6                     	;# 
  2763  0FE7                     	;# 
  2764  0FE8                     	;# 
  2765  0FE9                     	;# 
  2766  0FEA                     	;# 
  2767  0FEB                     	;# 
  2768  0FED                     	;# 
  2769  0FEE                     	;# 
  2770  0FEF                     	;# 
  2771  0000                     	;# 
  2772  0001                     	;# 
  2773  0002                     	;# 
  2774  0003                     	;# 
  2775  0004                     	;# 
  2776  0005                     	;# 
  2777  0006                     	;# 
  2778  0007                     	;# 
  2779  0008                     	;# 
  2780  0009                     	;# 
  2781  000A                     	;# 
  2782  000B                     	;# 
  2783  000C                     	;# 
  2784  000D                     	;# 
  2785  000E                     	;# 
  2786  0010                     	;# 
  2787  0011                     	;# 
  2788  0012                     	;# 
  2789  0013                     	;# 
  2790  0014                     	;# 
  2791  0015                     	;# 
  2792  0016                     	;# 
  2793  0016                     	;# 
  2794  0017                     	;# 
  2795  0018                     	;# 
  2796  0019                     	;# 
  2797  001A                     	;# 
  2798  001A                     	;# 
  2799  001B                     	;# 
  2800  001B                     	;# 
  2801  001C                     	;# 
  2802  001D                     	;# 
  2803  001E                     	;# 
  2804  001F                     	;# 
  2805  008C                     	;# 
  2806  008D                     	;# 
  2807  008E                     	;# 
  2808  0090                     	;# 
  2809  0091                     	;# 
  2810  0092                     	;# 
  2811  0093                     	;# 
  2812  0094                     	;# 
  2813  0095                     	;# 
  2814  0096                     	;# 
  2815  0098                     	;# 
  2816  0099                     	;# 
  2817  009A                     	;# 
  2818  009B                     	;# 
  2819  009B                     	;# 
  2820  009C                     	;# 
  2821  009D                     	;# 
  2822  009E                     	;# 
  2823  009F                     	;# 
  2824  010C                     	;# 
  2825  010D                     	;# 
  2826  010E                     	;# 
  2827  0111                     	;# 
  2828  0112                     	;# 
  2829  0113                     	;# 
  2830  0114                     	;# 
  2831  0115                     	;# 
  2832  0116                     	;# 
  2833  0117                     	;# 
  2834  0118                     	;# 
  2835  0119                     	;# 
  2836  011C                     	;# 
  2837  018C                     	;# 
  2838  018D                     	;# 
  2839  018E                     	;# 
  2840  0191                     	;# 
  2841  0191                     	;# 
  2842  0192                     	;# 
  2843  0193                     	;# 
  2844  0193                     	;# 
  2845  0194                     	;# 
  2846  0195                     	;# 
  2847  0196                     	;# 
  2848  0197                     	;# 
  2849  0199                     	;# 
  2850  0199                     	;# 
  2851  0199                     	;# 
  2852  019A                     	;# 
  2853  019A                     	;# 
  2854  019A                     	;# 
  2855  019B                     	;# 
  2856  019B                     	;# 
  2857  019B                     	;# 
  2858  019B                     	;# 
  2859  019B                     	;# 
  2860  019C                     	;# 
  2861  019C                     	;# 
  2862  019C                     	;# 
  2863  019D                     	;# 
  2864  019D                     	;# 
  2865  019D                     	;# 
  2866  019E                     	;# 
  2867  019E                     	;# 
  2868  019E                     	;# 
  2869  019F                     	;# 
  2870  019F                     	;# 
  2871  019F                     	;# 
  2872  019F                     	;# 
  2873  019F                     	;# 
  2874  020C                     	;# 
  2875  020D                     	;# 
  2876  020E                     	;# 
  2877  0211                     	;# 
  2878  0211                     	;# 
  2879  0212                     	;# 
  2880  0212                     	;# 
  2881  0213                     	;# 
  2882  0213                     	;# 
  2883  0214                     	;# 
  2884  0214                     	;# 
  2885  0215                     	;# 
  2886  0215                     	;# 
  2887  0215                     	;# 
  2888  0215                     	;# 
  2889  0216                     	;# 
  2890  0216                     	;# 
  2891  0217                     	;# 
  2892  0217                     	;# 
  2893  028C                     	;# 
  2894  028D                     	;# 
  2895  028E                     	;# 
  2896  0291                     	;# 
  2897  0291                     	;# 
  2898  0292                     	;# 
  2899  0293                     	;# 
  2900  0294                     	;# 
  2901  0298                     	;# 
  2902  0298                     	;# 
  2903  0299                     	;# 
  2904  029A                     	;# 
  2905  029B                     	;# 
  2906  029E                     	;# 
  2907  030C                     	;# 
  2908  030D                     	;# 
  2909  030E                     	;# 
  2910  038C                     	;# 
  2911  038D                     	;# 
  2912  038E                     	;# 
  2913  0391                     	;# 
  2914  0392                     	;# 
  2915  0393                     	;# 
  2916  0394                     	;# 
  2917  0395                     	;# 
  2918  0396                     	;# 
  2919  0397                     	;# 
  2920  0398                     	;# 
  2921  0399                     	;# 
  2922  040E                     	;# 
  2923  0413                     	;# 
  2924  0413                     	;# 
  2925  0414                     	;# 
  2926  0414                     	;# 
  2927  0415                     	;# 
  2928  0416                     	;# 
  2929  0417                     	;# 
  2930  0418                     	;# 
  2931  041A                     	;# 
  2932  041A                     	;# 
  2933  041B                     	;# 
  2934  041B                     	;# 
  2935  041C                     	;# 
  2936  041D                     	;# 
  2937  041E                     	;# 
  2938  041F                     	;# 
  2939  0493                     	;# 
  2940  0494                     	;# 
  2941  0495                     	;# 
  2942  0496                     	;# 
  2943  049A                     	;# 
  2944  049B                     	;# 
  2945  049C                     	;# 
  2946  049D                     	;# 
  2947  058C                     	;# 
  2948  058C                     	;# 
  2949  058D                     	;# 
  2950  058E                     	;# 
  2951  058E                     	;# 
  2952  058F                     	;# 
  2953  0590                     	;# 
  2954  0590                     	;# 
  2955  0591                     	;# 
  2956  0592                     	;# 
  2957  0592                     	;# 
  2958  0593                     	;# 
  2959  0594                     	;# 
  2960  0594                     	;# 
  2961  0595                     	;# 
  2962  0596                     	;# 
  2963  0596                     	;# 
  2964  0597                     	;# 
  2965  0598                     	;# 
  2966  0599                     	;# 
  2967  059A                     	;# 
  2968  059B                     	;# 
  2969  059B                     	;# 
  2970  059C                     	;# 
  2971  059D                     	;# 
  2972  060C                     	;# 
  2973  060C                     	;# 
  2974  060D                     	;# 
  2975  060E                     	;# 
  2976  060F                     	;# 
  2977  060F                     	;# 
  2978  0610                     	;# 
  2979  0611                     	;# 
  2980  0612                     	;# 
  2981  0613                     	;# 
  2982  0614                     	;# 
  2983  0617                     	;# 
  2984  0617                     	;# 
  2985  0618                     	;# 
  2986  0619                     	;# 
  2987  061A                     	;# 
  2988  061A                     	;# 
  2989  061B                     	;# 
  2990  061C                     	;# 
  2991  0691                     	;# 
  2992  0692                     	;# 
  2993  0693                     	;# 
  2994  0694                     	;# 
  2995  0695                     	;# 
  2996  0696                     	;# 
  2997  0697                     	;# 
  2998  0699                     	;# 
  2999  069A                     	;# 
  3000  0711                     	;# 
  3001  0712                     	;# 
  3002  0713                     	;# 
  3003  0714                     	;# 
  3004  0715                     	;# 
  3005  0718                     	;# 
  3006  0718                     	;# 
  3007  0719                     	;# 
  3008  071A                     	;# 
  3009  071A                     	;# 
  3010  071B                     	;# 
  3011  071C                     	;# 
  3012  071D                     	;# 
  3013  0791                     	;# 
  3014  0791                     	;# 
  3015  0792                     	;# 
  3016  0793                     	;# 
  3017  0793                     	;# 
  3018  0794                     	;# 
  3019  0795                     	;# 
  3020  0795                     	;# 
  3021  0796                     	;# 
  3022  0797                     	;# 
  3023  0797                     	;# 
  3024  0798                     	;# 
  3025  0799                     	;# 
  3026  079A                     	;# 
  3027  080C                     	;# 
  3028  080C                     	;# 
  3029  080D                     	;# 
  3030  080E                     	;# 
  3031  080E                     	;# 
  3032  080F                     	;# 
  3033  0810                     	;# 
  3034  0810                     	;# 
  3035  0811                     	;# 
  3036  0812                     	;# 
  3037  0812                     	;# 
  3038  0813                     	;# 
  3039  0814                     	;# 
  3040  0815                     	;# 
  3041  0816                     	;# 
  3042  0817                     	;# 
  3043  0818                     	;# 
  3044  0819                     	;# 
  3045  081A                     	;# 
  3046  081A                     	;# 
  3047  081B                     	;# 
  3048  081C                     	;# 
  3049  081C                     	;# 
  3050  081D                     	;# 
  3051  088C                     	;# 
  3052  088D                     	;# 
  3053  088E                     	;# 
  3054  088F                     	;# 
  3055  088F                     	;# 
  3056  0890                     	;# 
  3057  0891                     	;# 
  3058  0892                     	;# 
  3059  0893                     	;# 
  3060  0893                     	;# 
  3061  0894                     	;# 
  3062  0895                     	;# 
  3063  0896                     	;# 
  3064  0897                     	;# 
  3065  0897                     	;# 
  3066  0898                     	;# 
  3067  0899                     	;# 
  3068  0D8C                     	;# 
  3069  0D8C                     	;# 
  3070  0D8D                     	;# 
  3071  0D8E                     	;# 
  3072  0D8F                     	;# 
  3073  0D8F                     	;# 
  3074  0D90                     	;# 
  3075  0D91                     	;# 
  3076  0D92                     	;# 
  3077  0D92                     	;# 
  3078  0D93                     	;# 
  3079  0D94                     	;# 
  3080  0D95                     	;# 
  3081  0D95                     	;# 
  3082  0D96                     	;# 
  3083  0D97                     	;# 
  3084  0D98                     	;# 
  3085  0D99                     	;# 
  3086  0D9A                     	;# 
  3087  0D9B                     	;# 
  3088  0D9C                     	;# 
  3089  0D9D                     	;# 
  3090  0D9E                     	;# 
  3091  0D9E                     	;# 
  3092  0D9F                     	;# 
  3093  0DA0                     	;# 
  3094  0DA1                     	;# 
  3095  0DA1                     	;# 
  3096  0DA2                     	;# 
  3097  0DA3                     	;# 
  3098  0DA4                     	;# 
  3099  0DA4                     	;# 
  3100  0DA5                     	;# 
  3101  0DA6                     	;# 
  3102  0DA7                     	;# 
  3103  0DA7                     	;# 
  3104  0DA8                     	;# 
  3105  0DA9                     	;# 
  3106  0DAA                     	;# 
  3107  0DAB                     	;# 
  3108  0DAC                     	;# 
  3109  0DAD                     	;# 
  3110  0DAE                     	;# 
  3111  0DAF                     	;# 
  3112  0E0F                     	;# 
  3113  0E10                     	;# 
  3114  0E11                     	;# 
  3115  0E12                     	;# 
  3116  0E13                     	;# 
  3117  0E14                     	;# 
  3118  0E15                     	;# 
  3119  0E16                     	;# 
  3120  0E17                     	;# 
  3121  0E18                     	;# 
  3122  0E19                     	;# 
  3123  0E1A                     	;# 
  3124  0E1B                     	;# 
  3125  0E1C                     	;# 
  3126  0E1D                     	;# 
  3127  0E1E                     	;# 
  3128  0E1F                     	;# 
  3129  0E20                     	;# 
  3130  0E21                     	;# 
  3131  0E22                     	;# 
  3132  0E23                     	;# 
  3133  0E24                     	;# 
  3134  0E25                     	;# 
  3135  0E26                     	;# 
  3136  0E27                     	;# 
  3137  0E28                     	;# 
  3138  0E29                     	;# 
  3139  0E2A                     	;# 
  3140  0E2B                     	;# 
  3141  0E2C                     	;# 
  3142  0E2D                     	;# 
  3143  0E2E                     	;# 
  3144  0E90                     	;# 
  3145  0E91                     	;# 
  3146  0E92                     	;# 
  3147  0E94                     	;# 
  3148  0E95                     	;# 
  3149  0E9C                     	;# 
  3150  0E9D                     	;# 
  3151  0E9E                     	;# 
  3152  0E9F                     	;# 
  3153  0EA0                     	;# 
  3154  0EA1                     	;# 
  3155  0EA2                     	;# 
  3156  0EA3                     	;# 
  3157  0EA4                     	;# 
  3158  0EA5                     	;# 
  3159  0EA6                     	;# 
  3160  0EA7                     	;# 
  3161  0F0F                     	;# 
  3162  0F10                     	;# 
  3163  0F11                     	;# 
  3164  0F12                     	;# 
  3165  0F13                     	;# 
  3166  0F14                     	;# 
  3167  0F15                     	;# 
  3168  0F16                     	;# 
  3169  0F17                     	;# 
  3170  0F18                     	;# 
  3171  0F19                     	;# 
  3172  0F1A                     	;# 
  3173  0F1B                     	;# 
  3174  0F1C                     	;# 
  3175  0F1D                     	;# 
  3176  0F1E                     	;# 
  3177  0F1F                     	;# 
  3178  0F20                     	;# 
  3179  0F21                     	;# 
  3180  0F22                     	;# 
  3181  0F23                     	;# 
  3182  0F24                     	;# 
  3183  0F25                     	;# 
  3184  0F26                     	;# 
  3185  0F27                     	;# 
  3186  0F28                     	;# 
  3187  0F29                     	;# 
  3188  0F2A                     	;# 
  3189  0F2B                     	;# 
  3190  0F2C                     	;# 
  3191  0F2D                     	;# 
  3192  0F2E                     	;# 
  3193  0F2F                     	;# 
  3194  0F30                     	;# 
  3195  0F31                     	;# 
  3196  0F32                     	;# 
  3197  0F33                     	;# 
  3198  0F34                     	;# 
  3199  0F35                     	;# 
  3200  0F36                     	;# 
  3201  0F37                     	;# 
  3202  0FE4                     	;# 
  3203  0FE5                     	;# 
  3204  0FE6                     	;# 
  3205  0FE7                     	;# 
  3206  0FE8                     	;# 
  3207  0FE9                     	;# 
  3208  0FEA                     	;# 
  3209  0FEB                     	;# 
  3210  0FED                     	;# 
  3211  0FEE                     	;# 
  3212  0FEF                     	;# 
  3213  0000                     	;# 
  3214  0001                     	;# 
  3215  0002                     	;# 
  3216  0003                     	;# 
  3217  0004                     	;# 
  3218  0005                     	;# 
  3219  0006                     	;# 
  3220  0007                     	;# 
  3221  0008                     	;# 
  3222  0009                     	;# 
  3223  000A                     	;# 
  3224  000B                     	;# 
  3225  000C                     	;# 
  3226  000D                     	;# 
  3227  000E                     	;# 
  3228  0010                     	;# 
  3229  0011                     	;# 
  3230  0012                     	;# 
  3231  0013                     	;# 
  3232  0014                     	;# 
  3233  0015                     	;# 
  3234  0016                     	;# 
  3235  0016                     	;# 
  3236  0017                     	;# 
  3237  0018                     	;# 
  3238  0019                     	;# 
  3239  001A                     	;# 
  3240  001A                     	;# 
  3241  001B                     	;# 
  3242  001B                     	;# 
  3243  001C                     	;# 
  3244  001D                     	;# 
  3245  001E                     	;# 
  3246  001F                     	;# 
  3247  008C                     	;# 
  3248  008D                     	;# 
  3249  008E                     	;# 
  3250  0090                     	;# 
  3251  0091                     	;# 
  3252  0092                     	;# 
  3253  0093                     	;# 
  3254  0094                     	;# 
  3255  0095                     	;# 
  3256  0096                     	;# 
  3257  0098                     	;# 
  3258  0099                     	;# 
  3259  009A                     	;# 
  3260  009B                     	;# 
  3261  009B                     	;# 
  3262  009C                     	;# 
  3263  009D                     	;# 
  3264  009E                     	;# 
  3265  009F                     	;# 
  3266  010C                     	;# 
  3267  010D                     	;# 
  3268  010E                     	;# 
  3269  0111                     	;# 
  3270  0112                     	;# 
  3271  0113                     	;# 
  3272  0114                     	;# 
  3273  0115                     	;# 
  3274  0116                     	;# 
  3275  0117                     	;# 
  3276  0118                     	;# 
  3277  0119                     	;# 
  3278  011C                     	;# 
  3279  018C                     	;# 
  3280  018D                     	;# 
  3281  018E                     	;# 
  3282  0191                     	;# 
  3283  0191                     	;# 
  3284  0192                     	;# 
  3285  0193                     	;# 
  3286  0193                     	;# 
  3287  0194                     	;# 
  3288  0195                     	;# 
  3289  0196                     	;# 
  3290  0197                     	;# 
  3291  0199                     	;# 
  3292  0199                     	;# 
  3293  0199                     	;# 
  3294  019A                     	;# 
  3295  019A                     	;# 
  3296  019A                     	;# 
  3297  019B                     	;# 
  3298  019B                     	;# 
  3299  019B                     	;# 
  3300  019B                     	;# 
  3301  019B                     	;# 
  3302  019C                     	;# 
  3303  019C                     	;# 
  3304  019C                     	;# 
  3305  019D                     	;# 
  3306  019D                     	;# 
  3307  019D                     	;# 
  3308  019E                     	;# 
  3309  019E                     	;# 
  3310  019E                     	;# 
  3311  019F                     	;# 
  3312  019F                     	;# 
  3313  019F                     	;# 
  3314  019F                     	;# 
  3315  019F                     	;# 
  3316  020C                     	;# 
  3317  020D                     	;# 
  3318  020E                     	;# 
  3319  0211                     	;# 
  3320  0211                     	;# 
  3321  0212                     	;# 
  3322  0212                     	;# 
  3323  0213                     	;# 
  3324  0213                     	;# 
  3325  0214                     	;# 
  3326  0214                     	;# 
  3327  0215                     	;# 
  3328  0215                     	;# 
  3329  0215                     	;# 
  3330  0215                     	;# 
  3331  0216                     	;# 
  3332  0216                     	;# 
  3333  0217                     	;# 
  3334  0217                     	;# 
  3335  028C                     	;# 
  3336  028D                     	;# 
  3337  028E                     	;# 
  3338  0291                     	;# 
  3339  0291                     	;# 
  3340  0292                     	;# 
  3341  0293                     	;# 
  3342  0294                     	;# 
  3343  0298                     	;# 
  3344  0298                     	;# 
  3345  0299                     	;# 
  3346  029A                     	;# 
  3347  029B                     	;# 
  3348  029E                     	;# 
  3349  030C                     	;# 
  3350  030D                     	;# 
  3351  030E                     	;# 
  3352  038C                     	;# 
  3353  038D                     	;# 
  3354  038E                     	;# 
  3355  0391                     	;# 
  3356  0392                     	;# 
  3357  0393                     	;# 
  3358  0394                     	;# 
  3359  0395                     	;# 
  3360  0396                     	;# 
  3361  0397                     	;# 
  3362  0398                     	;# 
  3363  0399                     	;# 
  3364  040E                     	;# 
  3365  0413                     	;# 
  3366  0413                     	;# 
  3367  0414                     	;# 
  3368  0414                     	;# 
  3369  0415                     	;# 
  3370  0416                     	;# 
  3371  0417                     	;# 
  3372  0418                     	;# 
  3373  041A                     	;# 
  3374  041A                     	;# 
  3375  041B                     	;# 
  3376  041B                     	;# 
  3377  041C                     	;# 
  3378  041D                     	;# 
  3379  041E                     	;# 
  3380  041F                     	;# 
  3381  0493                     	;# 
  3382  0494                     	;# 
  3383  0495                     	;# 
  3384  0496                     	;# 
  3385  049A                     	;# 
  3386  049B                     	;# 
  3387  049C                     	;# 
  3388  049D                     	;# 
  3389  058C                     	;# 
  3390  058C                     	;# 
  3391  058D                     	;# 
  3392  058E                     	;# 
  3393  058E                     	;# 
  3394  058F                     	;# 
  3395  0590                     	;# 
  3396  0590                     	;# 
  3397  0591                     	;# 
  3398  0592                     	;# 
  3399  0592                     	;# 
  3400  0593                     	;# 
  3401  0594                     	;# 
  3402  0594                     	;# 
  3403  0595                     	;# 
  3404  0596                     	;# 
  3405  0596                     	;# 
  3406  0597                     	;# 
  3407  0598                     	;# 
  3408  0599                     	;# 
  3409  059A                     	;# 
  3410  059B                     	;# 
  3411  059B                     	;# 
  3412  059C                     	;# 
  3413  059D                     	;# 
  3414  060C                     	;# 
  3415  060C                     	;# 
  3416  060D                     	;# 
  3417  060E                     	;# 
  3418  060F                     	;# 
  3419  060F                     	;# 
  3420  0610                     	;# 
  3421  0611                     	;# 
  3422  0612                     	;# 
  3423  0613                     	;# 
  3424  0614                     	;# 
  3425  0617                     	;# 
  3426  0617                     	;# 
  3427  0618                     	;# 
  3428  0619                     	;# 
  3429  061A                     	;# 
  3430  061A                     	;# 
  3431  061B                     	;# 
  3432  061C                     	;# 
  3433  0691                     	;# 
  3434  0692                     	;# 
  3435  0693                     	;# 
  3436  0694                     	;# 
  3437  0695                     	;# 
  3438  0696                     	;# 
  3439  0697                     	;# 
  3440  0699                     	;# 
  3441  069A                     	;# 
  3442  0711                     	;# 
  3443  0712                     	;# 
  3444  0713                     	;# 
  3445  0714                     	;# 
  3446  0715                     	;# 
  3447  0718                     	;# 
  3448  0718                     	;# 
  3449  0719                     	;# 
  3450  071A                     	;# 
  3451  071A                     	;# 
  3452  071B                     	;# 
  3453  071C                     	;# 
  3454  071D                     	;# 
  3455  0791                     	;# 
  3456  0791                     	;# 
  3457  0792                     	;# 
  3458  0793                     	;# 
  3459  0793                     	;# 
  3460  0794                     	;# 
  3461  0795                     	;# 
  3462  0795                     	;# 
  3463  0796                     	;# 
  3464  0797                     	;# 
  3465  0797                     	;# 
  3466  0798                     	;# 
  3467  0799                     	;# 
  3468  079A                     	;# 
  3469  080C                     	;# 
  3470  080C                     	;# 
  3471  080D                     	;# 
  3472  080E                     	;# 
  3473  080E                     	;# 
  3474  080F                     	;# 
  3475  0810                     	;# 
  3476  0810                     	;# 
  3477  0811                     	;# 
  3478  0812                     	;# 
  3479  0812                     	;# 
  3480  0813                     	;# 
  3481  0814                     	;# 
  3482  0815                     	;# 
  3483  0816                     	;# 
  3484  0817                     	;# 
  3485  0818                     	;# 
  3486  0819                     	;# 
  3487  081A                     	;# 
  3488  081A                     	;# 
  3489  081B                     	;# 
  3490  081C                     	;# 
  3491  081C                     	;# 
  3492  081D                     	;# 
  3493  088C                     	;# 
  3494  088D                     	;# 
  3495  088E                     	;# 
  3496  088F                     	;# 
  3497  088F                     	;# 
  3498  0890                     	;# 
  3499  0891                     	;# 
  3500  0892                     	;# 
  3501  0893                     	;# 
  3502  0893                     	;# 
  3503  0894                     	;# 
  3504  0895                     	;# 
  3505  0896                     	;# 
  3506  0897                     	;# 
  3507  0897                     	;# 
  3508  0898                     	;# 
  3509  0899                     	;# 
  3510  0D8C                     	;# 
  3511  0D8C                     	;# 
  3512  0D8D                     	;# 
  3513  0D8E                     	;# 
  3514  0D8F                     	;# 
  3515  0D8F                     	;# 
  3516  0D90                     	;# 
  3517  0D91                     	;# 
  3518  0D92                     	;# 
  3519  0D92                     	;# 
  3520  0D93                     	;# 
  3521  0D94                     	;# 
  3522  0D95                     	;# 
  3523  0D95                     	;# 
  3524  0D96                     	;# 
  3525  0D97                     	;# 
  3526  0D98                     	;# 
  3527  0D99                     	;# 
  3528  0D9A                     	;# 
  3529  0D9B                     	;# 
  3530  0D9C                     	;# 
  3531  0D9D                     	;# 
  3532  0D9E                     	;# 
  3533  0D9E                     	;# 
  3534  0D9F                     	;# 
  3535  0DA0                     	;# 
  3536  0DA1                     	;# 
  3537  0DA1                     	;# 
  3538  0DA2                     	;# 
  3539  0DA3                     	;# 
  3540  0DA4                     	;# 
  3541  0DA4                     	;# 
  3542  0DA5                     	;# 
  3543  0DA6                     	;# 
  3544  0DA7                     	;# 
  3545  0DA7                     	;# 
  3546  0DA8                     	;# 
  3547  0DA9                     	;# 
  3548  0DAA                     	;# 
  3549  0DAB                     	;# 
  3550  0DAC                     	;# 
  3551  0DAD                     	;# 
  3552  0DAE                     	;# 
  3553  0DAF                     	;# 
  3554  0E0F                     	;# 
  3555  0E10                     	;# 
  3556  0E11                     	;# 
  3557  0E12                     	;# 
  3558  0E13                     	;# 
  3559  0E14                     	;# 
  3560  0E15                     	;# 
  3561  0E16                     	;# 
  3562  0E17                     	;# 
  3563  0E18                     	;# 
  3564  0E19                     	;# 
  3565  0E1A                     	;# 
  3566  0E1B                     	;# 
  3567  0E1C                     	;# 
  3568  0E1D                     	;# 
  3569  0E1E                     	;# 
  3570  0E1F                     	;# 
  3571  0E20                     	;# 
  3572  0E21                     	;# 
  3573  0E22                     	;# 
  3574  0E23                     	;# 
  3575  0E24                     	;# 
  3576  0E25                     	;# 
  3577  0E26                     	;# 
  3578  0E27                     	;# 
  3579  0E28                     	;# 
  3580  0E29                     	;# 
  3581  0E2A                     	;# 
  3582  0E2B                     	;# 
  3583  0E2C                     	;# 
  3584  0E2D                     	;# 
  3585  0E2E                     	;# 
  3586  0E90                     	;# 
  3587  0E91                     	;# 
  3588  0E92                     	;# 
  3589  0E94                     	;# 
  3590  0E95                     	;# 
  3591  0E9C                     	;# 
  3592  0E9D                     	;# 
  3593  0E9E                     	;# 
  3594  0E9F                     	;# 
  3595  0EA0                     	;# 
  3596  0EA1                     	;# 
  3597  0EA2                     	;# 
  3598  0EA3                     	;# 
  3599  0EA4                     	;# 
  3600  0EA5                     	;# 
  3601  0EA6                     	;# 
  3602  0EA7                     	;# 
  3603  0F0F                     	;# 
  3604  0F10                     	;# 
  3605  0F11                     	;# 
  3606  0F12                     	;# 
  3607  0F13                     	;# 
  3608  0F14                     	;# 
  3609  0F15                     	;# 
  3610  0F16                     	;# 
  3611  0F17                     	;# 
  3612  0F18                     	;# 
  3613  0F19                     	;# 
  3614  0F1A                     	;# 
  3615  0F1B                     	;# 
  3616  0F1C                     	;# 
  3617  0F1D                     	;# 
  3618  0F1E                     	;# 
  3619  0F1F                     	;# 
  3620  0F20                     	;# 
  3621  0F21                     	;# 
  3622  0F22                     	;# 
  3623  0F23                     	;# 
  3624  0F24                     	;# 
  3625  0F25                     	;# 
  3626  0F26                     	;# 
  3627  0F27                     	;# 
  3628  0F28                     	;# 
  3629  0F29                     	;# 
  3630  0F2A                     	;# 
  3631  0F2B                     	;# 
  3632  0F2C                     	;# 
  3633  0F2D                     	;# 
  3634  0F2E                     	;# 
  3635  0F2F                     	;# 
  3636  0F30                     	;# 
  3637  0F31                     	;# 
  3638  0F32                     	;# 
  3639  0F33                     	;# 
  3640  0F34                     	;# 
  3641  0F35                     	;# 
  3642  0F36                     	;# 
  3643  0F37                     	;# 
  3644  0FE4                     	;# 
  3645  0FE5                     	;# 
  3646  0FE6                     	;# 
  3647  0FE7                     	;# 
  3648  0FE8                     	;# 
  3649  0FE9                     	;# 
  3650  0FEA                     	;# 
  3651  0FEB                     	;# 
  3652  0FED                     	;# 
  3653  0FEE                     	;# 
  3654  0FEF                     	;# 
  3655  0000                     	;# 
  3656  0001                     	;# 
  3657  0002                     	;# 
  3658  0003                     	;# 
  3659  0004                     	;# 
  3660  0005                     	;# 
  3661  0006                     	;# 
  3662  0007                     	;# 
  3663  0008                     	;# 
  3664  0009                     	;# 
  3665  000A                     	;# 
  3666  000B                     	;# 
  3667  000C                     	;# 
  3668  000D                     	;# 
  3669  000E                     	;# 
  3670  0010                     	;# 
  3671  0011                     	;# 
  3672  0012                     	;# 
  3673  0013                     	;# 
  3674  0014                     	;# 
  3675  0015                     	;# 
  3676  0016                     	;# 
  3677  0016                     	;# 
  3678  0017                     	;# 
  3679  0018                     	;# 
  3680  0019                     	;# 
  3681  001A                     	;# 
  3682  001A                     	;# 
  3683  001B                     	;# 
  3684  001B                     	;# 
  3685  001C                     	;# 
  3686  001D                     	;# 
  3687  001E                     	;# 
  3688  001F                     	;# 
  3689  008C                     	;# 
  3690  008D                     	;# 
  3691  008E                     	;# 
  3692  0090                     	;# 
  3693  0091                     	;# 
  3694  0092                     	;# 
  3695  0093                     	;# 
  3696  0094                     	;# 
  3697  0095                     	;# 
  3698  0096                     	;# 
  3699  0098                     	;# 
  3700  0099                     	;# 
  3701  009A                     	;# 
  3702  009B                     	;# 
  3703  009B                     	;# 
  3704  009C                     	;# 
  3705  009D                     	;# 
  3706  009E                     	;# 
  3707  009F                     	;# 
  3708  010C                     	;# 
  3709  010D                     	;# 
  3710  010E                     	;# 
  3711  0111                     	;# 
  3712  0112                     	;# 
  3713  0113                     	;# 
  3714  0114                     	;# 
  3715  0115                     	;# 
  3716  0116                     	;# 
  3717  0117                     	;# 
  3718  0118                     	;# 
  3719  0119                     	;# 
  3720  011C                     	;# 
  3721  018C                     	;# 
  3722  018D                     	;# 
  3723  018E                     	;# 
  3724  0191                     	;# 
  3725  0191                     	;# 
  3726  0192                     	;# 
  3727  0193                     	;# 
  3728  0193                     	;# 
  3729  0194                     	;# 
  3730  0195                     	;# 
  3731  0196                     	;# 
  3732  0197                     	;# 
  3733  0199                     	;# 
  3734  0199                     	;# 
  3735  0199                     	;# 
  3736  019A                     	;# 
  3737  019A                     	;# 
  3738  019A                     	;# 
  3739  019B                     	;# 
  3740  019B                     	;# 
  3741  019B                     	;# 
  3742  019B                     	;# 
  3743  019B                     	;# 
  3744  019C                     	;# 
  3745  019C                     	;# 
  3746  019C                     	;# 
  3747  019D                     	;# 
  3748  019D                     	;# 
  3749  019D                     	;# 
  3750  019E                     	;# 
  3751  019E                     	;# 
  3752  019E                     	;# 
  3753  019F                     	;# 
  3754  019F                     	;# 
  3755  019F                     	;# 
  3756  019F                     	;# 
  3757  019F                     	;# 
  3758  020C                     	;# 
  3759  020D                     	;# 
  3760  020E                     	;# 
  3761  0211                     	;# 
  3762  0211                     	;# 
  3763  0212                     	;# 
  3764  0212                     	;# 
  3765  0213                     	;# 
  3766  0213                     	;# 
  3767  0214                     	;# 
  3768  0214                     	;# 
  3769  0215                     	;# 
  3770  0215                     	;# 
  3771  0215                     	;# 
  3772  0215                     	;# 
  3773  0216                     	;# 
  3774  0216                     	;# 
  3775  0217                     	;# 
  3776  0217                     	;# 
  3777  028C                     	;# 
  3778  028D                     	;# 
  3779  028E                     	;# 
  3780  0291                     	;# 
  3781  0291                     	;# 
  3782  0292                     	;# 
  3783  0293                     	;# 
  3784  0294                     	;# 
  3785  0298                     	;# 
  3786  0298                     	;# 
  3787  0299                     	;# 
  3788  029A                     	;# 
  3789  029B                     	;# 
  3790  029E                     	;# 
  3791  030C                     	;# 
  3792  030D                     	;# 
  3793  030E                     	;# 
  3794  038C                     	;# 
  3795  038D                     	;# 
  3796  038E                     	;# 
  3797  0391                     	;# 
  3798  0392                     	;# 
  3799  0393                     	;# 
  3800  0394                     	;# 
  3801  0395                     	;# 
  3802  0396                     	;# 
  3803  0397                     	;# 
  3804  0398                     	;# 
  3805  0399                     	;# 
  3806  040E                     	;# 
  3807  0413                     	;# 
  3808  0413                     	;# 
  3809  0414                     	;# 
  3810  0414                     	;# 
  3811  0415                     	;# 
  3812  0416                     	;# 
  3813  0417                     	;# 
  3814  0418                     	;# 
  3815  041A                     	;# 
  3816  041A                     	;# 
  3817  041B                     	;# 
  3818  041B                     	;# 
  3819  041C                     	;# 
  3820  041D                     	;# 
  3821  041E                     	;# 
  3822  041F                     	;# 
  3823  0493                     	;# 
  3824  0494                     	;# 
  3825  0495                     	;# 
  3826  0496                     	;# 
  3827  049A                     	;# 
  3828  049B                     	;# 
  3829  049C                     	;# 
  3830  049D                     	;# 
  3831  058C                     	;# 
  3832  058C                     	;# 
  3833  058D                     	;# 
  3834  058E                     	;# 
  3835  058E                     	;# 
  3836  058F                     	;# 
  3837  0590                     	;# 
  3838  0590                     	;# 
  3839  0591                     	;# 
  3840  0592                     	;# 
  3841  0592                     	;# 
  3842  0593                     	;# 
  3843  0594                     	;# 
  3844  0594                     	;# 
  3845  0595                     	;# 
  3846  0596                     	;# 
  3847  0596                     	;# 
  3848  0597                     	;# 
  3849  0598                     	;# 
  3850  0599                     	;# 
  3851  059A                     	;# 
  3852  059B                     	;# 
  3853  059B                     	;# 
  3854  059C                     	;# 
  3855  059D                     	;# 
  3856  060C                     	;# 
  3857  060C                     	;# 
  3858  060D                     	;# 
  3859  060E                     	;# 
  3860  060F                     	;# 
  3861  060F                     	;# 
  3862  0610                     	;# 
  3863  0611                     	;# 
  3864  0612                     	;# 
  3865  0613                     	;# 
  3866  0614                     	;# 
  3867  0617                     	;# 
  3868  0617                     	;# 
  3869  0618                     	;# 
  3870  0619                     	;# 
  3871  061A                     	;# 
  3872  061A                     	;# 
  3873  061B                     	;# 
  3874  061C                     	;# 
  3875  0691                     	;# 
  3876  0692                     	;# 
  3877  0693                     	;# 
  3878  0694                     	;# 
  3879  0695                     	;# 
  3880  0696                     	;# 
  3881  0697                     	;# 
  3882  0699                     	;# 
  3883  069A                     	;# 
  3884  0711                     	;# 
  3885  0712                     	;# 
  3886  0713                     	;# 
  3887  0714                     	;# 
  3888  0715                     	;# 
  3889  0718                     	;# 
  3890  0718                     	;# 
  3891  0719                     	;# 
  3892  071A                     	;# 
  3893  071A                     	;# 
  3894  071B                     	;# 
  3895  071C                     	;# 
  3896  071D                     	;# 
  3897  0791                     	;# 
  3898  0791                     	;# 
  3899  0792                     	;# 
  3900  0793                     	;# 
  3901  0793                     	;# 
  3902  0794                     	;# 
  3903  0795                     	;# 
  3904  0795                     	;# 
  3905  0796                     	;# 
  3906  0797                     	;# 
  3907  0797                     	;# 
  3908  0798                     	;# 
  3909  0799                     	;# 
  3910  079A                     	;# 
  3911  080C                     	;# 
  3912  080C                     	;# 
  3913  080D                     	;# 
  3914  080E                     	;# 
  3915  080E                     	;# 
  3916  080F                     	;# 
  3917  0810                     	;# 
  3918  0810                     	;# 
  3919  0811                     	;# 
  3920  0812                     	;# 
  3921  0812                     	;# 
  3922  0813                     	;# 
  3923  0814                     	;# 
  3924  0815                     	;# 
  3925  0816                     	;# 
  3926  0817                     	;# 
  3927  0818                     	;# 
  3928  0819                     	;# 
  3929  081A                     	;# 
  3930  081A                     	;# 
  3931  081B                     	;# 
  3932  081C                     	;# 
  3933  081C                     	;# 
  3934  081D                     	;# 
  3935  088C                     	;# 
  3936  088D                     	;# 
  3937  088E                     	;# 
  3938  088F                     	;# 
  3939  088F                     	;# 
  3940  0890                     	;# 
  3941  0891                     	;# 
  3942  0892                     	;# 
  3943  0893                     	;# 
  3944  0893                     	;# 
  3945  0894                     	;# 
  3946  0895                     	;# 
  3947  0896                     	;# 
  3948  0897                     	;# 
  3949  0897                     	;# 
  3950  0898                     	;# 
  3951  0899                     	;# 
  3952  0D8C                     	;# 
  3953  0D8C                     	;# 
  3954  0D8D                     	;# 
  3955  0D8E                     	;# 
  3956  0D8F                     	;# 
  3957  0D8F                     	;# 
  3958  0D90                     	;# 
  3959  0D91                     	;# 
  3960  0D92                     	;# 
  3961  0D92                     	;# 
  3962  0D93                     	;# 
  3963  0D94                     	;# 
  3964  0D95                     	;# 
  3965  0D95                     	;# 
  3966  0D96                     	;# 
  3967  0D97                     	;# 
  3968  0D98                     	;# 
  3969  0D99                     	;# 
  3970  0D9A                     	;# 
  3971  0D9B                     	;# 
  3972  0D9C                     	;# 
  3973  0D9D                     	;# 
  3974  0D9E                     	;# 
  3975  0D9E                     	;# 
  3976  0D9F                     	;# 
  3977  0DA0                     	;# 
  3978  0DA1                     	;# 
  3979  0DA1                     	;# 
  3980  0DA2                     	;# 
  3981  0DA3                     	;# 
  3982  0DA4                     	;# 
  3983  0DA4                     	;# 
  3984  0DA5                     	;# 
  3985  0DA6                     	;# 
  3986  0DA7                     	;# 
  3987  0DA7                     	;# 
  3988  0DA8                     	;# 
  3989  0DA9                     	;# 
  3990  0DAA                     	;# 
  3991  0DAB                     	;# 
  3992  0DAC                     	;# 
  3993  0DAD                     	;# 
  3994  0DAE                     	;# 
  3995  0DAF                     	;# 
  3996  0E0F                     	;# 
  3997  0E10                     	;# 
  3998  0E11                     	;# 
  3999  0E12                     	;# 
  4000  0E13                     	;# 
  4001  0E14                     	;# 
  4002  0E15                     	;# 
  4003  0E16                     	;# 
  4004  0E17                     	;# 
  4005  0E18                     	;# 
  4006  0E19                     	;# 
  4007  0E1A                     	;# 
  4008  0E1B                     	;# 
  4009  0E1C                     	;# 
  4010  0E1D                     	;# 
  4011  0E1E                     	;# 
  4012  0E1F                     	;# 
  4013  0E20                     	;# 
  4014  0E21                     	;# 
  4015  0E22                     	;# 
  4016  0E23                     	;# 
  4017  0E24                     	;# 
  4018  0E25                     	;# 
  4019  0E26                     	;# 
  4020  0E27                     	;# 
  4021  0E28                     	;# 
  4022  0E29                     	;# 
  4023  0E2A                     	;# 
  4024  0E2B                     	;# 
  4025  0E2C                     	;# 
  4026  0E2D                     	;# 
  4027  0E2E                     	;# 
  4028  0E90                     	;# 
  4029  0E91                     	;# 
  4030  0E92                     	;# 
  4031  0E94                     	;# 
  4032  0E95                     	;# 
  4033  0E9C                     	;# 
  4034  0E9D                     	;# 
  4035  0E9E                     	;# 
  4036  0E9F                     	;# 
  4037  0EA0                     	;# 
  4038  0EA1                     	;# 
  4039  0EA2                     	;# 
  4040  0EA3                     	;# 
  4041  0EA4                     	;# 
  4042  0EA5                     	;# 
  4043  0EA6                     	;# 
  4044  0EA7                     	;# 
  4045  0F0F                     	;# 
  4046  0F10                     	;# 
  4047  0F11                     	;# 
  4048  0F12                     	;# 
  4049  0F13                     	;# 
  4050  0F14                     	;# 
  4051  0F15                     	;# 
  4052  0F16                     	;# 
  4053  0F17                     	;# 
  4054  0F18                     	;# 
  4055  0F19                     	;# 
  4056  0F1A                     	;# 
  4057  0F1B                     	;# 
  4058  0F1C                     	;# 
  4059  0F1D                     	;# 
  4060  0F1E                     	;# 
  4061  0F1F                     	;# 
  4062  0F20                     	;# 
  4063  0F21                     	;# 
  4064  0F22                     	;# 
  4065  0F23                     	;# 
  4066  0F24                     	;# 
  4067  0F25                     	;# 
  4068  0F26                     	;# 
  4069  0F27                     	;# 
  4070  0F28                     	;# 
  4071  0F29                     	;# 
  4072  0F2A                     	;# 
  4073  0F2B                     	;# 
  4074  0F2C                     	;# 
  4075  0F2D                     	;# 
  4076  0F2E                     	;# 
  4077  0F2F                     	;# 
  4078  0F30                     	;# 
  4079  0F31                     	;# 
  4080  0F32                     	;# 
  4081  0F33                     	;# 
  4082  0F34                     	;# 
  4083  0F35                     	;# 
  4084  0F36                     	;# 
  4085  0F37                     	;# 
  4086  0FE4                     	;# 
  4087  0FE5                     	;# 
  4088  0FE6                     	;# 
  4089  0FE7                     	;# 
  4090  0FE8                     	;# 
  4091  0FE9                     	;# 
  4092  0FEA                     	;# 
  4093  0FEB                     	;# 
  4094  0FED                     	;# 
  4095  0FEE                     	;# 
  4096  0FEF                     	;# 
  4097                           
  4098 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  4099  0000                     
  4100 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  4101  0000                     
  4102 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  4103  0000                     
  4104                           	psect	idataBANK0
  4105  14E3                     __pidataBANK0:	
  4106                           
  4107                           ;initializer for _IBI
  4108  14E3  3458               	retlw	88
  4109  14E4  3402               	retlw	2
  4110                           
  4111                           ;initializer for _thresh
  4112  14E5  3400               	retlw	0
  4113  14E6  3402               	retlw	2
  4114                           
  4115                           ;initializer for _T
  4116  14E7  3400               	retlw	0
  4117  14E8  3402               	retlw	2
  4118                           
  4119                           ;initializer for _firstBeat
  4120  14E9  3401               	retlw	1
  4121                           
  4122                           	psect	idataBANK2
  4123  07FB                     __pidataBANK2:	
  4124                           
  4125                           ;initializer for _amp
  4126  07FB  3464               	retlw	100
  4127  07FC  3400               	retlw	0
  4128                           
  4129                           ;initializer for _P
  4130  07FD  3400               	retlw	0
  4131  07FE  3402               	retlw	2
  4132                           
  4133                           	psect	idataBANK3
  4134  16B8                     __pidataBANK3:	
  4135                           
  4136                           ;initializer for _hrDisp
  4137  16B8  3448               	retlw	72
  4138  16B9  3465               	retlw	101
  4139  16BA  3461               	retlw	97
  4140  16BB  3472               	retlw	114
  4141  16BC  3474               	retlw	116
  4142  16BD  3420               	retlw	32
  4143  16BE  3452               	retlw	82
  4144  16BF  3461               	retlw	97
  4145  16C0  3474               	retlw	116
  4146  16C1  3465               	retlw	101
  4147  16C2  343A               	retlw	58
  4148  16C3  3420               	retlw	32
  4149  16C4  3400               	retlw	0
  4150                           
  4151                           ;initializer for _distanceDisp
  4152  16C5  3444               	retlw	68
  4153  16C6  3469               	retlw	105
  4154  16C7  3473               	retlw	115
  4155  16C8  3474               	retlw	116
  4156  16C9  3461               	retlw	97
  4157  16CA  346E               	retlw	110
  4158  16CB  3463               	retlw	99
  4159  16CC  3465               	retlw	101
  4160  16CD  343A               	retlw	58
  4161  16CE  3420               	retlw	32
  4162  16CF  3400               	retlw	0
  4163                           
  4164                           ;initializer for _speedDisp
  4165  16D0  3453               	retlw	83
  4166  16D1  3470               	retlw	112
  4167  16D2  3465               	retlw	101
  4168  16D3  3465               	retlw	101
  4169  16D4  3464               	retlw	100
  4170  16D5  343A               	retlw	58
  4171  16D6  3420               	retlw	32
  4172  16D7  3400               	retlw	0
  4173                           
  4174                           	psect	nvBANK2
  4175  014A                     __pnvBANK2:	
  4176  014A                     _TMR1_InterruptHandler:	
  4177  014A                     	ds	2
  4178  014C                     _timer1ReloadVal:	
  4179  014C                     	ds	2
  4180  014E                     _TMR0_InterruptHandler:	
  4181  014E                     	ds	2
  4182  0150                     _IOCCF7_InterruptHandler:	
  4183  0150                     	ds	2
  4184  0152                     _EUSART_ErrorHandler:	
  4185  0152                     	ds	2
  4186  0154                     _EUSART_OverrunErrorHandler:	
  4187  0154                     	ds	2
  4188  0156                     _EUSART_FramingErrorHandler:	
  4189  0156                     	ds	2
  4190  0158                     _timer0ReloadVal:	
  4191  0158                     	ds	1
  4192  0019                     _T1GCONbits	set	25
  4193  0018                     _T1CONbits	set	24
  4194  0018                     _T1CON	set	24
  4195  0016                     _TMR1L	set	22
  4196  0017                     _TMR1H	set	23
  4197  0019                     _T1GCON	set	25
  4198  0015                     _TMR0	set	21
  4199  000B                     _INTCONbits	set	11
  4200  0010                     _PIR1bits	set	16
  4201  009D                     _ADCON0bits	set	157
  4202  009C                     _ADRESH	set	156
  4203  009B                     _ADRESL	set	155
  4204  009F                     _ADCON2	set	159
  4205  009E                     _ADCON1	set	158
  4206  009D                     _ADCON0	set	157
  4207  0090                     _PIE1bits	set	144
  4208  0095                     _OPTION_REG	set	149
  4209  0095                     _OPTION_REGbits	set	149
  4210  008E                     _TRISC	set	142
  4211  008D                     _TRISB	set	141
  4212  008C                     _TRISA	set	140
  4213  0098                     _OSCTUNE	set	152
  4214  0099                     _OSCCON	set	153
  4215  010E                     _LATC	set	270
  4216  010D                     _LATB	set	269
  4217  010C                     _LATA	set	268
  4218  0116                     _BORCON	set	278
  4219  018C                     _ANSELA	set	396
  4220  018D                     _ANSELB	set	397
  4221  018E                     _ANSELC	set	398
  4222  019A                     _TX1REG	set	410
  4223  0199                     _RC1REG	set	409
  4224  019D                     _RC1STAbits	set	413
  4225  019E                     _TX1STAbits	set	414
  4226  019C                     _SPBRGH	set	412
  4227  019B                     _SPBRGL	set	411
  4228  019E                     _TX1STA	set	414
  4229  019D                     _RC1STA	set	413
  4230  019F                     _BAUD1CON	set	415
  4231  020E                     _WPUC	set	526
  4232  020C                     _WPUA	set	524
  4233  020D                     _WPUB	set	525
  4234  028E                     _ODCONC	set	654
  4235  028D                     _ODCONB	set	653
  4236  028C                     _ODCONA	set	652
  4237  030E                     _SLRCONC	set	782
  4238  030D                     _SLRCONB	set	781
  4239  030C                     _SLRCONA	set	780
  4240  0397                     _IOCCPbits	set	919
  4241  0398                     _IOCCNbits	set	920
  4242  0399                     _IOCCFbits	set	921
  4243  0E9F                     _RB7PPS	set	3743
  4244                           
  4245                           	psect	stringtext1
  4246  1800                     __pstringtext1:	
  4247  1800                     STR_1:	
  4248  1800  3425               	retlw	37	;'%'
  4249  1801  3464               	retlw	100	;'d'
  4250  1802  342E               	retlw	46	;'.'
  4251  1803  3425               	retlw	37	;'%'
  4252  1804  3464               	retlw	100	;'d'
  4253  1805  3420               	retlw	32	;' '
  4254  1806  346B               	retlw	107	;'k'
  4255  1807  3470               	retlw	112	;'p'
  4256  1808  3468               	retlw	104	;'h'
  4257  1809  3420               	retlw	32	;' '
  4258  180A  3420               	retlw	32	;' '
  4259  180B  3420               	retlw	32	;' '
  4260  180C  3420               	retlw	32	;' '
  4261  180D  3420               	retlw	32	;' '
  4262  180E  3400               	retlw	0
  4263                           
  4264                           	psect	stringtext2
  4265  180F                     __pstringtext2:	
  4266  180F                     STR_2:	
  4267  180F  3430               	retlw	48	;'0'
  4268  1810  3420               	retlw	32	;' '
  4269  1811  346B               	retlw	107	;'k'
  4270  1812  3470               	retlw	112	;'p'
  4271  1813  3468               	retlw	104	;'h'
  4272  1814  3420               	retlw	32	;' '
  4273  1815  3420               	retlw	32	;' '
  4274  1816  3420               	retlw	32	;' '
  4275  1817  3420               	retlw	32	;' '
  4276  1818  3420               	retlw	32	;' '
  4277  1819  3420               	retlw	32	;' '
  4278  181A  3420               	retlw	32	;' '
  4279  181B  3420               	retlw	32	;' '
  4280  181C  3400               	retlw	0
  4281                           
  4282                           	psect	stringtext3
  4283  181D                     __pstringtext3:	
  4284  181D                     STR_4:	
  4285  181D  3425               	retlw	37	;'%'
  4286  181E  3464               	retlw	100	;'d'
  4287  181F  3420               	retlw	32	;' '
  4288  1820  3462               	retlw	98	;'b'
  4289  1821  3470               	retlw	112	;'p'
  4290  1822  346D               	retlw	109	;'m'
  4291  1823  3420               	retlw	32	;' '
  4292  1824  3420               	retlw	32	;' '
  4293  1825  3420               	retlw	32	;' '
  4294  1826  3400               	retlw	0
  4295                           
  4296                           	psect	stringtext4
  4297  1827                     __pstringtext4:	
  4298  1827                     STR_3:	
  4299  1827  3425               	retlw	37	;'%'
  4300  1828  3464               	retlw	100	;'d'
  4301  1829  342E               	retlw	46	;'.'
  4302  182A  3425               	retlw	37	;'%'
  4303  182B  3464               	retlw	100	;'d'
  4304  182C  3420               	retlw	32	;' '
  4305  182D  346B               	retlw	107	;'k'
  4306  182E  346D               	retlw	109	;'m'
  4307  182F  3400               	retlw	0
  4308                           
  4309                           	psect	stringtext5
  4310  1830                     __pstringtext5:	
  4311  1830                     STR_5:	
  4312  1830  347C               	retlw	124	;'|'
  4313  1831  342D               	retlw	45	;'-'
  4314  1832  3400               	retlw	0
  4315                           
  4316                           	psect	stringtext6
  4317  0000                     __pstringtext6:	
  4318                           
  4319                           ; #config settings
  4320  0000                     
  4321                           	psect	cinit
  4322  0022                     start_initialization:	
  4323  0022                     __initialization:	
  4324                           
  4325                           ; Initialize objects allocated to BANK0
  4326  0022  30E3               	movlw	low __pidataBANK0
  4327  0023  0084               	movwf	4
  4328  0024  3094               	movlw	(high __pidataBANK0)| (0+128)
  4329  0025  0085               	movwf	5
  4330  0026  3069               	movlw	low __pdataBANK0
  4331  0027  0086               	movwf	6
  4332  0028  3000               	movlw	high __pdataBANK0
  4333  0029  0087               	movwf	7
  4334  002A  3007               	movlw	7
  4335  002B  3194  24D6  3180   	fcall	init_ram
  4336                           
  4337                           ; Initialize objects allocated to BANK2
  4338  002E  30FB               	movlw	low __pidataBANK2
  4339  002F  0084               	movwf	4
  4340  0030  3087               	movlw	(high __pidataBANK2)| (0+128)
  4341  0031  0085               	movwf	5
  4342  0032  3067               	movlw	low __pdataBANK2
  4343  0033  0086               	movwf	6
  4344  0034  3001               	movlw	high __pdataBANK2
  4345  0035  0087               	movwf	7
  4346  0036  3004               	movlw	4
  4347  0037  3194  24D6  3180   	fcall	init_ram
  4348                           
  4349                           ; Initialize objects allocated to BANK3
  4350  003A  30B8               	movlw	low __pidataBANK3
  4351  003B  0084               	movwf	4
  4352  003C  3096               	movlw	(high __pidataBANK3)| (0+128)
  4353  003D  0085               	movwf	5
  4354  003E  30A0               	movlw	low __pdataBANK3
  4355  003F  0086               	movwf	6
  4356  0040  3001               	movlw	high __pdataBANK3
  4357  0041  0087               	movwf	7
  4358  0042  3020               	movlw	32
  4359  0043  3194  24D6  3180   	fcall	init_ram
  4360                           
  4361                           ; Clear objects allocated to BANK0
  4362  0046  305C               	movlw	low __pbssBANK0
  4363  0047  0084               	movwf	4
  4364  0048  3000               	movlw	high __pbssBANK0
  4365  0049  0085               	movwf	5
  4366  004A  300D               	movlw	13
  4367  004B  3194  24D0  3180   	fcall	clear_ram0
  4368                           
  4369                           ; Clear objects allocated to BANK2
  4370  004E  3020               	movlw	low __pbssBANK2
  4371  004F  0084               	movwf	4
  4372  0050  3001               	movlw	high __pbssBANK2
  4373  0051  0085               	movwf	5
  4374  0052  302A               	movlw	42
  4375  0053  3194  24D0  3180   	fcall	clear_ram0
  4376                           
  4377                           ; Clear objects allocated to BANK3
  4378  0056  30C0               	movlw	low __pbssBANK3
  4379  0057  0084               	movwf	4
  4380  0058  3001               	movlw	high __pbssBANK3
  4381  0059  0085               	movwf	5
  4382  005A  3014               	movlw	20
  4383  005B  3194  24D0  3180   	fcall	clear_ram0
  4384                           
  4385                           ; Clear objects allocated to BANK4
  4386  005E  3020               	movlw	low __pbssBANK4
  4387  005F  0084               	movwf	4
  4388  0060  3002               	movlw	high __pbssBANK4
  4389  0061  0085               	movwf	5
  4390  0062  3020               	movlw	32
  4391  0063  3194  24D0         	fcall	clear_ram0
  4392  0065                     end_of_initialization:	
  4393                           ;End of C runtime variable initialization code
  4394                           
  4395  0065                     __end_of__initialization:	
  4396  0065  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4397  0066  0020               	movlb	0
  4398  0067  318A  2A30         	ljmp	_main	;jump to C main() function
  4399                           
  4400                           	psect	bssBANK0
  4401  005C                     __pbssBANK0:	
  4402  005C                     _sampleCounter:	
  4403  005C                     	ds	4
  4404  0060                     _flags:	
  4405  0060                     	ds	2
  4406  0062                     _Signal:	
  4407  0062                     	ds	2
  4408  0064                     _distance:	
  4409  0064                     	ds	2
  4410  0066                     _Pulse:	
  4411  0066                     	ds	1
  4412  0067                     _secondBeat:	
  4413  0067                     	ds	1
  4414  0068                     _eusartRxLastError:	
  4415  0068                     	ds	1
  4416                           
  4417                           	psect	dataBANK0
  4418  0069                     __pdataBANK0:	
  4419  0069                     _IBI:	
  4420  0069                     	ds	2
  4421  006B                     _thresh:	
  4422  006B                     	ds	2
  4423  006D                     _T:	
  4424  006D                     	ds	2
  4425  006F                     _firstBeat:	
  4426  006F                     	ds	1
  4427                           
  4428                           	psect	bssBANK2
  4429  0120                     __pbssBANK2:	
  4430  0120                     _lastBeatTime:	
  4431  0120                     	ds	4
  4432  0124                     _adcCounter:	
  4433  0124                     	ds	4
  4434  0128                     _heartRate:	
  4435  0128                     	ds	4
  4436  012C                     _speed:	
  4437  012C                     	ds	4
  4438  0130                     _nout:	
  4439  0130                     	ds	2
  4440  0132                     _width:	
  4441  0132                     	ds	2
  4442  0134                     _prec:	
  4443  0134                     	ds	2
  4444  0136                     _BPM:	
  4445  0136                     	ds	2
  4446  0138                     _hrInt:	
  4447  0138                     	ds	2
  4448  013A                     _speedHi:	
  4449  013A                     	ds	2
  4450  013C                     _speedLo:	
  4451  013C                     	ds	2
  4452  013E                     _distLo:	
  4453  013E                     	ds	2
  4454  0140                     _distHi:	
  4455  0140                     	ds	2
  4456  0142                     _rpm:	
  4457  0142                     	ds	4
  4458  0146                     _counter:	
  4459  0146                     	ds	4
  4460                           
  4461                           	psect	dataBANK2
  4462  0167                     __pdataBANK2:	
  4463  0167                     _amp:	
  4464  0167                     	ds	2
  4465  0169                     _P:	
  4466  0169                     	ds	2
  4467                           
  4468                           	psect	bssBANK3
  4469  01C0                     __pbssBANK3:	
  4470  01C0                     _rate:	
  4471  01C0                     	ds	20
  4472                           
  4473                           	psect	dataBANK3
  4474  01A0                     __pdataBANK3:	
  4475  01A0                     _hrDisp:	
  4476  01A0                     	ds	13
  4477  01AD                     _distanceDisp:	
  4478  01AD                     	ds	11
  4479  01B8                     _speedDisp:	
  4480  01B8                     	ds	8
  4481                           
  4482                           	psect	bssBANK4
  4483  0220                     __pbssBANK4:	
  4484  0220                     _dbuf:	
  4485  0220                     	ds	32
  4486                           
  4487                           	psect	inittext
  4488  14D6                     init_ram:	
  4489  14D6  00FE               	movwf	126
  4490  14D7                     initloop:	
  4491  14D7  0012               	moviw fsr0++
  4492  14D8  001E               	movwi fsr1++
  4493  14D9  0BFE               	decfsz	126,f
  4494  14DA  2CD7               	goto	initloop
  4495  14DB  3400               	retlw	0
  4496                           
  4497                           	psect	clrtext
  4498  14D0                     clear_ram0:	
  4499                           ;	Called with FSR0 containing the base address, and
  4500                           ;	WREG with the size to clear
  4501                           
  4502  14D0  0064               	clrwdt	;clear the watchdog before getting into this loop
  4503  14D1                     clrloop0:	
  4504  14D1  0180               	clrf	0	;clear RAM location pointed to by FSR
  4505  14D2  3101               	addfsr 0,1
  4506  14D3  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  4507  14D4  2CD1               	goto	clrloop0	;have we reached the end yet?
  4508  14D5  3400               	retlw	0	;all done for this memory range, return
  4509                           
  4510                           	psect	cstackBANK2
  4511  0159                     __pcstackBANK2:	
  4512  0159                     vfprintf@fp:	
  4513                           
  4514                           ; 1 bytes @ 0x0
  4515  0159                     	ds	1
  4516  015A                     vfprintf@cfmt:	
  4517                           
  4518                           ; 2 bytes @ 0x1
  4519  015A                     	ds	2
  4520  015C                     ?_printf:	
  4521  015C                     printf@fmt:	
  4522                           ; 2 bytes @ 0x3
  4523                           
  4524                           
  4525                           ; 2 bytes @ 0x3
  4526  015C                     	ds	8
  4527  0164                     printf@ap:	
  4528                           
  4529                           ; 1 bytes @ 0xB
  4530  0164                     	ds	1
  4531  0165                     ??_main:	
  4532                           
  4533                           ; 1 bytes @ 0xC
  4534  0165                     	ds	2
  4535                           
  4536                           	psect	cstackBANK1
  4537  00A0                     __pcstackBANK1:	
  4538  00A0                     ?___flge:	
  4539  00A0                     ?_EUSART_SetFramingErrorHandler:	
  4540                           ; 1 bit 
  4541                           
  4542  00A0                     ?_EUSART_SetOverrunErrorHandler:	
  4543                           ; 1 bytes @ 0x0
  4544                           
  4545  00A0                     ?_EUSART_SetErrorHandler:	
  4546                           ; 1 bytes @ 0x0
  4547                           
  4548  00A0                     ??_OSCILLATOR_Initialize:	
  4549                           ; 1 bytes @ 0x0
  4550                           
  4551  00A0                     ??_ADC_Initialize:	
  4552                           ; 1 bytes @ 0x0
  4553                           
  4554  00A0                     ?_IOCCF7_SetInterruptHandler:	
  4555                           ; 1 bytes @ 0x0
  4556                           
  4557  00A0                     ?_TMR0_SetInterruptHandler:	
  4558                           ; 1 bytes @ 0x0
  4559                           
  4560  00A0                     ?_TMR1_SetInterruptHandler:	
  4561                           ; 1 bytes @ 0x0
  4562                           
  4563  00A0                     ??_EUSART_is_tx_ready:	
  4564                           ; 1 bytes @ 0x0
  4565                           
  4566  00A0                     ??_EUSART_Write:	
  4567                           ; 1 bytes @ 0x0
  4568                           
  4569  00A0                     ?_strlen:	
  4570                           ; 1 bytes @ 0x0
  4571                           
  4572  00A0                     ?___aodiv:	
  4573                           ; 2 bytes @ 0x0
  4574                           
  4575  00A0                     ?___aomod:	
  4576                           ; 8 bytes @ 0x0
  4577                           
  4578  00A0                     _EUSART_is_tx_ready$167:	
  4579                           ; 8 bytes @ 0x0
  4580                           
  4581  00A0                     EUSART_Write@txData:	
  4582                           ; 1 bytes @ 0x0
  4583                           
  4584  00A0                     EUSART_SetFramingErrorHandler@interruptHandler:	
  4585                           ; 1 bytes @ 0x0
  4586                           
  4587  00A0                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  4588                           ; 2 bytes @ 0x0
  4589                           
  4590  00A0                     EUSART_SetErrorHandler@interruptHandler:	
  4591                           ; 2 bytes @ 0x0
  4592                           
  4593  00A0                     IOCCF7_SetInterruptHandler@InterruptHandler:	
  4594                           ; 2 bytes @ 0x0
  4595                           
  4596  00A0                     TMR0_SetInterruptHandler@InterruptHandler:	
  4597                           ; 2 bytes @ 0x0
  4598                           
  4599  00A0                     TMR1_SetInterruptHandler@InterruptHandler:	
  4600                           ; 2 bytes @ 0x0
  4601                           
  4602  00A0                     ___flge@ff1:	
  4603                           ; 2 bytes @ 0x0
  4604                           
  4605  00A0                     ___aodiv@divisor:	
  4606                           ; 4 bytes @ 0x0
  4607                           
  4608  00A0                     ___aomod@divisor:	
  4609                           ; 8 bytes @ 0x0
  4610                           
  4611                           
  4612                           ; 8 bytes @ 0x0
  4613  00A0                     	ds	1
  4614  00A1                     ?_setCursor:	
  4615  00A1                     ??_putch:	
  4616                           ; 1 bytes @ 0x1
  4617                           
  4618  00A1                     putch@txData:	
  4619                           ; 1 bytes @ 0x1
  4620                           
  4621  00A1                     setCursor@b:	
  4622                           ; 1 bytes @ 0x1
  4623                           
  4624                           
  4625                           ; 1 bytes @ 0x1
  4626  00A1                     	ds	1
  4627  00A2                     ??_EUSART_SetFramingErrorHandler:	
  4628  00A2                     ??_EUSART_SetOverrunErrorHandler:	
  4629                           ; 1 bytes @ 0x2
  4630                           
  4631  00A2                     ??_EUSART_SetErrorHandler:	
  4632                           ; 1 bytes @ 0x2
  4633                           
  4634  00A2                     ??_PIN_MANAGER_Initialize:	
  4635                           ; 1 bytes @ 0x2
  4636                           
  4637  00A2                     ??_TMR1_Initialize:	
  4638                           ; 1 bytes @ 0x2
  4639                           
  4640  00A2                     ??_TMR0_Initialize:	
  4641                           ; 1 bytes @ 0x2
  4642                           
  4643  00A2                     ??_IOCCF7_SetInterruptHandler:	
  4644                           ; 1 bytes @ 0x2
  4645                           
  4646  00A2                     ??_TMR0_SetInterruptHandler:	
  4647                           ; 1 bytes @ 0x2
  4648                           
  4649  00A2                     ??_TMR1_SetInterruptHandler:	
  4650                           ; 1 bytes @ 0x2
  4651                           
  4652  00A2                     ??_setCursor:	
  4653                           ; 1 bytes @ 0x2
  4654                           
  4655  00A2                     ??_strlen:	
  4656                           ; 1 bytes @ 0x2
  4657                           
  4658  00A2                     ??_EUSART_Initialize:	
  4659                           ; 1 bytes @ 0x2
  4660                           
  4661  00A2                     ?_fputc:	
  4662                           ; 1 bytes @ 0x2
  4663                           
  4664  00A2                     fputc@c:	
  4665                           ; 2 bytes @ 0x2
  4666                           
  4667                           
  4668                           ; 2 bytes @ 0x2
  4669  00A2                     	ds	1
  4670  00A3                     ??_SYSTEM_Initialize:	
  4671  00A3                     strlen@a:	
  4672                           ; 1 bytes @ 0x3
  4673                           
  4674                           
  4675                           ; 1 bytes @ 0x3
  4676  00A3                     	ds	1
  4677  00A4                     setCursor@a:	
  4678  00A4                     fputc@fp:	
  4679                           ; 1 bytes @ 0x4
  4680                           
  4681  00A4                     strlen@s:	
  4682                           ; 1 bytes @ 0x4
  4683                           
  4684  00A4                     ___flge@ff2:	
  4685                           ; 1 bytes @ 0x4
  4686                           
  4687                           
  4688                           ; 4 bytes @ 0x4
  4689  00A4                     	ds	1
  4690  00A5                     ??_fputc:	
  4691                           
  4692                           ; 1 bytes @ 0x5
  4693  00A5                     	ds	3
  4694  00A8                     ??___flge:	
  4695  00A8                     ___aodiv@dividend:	
  4696                           ; 1 bytes @ 0x8
  4697                           
  4698  00A8                     ___aomod@dividend:	
  4699                           ; 8 bytes @ 0x8
  4700                           
  4701                           
  4702                           ; 8 bytes @ 0x8
  4703  00A8                     	ds	2
  4704  00AA                     ?_fputs:	
  4705  00AA                     fputs@s:	
  4706                           ; 2 bytes @ 0xA
  4707                           
  4708                           
  4709                           ; 2 bytes @ 0xA
  4710  00AA                     	ds	2
  4711  00AC                     fputs@fp:	
  4712                           
  4713                           ; 1 bytes @ 0xC
  4714  00AC                     	ds	1
  4715  00AD                     ??_fputs:	
  4716                           
  4717                           ; 1 bytes @ 0xD
  4718  00AD                     	ds	3
  4719  00B0                     ??___aodiv:	
  4720  00B0                     ??___aomod:	
  4721                           ; 1 bytes @ 0x10
  4722                           
  4723  00B0                     fputs@c:	
  4724                           ; 1 bytes @ 0x10
  4725                           
  4726                           
  4727                           ; 1 bytes @ 0x10
  4728  00B0                     	ds	1
  4729  00B1                     ___aodiv@counter:	
  4730  00B1                     ___aomod@counter:	
  4731                           ; 1 bytes @ 0x11
  4732                           
  4733  00B1                     fputs@i:	
  4734                           ; 1 bytes @ 0x11
  4735                           
  4736                           
  4737                           ; 2 bytes @ 0x11
  4738  00B1                     	ds	1
  4739  00B2                     ___aodiv@sign:	
  4740  00B2                     ___aomod@sign:	
  4741                           ; 1 bytes @ 0x12
  4742                           
  4743                           
  4744                           ; 1 bytes @ 0x12
  4745  00B2                     	ds	1
  4746  00B3                     ?_puts:	
  4747  00B3                     ?_abs:	
  4748                           ; 2 bytes @ 0x13
  4749                           
  4750  00B3                     ?_pad:	
  4751                           ; 2 bytes @ 0x13
  4752                           
  4753  00B3                     pad@buf:	
  4754                           ; 2 bytes @ 0x13
  4755                           
  4756  00B3                     abs@a:	
  4757                           ; 1 bytes @ 0x13
  4758                           
  4759  00B3                     puts@s:	
  4760                           ; 2 bytes @ 0x13
  4761                           
  4762  00B3                     ___aodiv@quotient:	
  4763                           ; 2 bytes @ 0x13
  4764                           
  4765                           
  4766                           ; 8 bytes @ 0x13
  4767  00B3                     	ds	1
  4768  00B4                     pad@p:	
  4769                           
  4770                           ; 2 bytes @ 0x14
  4771  00B4                     	ds	1
  4772  00B5                     ??_puts:	
  4773  00B5                     ??_abs:	
  4774                           ; 1 bytes @ 0x15
  4775                           
  4776                           
  4777                           ; 1 bytes @ 0x15
  4778  00B5                     	ds	1
  4779  00B6                     ??_pad:	
  4780                           
  4781                           ; 1 bytes @ 0x16
  4782  00B6                     	ds	1
  4783  00B7                     _puts$1319:	
  4784  00B7                     pad@i:	
  4785                           ; 1 bytes @ 0x17
  4786                           
  4787                           
  4788                           ; 2 bytes @ 0x17
  4789  00B7                     	ds	1
  4790  00B8                     ??_resetCursor:	
  4791  00B8                     ??_writeString:	
  4792                           ; 1 bytes @ 0x18
  4793                           
  4794  00B8                     writeString@string:	
  4795                           ; 1 bytes @ 0x18
  4796                           
  4797                           
  4798                           ; 1 bytes @ 0x18
  4799  00B8                     	ds	1
  4800  00B9                     pad@w:	
  4801                           
  4802                           ; 2 bytes @ 0x19
  4803  00B9                     	ds	2
  4804  00BB                     pad@fp:	
  4805                           
  4806                           ; 1 bytes @ 0x1B
  4807  00BB                     	ds	1
  4808  00BC                     ?_dtoa:	
  4809  00BC                     dtoa@d:	
  4810                           ; 2 bytes @ 0x1C
  4811                           
  4812                           
  4813                           ; 8 bytes @ 0x1C
  4814  00BC                     	ds	8
  4815  00C4                     ??_dtoa:	
  4816                           
  4817                           ; 1 bytes @ 0x24
  4818  00C4                     	ds	3
  4819  00C7                     _dtoa$973:	
  4820                           
  4821                           ; 2 bytes @ 0x27
  4822  00C7                     	ds	2
  4823  00C9                     dtoa@p:	
  4824                           
  4825                           ; 2 bytes @ 0x29
  4826  00C9                     	ds	2
  4827  00CB                     dtoa@fp:	
  4828                           
  4829                           ; 1 bytes @ 0x2B
  4830  00CB                     	ds	1
  4831  00CC                     dtoa@w:	
  4832                           
  4833                           ; 2 bytes @ 0x2C
  4834  00CC                     	ds	2
  4835  00CE                     dtoa@s:	
  4836                           
  4837                           ; 2 bytes @ 0x2E
  4838  00CE                     	ds	2
  4839  00D0                     dtoa@n:	
  4840                           
  4841                           ; 8 bytes @ 0x30
  4842  00D0                     	ds	8
  4843  00D8                     dtoa@i:	
  4844                           
  4845                           ; 2 bytes @ 0x38
  4846  00D8                     	ds	2
  4847  00DA                     ?_vfpfcnvrt:	
  4848  00DA                     vfpfcnvrt@fmt:	
  4849                           ; 2 bytes @ 0x3A
  4850                           
  4851                           
  4852                           ; 1 bytes @ 0x3A
  4853  00DA                     	ds	1
  4854  00DB                     vfpfcnvrt@ap:	
  4855                           
  4856                           ; 1 bytes @ 0x3B
  4857  00DB                     	ds	1
  4858  00DC                     ??_vfpfcnvrt:	
  4859                           
  4860                           ; 1 bytes @ 0x3C
  4861  00DC                     	ds	5
  4862  00E1                     vfpfcnvrt@ll:	
  4863                           
  4864                           ; 8 bytes @ 0x41
  4865  00E1                     	ds	8
  4866  00E9                     vfpfcnvrt@fp:	
  4867                           
  4868                           ; 1 bytes @ 0x49
  4869  00E9                     	ds	1
  4870  00EA                     ?_vfprintf:	
  4871  00EA                     vfprintf@fmt:	
  4872                           ; 2 bytes @ 0x4A
  4873                           
  4874                           
  4875                           ; 2 bytes @ 0x4A
  4876  00EA                     	ds	2
  4877  00EC                     vfprintf@ap:	
  4878                           
  4879                           ; 1 bytes @ 0x4C
  4880  00EC                     	ds	1
  4881  00ED                     ??_vfprintf:	
  4882                           
  4883                           ; 1 bytes @ 0x4D
  4884  00ED                     	ds	2
  4885  00EF                     ??_printf:	
  4886                           
  4887                           ; 1 bytes @ 0x4F
  4888  00EF                     	ds	1
  4889                           
  4890                           	psect	cstackCOMMON
  4891  0070                     __pcstackCOMMON:	
  4892  0070                     ?_PIN_MANAGER_Initialize:	
  4893  0070                     ?_OSCILLATOR_Initialize:	
  4894                           ; 1 bytes @ 0x0
  4895                           
  4896  0070                     ?_TMR1_Initialize:	
  4897                           ; 1 bytes @ 0x0
  4898                           
  4899  0070                     ?_ADC_Initialize:	
  4900                           ; 1 bytes @ 0x0
  4901                           
  4902  0070                     ?_TMR0_Initialize:	
  4903                           ; 1 bytes @ 0x0
  4904                           
  4905  0070                     ?_IOCCF7_DefaultInterruptHandler:	
  4906                           ; 1 bytes @ 0x0
  4907                           
  4908  0070                     ??_IOCCF7_DefaultInterruptHandler:	
  4909                           ; 1 bytes @ 0x0
  4910                           
  4911  0070                     ?_IOCCF7_ISR:	
  4912                           ; 1 bytes @ 0x0
  4913                           
  4914  0070                     ?_TMR0_DefaultInterruptHandler:	
  4915                           ; 1 bytes @ 0x0
  4916                           
  4917  0070                     ??_TMR0_DefaultInterruptHandler:	
  4918                           ; 1 bytes @ 0x0
  4919                           
  4920  0070                     ?_TMR1_ISR:	
  4921                           ; 1 bytes @ 0x0
  4922                           
  4923  0070                     ?_timerISR:	
  4924                           ; 1 bytes @ 0x0
  4925                           
  4926  0070                     ?_heartRateISR:	
  4927                           ; 1 bytes @ 0x0
  4928                           
  4929  0070                     ?_speedCalc:	
  4930                           ; 1 bytes @ 0x0
  4931                           
  4932  0070                     ?_resetCursor:	
  4933                           ; 1 bytes @ 0x0
  4934                           
  4935  0070                     ?_writeString:	
  4936                           ; 1 bytes @ 0x0
  4937                           
  4938  0070                     ?_TMR1_DefaultInterruptHandler:	
  4939                           ; 1 bytes @ 0x0
  4940                           
  4941  0070                     ??_TMR1_DefaultInterruptHandler:	
  4942                           ; 1 bytes @ 0x0
  4943                           
  4944  0070                     ?_EUSART_Initialize:	
  4945                           ; 1 bytes @ 0x0
  4946                           
  4947  0070                     ?_EUSART_is_tx_ready:	
  4948                           ; 1 bytes @ 0x0
  4949                           
  4950  0070                     ?_EUSART_Write:	
  4951                           ; 1 bytes @ 0x0
  4952                           
  4953  0070                     ?_putch:	
  4954                           ; 1 bytes @ 0x0
  4955                           
  4956  0070                     ?_SYSTEM_Initialize:	
  4957                           ; 1 bytes @ 0x0
  4958                           
  4959  0070                     ?_PIN_MANAGER_IOC:	
  4960                           ; 1 bytes @ 0x0
  4961                           
  4962  0070                     ?_TMR0_ISR:	
  4963                           ; 1 bytes @ 0x0
  4964                           
  4965  0070                     ?_INTERRUPT_InterruptManager:	
  4966                           ; 1 bytes @ 0x0
  4967                           
  4968  0070                     ?_main:	
  4969                           ; 1 bytes @ 0x0
  4970                           
  4971  0070                     ?_TMR1_WriteTimer:	
  4972                           ; 1 bytes @ 0x0
  4973                           
  4974  0070                     ?__Umul8_16:	
  4975                           ; 1 bytes @ 0x0
  4976                           
  4977  0070                     ?_ADC_GetConversion:	
  4978                           ; 2 bytes @ 0x0
  4979                           
  4980  0070                     ?___awdiv:	
  4981                           ; 2 bytes @ 0x0
  4982                           
  4983  0070                     ?___aldiv:	
  4984                           ; 2 bytes @ 0x0
  4985                           
  4986  0070                     ?___fladd:	
  4987                           ; 4 bytes @ 0x0
  4988                           
  4989  0070                     ?___fldiv:	
  4990                           ; 4 bytes @ 0x0
  4991                           
  4992  0070                     __Umul8_16@multiplicand:	
  4993                           ; 4 bytes @ 0x0
  4994                           
  4995  0070                     TMR1_WriteTimer@timerVal:	
  4996                           ; 1 bytes @ 0x0
  4997                           
  4998  0070                     ___awdiv@divisor:	
  4999                           ; 2 bytes @ 0x0
  5000                           
  5001  0070                     ___aldiv@divisor:	
  5002                           ; 2 bytes @ 0x0
  5003                           
  5004  0070                     ___fladd@b:	
  5005                           ; 4 bytes @ 0x0
  5006                           
  5007  0070                     ___fldiv@a:	
  5008                           ; 4 bytes @ 0x0
  5009                           
  5010                           
  5011                           ; 4 bytes @ 0x0
  5012  0070                     	ds	2
  5013  0072                     ??__Umul8_16:	
  5014  0072                     ??_ADC_GetConversion:	
  5015                           ; 1 bytes @ 0x2
  5016                           
  5017  0072                     ??_TMR1_WriteTimer:	
  5018                           ; 1 bytes @ 0x2
  5019                           
  5020  0072                     ___awdiv@dividend:	
  5021                           ; 1 bytes @ 0x2
  5022                           
  5023                           
  5024                           ; 2 bytes @ 0x2
  5025  0072                     	ds	1
  5026  0073                     ADC_GetConversion@channel:	
  5027                           
  5028                           ; 1 bytes @ 0x3
  5029  0073                     	ds	1
  5030  0074                     ??___awdiv:	
  5031  0074                     __Umul8_16@product:	
  5032                           ; 1 bytes @ 0x4
  5033                           
  5034  0074                     ___aldiv@dividend:	
  5035                           ; 2 bytes @ 0x4
  5036                           
  5037  0074                     ___fladd@a:	
  5038                           ; 4 bytes @ 0x4
  5039                           
  5040  0074                     ___fldiv@b:	
  5041                           ; 4 bytes @ 0x4
  5042                           
  5043                           
  5044                           ; 4 bytes @ 0x4
  5045  0074                     	ds	1
  5046  0075                     ___awdiv@counter:	
  5047                           
  5048                           ; 1 bytes @ 0x5
  5049  0075                     	ds	1
  5050  0076                     ___awdiv@sign:	
  5051  0076                     __Umul8_16@word_mpld:	
  5052                           ; 1 bytes @ 0x6
  5053                           
  5054                           
  5055                           ; 2 bytes @ 0x6
  5056  0076                     	ds	1
  5057  0077                     ___awdiv@quotient:	
  5058                           
  5059                           ; 2 bytes @ 0x7
  5060  0077                     	ds	1
  5061  0078                     ??___aldiv:	
  5062  0078                     ??___fldiv:	
  5063                           ; 1 bytes @ 0x8
  5064                           
  5065  0078                     ___fladd@signs:	
  5066                           ; 1 bytes @ 0x8
  5067                           
  5068  0078                     __Umul8_16@multiplier:	
  5069                           ; 1 bytes @ 0x8
  5070                           
  5071                           
  5072                           ; 1 bytes @ 0x8
  5073  0078                     	ds	1
  5074  0079                     ?___wmul:	
  5075  0079                     ___fladd@aexp:	
  5076                           ; 2 bytes @ 0x9
  5077                           
  5078  0079                     ___wmul@multiplier:	
  5079                           ; 1 bytes @ 0x9
  5080                           
  5081                           
  5082                           ; 2 bytes @ 0x9
  5083  0079                     	ds	1
  5084  007A                     ___fladd@bexp:	
  5085                           
  5086                           ; 1 bytes @ 0xA
  5087  007A                     	ds	1
  5088  007B                     ___fladd@grs:	
  5089  007B                     ___wmul@multiplicand:	
  5090                           ; 1 bytes @ 0xB
  5091                           
  5092                           
  5093                           ; 2 bytes @ 0xB
  5094  007B                     	ds	1
  5095  007C                     ??_timerISR:	
  5096  007C                     ??_TMR0_ISR:	
  5097                           ; 1 bytes @ 0xC
  5098                           
  5099                           
  5100                           ; 1 bytes @ 0xC
  5101  007C                     	ds	1
  5102  007D                     ??_TMR1_ISR:	
  5103  007D                     ??___wmul:	
  5104                           ; 1 bytes @ 0xD
  5105                           
  5106  007D                     ??___awmod:	
  5107                           ; 1 bytes @ 0xD
  5108                           
  5109                           
  5110                           ; 1 bytes @ 0xD
  5111  007D                     	ds	1
  5112  007E                     ??_IOCCF7_ISR:	
  5113  007E                     ??_speedCalc:	
  5114                           ; 1 bytes @ 0xE
  5115                           
  5116  007E                     ??_PIN_MANAGER_IOC:	
  5117                           ; 1 bytes @ 0xE
  5118                           
  5119  007E                     ??_INTERRUPT_InterruptManager:	
  5120                           ; 1 bytes @ 0xE
  5121                           
  5122                           
  5123                           	psect	cstackBANK0
  5124  0020                     __pcstackBANK0:	
  5125                           ; 1 bytes @ 0xE
  5126                           
  5127  0020                     ??___fladd:	
  5128  0020                     ___aldiv@counter:	
  5129                           ; 1 bytes @ 0x0
  5130                           
  5131  0020                     ___wmul@product:	
  5132                           ; 1 bytes @ 0x0
  5133                           
  5134  0020                     ___fldiv@rem:	
  5135                           ; 2 bytes @ 0x0
  5136                           
  5137                           
  5138                           ; 4 bytes @ 0x0
  5139  0020                     	ds	1
  5140  0021                     ___aldiv@sign:	
  5141                           
  5142                           ; 1 bytes @ 0x1
  5143  0021                     	ds	1
  5144  0022                     ___aldiv@quotient:	
  5145                           
  5146                           ; 4 bytes @ 0x2
  5147  0022                     	ds	2
  5148  0024                     ___fldiv@sign:	
  5149                           
  5150                           ; 1 bytes @ 0x4
  5151  0024                     	ds	1
  5152  0025                     ___fldiv@new_exp:	
  5153                           
  5154                           ; 2 bytes @ 0x5
  5155  0025                     	ds	1
  5156  0026                     ??_heartRateISR:	
  5157                           
  5158                           ; 1 bytes @ 0x6
  5159  0026                     	ds	1
  5160  0027                     ___fldiv@grs:	
  5161                           
  5162                           ; 4 bytes @ 0x7
  5163  0027                     	ds	1
  5164  0028                     heartRateISR@runningTotal:	
  5165                           
  5166                           ; 2 bytes @ 0x8
  5167  0028                     	ds	2
  5168  002A                     heartRateISR@i:	
  5169                           
  5170                           ; 2 bytes @ 0xA
  5171  002A                     	ds	1
  5172  002B                     ___fldiv@bexp:	
  5173                           
  5174                           ; 1 bytes @ 0xB
  5175  002B                     	ds	1
  5176  002C                     ___fldiv@aexp:	
  5177  002C                     heartRateISR@N:	
  5178                           ; 1 bytes @ 0xC
  5179                           
  5180                           
  5181                           ; 2 bytes @ 0xC
  5182  002C                     	ds	1
  5183  002D                     ?___flmul:	
  5184  002D                     ___flmul@b:	
  5185                           ; 4 bytes @ 0xD
  5186                           
  5187                           
  5188                           ; 4 bytes @ 0xD
  5189  002D                     	ds	1
  5190  002E                     heartRateISR@i_743:	
  5191                           
  5192                           ; 2 bytes @ 0xE
  5193  002E                     	ds	3
  5194  0031                     ___flmul@a:	
  5195                           
  5196                           ; 4 bytes @ 0x11
  5197  0031                     	ds	4
  5198  0035                     ??___flmul:	
  5199                           
  5200                           ; 1 bytes @ 0x15
  5201  0035                     	ds	5
  5202  003A                     ___flmul@sign:	
  5203                           
  5204                           ; 1 bytes @ 0x1A
  5205  003A                     	ds	1
  5206  003B                     ___flmul@grs:	
  5207                           
  5208                           ; 4 bytes @ 0x1B
  5209  003B                     	ds	4
  5210  003F                     ___flmul@aexp:	
  5211                           
  5212                           ; 1 bytes @ 0x1F
  5213  003F                     	ds	1
  5214  0040                     ___flmul@bexp:	
  5215                           
  5216                           ; 1 bytes @ 0x20
  5217  0040                     	ds	1
  5218  0041                     ___flmul@prod:	
  5219                           
  5220                           ; 4 bytes @ 0x21
  5221  0041                     	ds	4
  5222  0045                     ___flmul@temp:	
  5223                           
  5224                           ; 2 bytes @ 0x25
  5225  0045                     	ds	2
  5226  0047                     ?___fltol:	
  5227  0047                     ___fltol@f1:	
  5228                           ; 4 bytes @ 0x27
  5229                           
  5230                           
  5231                           ; 4 bytes @ 0x27
  5232  0047                     	ds	4
  5233  004B                     ??___fltol:	
  5234                           
  5235                           ; 1 bytes @ 0x2B
  5236  004B                     	ds	5
  5237  0050                     ___fltol@sign1:	
  5238                           
  5239                           ; 1 bytes @ 0x30
  5240  0050                     	ds	1
  5241  0051                     ___fltol@exp1:	
  5242                           
  5243                           ; 1 bytes @ 0x31
  5244  0051                     	ds	1
  5245  0052                     ?___awmod:	
  5246  0052                     ___awmod@divisor:	
  5247                           ; 2 bytes @ 0x32
  5248                           
  5249                           
  5250                           ; 2 bytes @ 0x32
  5251  0052                     	ds	2
  5252  0054                     ___awmod@dividend:	
  5253                           
  5254                           ; 2 bytes @ 0x34
  5255  0054                     	ds	2
  5256  0056                     ___awmod@counter:	
  5257                           
  5258                           ; 1 bytes @ 0x36
  5259  0056                     	ds	1
  5260  0057                     ___awmod@sign:	
  5261                           
  5262                           ; 1 bytes @ 0x37
  5263  0057                     	ds	1
  5264  0058                     _speedCalc$1531:	
  5265                           
  5266                           ; 4 bytes @ 0x38
  5267  0058                     	ds	4
  5268                           
  5269                           	psect	maintext
  5270  0A30                     __pmaintext:	
  5271 ;;
  5272 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  5273 ;;
  5274 ;; *************** function _main *****************
  5275 ;; Defined at:
  5276 ;;		line 52 in file "main.c"
  5277 ;; Parameters:    Size  Location     Type
  5278 ;;		None
  5279 ;; Auto vars:     Size  Location     Type
  5280 ;;		None
  5281 ;; Return value:  Size  Location     Type
  5282 ;;                  1    wreg      void 
  5283 ;; Registers used:
  5284 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5285 ;; Tracked objects:
  5286 ;;		On entry : B1F/0
  5287 ;;		On exit  : 0/0
  5288 ;;		Unchanged: 0/0
  5289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5292 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  5293 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  5294 ;;Total ram usage:        2 bytes
  5295 ;; Hardware stack levels required when called:   15
  5296 ;; This function calls:
  5297 ;;		_IOCCF7_SetInterruptHandler
  5298 ;;		_SYSTEM_Initialize
  5299 ;;		_TMR0_SetInterruptHandler
  5300 ;;		_TMR1_SetInterruptHandler
  5301 ;;		___flge
  5302 ;;		_printf
  5303 ;;		_resetCursor
  5304 ;;		_setCursor
  5305 ;;		_writeString
  5306 ;; This function is called by:
  5307 ;;		Startup code after reset
  5308 ;; This function uses a non-reentrant model
  5309 ;;
  5310                           
  5311                           
  5312                           ;psect for function _main
  5313  0A30                     _main:	
  5314                           
  5315                           ;main.c: 55:     SYSTEM_Initialize();
  5316                           
  5317                           ;incstack = 0
  5318                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5319  0A30  3195  2574  318A   	fcall	_SYSTEM_Initialize
  5320                           
  5321                           ;main.c: 57:     TMR0_SetInterruptHandler( timerISR ) ;
  5322  0A33  305E               	movlw	low _timerISR
  5323  0A34  0021               	movlb	1	; select bank1
  5324  0A35  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler^(0+128)
  5325  0A36  3016               	movlw	high _timerISR
  5326  0A37  00A1               	movwf	(TMR0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  5327  0A38  3195  251E  318A   	fcall	_TMR0_SetInterruptHandler
  5328                           
  5329                           ;main.c: 58:     TMR1_SetInterruptHandler( heartRateISR ) ;
  5330  0A3B  307E               	movlw	low _heartRateISR
  5331  0A3C  0021               	movlb	1	; select bank1
  5332  0A3D  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler^(0+128)
  5333  0A3E  3004               	movlw	high _heartRateISR
  5334  0A3F  00A1               	movwf	(TMR1_SetInterruptHandler@InterruptHandler^(0+128)+1)
  5335  0A40  3195  2527  318A   	fcall	_TMR1_SetInterruptHandler
  5336                           
  5337                           ;main.c: 59:     IOCCF7_SetInterruptHandler( speedCalc ) ;
  5338  0A43  30A3               	movlw	low _speedCalc
  5339  0A44  0021               	movlb	1	; select bank1
  5340  0A45  00A0               	movwf	IOCCF7_SetInterruptHandler@InterruptHandler^(0+128)
  5341  0A46  300D               	movlw	high _speedCalc
  5342  0A47  00A1               	movwf	(IOCCF7_SetInterruptHandler@InterruptHandler^(0+128)+1)
  5343  0A48  3195  2515  318A   	fcall	_IOCCF7_SetInterruptHandler
  5344                           
  5345                           ;main.c: 62:     _delay((unsigned long)((2000)*(16000000/4000.0))) ;
  5346  0A4B  3029               	movlw	41
  5347  0A4C  0022               	movlb	2	; select bank2
  5348  0A4D  00E6               	movwf	(??_main^(0+256)+1)
  5349  0A4E  3096               	movlw	150
  5350  0A4F  00E5               	movwf	??_main^(0+256)
  5351  0A50  307F               	movlw	127
  5352  0A51                     u4957:	
  5353  0A51  0B89               	decfsz	9,f
  5354  0A52  2A51               	goto	u4957
  5355  0A53  0BE5               	decfsz	??_main^(0+256),f
  5356  0A54  2A51               	goto	u4957
  5357  0A55  0BE6               	decfsz	(??_main^(0+256)+1),f
  5358  0A56  2A51               	goto	u4957
  5359                           
  5360                           ;main.c: 64:     resetCursor() ;
  5361  0A57  3194  24F2  318A   	fcall	_resetCursor
  5362                           
  5363                           ;main.c: 66:     (INTCONbits.GIE = 1);
  5364  0A5A  178B               	bsf	11,7	;volatile
  5365                           
  5366                           ;main.c: 67:     (INTCONbits.PEIE = 1);
  5367  0A5B  170B               	bsf	11,6	;volatile
  5368  0A5C                     l3959:	
  5369                           
  5370                           ;main.c: 73:         setCursor(1,0) ;
  5371  0A5C  0021               	movlb	1	; select bank1
  5372  0A5D  01A1               	clrf	setCursor@b^(0+128)
  5373  0A5E  3001               	movlw	1
  5374  0A5F  3197  273D  318A   	fcall	_setCursor
  5375                           
  5376                           ;main.c: 74:         writeString(speedDisp);
  5377  0A62  30B8               	movlw	(low (_speedDisp| (0+256)))& (0+255)
  5378  0A63  3195  25B0  318A   	fcall	_writeString
  5379                           
  5380                           ;main.c: 75:         setCursor(2,0) ;
  5381  0A66  0021               	movlb	1	; select bank1
  5382  0A67  01A1               	clrf	setCursor@b^(0+128)
  5383  0A68  3002               	movlw	2
  5384  0A69  3197  273D  318A   	fcall	_setCursor
  5385                           
  5386                           ;main.c: 76:         writeString(distanceDisp);
  5387  0A6C  30AD               	movlw	(low (_distanceDisp| (0+256)))& (0+255)
  5388  0A6D  3195  25B0  318A   	fcall	_writeString
  5389                           
  5390                           ;main.c: 77:         setCursor(3,0) ;
  5391  0A70  0021               	movlb	1	; select bank1
  5392  0A71  01A1               	clrf	setCursor@b^(0+128)
  5393  0A72  3003               	movlw	3
  5394  0A73  3197  273D  318A   	fcall	_setCursor
  5395                           
  5396                           ;main.c: 78:         writeString(hrDisp);
  5397  0A76  30A0               	movlw	(low (_hrDisp| (0+256)))& (0+255)
  5398  0A77  3195  25B0  318A   	fcall	_writeString
  5399                           
  5400                           ;main.c: 79:         setCursor(4,0) ;
  5401  0A7A  0021               	movlb	1	; select bank1
  5402  0A7B  01A1               	clrf	setCursor@b^(0+128)
  5403  0A7C  3004               	movlw	4
  5404  0A7D  3197  273D  318A   	fcall	_setCursor
  5405                           
  5406                           ;main.c: 82:         setCursor(1,7) ;
  5407  0A80  3007               	movlw	7
  5408  0A81  0022               	movlb	2	; select bank2
  5409  0A82  00E5               	movwf	??_main^(0+256)
  5410  0A83  0865               	movf	??_main^(0+256),w
  5411  0A84  0021               	movlb	1	; select bank1
  5412  0A85  00A1               	movwf	setCursor@b^(0+128)
  5413  0A86  3001               	movlw	1
  5414  0A87  3197  273D  318A   	fcall	_setCursor
  5415                           
  5416                           ;main.c: 83:         if( counter <= 15000 ) {
  5417  0A8A  3046               	movlw	70
  5418  0A8B  0021               	movlb	1	; select bank1
  5419  0A8C  00A3               	movwf	(___flge@ff1+3)^(0+128)
  5420  0A8D  306A               	movlw	106
  5421  0A8E  00A2               	movwf	(___flge@ff1+2)^(0+128)
  5422  0A8F  3060               	movlw	96
  5423  0A90  00A1               	movwf	(___flge@ff1+1)^(0+128)
  5424  0A91  3000               	movlw	0
  5425  0A92  00A0               	movwf	___flge@ff1^(0+128)
  5426  0A93  0022               	movlb	2	; select bank2
  5427  0A94  0849               	movf	(_counter+3)^(0+256),w	;volatile
  5428  0A95  0021               	movlb	1	; select bank1
  5429  0A96  00A7               	movwf	(___flge@ff2+3)^(0+128)
  5430  0A97  0022               	movlb	2	; select bank2
  5431  0A98  0848               	movf	(_counter+2)^(0+256),w	;volatile
  5432  0A99  0021               	movlb	1	; select bank1
  5433  0A9A  00A6               	movwf	(___flge@ff2+2)^(0+128)
  5434  0A9B  0022               	movlb	2	; select bank2
  5435  0A9C  0847               	movf	(_counter+1)^(0+256),w	;volatile
  5436  0A9D  0021               	movlb	1	; select bank1
  5437  0A9E  00A5               	movwf	(___flge@ff2+1)^(0+128)
  5438  0A9F  0022               	movlb	2	; select bank2
  5439  0AA0  0846               	movf	_counter^(0+256),w	;volatile
  5440  0AA1  0021               	movlb	1	; select bank1
  5441  0AA2  00A4               	movwf	___flge@ff2^(0+128)
  5442  0AA3  3189  2132  318A   	fcall	___flge
  5443  0AA6  1C03               	btfss	3,0
  5444  0AA7  2AB6               	goto	l3979
  5445                           
  5446                           ;main.c: 84:             printf( "%d.%d kph     ", speedHi, speedLo ) ;
  5447  0AA8  3000               	movlw	low (STR_1| (0+32768))
  5448  0AA9  0022               	movlb	2	; select bank2
  5449  0AAA  00DC               	movwf	printf@fmt^(0+256)
  5450  0AAB  3098               	movlw	high (STR_1| (0+32768))
  5451  0AAC  00DD               	movwf	(printf@fmt^(0+256)+1)
  5452  0AAD  083B               	movf	(_speedHi+1)^(0+256),w	;volatile
  5453  0AAE  00DF               	movwf	((?_printf+1)^(0+256)+2)
  5454  0AAF  083A               	movf	_speedHi^(0+256),w	;volatile
  5455  0AB0  00DE               	movwf	(?_printf^(0+256)+2)
  5456  0AB1  083D               	movf	(_speedLo+1)^(0+256),w	;volatile
  5457  0AB2  00E1               	movwf	((?_printf+1)^(0+256)+4)
  5458  0AB3  083C               	movf	_speedLo^(0+256),w	;volatile
  5459  0AB4  00E0               	movwf	(?_printf^(0+256)+4)
  5460  0AB5  2ABB               	goto	L1
  5461  0AB6                     l3979:	
  5462                           ;main.c: 85:         }
  5463                           
  5464                           
  5465                           ;main.c: 87:             printf( "0 kph        " ) ;
  5466  0AB6  300F               	movlw	low (STR_2| (0+32768))
  5467  0AB7  0022               	movlb	2	; select bank2
  5468  0AB8  00DC               	movwf	printf@fmt^(0+256)
  5469  0AB9  3098               	movlw	high (STR_2| (0+32768))
  5470  0ABA  00DD               	movwf	(printf@fmt^(0+256)+1)
  5471  0ABB                     L1:	
  5472  0ABB  3195  259B  318A   	fcall	_printf
  5473                           
  5474                           ;main.c: 91:         setCursor(2,10) ;
  5475  0ABE  300A               	movlw	10
  5476  0ABF  0022               	movlb	2	; select bank2
  5477  0AC0  00E5               	movwf	??_main^(0+256)
  5478  0AC1  0865               	movf	??_main^(0+256),w
  5479  0AC2  0021               	movlb	1	; select bank1
  5480  0AC3  00A1               	movwf	setCursor@b^(0+128)
  5481  0AC4  3002               	movlw	2
  5482  0AC5  3197  273D  318A   	fcall	_setCursor
  5483                           
  5484                           ;main.c: 92:         printf( "%d.%d km" , distHi, distLo );
  5485  0AC8  3027               	movlw	low (STR_3| (0+32768))
  5486  0AC9  0022               	movlb	2	; select bank2
  5487  0ACA  00DC               	movwf	printf@fmt^(0+256)
  5488  0ACB  3098               	movlw	high (STR_3| (0+32768))
  5489  0ACC  00DD               	movwf	(printf@fmt^(0+256)+1)
  5490  0ACD  0841               	movf	(_distHi+1)^(0+256),w	;volatile
  5491  0ACE  00DF               	movwf	((?_printf+1)^(0+256)+2)
  5492  0ACF  0840               	movf	_distHi^(0+256),w	;volatile
  5493  0AD0  00DE               	movwf	(?_printf^(0+256)+2)
  5494  0AD1  083F               	movf	(_distLo+1)^(0+256),w	;volatile
  5495  0AD2  00E1               	movwf	((?_printf+1)^(0+256)+4)
  5496  0AD3  083E               	movf	_distLo^(0+256),w	;volatile
  5497  0AD4  00E0               	movwf	(?_printf^(0+256)+4)
  5498  0AD5  3195  259B  318A   	fcall	_printf
  5499                           
  5500                           ;main.c: 95:         setCursor(3,13) ;
  5501  0AD8  300D               	movlw	13
  5502  0AD9  0022               	movlb	2	; select bank2
  5503  0ADA  00E5               	movwf	??_main^(0+256)
  5504  0ADB  0865               	movf	??_main^(0+256),w
  5505  0ADC  0021               	movlb	1	; select bank1
  5506  0ADD  00A1               	movwf	setCursor@b^(0+128)
  5507  0ADE  3003               	movlw	3
  5508  0ADF  3197  273D  318A   	fcall	_setCursor
  5509                           
  5510                           ;main.c: 96:         printf( "%d bpm   " , BPM ) ;
  5511  0AE2  301D               	movlw	low (STR_4| (0+32768))
  5512  0AE3  0022               	movlb	2	; select bank2
  5513  0AE4  00DC               	movwf	printf@fmt^(0+256)
  5514  0AE5  3098               	movlw	high (STR_4| (0+32768))
  5515  0AE6  00DD               	movwf	(printf@fmt^(0+256)+1)
  5516  0AE7  0837               	movf	(_BPM+1)^(0+256),w	;volatile
  5517  0AE8  00DF               	movwf	((?_printf+1)^(0+256)+2)
  5518  0AE9  0836               	movf	_BPM^(0+256),w	;volatile
  5519  0AEA  00DE               	movwf	(?_printf^(0+256)+2)
  5520  0AEB  3195  259B  318A   	fcall	_printf
  5521  0AEE  2A5C               	goto	l3959
  5522  0AEF                     __end_of_main:	
  5523                           
  5524                           	psect	text1
  5525  15B0                     __ptext1:	
  5526 ;; *************** function _writeString *****************
  5527 ;; Defined at:
  5528 ;;		line 11 in file "displayOptions.c"
  5529 ;; Parameters:    Size  Location     Type
  5530 ;;  string          1    wreg     PTR unsigned char 
  5531 ;;		 -> hrDisp(13), distanceDisp(11), speedDisp(8), 
  5532 ;; Auto vars:     Size  Location     Type
  5533 ;;  string          1   24[BANK1 ] PTR unsigned char 
  5534 ;;		 -> hrDisp(13), distanceDisp(11), speedDisp(8), 
  5535 ;; Return value:  Size  Location     Type
  5536 ;;                  1    wreg      void 
  5537 ;; Registers used:
  5538 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5539 ;; Tracked objects:
  5540 ;;		On entry : 0/0
  5541 ;;		On exit  : 0/0
  5542 ;;		Unchanged: 0/0
  5543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5545 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5547 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5548 ;;Total ram usage:        1 bytes
  5549 ;; Hardware stack levels used:    1
  5550 ;; Hardware stack levels required when called:   11
  5551 ;; This function calls:
  5552 ;;		_EUSART_is_tx_ready
  5553 ;;		_puts
  5554 ;; This function is called by:
  5555 ;;		_main
  5556 ;; This function uses a non-reentrant model
  5557 ;;
  5558                           
  5559                           
  5560                           ;psect for function _writeString
  5561  15B0                     _writeString:	
  5562                           
  5563                           ;incstack = 0
  5564                           ; Regs used in _writeString: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5565                           ;writeString@string stored from wreg
  5566  15B0  0021               	movlb	1	; select bank1
  5567  15B1  00B8               	movwf	writeString@string^(0+128)
  5568  15B2                     l3863:	
  5569                           ;displayOptions.c: 12:     while( !EUSART_is_tx_ready() ) ;
  5570                           
  5571  15B2  3195  2547  3195   	fcall	_EUSART_is_tx_ready
  5572  15B5  3A00               	xorlw	0
  5573  15B6  1903               	skipnz
  5574  15B7  2DB2               	goto	l3863
  5575                           
  5576                           ;displayOptions.c: 13:     puts( string );
  5577  15B8  0021               	movlb	1	; select bank1
  5578  15B9  0838               	movf	writeString@string^(0+128),w
  5579  15BA  00B3               	movwf	puts@s^(0+128)
  5580  15BB  3001               	movlw	1
  5581  15BC  00B4               	movwf	(puts@s+1)^(0+128)
  5582  15BD  3196  2643  3195   	fcall	_puts
  5583                           
  5584                           ;displayOptions.c: 14:     _delay((unsigned long)((200)*(16000000/4000000.0)));
  5585  15C0  30A0               	movlw	160
  5586  15C1                     u4967:	
  5587  15C1  3200               	nop2
  5588  15C2  0B89               	decfsz	9,f
  5589  15C3  2DC1               	goto	u4967
  5590  15C4  0008               	return
  5591  15C5                     __end_of_writeString:	
  5592                           
  5593                           	psect	text2
  5594  173D                     __ptext2:	
  5595 ;; *************** function _setCursor *****************
  5596 ;; Defined at:
  5597 ;;		line 17 in file "displayOptions.c"
  5598 ;; Parameters:    Size  Location     Type
  5599 ;;  a               1    wreg     unsigned char 
  5600 ;;  b               1    1[BANK1 ] unsigned char 
  5601 ;; Auto vars:     Size  Location     Type
  5602 ;;  a               1    4[BANK1 ] unsigned char 
  5603 ;; Return value:  Size  Location     Type
  5604 ;;                  1    wreg      void 
  5605 ;; Registers used:
  5606 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5607 ;; Tracked objects:
  5608 ;;		On entry : 0/0
  5609 ;;		On exit  : 0/0
  5610 ;;		Unchanged: 0/0
  5611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5612 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5613 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5614 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5615 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5616 ;;Total ram usage:        4 bytes
  5617 ;; Hardware stack levels used:    1
  5618 ;; Hardware stack levels required when called:    7
  5619 ;; This function calls:
  5620 ;;		_EUSART_Write
  5621 ;;		_EUSART_is_tx_ready
  5622 ;; This function is called by:
  5623 ;;		_main
  5624 ;; This function uses a non-reentrant model
  5625 ;;
  5626                           
  5627                           
  5628                           ;psect for function _setCursor
  5629  173D                     _setCursor:	
  5630                           
  5631                           ;incstack = 0
  5632                           ; Regs used in _setCursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5633                           ;setCursor@a stored from wreg
  5634  173D  0021               	movlb	1	; select bank1
  5635  173E  00A4               	movwf	setCursor@a^(0+128)
  5636  173F                     l3837:	
  5637                           ;displayOptions.c: 18:     while( !EUSART_is_tx_ready() ) ;
  5638                           
  5639  173F  3195  2547  3197   	fcall	_EUSART_is_tx_ready
  5640  1742  3A00               	xorlw	0
  5641  1743  1903               	skipnz
  5642  1744  2F3F               	goto	l3837
  5643                           
  5644                           ;displayOptions.c: 19:     EUSART_Write( 254 );
  5645  1745  30FE               	movlw	254
  5646  1746  3195  2530  3197   	fcall	_EUSART_Write
  5647                           
  5648                           ;displayOptions.c: 20:     _delay((unsigned long)((200)*(16000000/4000000.0)));
  5649  1749  30A0               	movlw	160
  5650  174A                     u4977:	
  5651  174A  3200               	nop2
  5652  174B  0B89               	decfsz	9,f
  5653  174C  2F4A               	goto	u4977
  5654                           
  5655                           ;displayOptions.c: 21:     switch ( a ){
  5656  174D  2F62               	goto	l3853
  5657  174E                     l3843:	
  5658                           
  5659                           ;displayOptions.c: 23:         {;displayOptions.c: 24:             EUSART_Write(128 + 0 
      +                          + b) ;
  5660  174E  0821               	movf	setCursor@b^(0+128),w
  5661  174F  3E80               	addlw	128
  5662  1750  3195  2530         	fcall	_EUSART_Write
  5663                           
  5664                           ;displayOptions.c: 25:             break ;
  5665  1752  0008               	return
  5666  1753                     l3845:	
  5667                           
  5668                           ;displayOptions.c: 28:         {;displayOptions.c: 29:            EUSART_Write(128 + 64 
      +                          + b) ;
  5669  1753  0821               	movf	setCursor@b^(0+128),w
  5670  1754  3EC0               	addlw	192
  5671  1755  3195  2530         	fcall	_EUSART_Write
  5672                           
  5673                           ;displayOptions.c: 30:            break ;
  5674  1757  0008               	return
  5675  1758                     l3847:	
  5676                           
  5677                           ;displayOptions.c: 33:         {;displayOptions.c: 34:             EUSART_Write(128 + 20
      +                           + b) ;
  5678  1758  0821               	movf	setCursor@b^(0+128),w
  5679  1759  3E94               	addlw	148
  5680  175A  3195  2530         	fcall	_EUSART_Write
  5681                           
  5682                           ;displayOptions.c: 35:             break ;
  5683  175C  0008               	return
  5684  175D                     l3849:	
  5685                           
  5686                           ;displayOptions.c: 38:         {;displayOptions.c: 39:             EUSART_Write(128 + 84
      +                           + b) ;
  5687  175D  0821               	movf	setCursor@b^(0+128),w
  5688  175E  3ED4               	addlw	212
  5689  175F  3195  2530         	fcall	_EUSART_Write
  5690                           
  5691                           ;displayOptions.c: 40:             break ;
  5692  1761  0008               	return
  5693  1762                     l3853:	
  5694  1762  0021               	movlb	1	; select bank1
  5695  1763  0824               	movf	setCursor@a^(0+128),w
  5696  1764  00A2               	movwf	??_setCursor^(0+128)
  5697  1765  01A3               	clrf	(??_setCursor^(0+128)+1)
  5698                           
  5699                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5700                           ; Switch size 1, requested type "simple"
  5701                           ; Number of cases is 1, Range of values is 0 to 0
  5702                           ; switch strategies available:
  5703                           ; Name         Instructions Cycles
  5704                           ; simple_byte            4     3 (average)
  5705                           ; direct_byte            8     6 (fixed)
  5706                           ; jumptable            260     6 (fixed)
  5707                           ;	Chosen strategy is simple_byte
  5708  1766  0823               	movf	(??_setCursor+1)^(0+128),w
  5709  1767  3A00               	xorlw	0	; case 0
  5710  1768  1903               	skipnz
  5711  1769  2F6B               	goto	l4023
  5712  176A  2F79               	goto	l434
  5713  176B                     l4023:	
  5714                           
  5715                           ; Switch size 1, requested type "simple"
  5716                           ; Number of cases is 4, Range of values is 1 to 4
  5717                           ; switch strategies available:
  5718                           ; Name         Instructions Cycles
  5719                           ; simple_byte           13     7 (average)
  5720                           ; direct_byte           17     9 (fixed)
  5721                           ; jumptable            263     9 (fixed)
  5722                           ;	Chosen strategy is simple_byte
  5723  176B  0822               	movf	??_setCursor^(0+128),w
  5724  176C  3A01               	xorlw	1	; case 1
  5725  176D  1903               	skipnz
  5726  176E  2F4E               	goto	l3843
  5727  176F  3A03               	xorlw	3	; case 2
  5728  1770  1903               	skipnz
  5729  1771  2F53               	goto	l3845
  5730  1772  3A01               	xorlw	1	; case 3
  5731  1773  1903               	skipnz
  5732  1774  2F58               	goto	l3847
  5733  1775  3A07               	xorlw	7	; case 4
  5734  1776  1903               	skipnz
  5735  1777  2F5D               	goto	l3849
  5736  1778  2F79               	goto	l434
  5737  1779                     l434:	
  5738  1779  0008               	return
  5739  177A                     __end_of_setCursor:	
  5740                           
  5741                           	psect	text3
  5742  1547                     __ptext3:	
  5743 ;; *************** function _EUSART_is_tx_ready *****************
  5744 ;; Defined at:
  5745 ;;		line 93 in file "mcc_generated_files/eusart.c"
  5746 ;; Parameters:    Size  Location     Type
  5747 ;;		None
  5748 ;; Auto vars:     Size  Location     Type
  5749 ;;		None
  5750 ;; Return value:  Size  Location     Type
  5751 ;;                  1    wreg      _Bool 
  5752 ;; Registers used:
  5753 ;;		wreg, status,2
  5754 ;; Tracked objects:
  5755 ;;		On entry : 0/0
  5756 ;;		On exit  : 0/0
  5757 ;;		Unchanged: 0/0
  5758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5760 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5762 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5763 ;;Total ram usage:        1 bytes
  5764 ;; Hardware stack levels used:    1
  5765 ;; Hardware stack levels required when called:    6
  5766 ;; This function calls:
  5767 ;;		Nothing
  5768 ;; This function is called by:
  5769 ;;		_writeString
  5770 ;;		_setCursor
  5771 ;;		_backlightBrightness
  5772 ;; This function uses a non-reentrant model
  5773 ;;
  5774                           
  5775                           
  5776                           ;psect for function _EUSART_is_tx_ready
  5777  1547                     _EUSART_is_tx_ready:	
  5778                           
  5779                           ;mcc_generated_files/eusart.c: 95:     return (_Bool)(PIR1bits.TXIF && TX1STAbits.TXEN);
  5780                           
  5781                           ;incstack = 0
  5782                           ; Regs used in _EUSART_is_tx_ready: [wreg+status,2]
  5783  1547  0021               	movlb	1	; select bank1
  5784  1548  01A0               	clrf	_EUSART_is_tx_ready$167^(0+128)
  5785  1549  0020               	movlb	0	; select bank0
  5786  154A  1E10               	btfss	16,4	;volatile
  5787  154B  2D52               	goto	l3571
  5788  154C  0023               	movlb	3	; select bank3
  5789  154D  1E9E               	btfss	30,5	;volatile
  5790  154E  2D52               	goto	l3571
  5791  154F  0021               	movlb	1	; select bank1
  5792  1550  01A0               	clrf	_EUSART_is_tx_ready$167^(0+128)
  5793  1551  0AA0               	incf	_EUSART_is_tx_ready$167^(0+128),f
  5794  1552                     l3571:	
  5795  1552  0021               	movlb	1	; select bank1
  5796  1553  0820               	movf	_EUSART_is_tx_ready$167^(0+128),w
  5797  1554  0008               	return
  5798  1555                     __end_of_EUSART_is_tx_ready:	
  5799                           
  5800                           	psect	text4
  5801  14F2                     __ptext4:	
  5802 ;; *************** function _resetCursor *****************
  5803 ;; Defined at:
  5804 ;;		line 91 in file "displayOptions.c"
  5805 ;; Parameters:    Size  Location     Type
  5806 ;;		None
  5807 ;; Auto vars:     Size  Location     Type
  5808 ;;		None
  5809 ;; Return value:  Size  Location     Type
  5810 ;;                  1    wreg      void 
  5811 ;; Registers used:
  5812 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5813 ;; Tracked objects:
  5814 ;;		On entry : 0/0
  5815 ;;		On exit  : 0/0
  5816 ;;		Unchanged: 0/0
  5817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5821 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5822 ;;Total ram usage:        0 bytes
  5823 ;; Hardware stack levels used:    1
  5824 ;; Hardware stack levels required when called:   11
  5825 ;; This function calls:
  5826 ;;		_puts
  5827 ;; This function is called by:
  5828 ;;		_main
  5829 ;; This function uses a non-reentrant model
  5830 ;;
  5831                           
  5832                           
  5833                           ;psect for function _resetCursor
  5834  14F2                     _resetCursor:	
  5835                           
  5836                           ;displayOptions.c: 92:     puts("|-");
  5837                           
  5838                           ;incstack = 0
  5839                           ; Regs used in _resetCursor: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5840  14F2  3030               	movlw	low (STR_5| (0+32768))
  5841  14F3  0021               	movlb	1	; select bank1
  5842  14F4  00B3               	movwf	puts@s^(0+128)
  5843  14F5  3098               	movlw	high (STR_5| (0+32768))
  5844  14F6  00B4               	movwf	(puts@s^(0+128)+1)
  5845  14F7  3196  2643         	fcall	_puts
  5846  14F9  0008               	return
  5847  14FA                     __end_of_resetCursor:	
  5848                           
  5849                           	psect	text5
  5850  1643                     __ptext5:	
  5851 ;; *************** function _puts *****************
  5852 ;; Defined at:
  5853 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\puts.c"
  5854 ;; Parameters:    Size  Location     Type
  5855 ;;  s               2   19[BANK1 ] PTR const unsigned char 
  5856 ;;		 -> STR_5(3), hrDisp(13), distanceDisp(11), speedDisp(8), 
  5857 ;; Auto vars:     Size  Location     Type
  5858 ;;  r               2    0        int 
  5859 ;; Return value:  Size  Location     Type
  5860 ;;                  2   19[BANK1 ] int 
  5861 ;; Registers used:
  5862 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5863 ;; Tracked objects:
  5864 ;;		On entry : 0/0
  5865 ;;		On exit  : 0/0
  5866 ;;		Unchanged: 0/0
  5867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5868 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5869 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5871 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  5872 ;;Total ram usage:        5 bytes
  5873 ;; Hardware stack levels used:    1
  5874 ;; Hardware stack levels required when called:   10
  5875 ;; This function calls:
  5876 ;;		_fputc
  5877 ;;		_fputs
  5878 ;; This function is called by:
  5879 ;;		_writeString
  5880 ;;		_resetCursor
  5881 ;; This function uses a non-reentrant model
  5882 ;;
  5883                           
  5884                           
  5885                           ;psect for function _puts
  5886  1643                     _puts:	
  5887                           
  5888                           ;incstack = 0
  5889                           ; Regs used in _puts: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5890  1643  0021               	movlb	1	; select bank1
  5891  1644  01B7               	clrf	_puts$1319^(0+128)
  5892  1645  0AB7               	incf	_puts$1319^(0+128),f
  5893  1646  0834               	movf	(puts@s+1)^(0+128),w
  5894  1647  00AB               	movwf	(fputs@s+1)^(0+128)
  5895  1648  0833               	movf	puts@s^(0+128),w
  5896  1649  00AA               	movwf	fputs@s^(0+128)
  5897  164A  01AC               	clrf	fputs@fp^(0+128)
  5898  164B  3187  27D2  3196   	fcall	_fputs
  5899  164E  0021               	movlb	1	; select bank1
  5900  164F  1BAB               	btfsc	(?_fputs+1)^(0+128),7
  5901  1650  0008               	return
  5902  1651  300A               	movlw	10
  5903  1652  00A2               	movwf	fputc@c^(0+128)
  5904  1653  3000               	movlw	0
  5905  1654  00A3               	movwf	(fputc@c^(0+128)+1)
  5906  1655  01A4               	clrf	fputc@fp^(0+128)
  5907  1656  3197  277A  3196   	fcall	_fputc
  5908  1659  0021               	movlb	1	; select bank1
  5909  165A  1BA3               	btfsc	(?_fputc+1)^(0+128),7
  5910  165B  0008               	return
  5911  165C  01B7               	clrf	_puts$1319^(0+128)
  5912  165D  0008               	return
  5913  165E                     __end_of_puts:	
  5914                           
  5915                           	psect	text6
  5916  159B                     __ptext6:	
  5917 ;; *************** function _printf *****************
  5918 ;; Defined at:
  5919 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  5920 ;; Parameters:    Size  Location     Type
  5921 ;;  fmt             2    3[BANK2 ] PTR const unsigned char 
  5922 ;;		 -> STR_4(10), STR_3(9), STR_2(14), STR_1(15), 
  5923 ;; Auto vars:     Size  Location     Type
  5924 ;;  ret             2    0        int 
  5925 ;;  ap              1   11[BANK2 ] PTR void [1]
  5926 ;;		 -> ?_printf(2), 
  5927 ;; Return value:  Size  Location     Type
  5928 ;;                  2    3[BANK2 ] int 
  5929 ;; Registers used:
  5930 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5931 ;; Tracked objects:
  5932 ;;		On entry : 0/0
  5933 ;;		On exit  : 0/0
  5934 ;;		Unchanged: 0/0
  5935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5936 ;;      Params:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0
  5937 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  5938 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5939 ;;      Totals:         0       0       1       9       0       0       0       0       0       0       0       0       
      +0       0
  5940 ;;Total ram usage:       10 bytes
  5941 ;; Hardware stack levels used:    1
  5942 ;; Hardware stack levels required when called:   14
  5943 ;; This function calls:
  5944 ;;		_vfprintf
  5945 ;; This function is called by:
  5946 ;;		_main
  5947 ;; This function uses a non-reentrant model
  5948 ;;
  5949                           
  5950                           
  5951                           ;psect for function _printf
  5952  159B                     _printf:	
  5953                           
  5954                           ;incstack = 0
  5955                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5956  159B  305E               	movlw	(low ((?_printf| (0+256)+2)))& (0+255)
  5957  159C  0021               	movlb	1	; select bank1
  5958  159D  00EF               	movwf	??_printf^(0+128)
  5959  159E  086F               	movf	??_printf^(0+128),w
  5960  159F  0022               	movlb	2	; select bank2
  5961  15A0  00E4               	movwf	printf@ap^(0+256)
  5962  15A1  085D               	movf	(printf@fmt+1)^(0+256),w
  5963  15A2  0021               	movlb	1	; select bank1
  5964  15A3  00EB               	movwf	(vfprintf@fmt+1)^(0+128)
  5965  15A4  0022               	movlb	2	; select bank2
  5966  15A5  085C               	movf	printf@fmt^(0+256),w
  5967  15A6  0021               	movlb	1	; select bank1
  5968  15A7  00EA               	movwf	vfprintf@fmt^(0+128)
  5969  15A8  3064               	movlw	(low (printf@ap| (0+256)))& (0+255)
  5970  15A9  00EF               	movwf	??_printf^(0+128)
  5971  15AA  086F               	movf	??_printf^(0+128),w
  5972  15AB  00EC               	movwf	vfprintf@ap^(0+128)
  5973  15AC  3000               	movlw	0
  5974  15AD  3196  26D8         	fcall	_vfprintf
  5975  15AF  0008               	return
  5976  15B0                     __end_of_printf:	
  5977                           
  5978                           	psect	text7
  5979  16D8                     __ptext7:	
  5980 ;; *************** function _vfprintf *****************
  5981 ;; Defined at:
  5982 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5983 ;; Parameters:    Size  Location     Type
  5984 ;;  fp              1    wreg     PTR struct _IO_FILE
  5985 ;;		 -> NULL(0), 
  5986 ;;  fmt             2   74[BANK1 ] PTR const unsigned char 
  5987 ;;		 -> STR_4(10), STR_3(9), STR_2(14), STR_1(15), 
  5988 ;;  ap              1   76[BANK1 ] PTR PTR void 
  5989 ;;		 -> printf@ap(1), 
  5990 ;; Auto vars:     Size  Location     Type
  5991 ;;  fp              1    0[BANK2 ] PTR struct _IO_FILE
  5992 ;;		 -> NULL(0), 
  5993 ;;  cfmt            2    1[BANK2 ] PTR unsigned char 
  5994 ;;		 -> STR_4(10), STR_3(9), STR_2(14), STR_1(15), 
  5995 ;; Return value:  Size  Location     Type
  5996 ;;                  2   74[BANK1 ] int 
  5997 ;; Registers used:
  5998 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5999 ;; Tracked objects:
  6000 ;;		On entry : 0/0
  6001 ;;		On exit  : 0/0
  6002 ;;		Unchanged: 0/0
  6003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6004 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6005 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  6006 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6007 ;;      Totals:         0       0       5       3       0       0       0       0       0       0       0       0       
      +0       0
  6008 ;;Total ram usage:        8 bytes
  6009 ;; Hardware stack levels used:    1
  6010 ;; Hardware stack levels required when called:   13
  6011 ;; This function calls:
  6012 ;;		_vfpfcnvrt
  6013 ;; This function is called by:
  6014 ;;		_printf
  6015 ;; This function uses a non-reentrant model
  6016 ;;
  6017                           
  6018                           
  6019                           ;psect for function _vfprintf
  6020  16D8                     _vfprintf:	
  6021                           
  6022                           ;incstack = 0
  6023                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6024                           ;vfprintf@fp stored from wreg
  6025  16D8  0022               	movlb	2	; select bank2
  6026  16D9  00D9               	movwf	vfprintf@fp^(0+256)
  6027                           
  6028                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  6029  16DA  0021               	movlb	1	; select bank1
  6030  16DB  086B               	movf	(vfprintf@fmt+1)^(0+128),w
  6031  16DC  0022               	movlb	2	; select bank2
  6032  16DD  00DB               	movwf	(vfprintf@cfmt+1)^(0+256)
  6033  16DE  0021               	movlb	1	; select bank1
  6034  16DF  086A               	movf	vfprintf@fmt^(0+128),w
  6035  16E0  0022               	movlb	2	; select bank2
  6036  16E1  00DA               	movwf	vfprintf@cfmt^(0+256)
  6037                           
  6038                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  6039  16E2  01B0               	clrf	_nout^(0+256)
  6040  16E3  01B1               	clrf	(_nout+1)^(0+256)
  6041  16E4                     l3781:	
  6042                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  6043                           
  6044                           
  6045                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  6046  16E4  085A               	movf	vfprintf@cfmt^(0+256),w
  6047  16E5  0084               	movwf	4
  6048  16E6  085B               	movf	(vfprintf@cfmt+1)^(0+256),w
  6049  16E7  0085               	movwf	5
  6050  16E8  0012               	moviw fsr0++
  6051  16E9  1903               	btfsc	3,2
  6052  16EA  2F02               	goto	l3783
  6053                           
  6054                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  6055  16EB  305A               	movlw	(low (vfprintf@cfmt| (0+256)))& (0+255)
  6056  16EC  0021               	movlb	1	; select bank1
  6057  16ED  00ED               	movwf	??_vfprintf^(0+128)
  6058  16EE  086D               	movf	??_vfprintf^(0+128),w
  6059  16EF  00DA               	movwf	vfpfcnvrt@fmt^(0+128)
  6060  16F0  086C               	movf	vfprintf@ap^(0+128),w
  6061  16F1  00EE               	movwf	(??_vfprintf+1)^(0+128)
  6062  16F2  086E               	movf	(??_vfprintf+1)^(0+128),w
  6063  16F3  00DB               	movwf	vfpfcnvrt@ap^(0+128)
  6064  16F4  0022               	movlb	2	; select bank2
  6065  16F5  0859               	movf	vfprintf@fp^(0+256),w
  6066  16F6  318A  22EF  3196   	fcall	_vfpfcnvrt
  6067  16F9  0021               	movlb	1	; select bank1
  6068  16FA  085A               	movf	?_vfpfcnvrt^(0+128),w
  6069  16FB  0022               	movlb	2	; select bank2
  6070  16FC  07B0               	addwf	_nout^(0+256),f
  6071  16FD  0021               	movlb	1	; select bank1
  6072  16FE  085B               	movf	(?_vfpfcnvrt+1)^(0+128),w
  6073  16FF  0022               	movlb	2	; select bank2
  6074  1700  3DB1               	addwfc	(_nout+1)^(0+256),f
  6075  1701  2EE4               	goto	l3781
  6076  1702                     l3783:	
  6077                           
  6078                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  6079  1702  0831               	movf	(_nout+1)^(0+256),w
  6080  1703  0021               	movlb	1	; select bank1
  6081  1704  00EB               	movwf	(?_vfprintf+1)^(0+128)
  6082  1705  0022               	movlb	2	; select bank2
  6083  1706  0830               	movf	_nout^(0+256),w
  6084  1707  0021               	movlb	1	; select bank1
  6085  1708  00EA               	movwf	?_vfprintf^(0+128)
  6086  1709  0008               	return
  6087  170A                     __end_of_vfprintf:	
  6088                           
  6089                           	psect	text8
  6090  0AEF                     __ptext8:	
  6091 ;; *************** function _vfpfcnvrt *****************
  6092 ;; Defined at:
  6093 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6094 ;; Parameters:    Size  Location     Type
  6095 ;;  fp              1    wreg     PTR struct _IO_FILE
  6096 ;;		 -> NULL(0), 
  6097 ;;  fmt             1   58[BANK1 ] PTR PTR unsigned char 
  6098 ;;		 -> vfprintf@cfmt(2), 
  6099 ;;  ap              1   59[BANK1 ] PTR PTR void 
  6100 ;;		 -> printf@ap(1), 
  6101 ;; Auto vars:     Size  Location     Type
  6102 ;;  fp              1   73[BANK1 ] PTR struct _IO_FILE
  6103 ;;		 -> NULL(0), 
  6104 ;;  ll              8   65[BANK1 ] long long 
  6105 ;;  llu             8    0        unsigned long long 
  6106 ;;  f               4    0        unsigned long long 
  6107 ;;  ct              3    0        unsigned char [3]
  6108 ;;  vp              2    0        PTR void 
  6109 ;;  i               2    0        int 
  6110 ;;  done            2    0        int 
  6111 ;;  cp              2    0        PTR unsigned char 
  6112 ;;  c               1    0        unsigned char 
  6113 ;; Return value:  Size  Location     Type
  6114 ;;                  2   58[BANK1 ] int 
  6115 ;; Registers used:
  6116 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6117 ;; Tracked objects:
  6118 ;;		On entry : 0/0
  6119 ;;		On exit  : 0/0
  6120 ;;		Unchanged: 0/0
  6121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6122 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6123 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  6124 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  6125 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  6126 ;;Total ram usage:       16 bytes
  6127 ;; Hardware stack levels used:    1
  6128 ;; Hardware stack levels required when called:   12
  6129 ;; This function calls:
  6130 ;;		_dtoa
  6131 ;;		_fputc
  6132 ;; This function is called by:
  6133 ;;		_vfprintf
  6134 ;; This function uses a non-reentrant model
  6135 ;;
  6136                           
  6137                           
  6138                           ;psect for function _vfpfcnvrt
  6139  0AEF                     _vfpfcnvrt:	
  6140                           
  6141                           ;incstack = 0
  6142                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6143                           ;vfpfcnvrt@fp stored from wreg
  6144  0AEF  0021               	movlb	1	; select bank1
  6145  0AF0  00E9               	movwf	vfpfcnvrt@fp^(0+128)
  6146                           
  6147                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  6148  0AF1  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  6149  0AF2  0086               	movwf	6
  6150  0AF3  3001               	movlw	1	; select bank2/3
  6151  0AF4  0087               	movwf	7
  6152  0AF5  3F40               	moviw [0]fsr1
  6153  0AF6  00DC               	movwf	??_vfpfcnvrt^(0+128)
  6154  0AF7  3F41               	moviw [1]fsr1
  6155  0AF8  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  6156  0AF9  085C               	movf	??_vfpfcnvrt^(0+128),w
  6157  0AFA  0084               	movwf	4
  6158  0AFB  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  6159  0AFC  0085               	movwf	5
  6160  0AFD  0012               	moviw fsr0++
  6161  0AFE  3A25               	xorlw	37
  6162  0AFF  1D03               	btfss	3,2
  6163  0B00  2BA8               	goto	l3297
  6164                           
  6165                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  6166  0B01  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  6167  0B02  0086               	movwf	6
  6168  0B03  3001               	movlw	1	; select bank2/3
  6169  0B04  0087               	movwf	7
  6170  0B05  3001               	movlw	1
  6171  0B06  0781               	addwf	1,f
  6172  0B07  3141               	addfsr 1,1
  6173  0B08  1803               	skipnc
  6174  0B09  0A81               	incf	1,f
  6175                           
  6176                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  6177  0B0A  0022               	movlb	2	; select bank2
  6178  0B0B  01B2               	clrf	_width^(0+256)
  6179  0B0C  01B3               	clrf	(_width+1)^(0+256)
  6180  0B0D  0020               	movlb	0	; select bank0
  6181  0B0E  01E0               	clrf	_flags
  6182  0B0F  01E1               	clrf	_flags+1
  6183                           
  6184                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  6185  0B10  30FF               	movlw	255
  6186  0B11  0022               	movlb	2	; select bank2
  6187  0B12  00B4               	movwf	_prec^(0+256)
  6188  0B13  30FF               	movlw	255
  6189  0B14  00B5               	movwf	(_prec^(0+256)+1)
  6190                           
  6191                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  6192  0B15  0021               	movlb	1	; select bank1
  6193  0B16  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  6194  0B17  0086               	movwf	6
  6195  0B18  3001               	movlw	1	; select bank2/3
  6196  0B19  0087               	movwf	7
  6197  0B1A  3F40               	moviw [0]fsr1
  6198  0B1B  00DC               	movwf	??_vfpfcnvrt^(0+128)
  6199  0B1C  3F41               	moviw [1]fsr1
  6200  0B1D  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  6201  0B1E  085C               	movf	??_vfpfcnvrt^(0+128),w
  6202  0B1F  0084               	movwf	4
  6203  0B20  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  6204  0B21  0085               	movwf	5
  6205  0B22  0012               	moviw fsr0++
  6206  0B23  3A64               	xorlw	100
  6207  0B24  1903               	btfsc	3,2
  6208  0B25  2B36               	goto	l3273
  6209  0B26  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  6210  0B27  0086               	movwf	6
  6211  0B28  3001               	movlw	1	; select bank2/3
  6212  0B29  0087               	movwf	7
  6213  0B2A  3F40               	moviw [0]fsr1
  6214  0B2B  00DC               	movwf	??_vfpfcnvrt^(0+128)
  6215  0B2C  3F41               	moviw [1]fsr1
  6216  0B2D  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  6217  0B2E  085C               	movf	??_vfpfcnvrt^(0+128),w
  6218  0B2F  0084               	movwf	4
  6219  0B30  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  6220  0B31  0085               	movwf	5
  6221  0B32  0012               	moviw fsr0++
  6222  0B33  3A69               	xorlw	105
  6223  0B34  1D03               	btfss	3,2
  6224  0B35  2B73               	goto	l3281
  6225  0B36                     l3273:	
  6226                           
  6227                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  6228  0B36  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  6229  0B37  0086               	movwf	6
  6230  0B38  3001               	movlw	1	; select bank2/3
  6231  0B39  0087               	movwf	7
  6232  0B3A  3001               	movlw	1
  6233  0B3B  0781               	addwf	1,f
  6234  0B3C  3141               	addfsr 1,1
  6235  0B3D  1803               	skipnc
  6236  0B3E  0A81               	incf	1,f
  6237                           
  6238                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  6239  0B3F  085B               	movf	vfpfcnvrt@ap^(0+128),w
  6240  0B40  0086               	movwf	6
  6241  0B41  3001               	movlw	1	; select bank2/3
  6242  0B42  0087               	movwf	7
  6243  0B43  0801               	movf	1,w
  6244  0B44  0084               	movwf	4
  6245  0B45  3001               	movlw	1	; select bank2/3
  6246  0B46  0085               	movwf	5
  6247  0B47  3002               	movlw	2
  6248  0B48  0781               	addwf	1,f
  6249  0B49  3F00               	moviw [0]fsr0
  6250  0B4A  00DC               	movwf	??_vfpfcnvrt^(0+128)
  6251  0B4B  3F01               	moviw [1]fsr0
  6252  0B4C  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  6253  0B4D  085C               	movf	??_vfpfcnvrt^(0+128),w
  6254  0B4E  00E1               	movwf	vfpfcnvrt@ll^(0+128)
  6255  0B4F  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  6256  0B50  00E2               	movwf	(vfpfcnvrt@ll+1)^(0+128)
  6257  0B51  0D89               	rlf	9,f
  6258  0B52  3B89               	subwfb	9,f
  6259  0B53  0989               	comf	9,f
  6260  0B54  00E3               	movwf	(vfpfcnvrt@ll+2)^(0+128)
  6261  0B55  00E4               	movwf	(vfpfcnvrt@ll+3)^(0+128)
  6262  0B56  00E5               	movwf	(vfpfcnvrt@ll+4)^(0+128)
  6263  0B57  00E6               	movwf	(vfpfcnvrt@ll+5)^(0+128)
  6264  0B58  00E7               	movwf	(vfpfcnvrt@ll+6)^(0+128)
  6265  0B59  00E8               	movwf	(vfpfcnvrt@ll+7)^(0+128)
  6266                           
  6267                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  6268  0B5A  0861               	movf	vfpfcnvrt@ll^(0+128),w
  6269  0B5B  00BC               	movwf	dtoa@d^(0+128)
  6270  0B5C  0862               	movf	(vfpfcnvrt@ll+1)^(0+128),w
  6271  0B5D  00BD               	movwf	(dtoa@d+1)^(0+128)
  6272  0B5E  0863               	movf	(vfpfcnvrt@ll+2)^(0+128),w
  6273  0B5F  00BE               	movwf	(dtoa@d+2)^(0+128)
  6274  0B60  0864               	movf	(vfpfcnvrt@ll+3)^(0+128),w
  6275  0B61  00BF               	movwf	(dtoa@d+3)^(0+128)
  6276  0B62  0865               	movf	(vfpfcnvrt@ll+4)^(0+128),w
  6277  0B63  00C0               	movwf	(dtoa@d+4)^(0+128)
  6278  0B64  0866               	movf	(vfpfcnvrt@ll+5)^(0+128),w
  6279  0B65  00C1               	movwf	(dtoa@d+5)^(0+128)
  6280  0B66  0867               	movf	(vfpfcnvrt@ll+6)^(0+128),w
  6281  0B67  00C2               	movwf	(dtoa@d+6)^(0+128)
  6282  0B68  0868               	movf	(vfpfcnvrt@ll+7)^(0+128),w
  6283  0B69  00C3               	movwf	(dtoa@d+7)^(0+128)
  6284  0B6A  0869               	movf	vfpfcnvrt@fp^(0+128),w
  6285  0B6B  318E  26AD         	fcall	_dtoa
  6286  0B6D  0021               	movlb	1	; select bank1
  6287  0B6E  083D               	movf	(?_dtoa+1)^(0+128),w
  6288  0B6F  00DB               	movwf	(?_vfpfcnvrt+1)^(0+128)
  6289  0B70  083C               	movf	?_dtoa^(0+128),w
  6290  0B71  00DA               	movwf	?_vfpfcnvrt^(0+128)
  6291  0B72  0008               	return
  6292  0B73                     l3281:	
  6293                           
  6294                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  6295  0B73  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  6296  0B74  0086               	movwf	6
  6297  0B75  3001               	movlw	1	; select bank2/3
  6298  0B76  0087               	movwf	7
  6299  0B77  3F40               	moviw [0]fsr1
  6300  0B78  00DC               	movwf	??_vfpfcnvrt^(0+128)
  6301  0B79  3F41               	moviw [1]fsr1
  6302  0B7A  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  6303  0B7B  085C               	movf	??_vfpfcnvrt^(0+128),w
  6304  0B7C  0084               	movwf	4
  6305  0B7D  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  6306  0B7E  0085               	movwf	5
  6307  0B7F  0012               	moviw fsr0++
  6308  0B80  3A25               	xorlw	37
  6309  0B81  1D03               	btfss	3,2
  6310  0B82  2B9C               	goto	l3291
  6311                           
  6312                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  6313  0B83  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  6314  0B84  0086               	movwf	6
  6315  0B85  3001               	movlw	1	; select bank2/3
  6316  0B86  0087               	movwf	7
  6317  0B87  3001               	movlw	1
  6318  0B88  0781               	addwf	1,f
  6319  0B89  3141               	addfsr 1,1
  6320  0B8A  1803               	skipnc
  6321  0B8B  0A81               	incf	1,f
  6322                           
  6323                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  6324  0B8C  3025               	movlw	37
  6325  0B8D  00A2               	movwf	fputc@c^(0+128)
  6326  0B8E  3000               	movlw	0
  6327  0B8F  00A3               	movwf	(fputc@c^(0+128)+1)
  6328  0B90  0869               	movf	vfpfcnvrt@fp^(0+128),w
  6329  0B91  00DC               	movwf	??_vfpfcnvrt^(0+128)
  6330  0B92  085C               	movf	??_vfpfcnvrt^(0+128),w
  6331  0B93  00A4               	movwf	fputc@fp^(0+128)
  6332  0B94  3197  277A         	fcall	_fputc
  6333  0B96                     l3287:	
  6334                           
  6335                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  6336  0B96  3001               	movlw	1
  6337  0B97  0021               	movlb	1	; select bank1
  6338  0B98  00DA               	movwf	?_vfpfcnvrt^(0+128)
  6339  0B99  3000               	movlw	0
  6340  0B9A  00DB               	movwf	(?_vfpfcnvrt^(0+128)+1)
  6341  0B9B  0008               	return
  6342  0B9C                     l3291:	
  6343                           
  6344                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  6345  0B9C  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  6346  0B9D  0086               	movwf	6
  6347  0B9E  3001               	movlw	1	; select bank2/3
  6348  0B9F  0087               	movwf	7
  6349  0BA0  3001               	movlw	1
  6350  0BA1  0781               	addwf	1,f
  6351  0BA2  3141               	addfsr 1,1
  6352  0BA3  1803               	skipnc
  6353  0BA4  0A81               	incf	1,f
  6354                           
  6355                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  6356  0BA5  01DA               	clrf	?_vfpfcnvrt^(0+128)
  6357  0BA6  01DB               	clrf	(?_vfpfcnvrt+1)^(0+128)
  6358  0BA7  0008               	return
  6359  0BA8                     l3297:	
  6360                           
  6361                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  6362  0BA8  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  6363  0BA9  0086               	movwf	6
  6364  0BAA  3001               	movlw	1	; select bank2/3
  6365  0BAB  0087               	movwf	7
  6366  0BAC  3F40               	moviw [0]fsr1
  6367  0BAD  00DC               	movwf	??_vfpfcnvrt^(0+128)
  6368  0BAE  3F41               	moviw [1]fsr1
  6369  0BAF  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  6370  0BB0  085C               	movf	??_vfpfcnvrt^(0+128),w
  6371  0BB1  0084               	movwf	4
  6372  0BB2  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  6373  0BB3  0085               	movwf	5
  6374  0BB4  0800               	movf	0,w	;code access
  6375  0BB5  00DE               	movwf	(??_vfpfcnvrt+2)^(0+128)
  6376  0BB6  01DF               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  6377  0BB7  085E               	movf	(??_vfpfcnvrt+2)^(0+128),w
  6378  0BB8  00A2               	movwf	fputc@c^(0+128)
  6379  0BB9  085F               	movf	(??_vfpfcnvrt+3)^(0+128),w
  6380  0BBA  00A3               	movwf	(fputc@c+1)^(0+128)
  6381  0BBB  0869               	movf	vfpfcnvrt@fp^(0+128),w
  6382  0BBC  00E0               	movwf	(??_vfpfcnvrt+4)^(0+128)
  6383  0BBD  0860               	movf	(??_vfpfcnvrt+4)^(0+128),w
  6384  0BBE  00A4               	movwf	fputc@fp^(0+128)
  6385  0BBF  3197  277A  318A   	fcall	_fputc
  6386                           
  6387                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  6388  0BC2  0021               	movlb	1	; select bank1
  6389  0BC3  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  6390  0BC4  0086               	movwf	6
  6391  0BC5  3001               	movlw	1	; select bank2/3
  6392  0BC6  0087               	movwf	7
  6393  0BC7  3001               	movlw	1
  6394  0BC8  0781               	addwf	1,f
  6395  0BC9  3141               	addfsr 1,1
  6396  0BCA  1803               	skipnc
  6397  0BCB  0A81               	incf	1,f
  6398  0BCC  2B96               	goto	l3287
  6399  0BCD                     __end_of_vfpfcnvrt:	
  6400                           
  6401                           	psect	text9
  6402  0EAD                     __ptext9:	
  6403 ;; *************** function _dtoa *****************
  6404 ;; Defined at:
  6405 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6406 ;; Parameters:    Size  Location     Type
  6407 ;;  fp              1    wreg     PTR struct _IO_FILE
  6408 ;;		 -> NULL(0), 
  6409 ;;  d               8   28[BANK1 ] long long 
  6410 ;; Auto vars:     Size  Location     Type
  6411 ;;  fp              1   43[BANK1 ] PTR struct _IO_FILE
  6412 ;;		 -> NULL(0), 
  6413 ;;  n               8   48[BANK1 ] long long 
  6414 ;;  i               2   56[BANK1 ] int 
  6415 ;;  s               2   46[BANK1 ] int 
  6416 ;;  w               2   44[BANK1 ] int 
  6417 ;;  p               2   41[BANK1 ] int 
  6418 ;; Return value:  Size  Location     Type
  6419 ;;                  2   28[BANK1 ] int 
  6420 ;; Registers used:
  6421 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6422 ;; Tracked objects:
  6423 ;;		On entry : 0/0
  6424 ;;		On exit  : 0/0
  6425 ;;		Unchanged: 0/0
  6426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6427 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  6428 ;;      Locals:         0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0
  6429 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6430 ;;      Totals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0
  6431 ;;Total ram usage:       30 bytes
  6432 ;; Hardware stack levels used:    1
  6433 ;; Hardware stack levels required when called:   11
  6434 ;; This function calls:
  6435 ;;		___aodiv
  6436 ;;		___aomod
  6437 ;;		_abs
  6438 ;;		_pad
  6439 ;; This function is called by:
  6440 ;;		_vfpfcnvrt
  6441 ;; This function uses a non-reentrant model
  6442 ;;
  6443                           
  6444                           
  6445                           ;psect for function _dtoa
  6446  0EAD                     _dtoa:	
  6447                           
  6448                           ;incstack = 0
  6449                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6450                           ;dtoa@fp stored from wreg
  6451  0EAD  0021               	movlb	1	; select bank1
  6452  0EAE  00CB               	movwf	dtoa@fp^(0+128)
  6453                           
  6454                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  6455  0EAF  083C               	movf	dtoa@d^(0+128),w
  6456  0EB0  00D0               	movwf	dtoa@n^(0+128)
  6457  0EB1  083D               	movf	(dtoa@d+1)^(0+128),w
  6458  0EB2  00D1               	movwf	(dtoa@n+1)^(0+128)
  6459  0EB3  083E               	movf	(dtoa@d+2)^(0+128),w
  6460  0EB4  00D2               	movwf	(dtoa@n+2)^(0+128)
  6461  0EB5  083F               	movf	(dtoa@d+3)^(0+128),w
  6462  0EB6  00D3               	movwf	(dtoa@n+3)^(0+128)
  6463  0EB7  0840               	movf	(dtoa@d+4)^(0+128),w
  6464  0EB8  00D4               	movwf	(dtoa@n+4)^(0+128)
  6465  0EB9  0841               	movf	(dtoa@d+5)^(0+128),w
  6466  0EBA  00D5               	movwf	(dtoa@n+5)^(0+128)
  6467  0EBB  0842               	movf	(dtoa@d+6)^(0+128),w
  6468  0EBC  00D6               	movwf	(dtoa@n+6)^(0+128)
  6469  0EBD  0843               	movf	(dtoa@d+7)^(0+128),w
  6470  0EBE  00D7               	movwf	(dtoa@n+7)^(0+128)
  6471                           
  6472                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  6473  0EBF  30D0               	movlw	low dtoa@n
  6474  0EC0  0086               	movwf	6
  6475  0EC1  3000               	movlw	high dtoa@n
  6476  0EC2  0087               	movwf	7
  6477  0EC3  3F47               	moviw [7]fsr1
  6478  0EC4  00C4               	movwf	??_dtoa^(0+128)
  6479  0EC5  1FC4               	btfss	??_dtoa^(0+128),7
  6480  0EC6  2EC9               	goto	u2840
  6481  0EC7  3001               	movlw	1
  6482  0EC8  2ECA               	goto	u2850
  6483  0EC9                     u2840:	
  6484  0EC9  3000               	movlw	0
  6485  0ECA                     u2850:	
  6486  0ECA  0021               	movlb	1	; select bank1
  6487  0ECB  00C5               	movwf	(??_dtoa+1)^(0+128)
  6488  0ECC  01C6               	clrf	((??_dtoa+1)^(0+128)+1)
  6489  0ECD  0845               	movf	(??_dtoa+1)^(0+128),w
  6490  0ECE  00CE               	movwf	dtoa@s^(0+128)
  6491  0ECF  0846               	movf	(??_dtoa+2)^(0+128),w
  6492  0ED0  00CF               	movwf	(dtoa@s+1)^(0+128)
  6493                           
  6494                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  6495  0ED1  084E               	movf	dtoa@s^(0+128),w
  6496  0ED2  044F               	iorwf	(dtoa@s+1)^(0+128),w
  6497  0ED3  1903               	btfsc	3,2
  6498  0ED4  2EF3               	goto	l621
  6499                           
  6500                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  6501  0ED5  09D0               	comf	dtoa@n^(0+128),f
  6502  0ED6  09D1               	comf	(dtoa@n+1)^(0+128),f
  6503  0ED7  09D2               	comf	(dtoa@n+2)^(0+128),f
  6504  0ED8  09D3               	comf	(dtoa@n+3)^(0+128),f
  6505  0ED9  09D4               	comf	(dtoa@n+4)^(0+128),f
  6506  0EDA  09D5               	comf	(dtoa@n+5)^(0+128),f
  6507  0EDB  09D6               	comf	(dtoa@n+6)^(0+128),f
  6508  0EDC  09D7               	comf	(dtoa@n+7)^(0+128),f
  6509  0EDD  0AD0               	incf	dtoa@n^(0+128),f
  6510  0EDE  1D03               	skipz
  6511  0EDF  2EF3               	goto	l621
  6512  0EE0  0AD1               	incf	(dtoa@n+1)^(0+128),f
  6513  0EE1  1D03               	skipz
  6514  0EE2  2EF3               	goto	l621
  6515  0EE3  0AD2               	incf	(dtoa@n+2)^(0+128),f
  6516  0EE4  1D03               	skipz
  6517  0EE5  2EF3               	goto	l621
  6518  0EE6  0AD3               	incf	(dtoa@n+3)^(0+128),f
  6519  0EE7  1D03               	skipz
  6520  0EE8  2EF3               	goto	l621
  6521  0EE9  0AD4               	incf	(dtoa@n+4)^(0+128),f
  6522  0EEA  1D03               	skipz
  6523  0EEB  2EF3               	goto	l621
  6524  0EEC  0AD5               	incf	(dtoa@n+5)^(0+128),f
  6525  0EED  1D03               	skipz
  6526  0EEE  2EF3               	goto	l621
  6527  0EEF  0AD6               	incf	(dtoa@n+6)^(0+128),f
  6528  0EF0  1D03               	skipz
  6529  0EF1  2EF3               	goto	l621
  6530  0EF2  0AD7               	incf	(dtoa@n+7)^(0+128),f
  6531  0EF3                     l621:	
  6532                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 284:     }
  6533                           
  6534                           
  6535                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  6536  0EF3  0022               	movlb	2	; select bank2
  6537  0EF4  1BB5               	btfsc	(_prec+1)^(0+256),7
  6538  0EF5  2EFB               	goto	l622
  6539                           
  6540                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  6541  0EF6  30FD               	movlw	253
  6542  0EF7  0020               	movlb	0	; select bank0
  6543  0EF8  05E0               	andwf	_flags,f
  6544  0EF9  30FF               	movlw	255
  6545  0EFA  05E1               	andwf	_flags+1,f
  6546  0EFB                     l622:	
  6547                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 289:     }
  6548                           
  6549                           
  6550                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  6551  0EFB  0022               	movlb	2	; select bank2
  6552  0EFC  0835               	movf	(_prec+1)^(0+256),w
  6553  0EFD  3A80               	xorlw	128
  6554  0EFE  0021               	movlb	1	; select bank1
  6555  0EFF  00C4               	movwf	??_dtoa^(0+128)
  6556  0F00  3080               	movlw	128
  6557  0F01  0244               	subwf	??_dtoa^(0+128),w
  6558  0F02  1D03               	skipz
  6559  0F03  2F07               	goto	u2895
  6560  0F04  3001               	movlw	1
  6561  0F05  0022               	movlb	2	; select bank2
  6562  0F06  0234               	subwf	_prec^(0+256),w
  6563  0F07                     u2895:	
  6564  0F07  1803               	skipnc
  6565  0F08  2F0F               	goto	l2783
  6566  0F09  3001               	movlw	1
  6567  0F0A  0021               	movlb	1	; select bank1
  6568  0F0B  00C9               	movwf	dtoa@p^(0+128)
  6569  0F0C  3000               	movlw	0
  6570  0F0D  00CA               	movwf	(dtoa@p^(0+128)+1)
  6571  0F0E  2F17               	goto	l626
  6572  0F0F                     l2783:	
  6573  0F0F  0022               	movlb	2	; select bank2
  6574  0F10  0835               	movf	(_prec+1)^(0+256),w
  6575  0F11  0021               	movlb	1	; select bank1
  6576  0F12  00CA               	movwf	(dtoa@p+1)^(0+128)
  6577  0F13  0022               	movlb	2	; select bank2
  6578  0F14  0834               	movf	_prec^(0+256),w
  6579  0F15  0021               	movlb	1	; select bank1
  6580  0F16  00C9               	movwf	dtoa@p^(0+128)
  6581  0F17                     l626:	
  6582                           
  6583                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  6584  0F17  0022               	movlb	2	; select bank2
  6585  0F18  0833               	movf	(_width+1)^(0+256),w
  6586  0F19  0021               	movlb	1	; select bank1
  6587  0F1A  00CD               	movwf	(dtoa@w+1)^(0+128)
  6588  0F1B  0022               	movlb	2	; select bank2
  6589  0F1C  0832               	movf	_width^(0+256),w
  6590  0F1D  0021               	movlb	1	; select bank1
  6591  0F1E  00CC               	movwf	dtoa@w^(0+128)
  6592                           
  6593                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  6594  0F1F  084E               	movf	dtoa@s^(0+128),w
  6595  0F20  044F               	iorwf	(dtoa@s+1)^(0+128),w
  6596  0F21  1D03               	btfss	3,2
  6597  0F22  2F26               	goto	l2789
  6598  0F23  0020               	movlb	0	; select bank0
  6599  0F24  1D60               	btfss	_flags,2
  6600  0F25  2F2B               	goto	l627
  6601  0F26                     l2789:	
  6602                           
  6603                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  6604  0F26  30FF               	movlw	255
  6605  0F27  0021               	movlb	1	; select bank1
  6606  0F28  07CC               	addwf	dtoa@w^(0+128),f
  6607  0F29  30FF               	movlw	255
  6608  0F2A  3DCD               	addwfc	(dtoa@w+1)^(0+128),f
  6609  0F2B                     l627:	
  6610                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 294:     }
  6611                           
  6612                           
  6613                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  6614  0F2B  301F               	movlw	31
  6615  0F2C  0021               	movlb	1	; select bank1
  6616  0F2D  00D8               	movwf	dtoa@i^(0+128)
  6617  0F2E  3000               	movlw	0
  6618  0F2F  00D9               	movwf	(dtoa@i^(0+128)+1)
  6619                           
  6620                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  6621  0F30  0024               	movlb	4	; select bank4
  6622  0F31  01BF               	clrf	(_dbuf^(0+512)+31)
  6623                           
  6624                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6625  0F32  2FC1               	goto	l630
  6626  0F33                     l2803:	
  6627  0F33  0021               	movlb	1	; select bank1
  6628  0F34  0850               	movf	dtoa@n^(0+128),w
  6629  0F35  0451               	iorwf	(dtoa@n+1)^(0+128),w
  6630  0F36  0452               	iorwf	(dtoa@n+2)^(0+128),w
  6631  0F37  0453               	iorwf	(dtoa@n+3)^(0+128),w
  6632  0F38  0454               	iorwf	(dtoa@n+4)^(0+128),w
  6633  0F39  0455               	iorwf	(dtoa@n+5)^(0+128),w
  6634  0F3A  0456               	iorwf	(dtoa@n+6)^(0+128),w
  6635  0F3B  0457               	iorwf	(dtoa@n+7)^(0+128),w
  6636  0F3C  1D03               	skipz
  6637  0F3D  2F58               	goto	l2793
  6638  0F3E  084A               	movf	(dtoa@p+1)^(0+128),w
  6639  0F3F  3A80               	xorlw	128
  6640  0F40  00C4               	movwf	??_dtoa^(0+128)
  6641  0F41  3080               	movlw	128
  6642  0F42  0244               	subwf	??_dtoa^(0+128),w
  6643  0F43  1D03               	skipz
  6644  0F44  2F47               	goto	u2945
  6645  0F45  3001               	movlw	1
  6646  0F46  0249               	subwf	dtoa@p^(0+128),w
  6647  0F47                     u2945:	
  6648  0F47  1803               	skipnc
  6649  0F48  2F58               	goto	l2793
  6650  0F49  0021               	movlb	1	; select bank1
  6651  0F4A  084D               	movf	(dtoa@w+1)^(0+128),w
  6652  0F4B  3A80               	xorlw	128
  6653  0F4C  00C4               	movwf	??_dtoa^(0+128)
  6654  0F4D  3080               	movlw	128
  6655  0F4E  0244               	subwf	??_dtoa^(0+128),w
  6656  0F4F  1D03               	skipz
  6657  0F50  2F53               	goto	u2955
  6658  0F51  3001               	movlw	1
  6659  0F52  024C               	subwf	dtoa@w^(0+128),w
  6660  0F53                     u2955:	
  6661  0F53  1C03               	skipc
  6662  0F54  2FCD               	goto	l2811
  6663  0F55  0020               	movlb	0	; select bank0
  6664  0F56  1CE0               	btfss	_flags,1
  6665  0F57  2FCD               	goto	l2811
  6666  0F58                     l2793:	
  6667                           
  6668                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  6669  0F58  30FF               	movlw	255
  6670  0F59  0021               	movlb	1	; select bank1
  6671  0F5A  07D8               	addwf	dtoa@i^(0+128),f
  6672  0F5B  30FF               	movlw	255
  6673  0F5C  3DD9               	addwfc	(dtoa@i+1)^(0+128),f
  6674                           
  6675                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  6676  0F5D  300A               	movlw	10
  6677  0F5E  00A0               	movwf	___aomod@divisor^(0+128)
  6678  0F5F  01A1               	clrf	(___aomod@divisor+1)^(0+128)
  6679  0F60  01A2               	clrf	(___aomod@divisor+2)^(0+128)
  6680  0F61  01A3               	clrf	(___aomod@divisor+3)^(0+128)
  6681  0F62  01A4               	clrf	(___aomod@divisor+4)^(0+128)
  6682  0F63  01A5               	clrf	(___aomod@divisor+5)^(0+128)
  6683  0F64  01A6               	clrf	(___aomod@divisor+6)^(0+128)
  6684  0F65  01A7               	clrf	(___aomod@divisor+7)^(0+128)
  6685  0F66  0850               	movf	dtoa@n^(0+128),w
  6686  0F67  00A8               	movwf	___aomod@dividend^(0+128)
  6687  0F68  0851               	movf	(dtoa@n+1)^(0+128),w
  6688  0F69  00A9               	movwf	(___aomod@dividend+1)^(0+128)
  6689  0F6A  0852               	movf	(dtoa@n+2)^(0+128),w
  6690  0F6B  00AA               	movwf	(___aomod@dividend+2)^(0+128)
  6691  0F6C  0853               	movf	(dtoa@n+3)^(0+128),w
  6692  0F6D  00AB               	movwf	(___aomod@dividend+3)^(0+128)
  6693  0F6E  0854               	movf	(dtoa@n+4)^(0+128),w
  6694  0F6F  00AC               	movwf	(___aomod@dividend+4)^(0+128)
  6695  0F70  0855               	movf	(dtoa@n+5)^(0+128),w
  6696  0F71  00AD               	movwf	(___aomod@dividend+5)^(0+128)
  6697  0F72  0856               	movf	(dtoa@n+6)^(0+128),w
  6698  0F73  00AE               	movwf	(___aomod@dividend+6)^(0+128)
  6699  0F74  0857               	movf	(dtoa@n+7)^(0+128),w
  6700  0F75  00AF               	movwf	(___aomod@dividend+7)^(0+128)
  6701  0F76  318B  23CD  318E   	fcall	___aomod
  6702  0F79  0021               	movlb	1	; select bank1
  6703  0F7A  0821               	movf	(?___aomod+1)^(0+128),w
  6704  0F7B  00B4               	movwf	(abs@a+1)^(0+128)
  6705  0F7C  0820               	movf	?___aomod^(0+128),w
  6706  0F7D  00B3               	movwf	abs@a^(0+128)
  6707  0F7E  3195  25F6  318E   	fcall	_abs
  6708  0F81  0021               	movlb	1	; select bank1
  6709  0F82  0833               	movf	?_abs^(0+128),w
  6710  0F83  3E30               	addlw	48
  6711  0F84  00C4               	movwf	??_dtoa^(0+128)
  6712  0F85  0858               	movf	dtoa@i^(0+128),w
  6713  0F86  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6714  0F87  0086               	movwf	6
  6715  0F88  3002               	movlw	2	; select bank4/5
  6716  0F89  0087               	movwf	7
  6717  0F8A  0844               	movf	??_dtoa^(0+128),w
  6718  0F8B  0081               	movwf	1
  6719                           
  6720                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  6721  0F8C  30FF               	movlw	255
  6722  0F8D  07C9               	addwf	dtoa@p^(0+128),f
  6723  0F8E  30FF               	movlw	255
  6724  0F8F  3DCA               	addwfc	(dtoa@p+1)^(0+128),f
  6725                           
  6726                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  6727  0F90  30FF               	movlw	255
  6728  0F91  07CC               	addwf	dtoa@w^(0+128),f
  6729  0F92  30FF               	movlw	255
  6730  0F93  3DCD               	addwfc	(dtoa@w+1)^(0+128),f
  6731                           
  6732                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  6733  0F94  300A               	movlw	10
  6734  0F95  00A0               	movwf	___aodiv@divisor^(0+128)
  6735  0F96  01A1               	clrf	(___aodiv@divisor+1)^(0+128)
  6736  0F97  01A2               	clrf	(___aodiv@divisor+2)^(0+128)
  6737  0F98  01A3               	clrf	(___aodiv@divisor+3)^(0+128)
  6738  0F99  01A4               	clrf	(___aodiv@divisor+4)^(0+128)
  6739  0F9A  01A5               	clrf	(___aodiv@divisor+5)^(0+128)
  6740  0F9B  01A6               	clrf	(___aodiv@divisor+6)^(0+128)
  6741  0F9C  01A7               	clrf	(___aodiv@divisor+7)^(0+128)
  6742  0F9D  0850               	movf	dtoa@n^(0+128),w
  6743  0F9E  00A8               	movwf	___aodiv@dividend^(0+128)
  6744  0F9F  0851               	movf	(dtoa@n+1)^(0+128),w
  6745  0FA0  00A9               	movwf	(___aodiv@dividend+1)^(0+128)
  6746  0FA1  0852               	movf	(dtoa@n+2)^(0+128),w
  6747  0FA2  00AA               	movwf	(___aodiv@dividend+2)^(0+128)
  6748  0FA3  0853               	movf	(dtoa@n+3)^(0+128),w
  6749  0FA4  00AB               	movwf	(___aodiv@dividend+3)^(0+128)
  6750  0FA5  0854               	movf	(dtoa@n+4)^(0+128),w
  6751  0FA6  00AC               	movwf	(___aodiv@dividend+4)^(0+128)
  6752  0FA7  0855               	movf	(dtoa@n+5)^(0+128),w
  6753  0FA8  00AD               	movwf	(___aodiv@dividend+5)^(0+128)
  6754  0FA9  0856               	movf	(dtoa@n+6)^(0+128),w
  6755  0FAA  00AE               	movwf	(___aodiv@dividend+6)^(0+128)
  6756  0FAB  0857               	movf	(dtoa@n+7)^(0+128),w
  6757  0FAC  00AF               	movwf	(___aodiv@dividend+7)^(0+128)
  6758  0FAD  318C  24AC  318E   	fcall	___aodiv
  6759  0FB0  0021               	movlb	1	; select bank1
  6760  0FB1  0820               	movf	?___aodiv^(0+128),w
  6761  0FB2  00D0               	movwf	dtoa@n^(0+128)
  6762  0FB3  0821               	movf	(?___aodiv+1)^(0+128),w
  6763  0FB4  00D1               	movwf	(dtoa@n+1)^(0+128)
  6764  0FB5  0822               	movf	(?___aodiv+2)^(0+128),w
  6765  0FB6  00D2               	movwf	(dtoa@n+2)^(0+128)
  6766  0FB7  0823               	movf	(?___aodiv+3)^(0+128),w
  6767  0FB8  00D3               	movwf	(dtoa@n+3)^(0+128)
  6768  0FB9  0824               	movf	(?___aodiv+4)^(0+128),w
  6769  0FBA  00D4               	movwf	(dtoa@n+4)^(0+128)
  6770  0FBB  0825               	movf	(?___aodiv+5)^(0+128),w
  6771  0FBC  00D5               	movwf	(dtoa@n+5)^(0+128)
  6772  0FBD  0826               	movf	(?___aodiv+6)^(0+128),w
  6773  0FBE  00D6               	movwf	(dtoa@n+6)^(0+128)
  6774  0FBF  0827               	movf	(?___aodiv+7)^(0+128),w
  6775  0FC0  00D7               	movwf	(dtoa@n+7)^(0+128)
  6776  0FC1                     l630:	
  6777                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 305:     }
  6778                           
  6779                           
  6780                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6781  0FC1  0021               	movlb	1	; select bank1
  6782  0FC2  0859               	movf	(dtoa@i+1)^(0+128),w
  6783  0FC3  3A80               	xorlw	128
  6784  0FC4  00C4               	movwf	??_dtoa^(0+128)
  6785  0FC5  3080               	movlw	128
  6786  0FC6  0244               	subwf	??_dtoa^(0+128),w
  6787  0FC7  1D03               	skipz
  6788  0FC8  2FCB               	goto	u2925
  6789  0FC9  3001               	movlw	1
  6790  0FCA  0258               	subwf	dtoa@i^(0+128),w
  6791  0FCB                     u2925:	
  6792  0FCB  1803               	btfsc	3,0
  6793  0FCC  2F33               	goto	l2803
  6794  0FCD                     l2811:	
  6795                           
  6796                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  6797  0FCD  0021               	movlb	1	; select bank1
  6798  0FCE  084E               	movf	dtoa@s^(0+128),w
  6799  0FCF  044F               	iorwf	(dtoa@s+1)^(0+128),w
  6800  0FD0  1D03               	btfss	3,2
  6801  0FD1  2FD5               	goto	l2815
  6802  0FD2  0020               	movlb	0	; select bank0
  6803  0FD3  1D60               	btfss	_flags,2
  6804  0FD4  2FED               	goto	l2825
  6805  0FD5                     l2815:	
  6806                           
  6807                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  6808  0FD5  30FF               	movlw	255
  6809  0FD6  0021               	movlb	1	; select bank1
  6810  0FD7  07D8               	addwf	dtoa@i^(0+128),f
  6811  0FD8  30FF               	movlw	255
  6812  0FD9  3DD9               	addwfc	(dtoa@i+1)^(0+128),f
  6813                           
  6814                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  6815  0FDA  084E               	movf	dtoa@s^(0+128),w
  6816  0FDB  044F               	iorwf	(dtoa@s+1)^(0+128),w
  6817  0FDC  1D03               	btfss	3,2
  6818  0FDD  2FE0               	goto	l2821
  6819  0FDE  302B               	movlw	43
  6820  0FDF  2FE1               	goto	L2
  6821  0FE0                     l2821:	
  6822  0FE0  302D               	movlw	45
  6823  0FE1                     L2:	
  6824  0FE1  00C7               	movwf	_dtoa$973^(0+128)
  6825  0FE2  3000               	movlw	0
  6826  0FE3  00C8               	movwf	(_dtoa$973^(0+128)+1)
  6827  0FE4  0847               	movf	_dtoa$973^(0+128),w
  6828  0FE5  00C4               	movwf	??_dtoa^(0+128)
  6829  0FE6  0858               	movf	dtoa@i^(0+128),w
  6830  0FE7  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6831  0FE8  0086               	movwf	6
  6832  0FE9  3002               	movlw	2	; select bank4/5
  6833  0FEA  0087               	movwf	7
  6834  0FEB  0844               	movf	??_dtoa^(0+128),w
  6835  0FEC  0081               	movwf	1
  6836  0FED                     l2825:	
  6837                           
  6838                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  6839  0FED  0021               	movlb	1	; select bank1
  6840  0FEE  0858               	movf	dtoa@i^(0+128),w
  6841  0FEF  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6842  0FF0  00C4               	movwf	??_dtoa^(0+128)
  6843  0FF1  0844               	movf	??_dtoa^(0+128),w
  6844  0FF2  00B3               	movwf	pad@buf^(0+128)
  6845  0FF3  084D               	movf	(dtoa@w+1)^(0+128),w
  6846  0FF4  00B5               	movwf	(pad@p+1)^(0+128)
  6847  0FF5  084C               	movf	dtoa@w^(0+128),w
  6848  0FF6  00B4               	movwf	pad@p^(0+128)
  6849  0FF7  084B               	movf	dtoa@fp^(0+128),w
  6850  0FF8  3188  2076         	fcall	_pad
  6851  0FFA  0021               	movlb	1	; select bank1
  6852  0FFB  0834               	movf	(?_pad+1)^(0+128),w
  6853  0FFC  00BD               	movwf	(?_dtoa+1)^(0+128)
  6854  0FFD  0833               	movf	?_pad^(0+128),w
  6855  0FFE  00BC               	movwf	?_dtoa^(0+128)
  6856  0FFF  0008               	return
  6857  1000                     __end_of_dtoa:	
  6858                           
  6859                           	psect	text10
  6860  0876                     __ptext10:	
  6861 ;; *************** function _pad *****************
  6862 ;; Defined at:
  6863 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6864 ;; Parameters:    Size  Location     Type
  6865 ;;  fp              1    wreg     PTR struct _IO_FILE
  6866 ;;		 -> NULL(0), 
  6867 ;;  buf             1   19[BANK1 ] PTR unsigned char 
  6868 ;;		 -> dbuf(32), 
  6869 ;;  p               2   20[BANK1 ] int 
  6870 ;; Auto vars:     Size  Location     Type
  6871 ;;  fp              1   27[BANK1 ] PTR struct _IO_FILE
  6872 ;;		 -> NULL(0), 
  6873 ;;  w               2   25[BANK1 ] int 
  6874 ;;  i               2   23[BANK1 ] int 
  6875 ;; Return value:  Size  Location     Type
  6876 ;;                  2   19[BANK1 ] int 
  6877 ;; Registers used:
  6878 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6879 ;; Tracked objects:
  6880 ;;		On entry : 0/0
  6881 ;;		On exit  : 0/0
  6882 ;;		Unchanged: 0/0
  6883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6884 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6885 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  6886 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6887 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  6888 ;;Total ram usage:        9 bytes
  6889 ;; Hardware stack levels used:    1
  6890 ;; Hardware stack levels required when called:   10
  6891 ;; This function calls:
  6892 ;;		_fputc
  6893 ;;		_fputs
  6894 ;;		_strlen
  6895 ;; This function is called by:
  6896 ;;		_dtoa
  6897 ;; This function uses a non-reentrant model
  6898 ;;
  6899                           
  6900                           
  6901                           ;psect for function _pad
  6902  0876                     _pad:	
  6903                           
  6904                           ;incstack = 0
  6905                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6906                           ;pad@fp stored from wreg
  6907  0876  0021               	movlb	1	; select bank1
  6908  0877  00BB               	movwf	pad@fp^(0+128)
  6909                           
  6910                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  6911  0878  0020               	movlb	0	; select bank0
  6912  0879  1C60               	btfss	_flags,0
  6913  087A  2887               	goto	l2667
  6914                           
  6915                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  6916  087B  0021               	movlb	1	; select bank1
  6917  087C  0833               	movf	pad@buf^(0+128),w
  6918  087D  00AA               	movwf	fputs@s^(0+128)
  6919  087E  3002               	movlw	2
  6920  087F  00AB               	movwf	(fputs@s+1)^(0+128)
  6921  0880  083B               	movf	pad@fp^(0+128),w
  6922  0881  00B6               	movwf	??_pad^(0+128)
  6923  0882  0836               	movf	??_pad^(0+128),w
  6924  0883  00AC               	movwf	fputs@fp^(0+128)
  6925  0884  3187  27D2  3188   	fcall	_fputs
  6926  0887                     l2667:	
  6927                           
  6928                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  6929  0887  0021               	movlb	1	; select bank1
  6930  0888  1BB5               	btfsc	(pad@p+1)^(0+128),7
  6931  0889  288F               	goto	l2671
  6932  088A  0835               	movf	(pad@p+1)^(0+128),w
  6933  088B  00BA               	movwf	(pad@w+1)^(0+128)
  6934  088C  0834               	movf	pad@p^(0+128),w
  6935  088D  00B9               	movwf	pad@w^(0+128)
  6936  088E  2891               	goto	l613
  6937  088F                     l2671:	
  6938  088F  01B9               	clrf	pad@w^(0+128)
  6939  0890  01BA               	clrf	(pad@w+1)^(0+128)
  6940  0891                     l613:	
  6941                           
  6942                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  6943  0891  01B7               	clrf	pad@i^(0+128)
  6944  0892  01B8               	clrf	(pad@i+1)^(0+128)
  6945  0893                     l2677:	
  6946                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  6947                           
  6948                           
  6949                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  6950  0893  0838               	movf	(pad@i+1)^(0+128),w
  6951  0894  3A80               	xorlw	128
  6952  0895  00B6               	movwf	??_pad^(0+128)
  6953  0896  083A               	movf	(pad@w+1)^(0+128),w
  6954  0897  3A80               	xorlw	128
  6955  0898  0236               	subwf	??_pad^(0+128),w
  6956  0899  1D03               	skipz
  6957  089A  289D               	goto	u2575
  6958  089B  0839               	movf	pad@w^(0+128),w
  6959  089C  0237               	subwf	pad@i^(0+128),w
  6960  089D                     u2575:	
  6961  089D  1803               	btfsc	3,0
  6962  089E  28B1               	goto	l616
  6963                           
  6964                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  6965  089F  3020               	movlw	32
  6966  08A0  0021               	movlb	1	; select bank1
  6967  08A1  00A2               	movwf	fputc@c^(0+128)
  6968  08A2  3000               	movlw	0
  6969  08A3  00A3               	movwf	(fputc@c^(0+128)+1)
  6970  08A4  083B               	movf	pad@fp^(0+128),w
  6971  08A5  00B6               	movwf	??_pad^(0+128)
  6972  08A6  0836               	movf	??_pad^(0+128),w
  6973  08A7  00A4               	movwf	fputc@fp^(0+128)
  6974  08A8  3197  277A  3188   	fcall	_fputc
  6975                           
  6976                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  6977  08AB  3001               	movlw	1
  6978  08AC  0021               	movlb	1	; select bank1
  6979  08AD  07B7               	addwf	pad@i^(0+128),f
  6980  08AE  3000               	movlw	0
  6981  08AF  3DB8               	addwfc	(pad@i+1)^(0+128),f
  6982  08B0  2893               	goto	l2677
  6983  08B1                     l616:	
  6984                           
  6985                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  6986  08B1  0020               	movlb	0	; select bank0
  6987  08B2  1860               	btfsc	_flags,0
  6988  08B3  28C0               	goto	l2681
  6989                           
  6990                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  6991  08B4  0021               	movlb	1	; select bank1
  6992  08B5  0833               	movf	pad@buf^(0+128),w
  6993  08B6  00AA               	movwf	fputs@s^(0+128)
  6994  08B7  3002               	movlw	2
  6995  08B8  00AB               	movwf	(fputs@s+1)^(0+128)
  6996  08B9  083B               	movf	pad@fp^(0+128),w
  6997  08BA  00B6               	movwf	??_pad^(0+128)
  6998  08BB  0836               	movf	??_pad^(0+128),w
  6999  08BC  00AC               	movwf	fputs@fp^(0+128)
  7000  08BD  3187  27D2  3188   	fcall	_fputs
  7001  08C0                     l2681:	
  7002                           
  7003                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  7004  08C0  0021               	movlb	1	; select bank1
  7005  08C1  0833               	movf	pad@buf^(0+128),w
  7006  08C2  3196  260F         	fcall	_strlen
  7007  08C4  0021               	movlb	1	; select bank1
  7008  08C5  0839               	movf	pad@w^(0+128),w
  7009  08C6  0720               	addwf	?_strlen^(0+128),w
  7010  08C7  00B3               	movwf	?_pad^(0+128)
  7011  08C8  083A               	movf	(pad@w+1)^(0+128),w
  7012  08C9  3D21               	addwfc	(?_strlen+1)^(0+128),w
  7013  08CA  00B4               	movwf	(?_pad+1)^(0+128)
  7014  08CB  0008               	return
  7015  08CC                     __end_of_pad:	
  7016                           
  7017                           	psect	text11
  7018  160F                     __ptext11:	
  7019 ;; *************** function _strlen *****************
  7020 ;; Defined at:
  7021 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  7022 ;; Parameters:    Size  Location     Type
  7023 ;;  s               1    wreg     PTR const unsigned char 
  7024 ;;		 -> dbuf(32), 
  7025 ;; Auto vars:     Size  Location     Type
  7026 ;;  s               1    4[BANK1 ] PTR const unsigned char 
  7027 ;;		 -> dbuf(32), 
  7028 ;;  a               1    3[BANK1 ] PTR const unsigned char 
  7029 ;;		 -> dbuf(32), 
  7030 ;; Return value:  Size  Location     Type
  7031 ;;                  2    0[BANK1 ] unsigned int 
  7032 ;; Registers used:
  7033 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7034 ;; Tracked objects:
  7035 ;;		On entry : 0/0
  7036 ;;		On exit  : 0/0
  7037 ;;		Unchanged: 0/0
  7038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7039 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7040 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7041 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7042 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  7043 ;;Total ram usage:        5 bytes
  7044 ;; Hardware stack levels used:    1
  7045 ;; Hardware stack levels required when called:    6
  7046 ;; This function calls:
  7047 ;;		Nothing
  7048 ;; This function is called by:
  7049 ;;		_pad
  7050 ;; This function uses a non-reentrant model
  7051 ;;
  7052                           
  7053                           
  7054                           ;psect for function _strlen
  7055  160F                     _strlen:	
  7056                           
  7057                           ;incstack = 0
  7058                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  7059                           ;strlen@s stored from wreg
  7060  160F  0021               	movlb	1	; select bank1
  7061  1610  00A4               	movwf	strlen@s^(0+128)
  7062  1611  0824               	movf	strlen@s^(0+128),w
  7063  1612  00A2               	movwf	??_strlen^(0+128)
  7064  1613  0822               	movf	??_strlen^(0+128),w
  7065  1614  00A3               	movwf	strlen@a^(0+128)
  7066  1615                     l2657:	
  7067  1615  0824               	movf	strlen@s^(0+128),w
  7068  1616  0086               	movwf	6
  7069  1617  3002               	movlw	2	; select bank4/5
  7070  1618  0087               	movwf	7
  7071  1619  0801               	movf	1,w
  7072  161A  1903               	btfsc	3,2
  7073  161B  2E21               	goto	l2659
  7074  161C  3001               	movlw	1
  7075  161D  00A2               	movwf	??_strlen^(0+128)
  7076  161E  0822               	movf	??_strlen^(0+128),w
  7077  161F  07A4               	addwf	strlen@s^(0+128),f
  7078  1620  2E15               	goto	l2657
  7079  1621                     l2659:	
  7080  1621  0823               	movf	strlen@a^(0+128),w
  7081  1622  0224               	subwf	strlen@s^(0+128),w
  7082  1623  00A0               	movwf	?_strlen^(0+128)
  7083  1624  01A1               	clrf	(?_strlen+1)^(0+128)
  7084  1625  1BA0               	btfsc	?_strlen^(0+128),7
  7085  1626  03A1               	decf	(?_strlen+1)^(0+128),f
  7086  1627  0008               	return
  7087  1628                     __end_of_strlen:	
  7088                           
  7089                           	psect	text12
  7090  07D2                     __ptext12:	
  7091 ;; *************** function _fputs *****************
  7092 ;; Defined at:
  7093 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  7094 ;; Parameters:    Size  Location     Type
  7095 ;;  s               2   10[BANK1 ] PTR const unsigned char 
  7096 ;;		 -> dbuf(32), STR_5(3), hrDisp(13), distanceDisp(11), 
  7097 ;;		 -> speedDisp(8), 
  7098 ;;  fp              1   12[BANK1 ] PTR struct _IO_FILE
  7099 ;;		 -> NULL(0), 
  7100 ;; Auto vars:     Size  Location     Type
  7101 ;;  i               2   17[BANK1 ] int 
  7102 ;;  c               1   16[BANK1 ] unsigned char 
  7103 ;; Return value:  Size  Location     Type
  7104 ;;                  2   10[BANK1 ] int 
  7105 ;; Registers used:
  7106 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7107 ;; Tracked objects:
  7108 ;;		On entry : 0/0
  7109 ;;		On exit  : 0/0
  7110 ;;		Unchanged: 0/0
  7111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7112 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  7113 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  7114 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  7115 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  7116 ;;Total ram usage:        9 bytes
  7117 ;; Hardware stack levels used:    1
  7118 ;; Hardware stack levels required when called:    9
  7119 ;; This function calls:
  7120 ;;		_fputc
  7121 ;; This function is called by:
  7122 ;;		_pad
  7123 ;;		_puts
  7124 ;; This function uses a non-reentrant model
  7125 ;;
  7126                           
  7127                           
  7128                           ;psect for function _fputs
  7129  07D2                     _fputs:	
  7130                           
  7131                           ;incstack = 0
  7132                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7133  07D2  0021               	movlb	1	; select bank1
  7134  07D3  01B1               	clrf	fputs@i^(0+128)
  7135  07D4  01B2               	clrf	(fputs@i+1)^(0+128)
  7136  07D5                     l2647:	
  7137  07D5  082A               	movf	fputs@s^(0+128),w
  7138  07D6  0731               	addwf	fputs@i^(0+128),w
  7139  07D7  0084               	movwf	4
  7140  07D8  082B               	movf	(fputs@s+1)^(0+128),w
  7141  07D9  3D32               	addwfc	(fputs@i+1)^(0+128),w
  7142  07DA  0085               	movwf	5
  7143  07DB  0800               	movf	0,w	;code access
  7144  07DC  00AD               	movwf	??_fputs^(0+128)
  7145  07DD  082D               	movf	??_fputs^(0+128),w
  7146  07DE  00B0               	movwf	fputs@c^(0+128)
  7147  07DF  0830               	movf	fputs@c^(0+128),w
  7148  07E0  1903               	btfsc	3,2
  7149  07E1  2FF6               	goto	l2649
  7150  07E2  0830               	movf	fputs@c^(0+128),w
  7151  07E3  00AD               	movwf	??_fputs^(0+128)
  7152  07E4  01AE               	clrf	(??_fputs^(0+128)+1)
  7153  07E5  082D               	movf	??_fputs^(0+128),w
  7154  07E6  00A2               	movwf	fputc@c^(0+128)
  7155  07E7  082E               	movf	(??_fputs+1)^(0+128),w
  7156  07E8  00A3               	movwf	(fputc@c+1)^(0+128)
  7157  07E9  082C               	movf	fputs@fp^(0+128),w
  7158  07EA  00AF               	movwf	(??_fputs+2)^(0+128)
  7159  07EB  082F               	movf	(??_fputs+2)^(0+128),w
  7160  07EC  00A4               	movwf	fputc@fp^(0+128)
  7161  07ED  3197  277A  3187   	fcall	_fputc
  7162  07F0  3001               	movlw	1
  7163  07F1  0021               	movlb	1	; select bank1
  7164  07F2  07B1               	addwf	fputs@i^(0+128),f
  7165  07F3  3000               	movlw	0
  7166  07F4  3DB2               	addwfc	(fputs@i+1)^(0+128),f
  7167  07F5  2FD5               	goto	l2647
  7168  07F6                     l2649:	
  7169  07F6  0832               	movf	(fputs@i+1)^(0+128),w
  7170  07F7  00AB               	movwf	(?_fputs+1)^(0+128)
  7171  07F8  0831               	movf	fputs@i^(0+128),w
  7172  07F9  00AA               	movwf	?_fputs^(0+128)
  7173  07FA  0008               	return
  7174  07FB                     __end_of_fputs:	
  7175                           
  7176                           	psect	text13
  7177  177A                     __ptext13:	
  7178 ;; *************** function _fputc *****************
  7179 ;; Defined at:
  7180 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  7181 ;; Parameters:    Size  Location     Type
  7182 ;;  c               2    2[BANK1 ] int 
  7183 ;;  fp              1    4[BANK1 ] PTR struct _IO_FILE
  7184 ;;		 -> NULL(0), 
  7185 ;; Auto vars:     Size  Location     Type
  7186 ;;		None
  7187 ;; Return value:  Size  Location     Type
  7188 ;;                  2    2[BANK1 ] int 
  7189 ;; Registers used:
  7190 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7191 ;; Tracked objects:
  7192 ;;		On entry : 0/0
  7193 ;;		On exit  : 0/0
  7194 ;;		Unchanged: 0/0
  7195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7196 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  7197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7198 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  7199 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  7200 ;;Total ram usage:        8 bytes
  7201 ;; Hardware stack levels used:    1
  7202 ;; Hardware stack levels required when called:    8
  7203 ;; This function calls:
  7204 ;;		_putch
  7205 ;; This function is called by:
  7206 ;;		_pad
  7207 ;;		_vfpfcnvrt
  7208 ;;		_fputs
  7209 ;;		_puts
  7210 ;; This function uses a non-reentrant model
  7211 ;;
  7212                           
  7213                           
  7214                           ;psect for function _fputc
  7215  177A                     _fputc:	
  7216                           
  7217                           ;incstack = 0
  7218                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7219  177A  0021               	movlb	1	; select bank1
  7220  177B  0824               	movf	fputc@fp^(0+128),w
  7221  177C  1D03               	btfss	3,2
  7222  177D  0824               	movf	fputc@fp^(0+128),w
  7223  177E  1D03               	btfss	3,2
  7224  177F  2F85               	goto	l2631
  7225  1780  0822               	movf	fputc@c^(0+128),w
  7226  1781  3194  24CA  3197   	fcall	_putch
  7227  1784  2FB1               	goto	l2637
  7228  1785                     l2631:	
  7229  1785  0824               	movf	fputc@fp^(0+128),w
  7230  1786  3E03               	addlw	3
  7231  1787  0086               	movwf	6
  7232  1788  0187               	clrf	7
  7233  1789  0016               	moviw fsr1++
  7234  178A  0401               	iorwf	1,w
  7235  178B  1903               	btfsc	3,2
  7236  178C  2FA8               	goto	l2635
  7237  178D  0824               	movf	fputc@fp^(0+128),w
  7238  178E  3E03               	addlw	3
  7239  178F  0086               	movwf	6
  7240  1790  0187               	clrf	7
  7241  1791  3F40               	moviw [0]fsr1
  7242  1792  00A5               	movwf	??_fputc^(0+128)
  7243  1793  3F41               	moviw [1]fsr1
  7244  1794  00A6               	movwf	(??_fputc^(0+128)+1)
  7245  1795  0A24               	incf	fputc@fp^(0+128),w
  7246  1796  0086               	movwf	6
  7247  1797  0187               	clrf	7
  7248  1798  3F40               	moviw [0]fsr1
  7249  1799  00A7               	movwf	(??_fputc+2)^(0+128)
  7250  179A  3F41               	moviw [1]fsr1
  7251  179B  00A8               	movwf	((??_fputc+2)^(0+128)+1)
  7252  179C  0828               	movf	(??_fputc+3)^(0+128),w
  7253  179D  3A80               	xorlw	128
  7254  179E  00A9               	movwf	(??_fputc+4)^(0+128)
  7255  179F  0826               	movf	(??_fputc+1)^(0+128),w
  7256  17A0  3A80               	xorlw	128
  7257  17A1  0229               	subwf	(??_fputc+4)^(0+128),w
  7258  17A2  1D03               	skipz
  7259  17A3  2FA6               	goto	u2525
  7260  17A4  0825               	movf	??_fputc^(0+128),w
  7261  17A5  0227               	subwf	(??_fputc+2)^(0+128),w
  7262  17A6                     u2525:	
  7263  17A6  1803               	skipnc
  7264  17A7  2FB1               	goto	l2637
  7265  17A8                     l2635:	
  7266  17A8  0021               	movlb	1	; select bank1
  7267  17A9  0A24               	incf	fputc@fp^(0+128),w
  7268  17AA  0086               	movwf	6
  7269  17AB  0187               	clrf	7
  7270  17AC  3001               	movlw	1
  7271  17AD  0781               	addwf	1,f
  7272  17AE  3141               	addfsr 1,1
  7273  17AF  1803               	skipnc
  7274  17B0  0A81               	incf	1,f
  7275  17B1                     l2637:	
  7276  17B1  0021               	movlb	1	; select bank1
  7277  17B2  0822               	movf	fputc@c^(0+128),w
  7278  17B3  00A5               	movwf	??_fputc^(0+128)
  7279  17B4  01A6               	clrf	(??_fputc^(0+128)+1)
  7280  17B5  0825               	movf	??_fputc^(0+128),w
  7281  17B6  00A2               	movwf	?_fputc^(0+128)
  7282  17B7  0826               	movf	(??_fputc+1)^(0+128),w
  7283  17B8  00A3               	movwf	(?_fputc+1)^(0+128)
  7284  17B9  0008               	return
  7285  17BA                     __end_of_fputc:	
  7286                           
  7287                           	psect	text14
  7288  14CA                     __ptext14:	
  7289 ;; *************** function _putch *****************
  7290 ;; Defined at:
  7291 ;;		line 151 in file "mcc_generated_files/eusart.c"
  7292 ;; Parameters:    Size  Location     Type
  7293 ;;  txData          1    wreg     unsigned char 
  7294 ;; Auto vars:     Size  Location     Type
  7295 ;;  txData          1    1[BANK1 ] unsigned char 
  7296 ;; Return value:  Size  Location     Type
  7297 ;;                  1    wreg      void 
  7298 ;; Registers used:
  7299 ;;		wreg, status,2, status,0, pclath, cstack
  7300 ;; Tracked objects:
  7301 ;;		On entry : 0/0
  7302 ;;		On exit  : 0/0
  7303 ;;		Unchanged: 0/0
  7304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7306 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7308 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7309 ;;Total ram usage:        1 bytes
  7310 ;; Hardware stack levels used:    1
  7311 ;; Hardware stack levels required when called:    7
  7312 ;; This function calls:
  7313 ;;		_EUSART_Write
  7314 ;; This function is called by:
  7315 ;;		_fputc
  7316 ;; This function uses a non-reentrant model
  7317 ;;
  7318                           
  7319                           
  7320                           ;psect for function _putch
  7321  14CA                     _putch:	
  7322                           
  7323                           ;incstack = 0
  7324                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  7325                           ;putch@txData stored from wreg
  7326  14CA  0021               	movlb	1	; select bank1
  7327  14CB  00A1               	movwf	putch@txData^(0+128)
  7328                           
  7329                           ;mcc_generated_files/eusart.c: 151: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 152: {;mcc_generated_files/eusart.c: 153:     EUSART_Write(txData);
  7330  14CC  0821               	movf	putch@txData^(0+128),w
  7331  14CD  3195  2530         	fcall	_EUSART_Write
  7332  14CF  0008               	return
  7333  14D0                     __end_of_putch:	
  7334                           
  7335                           	psect	text15
  7336  1530                     __ptext15:	
  7337 ;; *************** function _EUSART_Write *****************
  7338 ;; Defined at:
  7339 ;;		line 137 in file "mcc_generated_files/eusart.c"
  7340 ;; Parameters:    Size  Location     Type
  7341 ;;  txData          1    wreg     unsigned char 
  7342 ;; Auto vars:     Size  Location     Type
  7343 ;;  txData          1    0[BANK1 ] unsigned char 
  7344 ;; Return value:  Size  Location     Type
  7345 ;;                  1    wreg      void 
  7346 ;; Registers used:
  7347 ;;		wreg
  7348 ;; Tracked objects:
  7349 ;;		On entry : 0/0
  7350 ;;		On exit  : 0/0
  7351 ;;		Unchanged: 0/0
  7352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7354 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7356 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7357 ;;Total ram usage:        1 bytes
  7358 ;; Hardware stack levels used:    1
  7359 ;; Hardware stack levels required when called:    6
  7360 ;; This function calls:
  7361 ;;		Nothing
  7362 ;; This function is called by:
  7363 ;;		_putch
  7364 ;;		_setCursor
  7365 ;;		_backlightBrightness
  7366 ;; This function uses a non-reentrant model
  7367 ;;
  7368                           
  7369                           
  7370                           ;psect for function _EUSART_Write
  7371  1530                     _EUSART_Write:	
  7372                           
  7373                           ;incstack = 0
  7374                           ; Regs used in _EUSART_Write: [wreg]
  7375                           ;EUSART_Write@txData stored from wreg
  7376  1530  0021               	movlb	1	; select bank1
  7377  1531  00A0               	movwf	EUSART_Write@txData^(0+128)
  7378  1532                     l69:	
  7379                           ;mcc_generated_files/eusart.c: 140:     {;mcc_generated_files/eusart.c: 141:     }
  7380                           
  7381                           
  7382                           ;mcc_generated_files/eusart.c: 139:     while(0 == PIR1bits.TXIF)
  7383  1532  0020               	movlb	0	; select bank0
  7384  1533  1E10               	btfss	16,4	;volatile
  7385  1534  2D32               	goto	l69
  7386                           
  7387                           ;mcc_generated_files/eusart.c: 143:     TX1REG = txData;
  7388  1535  0021               	movlb	1	; select bank1
  7389  1536  0820               	movf	EUSART_Write@txData^(0+128),w
  7390  1537  0023               	movlb	3	; select bank3
  7391  1538  009A               	movwf	26	;volatile
  7392  1539  0008               	return
  7393  153A                     __end_of_EUSART_Write:	
  7394                           
  7395                           	psect	text16
  7396  15F6                     __ptext16:	
  7397 ;; *************** function _abs *****************
  7398 ;; Defined at:
  7399 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  7400 ;; Parameters:    Size  Location     Type
  7401 ;;  a               2   19[BANK1 ] int 
  7402 ;; Auto vars:     Size  Location     Type
  7403 ;;		None
  7404 ;; Return value:  Size  Location     Type
  7405 ;;                  2   19[BANK1 ] int 
  7406 ;; Registers used:
  7407 ;;		wreg, status,2, status,0
  7408 ;; Tracked objects:
  7409 ;;		On entry : 0/0
  7410 ;;		On exit  : 0/0
  7411 ;;		Unchanged: 0/0
  7412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7413 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7415 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7416 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  7417 ;;Total ram usage:        4 bytes
  7418 ;; Hardware stack levels used:    1
  7419 ;; Hardware stack levels required when called:    6
  7420 ;; This function calls:
  7421 ;;		Nothing
  7422 ;; This function is called by:
  7423 ;;		_dtoa
  7424 ;; This function uses a non-reentrant model
  7425 ;;
  7426                           
  7427                           
  7428                           ;psect for function _abs
  7429  15F6                     _abs:	
  7430                           
  7431                           ;incstack = 0
  7432                           ; Regs used in _abs: [wreg+status,2+status,0]
  7433  15F6  0021               	movlb	1	; select bank1
  7434  15F7  0834               	movf	(abs@a+1)^(0+128),w
  7435  15F8  3A80               	xorlw	128
  7436  15F9  00B5               	movwf	??_abs^(0+128)
  7437  15FA  3080               	movlw	128
  7438  15FB  0235               	subwf	??_abs^(0+128),w
  7439  15FC  1D03               	skipz
  7440  15FD  2E00               	goto	u2595
  7441  15FE  3001               	movlw	1
  7442  15FF  0233               	subwf	abs@a^(0+128),w
  7443  1600                     u2595:	
  7444  1600  1803               	skipnc
  7445  1601  0008               	return
  7446  1602  0021               	movlb	1	; select bank1
  7447  1603  0933               	comf	abs@a^(0+128),w
  7448  1604  00B5               	movwf	??_abs^(0+128)
  7449  1605  0934               	comf	(abs@a+1)^(0+128),w
  7450  1606  00B6               	movwf	(??_abs^(0+128)+1)
  7451  1607  0AB5               	incf	??_abs^(0+128),f
  7452  1608  1903               	skipnz
  7453  1609  0AB6               	incf	(??_abs^(0+128)+1),f
  7454  160A  0835               	movf	??_abs^(0+128),w
  7455  160B  00B3               	movwf	?_abs^(0+128)
  7456  160C  0836               	movf	(??_abs+1)^(0+128),w
  7457  160D  00B4               	movwf	(?_abs+1)^(0+128)
  7458  160E  0008               	return
  7459  160F                     __end_of_abs:	
  7460                           
  7461                           	psect	text17
  7462  0BCD                     __ptext17:	
  7463 ;; *************** function ___aomod *****************
  7464 ;; Defined at:
  7465 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  7466 ;; Parameters:    Size  Location     Type
  7467 ;;  divisor         8    0[BANK1 ] long long 
  7468 ;;  dividend        8    8[BANK1 ] long long 
  7469 ;; Auto vars:     Size  Location     Type
  7470 ;;  sign            1   18[BANK1 ] unsigned char 
  7471 ;;  counter         1   17[BANK1 ] unsigned char 
  7472 ;; Return value:  Size  Location     Type
  7473 ;;                  8    0[BANK1 ] long long 
  7474 ;; Registers used:
  7475 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7476 ;; Tracked objects:
  7477 ;;		On entry : 0/0
  7478 ;;		On exit  : 0/0
  7479 ;;		Unchanged: 0/0
  7480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7481 ;;      Params:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  7482 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7483 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7484 ;;      Totals:         0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0
  7485 ;;Total ram usage:       19 bytes
  7486 ;; Hardware stack levels used:    1
  7487 ;; Hardware stack levels required when called:    6
  7488 ;; This function calls:
  7489 ;;		Nothing
  7490 ;; This function is called by:
  7491 ;;		_dtoa
  7492 ;; This function uses a non-reentrant model
  7493 ;;
  7494                           
  7495                           
  7496                           ;psect for function ___aomod
  7497  0BCD                     ___aomod:	
  7498                           
  7499                           ;incstack = 0
  7500                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  7501  0BCD  0021               	movlb	1	; select bank1
  7502  0BCE  01B2               	clrf	___aomod@sign^(0+128)
  7503  0BCF  30A8               	movlw	low ___aomod@dividend
  7504  0BD0  0086               	movwf	6
  7505  0BD1  3000               	movlw	high ___aomod@dividend
  7506  0BD2  0087               	movwf	7
  7507  0BD3  3F47               	moviw [7]fsr1
  7508  0BD4  00B0               	movwf	??___aomod^(0+128)
  7509  0BD5  1FB0               	btfss	??___aomod^(0+128),7
  7510  0BD6  2BF9               	goto	l2733
  7511  0BD7  0021               	movlb	1	; select bank1
  7512  0BD8  09A8               	comf	___aomod@dividend^(0+128),f
  7513  0BD9  09A9               	comf	(___aomod@dividend+1)^(0+128),f
  7514  0BDA  09AA               	comf	(___aomod@dividend+2)^(0+128),f
  7515  0BDB  09AB               	comf	(___aomod@dividend+3)^(0+128),f
  7516  0BDC  09AC               	comf	(___aomod@dividend+4)^(0+128),f
  7517  0BDD  09AD               	comf	(___aomod@dividend+5)^(0+128),f
  7518  0BDE  09AE               	comf	(___aomod@dividend+6)^(0+128),f
  7519  0BDF  09AF               	comf	(___aomod@dividend+7)^(0+128),f
  7520  0BE0  0AA8               	incf	___aomod@dividend^(0+128),f
  7521  0BE1  1D03               	skipz
  7522  0BE2  2BF6               	goto	u272lld
  7523  0BE3  0AA9               	incf	(___aomod@dividend+1)^(0+128),f
  7524  0BE4  1D03               	skipz
  7525  0BE5  2BF6               	goto	u272lld
  7526  0BE6  0AAA               	incf	(___aomod@dividend+2)^(0+128),f
  7527  0BE7  1D03               	skipz
  7528  0BE8  2BF6               	goto	u272lld
  7529  0BE9  0AAB               	incf	(___aomod@dividend+3)^(0+128),f
  7530  0BEA  1D03               	skipz
  7531  0BEB  2BF6               	goto	u272lld
  7532  0BEC  0AAC               	incf	(___aomod@dividend+4)^(0+128),f
  7533  0BED  1D03               	skipz
  7534  0BEE  2BF6               	goto	u272lld
  7535  0BEF  0AAD               	incf	(___aomod@dividend+5)^(0+128),f
  7536  0BF0  1D03               	skipz
  7537  0BF1  2BF6               	goto	u272lld
  7538  0BF2  0AAE               	incf	(___aomod@dividend+6)^(0+128),f
  7539  0BF3  1D03               	skipz
  7540  0BF4  2BF6               	goto	u272lld
  7541  0BF5  0AAF               	incf	(___aomod@dividend+7)^(0+128),f
  7542  0BF6                     u272lld:	
  7543  0BF6  0021               	movlb	1	; select bank1
  7544  0BF7  01B2               	clrf	___aomod@sign^(0+128)
  7545  0BF8  0AB2               	incf	___aomod@sign^(0+128),f
  7546  0BF9                     l2733:	
  7547  0BF9  30A0               	movlw	low ___aomod@divisor
  7548  0BFA  0086               	movwf	6
  7549  0BFB  3000               	movlw	high ___aomod@divisor
  7550  0BFC  0087               	movwf	7
  7551  0BFD  3F47               	moviw [7]fsr1
  7552  0BFE  0021               	movlb	1	; select bank1
  7553  0BFF  00B0               	movwf	??___aomod^(0+128)
  7554  0C00  1FB0               	btfss	??___aomod^(0+128),7
  7555  0C01  2C21               	goto	l2737
  7556  0C02  0021               	movlb	1	; select bank1
  7557  0C03  09A0               	comf	___aomod@divisor^(0+128),f
  7558  0C04  09A1               	comf	(___aomod@divisor+1)^(0+128),f
  7559  0C05  09A2               	comf	(___aomod@divisor+2)^(0+128),f
  7560  0C06  09A3               	comf	(___aomod@divisor+3)^(0+128),f
  7561  0C07  09A4               	comf	(___aomod@divisor+4)^(0+128),f
  7562  0C08  09A5               	comf	(___aomod@divisor+5)^(0+128),f
  7563  0C09  09A6               	comf	(___aomod@divisor+6)^(0+128),f
  7564  0C0A  09A7               	comf	(___aomod@divisor+7)^(0+128),f
  7565  0C0B  0AA0               	incf	___aomod@divisor^(0+128),f
  7566  0C0C  1D03               	skipz
  7567  0C0D  2C21               	goto	l2737
  7568  0C0E  0AA1               	incf	(___aomod@divisor+1)^(0+128),f
  7569  0C0F  1D03               	skipz
  7570  0C10  2C21               	goto	l2737
  7571  0C11  0AA2               	incf	(___aomod@divisor+2)^(0+128),f
  7572  0C12  1D03               	skipz
  7573  0C13  2C21               	goto	l2737
  7574  0C14  0AA3               	incf	(___aomod@divisor+3)^(0+128),f
  7575  0C15  1D03               	skipz
  7576  0C16  2C21               	goto	l2737
  7577  0C17  0AA4               	incf	(___aomod@divisor+4)^(0+128),f
  7578  0C18  1D03               	skipz
  7579  0C19  2C21               	goto	l2737
  7580  0C1A  0AA5               	incf	(___aomod@divisor+5)^(0+128),f
  7581  0C1B  1D03               	skipz
  7582  0C1C  2C21               	goto	l2737
  7583  0C1D  0AA6               	incf	(___aomod@divisor+6)^(0+128),f
  7584  0C1E  1D03               	skipz
  7585  0C1F  2C21               	goto	l2737
  7586  0C20  0AA7               	incf	(___aomod@divisor+7)^(0+128),f
  7587  0C21                     l2737:	
  7588  0C21  0021               	movlb	1	; select bank1
  7589  0C22  0820               	movf	___aomod@divisor^(0+128),w
  7590  0C23  0421               	iorwf	(___aomod@divisor+1)^(0+128),w
  7591  0C24  0422               	iorwf	(___aomod@divisor+2)^(0+128),w
  7592  0C25  0423               	iorwf	(___aomod@divisor+3)^(0+128),w
  7593  0C26  0424               	iorwf	(___aomod@divisor+4)^(0+128),w
  7594  0C27  0425               	iorwf	(___aomod@divisor+5)^(0+128),w
  7595  0C28  0426               	iorwf	(___aomod@divisor+6)^(0+128),w
  7596  0C29  0427               	iorwf	(___aomod@divisor+7)^(0+128),w
  7597  0C2A  1903               	skipnz
  7598  0C2B  2C79               	goto	l2753
  7599  0C2C  01B1               	clrf	___aomod@counter^(0+128)
  7600  0C2D  0AB1               	incf	___aomod@counter^(0+128),f
  7601  0C2E                     l2745:	
  7602  0C2E  1BA7               	btfsc	(___aomod@divisor+7)^(0+128),7
  7603  0C2F  2C3D               	goto	l2747
  7604  0C30  35A0               	lslf	___aomod@divisor^(0+128),f
  7605  0C31  0DA1               	rlf	(___aomod@divisor+1)^(0+128),f
  7606  0C32  0DA2               	rlf	(___aomod@divisor+2)^(0+128),f
  7607  0C33  0DA3               	rlf	(___aomod@divisor+3)^(0+128),f
  7608  0C34  0DA4               	rlf	(___aomod@divisor+4)^(0+128),f
  7609  0C35  0DA5               	rlf	(___aomod@divisor+5)^(0+128),f
  7610  0C36  0DA6               	rlf	(___aomod@divisor+6)^(0+128),f
  7611  0C37  0DA7               	rlf	(___aomod@divisor+7)^(0+128),f
  7612  0C38  3001               	movlw	1
  7613  0C39  00B0               	movwf	??___aomod^(0+128)
  7614  0C3A  0830               	movf	??___aomod^(0+128),w
  7615  0C3B  07B1               	addwf	___aomod@counter^(0+128),f
  7616  0C3C  2C2E               	goto	l2745
  7617  0C3D                     l2747:	
  7618  0C3D  0827               	movf	(___aomod@divisor+7)^(0+128),w
  7619  0C3E  022F               	subwf	(___aomod@dividend+7)^(0+128),w
  7620  0C3F  1D03               	skipz
  7621  0C40  2C5B               	goto	u2775
  7622  0C41  0826               	movf	(___aomod@divisor+6)^(0+128),w
  7623  0C42  022E               	subwf	(___aomod@dividend+6)^(0+128),w
  7624  0C43  1D03               	skipz
  7625  0C44  2C5B               	goto	u2775
  7626  0C45  0825               	movf	(___aomod@divisor+5)^(0+128),w
  7627  0C46  022D               	subwf	(___aomod@dividend+5)^(0+128),w
  7628  0C47  1D03               	skipz
  7629  0C48  2C5B               	goto	u2775
  7630  0C49  0824               	movf	(___aomod@divisor+4)^(0+128),w
  7631  0C4A  022C               	subwf	(___aomod@dividend+4)^(0+128),w
  7632  0C4B  1D03               	skipz
  7633  0C4C  2C5B               	goto	u2775
  7634  0C4D  0823               	movf	(___aomod@divisor+3)^(0+128),w
  7635  0C4E  022B               	subwf	(___aomod@dividend+3)^(0+128),w
  7636  0C4F  1D03               	skipz
  7637  0C50  2C5B               	goto	u2775
  7638  0C51  0822               	movf	(___aomod@divisor+2)^(0+128),w
  7639  0C52  022A               	subwf	(___aomod@dividend+2)^(0+128),w
  7640  0C53  1D03               	skipz
  7641  0C54  2C5B               	goto	u2775
  7642  0C55  0821               	movf	(___aomod@divisor+1)^(0+128),w
  7643  0C56  0229               	subwf	(___aomod@dividend+1)^(0+128),w
  7644  0C57  1D03               	skipz
  7645  0C58  2C5B               	goto	u2775
  7646  0C59  0820               	movf	___aomod@divisor^(0+128),w
  7647  0C5A  0228               	subwf	___aomod@dividend^(0+128),w
  7648  0C5B                     u2775:	
  7649  0C5B  1C03               	skipc
  7650  0C5C  2C6D               	goto	l2751
  7651  0C5D  0820               	movf	___aomod@divisor^(0+128),w
  7652  0C5E  02A8               	subwf	___aomod@dividend^(0+128),f
  7653  0C5F  0821               	movf	(___aomod@divisor+1)^(0+128),w
  7654  0C60  3BA9               	subwfb	(___aomod@dividend+1)^(0+128),f
  7655  0C61  0822               	movf	(___aomod@divisor+2)^(0+128),w
  7656  0C62  3BAA               	subwfb	(___aomod@dividend+2)^(0+128),f
  7657  0C63  0823               	movf	(___aomod@divisor+3)^(0+128),w
  7658  0C64  3BAB               	subwfb	(___aomod@dividend+3)^(0+128),f
  7659  0C65  0824               	movf	(___aomod@divisor+4)^(0+128),w
  7660  0C66  3BAC               	subwfb	(___aomod@dividend+4)^(0+128),f
  7661  0C67  0825               	movf	(___aomod@divisor+5)^(0+128),w
  7662  0C68  3BAD               	subwfb	(___aomod@dividend+5)^(0+128),f
  7663  0C69  0826               	movf	(___aomod@divisor+6)^(0+128),w
  7664  0C6A  3BAE               	subwfb	(___aomod@dividend+6)^(0+128),f
  7665  0C6B  0827               	movf	(___aomod@divisor+7)^(0+128),w
  7666  0C6C  3BAF               	subwfb	(___aomod@dividend+7)^(0+128),f
  7667  0C6D                     l2751:	
  7668  0C6D  36A7               	lsrf	(___aomod@divisor+7)^(0+128),f
  7669  0C6E  0CA6               	rrf	(___aomod@divisor+6)^(0+128),f
  7670  0C6F  0CA5               	rrf	(___aomod@divisor+5)^(0+128),f
  7671  0C70  0CA4               	rrf	(___aomod@divisor+4)^(0+128),f
  7672  0C71  0CA3               	rrf	(___aomod@divisor+3)^(0+128),f
  7673  0C72  0CA2               	rrf	(___aomod@divisor+2)^(0+128),f
  7674  0C73  0CA1               	rrf	(___aomod@divisor+1)^(0+128),f
  7675  0C74  0CA0               	rrf	___aomod@divisor^(0+128),f
  7676  0C75  3001               	movlw	1
  7677  0C76  02B1               	subwf	___aomod@counter^(0+128),f
  7678  0C77  1D03               	btfss	3,2
  7679  0C78  2C3D               	goto	l2747
  7680  0C79                     l2753:	
  7681  0C79  0832               	movf	___aomod@sign^(0+128),w
  7682  0C7A  1903               	btfsc	3,2
  7683  0C7B  2C9A               	goto	l775
  7684  0C7C  09A8               	comf	___aomod@dividend^(0+128),f
  7685  0C7D  09A9               	comf	(___aomod@dividend+1)^(0+128),f
  7686  0C7E  09AA               	comf	(___aomod@dividend+2)^(0+128),f
  7687  0C7F  09AB               	comf	(___aomod@dividend+3)^(0+128),f
  7688  0C80  09AC               	comf	(___aomod@dividend+4)^(0+128),f
  7689  0C81  09AD               	comf	(___aomod@dividend+5)^(0+128),f
  7690  0C82  09AE               	comf	(___aomod@dividend+6)^(0+128),f
  7691  0C83  09AF               	comf	(___aomod@dividend+7)^(0+128),f
  7692  0C84  0AA8               	incf	___aomod@dividend^(0+128),f
  7693  0C85  1D03               	skipz
  7694  0C86  2C9A               	goto	l775
  7695  0C87  0AA9               	incf	(___aomod@dividend+1)^(0+128),f
  7696  0C88  1D03               	skipz
  7697  0C89  2C9A               	goto	l775
  7698  0C8A  0AAA               	incf	(___aomod@dividend+2)^(0+128),f
  7699  0C8B  1D03               	skipz
  7700  0C8C  2C9A               	goto	l775
  7701  0C8D  0AAB               	incf	(___aomod@dividend+3)^(0+128),f
  7702  0C8E  1D03               	skipz
  7703  0C8F  2C9A               	goto	l775
  7704  0C90  0AAC               	incf	(___aomod@dividend+4)^(0+128),f
  7705  0C91  1D03               	skipz
  7706  0C92  2C9A               	goto	l775
  7707  0C93  0AAD               	incf	(___aomod@dividend+5)^(0+128),f
  7708  0C94  1D03               	skipz
  7709  0C95  2C9A               	goto	l775
  7710  0C96  0AAE               	incf	(___aomod@dividend+6)^(0+128),f
  7711  0C97  1D03               	skipz
  7712  0C98  2C9A               	goto	l775
  7713  0C99  0AAF               	incf	(___aomod@dividend+7)^(0+128),f
  7714  0C9A                     l775:	
  7715  0C9A  0021               	movlb	1	; select bank1
  7716  0C9B  0828               	movf	___aomod@dividend^(0+128),w
  7717  0C9C  00A0               	movwf	?___aomod^(0+128)
  7718  0C9D  0829               	movf	(___aomod@dividend+1)^(0+128),w
  7719  0C9E  00A1               	movwf	(?___aomod+1)^(0+128)
  7720  0C9F  082A               	movf	(___aomod@dividend+2)^(0+128),w
  7721  0CA0  00A2               	movwf	(?___aomod+2)^(0+128)
  7722  0CA1  082B               	movf	(___aomod@dividend+3)^(0+128),w
  7723  0CA2  00A3               	movwf	(?___aomod+3)^(0+128)
  7724  0CA3  082C               	movf	(___aomod@dividend+4)^(0+128),w
  7725  0CA4  00A4               	movwf	(?___aomod+4)^(0+128)
  7726  0CA5  082D               	movf	(___aomod@dividend+5)^(0+128),w
  7727  0CA6  00A5               	movwf	(?___aomod+5)^(0+128)
  7728  0CA7  082E               	movf	(___aomod@dividend+6)^(0+128),w
  7729  0CA8  00A6               	movwf	(?___aomod+6)^(0+128)
  7730  0CA9  082F               	movf	(___aomod@dividend+7)^(0+128),w
  7731  0CAA  00A7               	movwf	(?___aomod+7)^(0+128)
  7732  0CAB  0008               	return
  7733  0CAC                     __end_of___aomod:	
  7734                           
  7735                           	psect	text18
  7736  0CAC                     __ptext18:	
  7737 ;; *************** function ___aodiv *****************
  7738 ;; Defined at:
  7739 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  7740 ;; Parameters:    Size  Location     Type
  7741 ;;  divisor         8    0[BANK1 ] long long 
  7742 ;;  dividend        8    8[BANK1 ] long long 
  7743 ;; Auto vars:     Size  Location     Type
  7744 ;;  quotient        8   19[BANK1 ] long long 
  7745 ;;  sign            1   18[BANK1 ] unsigned char 
  7746 ;;  counter         1   17[BANK1 ] unsigned char 
  7747 ;; Return value:  Size  Location     Type
  7748 ;;                  8    0[BANK1 ] long long 
  7749 ;; Registers used:
  7750 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7751 ;; Tracked objects:
  7752 ;;		On entry : 0/0
  7753 ;;		On exit  : 0/0
  7754 ;;		Unchanged: 0/0
  7755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7756 ;;      Params:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  7757 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  7758 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7759 ;;      Totals:         0       0      27       0       0       0       0       0       0       0       0       0       
      +0       0
  7760 ;;Total ram usage:       27 bytes
  7761 ;; Hardware stack levels used:    1
  7762 ;; Hardware stack levels required when called:    6
  7763 ;; This function calls:
  7764 ;;		Nothing
  7765 ;; This function is called by:
  7766 ;;		_dtoa
  7767 ;; This function uses a non-reentrant model
  7768 ;;
  7769                           
  7770                           
  7771                           ;psect for function ___aodiv
  7772  0CAC                     ___aodiv:	
  7773                           
  7774                           ;incstack = 0
  7775                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  7776  0CAC  0021               	movlb	1	; select bank1
  7777  0CAD  01B2               	clrf	___aodiv@sign^(0+128)
  7778  0CAE  30A0               	movlw	low ___aodiv@divisor
  7779  0CAF  0086               	movwf	6
  7780  0CB0  3000               	movlw	high ___aodiv@divisor
  7781  0CB1  0087               	movwf	7
  7782  0CB2  3F47               	moviw [7]fsr1
  7783  0CB3  00B0               	movwf	??___aodiv^(0+128)
  7784  0CB4  1FB0               	btfss	??___aodiv^(0+128),7
  7785  0CB5  2CD8               	goto	l2695
  7786  0CB6  0021               	movlb	1	; select bank1
  7787  0CB7  09A0               	comf	___aodiv@divisor^(0+128),f
  7788  0CB8  09A1               	comf	(___aodiv@divisor+1)^(0+128),f
  7789  0CB9  09A2               	comf	(___aodiv@divisor+2)^(0+128),f
  7790  0CBA  09A3               	comf	(___aodiv@divisor+3)^(0+128),f
  7791  0CBB  09A4               	comf	(___aodiv@divisor+4)^(0+128),f
  7792  0CBC  09A5               	comf	(___aodiv@divisor+5)^(0+128),f
  7793  0CBD  09A6               	comf	(___aodiv@divisor+6)^(0+128),f
  7794  0CBE  09A7               	comf	(___aodiv@divisor+7)^(0+128),f
  7795  0CBF  0AA0               	incf	___aodiv@divisor^(0+128),f
  7796  0CC0  1D03               	skipz
  7797  0CC1  2CD5               	goto	u261lld
  7798  0CC2  0AA1               	incf	(___aodiv@divisor+1)^(0+128),f
  7799  0CC3  1D03               	skipz
  7800  0CC4  2CD5               	goto	u261lld
  7801  0CC5  0AA2               	incf	(___aodiv@divisor+2)^(0+128),f
  7802  0CC6  1D03               	skipz
  7803  0CC7  2CD5               	goto	u261lld
  7804  0CC8  0AA3               	incf	(___aodiv@divisor+3)^(0+128),f
  7805  0CC9  1D03               	skipz
  7806  0CCA  2CD5               	goto	u261lld
  7807  0CCB  0AA4               	incf	(___aodiv@divisor+4)^(0+128),f
  7808  0CCC  1D03               	skipz
  7809  0CCD  2CD5               	goto	u261lld
  7810  0CCE  0AA5               	incf	(___aodiv@divisor+5)^(0+128),f
  7811  0CCF  1D03               	skipz
  7812  0CD0  2CD5               	goto	u261lld
  7813  0CD1  0AA6               	incf	(___aodiv@divisor+6)^(0+128),f
  7814  0CD2  1D03               	skipz
  7815  0CD3  2CD5               	goto	u261lld
  7816  0CD4  0AA7               	incf	(___aodiv@divisor+7)^(0+128),f
  7817  0CD5                     u261lld:	
  7818  0CD5  0021               	movlb	1	; select bank1
  7819  0CD6  01B2               	clrf	___aodiv@sign^(0+128)
  7820  0CD7  0AB2               	incf	___aodiv@sign^(0+128),f
  7821  0CD8                     l2695:	
  7822  0CD8  30A8               	movlw	low ___aodiv@dividend
  7823  0CD9  0086               	movwf	6
  7824  0CDA  3000               	movlw	high ___aodiv@dividend
  7825  0CDB  0087               	movwf	7
  7826  0CDC  3F47               	moviw [7]fsr1
  7827  0CDD  0021               	movlb	1	; select bank1
  7828  0CDE  00B0               	movwf	??___aodiv^(0+128)
  7829  0CDF  1FB0               	btfss	??___aodiv^(0+128),7
  7830  0CE0  2D05               	goto	l2701
  7831  0CE1  0021               	movlb	1	; select bank1
  7832  0CE2  09A8               	comf	___aodiv@dividend^(0+128),f
  7833  0CE3  09A9               	comf	(___aodiv@dividend+1)^(0+128),f
  7834  0CE4  09AA               	comf	(___aodiv@dividend+2)^(0+128),f
  7835  0CE5  09AB               	comf	(___aodiv@dividend+3)^(0+128),f
  7836  0CE6  09AC               	comf	(___aodiv@dividend+4)^(0+128),f
  7837  0CE7  09AD               	comf	(___aodiv@dividend+5)^(0+128),f
  7838  0CE8  09AE               	comf	(___aodiv@dividend+6)^(0+128),f
  7839  0CE9  09AF               	comf	(___aodiv@dividend+7)^(0+128),f
  7840  0CEA  0AA8               	incf	___aodiv@dividend^(0+128),f
  7841  0CEB  1D03               	skipz
  7842  0CEC  2D00               	goto	l2699
  7843  0CED  0AA9               	incf	(___aodiv@dividend+1)^(0+128),f
  7844  0CEE  1D03               	skipz
  7845  0CEF  2D00               	goto	l2699
  7846  0CF0  0AAA               	incf	(___aodiv@dividend+2)^(0+128),f
  7847  0CF1  1D03               	skipz
  7848  0CF2  2D00               	goto	l2699
  7849  0CF3  0AAB               	incf	(___aodiv@dividend+3)^(0+128),f
  7850  0CF4  1D03               	skipz
  7851  0CF5  2D00               	goto	l2699
  7852  0CF6  0AAC               	incf	(___aodiv@dividend+4)^(0+128),f
  7853  0CF7  1D03               	skipz
  7854  0CF8  2D00               	goto	l2699
  7855  0CF9  0AAD               	incf	(___aodiv@dividend+5)^(0+128),f
  7856  0CFA  1D03               	skipz
  7857  0CFB  2D00               	goto	l2699
  7858  0CFC  0AAE               	incf	(___aodiv@dividend+6)^(0+128),f
  7859  0CFD  1D03               	skipz
  7860  0CFE  2D00               	goto	l2699
  7861  0CFF  0AAF               	incf	(___aodiv@dividend+7)^(0+128),f
  7862  0D00                     l2699:	
  7863  0D00  3001               	movlw	1
  7864  0D01  0021               	movlb	1	; select bank1
  7865  0D02  00B0               	movwf	??___aodiv^(0+128)
  7866  0D03  0830               	movf	??___aodiv^(0+128),w
  7867  0D04  06B2               	xorwf	___aodiv@sign^(0+128),f
  7868  0D05                     l2701:	
  7869  0D05  30B3               	movlw	low ___aodiv@quotient
  7870  0D06  0086               	movwf	6
  7871  0D07  3000               	movlw	high ___aodiv@quotient
  7872  0D08  0087               	movwf	7
  7873  0D09  3008               	movlw	8
  7874  0D0A  0021               	movlb	1	; select bank1
  7875  0D0B  00B0               	movwf	??___aodiv^(0+128)
  7876  0D0C  3000               	movlw	0
  7877  0D0D                     u2640:	
  7878  0D0D  001E               	movwi fsr1++
  7879  0D0E  0BB0               	decfsz	??___aodiv^(0+128),f
  7880  0D0F  2D0D               	goto	u2640
  7881  0D10  0820               	movf	___aodiv@divisor^(0+128),w
  7882  0D11  0421               	iorwf	(___aodiv@divisor+1)^(0+128),w
  7883  0D12  0422               	iorwf	(___aodiv@divisor+2)^(0+128),w
  7884  0D13  0423               	iorwf	(___aodiv@divisor+3)^(0+128),w
  7885  0D14  0424               	iorwf	(___aodiv@divisor+4)^(0+128),w
  7886  0D15  0425               	iorwf	(___aodiv@divisor+5)^(0+128),w
  7887  0D16  0426               	iorwf	(___aodiv@divisor+6)^(0+128),w
  7888  0D17  0427               	iorwf	(___aodiv@divisor+7)^(0+128),w
  7889  0D18  1903               	skipnz
  7890  0D19  2D70               	goto	l2723
  7891  0D1A  01B1               	clrf	___aodiv@counter^(0+128)
  7892  0D1B  0AB1               	incf	___aodiv@counter^(0+128),f
  7893  0D1C                     l2711:	
  7894  0D1C  1BA7               	btfsc	(___aodiv@divisor+7)^(0+128),7
  7895  0D1D  2D2B               	goto	l2713
  7896  0D1E  35A0               	lslf	___aodiv@divisor^(0+128),f
  7897  0D1F  0DA1               	rlf	(___aodiv@divisor+1)^(0+128),f
  7898  0D20  0DA2               	rlf	(___aodiv@divisor+2)^(0+128),f
  7899  0D21  0DA3               	rlf	(___aodiv@divisor+3)^(0+128),f
  7900  0D22  0DA4               	rlf	(___aodiv@divisor+4)^(0+128),f
  7901  0D23  0DA5               	rlf	(___aodiv@divisor+5)^(0+128),f
  7902  0D24  0DA6               	rlf	(___aodiv@divisor+6)^(0+128),f
  7903  0D25  0DA7               	rlf	(___aodiv@divisor+7)^(0+128),f
  7904  0D26  3001               	movlw	1
  7905  0D27  00B0               	movwf	??___aodiv^(0+128)
  7906  0D28  0830               	movf	??___aodiv^(0+128),w
  7907  0D29  07B1               	addwf	___aodiv@counter^(0+128),f
  7908  0D2A  2D1C               	goto	l2711
  7909  0D2B                     l2713:	
  7910  0D2B  35B3               	lslf	___aodiv@quotient^(0+128),f
  7911  0D2C  0DB4               	rlf	(___aodiv@quotient+1)^(0+128),f
  7912  0D2D  0DB5               	rlf	(___aodiv@quotient+2)^(0+128),f
  7913  0D2E  0DB6               	rlf	(___aodiv@quotient+3)^(0+128),f
  7914  0D2F  0DB7               	rlf	(___aodiv@quotient+4)^(0+128),f
  7915  0D30  0DB8               	rlf	(___aodiv@quotient+5)^(0+128),f
  7916  0D31  0DB9               	rlf	(___aodiv@quotient+6)^(0+128),f
  7917  0D32  0DBA               	rlf	(___aodiv@quotient+7)^(0+128),f
  7918  0D33  0827               	movf	(___aodiv@divisor+7)^(0+128),w
  7919  0D34  022F               	subwf	(___aodiv@dividend+7)^(0+128),w
  7920  0D35  1D03               	skipz
  7921  0D36  2D51               	goto	u2675
  7922  0D37  0826               	movf	(___aodiv@divisor+6)^(0+128),w
  7923  0D38  022E               	subwf	(___aodiv@dividend+6)^(0+128),w
  7924  0D39  1D03               	skipz
  7925  0D3A  2D51               	goto	u2675
  7926  0D3B  0825               	movf	(___aodiv@divisor+5)^(0+128),w
  7927  0D3C  022D               	subwf	(___aodiv@dividend+5)^(0+128),w
  7928  0D3D  1D03               	skipz
  7929  0D3E  2D51               	goto	u2675
  7930  0D3F  0824               	movf	(___aodiv@divisor+4)^(0+128),w
  7931  0D40  022C               	subwf	(___aodiv@dividend+4)^(0+128),w
  7932  0D41  1D03               	skipz
  7933  0D42  2D51               	goto	u2675
  7934  0D43  0823               	movf	(___aodiv@divisor+3)^(0+128),w
  7935  0D44  022B               	subwf	(___aodiv@dividend+3)^(0+128),w
  7936  0D45  1D03               	skipz
  7937  0D46  2D51               	goto	u2675
  7938  0D47  0822               	movf	(___aodiv@divisor+2)^(0+128),w
  7939  0D48  022A               	subwf	(___aodiv@dividend+2)^(0+128),w
  7940  0D49  1D03               	skipz
  7941  0D4A  2D51               	goto	u2675
  7942  0D4B  0821               	movf	(___aodiv@divisor+1)^(0+128),w
  7943  0D4C  0229               	subwf	(___aodiv@dividend+1)^(0+128),w
  7944  0D4D  1D03               	skipz
  7945  0D4E  2D51               	goto	u2675
  7946  0D4F  0820               	movf	___aodiv@divisor^(0+128),w
  7947  0D50  0228               	subwf	___aodiv@dividend^(0+128),w
  7948  0D51                     u2675:	
  7949  0D51  1C03               	skipc
  7950  0D52  2D64               	goto	l2721
  7951  0D53  0820               	movf	___aodiv@divisor^(0+128),w
  7952  0D54  02A8               	subwf	___aodiv@dividend^(0+128),f
  7953  0D55  0821               	movf	(___aodiv@divisor+1)^(0+128),w
  7954  0D56  3BA9               	subwfb	(___aodiv@dividend+1)^(0+128),f
  7955  0D57  0822               	movf	(___aodiv@divisor+2)^(0+128),w
  7956  0D58  3BAA               	subwfb	(___aodiv@dividend+2)^(0+128),f
  7957  0D59  0823               	movf	(___aodiv@divisor+3)^(0+128),w
  7958  0D5A  3BAB               	subwfb	(___aodiv@dividend+3)^(0+128),f
  7959  0D5B  0824               	movf	(___aodiv@divisor+4)^(0+128),w
  7960  0D5C  3BAC               	subwfb	(___aodiv@dividend+4)^(0+128),f
  7961  0D5D  0825               	movf	(___aodiv@divisor+5)^(0+128),w
  7962  0D5E  3BAD               	subwfb	(___aodiv@dividend+5)^(0+128),f
  7963  0D5F  0826               	movf	(___aodiv@divisor+6)^(0+128),w
  7964  0D60  3BAE               	subwfb	(___aodiv@dividend+6)^(0+128),f
  7965  0D61  0827               	movf	(___aodiv@divisor+7)^(0+128),w
  7966  0D62  3BAF               	subwfb	(___aodiv@dividend+7)^(0+128),f
  7967  0D63  1433               	bsf	___aodiv@quotient^(0+128),0
  7968  0D64                     l2721:	
  7969  0D64  36A7               	lsrf	(___aodiv@divisor+7)^(0+128),f
  7970  0D65  0CA6               	rrf	(___aodiv@divisor+6)^(0+128),f
  7971  0D66  0CA5               	rrf	(___aodiv@divisor+5)^(0+128),f
  7972  0D67  0CA4               	rrf	(___aodiv@divisor+4)^(0+128),f
  7973  0D68  0CA3               	rrf	(___aodiv@divisor+3)^(0+128),f
  7974  0D69  0CA2               	rrf	(___aodiv@divisor+2)^(0+128),f
  7975  0D6A  0CA1               	rrf	(___aodiv@divisor+1)^(0+128),f
  7976  0D6B  0CA0               	rrf	___aodiv@divisor^(0+128),f
  7977  0D6C  3001               	movlw	1
  7978  0D6D  02B1               	subwf	___aodiv@counter^(0+128),f
  7979  0D6E  1D03               	btfss	3,2
  7980  0D6F  2D2B               	goto	l2713
  7981  0D70                     l2723:	
  7982  0D70  0832               	movf	___aodiv@sign^(0+128),w
  7983  0D71  1903               	btfsc	3,2
  7984  0D72  2D91               	goto	l762
  7985  0D73  09B3               	comf	___aodiv@quotient^(0+128),f
  7986  0D74  09B4               	comf	(___aodiv@quotient+1)^(0+128),f
  7987  0D75  09B5               	comf	(___aodiv@quotient+2)^(0+128),f
  7988  0D76  09B6               	comf	(___aodiv@quotient+3)^(0+128),f
  7989  0D77  09B7               	comf	(___aodiv@quotient+4)^(0+128),f
  7990  0D78  09B8               	comf	(___aodiv@quotient+5)^(0+128),f
  7991  0D79  09B9               	comf	(___aodiv@quotient+6)^(0+128),f
  7992  0D7A  09BA               	comf	(___aodiv@quotient+7)^(0+128),f
  7993  0D7B  0AB3               	incf	___aodiv@quotient^(0+128),f
  7994  0D7C  1D03               	skipz
  7995  0D7D  2D91               	goto	l762
  7996  0D7E  0AB4               	incf	(___aodiv@quotient+1)^(0+128),f
  7997  0D7F  1D03               	skipz
  7998  0D80  2D91               	goto	l762
  7999  0D81  0AB5               	incf	(___aodiv@quotient+2)^(0+128),f
  8000  0D82  1D03               	skipz
  8001  0D83  2D91               	goto	l762
  8002  0D84  0AB6               	incf	(___aodiv@quotient+3)^(0+128),f
  8003  0D85  1D03               	skipz
  8004  0D86  2D91               	goto	l762
  8005  0D87  0AB7               	incf	(___aodiv@quotient+4)^(0+128),f
  8006  0D88  1D03               	skipz
  8007  0D89  2D91               	goto	l762
  8008  0D8A  0AB8               	incf	(___aodiv@quotient+5)^(0+128),f
  8009  0D8B  1D03               	skipz
  8010  0D8C  2D91               	goto	l762
  8011  0D8D  0AB9               	incf	(___aodiv@quotient+6)^(0+128),f
  8012  0D8E  1D03               	skipz
  8013  0D8F  2D91               	goto	l762
  8014  0D90  0ABA               	incf	(___aodiv@quotient+7)^(0+128),f
  8015  0D91                     l762:	
  8016  0D91  0021               	movlb	1	; select bank1
  8017  0D92  0833               	movf	___aodiv@quotient^(0+128),w
  8018  0D93  00A0               	movwf	?___aodiv^(0+128)
  8019  0D94  0834               	movf	(___aodiv@quotient+1)^(0+128),w
  8020  0D95  00A1               	movwf	(?___aodiv+1)^(0+128)
  8021  0D96  0835               	movf	(___aodiv@quotient+2)^(0+128),w
  8022  0D97  00A2               	movwf	(?___aodiv+2)^(0+128)
  8023  0D98  0836               	movf	(___aodiv@quotient+3)^(0+128),w
  8024  0D99  00A3               	movwf	(?___aodiv+3)^(0+128)
  8025  0D9A  0837               	movf	(___aodiv@quotient+4)^(0+128),w
  8026  0D9B  00A4               	movwf	(?___aodiv+4)^(0+128)
  8027  0D9C  0838               	movf	(___aodiv@quotient+5)^(0+128),w
  8028  0D9D  00A5               	movwf	(?___aodiv+5)^(0+128)
  8029  0D9E  0839               	movf	(___aodiv@quotient+6)^(0+128),w
  8030  0D9F  00A6               	movwf	(?___aodiv+6)^(0+128)
  8031  0DA0  083A               	movf	(___aodiv@quotient+7)^(0+128),w
  8032  0DA1  00A7               	movwf	(?___aodiv+7)^(0+128)
  8033  0DA2  0008               	return
  8034  0DA3                     __end_of___aodiv:	
  8035                           
  8036                           	psect	text19
  8037  0932                     __ptext19:	
  8038 ;; *************** function ___flge *****************
  8039 ;; Defined at:
  8040 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
  8041 ;; Parameters:    Size  Location     Type
  8042 ;;  ff1             4    0[BANK1 ] long long 
  8043 ;;  ff2             4    4[BANK1 ] long long 
  8044 ;; Auto vars:     Size  Location     Type
  8045 ;;		None
  8046 ;; Return value:  Size  Location     Type
  8047 ;;		None               void
  8048 ;; Registers used:
  8049 ;;		wreg, status,2, status,0
  8050 ;; Tracked objects:
  8051 ;;		On entry : 0/0
  8052 ;;		On exit  : 0/0
  8053 ;;		Unchanged: 0/0
  8054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8055 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  8056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8057 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8058 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  8059 ;;Total ram usage:       12 bytes
  8060 ;; Hardware stack levels used:    1
  8061 ;; Hardware stack levels required when called:    6
  8062 ;; This function calls:
  8063 ;;		Nothing
  8064 ;; This function is called by:
  8065 ;;		_main
  8066 ;; This function uses a non-reentrant model
  8067 ;;
  8068                           
  8069                           
  8070                           ;psect for function ___flge
  8071  0932                     ___flge:	
  8072                           
  8073                           ;incstack = 0
  8074                           ; Regs used in ___flge: [wreg+status,2+status,0]
  8075  0932  3000               	movlw	0
  8076  0933  0021               	movlb	1	; select bank1
  8077  0934  0520               	andwf	___flge@ff1^(0+128),w
  8078  0935  00A8               	movwf	??___flge^(0+128)
  8079  0936  3000               	movlw	0
  8080  0937  0521               	andwf	(___flge@ff1+1)^(0+128),w
  8081  0938  00A9               	movwf	(??___flge^(0+128)+1)
  8082  0939  3080               	movlw	128
  8083  093A  0522               	andwf	(___flge@ff1+2)^(0+128),w
  8084  093B  00AA               	movwf	(??___flge^(0+128)+2)
  8085  093C  307F               	movlw	127
  8086  093D  0523               	andwf	(___flge@ff1+3)^(0+128),w
  8087  093E  00AB               	movwf	(??___flge^(0+128)+3)
  8088  093F  082B               	movf	(??___flge+3)^(0+128),w
  8089  0940  042A               	iorwf	(??___flge+2)^(0+128),w
  8090  0941  0429               	iorwf	(??___flge+1)^(0+128),w
  8091  0942  0428               	iorwf	??___flge^(0+128),w
  8092  0943  1D03               	skipz
  8093  0944  294D               	goto	l840
  8094  0945  3000               	movlw	0
  8095  0946  00A3               	movwf	(___flge@ff1+3)^(0+128)
  8096  0947  3000               	movlw	0
  8097  0948  00A2               	movwf	(___flge@ff1+2)^(0+128)
  8098  0949  3000               	movlw	0
  8099  094A  00A1               	movwf	(___flge@ff1+1)^(0+128)
  8100  094B  3000               	movlw	0
  8101  094C  00A0               	movwf	___flge@ff1^(0+128)
  8102  094D                     l840:	
  8103  094D  3000               	movlw	0
  8104  094E  0524               	andwf	___flge@ff2^(0+128),w
  8105  094F  00A8               	movwf	??___flge^(0+128)
  8106  0950  3000               	movlw	0
  8107  0951  0525               	andwf	(___flge@ff2+1)^(0+128),w
  8108  0952  00A9               	movwf	(??___flge^(0+128)+1)
  8109  0953  3080               	movlw	128
  8110  0954  0526               	andwf	(___flge@ff2+2)^(0+128),w
  8111  0955  00AA               	movwf	(??___flge^(0+128)+2)
  8112  0956  307F               	movlw	127
  8113  0957  0527               	andwf	(___flge@ff2+3)^(0+128),w
  8114  0958  00AB               	movwf	(??___flge^(0+128)+3)
  8115  0959  082B               	movf	(??___flge+3)^(0+128),w
  8116  095A  042A               	iorwf	(??___flge+2)^(0+128),w
  8117  095B  0429               	iorwf	(??___flge+1)^(0+128),w
  8118  095C  0428               	iorwf	??___flge^(0+128),w
  8119  095D  1D03               	skipz
  8120  095E  2967               	goto	l3911
  8121  095F  3000               	movlw	0
  8122  0960  00A7               	movwf	(___flge@ff2+3)^(0+128)
  8123  0961  3000               	movlw	0
  8124  0962  00A6               	movwf	(___flge@ff2+2)^(0+128)
  8125  0963  3000               	movlw	0
  8126  0964  00A5               	movwf	(___flge@ff2+1)^(0+128)
  8127  0965  3000               	movlw	0
  8128  0966  00A4               	movwf	___flge@ff2^(0+128)
  8129  0967                     l3911:	
  8130  0967  1FA3               	btfss	(___flge@ff1+3)^(0+128),7
  8131  0968  2981               	goto	l3915
  8132  0969  3000               	movlw	0
  8133  096A  00A8               	movwf	??___flge^(0+128)
  8134  096B  3000               	movlw	0
  8135  096C  00A9               	movwf	(??___flge^(0+128)+1)
  8136  096D  3000               	movlw	0
  8137  096E  00AA               	movwf	(??___flge^(0+128)+2)
  8138  096F  3080               	movlw	128
  8139  0970  00AB               	movwf	(??___flge^(0+128)+3)
  8140  0971  0820               	movf	___flge@ff1^(0+128),w
  8141  0972  02A8               	subwf	??___flge^(0+128),f
  8142  0973  0821               	movf	(___flge@ff1+1)^(0+128),w
  8143  0974  3BA9               	subwfb	(??___flge^(0+128)+1),f
  8144  0975  0822               	movf	(___flge@ff1+2)^(0+128),w
  8145  0976  3BAA               	subwfb	(??___flge^(0+128)+2),f
  8146  0977  0823               	movf	(___flge@ff1+3)^(0+128),w
  8147  0978  3BAB               	subwfb	(??___flge^(0+128)+3),f
  8148  0979  082B               	movf	(??___flge+3)^(0+128),w
  8149  097A  00A3               	movwf	(___flge@ff1+3)^(0+128)
  8150  097B  082A               	movf	(??___flge+2)^(0+128),w
  8151  097C  00A2               	movwf	(___flge@ff1+2)^(0+128)
  8152  097D  0829               	movf	(??___flge+1)^(0+128),w
  8153  097E  00A1               	movwf	(___flge@ff1+1)^(0+128)
  8154  097F  0828               	movf	??___flge^(0+128),w
  8155  0980  00A0               	movwf	___flge@ff1^(0+128)
  8156  0981                     l3915:	
  8157  0981  1FA7               	btfss	(___flge@ff2+3)^(0+128),7
  8158  0982  299B               	goto	l843
  8159  0983  3000               	movlw	0
  8160  0984  00A8               	movwf	??___flge^(0+128)
  8161  0985  3000               	movlw	0
  8162  0986  00A9               	movwf	(??___flge^(0+128)+1)
  8163  0987  3000               	movlw	0
  8164  0988  00AA               	movwf	(??___flge^(0+128)+2)
  8165  0989  3080               	movlw	128
  8166  098A  00AB               	movwf	(??___flge^(0+128)+3)
  8167  098B  0824               	movf	___flge@ff2^(0+128),w
  8168  098C  02A8               	subwf	??___flge^(0+128),f
  8169  098D  0825               	movf	(___flge@ff2+1)^(0+128),w
  8170  098E  3BA9               	subwfb	(??___flge^(0+128)+1),f
  8171  098F  0826               	movf	(___flge@ff2+2)^(0+128),w
  8172  0990  3BAA               	subwfb	(??___flge^(0+128)+2),f
  8173  0991  0827               	movf	(___flge@ff2+3)^(0+128),w
  8174  0992  3BAB               	subwfb	(??___flge^(0+128)+3),f
  8175  0993  082B               	movf	(??___flge+3)^(0+128),w
  8176  0994  00A7               	movwf	(___flge@ff2+3)^(0+128)
  8177  0995  082A               	movf	(??___flge+2)^(0+128),w
  8178  0996  00A6               	movwf	(___flge@ff2+2)^(0+128)
  8179  0997  0829               	movf	(??___flge+1)^(0+128),w
  8180  0998  00A5               	movwf	(___flge@ff2+1)^(0+128)
  8181  0999  0828               	movf	??___flge^(0+128),w
  8182  099A  00A4               	movwf	___flge@ff2^(0+128)
  8183  099B                     l843:	
  8184  099B  3080               	movlw	128
  8185  099C  06A3               	xorwf	(___flge@ff1+3)^(0+128),f
  8186  099D  3080               	movlw	128
  8187  099E  06A7               	xorwf	(___flge@ff2+3)^(0+128),f
  8188  099F  0827               	movf	(___flge@ff2+3)^(0+128),w
  8189  09A0  0223               	subwf	(___flge@ff1+3)^(0+128),w
  8190  09A1  1D03               	skipz
  8191  09A2  0008               	return
  8192  09A3  0826               	movf	(___flge@ff2+2)^(0+128),w
  8193  09A4  0222               	subwf	(___flge@ff1+2)^(0+128),w
  8194  09A5  1D03               	skipz
  8195  09A6  0008               	return
  8196  09A7  0825               	movf	(___flge@ff2+1)^(0+128),w
  8197  09A8  0221               	subwf	(___flge@ff1+1)^(0+128),w
  8198  09A9  1D03               	skipz
  8199  09AA  0008               	return
  8200  09AB  0824               	movf	___flge@ff2^(0+128),w
  8201  09AC  0220               	subwf	___flge@ff1^(0+128),w
  8202  09AD  0008               	return
  8203  09AE                     __end_of___flge:	
  8204                           
  8205                           	psect	text20
  8206  1574                     __ptext20:	
  8207 ;; *************** function _SYSTEM_Initialize *****************
  8208 ;; Defined at:
  8209 ;;		line 4 in file "mcc_generated_files/mcc.c"
  8210 ;; Parameters:    Size  Location     Type
  8211 ;;		None
  8212 ;; Auto vars:     Size  Location     Type
  8213 ;;		None
  8214 ;; Return value:  Size  Location     Type
  8215 ;;                  1    wreg      void 
  8216 ;; Registers used:
  8217 ;;		wreg, status,2, status,0, pclath, cstack
  8218 ;; Tracked objects:
  8219 ;;		On entry : 0/0
  8220 ;;		On exit  : 0/0
  8221 ;;		Unchanged: 0/0
  8222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8227 ;;Total ram usage:        0 bytes
  8228 ;; Hardware stack levels used:    1
  8229 ;; Hardware stack levels required when called:    8
  8230 ;; This function calls:
  8231 ;;		_ADC_Initialize
  8232 ;;		_EUSART_Initialize
  8233 ;;		_OSCILLATOR_Initialize
  8234 ;;		_PIN_MANAGER_Initialize
  8235 ;;		_TMR0_Initialize
  8236 ;;		_TMR1_Initialize
  8237 ;; This function is called by:
  8238 ;;		_main
  8239 ;; This function uses a non-reentrant model
  8240 ;;
  8241                           
  8242                           
  8243                           ;psect for function _SYSTEM_Initialize
  8244  1574                     _SYSTEM_Initialize:	
  8245                           
  8246                           ;mcc_generated_files/mcc.c: 6:     PIN_MANAGER_Initialize();
  8247                           
  8248                           ;incstack = 0
  8249                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8250  1574  3197  270A  3195   	fcall	_PIN_MANAGER_Initialize
  8251                           
  8252                           ;mcc_generated_files/mcc.c: 7:     OSCILLATOR_Initialize();
  8253  1577  3194  24DC  3195   	fcall	_OSCILLATOR_Initialize
  8254                           
  8255                           ;mcc_generated_files/mcc.c: 8:     TMR1_Initialize();
  8256  157A  3196  2628  3195   	fcall	_TMR1_Initialize
  8257                           
  8258                           ;mcc_generated_files/mcc.c: 9:     ADC_Initialize();
  8259  157D  3194  24EA  3195   	fcall	_ADC_Initialize
  8260                           
  8261                           ;mcc_generated_files/mcc.c: 10:     TMR0_Initialize();
  8262  1580  3195  25C5  3195   	fcall	_TMR0_Initialize
  8263                           
  8264                           ;mcc_generated_files/mcc.c: 11:     EUSART_Initialize();
  8265  1583  3188  2000         	fcall	_EUSART_Initialize
  8266  1585  0008               	return
  8267  1586                     __end_of_SYSTEM_Initialize:	
  8268                           
  8269                           	psect	text21
  8270  1628                     __ptext21:	
  8271 ;; *************** function _TMR1_Initialize *****************
  8272 ;; Defined at:
  8273 ;;		line 15 in file "mcc_generated_files/tmr1.c"
  8274 ;; Parameters:    Size  Location     Type
  8275 ;;		None
  8276 ;; Auto vars:     Size  Location     Type
  8277 ;;		None
  8278 ;; Return value:  Size  Location     Type
  8279 ;;                  1    wreg      void 
  8280 ;; Registers used:
  8281 ;;		wreg, status,2, status,0, pclath, cstack
  8282 ;; Tracked objects:
  8283 ;;		On entry : 0/0
  8284 ;;		On exit  : 0/0
  8285 ;;		Unchanged: 0/0
  8286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8291 ;;Total ram usage:        0 bytes
  8292 ;; Hardware stack levels used:    1
  8293 ;; Hardware stack levels required when called:    7
  8294 ;; This function calls:
  8295 ;;		_TMR1_SetInterruptHandler
  8296 ;; This function is called by:
  8297 ;;		_SYSTEM_Initialize
  8298 ;; This function uses a non-reentrant model
  8299 ;;
  8300                           
  8301                           
  8302                           ;psect for function _TMR1_Initialize
  8303  1628                     _TMR1_Initialize:	
  8304                           
  8305                           ;mcc_generated_files/tmr1.c: 20:     T1GCON = 0x00;
  8306                           
  8307                           ;incstack = 0
  8308                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8309  1628  0020               	movlb	0	; select bank0
  8310  1629  0199               	clrf	25	;volatile
  8311                           
  8312                           ;mcc_generated_files/tmr1.c: 23:     TMR1H = 0xE0;
  8313  162A  30E0               	movlw	224
  8314  162B  0097               	movwf	23	;volatile
  8315                           
  8316                           ;mcc_generated_files/tmr1.c: 26:     TMR1L = 0xC0;
  8317  162C  30C0               	movlw	192
  8318  162D  0096               	movwf	22	;volatile
  8319                           
  8320                           ;mcc_generated_files/tmr1.c: 29:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  8321  162E  0817               	movf	23,w	;volatile
  8322  162F  0022               	movlb	2	; select bank2
  8323  1630  00CD               	movwf	(_timer1ReloadVal+1)^(0+256)	;volatile
  8324  1631  0020               	movlb	0	; select bank0
  8325  1632  0816               	movf	22,w	;volatile
  8326  1633  0022               	movlb	2	; select bank2
  8327  1634  00CC               	movwf	_timer1ReloadVal^(0+256)	;volatile
  8328                           
  8329                           ;mcc_generated_files/tmr1.c: 32:     PIR1bits.TMR1IF = 0;
  8330  1635  0020               	movlb	0	; select bank0
  8331  1636  1010               	bcf	16,0	;volatile
  8332                           
  8333                           ;mcc_generated_files/tmr1.c: 35:     PIE1bits.TMR1IE = 1;
  8334  1637  0021               	movlb	1	; select bank1
  8335  1638  1410               	bsf	16,0	;volatile
  8336                           
  8337                           ;mcc_generated_files/tmr1.c: 38:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  8338  1639  30FF               	movlw	low _TMR1_DefaultInterruptHandler
  8339  163A  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler^(0+128)
  8340  163B  3007               	movlw	high _TMR1_DefaultInterruptHandler
  8341  163C  00A1               	movwf	(TMR1_SetInterruptHandler@InterruptHandler^(0+128)+1)
  8342  163D  3195  2527         	fcall	_TMR1_SetInterruptHandler
  8343                           
  8344                           ;mcc_generated_files/tmr1.c: 41:     T1CON = 0x01;
  8345  163F  3001               	movlw	1
  8346  1640  0020               	movlb	0	; select bank0
  8347  1641  0098               	movwf	24	;volatile
  8348  1642  0008               	return
  8349  1643                     __end_of_TMR1_Initialize:	
  8350                           
  8351                           	psect	text22
  8352  1527                     __ptext22:	
  8353 ;; *************** function _TMR1_SetInterruptHandler *****************
  8354 ;; Defined at:
  8355 ;;		line 122 in file "mcc_generated_files/tmr1.c"
  8356 ;; Parameters:    Size  Location     Type
  8357 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  8358 ;;		 -> TMR1_DefaultInterruptHandler(1), heartRateISR(1), 
  8359 ;; Auto vars:     Size  Location     Type
  8360 ;;		None
  8361 ;; Return value:  Size  Location     Type
  8362 ;;                  1    wreg      void 
  8363 ;; Registers used:
  8364 ;;		wreg
  8365 ;; Tracked objects:
  8366 ;;		On entry : 0/0
  8367 ;;		On exit  : 0/0
  8368 ;;		Unchanged: 0/0
  8369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8370 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8373 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8374 ;;Total ram usage:        2 bytes
  8375 ;; Hardware stack levels used:    1
  8376 ;; Hardware stack levels required when called:    6
  8377 ;; This function calls:
  8378 ;;		Nothing
  8379 ;; This function is called by:
  8380 ;;		_main
  8381 ;;		_TMR1_Initialize
  8382 ;; This function uses a non-reentrant model
  8383 ;;
  8384                           
  8385                           
  8386                           ;psect for function _TMR1_SetInterruptHandler
  8387  1527                     _TMR1_SetInterruptHandler:	
  8388                           
  8389                           ;mcc_generated_files/tmr1.c: 123:     TMR1_InterruptHandler = InterruptHandler;
  8390                           
  8391                           ;incstack = 0
  8392                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  8393  1527  0021               	movlb	1	; select bank1
  8394  1528  0821               	movf	(TMR1_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  8395  1529  0022               	movlb	2	; select bank2
  8396  152A  00CB               	movwf	(_TMR1_InterruptHandler+1)^(0+256)
  8397  152B  0021               	movlb	1	; select bank1
  8398  152C  0820               	movf	TMR1_SetInterruptHandler@InterruptHandler^(0+128),w
  8399  152D  0022               	movlb	2	; select bank2
  8400  152E  00CA               	movwf	_TMR1_InterruptHandler^(0+256)
  8401  152F  0008               	return
  8402  1530                     __end_of_TMR1_SetInterruptHandler:	
  8403                           
  8404                           	psect	text23
  8405  15C5                     __ptext23:	
  8406 ;; *************** function _TMR0_Initialize *****************
  8407 ;; Defined at:
  8408 ;;		line 18 in file "mcc_generated_files/tmr0.c"
  8409 ;; Parameters:    Size  Location     Type
  8410 ;;		None
  8411 ;; Auto vars:     Size  Location     Type
  8412 ;;		None
  8413 ;; Return value:  Size  Location     Type
  8414 ;;                  1    wreg      void 
  8415 ;; Registers used:
  8416 ;;		wreg, status,2, status,0, pclath, cstack
  8417 ;; Tracked objects:
  8418 ;;		On entry : 0/0
  8419 ;;		On exit  : 0/0
  8420 ;;		Unchanged: 0/0
  8421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8424 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8425 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8426 ;;Total ram usage:        1 bytes
  8427 ;; Hardware stack levels used:    1
  8428 ;; Hardware stack levels required when called:    7
  8429 ;; This function calls:
  8430 ;;		_TMR0_SetInterruptHandler
  8431 ;; This function is called by:
  8432 ;;		_SYSTEM_Initialize
  8433 ;; This function uses a non-reentrant model
  8434 ;;
  8435                           
  8436                           
  8437                           ;psect for function _TMR0_Initialize
  8438  15C5                     _TMR0_Initialize:	
  8439                           
  8440                           ;mcc_generated_files/tmr0.c: 23:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD4 
      +                          & 0x3F));
  8441                           
  8442                           ;incstack = 0
  8443                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8444  15C5  0021               	movlb	1	; select bank1
  8445  15C6  0815               	movf	21,w	;volatile
  8446  15C7  39C0               	andlw	192
  8447  15C8  3814               	iorlw	20
  8448  15C9  0095               	movwf	21	;volatile
  8449                           
  8450                           ;mcc_generated_files/tmr0.c: 26:     TMR0 = 0x83;
  8451  15CA  3083               	movlw	131
  8452  15CB  0020               	movlb	0	; select bank0
  8453  15CC  0095               	movwf	21	;volatile
  8454                           
  8455                           ;mcc_generated_files/tmr0.c: 29:     timer0ReloadVal= 131;
  8456  15CD  3083               	movlw	131
  8457  15CE  0021               	movlb	1	; select bank1
  8458  15CF  00A2               	movwf	??_TMR0_Initialize^(0+128)
  8459  15D0  0822               	movf	??_TMR0_Initialize^(0+128),w
  8460  15D1  0022               	movlb	2	; select bank2
  8461  15D2  00D8               	movwf	_timer0ReloadVal^(0+256)	;volatile
  8462                           
  8463                           ;mcc_generated_files/tmr0.c: 32:     INTCONbits.TMR0IF = 0;
  8464  15D3  110B               	bcf	11,2	;volatile
  8465                           
  8466                           ;mcc_generated_files/tmr0.c: 35:     INTCONbits.TMR0IE = 1;
  8467  15D4  168B               	bsf	11,5	;volatile
  8468                           
  8469                           ;mcc_generated_files/tmr0.c: 38:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  8470  15D5  3003               	movlw	low _TMR0_DefaultInterruptHandler
  8471  15D6  0021               	movlb	1	; select bank1
  8472  15D7  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler^(0+128)
  8473  15D8  3000               	movlw	high _TMR0_DefaultInterruptHandler
  8474  15D9  00A1               	movwf	(TMR0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  8475  15DA  3195  251E         	fcall	_TMR0_SetInterruptHandler
  8476  15DC  0008               	return
  8477  15DD                     __end_of_TMR0_Initialize:	
  8478                           
  8479                           	psect	text24
  8480  151E                     __ptext24:	
  8481 ;; *************** function _TMR0_SetInterruptHandler *****************
  8482 ;; Defined at:
  8483 ;;		line 79 in file "mcc_generated_files/tmr0.c"
  8484 ;; Parameters:    Size  Location     Type
  8485 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  8486 ;;		 -> timerISR(1), TMR0_DefaultInterruptHandler(1), 
  8487 ;; Auto vars:     Size  Location     Type
  8488 ;;		None
  8489 ;; Return value:  Size  Location     Type
  8490 ;;                  1    wreg      void 
  8491 ;; Registers used:
  8492 ;;		wreg
  8493 ;; Tracked objects:
  8494 ;;		On entry : 0/0
  8495 ;;		On exit  : 0/0
  8496 ;;		Unchanged: 0/0
  8497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8498 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8501 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8502 ;;Total ram usage:        2 bytes
  8503 ;; Hardware stack levels used:    1
  8504 ;; Hardware stack levels required when called:    6
  8505 ;; This function calls:
  8506 ;;		Nothing
  8507 ;; This function is called by:
  8508 ;;		_TMR0_Initialize
  8509 ;;		_main
  8510 ;; This function uses a non-reentrant model
  8511 ;;
  8512                           
  8513                           
  8514                           ;psect for function _TMR0_SetInterruptHandler
  8515  151E                     _TMR0_SetInterruptHandler:	
  8516                           
  8517                           ;mcc_generated_files/tmr0.c: 80:     TMR0_InterruptHandler = InterruptHandler;
  8518                           
  8519                           ;incstack = 0
  8520                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  8521  151E  0021               	movlb	1	; select bank1
  8522  151F  0821               	movf	(TMR0_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  8523  1520  0022               	movlb	2	; select bank2
  8524  1521  00CF               	movwf	(_TMR0_InterruptHandler+1)^(0+256)
  8525  1522  0021               	movlb	1	; select bank1
  8526  1523  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler^(0+128),w
  8527  1524  0022               	movlb	2	; select bank2
  8528  1525  00CE               	movwf	_TMR0_InterruptHandler^(0+256)
  8529  1526  0008               	return
  8530  1527                     __end_of_TMR0_SetInterruptHandler:	
  8531                           
  8532                           	psect	text25
  8533  170A                     __ptext25:	
  8534 ;; *************** function _PIN_MANAGER_Initialize *****************
  8535 ;; Defined at:
  8536 ;;		line 6 in file "mcc_generated_files/pin_manager.c"
  8537 ;; Parameters:    Size  Location     Type
  8538 ;;		None
  8539 ;; Auto vars:     Size  Location     Type
  8540 ;;		None
  8541 ;; Return value:  Size  Location     Type
  8542 ;;                  1    wreg      void 
  8543 ;; Registers used:
  8544 ;;		wreg, status,2, status,0, pclath, cstack
  8545 ;; Tracked objects:
  8546 ;;		On entry : 0/0
  8547 ;;		On exit  : 0/0
  8548 ;;		Unchanged: 0/0
  8549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8554 ;;Total ram usage:        0 bytes
  8555 ;; Hardware stack levels used:    1
  8556 ;; Hardware stack levels required when called:    7
  8557 ;; This function calls:
  8558 ;;		_IOCCF7_SetInterruptHandler
  8559 ;; This function is called by:
  8560 ;;		_SYSTEM_Initialize
  8561 ;; This function uses a non-reentrant model
  8562 ;;
  8563                           
  8564                           
  8565                           ;psect for function _PIN_MANAGER_Initialize
  8566  170A                     _PIN_MANAGER_Initialize:	
  8567                           
  8568                           ;mcc_generated_files/pin_manager.c: 11:     LATA = 0x00;
  8569                           
  8570                           ;incstack = 0
  8571                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8572  170A  0022               	movlb	2	; select bank2
  8573  170B  018C               	clrf	12	;volatile
  8574                           
  8575                           ;mcc_generated_files/pin_manager.c: 12:     LATB = 0x00;
  8576  170C  018D               	clrf	13	;volatile
  8577                           
  8578                           ;mcc_generated_files/pin_manager.c: 13:     LATC = 0x00;
  8579  170D  018E               	clrf	14	;volatile
  8580                           
  8581                           ;mcc_generated_files/pin_manager.c: 18:     TRISA = 0x37;
  8582  170E  3037               	movlw	55
  8583  170F  0021               	movlb	1	; select bank1
  8584  1710  008C               	movwf	12	;volatile
  8585                           
  8586                           ;mcc_generated_files/pin_manager.c: 19:     TRISB = 0x70;
  8587  1711  3070               	movlw	112
  8588  1712  008D               	movwf	13	;volatile
  8589                           
  8590                           ;mcc_generated_files/pin_manager.c: 20:     TRISC = 0xFF;
  8591  1713  30FF               	movlw	255
  8592  1714  008E               	movwf	14	;volatile
  8593                           
  8594                           ;mcc_generated_files/pin_manager.c: 25:     ANSELC = 0x4F;
  8595  1715  304F               	movlw	79
  8596  1716  0023               	movlb	3	; select bank3
  8597  1717  008E               	movwf	14	;volatile
  8598                           
  8599                           ;mcc_generated_files/pin_manager.c: 26:     ANSELB = 0x70;
  8600  1718  3070               	movlw	112
  8601  1719  008D               	movwf	13	;volatile
  8602                           
  8603                           ;mcc_generated_files/pin_manager.c: 27:     ANSELA = 0x17;
  8604  171A  3017               	movlw	23
  8605  171B  008C               	movwf	12	;volatile
  8606                           
  8607                           ;mcc_generated_files/pin_manager.c: 32:     WPUB = 0x00;
  8608  171C  0024               	movlb	4	; select bank4
  8609  171D  018D               	clrf	13	;volatile
  8610                           
  8611                           ;mcc_generated_files/pin_manager.c: 33:     WPUA = 0x00;
  8612  171E  018C               	clrf	12	;volatile
  8613                           
  8614                           ;mcc_generated_files/pin_manager.c: 34:     WPUC = 0x00;
  8615  171F  018E               	clrf	14	;volatile
  8616                           
  8617                           ;mcc_generated_files/pin_manager.c: 35:     OPTION_REGbits.nWPUEN = 1;
  8618  1720  0021               	movlb	1	; select bank1
  8619  1721  1795               	bsf	21,7	;volatile
  8620                           
  8621                           ;mcc_generated_files/pin_manager.c: 40:     ODCONA = 0x00;
  8622  1722  0025               	movlb	5	; select bank5
  8623  1723  018C               	clrf	12	;volatile
  8624                           
  8625                           ;mcc_generated_files/pin_manager.c: 41:     ODCONB = 0x00;
  8626  1724  018D               	clrf	13	;volatile
  8627                           
  8628                           ;mcc_generated_files/pin_manager.c: 42:     ODCONC = 0x00;
  8629  1725  018E               	clrf	14	;volatile
  8630                           
  8631                           ;mcc_generated_files/pin_manager.c: 47:     SLRCONA = 0x37;
  8632  1726  3037               	movlw	55
  8633  1727  0026               	movlb	6	; select bank6
  8634  1728  008C               	movwf	12	;volatile
  8635                           
  8636                           ;mcc_generated_files/pin_manager.c: 48:     SLRCONB = 0xF0;
  8637  1729  30F0               	movlw	240
  8638  172A  008D               	movwf	13	;volatile
  8639                           
  8640                           ;mcc_generated_files/pin_manager.c: 49:     SLRCONC = 0xFF;
  8641  172B  30FF               	movlw	255
  8642  172C  008E               	movwf	14	;volatile
  8643                           
  8644                           ;mcc_generated_files/pin_manager.c: 56:     IOCCFbits.IOCCF7 = 0;
  8645  172D  0027               	movlb	7	; select bank7
  8646  172E  1399               	bcf	25,7	;volatile
  8647                           
  8648                           ;mcc_generated_files/pin_manager.c: 58:     IOCCNbits.IOCCN7 = 0;
  8649  172F  1398               	bcf	24,7	;volatile
  8650                           
  8651                           ;mcc_generated_files/pin_manager.c: 60:     IOCCPbits.IOCCP7 = 1;
  8652  1730  1797               	bsf	23,7	;volatile
  8653                           
  8654                           ;mcc_generated_files/pin_manager.c: 65:     IOCCF7_SetInterruptHandler(IOCCF7_DefaultInt
      +                          erruptHandler);
  8655  1731  3002               	movlw	low _IOCCF7_DefaultInterruptHandler
  8656  1732  0021               	movlb	1	; select bank1
  8657  1733  00A0               	movwf	IOCCF7_SetInterruptHandler@InterruptHandler^(0+128)
  8658  1734  3000               	movlw	high _IOCCF7_DefaultInterruptHandler
  8659  1735  00A1               	movwf	(IOCCF7_SetInterruptHandler@InterruptHandler^(0+128)+1)
  8660  1736  3195  2515         	fcall	_IOCCF7_SetInterruptHandler
  8661                           
  8662                           ;mcc_generated_files/pin_manager.c: 68:     INTCONbits.IOCIE = 1;
  8663  1738  158B               	bsf	11,3	;volatile
  8664                           
  8665                           ;mcc_generated_files/pin_manager.c: 71:     RB7PPS = 0x12;
  8666  1739  3012               	movlw	18
  8667  173A  003D               	movlb	29	; select bank29
  8668  173B  009F               	movwf	31	;volatile
  8669  173C  0008               	return
  8670  173D                     __end_of_PIN_MANAGER_Initialize:	
  8671                           
  8672                           	psect	text26
  8673  1515                     __ptext26:	
  8674 ;; *************** function _IOCCF7_SetInterruptHandler *****************
  8675 ;; Defined at:
  8676 ;;		line 101 in file "mcc_generated_files/pin_manager.c"
  8677 ;; Parameters:    Size  Location     Type
  8678 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  8679 ;;		 -> speedCalc(1), IOCCF7_DefaultInterruptHandler(1), 
  8680 ;; Auto vars:     Size  Location     Type
  8681 ;;		None
  8682 ;; Return value:  Size  Location     Type
  8683 ;;                  1    wreg      void 
  8684 ;; Registers used:
  8685 ;;		wreg
  8686 ;; Tracked objects:
  8687 ;;		On entry : 0/0
  8688 ;;		On exit  : 0/0
  8689 ;;		Unchanged: 0/0
  8690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8691 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8694 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8695 ;;Total ram usage:        2 bytes
  8696 ;; Hardware stack levels used:    1
  8697 ;; Hardware stack levels required when called:    6
  8698 ;; This function calls:
  8699 ;;		Nothing
  8700 ;; This function is called by:
  8701 ;;		_PIN_MANAGER_Initialize
  8702 ;;		_main
  8703 ;; This function uses a non-reentrant model
  8704 ;;
  8705                           
  8706                           
  8707                           ;psect for function _IOCCF7_SetInterruptHandler
  8708  1515                     _IOCCF7_SetInterruptHandler:	
  8709                           
  8710                           ;mcc_generated_files/pin_manager.c: 102:     IOCCF7_InterruptHandler = InterruptHandler;
  8711                           
  8712                           ;incstack = 0
  8713                           ; Regs used in _IOCCF7_SetInterruptHandler: [wreg]
  8714  1515  0021               	movlb	1	; select bank1
  8715  1516  0821               	movf	(IOCCF7_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  8716  1517  0022               	movlb	2	; select bank2
  8717  1518  00D1               	movwf	(_IOCCF7_InterruptHandler+1)^(0+256)
  8718  1519  0021               	movlb	1	; select bank1
  8719  151A  0820               	movf	IOCCF7_SetInterruptHandler@InterruptHandler^(0+128),w
  8720  151B  0022               	movlb	2	; select bank2
  8721  151C  00D0               	movwf	_IOCCF7_InterruptHandler^(0+256)
  8722  151D  0008               	return
  8723  151E                     __end_of_IOCCF7_SetInterruptHandler:	
  8724                           
  8725                           	psect	text27
  8726  14DC                     __ptext27:	
  8727 ;; *************** function _OSCILLATOR_Initialize *****************
  8728 ;; Defined at:
  8729 ;;		line 14 in file "mcc_generated_files/mcc.c"
  8730 ;; Parameters:    Size  Location     Type
  8731 ;;		None
  8732 ;; Auto vars:     Size  Location     Type
  8733 ;;		None
  8734 ;; Return value:  Size  Location     Type
  8735 ;;                  1    wreg      void 
  8736 ;; Registers used:
  8737 ;;		wreg, status,2
  8738 ;; Tracked objects:
  8739 ;;		On entry : 0/0
  8740 ;;		On exit  : 0/0
  8741 ;;		Unchanged: 0/0
  8742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8747 ;;Total ram usage:        0 bytes
  8748 ;; Hardware stack levels used:    1
  8749 ;; Hardware stack levels required when called:    6
  8750 ;; This function calls:
  8751 ;;		Nothing
  8752 ;; This function is called by:
  8753 ;;		_SYSTEM_Initialize
  8754 ;; This function uses a non-reentrant model
  8755 ;;
  8756                           
  8757                           
  8758                           ;psect for function _OSCILLATOR_Initialize
  8759  14DC                     _OSCILLATOR_Initialize:	
  8760                           
  8761                           ;mcc_generated_files/mcc.c: 17:     OSCCON = 0x7A;
  8762                           
  8763                           ;incstack = 0
  8764                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  8765  14DC  307A               	movlw	122
  8766  14DD  0021               	movlb	1	; select bank1
  8767  14DE  0099               	movwf	25	;volatile
  8768                           
  8769                           ;mcc_generated_files/mcc.c: 19:     OSCTUNE = 0x00;
  8770  14DF  0198               	clrf	24	;volatile
  8771                           
  8772                           ;mcc_generated_files/mcc.c: 21:     BORCON = 0x00;
  8773  14E0  0022               	movlb	2	; select bank2
  8774  14E1  0196               	clrf	22	;volatile
  8775  14E2  0008               	return
  8776  14E3                     __end_of_OSCILLATOR_Initialize:	
  8777                           
  8778                           	psect	text28
  8779  0800                     __ptext28:	
  8780 ;; *************** function _EUSART_Initialize *****************
  8781 ;; Defined at:
  8782 ;;		line 65 in file "mcc_generated_files/eusart.c"
  8783 ;; Parameters:    Size  Location     Type
  8784 ;;		None
  8785 ;; Auto vars:     Size  Location     Type
  8786 ;;		None
  8787 ;; Return value:  Size  Location     Type
  8788 ;;                  1    wreg      void 
  8789 ;; Registers used:
  8790 ;;		wreg, status,2, status,0, pclath, cstack
  8791 ;; Tracked objects:
  8792 ;;		On entry : 0/0
  8793 ;;		On exit  : 0/0
  8794 ;;		Unchanged: 0/0
  8795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8800 ;;Total ram usage:        0 bytes
  8801 ;; Hardware stack levels used:    1
  8802 ;; Hardware stack levels required when called:    7
  8803 ;; This function calls:
  8804 ;;		_EUSART_SetErrorHandler
  8805 ;;		_EUSART_SetFramingErrorHandler
  8806 ;;		_EUSART_SetOverrunErrorHandler
  8807 ;; This function is called by:
  8808 ;;		_SYSTEM_Initialize
  8809 ;; This function uses a non-reentrant model
  8810 ;;
  8811                           
  8812                           
  8813                           ;psect for function _EUSART_Initialize
  8814  0800                     _EUSART_Initialize:	
  8815                           
  8816                           ;mcc_generated_files/eusart.c: 70:     BAUD1CON = 0x08;
  8817                           
  8818                           ;incstack = 0
  8819                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8820  0800  3008               	movlw	8
  8821  0801  0023               	movlb	3	; select bank3
  8822  0802  009F               	movwf	31	;volatile
  8823                           
  8824                           ;mcc_generated_files/eusart.c: 73:     RC1STA = 0x80;
  8825  0803  3080               	movlw	128
  8826  0804  009D               	movwf	29	;volatile
  8827                           
  8828                           ;mcc_generated_files/eusart.c: 76:     TX1STA = 0x24;
  8829  0805  3024               	movlw	36
  8830  0806  009E               	movwf	30	;volatile
  8831                           
  8832                           ;mcc_generated_files/eusart.c: 79:     SPBRGL = 0xA0;
  8833  0807  30A0               	movlw	160
  8834  0808  009B               	movwf	27	;volatile
  8835                           
  8836                           ;mcc_generated_files/eusart.c: 82:     SPBRGH = 0x01;
  8837  0809  3001               	movlw	1
  8838  080A  009C               	movwf	28	;volatile
  8839                           
  8840                           ;mcc_generated_files/eusart.c: 85:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  8841  080B  3000               	movlw	0
  8842  080C  0021               	movlb	1	; select bank1
  8843  080D  00A0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128)
  8844  080E  3000               	movlw	0
  8845  080F  00A1               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler^(0+128)+1)
  8846  0810  3195  2503  3188   	fcall	_EUSART_SetFramingErrorHandler
  8847                           
  8848                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  8849  0813  3000               	movlw	0
  8850  0814  0021               	movlb	1	; select bank1
  8851  0815  00A0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)
  8852  0816  3000               	movlw	0
  8853  0817  00A1               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)+1)
  8854  0818  3195  250C  3188   	fcall	_EUSART_SetOverrunErrorHandler
  8855                           
  8856                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  8857  081B  3000               	movlw	0
  8858  081C  0021               	movlb	1	; select bank1
  8859  081D  00A0               	movwf	EUSART_SetErrorHandler@interruptHandler^(0+128)
  8860  081E  3000               	movlw	0
  8861  081F  00A1               	movwf	(EUSART_SetErrorHandler@interruptHandler^(0+128)+1)
  8862  0820  3194  24FA         	fcall	_EUSART_SetErrorHandler
  8863                           
  8864                           ;mcc_generated_files/eusart.c: 89:     eusartRxLastError.status = 0;
  8865  0822  0020               	movlb	0	; select bank0
  8866  0823  01E8               	clrf	_eusartRxLastError	;volatile
  8867  0824  0008               	return
  8868  0825                     __end_of_EUSART_Initialize:	
  8869                           
  8870                           	psect	text29
  8871  150C                     __ptext29:	
  8872 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  8873 ;; Defined at:
  8874 ;;		line 175 in file "mcc_generated_files/eusart.c"
  8875 ;; Parameters:    Size  Location     Type
  8876 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  8877 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  8878 ;; Auto vars:     Size  Location     Type
  8879 ;;		None
  8880 ;; Return value:  Size  Location     Type
  8881 ;;                  1    wreg      void 
  8882 ;; Registers used:
  8883 ;;		wreg
  8884 ;; Tracked objects:
  8885 ;;		On entry : 0/0
  8886 ;;		On exit  : 0/0
  8887 ;;		Unchanged: 0/0
  8888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8889 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8892 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8893 ;;Total ram usage:        2 bytes
  8894 ;; Hardware stack levels used:    1
  8895 ;; Hardware stack levels required when called:    6
  8896 ;; This function calls:
  8897 ;;		Nothing
  8898 ;; This function is called by:
  8899 ;;		_EUSART_Initialize
  8900 ;; This function uses a non-reentrant model
  8901 ;;
  8902                           
  8903                           
  8904                           ;psect for function _EUSART_SetOverrunErrorHandler
  8905  150C                     _EUSART_SetOverrunErrorHandler:	
  8906                           
  8907                           ;mcc_generated_files/eusart.c: 176:     EUSART_OverrunErrorHandler = interruptHandler;
  8908                           
  8909                           ;incstack = 0
  8910                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  8911  150C  0021               	movlb	1	; select bank1
  8912  150D  0821               	movf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^(0+128),w
  8913  150E  0022               	movlb	2	; select bank2
  8914  150F  00D5               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+256)
  8915  1510  0021               	movlb	1	; select bank1
  8916  1511  0820               	movf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128),w
  8917  1512  0022               	movlb	2	; select bank2
  8918  1513  00D4               	movwf	_EUSART_OverrunErrorHandler^(0+256)
  8919  1514  0008               	return
  8920  1515                     __end_of_EUSART_SetOverrunErrorHandler:	
  8921                           
  8922                           	psect	text30
  8923  1503                     __ptext30:	
  8924 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  8925 ;; Defined at:
  8926 ;;		line 171 in file "mcc_generated_files/eusart.c"
  8927 ;; Parameters:    Size  Location     Type
  8928 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  8929 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  8930 ;; Auto vars:     Size  Location     Type
  8931 ;;		None
  8932 ;; Return value:  Size  Location     Type
  8933 ;;                  1    wreg      void 
  8934 ;; Registers used:
  8935 ;;		wreg
  8936 ;; Tracked objects:
  8937 ;;		On entry : 0/0
  8938 ;;		On exit  : 0/0
  8939 ;;		Unchanged: 0/0
  8940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8941 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8944 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8945 ;;Total ram usage:        2 bytes
  8946 ;; Hardware stack levels used:    1
  8947 ;; Hardware stack levels required when called:    6
  8948 ;; This function calls:
  8949 ;;		Nothing
  8950 ;; This function is called by:
  8951 ;;		_EUSART_Initialize
  8952 ;; This function uses a non-reentrant model
  8953 ;;
  8954                           
  8955                           
  8956                           ;psect for function _EUSART_SetFramingErrorHandler
  8957  1503                     _EUSART_SetFramingErrorHandler:	
  8958                           
  8959                           ;mcc_generated_files/eusart.c: 172:     EUSART_FramingErrorHandler = interruptHandler;
  8960                           
  8961                           ;incstack = 0
  8962                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  8963  1503  0021               	movlb	1	; select bank1
  8964  1504  0821               	movf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^(0+128),w
  8965  1505  0022               	movlb	2	; select bank2
  8966  1506  00D7               	movwf	(_EUSART_FramingErrorHandler+1)^(0+256)
  8967  1507  0021               	movlb	1	; select bank1
  8968  1508  0820               	movf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128),w
  8969  1509  0022               	movlb	2	; select bank2
  8970  150A  00D6               	movwf	_EUSART_FramingErrorHandler^(0+256)
  8971  150B  0008               	return
  8972  150C                     __end_of_EUSART_SetFramingErrorHandler:	
  8973                           
  8974                           	psect	text31
  8975  14FA                     __ptext31:	
  8976 ;; *************** function _EUSART_SetErrorHandler *****************
  8977 ;; Defined at:
  8978 ;;		line 179 in file "mcc_generated_files/eusart.c"
  8979 ;; Parameters:    Size  Location     Type
  8980 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  8981 ;;		 -> EUSART_DefaultErrorHandler(1), 
  8982 ;; Auto vars:     Size  Location     Type
  8983 ;;		None
  8984 ;; Return value:  Size  Location     Type
  8985 ;;                  1    wreg      void 
  8986 ;; Registers used:
  8987 ;;		wreg
  8988 ;; Tracked objects:
  8989 ;;		On entry : 0/0
  8990 ;;		On exit  : 0/0
  8991 ;;		Unchanged: 0/0
  8992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8993 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8996 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8997 ;;Total ram usage:        2 bytes
  8998 ;; Hardware stack levels used:    1
  8999 ;; Hardware stack levels required when called:    6
  9000 ;; This function calls:
  9001 ;;		Nothing
  9002 ;; This function is called by:
  9003 ;;		_EUSART_Initialize
  9004 ;; This function uses a non-reentrant model
  9005 ;;
  9006                           
  9007                           
  9008                           ;psect for function _EUSART_SetErrorHandler
  9009  14FA                     _EUSART_SetErrorHandler:	
  9010                           
  9011                           ;mcc_generated_files/eusart.c: 180:     EUSART_ErrorHandler = interruptHandler;
  9012                           
  9013                           ;incstack = 0
  9014                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  9015  14FA  0021               	movlb	1	; select bank1
  9016  14FB  0821               	movf	(EUSART_SetErrorHandler@interruptHandler+1)^(0+128),w
  9017  14FC  0022               	movlb	2	; select bank2
  9018  14FD  00D3               	movwf	(_EUSART_ErrorHandler+1)^(0+256)
  9019  14FE  0021               	movlb	1	; select bank1
  9020  14FF  0820               	movf	EUSART_SetErrorHandler@interruptHandler^(0+128),w
  9021  1500  0022               	movlb	2	; select bank2
  9022  1501  00D2               	movwf	_EUSART_ErrorHandler^(0+256)
  9023  1502  0008               	return
  9024  1503                     __end_of_EUSART_SetErrorHandler:	
  9025                           
  9026                           	psect	text32
  9027  14EA                     __ptext32:	
  9028 ;; *************** function _ADC_Initialize *****************
  9029 ;; Defined at:
  9030 ;;		line 15 in file "mcc_generated_files/adc.c"
  9031 ;; Parameters:    Size  Location     Type
  9032 ;;		None
  9033 ;; Auto vars:     Size  Location     Type
  9034 ;;		None
  9035 ;; Return value:  Size  Location     Type
  9036 ;;                  1    wreg      void 
  9037 ;; Registers used:
  9038 ;;		wreg, status,2
  9039 ;; Tracked objects:
  9040 ;;		On entry : 0/0
  9041 ;;		On exit  : 0/0
  9042 ;;		Unchanged: 0/0
  9043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9047 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9048 ;;Total ram usage:        0 bytes
  9049 ;; Hardware stack levels used:    1
  9050 ;; Hardware stack levels required when called:    6
  9051 ;; This function calls:
  9052 ;;		Nothing
  9053 ;; This function is called by:
  9054 ;;		_SYSTEM_Initialize
  9055 ;; This function uses a non-reentrant model
  9056 ;;
  9057                           
  9058                           
  9059                           ;psect for function _ADC_Initialize
  9060  14EA                     _ADC_Initialize:	
  9061                           
  9062                           ;mcc_generated_files/adc.c: 20:     ADCON0 = 0x01;
  9063                           
  9064                           ;incstack = 0
  9065                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  9066  14EA  3001               	movlw	1
  9067  14EB  0021               	movlb	1	; select bank1
  9068  14EC  009D               	movwf	29	;volatile
  9069                           
  9070                           ;mcc_generated_files/adc.c: 23:     ADCON1 = 0x00;
  9071  14ED  019E               	clrf	30	;volatile
  9072                           
  9073                           ;mcc_generated_files/adc.c: 26:     ADCON2 = 0x00;
  9074  14EE  019F               	clrf	31	;volatile
  9075                           
  9076                           ;mcc_generated_files/adc.c: 29:     ADRESL = 0x00;
  9077  14EF  019B               	clrf	27	;volatile
  9078                           
  9079                           ;mcc_generated_files/adc.c: 32:     ADRESH = 0x00;
  9080  14F0  019C               	clrf	28	;volatile
  9081  14F1  0008               	return
  9082  14F2                     __end_of_ADC_Initialize:	
  9083                           
  9084                           	psect	intentry
  9085  0004                     __pintentry:	
  9086 ;; *************** function _INTERRUPT_InterruptManager *****************
  9087 ;; Defined at:
  9088 ;;		line 4 in file "mcc_generated_files/interrupt_manager.c"
  9089 ;; Parameters:    Size  Location     Type
  9090 ;;		None
  9091 ;; Auto vars:     Size  Location     Type
  9092 ;;		None
  9093 ;; Return value:  Size  Location     Type
  9094 ;;                  1    wreg      void 
  9095 ;; Registers used:
  9096 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9097 ;; Tracked objects:
  9098 ;;		On entry : 0/0
  9099 ;;		On exit  : 0/0
  9100 ;;		Unchanged: 0/0
  9101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9106 ;;Total ram usage:        0 bytes
  9107 ;; Hardware stack levels used:    1
  9108 ;; Hardware stack levels required when called:    5
  9109 ;; This function calls:
  9110 ;;		_PIN_MANAGER_IOC
  9111 ;;		_TMR0_ISR
  9112 ;;		_TMR1_ISR
  9113 ;; This function is called by:
  9114 ;;		Interrupt level 1
  9115 ;; This function uses a non-reentrant model
  9116 ;;
  9117                           
  9118  0004                     _INTERRUPT_InterruptManager:	
  9119                           
  9120                           ;incstack = 0
  9121  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  9122                           
  9123                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9124  0005  3180               	pagesel	$
  9125                           
  9126                           ;mcc_generated_files/interrupt_manager.c: 7:     if(INTCONbits.TMR0IE == 1 && INTCONbits
      +                          .TMR0IF == 1)
  9127  0006  1A8B               	btfsc	11,5	;volatile
  9128  0007  1D0B               	btfss	11,2	;volatile
  9129  0008  280D               	goto	i1l246
  9130                           
  9131                           ;mcc_generated_files/interrupt_manager.c: 8:     {;mcc_generated_files/interrupt_manager
      +                          .c: 9:         TMR0_ISR();
  9132  0009  3195  2564  3180   	fcall	_TMR0_ISR
  9133                           
  9134                           ;mcc_generated_files/interrupt_manager.c: 10:     }
  9135  000C  281E               	goto	i1l254
  9136  000D                     i1l246:	
  9137                           ;mcc_generated_files/interrupt_manager.c: 11:     else if(INTCONbits.IOCIE == 1 && INTCO
      +                          Nbits.IOCIF == 1)
  9138                           
  9139  000D  198B               	btfsc	11,3	;volatile
  9140  000E  1C0B               	btfss	11,0	;volatile
  9141  000F  2814               	goto	i1l248
  9142                           
  9143                           ;mcc_generated_files/interrupt_manager.c: 12:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 13:         PIN_MANAGER_IOC();
  9144  0010  3194  24C4  3180   	fcall	_PIN_MANAGER_IOC
  9145                           
  9146                           ;mcc_generated_files/interrupt_manager.c: 14:     }
  9147  0013  281E               	goto	i1l254
  9148  0014                     i1l248:	
  9149                           ;mcc_generated_files/interrupt_manager.c: 15:     else if(INTCONbits.PEIE == 1)
  9150                           
  9151  0014  1F0B               	btfss	11,6	;volatile
  9152  0015  281E               	goto	i1l254
  9153                           
  9154                           ;mcc_generated_files/interrupt_manager.c: 16:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 17:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  9155  0016  0021               	movlb	1	; select bank1
  9156  0017  1C10               	btfss	16,0	;volatile
  9157  0018  281E               	goto	i1l254
  9158  0019  0020               	movlb	0	; select bank0
  9159  001A  1C10               	btfss	16,0	;volatile
  9160  001B  281E               	goto	i1l254
  9161                           
  9162                           ;mcc_generated_files/interrupt_manager.c: 18:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 19:             TMR1_ISR();
  9163  001C  3195  2586         	fcall	_TMR1_ISR
  9164  001E                     i1l254:	
  9165                           ;mcc_generated_files/interrupt_manager.c: 20:         }
  9166                           
  9167  001E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  9168  001F  0009               	retfie
  9169  0020                     __end_of_INTERRUPT_InterruptManager:	
  9170                           
  9171                           	psect	text34
  9172  1586                     __ptext34:	
  9173 ;; *************** function _TMR1_ISR *****************
  9174 ;; Defined at:
  9175 ;;		line 108 in file "mcc_generated_files/tmr1.c"
  9176 ;; Parameters:    Size  Location     Type
  9177 ;;		None
  9178 ;; Auto vars:     Size  Location     Type
  9179 ;;		None
  9180 ;; Return value:  Size  Location     Type
  9181 ;;                  1    wreg      void 
  9182 ;; Registers used:
  9183 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9184 ;; Tracked objects:
  9185 ;;		On entry : 0/0
  9186 ;;		On exit  : 0/0
  9187 ;;		Unchanged: 0/0
  9188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9192 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9193 ;;Total ram usage:        0 bytes
  9194 ;; Hardware stack levels used:    1
  9195 ;; Hardware stack levels required when called:    2
  9196 ;; This function calls:
  9197 ;;		Absolute function
  9198 ;;		_TMR1_DefaultInterruptHandler
  9199 ;;		_TMR1_WriteTimer
  9200 ;;		_heartRateISR
  9201 ;; This function is called by:
  9202 ;;		_INTERRUPT_InterruptManager
  9203 ;; This function uses a non-reentrant model
  9204 ;;
  9205                           
  9206                           
  9207                           ;psect for function _TMR1_ISR
  9208  1586                     _TMR1_ISR:	
  9209                           
  9210                           ;mcc_generated_files/tmr1.c: 112:     PIR1bits.TMR1IF = 0;
  9211                           
  9212                           ;incstack = 0
  9213                           ; Regs used in _TMR1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9214  1586  0020               	movlb	0	; select bank0
  9215  1587  1010               	bcf	16,0	;volatile
  9216                           
  9217                           ;mcc_generated_files/tmr1.c: 113:     TMR1_WriteTimer(timer1ReloadVal);
  9218  1588  0022               	movlb	2	; select bank2
  9219  1589  084D               	movf	(_timer1ReloadVal+1)^(0+256),w	;volatile
  9220  158A  00F1               	movwf	TMR1_WriteTimer@timerVal+1
  9221  158B  084C               	movf	_timer1ReloadVal^(0+256),w	;volatile
  9222  158C  00F0               	movwf	TMR1_WriteTimer@timerVal
  9223  158D  3195  2555  3195   	fcall	_TMR1_WriteTimer
  9224                           
  9225                           ;mcc_generated_files/tmr1.c: 115:     if(TMR1_InterruptHandler)
  9226  1590  0022               	movlb	2	; select bank2
  9227  1591  084A               	movf	_TMR1_InterruptHandler^(0+256),w
  9228  1592  044B               	iorwf	(_TMR1_InterruptHandler+1)^(0+256),w
  9229  1593  1903               	btfsc	3,2
  9230  1594  0008               	return
  9231                           
  9232                           ;mcc_generated_files/tmr1.c: 116:     {;mcc_generated_files/tmr1.c: 117:         TMR1_In
      +                          terruptHandler();
  9233  1595  084B               	movf	(_TMR1_InterruptHandler+1)^(0+256),w
  9234  1596  008A               	movwf	10
  9235  1597  084A               	movf	_TMR1_InterruptHandler^(0+256),w
  9236  1598  000A               	callw
  9237  1599  3195               	pagesel	$
  9238  159A  0008               	return
  9239  159B                     __end_of_TMR1_ISR:	
  9240                           
  9241                           	psect	text35
  9242  07FF                     __ptext35:	
  9243 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  9244 ;; Defined at:
  9245 ;;		line 126 in file "mcc_generated_files/tmr1.c"
  9246 ;; Parameters:    Size  Location     Type
  9247 ;;		None
  9248 ;; Auto vars:     Size  Location     Type
  9249 ;;		None
  9250 ;; Return value:  Size  Location     Type
  9251 ;;                  1    wreg      void 
  9252 ;; Registers used:
  9253 ;;		None
  9254 ;; Tracked objects:
  9255 ;;		On entry : 0/0
  9256 ;;		On exit  : 0/0
  9257 ;;		Unchanged: 0/0
  9258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9263 ;;Total ram usage:        0 bytes
  9264 ;; Hardware stack levels used:    1
  9265 ;; This function calls:
  9266 ;;		Nothing
  9267 ;; This function is called by:
  9268 ;;		_TMR1_Initialize
  9269 ;;		_TMR1_ISR
  9270 ;; This function uses a non-reentrant model
  9271 ;;
  9272                           
  9273                           
  9274                           ;psect for function _TMR1_DefaultInterruptHandler
  9275  07FF                     _TMR1_DefaultInterruptHandler:	
  9276                           
  9277                           ;incstack = 0
  9278                           ; Regs used in _TMR1_DefaultInterruptHandler: []
  9279  07FF  0008               	return
  9280  0800                     __end_of_TMR1_DefaultInterruptHandler:	
  9281                           
  9282                           	psect	text36
  9283  047E                     __ptext36:	
  9284 ;; *************** function _heartRateISR *****************
  9285 ;; Defined at:
  9286 ;;		line 126 in file "main.c"
  9287 ;; Parameters:    Size  Location     Type
  9288 ;;		None
  9289 ;; Auto vars:     Size  Location     Type
  9290 ;;  i               2   10[BANK0 ] int 
  9291 ;;  i               2   14[BANK0 ] int 
  9292 ;;  runningTotal    2    8[BANK0 ] int 
  9293 ;;  N               2   12[BANK0 ] int 
  9294 ;; Return value:  Size  Location     Type
  9295 ;;                  1    wreg      void 
  9296 ;; Registers used:
  9297 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9298 ;; Tracked objects:
  9299 ;;		On entry : 0/0
  9300 ;;		On exit  : 0/0
  9301 ;;		Unchanged: 0/0
  9302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9304 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9305 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9306 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9307 ;;Total ram usage:       10 bytes
  9308 ;; Hardware stack levels used:    1
  9309 ;; Hardware stack levels required when called:    1
  9310 ;; This function calls:
  9311 ;;		_ADC_GetConversion
  9312 ;;		___aldiv
  9313 ;;		___awdiv
  9314 ;;		___wmul
  9315 ;; This function is called by:
  9316 ;;		_main
  9317 ;;		_TMR1_ISR
  9318 ;; This function uses a non-reentrant model
  9319 ;;
  9320                           
  9321                           
  9322                           ;psect for function _heartRateISR
  9323  047E                     _heartRateISR:	
  9324                           
  9325                           ;main.c: 128:     Signal = ADC_GetConversion( channel_AN4 ) ;
  9326                           
  9327                           ;incstack = 0
  9328                           ; Regs used in _heartRateISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9329  047E  3004               	movlw	4
  9330  047F  3195  25DD  3184   	fcall	_ADC_GetConversion
  9331  0482  0871               	movf	?_ADC_GetConversion+1,w
  9332  0483  0020               	movlb	0	; select bank0
  9333  0484  00E3               	movwf	_Signal+1	;volatile
  9334  0485  0870               	movf	?_ADC_GetConversion,w
  9335  0486  00E2               	movwf	_Signal	;volatile
  9336                           
  9337                           ;main.c: 129:     sampleCounter += 2;
  9338  0487  3002               	movlw	2
  9339  0488  07DC               	addwf	_sampleCounter,f	;volatile
  9340  0489  3000               	movlw	0
  9341  048A  3DDD               	addwfc	_sampleCounter+1,f	;volatile
  9342  048B  3000               	movlw	0
  9343  048C  3DDE               	addwfc	_sampleCounter+2,f	;volatile
  9344  048D  3000               	movlw	0
  9345  048E  3DDF               	addwfc	_sampleCounter+3,f	;volatile
  9346                           
  9347                           ;main.c: 130:     int N = sampleCounter - lastBeatTime;
  9348  048F  0022               	movlb	2	; select bank2
  9349  0490  0820               	movf	_lastBeatTime^(0+256),w	;volatile
  9350  0491  0020               	movlb	0	; select bank0
  9351  0492  025C               	subwf	_sampleCounter,w	;volatile
  9352  0493  00AC               	movwf	heartRateISR@N
  9353  0494  0022               	movlb	2	; select bank2
  9354  0495  0821               	movf	(_lastBeatTime+1)^(0+256),w	;volatile
  9355  0496  0020               	movlb	0	; select bank0
  9356  0497  3B5D               	subwfb	_sampleCounter+1,w	;volatile
  9357  0498  00AD               	movwf	heartRateISR@N+1
  9358                           
  9359                           ;main.c: 133:     if ( Signal < thresh && N > ( IBI / 5 ) * 3 ) {
  9360  0499  0863               	movf	_Signal+1,w	;volatile
  9361  049A  3A80               	xorlw	128
  9362  049B  00A6               	movwf	??_heartRateISR
  9363  049C  086C               	movf	_thresh+1,w	;volatile
  9364  049D  3A80               	xorlw	128
  9365  049E  0226               	subwf	??_heartRateISR,w
  9366  049F  1D03               	skipz
  9367  04A0  2CA3               	goto	u449_25
  9368  04A1  086B               	movf	_thresh,w	;volatile
  9369  04A2  0262               	subwf	_Signal,w	;volatile
  9370  04A3                     u449_25:	
  9371  04A3  1803               	skipnc
  9372  04A4  2CDB               	goto	i1l395
  9373  04A5  3005               	movlw	5
  9374  04A6  00F0               	movwf	___awdiv@divisor
  9375  04A7  3000               	movlw	0
  9376  04A8  00F1               	movwf	___awdiv@divisor+1
  9377  04A9  0020               	movlb	0	; select bank0
  9378  04AA  086A               	movf	_IBI+1,w	;volatile
  9379  04AB  00F3               	movwf	___awdiv@dividend+1
  9380  04AC  0869               	movf	_IBI,w	;volatile
  9381  04AD  00F2               	movwf	___awdiv@dividend
  9382  04AE  3188  2025  3184   	fcall	___awdiv
  9383  04B1  0871               	movf	?___awdiv+1,w
  9384  04B2  00FA               	movwf	___wmul@multiplier+1
  9385  04B3  0870               	movf	?___awdiv,w
  9386  04B4  00F9               	movwf	___wmul@multiplier
  9387  04B5  3003               	movlw	3
  9388  04B6  00FB               	movwf	___wmul@multiplicand
  9389  04B7  3000               	movlw	0
  9390  04B8  00FC               	movwf	___wmul@multiplicand+1
  9391  04B9  3196  267B  3184   	fcall	___wmul
  9392  04BC  087A               	movf	?___wmul+1,w
  9393  04BD  3A80               	xorlw	128
  9394  04BE  0020               	movlb	0	; select bank0
  9395  04BF  00A6               	movwf	??_heartRateISR
  9396  04C0  082D               	movf	heartRateISR@N+1,w
  9397  04C1  3A80               	xorlw	128
  9398  04C2  0226               	subwf	??_heartRateISR,w
  9399  04C3  1D03               	skipz
  9400  04C4  2CC7               	goto	u450_25
  9401  04C5  082C               	movf	heartRateISR@N,w
  9402  04C6  0279               	subwf	?___wmul,w
  9403  04C7                     u450_25:	
  9404  04C7  1803               	skipnc
  9405  04C8  2CDB               	goto	i1l395
  9406                           
  9407                           ;main.c: 134:         if ( Signal < T ) {
  9408  04C9  0020               	movlb	0	; select bank0
  9409  04CA  0863               	movf	_Signal+1,w	;volatile
  9410  04CB  3A80               	xorlw	128
  9411  04CC  00A6               	movwf	??_heartRateISR
  9412  04CD  086E               	movf	_T+1,w	;volatile
  9413  04CE  3A80               	xorlw	128
  9414  04CF  0226               	subwf	??_heartRateISR,w
  9415  04D0  1D03               	skipz
  9416  04D1  2CD4               	goto	u451_25
  9417  04D2  086D               	movf	_T,w	;volatile
  9418  04D3  0262               	subwf	_Signal,w	;volatile
  9419  04D4                     u451_25:	
  9420  04D4  1803               	skipnc
  9421  04D5  2CDB               	goto	i1l395
  9422                           
  9423                           ;main.c: 135:             T = Signal;
  9424  04D6  0020               	movlb	0	; select bank0
  9425  04D7  0863               	movf	_Signal+1,w	;volatile
  9426  04D8  00EE               	movwf	_T+1	;volatile
  9427  04D9  0862               	movf	_Signal,w	;volatile
  9428  04DA  00ED               	movwf	_T	;volatile
  9429  04DB                     i1l395:	
  9430                           ;main.c: 137:     }
  9431                           
  9432                           
  9433                           ;main.c: 138:         if ( Signal > thresh && Signal > P ) {
  9434  04DB  0020               	movlb	0	; select bank0
  9435  04DC  086C               	movf	_thresh+1,w	;volatile
  9436  04DD  3A80               	xorlw	128
  9437  04DE  00A6               	movwf	??_heartRateISR
  9438  04DF  0863               	movf	_Signal+1,w	;volatile
  9439  04E0  3A80               	xorlw	128
  9440  04E1  0226               	subwf	??_heartRateISR,w
  9441  04E2  1D03               	skipz
  9442  04E3  2CE6               	goto	u452_25
  9443  04E4  0862               	movf	_Signal,w	;volatile
  9444  04E5  026B               	subwf	_thresh,w	;volatile
  9445  04E6                     u452_25:	
  9446  04E6  1803               	skipnc
  9447  04E7  2CFF               	goto	i1l397
  9448  04E8  0022               	movlb	2	; select bank2
  9449  04E9  086A               	movf	(_P+1)^(0+256),w	;volatile
  9450  04EA  3A80               	xorlw	128
  9451  04EB  0020               	movlb	0	; select bank0
  9452  04EC  00A6               	movwf	??_heartRateISR
  9453  04ED  0863               	movf	_Signal+1,w	;volatile
  9454  04EE  3A80               	xorlw	128
  9455  04EF  0226               	subwf	??_heartRateISR,w
  9456  04F0  1D03               	skipz
  9457  04F1  2CF5               	goto	u453_25
  9458  04F2  0862               	movf	_Signal,w	;volatile
  9459  04F3  0022               	movlb	2	; select bank2
  9460  04F4  0269               	subwf	_P^(0+256),w	;volatile
  9461  04F5                     u453_25:	
  9462  04F5  1803               	skipnc
  9463  04F6  2CFF               	goto	i1l397
  9464                           
  9465                           ;main.c: 139:         P = Signal;
  9466  04F7  0020               	movlb	0	; select bank0
  9467  04F8  0863               	movf	_Signal+1,w	;volatile
  9468  04F9  0022               	movlb	2	; select bank2
  9469  04FA  00EA               	movwf	(_P+1)^(0+256)	;volatile
  9470  04FB  0020               	movlb	0	; select bank0
  9471  04FC  0862               	movf	_Signal,w	;volatile
  9472  04FD  0022               	movlb	2	; select bank2
  9473  04FE  00E9               	movwf	_P^(0+256)	;volatile
  9474  04FF                     i1l397:	
  9475                           ;main.c: 140:     }
  9476                           
  9477                           
  9478                           ;main.c: 144:     if ( N > 250 ) {
  9479  04FF  0020               	movlb	0	; select bank0
  9480  0500  082D               	movf	heartRateISR@N+1,w
  9481  0501  3A80               	xorlw	128
  9482  0502  00A6               	movwf	??_heartRateISR
  9483  0503  3080               	movlw	128
  9484  0504  0226               	subwf	??_heartRateISR,w
  9485  0505  1D03               	skipz
  9486  0506  2D09               	goto	u454_25
  9487  0507  30FB               	movlw	251
  9488  0508  022C               	subwf	heartRateISR@N,w
  9489  0509                     u454_25:	
  9490  0509  1C03               	skipc
  9491  050A  2DEE               	goto	i1l398
  9492                           
  9493                           ;main.c: 145:         if ( ( Signal > thresh ) && ( Pulse == 0 ) && ( N > ( IBI / 5 ) * 
      +                          3 ) ) {
  9494  050B  0020               	movlb	0	; select bank0
  9495  050C  086C               	movf	_thresh+1,w	;volatile
  9496  050D  3A80               	xorlw	128
  9497  050E  00A6               	movwf	??_heartRateISR
  9498  050F  0863               	movf	_Signal+1,w	;volatile
  9499  0510  3A80               	xorlw	128
  9500  0511  0226               	subwf	??_heartRateISR,w
  9501  0512  1D03               	skipz
  9502  0513  2D16               	goto	u455_25
  9503  0514  0862               	movf	_Signal,w	;volatile
  9504  0515  026B               	subwf	_thresh,w	;volatile
  9505  0516                     u455_25:	
  9506  0516  1803               	skipnc
  9507  0517  2DEE               	goto	i1l398
  9508  0518  0020               	movlb	0	; select bank0
  9509  0519  0866               	movf	_Pulse,w	;volatile
  9510  051A  1D03               	btfss	3,2
  9511  051B  2DEE               	goto	i1l398
  9512  051C  3005               	movlw	5
  9513  051D  00F0               	movwf	___awdiv@divisor
  9514  051E  3000               	movlw	0
  9515  051F  00F1               	movwf	___awdiv@divisor+1
  9516  0520  086A               	movf	_IBI+1,w	;volatile
  9517  0521  00F3               	movwf	___awdiv@dividend+1
  9518  0522  0869               	movf	_IBI,w	;volatile
  9519  0523  00F2               	movwf	___awdiv@dividend
  9520  0524  3188  2025  3184   	fcall	___awdiv
  9521  0527  0871               	movf	?___awdiv+1,w
  9522  0528  00FA               	movwf	___wmul@multiplier+1
  9523  0529  0870               	movf	?___awdiv,w
  9524  052A  00F9               	movwf	___wmul@multiplier
  9525  052B  3003               	movlw	3
  9526  052C  00FB               	movwf	___wmul@multiplicand
  9527  052D  3000               	movlw	0
  9528  052E  00FC               	movwf	___wmul@multiplicand+1
  9529  052F  3196  267B  3184   	fcall	___wmul
  9530  0532  087A               	movf	?___wmul+1,w
  9531  0533  3A80               	xorlw	128
  9532  0534  0020               	movlb	0	; select bank0
  9533  0535  00A6               	movwf	??_heartRateISR
  9534  0536  082D               	movf	heartRateISR@N+1,w
  9535  0537  3A80               	xorlw	128
  9536  0538  0226               	subwf	??_heartRateISR,w
  9537  0539  1D03               	skipz
  9538  053A  2D3D               	goto	u457_25
  9539  053B  082C               	movf	heartRateISR@N,w
  9540  053C  0279               	subwf	?___wmul,w
  9541  053D                     u457_25:	
  9542  053D  1803               	skipnc
  9543  053E  2DEE               	goto	i1l398
  9544                           
  9545                           ;main.c: 146:             Pulse = 1;
  9546  053F  3001               	movlw	1
  9547  0540  0020               	movlb	0	; select bank0
  9548  0541  00A6               	movwf	??_heartRateISR
  9549  0542  0826               	movf	??_heartRateISR,w
  9550  0543  00E6               	movwf	_Pulse	;volatile
  9551                           
  9552                           ;main.c: 147:             IBI = sampleCounter - lastBeatTime;
  9553  0544  0022               	movlb	2	; select bank2
  9554  0545  0820               	movf	_lastBeatTime^(0+256),w	;volatile
  9555  0546  0020               	movlb	0	; select bank0
  9556  0547  025C               	subwf	_sampleCounter,w	;volatile
  9557  0548  00E9               	movwf	_IBI	;volatile
  9558  0549  0022               	movlb	2	; select bank2
  9559  054A  0821               	movf	(_lastBeatTime+1)^(0+256),w	;volatile
  9560  054B  0020               	movlb	0	; select bank0
  9561  054C  3B5D               	subwfb	_sampleCounter+1,w	;volatile
  9562  054D  00EA               	movwf	_IBI+1	;volatile
  9563                           
  9564                           ;main.c: 148:             lastBeatTime = sampleCounter;
  9565  054E  085F               	movf	_sampleCounter+3,w	;volatile
  9566  054F  0022               	movlb	2	; select bank2
  9567  0550  00A3               	movwf	(_lastBeatTime+3)^(0+256)	;volatile
  9568  0551  0020               	movlb	0	; select bank0
  9569  0552  085E               	movf	_sampleCounter+2,w	;volatile
  9570  0553  0022               	movlb	2	; select bank2
  9571  0554  00A2               	movwf	(_lastBeatTime+2)^(0+256)	;volatile
  9572  0555  0020               	movlb	0	; select bank0
  9573  0556  085D               	movf	_sampleCounter+1,w	;volatile
  9574  0557  0022               	movlb	2	; select bank2
  9575  0558  00A1               	movwf	(_lastBeatTime+1)^(0+256)	;volatile
  9576  0559  0020               	movlb	0	; select bank0
  9577  055A  085C               	movf	_sampleCounter,w	;volatile
  9578  055B  0022               	movlb	2	; select bank2
  9579  055C  00A0               	movwf	_lastBeatTime^(0+256)	;volatile
  9580                           
  9581                           ;main.c: 150:             if ( secondBeat ) {
  9582  055D  0020               	movlb	0	; select bank0
  9583  055E  0867               	movf	_secondBeat,w	;volatile
  9584  055F  1903               	btfsc	3,2
  9585  0560  2D7D               	goto	i1l3703
  9586                           
  9587                           ;main.c: 151:                 secondBeat = 0;
  9588  0561  01E7               	clrf	_secondBeat	;volatile
  9589                           
  9590                           ;main.c: 152:                 int i;;main.c: 153:                 for (i = 0; i <= 9; i+
      +                          +) {
  9591  0562  01AA               	clrf	heartRateISR@i
  9592  0563  01AB               	clrf	heartRateISR@i+1
  9593  0564                     i1l3697:	
  9594                           
  9595                           ;main.c: 154:                     rate[i] = IBI;
  9596  0564  0020               	movlb	0	; select bank0
  9597  0565  352A               	lslf	heartRateISR@i,w
  9598  0566  3EC0               	addlw	(low (_rate| (0+256)))& (0+255)
  9599  0567  0086               	movwf	6
  9600  0568  3001               	movlw	1	; select bank3/4
  9601  0569  0087               	movwf	7
  9602  056A  0869               	movf	_IBI,w	;volatile
  9603  056B  3FC0               	movwi [0]fsr1
  9604  056C  086A               	movf	_IBI+1,w	;volatile
  9605  056D  3FC1               	movwi [1]fsr1
  9606                           
  9607                           ;main.c: 155:                 }
  9608  056E  3001               	movlw	1
  9609  056F  07AA               	addwf	heartRateISR@i,f
  9610  0570  3000               	movlw	0
  9611  0571  3DAB               	addwfc	heartRateISR@i+1,f
  9612  0572  082B               	movf	heartRateISR@i+1,w
  9613  0573  3A80               	xorlw	128
  9614  0574  00A6               	movwf	??_heartRateISR
  9615  0575  3080               	movlw	128
  9616  0576  0226               	subwf	??_heartRateISR,w
  9617  0577  1D03               	skipz
  9618  0578  2D7B               	goto	u459_25
  9619  0579  300A               	movlw	10
  9620  057A  022A               	subwf	heartRateISR@i,w
  9621  057B                     u459_25:	
  9622  057B  1C03               	skipc
  9623  057C  2D64               	goto	i1l3697
  9624  057D                     i1l3703:	
  9625                           
  9626                           ;main.c: 158:             if ( firstBeat ) {
  9627  057D  0020               	movlb	0	; select bank0
  9628  057E  086F               	movf	_firstBeat,w	;volatile
  9629  057F  1903               	btfsc	3,2
  9630  0580  2D87               	goto	i1l3711
  9631                           
  9632                           ;main.c: 159:                 firstBeat = 0;
  9633  0581  01EF               	clrf	_firstBeat	;volatile
  9634                           
  9635                           ;main.c: 160:                 secondBeat = 1;
  9636  0582  3001               	movlw	1
  9637  0583  00A6               	movwf	??_heartRateISR
  9638  0584  0826               	movf	??_heartRateISR,w
  9639  0585  00E7               	movwf	_secondBeat	;volatile
  9640  0586  0008               	return
  9641  0587                     i1l3711:	
  9642                           
  9643                           ;main.c: 165:             int runningTotal = 0;
  9644  0587  01A8               	clrf	heartRateISR@runningTotal
  9645  0588  01A9               	clrf	heartRateISR@runningTotal+1
  9646                           
  9647                           ;main.c: 166:             int i;;main.c: 167:             for (i = 0; i <= 8; i++) {
  9648  0589  01AE               	clrf	heartRateISR@i_743
  9649  058A  01AF               	clrf	heartRateISR@i_743+1
  9650  058B                     i1l3717:	
  9651                           
  9652                           ;main.c: 168:                 rate[i] = rate[i + 1];
  9653  058B  0020               	movlb	0	; select bank0
  9654  058C  352E               	lslf	heartRateISR@i_743,w
  9655  058D  3EC2               	addlw	(low ((_rate| (0+256)+2)))& (0+255)
  9656  058E  0086               	movwf	6
  9657  058F  3001               	movlw	1	; select bank3/4
  9658  0590  0087               	movwf	7
  9659  0591  352E               	lslf	heartRateISR@i_743,w
  9660  0592  3EC0               	addlw	(low (_rate| (0+256)))& (0+255)
  9661  0593  0084               	movwf	4
  9662  0594  3001               	movlw	1	; select bank3/4
  9663  0595  0085               	movwf	5
  9664  0596  3F40               	moviw [0]fsr1
  9665  0597  3F80               	movwi [0]fsr0
  9666  0598  3F41               	moviw [1]fsr1
  9667  0599  3F81               	movwi [1]fsr0
  9668                           
  9669                           ;main.c: 169:                 runningTotal += rate[i];
  9670  059A  352E               	lslf	heartRateISR@i_743,w
  9671  059B  3EC0               	addlw	(low (_rate| (0+256)))& (0+255)
  9672  059C  0086               	movwf	6
  9673  059D  3001               	movlw	1	; select bank3/4
  9674  059E  0087               	movwf	7
  9675  059F  3F40               	moviw [0]fsr1
  9676  05A0  00A6               	movwf	??_heartRateISR
  9677  05A1  3F41               	moviw [1]fsr1
  9678  05A2  00A7               	movwf	??_heartRateISR+1
  9679  05A3  0826               	movf	??_heartRateISR,w
  9680  05A4  07A8               	addwf	heartRateISR@runningTotal,f
  9681  05A5  0827               	movf	??_heartRateISR+1,w
  9682  05A6  3DA9               	addwfc	heartRateISR@runningTotal+1,f
  9683                           
  9684                           ;main.c: 170:             }
  9685  05A7  3001               	movlw	1
  9686  05A8  07AE               	addwf	heartRateISR@i_743,f
  9687  05A9  3000               	movlw	0
  9688  05AA  3DAF               	addwfc	heartRateISR@i_743+1,f
  9689  05AB  082F               	movf	heartRateISR@i_743+1,w
  9690  05AC  3A80               	xorlw	128
  9691  05AD  00A6               	movwf	??_heartRateISR
  9692  05AE  3080               	movlw	128
  9693  05AF  0226               	subwf	??_heartRateISR,w
  9694  05B0  1D03               	skipz
  9695  05B1  2DB4               	goto	u461_25
  9696  05B2  3009               	movlw	9
  9697  05B3  022E               	subwf	heartRateISR@i_743,w
  9698  05B4                     u461_25:	
  9699  05B4  1C03               	skipc
  9700  05B5  2D8B               	goto	i1l3717
  9701                           
  9702                           ;main.c: 172:             rate[9] = IBI;
  9703  05B6  0020               	movlb	0	; select bank0
  9704  05B7  086A               	movf	_IBI+1,w	;volatile
  9705  05B8  0023               	movlb	3	; select bank3
  9706  05B9  00D3               	movwf	((_rate+1)^(0+384)+18)	;volatile
  9707  05BA  0020               	movlb	0	; select bank0
  9708  05BB  0869               	movf	_IBI,w	;volatile
  9709  05BC  0023               	movlb	3	; select bank3
  9710  05BD  00D2               	movwf	(_rate^(0+384)+18)	;volatile
  9711                           
  9712                           ;main.c: 173:             runningTotal += rate[9];
  9713  05BE  0852               	movf	(_rate^(0+384)+18),w	;volatile
  9714  05BF  0020               	movlb	0	; select bank0
  9715  05C0  07A8               	addwf	heartRateISR@runningTotal,f
  9716  05C1  0023               	movlb	3	; select bank3
  9717  05C2  0853               	movf	((_rate+1)^(0+384)+18),w	;volatile
  9718  05C3  0020               	movlb	0	; select bank0
  9719  05C4  3DA9               	addwfc	heartRateISR@runningTotal+1,f
  9720                           
  9721                           ;main.c: 174:             runningTotal /= 10;
  9722  05C5  300A               	movlw	10
  9723  05C6  00F0               	movwf	___awdiv@divisor
  9724  05C7  3000               	movlw	0
  9725  05C8  00F1               	movwf	___awdiv@divisor+1
  9726  05C9  0829               	movf	heartRateISR@runningTotal+1,w
  9727  05CA  00F3               	movwf	___awdiv@dividend+1
  9728  05CB  0828               	movf	heartRateISR@runningTotal,w
  9729  05CC  00F2               	movwf	___awdiv@dividend
  9730  05CD  3188  2025  3184   	fcall	___awdiv
  9731  05D0  0871               	movf	?___awdiv+1,w
  9732  05D1  0020               	movlb	0	; select bank0
  9733  05D2  00A9               	movwf	heartRateISR@runningTotal+1
  9734  05D3  0870               	movf	?___awdiv,w
  9735  05D4  00A8               	movwf	heartRateISR@runningTotal
  9736                           
  9737                           ;main.c: 175:             BPM = 60000 / runningTotal;
  9738  05D5  0828               	movf	heartRateISR@runningTotal,w
  9739  05D6  00F0               	movwf	___aldiv@divisor
  9740  05D7  0829               	movf	heartRateISR@runningTotal+1,w
  9741  05D8  00F1               	movwf	___aldiv@divisor+1
  9742  05D9  0D89               	rlf	9,f
  9743  05DA  3B89               	subwfb	9,f
  9744  05DB  0989               	comf	9,f
  9745  05DC  00F2               	movwf	___aldiv@divisor+2
  9746  05DD  00F3               	movwf	___aldiv@divisor+3
  9747  05DE  3000               	movlw	0
  9748  05DF  00F7               	movwf	___aldiv@dividend+3
  9749  05E0  3000               	movlw	0
  9750  05E1  00F6               	movwf	___aldiv@dividend+2
  9751  05E2  30EA               	movlw	234
  9752  05E3  00F5               	movwf	___aldiv@dividend+1
  9753  05E4  3060               	movlw	96
  9754  05E5  00F4               	movwf	___aldiv@dividend
  9755  05E6  3189  21AE  3184   	fcall	___aldiv
  9756  05E9  0871               	movf	?___aldiv+1,w
  9757  05EA  0022               	movlb	2	; select bank2
  9758  05EB  00B7               	movwf	(_BPM+1)^(0+256)	;volatile
  9759  05EC  0870               	movf	?___aldiv,w
  9760  05ED  00B6               	movwf	_BPM^(0+256)	;volatile
  9761  05EE                     i1l398:	
  9762                           ;main.c: 177:     }
  9763                           
  9764                           
  9765                           ;main.c: 180:     if (Signal < thresh && Pulse == 1) {
  9766  05EE  0020               	movlb	0	; select bank0
  9767  05EF  0863               	movf	_Signal+1,w	;volatile
  9768  05F0  3A80               	xorlw	128
  9769  05F1  00A6               	movwf	??_heartRateISR
  9770  05F2  086C               	movf	_thresh+1,w	;volatile
  9771  05F3  3A80               	xorlw	128
  9772  05F4  0226               	subwf	??_heartRateISR,w
  9773  05F5  1D03               	skipz
  9774  05F6  2DF9               	goto	u462_25
  9775  05F7  086B               	movf	_thresh,w	;volatile
  9776  05F8  0262               	subwf	_Signal,w	;volatile
  9777  05F9                     u462_25:	
  9778  05F9  1803               	skipnc
  9779  05FA  2E27               	goto	i1l3743
  9780  05FB  0020               	movlb	0	; select bank0
  9781  05FC  0366               	decf	_Pulse,w	;volatile
  9782  05FD  1D03               	btfss	3,2
  9783  05FE  2E27               	goto	i1l3743
  9784                           
  9785                           ;main.c: 181:         Pulse = 0;
  9786  05FF  01E6               	clrf	_Pulse	;volatile
  9787                           
  9788                           ;main.c: 182:         amp = P - T;
  9789  0600  086D               	movf	_T,w	;volatile
  9790  0601  0022               	movlb	2	; select bank2
  9791  0602  0269               	subwf	_P^(0+256),w	;volatile
  9792  0603  00E7               	movwf	_amp^(0+256)	;volatile
  9793  0604  0020               	movlb	0	; select bank0
  9794  0605  086E               	movf	_T+1,w	;volatile
  9795  0606  0022               	movlb	2	; select bank2
  9796  0607  3B6A               	subwfb	(_P+1)^(0+256),w	;volatile
  9797  0608  00E8               	movwf	(_amp+1)^(0+256)	;volatile
  9798                           
  9799                           ;main.c: 183:         thresh = amp / 2 + T;
  9800  0609  3002               	movlw	2
  9801  060A  00F0               	movwf	___awdiv@divisor
  9802  060B  3000               	movlw	0
  9803  060C  00F1               	movwf	___awdiv@divisor+1
  9804  060D  0868               	movf	(_amp+1)^(0+256),w	;volatile
  9805  060E  00F3               	movwf	___awdiv@dividend+1
  9806  060F  0867               	movf	_amp^(0+256),w	;volatile
  9807  0610  00F2               	movwf	___awdiv@dividend
  9808  0611  3188  2025  3184   	fcall	___awdiv
  9809  0614  0020               	movlb	0	; select bank0
  9810  0615  086D               	movf	_T,w	;volatile
  9811  0616  0770               	addwf	?___awdiv,w
  9812  0617  00EB               	movwf	_thresh	;volatile
  9813  0618  086E               	movf	_T+1,w	;volatile
  9814  0619  3D71               	addwfc	?___awdiv+1,w
  9815  061A  00EC               	movwf	_thresh+1	;volatile
  9816                           
  9817                           ;main.c: 184:         P = thresh;
  9818  061B  086C               	movf	_thresh+1,w	;volatile
  9819  061C  0022               	movlb	2	; select bank2
  9820  061D  00EA               	movwf	(_P+1)^(0+256)	;volatile
  9821  061E  0020               	movlb	0	; select bank0
  9822  061F  086B               	movf	_thresh,w	;volatile
  9823  0620  0022               	movlb	2	; select bank2
  9824  0621  00E9               	movwf	_P^(0+256)	;volatile
  9825                           
  9826                           ;main.c: 185:         T = thresh;
  9827  0622  0020               	movlb	0	; select bank0
  9828  0623  086C               	movf	_thresh+1,w	;volatile
  9829  0624  00EE               	movwf	_T+1	;volatile
  9830  0625  086B               	movf	_thresh,w	;volatile
  9831  0626  00ED               	movwf	_T	;volatile
  9832  0627                     i1l3743:	
  9833                           
  9834                           ;main.c: 189:     if (N > 2500) {
  9835  0627  0020               	movlb	0	; select bank0
  9836  0628  082D               	movf	heartRateISR@N+1,w
  9837  0629  3A80               	xorlw	128
  9838  062A  00A6               	movwf	??_heartRateISR
  9839  062B  3089               	movlw	137
  9840  062C  0226               	subwf	??_heartRateISR,w
  9841  062D  1D03               	skipz
  9842  062E  2E31               	goto	u464_25
  9843  062F  30C5               	movlw	197
  9844  0630  022C               	subwf	heartRateISR@N,w
  9845  0631                     u464_25:	
  9846  0631  1C03               	skipc
  9847  0632  0008               	return
  9848                           
  9849                           ;main.c: 190:         thresh = 512 ;
  9850  0633  3000               	movlw	0
  9851  0634  0020               	movlb	0	; select bank0
  9852  0635  00EB               	movwf	_thresh	;volatile
  9853  0636  3002               	movlw	2
  9854  0637  00EC               	movwf	_thresh+1	;volatile
  9855                           
  9856                           ;main.c: 191:         P = 512 ;
  9857  0638  3000               	movlw	0
  9858  0639  0022               	movlb	2	; select bank2
  9859  063A  00E9               	movwf	_P^(0+256)	;volatile
  9860  063B  3002               	movlw	2
  9861  063C  00EA               	movwf	(_P^(0+256)+1)	;volatile
  9862                           
  9863                           ;main.c: 192:         T = 512 ;
  9864  063D  3000               	movlw	0
  9865  063E  0020               	movlb	0	; select bank0
  9866  063F  00ED               	movwf	_T	;volatile
  9867  0640  3002               	movlw	2
  9868  0641  00EE               	movwf	_T+1	;volatile
  9869                           
  9870                           ;main.c: 193:         lastBeatTime = sampleCounter;
  9871  0642  085F               	movf	_sampleCounter+3,w	;volatile
  9872  0643  0022               	movlb	2	; select bank2
  9873  0644  00A3               	movwf	(_lastBeatTime+3)^(0+256)	;volatile
  9874  0645  0020               	movlb	0	; select bank0
  9875  0646  085E               	movf	_sampleCounter+2,w	;volatile
  9876  0647  0022               	movlb	2	; select bank2
  9877  0648  00A2               	movwf	(_lastBeatTime+2)^(0+256)	;volatile
  9878  0649  0020               	movlb	0	; select bank0
  9879  064A  085D               	movf	_sampleCounter+1,w	;volatile
  9880  064B  0022               	movlb	2	; select bank2
  9881  064C  00A1               	movwf	(_lastBeatTime+1)^(0+256)	;volatile
  9882  064D  0020               	movlb	0	; select bank0
  9883  064E  085C               	movf	_sampleCounter,w	;volatile
  9884  064F  0022               	movlb	2	; select bank2
  9885  0650  00A0               	movwf	_lastBeatTime^(0+256)	;volatile
  9886                           
  9887                           ;main.c: 194:         firstBeat = 1;
  9888  0651  3001               	movlw	1
  9889  0652  0020               	movlb	0	; select bank0
  9890  0653  00A6               	movwf	??_heartRateISR
  9891  0654  0826               	movf	??_heartRateISR,w
  9892  0655  00EF               	movwf	_firstBeat	;volatile
  9893                           
  9894                           ;main.c: 195:         secondBeat = 0;
  9895  0656  01E7               	clrf	_secondBeat	;volatile
  9896  0657  0008               	return
  9897  0658                     __end_of_heartRateISR:	
  9898                           
  9899                           	psect	text37
  9900  167B                     __ptext37:	
  9901 ;; *************** function ___wmul *****************
  9902 ;; Defined at:
  9903 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  9904 ;; Parameters:    Size  Location     Type
  9905 ;;  multiplier      2    9[COMMON] unsigned int 
  9906 ;;  multiplicand    2   11[COMMON] unsigned int 
  9907 ;; Auto vars:     Size  Location     Type
  9908 ;;  product         2    0[BANK0 ] unsigned int 
  9909 ;; Return value:  Size  Location     Type
  9910 ;;                  2    9[COMMON] unsigned int 
  9911 ;; Registers used:
  9912 ;;		wreg, status,2, status,0
  9913 ;; Tracked objects:
  9914 ;;		On entry : 0/0
  9915 ;;		On exit  : 0/0
  9916 ;;		Unchanged: 0/0
  9917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9918 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9919 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9921 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9922 ;;Total ram usage:        6 bytes
  9923 ;; Hardware stack levels used:    1
  9924 ;; This function calls:
  9925 ;;		Nothing
  9926 ;; This function is called by:
  9927 ;;		_heartRateISR
  9928 ;; This function uses a non-reentrant model
  9929 ;;
  9930                           
  9931                           
  9932                           ;psect for function ___wmul
  9933  167B                     ___wmul:	
  9934                           
  9935                           ;incstack = 0
  9936                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  9937  167B  0020               	movlb	0	; select bank0
  9938  167C  01A0               	clrf	___wmul@product
  9939  167D  01A1               	clrf	___wmul@product+1
  9940  167E                     i1l3307:	
  9941  167E  1C79               	btfss	___wmul@multiplier,0
  9942  167F  2E85               	goto	i1l662
  9943  1680  087B               	movf	___wmul@multiplicand,w
  9944  1681  0020               	movlb	0	; select bank0
  9945  1682  07A0               	addwf	___wmul@product,f
  9946  1683  087C               	movf	___wmul@multiplicand+1,w
  9947  1684  3DA1               	addwfc	___wmul@product+1,f
  9948  1685                     i1l662:	
  9949  1685  3001               	movlw	1
  9950  1686                     u390_25:	
  9951  1686  35FB               	lslf	___wmul@multiplicand,f
  9952  1687  0DFC               	rlf	___wmul@multiplicand+1,f
  9953  1688  0B89               	decfsz	9,f
  9954  1689  2E86               	goto	u390_25
  9955  168A  3001               	movlw	1
  9956  168B                     u391_25:	
  9957  168B  36FA               	lsrf	___wmul@multiplier+1,f
  9958  168C  0CF9               	rrf	___wmul@multiplier,f
  9959  168D  0B89               	decfsz	9,f
  9960  168E  2E8B               	goto	u391_25
  9961  168F  0879               	movf	___wmul@multiplier,w
  9962  1690  047A               	iorwf	___wmul@multiplier+1,w
  9963  1691  1D03               	btfss	3,2
  9964  1692  2E7E               	goto	i1l3307
  9965  1693  0020               	movlb	0	; select bank0
  9966  1694  0821               	movf	___wmul@product+1,w
  9967  1695  00FA               	movwf	?___wmul+1
  9968  1696  0820               	movf	___wmul@product,w
  9969  1697  00F9               	movwf	?___wmul
  9970  1698  0008               	return
  9971  1699                     __end_of___wmul:	
  9972                           
  9973                           	psect	text38
  9974  09AE                     __ptext38:	
  9975 ;; *************** function ___aldiv *****************
  9976 ;; Defined at:
  9977 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aldiv.c"
  9978 ;; Parameters:    Size  Location     Type
  9979 ;;  divisor         4    0[COMMON] long 
  9980 ;;  dividend        4    4[COMMON] long 
  9981 ;; Auto vars:     Size  Location     Type
  9982 ;;  quotient        4    2[BANK0 ] long 
  9983 ;;  sign            1    1[BANK0 ] unsigned char 
  9984 ;;  counter         1    0[BANK0 ] unsigned char 
  9985 ;; Return value:  Size  Location     Type
  9986 ;;                  4    0[COMMON] long 
  9987 ;; Registers used:
  9988 ;;		wreg, status,2, status,0
  9989 ;; Tracked objects:
  9990 ;;		On entry : 0/0
  9991 ;;		On exit  : 0/0
  9992 ;;		Unchanged: 0/0
  9993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9994 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9995 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9996 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9997 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9998 ;;Total ram usage:       15 bytes
  9999 ;; Hardware stack levels used:    1
 10000 ;; This function calls:
 10001 ;;		Nothing
 10002 ;; This function is called by:
 10003 ;;		_heartRateISR
 10004 ;; This function uses a non-reentrant model
 10005 ;;
 10006                           
 10007                           
 10008                           ;psect for function ___aldiv
 10009  09AE                     ___aldiv:	
 10010                           
 10011                           ;incstack = 0
 10012                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 10013  09AE  0020               	movlb	0	; select bank0
 10014  09AF  01A1               	clrf	___aldiv@sign
 10015  09B0  1FF3               	btfss	___aldiv@divisor+3,7
 10016  09B1  29BF               	goto	i1l727
 10017  09B2  09F0               	comf	___aldiv@divisor,f
 10018  09B3  09F1               	comf	___aldiv@divisor+1,f
 10019  09B4  09F2               	comf	___aldiv@divisor+2,f
 10020  09B5  09F3               	comf	___aldiv@divisor+3,f
 10021  09B6  0AF0               	incf	___aldiv@divisor,f
 10022  09B7  1903               	skipnz
 10023  09B8  0AF1               	incf	___aldiv@divisor+1,f
 10024  09B9  1903               	skipnz
 10025  09BA  0AF2               	incf	___aldiv@divisor+2,f
 10026  09BB  1903               	skipnz
 10027  09BC  0AF3               	incf	___aldiv@divisor+3,f
 10028  09BD  01A1               	clrf	___aldiv@sign
 10029  09BE  0AA1               	incf	___aldiv@sign,f
 10030  09BF                     i1l727:	
 10031  09BF  1FF7               	btfss	___aldiv@dividend+3,7
 10032  09C0  29D0               	goto	i1l3329
 10033  09C1  09F4               	comf	___aldiv@dividend,f
 10034  09C2  09F5               	comf	___aldiv@dividend+1,f
 10035  09C3  09F6               	comf	___aldiv@dividend+2,f
 10036  09C4  09F7               	comf	___aldiv@dividend+3,f
 10037  09C5  0AF4               	incf	___aldiv@dividend,f
 10038  09C6  1903               	skipnz
 10039  09C7  0AF5               	incf	___aldiv@dividend+1,f
 10040  09C8  1903               	skipnz
 10041  09C9  0AF6               	incf	___aldiv@dividend+2,f
 10042  09CA  1903               	skipnz
 10043  09CB  0AF7               	incf	___aldiv@dividend+3,f
 10044  09CC  3001               	movlw	1
 10045  09CD  00F8               	movwf	??___aldiv
 10046  09CE  0878               	movf	??___aldiv,w
 10047  09CF  06A1               	xorwf	___aldiv@sign,f
 10048  09D0                     i1l3329:	
 10049  09D0  3000               	movlw	0
 10050  09D1  00A5               	movwf	___aldiv@quotient+3
 10051  09D2  3000               	movlw	0
 10052  09D3  00A4               	movwf	___aldiv@quotient+2
 10053  09D4  3000               	movlw	0
 10054  09D5  00A3               	movwf	___aldiv@quotient+1
 10055  09D6  3000               	movlw	0
 10056  09D7  00A2               	movwf	___aldiv@quotient
 10057  09D8  0873               	movf	___aldiv@divisor+3,w
 10058  09D9  0472               	iorwf	___aldiv@divisor+2,w
 10059  09DA  0471               	iorwf	___aldiv@divisor+1,w
 10060  09DB  0470               	iorwf	___aldiv@divisor,w
 10061  09DC  1903               	skipnz
 10062  09DD  2A19               	goto	i1l3351
 10063  09DE  01A0               	clrf	___aldiv@counter
 10064  09DF  0AA0               	incf	___aldiv@counter,f
 10065  09E0                     i1l3337:	
 10066  09E0  1BF3               	btfsc	___aldiv@divisor+3,7
 10067  09E1  29EE               	goto	i1l3339
 10068  09E2  3001               	movlw	1
 10069  09E3                     u396_25:	
 10070  09E3  35F0               	lslf	___aldiv@divisor,f
 10071  09E4  0DF1               	rlf	___aldiv@divisor+1,f
 10072  09E5  0DF2               	rlf	___aldiv@divisor+2,f
 10073  09E6  0DF3               	rlf	___aldiv@divisor+3,f
 10074  09E7  0B89               	decfsz	9,f
 10075  09E8  29E3               	goto	u396_25
 10076  09E9  3001               	movlw	1
 10077  09EA  00F8               	movwf	??___aldiv
 10078  09EB  0878               	movf	??___aldiv,w
 10079  09EC  07A0               	addwf	___aldiv@counter,f
 10080  09ED  29E0               	goto	i1l3337
 10081  09EE                     i1l3339:	
 10082  09EE  3001               	movlw	1
 10083  09EF                     u398_25:	
 10084  09EF  35A2               	lslf	___aldiv@quotient,f
 10085  09F0  0DA3               	rlf	___aldiv@quotient+1,f
 10086  09F1  0DA4               	rlf	___aldiv@quotient+2,f
 10087  09F2  0DA5               	rlf	___aldiv@quotient+3,f
 10088  09F3  0B89               	decfsz	9,f
 10089  09F4  29EF               	goto	u398_25
 10090  09F5  0873               	movf	___aldiv@divisor+3,w
 10091  09F6  0277               	subwf	___aldiv@dividend+3,w
 10092  09F7  1D03               	skipz
 10093  09F8  2A03               	goto	u399_25
 10094  09F9  0872               	movf	___aldiv@divisor+2,w
 10095  09FA  0276               	subwf	___aldiv@dividend+2,w
 10096  09FB  1D03               	skipz
 10097  09FC  2A03               	goto	u399_25
 10098  09FD  0871               	movf	___aldiv@divisor+1,w
 10099  09FE  0275               	subwf	___aldiv@dividend+1,w
 10100  09FF  1D03               	skipz
 10101  0A00  2A03               	goto	u399_25
 10102  0A01  0870               	movf	___aldiv@divisor,w
 10103  0A02  0274               	subwf	___aldiv@dividend,w
 10104  0A03                     u399_25:	
 10105  0A03  1C03               	skipc
 10106  0A04  2A0E               	goto	i1l3347
 10107  0A05  0870               	movf	___aldiv@divisor,w
 10108  0A06  02F4               	subwf	___aldiv@dividend,f
 10109  0A07  0871               	movf	___aldiv@divisor+1,w
 10110  0A08  3BF5               	subwfb	___aldiv@dividend+1,f
 10111  0A09  0872               	movf	___aldiv@divisor+2,w
 10112  0A0A  3BF6               	subwfb	___aldiv@dividend+2,f
 10113  0A0B  0873               	movf	___aldiv@divisor+3,w
 10114  0A0C  3BF7               	subwfb	___aldiv@dividend+3,f
 10115  0A0D  1422               	bsf	___aldiv@quotient,0
 10116  0A0E                     i1l3347:	
 10117  0A0E  3001               	movlw	1
 10118  0A0F                     u400_25:	
 10119  0A0F  36F3               	lsrf	___aldiv@divisor+3,f
 10120  0A10  0CF2               	rrf	___aldiv@divisor+2,f
 10121  0A11  0CF1               	rrf	___aldiv@divisor+1,f
 10122  0A12  0CF0               	rrf	___aldiv@divisor,f
 10123  0A13  0B89               	decfsz	9,f
 10124  0A14  2A0F               	goto	u400_25
 10125  0A15  3001               	movlw	1
 10126  0A16  02A0               	subwf	___aldiv@counter,f
 10127  0A17  1D03               	btfss	3,2
 10128  0A18  29EE               	goto	i1l3339
 10129  0A19                     i1l3351:	
 10130  0A19  0821               	movf	___aldiv@sign,w
 10131  0A1A  1903               	btfsc	3,2
 10132  0A1B  2A27               	goto	i1l3355
 10133  0A1C  09A2               	comf	___aldiv@quotient,f
 10134  0A1D  09A3               	comf	___aldiv@quotient+1,f
 10135  0A1E  09A4               	comf	___aldiv@quotient+2,f
 10136  0A1F  09A5               	comf	___aldiv@quotient+3,f
 10137  0A20  0AA2               	incf	___aldiv@quotient,f
 10138  0A21  1903               	skipnz
 10139  0A22  0AA3               	incf	___aldiv@quotient+1,f
 10140  0A23  1903               	skipnz
 10141  0A24  0AA4               	incf	___aldiv@quotient+2,f
 10142  0A25  1903               	skipnz
 10143  0A26  0AA5               	incf	___aldiv@quotient+3,f
 10144  0A27                     i1l3355:	
 10145  0A27  0825               	movf	___aldiv@quotient+3,w
 10146  0A28  00F3               	movwf	?___aldiv+3
 10147  0A29  0824               	movf	___aldiv@quotient+2,w
 10148  0A2A  00F2               	movwf	?___aldiv+2
 10149  0A2B  0823               	movf	___aldiv@quotient+1,w
 10150  0A2C  00F1               	movwf	?___aldiv+1
 10151  0A2D  0822               	movf	___aldiv@quotient,w
 10152  0A2E  00F0               	movwf	?___aldiv
 10153  0A2F  0008               	return
 10154  0A30                     __end_of___aldiv:	
 10155                           
 10156                           	psect	text39
 10157  15DD                     __ptext39:	
 10158 ;; *************** function _ADC_GetConversion *****************
 10159 ;; Defined at:
 10160 ;;		line 63 in file "mcc_generated_files/adc.c"
 10161 ;; Parameters:    Size  Location     Type
 10162 ;;  channel         1    wreg     enum E9635
 10163 ;; Auto vars:     Size  Location     Type
 10164 ;;  channel         1    3[COMMON] enum E9635
 10165 ;; Return value:  Size  Location     Type
 10166 ;;                  2    0[COMMON] int 
 10167 ;; Registers used:
 10168 ;;		wreg, status,2, status,0
 10169 ;; Tracked objects:
 10170 ;;		On entry : 0/0
 10171 ;;		On exit  : 0/0
 10172 ;;		Unchanged: 0/0
 10173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10174 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10175 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10176 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10177 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10178 ;;Total ram usage:        4 bytes
 10179 ;; Hardware stack levels used:    1
 10180 ;; This function calls:
 10181 ;;		Nothing
 10182 ;; This function is called by:
 10183 ;;		_heartRateISR
 10184 ;; This function uses a non-reentrant model
 10185 ;;
 10186                           
 10187                           
 10188                           ;psect for function _ADC_GetConversion
 10189  15DD                     _ADC_GetConversion:	
 10190                           
 10191                           ;incstack = 0
 10192                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
 10193                           ;ADC_GetConversion@channel stored from wreg
 10194  15DD  00F3               	movwf	ADC_GetConversion@channel
 10195                           
 10196                           ;mcc_generated_files/adc.c: 63: adc_result_t ADC_GetConversion(adc_channel_t channel);mc
      +                          c_generated_files/adc.c: 64: {;mcc_generated_files/adc.c: 66:     ADCON0bits.CHS = chann
      +                          el;
 10197  15DE  0873               	movf	ADC_GetConversion@channel,w
 10198  15DF  00F2               	movwf	??_ADC_GetConversion
 10199  15E0  0DF2               	rlf	??_ADC_GetConversion,f
 10200  15E1  0DF2               	rlf	??_ADC_GetConversion,f
 10201  15E2  0021               	movlb	1	; select bank1
 10202  15E3  081D               	movf	29,w	;volatile
 10203  15E4  0672               	xorwf	??_ADC_GetConversion,w
 10204  15E5  3983               	andlw	-125
 10205  15E6  0672               	xorwf	??_ADC_GetConversion,w
 10206  15E7  009D               	movwf	29	;volatile
 10207                           
 10208                           ;mcc_generated_files/adc.c: 69:     ADCON0bits.ADON = 1;
 10209  15E8  141D               	bsf	29,0	;volatile
 10210                           
 10211                           ;mcc_generated_files/adc.c: 72:     _delay((unsigned long)((5)*(16000000/4000000.0)));
 10212  15E9  3006               	movlw	6
 10213  15EA                     u498_27:	
 10214  15EA  0B89               	decfsz	9,f
 10215  15EB  2DEA               	goto	u498_27
 10216  15EC  3200               	nop2
 10217                           
 10218                           ;mcc_generated_files/adc.c: 75:     ADCON0bits.GO_nDONE = 1;
 10219  15ED  0021               	movlb	1	; select bank1
 10220  15EE  149D               	bsf	29,1	;volatile
 10221  15EF                     i1l286:	
 10222                           ;mcc_generated_files/adc.c: 79:     {;mcc_generated_files/adc.c: 80:     }
 10223                           
 10224                           
 10225                           ;mcc_generated_files/adc.c: 78:     while (ADCON0bits.GO_nDONE)
 10226  15EF  189D               	btfsc	29,1	;volatile
 10227  15F0  2DEF               	goto	i1l286
 10228                           
 10229                           ;mcc_generated_files/adc.c: 83:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 10230  15F1  081C               	movf	28,w	;volatile
 10231  15F2  00F1               	movwf	?_ADC_GetConversion+1
 10232  15F3  081B               	movf	27,w	;volatile
 10233  15F4  00F0               	movwf	?_ADC_GetConversion
 10234  15F5  0008               	return
 10235  15F6                     __end_of_ADC_GetConversion:	
 10236                           
 10237                           	psect	text40
 10238  1555                     __ptext40:	
 10239 ;; *************** function _TMR1_WriteTimer *****************
 10240 ;; Defined at:
 10241 ;;		line 71 in file "mcc_generated_files/tmr1.c"
 10242 ;; Parameters:    Size  Location     Type
 10243 ;;  timerVal        2    0[COMMON] unsigned short 
 10244 ;; Auto vars:     Size  Location     Type
 10245 ;;		None
 10246 ;; Return value:  Size  Location     Type
 10247 ;;                  1    wreg      void 
 10248 ;; Registers used:
 10249 ;;		wreg, status,2
 10250 ;; Tracked objects:
 10251 ;;		On entry : 0/0
 10252 ;;		On exit  : 0/0
 10253 ;;		Unchanged: 0/0
 10254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10255 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10258 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10259 ;;Total ram usage:        2 bytes
 10260 ;; Hardware stack levels used:    1
 10261 ;; This function calls:
 10262 ;;		Nothing
 10263 ;; This function is called by:
 10264 ;;		_TMR1_ISR
 10265 ;;		_TMR1_Reload
 10266 ;; This function uses a non-reentrant model
 10267 ;;
 10268                           
 10269                           
 10270                           ;psect for function _TMR1_WriteTimer
 10271  1555                     _TMR1_WriteTimer:	
 10272                           
 10273                           ;mcc_generated_files/tmr1.c: 71: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_f
      +                          iles/tmr1.c: 72: {;mcc_generated_files/tmr1.c: 73:     if (T1CONbits.nT1SYNC == 1)
 10274                           
 10275                           ;incstack = 0
 10276                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 10277  1555  0020               	movlb	0	; select bank0
 10278  1556  1D18               	btfss	24,2	;volatile
 10279  1557  2D5F               	goto	i1l3771
 10280                           
 10281                           ;mcc_generated_files/tmr1.c: 74:     {;mcc_generated_files/tmr1.c: 76:         T1CONbits
      +                          .TMR1ON = 0;
 10282  1558  1018               	bcf	24,0	;volatile
 10283                           
 10284                           ;mcc_generated_files/tmr1.c: 79:         TMR1H = (timerVal >> 8);
 10285  1559  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 10286  155A  0097               	movwf	23	;volatile
 10287                           
 10288                           ;mcc_generated_files/tmr1.c: 80:         TMR1L = timerVal;
 10289  155B  0870               	movf	TMR1_WriteTimer@timerVal,w
 10290  155C  0096               	movwf	22	;volatile
 10291                           
 10292                           ;mcc_generated_files/tmr1.c: 83:         T1CONbits.TMR1ON =1;
 10293  155D  1418               	bsf	24,0	;volatile
 10294                           
 10295                           ;mcc_generated_files/tmr1.c: 84:     }
 10296  155E  0008               	return
 10297  155F                     i1l3771:	
 10298                           
 10299                           ;mcc_generated_files/tmr1.c: 86:     {;mcc_generated_files/tmr1.c: 88:         TMR1H = (
      +                          timerVal >> 8);
 10300  155F  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 10301  1560  0097               	movwf	23	;volatile
 10302                           
 10303                           ;mcc_generated_files/tmr1.c: 89:         TMR1L = timerVal;
 10304  1561  0870               	movf	TMR1_WriteTimer@timerVal,w
 10305  1562  0096               	movwf	22	;volatile
 10306  1563  0008               	return
 10307  1564                     __end_of_TMR1_WriteTimer:	
 10308                           
 10309                           	psect	text41
 10310  1564                     __ptext41:	
 10311 ;; *************** function _TMR0_ISR *****************
 10312 ;; Defined at:
 10313 ;;		line 62 in file "mcc_generated_files/tmr0.c"
 10314 ;; Parameters:    Size  Location     Type
 10315 ;;		None
 10316 ;; Auto vars:     Size  Location     Type
 10317 ;;		None
 10318 ;; Return value:  Size  Location     Type
 10319 ;;                  1    wreg      void 
 10320 ;; Registers used:
 10321 ;;		wreg, status,2, status,0, pclath, cstack
 10322 ;; Tracked objects:
 10323 ;;		On entry : 0/0
 10324 ;;		On exit  : 0/0
 10325 ;;		Unchanged: 0/0
 10326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10331 ;;Total ram usage:        0 bytes
 10332 ;; Hardware stack levels used:    1
 10333 ;; Hardware stack levels required when called:    2
 10334 ;; This function calls:
 10335 ;;		Absolute function
 10336 ;;		_TMR0_DefaultInterruptHandler
 10337 ;;		_timerISR
 10338 ;; This function is called by:
 10339 ;;		_INTERRUPT_InterruptManager
 10340 ;; This function uses a non-reentrant model
 10341 ;;
 10342                           
 10343                           
 10344                           ;psect for function _TMR0_ISR
 10345  1564                     _TMR0_ISR:	
 10346                           
 10347                           ;mcc_generated_files/tmr0.c: 66:     INTCONbits.TMR0IF = 0;
 10348                           
 10349                           ;incstack = 0
 10350                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 10351  1564  110B               	bcf	11,2	;volatile
 10352                           
 10353                           ;mcc_generated_files/tmr0.c: 68:     TMR0 = timer0ReloadVal;
 10354  1565  0022               	movlb	2	; select bank2
 10355  1566  0858               	movf	_timer0ReloadVal^(0+256),w	;volatile
 10356  1567  0020               	movlb	0	; select bank0
 10357  1568  0095               	movwf	21	;volatile
 10358                           
 10359                           ;mcc_generated_files/tmr0.c: 70:     if(TMR0_InterruptHandler)
 10360  1569  0022               	movlb	2	; select bank2
 10361  156A  084E               	movf	_TMR0_InterruptHandler^(0+256),w
 10362  156B  044F               	iorwf	(_TMR0_InterruptHandler+1)^(0+256),w
 10363  156C  1903               	btfsc	3,2
 10364  156D  0008               	return
 10365                           
 10366                           ;mcc_generated_files/tmr0.c: 71:     {;mcc_generated_files/tmr0.c: 72:         TMR0_Inte
      +                          rruptHandler();
 10367  156E  084F               	movf	(_TMR0_InterruptHandler+1)^(0+256),w
 10368  156F  008A               	movwf	10
 10369  1570  084E               	movf	_TMR0_InterruptHandler^(0+256),w
 10370  1571  000A               	callw
 10371  1572  3195               	pagesel	$
 10372  1573  0008               	return
 10373  1574                     __end_of_TMR0_ISR:	
 10374                           
 10375                           	psect	text42
 10376  0003                     __ptext42:	
 10377 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 10378 ;; Defined at:
 10379 ;;		line 83 in file "mcc_generated_files/tmr0.c"
 10380 ;; Parameters:    Size  Location     Type
 10381 ;;		None
 10382 ;; Auto vars:     Size  Location     Type
 10383 ;;		None
 10384 ;; Return value:  Size  Location     Type
 10385 ;;                  1    wreg      void 
 10386 ;; Registers used:
 10387 ;;		None
 10388 ;; Tracked objects:
 10389 ;;		On entry : 0/0
 10390 ;;		On exit  : 0/0
 10391 ;;		Unchanged: 0/0
 10392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10397 ;;Total ram usage:        0 bytes
 10398 ;; Hardware stack levels used:    1
 10399 ;; This function calls:
 10400 ;;		Nothing
 10401 ;; This function is called by:
 10402 ;;		_TMR0_Initialize
 10403 ;;		_TMR0_ISR
 10404 ;; This function uses a non-reentrant model
 10405 ;;
 10406                           
 10407                           
 10408                           ;psect for function _TMR0_DefaultInterruptHandler
 10409  0003                     _TMR0_DefaultInterruptHandler:	
 10410                           
 10411                           ;incstack = 0
 10412                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 10413  0003  0008               	return
 10414  0004                     __end_of_TMR0_DefaultInterruptHandler:	
 10415                           
 10416                           	psect	text43
 10417  165E                     __ptext43:	
 10418 ;; *************** function _timerISR *****************
 10419 ;; Defined at:
 10420 ;;		line 101 in file "main.c"
 10421 ;; Parameters:    Size  Location     Type
 10422 ;;		None
 10423 ;; Auto vars:     Size  Location     Type
 10424 ;;		None
 10425 ;; Return value:  Size  Location     Type
 10426 ;;                  1    wreg      void 
 10427 ;; Registers used:
 10428 ;;		wreg, status,2, status,0, pclath, cstack
 10429 ;; Tracked objects:
 10430 ;;		On entry : 0/0
 10431 ;;		On exit  : 0/0
 10432 ;;		Unchanged: 0/0
 10433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10438 ;;Total ram usage:        0 bytes
 10439 ;; Hardware stack levels used:    1
 10440 ;; Hardware stack levels required when called:    1
 10441 ;; This function calls:
 10442 ;;		___fladd
 10443 ;; This function is called by:
 10444 ;;		_main
 10445 ;;		_TMR0_ISR
 10446 ;; This function uses a non-reentrant model
 10447 ;;
 10448                           
 10449                           
 10450                           ;psect for function _timerISR
 10451  165E                     _timerISR:	
 10452                           
 10453                           ;main.c: 103:     counter++ ;
 10454                           
 10455                           ;incstack = 0
 10456                           ; Regs used in _timerISR: [wreg+status,2+status,0+pclath+cstack]
 10457  165E  303F               	movlw	63
 10458  165F  00F3               	movwf	___fladd@b+3
 10459  1660  3080               	movlw	128
 10460  1661  00F2               	movwf	___fladd@b+2
 10461  1662  3000               	movlw	0
 10462  1663  00F1               	movwf	___fladd@b+1
 10463  1664  3000               	movlw	0
 10464  1665  00F0               	movwf	___fladd@b
 10465  1666  0022               	movlb	2	; select bank2
 10466  1667  0849               	movf	(_counter+3)^(0+256),w	;volatile
 10467  1668  00F7               	movwf	___fladd@a+3
 10468  1669  0848               	movf	(_counter+2)^(0+256),w	;volatile
 10469  166A  00F6               	movwf	___fladd@a+2
 10470  166B  0847               	movf	(_counter+1)^(0+256),w	;volatile
 10471  166C  00F5               	movwf	___fladd@a+1
 10472  166D  0846               	movf	_counter^(0+256),w	;volatile
 10473  166E  00F4               	movwf	___fladd@a
 10474  166F  3182  2295         	fcall	___fladd
 10475  1671  0873               	movf	?___fladd+3,w
 10476  1672  0022               	movlb	2	; select bank2
 10477  1673  00C9               	movwf	(_counter+3)^(0+256)	;volatile
 10478  1674  0872               	movf	?___fladd+2,w
 10479  1675  00C8               	movwf	(_counter+2)^(0+256)	;volatile
 10480  1676  0871               	movf	?___fladd+1,w
 10481  1677  00C7               	movwf	(_counter+1)^(0+256)	;volatile
 10482  1678  0870               	movf	?___fladd,w
 10483  1679  00C6               	movwf	_counter^(0+256)	;volatile
 10484  167A  0008               	return
 10485  167B                     __end_of_timerISR:	
 10486                           
 10487                           	psect	text44
 10488  0295                     __ptext44:	
 10489 ;; *************** function ___fladd *****************
 10490 ;; Defined at:
 10491 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 10492 ;; Parameters:    Size  Location     Type
 10493 ;;  b               4    0[COMMON] void 
 10494 ;;  a               4    4[COMMON] void 
 10495 ;; Auto vars:     Size  Location     Type
 10496 ;;  grs             1   11[COMMON] unsigned char 
 10497 ;;  bexp            1   10[COMMON] unsigned char 
 10498 ;;  aexp            1    9[COMMON] unsigned char 
 10499 ;;  signs           1    8[COMMON] unsigned char 
 10500 ;; Return value:  Size  Location     Type
 10501 ;;                  4    0[COMMON] unsigned char 
 10502 ;; Registers used:
 10503 ;;		wreg, status,2, status,0
 10504 ;; Tracked objects:
 10505 ;;		On entry : 0/0
 10506 ;;		On exit  : 0/0
 10507 ;;		Unchanged: 0/0
 10508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10509 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10510 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10511 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10512 ;;      Totals:        12       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10513 ;;Total ram usage:       20 bytes
 10514 ;; Hardware stack levels used:    1
 10515 ;; This function calls:
 10516 ;;		Nothing
 10517 ;; This function is called by:
 10518 ;;		_timerISR
 10519 ;; This function uses a non-reentrant model
 10520 ;;
 10521                           
 10522                           
 10523                           ;psect for function ___fladd
 10524  0295                     ___fladd:	
 10525                           
 10526                           ;incstack = 0
 10527                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 10528  0295  0873               	movf	___fladd@b+3,w
 10529  0296  3980               	andlw	128
 10530  0297  0020               	movlb	0	; select bank0
 10531  0298  00A0               	movwf	??___fladd
 10532  0299  0820               	movf	??___fladd,w
 10533  029A  00F8               	movwf	___fladd@signs
 10534  029B  3573               	lslf	___fladd@b+3,w
 10535  029C  00A0               	movwf	??___fladd
 10536  029D  0820               	movf	??___fladd,w
 10537  029E  00FA               	movwf	___fladd@bexp
 10538  029F  1BF2               	btfsc	___fladd@b+2,7
 10539  02A0  147A               	bsf	___fladd@bexp,0
 10540  02A1  087A               	movf	___fladd@bexp,w
 10541  02A2  1903               	btfsc	3,2
 10542  02A3  2AB2               	goto	i1l3377
 10543  02A4  0A7A               	incf	___fladd@bexp,w
 10544  02A5  1D03               	btfss	3,2
 10545  02A6  2AAF               	goto	i1l3373
 10546  02A7  3000               	movlw	0
 10547  02A8  00F3               	movwf	___fladd@b+3
 10548  02A9  3000               	movlw	0
 10549  02AA  00F2               	movwf	___fladd@b+2
 10550  02AB  3000               	movlw	0
 10551  02AC  00F1               	movwf	___fladd@b+1
 10552  02AD  3000               	movlw	0
 10553  02AE  00F0               	movwf	___fladd@b
 10554  02AF                     i1l3373:	
 10555  02AF  17F2               	bsf	___fladd@b+2,7
 10556  02B0  01F3               	clrf	___fladd@b+3
 10557  02B1  2ABA               	goto	i1l3379
 10558  02B2                     i1l3377:	
 10559  02B2  3000               	movlw	0
 10560  02B3  00F3               	movwf	___fladd@b+3
 10561  02B4  3000               	movlw	0
 10562  02B5  00F2               	movwf	___fladd@b+2
 10563  02B6  3000               	movlw	0
 10564  02B7  00F1               	movwf	___fladd@b+1
 10565  02B8  3000               	movlw	0
 10566  02B9  00F0               	movwf	___fladd@b
 10567  02BA                     i1l3379:	
 10568  02BA  0877               	movf	___fladd@a+3,w
 10569  02BB  3980               	andlw	128
 10570  02BC  00A0               	movwf	??___fladd
 10571  02BD  0820               	movf	??___fladd,w
 10572  02BE  00F9               	movwf	___fladd@aexp
 10573  02BF  0879               	movf	___fladd@aexp,w
 10574  02C0  0678               	xorwf	___fladd@signs,w
 10575  02C1  1D03               	btfss	3,2
 10576  02C2  1778               	bsf	___fladd@signs,6
 10577  02C3  3577               	lslf	___fladd@a+3,w
 10578  02C4  00A0               	movwf	??___fladd
 10579  02C5  0820               	movf	??___fladd,w
 10580  02C6  00F9               	movwf	___fladd@aexp
 10581  02C7  1BF6               	btfsc	___fladd@a+2,7
 10582  02C8  1479               	bsf	___fladd@aexp,0
 10583  02C9  0879               	movf	___fladd@aexp,w
 10584  02CA  1903               	btfsc	3,2
 10585  02CB  2ADA               	goto	i1l3401
 10586  02CC  0A79               	incf	___fladd@aexp,w
 10587  02CD  1D03               	btfss	3,2
 10588  02CE  2AD7               	goto	i1l3397
 10589  02CF  3000               	movlw	0
 10590  02D0  00F7               	movwf	___fladd@a+3
 10591  02D1  3000               	movlw	0
 10592  02D2  00F6               	movwf	___fladd@a+2
 10593  02D3  3000               	movlw	0
 10594  02D4  00F5               	movwf	___fladd@a+1
 10595  02D5  3000               	movlw	0
 10596  02D6  00F4               	movwf	___fladd@a
 10597  02D7                     i1l3397:	
 10598  02D7  17F6               	bsf	___fladd@a+2,7
 10599  02D8  01F7               	clrf	___fladd@a+3
 10600  02D9  2AE2               	goto	i1l963
 10601  02DA                     i1l3401:	
 10602  02DA  3000               	movlw	0
 10603  02DB  00F7               	movwf	___fladd@a+3
 10604  02DC  3000               	movlw	0
 10605  02DD  00F6               	movwf	___fladd@a+2
 10606  02DE  3000               	movlw	0
 10607  02DF  00F5               	movwf	___fladd@a+1
 10608  02E0  3000               	movlw	0
 10609  02E1  00F4               	movwf	___fladd@a
 10610  02E2                     i1l963:	
 10611  02E2  087A               	movf	___fladd@bexp,w
 10612  02E3  0279               	subwf	___fladd@aexp,w
 10613  02E4  1803               	skipnc
 10614  02E5  2B28               	goto	i1l3437
 10615  02E6  1F78               	btfss	___fladd@signs,6
 10616  02E7  2AEC               	goto	i1l3407
 10617  02E8  3080               	movlw	128
 10618  02E9  00A0               	movwf	??___fladd
 10619  02EA  0820               	movf	??___fladd,w
 10620  02EB  06F8               	xorwf	___fladd@signs,f
 10621  02EC                     i1l3407:	
 10622  02EC  087A               	movf	___fladd@bexp,w
 10623  02ED  00A0               	movwf	??___fladd
 10624  02EE  0820               	movf	??___fladd,w
 10625  02EF  00FB               	movwf	___fladd@grs
 10626  02F0  0879               	movf	___fladd@aexp,w
 10627  02F1  00A0               	movwf	??___fladd
 10628  02F2  0820               	movf	??___fladd,w
 10629  02F3  00FA               	movwf	___fladd@bexp
 10630  02F4  087B               	movf	___fladd@grs,w
 10631  02F5  00A0               	movwf	??___fladd
 10632  02F6  0820               	movf	??___fladd,w
 10633  02F7  00F9               	movwf	___fladd@aexp
 10634  02F8  0870               	movf	___fladd@b,w
 10635  02F9  00A0               	movwf	??___fladd
 10636  02FA  0820               	movf	??___fladd,w
 10637  02FB  00FB               	movwf	___fladd@grs
 10638  02FC  0874               	movf	___fladd@a,w
 10639  02FD  00A0               	movwf	??___fladd
 10640  02FE  0820               	movf	??___fladd,w
 10641  02FF  00F0               	movwf	___fladd@b
 10642  0300  087B               	movf	___fladd@grs,w
 10643  0301  00A0               	movwf	??___fladd
 10644  0302  0820               	movf	??___fladd,w
 10645  0303  00F4               	movwf	___fladd@a
 10646  0304  0871               	movf	___fladd@b+1,w
 10647  0305  00A0               	movwf	??___fladd
 10648  0306  0820               	movf	??___fladd,w
 10649  0307  00FB               	movwf	___fladd@grs
 10650  0308  0875               	movf	___fladd@a+1,w
 10651  0309  00A0               	movwf	??___fladd
 10652  030A  0820               	movf	??___fladd,w
 10653  030B  00F1               	movwf	___fladd@b+1
 10654  030C  087B               	movf	___fladd@grs,w
 10655  030D  00A0               	movwf	??___fladd
 10656  030E  0820               	movf	??___fladd,w
 10657  030F  00F5               	movwf	___fladd@a+1
 10658  0310  0872               	movf	___fladd@b+2,w
 10659  0311  00A0               	movwf	??___fladd
 10660  0312  0820               	movf	??___fladd,w
 10661  0313  00FB               	movwf	___fladd@grs
 10662  0314  0876               	movf	___fladd@a+2,w
 10663  0315  00A0               	movwf	??___fladd
 10664  0316  0820               	movf	??___fladd,w
 10665  0317  00F2               	movwf	___fladd@b+2
 10666  0318  087B               	movf	___fladd@grs,w
 10667  0319  00A0               	movwf	??___fladd
 10668  031A  0820               	movf	??___fladd,w
 10669  031B  00F6               	movwf	___fladd@a+2
 10670  031C  0873               	movf	___fladd@b+3,w
 10671  031D  00A0               	movwf	??___fladd
 10672  031E  0820               	movf	??___fladd,w
 10673  031F  00FB               	movwf	___fladd@grs
 10674  0320  0877               	movf	___fladd@a+3,w
 10675  0321  00A0               	movwf	??___fladd
 10676  0322  0820               	movf	??___fladd,w
 10677  0323  00F3               	movwf	___fladd@b+3
 10678  0324  087B               	movf	___fladd@grs,w
 10679  0325  00A0               	movwf	??___fladd
 10680  0326  0820               	movf	??___fladd,w
 10681  0327  00F7               	movwf	___fladd@a+3
 10682  0328                     i1l3437:	
 10683  0328  01FB               	clrf	___fladd@grs
 10684  0329  0879               	movf	___fladd@aexp,w
 10685  032A  00A0               	movwf	??___fladd
 10686  032B  01A1               	clrf	??___fladd+1
 10687  032C  0821               	movf	??___fladd+1,w
 10688  032D  00A3               	movwf	??___fladd+3
 10689  032E  087A               	movf	___fladd@bexp,w
 10690  032F  0220               	subwf	??___fladd,w
 10691  0330  00A2               	movwf	??___fladd+2
 10692  0331  1C03               	skipc
 10693  0332  03A3               	decf	??___fladd+3,f
 10694  0333  0823               	movf	??___fladd+3,w
 10695  0334  3A80               	xorlw	128
 10696  0335  00A4               	movwf	??___fladd+4
 10697  0336  3080               	movlw	128
 10698  0337  0224               	subwf	??___fladd+4,w
 10699  0338  1D03               	skipz
 10700  0339  2B3C               	goto	u412_25
 10701  033A  301A               	movlw	26
 10702  033B  0222               	subwf	??___fladd+2,w
 10703  033C                     u412_25:	
 10704  033C  1C03               	skipc
 10705  033D  2B72               	goto	i1l3455
 10706  033E  0873               	movf	___fladd@b+3,w
 10707  033F  0472               	iorwf	___fladd@b+2,w
 10708  0340  0471               	iorwf	___fladd@b+1,w
 10709  0341  0470               	iorwf	___fladd@b,w
 10710  0342  1903               	btfsc	3,2
 10711  0343  2B46               	goto	u413_20
 10712  0344  3001               	movlw	1
 10713  0345  2B47               	goto	u414_20
 10714  0346                     u413_20:	
 10715  0346  3000               	movlw	0
 10716  0347                     u414_20:	
 10717  0347  0020               	movlb	0	; select bank0
 10718  0348  00A0               	movwf	??___fladd
 10719  0349  0820               	movf	??___fladd,w
 10720  034A  00FB               	movwf	___fladd@grs
 10721  034B  3000               	movlw	0
 10722  034C  00F3               	movwf	___fladd@b+3
 10723  034D  3000               	movlw	0
 10724  034E  00F2               	movwf	___fladd@b+2
 10725  034F  3000               	movlw	0
 10726  0350  00F1               	movwf	___fladd@b+1
 10727  0351  3000               	movlw	0
 10728  0352  00F0               	movwf	___fladd@b
 10729  0353  0879               	movf	___fladd@aexp,w
 10730  0354  00A0               	movwf	??___fladd
 10731  0355  0820               	movf	??___fladd,w
 10732  0356  00FA               	movwf	___fladd@bexp
 10733  0357  2B76               	goto	i1l967
 10734  0358                     i1l969:	
 10735  0358  1C7B               	btfss	___fladd@grs,0
 10736  0359  2B61               	goto	i1l3445
 10737  035A  367B               	lsrf	___fladd@grs,w
 10738  035B  3801               	iorlw	1
 10739  035C  0020               	movlb	0	; select bank0
 10740  035D  00A0               	movwf	??___fladd
 10741  035E  0820               	movf	??___fladd,w
 10742  035F  00FB               	movwf	___fladd@grs
 10743  0360  2B63               	goto	i1l3447
 10744  0361                     i1l3445:	
 10745  0361  1003               	clrc
 10746  0362  0CFB               	rrf	___fladd@grs,f
 10747  0363                     i1l3447:	
 10748  0363  1870               	btfsc	___fladd@b,0
 10749  0364  17FB               	bsf	___fladd@grs,7
 10750  0365  3001               	movlw	1
 10751  0366  0020               	movlb	0	; select bank0
 10752  0367  00A0               	movwf	??___fladd
 10753  0368                     u417_25:	
 10754  0368  37F3               	asrf	___fladd@b+3,f
 10755  0369  0CF2               	rrf	___fladd@b+2,f
 10756  036A  0CF1               	rrf	___fladd@b+1,f
 10757  036B  0CF0               	rrf	___fladd@b,f
 10758  036C  0BA0               	decfsz	??___fladd& (0+127),f
 10759  036D  2B68               	goto	u417_25
 10760  036E  3001               	movlw	1
 10761  036F  00A0               	movwf	??___fladd
 10762  0370  0820               	movf	??___fladd,w
 10763  0371  07FA               	addwf	___fladd@bexp,f
 10764  0372                     i1l3455:	
 10765  0372  0879               	movf	___fladd@aexp,w
 10766  0373  027A               	subwf	___fladd@bexp,w
 10767  0374  1C03               	skipc
 10768  0375  2B58               	goto	i1l969
 10769  0376                     i1l967:	
 10770  0376  1B78               	btfsc	___fladd@signs,6
 10771  0377  2BA9               	goto	i1l3481
 10772  0378  087A               	movf	___fladd@bexp,w
 10773  0379  1D03               	btfss	3,2
 10774  037A  2B84               	goto	i1l3463
 10775  037B  3000               	movlw	0
 10776  037C  00F3               	movwf	?___fladd+3
 10777  037D  3000               	movlw	0
 10778  037E  00F2               	movwf	?___fladd+2
 10779  037F  3000               	movlw	0
 10780  0380  00F1               	movwf	?___fladd+1
 10781  0381  3000               	movlw	0
 10782  0382  00F0               	movwf	?___fladd
 10783  0383  0008               	return
 10784  0384                     i1l3463:	
 10785  0384  0874               	movf	___fladd@a,w
 10786  0385  07F0               	addwf	___fladd@b,f
 10787  0386  0875               	movf	___fladd@a+1,w
 10788  0387  3DF1               	addwfc	___fladd@b+1,f
 10789  0388  0876               	movf	___fladd@a+2,w
 10790  0389  3DF2               	addwfc	___fladd@b+2,f
 10791  038A  0877               	movf	___fladd@a+3,w
 10792  038B  3DF3               	addwfc	___fladd@b+3,f
 10793  038C  1C73               	btfss	___fladd@b+3,0
 10794  038D  2C24               	goto	i1l3515
 10795  038E  1C7B               	btfss	___fladd@grs,0
 10796  038F  2B97               	goto	i1l3471
 10797  0390  367B               	lsrf	___fladd@grs,w
 10798  0391  3801               	iorlw	1
 10799  0392  0020               	movlb	0	; select bank0
 10800  0393  00A0               	movwf	??___fladd
 10801  0394  0820               	movf	??___fladd,w
 10802  0395  00FB               	movwf	___fladd@grs
 10803  0396  2B99               	goto	i1l3473
 10804  0397                     i1l3471:	
 10805  0397  1003               	clrc
 10806  0398  0CFB               	rrf	___fladd@grs,f
 10807  0399                     i1l3473:	
 10808  0399  1870               	btfsc	___fladd@b,0
 10809  039A  17FB               	bsf	___fladd@grs,7
 10810  039B  3001               	movlw	1
 10811  039C  0020               	movlb	0	; select bank0
 10812  039D  00A0               	movwf	??___fladd
 10813  039E                     u424_25:	
 10814  039E  37F3               	asrf	___fladd@b+3,f
 10815  039F  0CF2               	rrf	___fladd@b+2,f
 10816  03A0  0CF1               	rrf	___fladd@b+1,f
 10817  03A1  0CF0               	rrf	___fladd@b,f
 10818  03A2  0BA0               	decfsz	??___fladd& (0+127),f
 10819  03A3  2B9E               	goto	u424_25
 10820  03A4  3001               	movlw	1
 10821  03A5  00A0               	movwf	??___fladd
 10822  03A6  0820               	movf	??___fladd,w
 10823  03A7  07FA               	addwf	___fladd@bexp,f
 10824  03A8  2C24               	goto	i1l3515
 10825  03A9                     i1l3481:	
 10826  03A9  0873               	movf	___fladd@b+3,w
 10827  03AA  3A80               	xorlw	128
 10828  03AB  0020               	movlb	0	; select bank0
 10829  03AC  00A0               	movwf	??___fladd
 10830  03AD  0877               	movf	___fladd@a+3,w
 10831  03AE  3A80               	xorlw	128
 10832  03AF  0220               	subwf	??___fladd,w
 10833  03B0  1D03               	skipz
 10834  03B1  2BBC               	goto	u425_23
 10835  03B2  0876               	movf	___fladd@a+2,w
 10836  03B3  0272               	subwf	___fladd@b+2,w
 10837  03B4  1D03               	skipz
 10838  03B5  2BBC               	goto	u425_23
 10839  03B6  0875               	movf	___fladd@a+1,w
 10840  03B7  0271               	subwf	___fladd@b+1,w
 10841  03B8  1D03               	skipz
 10842  03B9  2BBC               	goto	u425_23
 10843  03BA  0874               	movf	___fladd@a,w
 10844  03BB  0270               	subwf	___fladd@b,w
 10845  03BC                     u425_23:	
 10846  03BC  1803               	skipnc
 10847  03BD  2BF4               	goto	i1l3491
 10848  03BE  30FF               	movlw	255
 10849  03BF  00A0               	movwf	??___fladd
 10850  03C0  30FF               	movlw	255
 10851  03C1  00A1               	movwf	??___fladd+1
 10852  03C2  30FF               	movlw	255
 10853  03C3  00A2               	movwf	??___fladd+2
 10854  03C4  30FF               	movlw	255
 10855  03C5  00A3               	movwf	??___fladd+3
 10856  03C6  0870               	movf	___fladd@b,w
 10857  03C7  0274               	subwf	___fladd@a,w
 10858  03C8  00A4               	movwf	??___fladd+4
 10859  03C9  0871               	movf	___fladd@b+1,w
 10860  03CA  3B75               	subwfb	___fladd@a+1,w
 10861  03CB  00A5               	movwf	??___fladd+5
 10862  03CC  0872               	movf	___fladd@b+2,w
 10863  03CD  3B76               	subwfb	___fladd@a+2,w
 10864  03CE  00A6               	movwf	??___fladd+6
 10865  03CF  0873               	movf	___fladd@b+3,w
 10866  03D0  3B77               	subwfb	___fladd@a+3,w
 10867  03D1  00A7               	movwf	??___fladd+7
 10868  03D2  0824               	movf	??___fladd+4,w
 10869  03D3  07A0               	addwf	??___fladd,f
 10870  03D4  0825               	movf	??___fladd+5,w
 10871  03D5  3DA1               	addwfc	??___fladd+1,f
 10872  03D6  0826               	movf	??___fladd+6,w
 10873  03D7  3DA2               	addwfc	??___fladd+2,f
 10874  03D8  0827               	movf	??___fladd+7,w
 10875  03D9  3DA3               	addwfc	??___fladd+3,f
 10876  03DA  0823               	movf	??___fladd+3,w
 10877  03DB  00F3               	movwf	___fladd@b+3
 10878  03DC  0822               	movf	??___fladd+2,w
 10879  03DD  00F2               	movwf	___fladd@b+2
 10880  03DE  0821               	movf	??___fladd+1,w
 10881  03DF  00F1               	movwf	___fladd@b+1
 10882  03E0  0820               	movf	??___fladd,w
 10883  03E1  00F0               	movwf	___fladd@b
 10884  03E2  3080               	movlw	128
 10885  03E3  00A0               	movwf	??___fladd
 10886  03E4  0820               	movf	??___fladd,w
 10887  03E5  06F8               	xorwf	___fladd@signs,f
 10888  03E6  09FB               	comf	___fladd@grs,f
 10889  03E7  0AFB               	incf	___fladd@grs,f
 10890  03E8  087B               	movf	___fladd@grs,w
 10891  03E9  1D03               	btfss	3,2
 10892  03EA  2BFC               	goto	i1l984
 10893  03EB  3001               	movlw	1
 10894  03EC  07F0               	addwf	___fladd@b,f
 10895  03ED  3000               	movlw	0
 10896  03EE  3DF1               	addwfc	___fladd@b+1,f
 10897  03EF  3000               	movlw	0
 10898  03F0  3DF2               	addwfc	___fladd@b+2,f
 10899  03F1  3000               	movlw	0
 10900  03F2  3DF3               	addwfc	___fladd@b+3,f
 10901  03F3  2BFC               	goto	i1l984
 10902  03F4                     i1l3491:	
 10903  03F4  0874               	movf	___fladd@a,w
 10904  03F5  02F0               	subwf	___fladd@b,f
 10905  03F6  0875               	movf	___fladd@a+1,w
 10906  03F7  3BF1               	subwfb	___fladd@b+1,f
 10907  03F8  0876               	movf	___fladd@a+2,w
 10908  03F9  3BF2               	subwfb	___fladd@b+2,f
 10909  03FA  0877               	movf	___fladd@a+3,w
 10910  03FB  3BF3               	subwfb	___fladd@b+3,f
 10911  03FC                     i1l984:	
 10912  03FC  0873               	movf	___fladd@b+3,w
 10913  03FD  0472               	iorwf	___fladd@b+2,w
 10914  03FE  0471               	iorwf	___fladd@b+1,w
 10915  03FF  0470               	iorwf	___fladd@b,w
 10916  0400  1D03               	skipz
 10917  0401  2C22               	goto	i1l3513
 10918  0402  087B               	movf	___fladd@grs,w
 10919  0403  1D03               	btfss	3,2
 10920  0404  2C22               	goto	i1l3513
 10921  0405  3000               	movlw	0
 10922  0406  00F3               	movwf	?___fladd+3
 10923  0407  3000               	movlw	0
 10924  0408  00F2               	movwf	?___fladd+2
 10925  0409  3000               	movlw	0
 10926  040A  00F1               	movwf	?___fladd+1
 10927  040B  3000               	movlw	0
 10928  040C  00F0               	movwf	?___fladd
 10929  040D  0008               	return
 10930  040E                     i1l3499:	
 10931  040E  3001               	movlw	1
 10932  040F                     u429_25:	
 10933  040F  35F0               	lslf	___fladd@b,f
 10934  0410  0DF1               	rlf	___fladd@b+1,f
 10935  0411  0DF2               	rlf	___fladd@b+2,f
 10936  0412  0DF3               	rlf	___fladd@b+3,f
 10937  0413  0B89               	decfsz	9,f
 10938  0414  2C0F               	goto	u429_25
 10939  0415  1BFB               	btfsc	___fladd@grs,7
 10940  0416  1470               	bsf	___fladd@b,0
 10941  0417  1C7B               	btfss	___fladd@grs,0
 10942  0418  2C1B               	goto	i1l3507
 10943  0419  1403               	setc
 10944  041A  2C1C               	goto	L4
 10945  041B                     i1l3507:	
 10946  041B  1003               	clrc
 10947  041C                     L4:	
 10948  041C  0DFB               	rlf	___fladd@grs,f
 10949  041D  087A               	movf	___fladd@bexp,w
 10950  041E  1903               	btfsc	3,2
 10951  041F  2C22               	goto	i1l3513
 10952  0420  3001               	movlw	1
 10953  0421  02FA               	subwf	___fladd@bexp,f
 10954  0422                     i1l3513:	
 10955  0422  1FF2               	btfss	___fladd@b+2,7
 10956  0423  2C0E               	goto	i1l3499
 10957  0424                     i1l3515:	
 10958  0424  01F9               	clrf	___fladd@aexp
 10959  0425  1FFB               	btfss	___fladd@grs,7
 10960  0426  2C2F               	goto	i1l3525
 10961  0427  087B               	movf	___fladd@grs,w
 10962  0428  397F               	andlw	127
 10963  0429  1903               	btfsc	3,2
 10964  042A  1870               	btfsc	___fladd@b,0
 10965  042B  2C2D               	goto	i1l3521
 10966  042C  2C2F               	goto	i1l3525
 10967  042D                     i1l3521:	
 10968  042D  01F9               	clrf	___fladd@aexp
 10969  042E  0AF9               	incf	___fladd@aexp,f
 10970  042F                     i1l3525:	
 10971  042F  0879               	movf	___fladd@aexp,w
 10972  0430  1903               	btfsc	3,2
 10973  0431  2C5C               	goto	i1l997
 10974  0432  3001               	movlw	1
 10975  0433  07F0               	addwf	___fladd@b,f
 10976  0434  3000               	movlw	0
 10977  0435  3DF1               	addwfc	___fladd@b+1,f
 10978  0436  3000               	movlw	0
 10979  0437  3DF2               	addwfc	___fladd@b+2,f
 10980  0438  3000               	movlw	0
 10981  0439  3DF3               	addwfc	___fladd@b+3,f
 10982  043A  1C73               	btfss	___fladd@b+3,0
 10983  043B  2C5C               	goto	i1l997
 10984  043C  0870               	movf	___fladd@b,w
 10985  043D  0020               	movlb	0	; select bank0
 10986  043E  00A0               	movwf	??___fladd
 10987  043F  0871               	movf	___fladd@b+1,w
 10988  0440  00A1               	movwf	??___fladd+1
 10989  0441  0872               	movf	___fladd@b+2,w
 10990  0442  00A2               	movwf	??___fladd+2
 10991  0443  0873               	movf	___fladd@b+3,w
 10992  0444  00A3               	movwf	??___fladd+3
 10993  0445  3001               	movlw	1
 10994  0446  00A4               	movwf	??___fladd+4
 10995  0447                     u439_25:	
 10996  0447  37A3               	asrf	??___fladd+3,f
 10997  0448  0CA2               	rrf	??___fladd+2,f
 10998  0449  0CA1               	rrf	??___fladd+1,f
 10999  044A  0CA0               	rrf	??___fladd,f
 11000  044B  0BA4               	decfsz	??___fladd+4,f
 11001  044C  2C47               	goto	u439_25
 11002  044D  0823               	movf	??___fladd+3,w
 11003  044E  00F3               	movwf	___fladd@b+3
 11004  044F  0822               	movf	??___fladd+2,w
 11005  0450  00F2               	movwf	___fladd@b+2
 11006  0451  0821               	movf	??___fladd+1,w
 11007  0452  00F1               	movwf	___fladd@b+1
 11008  0453  0820               	movf	??___fladd,w
 11009  0454  00F0               	movwf	___fladd@b
 11010  0455  0A7A               	incf	___fladd@bexp,w
 11011  0456  1903               	btfsc	3,2
 11012  0457  2C5C               	goto	i1l997
 11013  0458  3001               	movlw	1
 11014  0459  00A0               	movwf	??___fladd
 11015  045A  0820               	movf	??___fladd,w
 11016  045B  07FA               	addwf	___fladd@bexp,f
 11017  045C                     i1l997:	
 11018  045C  0A7A               	incf	___fladd@bexp,w
 11019  045D  1D03               	btfss	3,2
 11020  045E  087A               	movf	___fladd@bexp,w
 11021  045F  1D03               	btfss	3,2
 11022  0460  2C6C               	goto	i1l3543
 11023  0461  3000               	movlw	0
 11024  0462  00F3               	movwf	___fladd@b+3
 11025  0463  3000               	movlw	0
 11026  0464  00F2               	movwf	___fladd@b+2
 11027  0465  3000               	movlw	0
 11028  0466  00F1               	movwf	___fladd@b+1
 11029  0467  3000               	movlw	0
 11030  0468  00F0               	movwf	___fladd@b
 11031  0469  087A               	movf	___fladd@bexp,w
 11032  046A  1903               	btfsc	3,2
 11033  046B  01F8               	clrf	___fladd@signs
 11034  046C                     i1l3543:	
 11035  046C  1C7A               	btfss	___fladd@bexp,0
 11036  046D  2C70               	goto	i1l3547
 11037  046E  17F2               	bsf	___fladd@b+2,7
 11038  046F  2C75               	goto	i1l1005
 11039  0470                     i1l3547:	
 11040  0470  307F               	movlw	127
 11041  0471  0020               	movlb	0	; select bank0
 11042  0472  00A0               	movwf	??___fladd
 11043  0473  0820               	movf	??___fladd,w
 11044  0474  05F2               	andwf	___fladd@b+2,f
 11045  0475                     i1l1005:	
 11046  0475  367A               	lsrf	___fladd@bexp,w
 11047  0476  0020               	movlb	0	; select bank0
 11048  0477  00A0               	movwf	??___fladd
 11049  0478  0820               	movf	??___fladd,w
 11050  0479  00F3               	movwf	___fladd@b+3
 11051  047A  1FF8               	btfss	___fladd@signs,7
 11052  047B  0008               	return
 11053  047C  17F3               	bsf	___fladd@b+3,7
 11054  047D  0008               	return
 11055  047E                     __end_of___fladd:	
 11056                           
 11057                           	psect	text45
 11058  14C4                     __ptext45:	
 11059 ;; *************** function _PIN_MANAGER_IOC *****************
 11060 ;; Defined at:
 11061 ;;		line 74 in file "mcc_generated_files/pin_manager.c"
 11062 ;; Parameters:    Size  Location     Type
 11063 ;;		None
 11064 ;; Auto vars:     Size  Location     Type
 11065 ;;		None
 11066 ;; Return value:  Size  Location     Type
 11067 ;;                  1    wreg      void 
 11068 ;; Registers used:
 11069 ;;		wreg, status,2, status,0, pclath, cstack
 11070 ;; Tracked objects:
 11071 ;;		On entry : 0/0
 11072 ;;		On exit  : 0/0
 11073 ;;		Unchanged: 0/0
 11074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11079 ;;Total ram usage:        0 bytes
 11080 ;; Hardware stack levels used:    1
 11081 ;; Hardware stack levels required when called:    4
 11082 ;; This function calls:
 11083 ;;		_IOCCF7_ISR
 11084 ;; This function is called by:
 11085 ;;		_INTERRUPT_InterruptManager
 11086 ;; This function uses a non-reentrant model
 11087 ;;
 11088                           
 11089                           
 11090                           ;psect for function _PIN_MANAGER_IOC
 11091  14C4                     _PIN_MANAGER_IOC:	
 11092                           
 11093                           ;mcc_generated_files/pin_manager.c: 77:     if(IOCCFbits.IOCCF7 == 1)
 11094                           
 11095                           ;incstack = 0
 11096                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
 11097  14C4  0027               	movlb	7	; select bank7
 11098  14C5  1F99               	btfss	25,7	;volatile
 11099  14C6  0008               	return
 11100                           
 11101                           ;mcc_generated_files/pin_manager.c: 78:     {;mcc_generated_files/pin_manager.c: 79:    
      +                               IOCCF7_ISR();
 11102  14C7  3195  253A         	fcall	_IOCCF7_ISR
 11103  14C9  0008               	return
 11104  14CA                     __end_of_PIN_MANAGER_IOC:	
 11105                           
 11106                           	psect	text46
 11107  153A                     __ptext46:	
 11108 ;; *************** function _IOCCF7_ISR *****************
 11109 ;; Defined at:
 11110 ;;		line 86 in file "mcc_generated_files/pin_manager.c"
 11111 ;; Parameters:    Size  Location     Type
 11112 ;;		None
 11113 ;; Auto vars:     Size  Location     Type
 11114 ;;		None
 11115 ;; Return value:  Size  Location     Type
 11116 ;;                  1    wreg      void 
 11117 ;; Registers used:
 11118 ;;		wreg, status,2, status,0, pclath, cstack
 11119 ;; Tracked objects:
 11120 ;;		On entry : 0/0
 11121 ;;		On exit  : 0/0
 11122 ;;		Unchanged: 0/0
 11123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11127 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11128 ;;Total ram usage:        0 bytes
 11129 ;; Hardware stack levels used:    1
 11130 ;; Hardware stack levels required when called:    3
 11131 ;; This function calls:
 11132 ;;		Absolute function
 11133 ;;		_IOCCF7_DefaultInterruptHandler
 11134 ;;		_speedCalc
 11135 ;; This function is called by:
 11136 ;;		_PIN_MANAGER_IOC
 11137 ;; This function uses a non-reentrant model
 11138 ;;
 11139                           
 11140                           
 11141                           ;psect for function _IOCCF7_ISR
 11142  153A                     _IOCCF7_ISR:	
 11143                           
 11144                           ;mcc_generated_files/pin_manager.c: 91:     if(IOCCF7_InterruptHandler)
 11145                           
 11146                           ;incstack = 0
 11147                           ; Regs used in _IOCCF7_ISR: [wreg+status,2+status,0+pclath+cstack]
 11148  153A  0022               	movlb	2	; select bank2
 11149  153B  0850               	movf	_IOCCF7_InterruptHandler^(0+256),w
 11150  153C  0451               	iorwf	(_IOCCF7_InterruptHandler+1)^(0+256),w
 11151  153D  1903               	btfsc	3,2
 11152  153E  2D44               	goto	i1l3657
 11153                           
 11154                           ;mcc_generated_files/pin_manager.c: 92:     {;mcc_generated_files/pin_manager.c: 93:    
      +                               IOCCF7_InterruptHandler();
 11155  153F  0851               	movf	(_IOCCF7_InterruptHandler+1)^(0+256),w
 11156  1540  008A               	movwf	10
 11157  1541  0850               	movf	_IOCCF7_InterruptHandler^(0+256),w
 11158  1542  000A               	callw
 11159  1543  3195               	pagesel	$
 11160  1544                     i1l3657:	
 11161                           
 11162                           ;mcc_generated_files/pin_manager.c: 95:     IOCCFbits.IOCCF7 = 0;
 11163  1544  0027               	movlb	7	; select bank7
 11164  1545  1399               	bcf	25,7	;volatile
 11165  1546  0008               	return
 11166  1547                     __end_of_IOCCF7_ISR:	
 11167                           
 11168                           	psect	text47
 11169  0002                     __ptext47:	
 11170 ;; *************** function _IOCCF7_DefaultInterruptHandler *****************
 11171 ;; Defined at:
 11172 ;;		line 108 in file "mcc_generated_files/pin_manager.c"
 11173 ;; Parameters:    Size  Location     Type
 11174 ;;		None
 11175 ;; Auto vars:     Size  Location     Type
 11176 ;;		None
 11177 ;; Return value:  Size  Location     Type
 11178 ;;                  1    wreg      void 
 11179 ;; Registers used:
 11180 ;;		None
 11181 ;; Tracked objects:
 11182 ;;		On entry : 0/0
 11183 ;;		On exit  : 0/0
 11184 ;;		Unchanged: 0/0
 11185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11190 ;;Total ram usage:        0 bytes
 11191 ;; Hardware stack levels used:    1
 11192 ;; This function calls:
 11193 ;;		Nothing
 11194 ;; This function is called by:
 11195 ;;		_PIN_MANAGER_Initialize
 11196 ;;		_IOCCF7_ISR
 11197 ;; This function uses a non-reentrant model
 11198 ;;
 11199                           
 11200                           
 11201                           ;psect for function _IOCCF7_DefaultInterruptHandler
 11202  0002                     _IOCCF7_DefaultInterruptHandler:	
 11203                           
 11204                           ;incstack = 0
 11205                           ; Regs used in _IOCCF7_DefaultInterruptHandler: []
 11206  0002  0008               	return
 11207  0003                     __end_of_IOCCF7_DefaultInterruptHandler:	
 11208                           
 11209                           	psect	text48
 11210  0DA3                     __ptext48:	
 11211 ;; *************** function _speedCalc *****************
 11212 ;; Defined at:
 11213 ;;		line 106 in file "main.c"
 11214 ;; Parameters:    Size  Location     Type
 11215 ;;		None
 11216 ;; Auto vars:     Size  Location     Type
 11217 ;;		None
 11218 ;; Return value:  Size  Location     Type
 11219 ;;                  1    wreg      void 
 11220 ;; Registers used:
 11221 ;;		wreg, status,2, status,0, pclath, cstack
 11222 ;; Tracked objects:
 11223 ;;		On entry : 0/0
 11224 ;;		On exit  : 0/0
 11225 ;;		Unchanged: 0/0
 11226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11228 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11230 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11231 ;;Total ram usage:        4 bytes
 11232 ;; Hardware stack levels used:    1
 11233 ;; Hardware stack levels required when called:    2
 11234 ;; This function calls:
 11235 ;;		___awdiv
 11236 ;;		___awmod
 11237 ;;		___fldiv
 11238 ;;		___flmul
 11239 ;;		___fltol
 11240 ;; This function is called by:
 11241 ;;		_main
 11242 ;;		_IOCCF7_ISR
 11243 ;; This function uses a non-reentrant model
 11244 ;;
 11245                           
 11246                           
 11247                           ;psect for function _speedCalc
 11248  0DA3                     _speedCalc:	
 11249                           
 11250                           ;main.c: 109:     rpm = ( ( 1000 / counter ) * 60 ) ;
 11251                           
 11252                           ;incstack = 0
 11253                           ; Regs used in _speedCalc: [wreg+status,2+status,0+pclath+cstack]
 11254  0DA3  3042               	movlw	66
 11255  0DA4  0020               	movlb	0	; select bank0
 11256  0DA5  00B0               	movwf	___flmul@b+3
 11257  0DA6  3070               	movlw	112
 11258  0DA7  00AF               	movwf	___flmul@b+2
 11259  0DA8  3000               	movlw	0
 11260  0DA9  00AE               	movwf	___flmul@b+1
 11261  0DAA  3000               	movlw	0
 11262  0DAB  00AD               	movwf	___flmul@b
 11263  0DAC  0022               	movlb	2	; select bank2
 11264  0DAD  0849               	movf	(_counter+3)^(0+256),w	;volatile
 11265  0DAE  00F3               	movwf	___fldiv@a+3
 11266  0DAF  0848               	movf	(_counter+2)^(0+256),w	;volatile
 11267  0DB0  00F2               	movwf	___fldiv@a+2
 11268  0DB1  0847               	movf	(_counter+1)^(0+256),w	;volatile
 11269  0DB2  00F1               	movwf	___fldiv@a+1
 11270  0DB3  0846               	movf	_counter^(0+256),w	;volatile
 11271  0DB4  00F0               	movwf	___fldiv@a
 11272  0DB5  3044               	movlw	68
 11273  0DB6  00F7               	movwf	___fldiv@b+3
 11274  0DB7  307A               	movlw	122
 11275  0DB8  00F6               	movwf	___fldiv@b+2
 11276  0DB9  3000               	movlw	0
 11277  0DBA  00F5               	movwf	___fldiv@b+1
 11278  0DBB  3000               	movlw	0
 11279  0DBC  00F4               	movwf	___fldiv@b
 11280  0DBD  3186  2658  318D   	fcall	___fldiv
 11281  0DC0  0873               	movf	?___fldiv+3,w
 11282  0DC1  0020               	movlb	0	; select bank0
 11283  0DC2  00B4               	movwf	___flmul@a+3
 11284  0DC3  0872               	movf	?___fldiv+2,w
 11285  0DC4  00B3               	movwf	___flmul@a+2
 11286  0DC5  0871               	movf	?___fldiv+1,w
 11287  0DC6  00B2               	movwf	___flmul@a+1
 11288  0DC7  0870               	movf	?___fldiv,w
 11289  0DC8  00B1               	movwf	___flmul@a
 11290  0DC9  3180  2069  318D   	fcall	___flmul
 11291  0DCC  0020               	movlb	0	; select bank0
 11292  0DCD  0830               	movf	?___flmul+3,w
 11293  0DCE  0022               	movlb	2	; select bank2
 11294  0DCF  00C5               	movwf	(_rpm+3)^(0+256)	;volatile
 11295  0DD0  0020               	movlb	0	; select bank0
 11296  0DD1  082F               	movf	?___flmul+2,w
 11297  0DD2  0022               	movlb	2	; select bank2
 11298  0DD3  00C4               	movwf	(_rpm+2)^(0+256)	;volatile
 11299  0DD4  0020               	movlb	0	; select bank0
 11300  0DD5  082E               	movf	?___flmul+1,w
 11301  0DD6  0022               	movlb	2	; select bank2
 11302  0DD7  00C3               	movwf	(_rpm+1)^(0+256)	;volatile
 11303  0DD8  0020               	movlb	0	; select bank0
 11304  0DD9  082D               	movf	?___flmul,w
 11305  0DDA  0022               	movlb	2	; select bank2
 11306  0DDB  00C2               	movwf	_rpm^(0+256)	;volatile
 11307                           
 11308                           ;main.c: 111:     speed = 2 * rpm * (0.06) ;
 11309  0DDC  3040               	movlw	64
 11310  0DDD  0020               	movlb	0	; select bank0
 11311  0DDE  00B0               	movwf	___flmul@b+3
 11312  0DDF  3000               	movlw	0
 11313  0DE0  00AF               	movwf	___flmul@b+2
 11314  0DE1  3000               	movlw	0
 11315  0DE2  00AE               	movwf	___flmul@b+1
 11316  0DE3  3000               	movlw	0
 11317  0DE4  00AD               	movwf	___flmul@b
 11318  0DE5  0022               	movlb	2	; select bank2
 11319  0DE6  0845               	movf	(_rpm+3)^(0+256),w	;volatile
 11320  0DE7  0020               	movlb	0	; select bank0
 11321  0DE8  00B4               	movwf	___flmul@a+3
 11322  0DE9  0022               	movlb	2	; select bank2
 11323  0DEA  0844               	movf	(_rpm+2)^(0+256),w	;volatile
 11324  0DEB  0020               	movlb	0	; select bank0
 11325  0DEC  00B3               	movwf	___flmul@a+2
 11326  0DED  0022               	movlb	2	; select bank2
 11327  0DEE  0843               	movf	(_rpm+1)^(0+256),w	;volatile
 11328  0DEF  0020               	movlb	0	; select bank0
 11329  0DF0  00B2               	movwf	___flmul@a+1
 11330  0DF1  0022               	movlb	2	; select bank2
 11331  0DF2  0842               	movf	_rpm^(0+256),w	;volatile
 11332  0DF3  0020               	movlb	0	; select bank0
 11333  0DF4  00B1               	movwf	___flmul@a
 11334  0DF5  3180  2069  318D   	fcall	___flmul
 11335  0DF8  0020               	movlb	0	; select bank0
 11336  0DF9  0830               	movf	?___flmul+3,w
 11337  0DFA  00DB               	movwf	_speedCalc$1531+3
 11338  0DFB  082F               	movf	?___flmul+2,w
 11339  0DFC  00DA               	movwf	_speedCalc$1531+2
 11340  0DFD  082E               	movf	?___flmul+1,w
 11341  0DFE  00D9               	movwf	_speedCalc$1531+1
 11342  0DFF  082D               	movf	?___flmul,w
 11343  0E00  00D8               	movwf	_speedCalc$1531
 11344                           
 11345                           ;main.c: 111:     speed = 2 * rpm * (0.06) ;
 11346  0E01  303D               	movlw	61
 11347  0E02  00B0               	movwf	___flmul@b+3
 11348  0E03  3075               	movlw	117
 11349  0E04  00AF               	movwf	___flmul@b+2
 11350  0E05  30C2               	movlw	194
 11351  0E06  00AE               	movwf	___flmul@b+1
 11352  0E07  308F               	movlw	143
 11353  0E08  00AD               	movwf	___flmul@b
 11354  0E09  085B               	movf	_speedCalc$1531+3,w
 11355  0E0A  00B4               	movwf	___flmul@a+3
 11356  0E0B  085A               	movf	_speedCalc$1531+2,w
 11357  0E0C  00B3               	movwf	___flmul@a+2
 11358  0E0D  0859               	movf	_speedCalc$1531+1,w
 11359  0E0E  00B2               	movwf	___flmul@a+1
 11360  0E0F  0858               	movf	_speedCalc$1531,w
 11361  0E10  00B1               	movwf	___flmul@a
 11362  0E11  3180  2069  318D   	fcall	___flmul
 11363  0E14  0020               	movlb	0	; select bank0
 11364  0E15  0830               	movf	?___flmul+3,w
 11365  0E16  0022               	movlb	2	; select bank2
 11366  0E17  00AF               	movwf	(_speed+3)^(0+256)	;volatile
 11367  0E18  0020               	movlb	0	; select bank0
 11368  0E19  082F               	movf	?___flmul+2,w
 11369  0E1A  0022               	movlb	2	; select bank2
 11370  0E1B  00AE               	movwf	(_speed+2)^(0+256)	;volatile
 11371  0E1C  0020               	movlb	0	; select bank0
 11372  0E1D  082E               	movf	?___flmul+1,w
 11373  0E1E  0022               	movlb	2	; select bank2
 11374  0E1F  00AD               	movwf	(_speed+1)^(0+256)	;volatile
 11375  0E20  0020               	movlb	0	; select bank0
 11376  0E21  082D               	movf	?___flmul,w
 11377  0E22  0022               	movlb	2	; select bank2
 11378  0E23  00AC               	movwf	_speed^(0+256)	;volatile
 11379                           
 11380                           ;main.c: 114:     speedHi = speed ;
 11381  0E24  082F               	movf	(_speed+3)^(0+256),w	;volatile
 11382  0E25  0020               	movlb	0	; select bank0
 11383  0E26  00CA               	movwf	___fltol@f1+3
 11384  0E27  0022               	movlb	2	; select bank2
 11385  0E28  082E               	movf	(_speed+2)^(0+256),w	;volatile
 11386  0E29  0020               	movlb	0	; select bank0
 11387  0E2A  00C9               	movwf	___fltol@f1+2
 11388  0E2B  0022               	movlb	2	; select bank2
 11389  0E2C  082D               	movf	(_speed+1)^(0+256),w	;volatile
 11390  0E2D  0020               	movlb	0	; select bank0
 11391  0E2E  00C8               	movwf	___fltol@f1+1
 11392  0E2F  0022               	movlb	2	; select bank2
 11393  0E30  082C               	movf	_speed^(0+256),w	;volatile
 11394  0E31  0020               	movlb	0	; select bank0
 11395  0E32  00C7               	movwf	___fltol@f1
 11396  0E33  3188  20CC  318D   	fcall	___fltol
 11397  0E36  0020               	movlb	0	; select bank0
 11398  0E37  0848               	movf	?___fltol+1,w
 11399  0E38  0022               	movlb	2	; select bank2
 11400  0E39  00BB               	movwf	(_speedHi+1)^(0+256)	;volatile
 11401  0E3A  0020               	movlb	0	; select bank0
 11402  0E3B  0847               	movf	?___fltol,w
 11403  0E3C  0022               	movlb	2	; select bank2
 11404  0E3D  00BA               	movwf	_speedHi^(0+256)	;volatile
 11405                           
 11406                           ;main.c: 115:     speedLo = ( (int)(speed*10.0) % 10 ) ;
 11407  0E3E  300A               	movlw	10
 11408  0E3F  0020               	movlb	0	; select bank0
 11409  0E40  00D2               	movwf	___awmod@divisor
 11410  0E41  3000               	movlw	0
 11411  0E42  00D3               	movwf	___awmod@divisor+1
 11412  0E43  0022               	movlb	2	; select bank2
 11413  0E44  082F               	movf	(_speed+3)^(0+256),w	;volatile
 11414  0E45  0020               	movlb	0	; select bank0
 11415  0E46  00B4               	movwf	___flmul@a+3
 11416  0E47  0022               	movlb	2	; select bank2
 11417  0E48  082E               	movf	(_speed+2)^(0+256),w	;volatile
 11418  0E49  0020               	movlb	0	; select bank0
 11419  0E4A  00B3               	movwf	___flmul@a+2
 11420  0E4B  0022               	movlb	2	; select bank2
 11421  0E4C  082D               	movf	(_speed+1)^(0+256),w	;volatile
 11422  0E4D  0020               	movlb	0	; select bank0
 11423  0E4E  00B2               	movwf	___flmul@a+1
 11424  0E4F  0022               	movlb	2	; select bank2
 11425  0E50  082C               	movf	_speed^(0+256),w	;volatile
 11426  0E51  0020               	movlb	0	; select bank0
 11427  0E52  00B1               	movwf	___flmul@a
 11428  0E53  3041               	movlw	65
 11429  0E54  00B0               	movwf	___flmul@b+3
 11430  0E55  3020               	movlw	32
 11431  0E56  00AF               	movwf	___flmul@b+2
 11432  0E57  3000               	movlw	0
 11433  0E58  00AE               	movwf	___flmul@b+1
 11434  0E59  3000               	movlw	0
 11435  0E5A  00AD               	movwf	___flmul@b
 11436  0E5B  3180  2069  318D   	fcall	___flmul
 11437  0E5E  0020               	movlb	0	; select bank0
 11438  0E5F  0830               	movf	?___flmul+3,w
 11439  0E60  00CA               	movwf	___fltol@f1+3
 11440  0E61  082F               	movf	?___flmul+2,w
 11441  0E62  00C9               	movwf	___fltol@f1+2
 11442  0E63  082E               	movf	?___flmul+1,w
 11443  0E64  00C8               	movwf	___fltol@f1+1
 11444  0E65  082D               	movf	?___flmul,w
 11445  0E66  00C7               	movwf	___fltol@f1
 11446  0E67  3188  20CC  318D   	fcall	___fltol
 11447  0E6A  0020               	movlb	0	; select bank0
 11448  0E6B  0848               	movf	?___fltol+1,w
 11449  0E6C  00D5               	movwf	___awmod@dividend+1
 11450  0E6D  0847               	movf	?___fltol,w
 11451  0E6E  00D4               	movwf	___awmod@dividend
 11452  0E6F  3197  27BA  318D   	fcall	___awmod
 11453  0E72  0020               	movlb	0	; select bank0
 11454  0E73  0853               	movf	?___awmod+1,w
 11455  0E74  0022               	movlb	2	; select bank2
 11456  0E75  00BD               	movwf	(_speedLo+1)^(0+256)	;volatile
 11457  0E76  0020               	movlb	0	; select bank0
 11458  0E77  0852               	movf	?___awmod,w
 11459  0E78  0022               	movlb	2	; select bank2
 11460  0E79  00BC               	movwf	_speedLo^(0+256)	;volatile
 11461                           
 11462                           ;main.c: 118:     counter = 0 ;
 11463  0E7A  3000               	movlw	0
 11464  0E7B  00C9               	movwf	(_counter+3)^(0+256)	;volatile
 11465  0E7C  3000               	movlw	0
 11466  0E7D  00C8               	movwf	(_counter+2)^(0+256)	;volatile
 11467  0E7E  3000               	movlw	0
 11468  0E7F  00C7               	movwf	(_counter+1)^(0+256)	;volatile
 11469  0E80  3000               	movlw	0
 11470  0E81  00C6               	movwf	_counter^(0+256)	;volatile
 11471                           
 11472                           ;main.c: 119:     distance = distance + 2 ;
 11473  0E82  0020               	movlb	0	; select bank0
 11474  0E83  0864               	movf	_distance,w	;volatile
 11475  0E84  3E02               	addlw	2
 11476  0E85  00E4               	movwf	_distance	;volatile
 11477  0E86  3000               	movlw	0
 11478  0E87  3D65               	addwfc	_distance+1,w	;volatile
 11479  0E88  00E5               	movwf	_distance+1	;volatile
 11480                           
 11481                           ;main.c: 121:     distLo = distance % 1000 ;
 11482  0E89  30E8               	movlw	232
 11483  0E8A  00D2               	movwf	___awmod@divisor
 11484  0E8B  3003               	movlw	3
 11485  0E8C  00D3               	movwf	___awmod@divisor+1
 11486  0E8D  0865               	movf	_distance+1,w	;volatile
 11487  0E8E  00D5               	movwf	___awmod@dividend+1
 11488  0E8F  0864               	movf	_distance,w	;volatile
 11489  0E90  00D4               	movwf	___awmod@dividend
 11490  0E91  3197  27BA  318D   	fcall	___awmod
 11491  0E94  0020               	movlb	0	; select bank0
 11492  0E95  0853               	movf	?___awmod+1,w
 11493  0E96  0022               	movlb	2	; select bank2
 11494  0E97  00BF               	movwf	(_distLo+1)^(0+256)	;volatile
 11495  0E98  0020               	movlb	0	; select bank0
 11496  0E99  0852               	movf	?___awmod,w
 11497  0E9A  0022               	movlb	2	; select bank2
 11498  0E9B  00BE               	movwf	_distLo^(0+256)	;volatile
 11499                           
 11500                           ;main.c: 122:     distHi = distance / 1000 ;
 11501  0E9C  30E8               	movlw	232
 11502  0E9D  00F0               	movwf	___awdiv@divisor
 11503  0E9E  3003               	movlw	3
 11504  0E9F  00F1               	movwf	___awdiv@divisor+1
 11505  0EA0  0020               	movlb	0	; select bank0
 11506  0EA1  0865               	movf	_distance+1,w	;volatile
 11507  0EA2  00F3               	movwf	___awdiv@dividend+1
 11508  0EA3  0864               	movf	_distance,w	;volatile
 11509  0EA4  00F2               	movwf	___awdiv@dividend
 11510  0EA5  3188  2025         	fcall	___awdiv
 11511  0EA7  0871               	movf	?___awdiv+1,w
 11512  0EA8  0022               	movlb	2	; select bank2
 11513  0EA9  00C1               	movwf	(_distHi+1)^(0+256)	;volatile
 11514  0EAA  0870               	movf	?___awdiv,w
 11515  0EAB  00C0               	movwf	_distHi^(0+256)	;volatile
 11516  0EAC  0008               	return
 11517  0EAD                     __end_of_speedCalc:	
 11518                           
 11519                           	psect	text49
 11520  08CC                     __ptext49:	
 11521 ;; *************** function ___fltol *****************
 11522 ;; Defined at:
 11523 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
 11524 ;; Parameters:    Size  Location     Type
 11525 ;;  f1              4   39[BANK0 ] void 
 11526 ;; Auto vars:     Size  Location     Type
 11527 ;;  exp1            1   49[BANK0 ] unsigned char 
 11528 ;;  sign1           1   48[BANK0 ] unsigned char 
 11529 ;; Return value:  Size  Location     Type
 11530 ;;                  4   39[BANK0 ] long 
 11531 ;; Registers used:
 11532 ;;		wreg, status,2, status,0
 11533 ;; Tracked objects:
 11534 ;;		On entry : 0/0
 11535 ;;		On exit  : 0/0
 11536 ;;		Unchanged: 0/0
 11537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11538 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11539 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11540 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11541 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11542 ;;Total ram usage:       11 bytes
 11543 ;; Hardware stack levels used:    1
 11544 ;; This function calls:
 11545 ;;		Nothing
 11546 ;; This function is called by:
 11547 ;;		_speedCalc
 11548 ;; This function uses a non-reentrant model
 11549 ;;
 11550                           
 11551                           
 11552                           ;psect for function ___fltol
 11553  08CC                     ___fltol:	
 11554                           
 11555                           ;incstack = 0
 11556                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 11557  08CC  1003               	clrc
 11558  08CD  0020               	movlb	0	; select bank0
 11559  08CE  0D49               	rlf	___fltol@f1+2,w
 11560  08CF  0D4A               	rlf	___fltol@f1+3,w
 11561  08D0  00CB               	movwf	??___fltol
 11562  08D1  084B               	movf	??___fltol,w
 11563  08D2  00D1               	movwf	___fltol@exp1
 11564  08D3  0851               	movf	___fltol@exp1,w
 11565  08D4  1D03               	btfss	3,2
 11566  08D5  28DF               	goto	i1l2917
 11567  08D6                     i1l2913:	
 11568  08D6  3000               	movlw	0
 11569  08D7  00CA               	movwf	?___fltol+3
 11570  08D8  3000               	movlw	0
 11571  08D9  00C9               	movwf	?___fltol+2
 11572  08DA  3000               	movlw	0
 11573  08DB  00C8               	movwf	?___fltol+1
 11574  08DC  3000               	movlw	0
 11575  08DD  00C7               	movwf	?___fltol
 11576  08DE  0008               	return
 11577  08DF                     i1l2917:	
 11578  08DF  0847               	movf	___fltol@f1,w
 11579  08E0  00CB               	movwf	??___fltol
 11580  08E1  0848               	movf	___fltol@f1+1,w
 11581  08E2  00CC               	movwf	??___fltol+1
 11582  08E3  0849               	movf	___fltol@f1+2,w
 11583  08E4  00CD               	movwf	??___fltol+2
 11584  08E5  084A               	movf	___fltol@f1+3,w
 11585  08E6  00CE               	movwf	??___fltol+3
 11586  08E7  301F               	movlw	31
 11587  08E8                     u320_25:	
 11588  08E8  36CE               	lsrf	??___fltol+3,f
 11589  08E9  0CCD               	rrf	??___fltol+2,f
 11590  08EA  0CCC               	rrf	??___fltol+1,f
 11591  08EB  0CCB               	rrf	??___fltol,f
 11592  08EC  0B89               	decfsz	9,f
 11593  08ED  28E8               	goto	u320_25
 11594  08EE  084B               	movf	??___fltol,w
 11595  08EF  00CF               	movwf	??___fltol+4
 11596  08F0  084F               	movf	??___fltol+4,w
 11597  08F1  00D0               	movwf	___fltol@sign1
 11598  08F2  17C9               	bsf	___fltol@f1+2,7
 11599  08F3  30FF               	movlw	255
 11600  08F4  05C7               	andwf	___fltol@f1,f
 11601  08F5  30FF               	movlw	255
 11602  08F6  05C8               	andwf	___fltol@f1+1,f
 11603  08F7  30FF               	movlw	255
 11604  08F8  05C9               	andwf	___fltol@f1+2,f
 11605  08F9  3000               	movlw	0
 11606  08FA  05CA               	andwf	___fltol@f1+3,f
 11607  08FB  3096               	movlw	150
 11608  08FC  02D1               	subwf	___fltol@exp1,f
 11609  08FD  1FD1               	btfss	___fltol@exp1,7
 11610  08FE  2912               	goto	i1l2935
 11611  08FF  0851               	movf	___fltol@exp1,w
 11612  0900  3A80               	xorlw	128
 11613  0901  3E97               	addlw	151
 11614  0902  1C03               	btfss	3,0
 11615  0903  28D6               	goto	i1l2913
 11616  0904                     i1l2933:	
 11617  0904  3001               	movlw	1
 11618  0905                     u323_25:	
 11619  0905  36CA               	lsrf	___fltol@f1+3,f
 11620  0906  0CC9               	rrf	___fltol@f1+2,f
 11621  0907  0CC8               	rrf	___fltol@f1+1,f
 11622  0908  0CC7               	rrf	___fltol@f1,f
 11623  0909  0B89               	decfsz	9,f
 11624  090A  2905               	goto	u323_25
 11625  090B  3001               	movlw	1
 11626  090C  00CB               	movwf	??___fltol
 11627  090D  084B               	movf	??___fltol,w
 11628  090E  07D1               	addwf	___fltol@exp1,f
 11629  090F  1903               	btfsc	3,2
 11630  0910  2923               	goto	i1l2943
 11631  0911  2904               	goto	i1l2933
 11632  0912                     i1l2935:	
 11633  0912  3020               	movlw	32
 11634  0913  0251               	subwf	___fltol@exp1,w
 11635  0914  1803               	btfsc	3,0
 11636  0915  28D6               	goto	i1l2913
 11637  0916                     i1l863:	
 11638  0916  0851               	movf	___fltol@exp1,w
 11639  0917  1903               	btfsc	3,2
 11640  0918  2923               	goto	i1l2943
 11641  0919  3001               	movlw	1
 11642  091A                     u326_25:	
 11643  091A  35C7               	lslf	___fltol@f1,f
 11644  091B  0DC8               	rlf	___fltol@f1+1,f
 11645  091C  0DC9               	rlf	___fltol@f1+2,f
 11646  091D  0DCA               	rlf	___fltol@f1+3,f
 11647  091E  0B89               	decfsz	9,f
 11648  091F  291A               	goto	u326_25
 11649  0920  3001               	movlw	1
 11650  0921  02D1               	subwf	___fltol@exp1,f
 11651  0922  2916               	goto	i1l863
 11652  0923                     i1l2943:	
 11653  0923  0850               	movf	___fltol@sign1,w
 11654  0924  1903               	btfsc	3,2
 11655  0925  0008               	return
 11656  0926  09C7               	comf	___fltol@f1,f
 11657  0927  09C8               	comf	___fltol@f1+1,f
 11658  0928  09C9               	comf	___fltol@f1+2,f
 11659  0929  09CA               	comf	___fltol@f1+3,f
 11660  092A  0AC7               	incf	___fltol@f1,f
 11661  092B  1903               	skipnz
 11662  092C  0AC8               	incf	___fltol@f1+1,f
 11663  092D  1903               	skipnz
 11664  092E  0AC9               	incf	___fltol@f1+2,f
 11665  092F  1903               	skipnz
 11666  0930  0ACA               	incf	___fltol@f1+3,f
 11667  0931  0008               	return
 11668  0932                     __end_of___fltol:	
 11669                           
 11670                           	psect	text50
 11671  0069                     __ptext50:	
 11672 ;; *************** function ___flmul *****************
 11673 ;; Defined at:
 11674 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
 11675 ;; Parameters:    Size  Location     Type
 11676 ;;  b               4   13[BANK0 ] long 
 11677 ;;  a               4   17[BANK0 ] long 
 11678 ;; Auto vars:     Size  Location     Type
 11679 ;;  prod            4   33[BANK0 ] struct .
 11680 ;;  grs             4   27[BANK0 ] unsigned long 
 11681 ;;  temp            2   37[BANK0 ] struct .
 11682 ;;  bexp            1   32[BANK0 ] unsigned char 
 11683 ;;  aexp            1   31[BANK0 ] unsigned char 
 11684 ;;  sign            1   26[BANK0 ] unsigned char 
 11685 ;; Return value:  Size  Location     Type
 11686 ;;                  4   13[BANK0 ] unsigned char 
 11687 ;; Registers used:
 11688 ;;		wreg, status,2, status,0, pclath, cstack
 11689 ;; Tracked objects:
 11690 ;;		On entry : 0/0
 11691 ;;		On exit  : 0/0
 11692 ;;		Unchanged: 0/0
 11693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11694 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11695 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11696 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11697 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11698 ;;Total ram usage:       26 bytes
 11699 ;; Hardware stack levels used:    1
 11700 ;; Hardware stack levels required when called:    1
 11701 ;; This function calls:
 11702 ;;		__Umul8_16
 11703 ;; This function is called by:
 11704 ;;		_speedCalc
 11705 ;; This function uses a non-reentrant model
 11706 ;;
 11707                           
 11708                           
 11709                           ;psect for function ___flmul
 11710  0069                     ___flmul:	
 11711                           
 11712                           ;incstack = 0
 11713                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 11714  0069  0020               	movlb	0	; select bank0
 11715  006A  0830               	movf	___flmul@b+3,w
 11716  006B  3980               	andlw	128
 11717  006C  00B5               	movwf	??___flmul
 11718  006D  0835               	movf	??___flmul,w
 11719  006E  00BA               	movwf	___flmul@sign
 11720  006F  3530               	lslf	___flmul@b+3,w
 11721  0070  00B5               	movwf	??___flmul
 11722  0071  0835               	movf	??___flmul,w
 11723  0072  00C0               	movwf	___flmul@bexp
 11724  0073  1BAF               	btfsc	___flmul@b+2,7
 11725  0074  1440               	bsf	___flmul@bexp,0
 11726  0075  0840               	movf	___flmul@bexp,w
 11727  0076  1903               	btfsc	3,2
 11728  0077  2885               	goto	i1l3103
 11729  0078  0A40               	incf	___flmul@bexp,w
 11730  0079  1D03               	btfss	3,2
 11731  007A  2883               	goto	i1l3101
 11732  007B  3000               	movlw	0
 11733  007C  00B0               	movwf	___flmul@b+3
 11734  007D  3000               	movlw	0
 11735  007E  00AF               	movwf	___flmul@b+2
 11736  007F  3000               	movlw	0
 11737  0080  00AE               	movwf	___flmul@b+1
 11738  0081  3000               	movlw	0
 11739  0082  00AD               	movwf	___flmul@b
 11740  0083                     i1l3101:	
 11741  0083  17AF               	bsf	___flmul@b+2,7
 11742  0084  288D               	goto	i1l3105
 11743  0085                     i1l3103:	
 11744  0085  3000               	movlw	0
 11745  0086  00B0               	movwf	___flmul@b+3
 11746  0087  3000               	movlw	0
 11747  0088  00AF               	movwf	___flmul@b+2
 11748  0089  3000               	movlw	0
 11749  008A  00AE               	movwf	___flmul@b+1
 11750  008B  3000               	movlw	0
 11751  008C  00AD               	movwf	___flmul@b
 11752  008D                     i1l3105:	
 11753  008D  0834               	movf	___flmul@a+3,w
 11754  008E  3980               	andlw	128
 11755  008F  00B5               	movwf	??___flmul
 11756  0090  0835               	movf	??___flmul,w
 11757  0091  06BA               	xorwf	___flmul@sign,f
 11758  0092  3534               	lslf	___flmul@a+3,w
 11759  0093  00B5               	movwf	??___flmul
 11760  0094  0835               	movf	??___flmul,w
 11761  0095  00BF               	movwf	___flmul@aexp
 11762  0096  1BB3               	btfsc	___flmul@a+2,7
 11763  0097  143F               	bsf	___flmul@aexp,0
 11764  0098  083F               	movf	___flmul@aexp,w
 11765  0099  1903               	btfsc	3,2
 11766  009A  28A8               	goto	i1l3121
 11767  009B  0A3F               	incf	___flmul@aexp,w
 11768  009C  1D03               	btfss	3,2
 11769  009D  28A6               	goto	i1l3119
 11770  009E  3000               	movlw	0
 11771  009F  00B4               	movwf	___flmul@a+3
 11772  00A0  3000               	movlw	0
 11773  00A1  00B3               	movwf	___flmul@a+2
 11774  00A2  3000               	movlw	0
 11775  00A3  00B2               	movwf	___flmul@a+1
 11776  00A4  3000               	movlw	0
 11777  00A5  00B1               	movwf	___flmul@a
 11778  00A6                     i1l3119:	
 11779  00A6  17B3               	bsf	___flmul@a+2,7
 11780  00A7  28B0               	goto	i1l3123
 11781  00A8                     i1l3121:	
 11782  00A8  3000               	movlw	0
 11783  00A9  00B4               	movwf	___flmul@a+3
 11784  00AA  3000               	movlw	0
 11785  00AB  00B3               	movwf	___flmul@a+2
 11786  00AC  3000               	movlw	0
 11787  00AD  00B2               	movwf	___flmul@a+1
 11788  00AE  3000               	movlw	0
 11789  00AF  00B1               	movwf	___flmul@a
 11790  00B0                     i1l3123:	
 11791  00B0  083F               	movf	___flmul@aexp,w
 11792  00B1  1D03               	btfss	3,2
 11793  00B2  0840               	movf	___flmul@bexp,w
 11794  00B3  1D03               	btfss	3,2
 11795  00B4  28BE               	goto	i1l3131
 11796  00B5  3000               	movlw	0
 11797  00B6  00B0               	movwf	?___flmul+3
 11798  00B7  3000               	movlw	0
 11799  00B8  00AF               	movwf	?___flmul+2
 11800  00B9  3000               	movlw	0
 11801  00BA  00AE               	movwf	?___flmul+1
 11802  00BB  3000               	movlw	0
 11803  00BC  00AD               	movwf	?___flmul
 11804  00BD  0008               	return
 11805  00BE                     i1l3131:	
 11806  00BE  082D               	movf	___flmul@b,w
 11807  00BF  00B5               	movwf	??___flmul
 11808  00C0  0835               	movf	??___flmul,w
 11809  00C1  00F0               	movwf	__Umul8_16@multiplicand
 11810  00C2  0833               	movf	___flmul@a+2,w
 11811  00C3  3196  2699  3180   	fcall	__Umul8_16
 11812  00C6  0871               	movf	?__Umul8_16+1,w
 11813  00C7  0020               	movlb	0	; select bank0
 11814  00C8  00C6               	movwf	___flmul@temp+1
 11815  00C9  0870               	movf	?__Umul8_16,w
 11816  00CA  00C5               	movwf	___flmul@temp
 11817  00CB  0845               	movf	___flmul@temp,w
 11818  00CC  00B5               	movwf	??___flmul
 11819  00CD  01B6               	clrf	??___flmul+1
 11820  00CE  01B7               	clrf	??___flmul+2
 11821  00CF  01B8               	clrf	??___flmul+3
 11822  00D0  0838               	movf	??___flmul+3,w
 11823  00D1  00BE               	movwf	___flmul@grs+3
 11824  00D2  0837               	movf	??___flmul+2,w
 11825  00D3  00BD               	movwf	___flmul@grs+2
 11826  00D4  0836               	movf	??___flmul+1,w
 11827  00D5  00BC               	movwf	___flmul@grs+1
 11828  00D6  0835               	movf	??___flmul,w
 11829  00D7  00BB               	movwf	___flmul@grs
 11830  00D8  0846               	movf	___flmul@temp+1,w
 11831  00D9  00B5               	movwf	??___flmul
 11832  00DA  01B6               	clrf	??___flmul+1
 11833  00DB  01B7               	clrf	??___flmul+2
 11834  00DC  01B8               	clrf	??___flmul+3
 11835  00DD  0838               	movf	??___flmul+3,w
 11836  00DE  00C4               	movwf	___flmul@prod+3
 11837  00DF  0837               	movf	??___flmul+2,w
 11838  00E0  00C3               	movwf	___flmul@prod+2
 11839  00E1  0836               	movf	??___flmul+1,w
 11840  00E2  00C2               	movwf	___flmul@prod+1
 11841  00E3  0835               	movf	??___flmul,w
 11842  00E4  00C1               	movwf	___flmul@prod
 11843  00E5  082E               	movf	___flmul@b+1,w
 11844  00E6  00B5               	movwf	??___flmul
 11845  00E7  0835               	movf	??___flmul,w
 11846  00E8  00F0               	movwf	__Umul8_16@multiplicand
 11847  00E9  0832               	movf	___flmul@a+1,w
 11848  00EA  3196  2699  3180   	fcall	__Umul8_16
 11849  00ED  0871               	movf	?__Umul8_16+1,w
 11850  00EE  0020               	movlb	0	; select bank0
 11851  00EF  00C6               	movwf	___flmul@temp+1
 11852  00F0  0870               	movf	?__Umul8_16,w
 11853  00F1  00C5               	movwf	___flmul@temp
 11854  00F2  0845               	movf	___flmul@temp,w
 11855  00F3  00B5               	movwf	??___flmul
 11856  00F4  01B6               	clrf	??___flmul+1
 11857  00F5  01B7               	clrf	??___flmul+2
 11858  00F6  01B8               	clrf	??___flmul+3
 11859  00F7  0835               	movf	??___flmul,w
 11860  00F8  07BB               	addwf	___flmul@grs,f
 11861  00F9  0836               	movf	??___flmul+1,w
 11862  00FA  3DBC               	addwfc	___flmul@grs+1,f
 11863  00FB  0837               	movf	??___flmul+2,w
 11864  00FC  3DBD               	addwfc	___flmul@grs+2,f
 11865  00FD  0838               	movf	??___flmul+3,w
 11866  00FE  3DBE               	addwfc	___flmul@grs+3,f
 11867  00FF  0846               	movf	___flmul@temp+1,w
 11868  0100  00B5               	movwf	??___flmul
 11869  0101  01B6               	clrf	??___flmul+1
 11870  0102  01B7               	clrf	??___flmul+2
 11871  0103  01B8               	clrf	??___flmul+3
 11872  0104  0835               	movf	??___flmul,w
 11873  0105  07C1               	addwf	___flmul@prod,f
 11874  0106  0836               	movf	??___flmul+1,w
 11875  0107  3DC2               	addwfc	___flmul@prod+1,f
 11876  0108  0837               	movf	??___flmul+2,w
 11877  0109  3DC3               	addwfc	___flmul@prod+2,f
 11878  010A  0838               	movf	??___flmul+3,w
 11879  010B  3DC4               	addwfc	___flmul@prod+3,f
 11880  010C  082F               	movf	___flmul@b+2,w
 11881  010D  00B5               	movwf	??___flmul
 11882  010E  0835               	movf	??___flmul,w
 11883  010F  00F0               	movwf	__Umul8_16@multiplicand
 11884  0110  0831               	movf	___flmul@a,w
 11885  0111  3196  2699  3180   	fcall	__Umul8_16
 11886  0114  0871               	movf	?__Umul8_16+1,w
 11887  0115  0020               	movlb	0	; select bank0
 11888  0116  00C6               	movwf	___flmul@temp+1
 11889  0117  0870               	movf	?__Umul8_16,w
 11890  0118  00C5               	movwf	___flmul@temp
 11891  0119  0845               	movf	___flmul@temp,w
 11892  011A  00B5               	movwf	??___flmul
 11893  011B  01B6               	clrf	??___flmul+1
 11894  011C  01B7               	clrf	??___flmul+2
 11895  011D  01B8               	clrf	??___flmul+3
 11896  011E  0835               	movf	??___flmul,w
 11897  011F  07BB               	addwf	___flmul@grs,f
 11898  0120  0836               	movf	??___flmul+1,w
 11899  0121  3DBC               	addwfc	___flmul@grs+1,f
 11900  0122  0837               	movf	??___flmul+2,w
 11901  0123  3DBD               	addwfc	___flmul@grs+2,f
 11902  0124  0838               	movf	??___flmul+3,w
 11903  0125  3DBE               	addwfc	___flmul@grs+3,f
 11904  0126  0846               	movf	___flmul@temp+1,w
 11905  0127  00B5               	movwf	??___flmul
 11906  0128  01B6               	clrf	??___flmul+1
 11907  0129  01B7               	clrf	??___flmul+2
 11908  012A  01B8               	clrf	??___flmul+3
 11909  012B  0835               	movf	??___flmul,w
 11910  012C  07C1               	addwf	___flmul@prod,f
 11911  012D  0836               	movf	??___flmul+1,w
 11912  012E  3DC2               	addwfc	___flmul@prod+1,f
 11913  012F  0837               	movf	??___flmul+2,w
 11914  0130  3DC3               	addwfc	___flmul@prod+2,f
 11915  0131  0838               	movf	??___flmul+3,w
 11916  0132  3DC4               	addwfc	___flmul@prod+3,f
 11917  0133  3008               	movlw	8
 11918  0134                     u366_25:	
 11919  0134  35BB               	lslf	___flmul@grs,f
 11920  0135  0DBC               	rlf	___flmul@grs+1,f
 11921  0136  0DBD               	rlf	___flmul@grs+2,f
 11922  0137  0DBE               	rlf	___flmul@grs+3,f
 11923  0138  0B89               	decfsz	9,f
 11924  0139  2934               	goto	u366_25
 11925  013A  082E               	movf	___flmul@b+1,w
 11926  013B  00B5               	movwf	??___flmul
 11927  013C  0835               	movf	??___flmul,w
 11928  013D  00F0               	movwf	__Umul8_16@multiplicand
 11929  013E  0831               	movf	___flmul@a,w
 11930  013F  3196  2699  3180   	fcall	__Umul8_16
 11931  0142  0871               	movf	?__Umul8_16+1,w
 11932  0143  0020               	movlb	0	; select bank0
 11933  0144  00C6               	movwf	___flmul@temp+1
 11934  0145  0870               	movf	?__Umul8_16,w
 11935  0146  00C5               	movwf	___flmul@temp
 11936  0147  0845               	movf	___flmul@temp,w
 11937  0148  07BB               	addwf	___flmul@grs,f
 11938  0149  0846               	movf	___flmul@temp+1,w
 11939  014A  3DBC               	addwfc	___flmul@grs+1,f
 11940  014B  3000               	movlw	0
 11941  014C  3DBD               	addwfc	___flmul@grs+2,f
 11942  014D  3DBE               	addwfc	___flmul@grs+3,f
 11943  014E  082D               	movf	___flmul@b,w
 11944  014F  00B5               	movwf	??___flmul
 11945  0150  0835               	movf	??___flmul,w
 11946  0151  00F0               	movwf	__Umul8_16@multiplicand
 11947  0152  0832               	movf	___flmul@a+1,w
 11948  0153  3196  2699  3180   	fcall	__Umul8_16
 11949  0156  0871               	movf	?__Umul8_16+1,w
 11950  0157  0020               	movlb	0	; select bank0
 11951  0158  00C6               	movwf	___flmul@temp+1
 11952  0159  0870               	movf	?__Umul8_16,w
 11953  015A  00C5               	movwf	___flmul@temp
 11954  015B  0845               	movf	___flmul@temp,w
 11955  015C  07BB               	addwf	___flmul@grs,f
 11956  015D  0846               	movf	___flmul@temp+1,w
 11957  015E  3DBC               	addwfc	___flmul@grs+1,f
 11958  015F  3000               	movlw	0
 11959  0160  3DBD               	addwfc	___flmul@grs+2,f
 11960  0161  3DBE               	addwfc	___flmul@grs+3,f
 11961  0162  3008               	movlw	8
 11962  0163                     u367_25:	
 11963  0163  35BB               	lslf	___flmul@grs,f
 11964  0164  0DBC               	rlf	___flmul@grs+1,f
 11965  0165  0DBD               	rlf	___flmul@grs+2,f
 11966  0166  0DBE               	rlf	___flmul@grs+3,f
 11967  0167  0B89               	decfsz	9,f
 11968  0168  2963               	goto	u367_25
 11969  0169  082D               	movf	___flmul@b,w
 11970  016A  00B5               	movwf	??___flmul
 11971  016B  0835               	movf	??___flmul,w
 11972  016C  00F0               	movwf	__Umul8_16@multiplicand
 11973  016D  0831               	movf	___flmul@a,w
 11974  016E  3196  2699  3180   	fcall	__Umul8_16
 11975  0171  0871               	movf	?__Umul8_16+1,w
 11976  0172  0020               	movlb	0	; select bank0
 11977  0173  00C6               	movwf	___flmul@temp+1
 11978  0174  0870               	movf	?__Umul8_16,w
 11979  0175  00C5               	movwf	___flmul@temp
 11980  0176  0845               	movf	___flmul@temp,w
 11981  0177  07BB               	addwf	___flmul@grs,f
 11982  0178  0846               	movf	___flmul@temp+1,w
 11983  0179  3DBC               	addwfc	___flmul@grs+1,f
 11984  017A  3000               	movlw	0
 11985  017B  3DBD               	addwfc	___flmul@grs+2,f
 11986  017C  3DBE               	addwfc	___flmul@grs+3,f
 11987  017D  082E               	movf	___flmul@b+1,w
 11988  017E  00B5               	movwf	??___flmul
 11989  017F  0835               	movf	??___flmul,w
 11990  0180  00F0               	movwf	__Umul8_16@multiplicand
 11991  0181  0833               	movf	___flmul@a+2,w
 11992  0182  3196  2699  3180   	fcall	__Umul8_16
 11993  0185  0871               	movf	?__Umul8_16+1,w
 11994  0186  0020               	movlb	0	; select bank0
 11995  0187  00C6               	movwf	___flmul@temp+1
 11996  0188  0870               	movf	?__Umul8_16,w
 11997  0189  00C5               	movwf	___flmul@temp
 11998  018A  0845               	movf	___flmul@temp,w
 11999  018B  07C1               	addwf	___flmul@prod,f
 12000  018C  0846               	movf	___flmul@temp+1,w
 12001  018D  3DC2               	addwfc	___flmul@prod+1,f
 12002  018E  3000               	movlw	0
 12003  018F  3DC3               	addwfc	___flmul@prod+2,f
 12004  0190  3DC4               	addwfc	___flmul@prod+3,f
 12005  0191  082F               	movf	___flmul@b+2,w
 12006  0192  00B5               	movwf	??___flmul
 12007  0193  0835               	movf	??___flmul,w
 12008  0194  00F0               	movwf	__Umul8_16@multiplicand
 12009  0195  0832               	movf	___flmul@a+1,w
 12010  0196  3196  2699  3180   	fcall	__Umul8_16
 12011  0199  0871               	movf	?__Umul8_16+1,w
 12012  019A  0020               	movlb	0	; select bank0
 12013  019B  00C6               	movwf	___flmul@temp+1
 12014  019C  0870               	movf	?__Umul8_16,w
 12015  019D  00C5               	movwf	___flmul@temp
 12016  019E  0845               	movf	___flmul@temp,w
 12017  019F  07C1               	addwf	___flmul@prod,f
 12018  01A0  0846               	movf	___flmul@temp+1,w
 12019  01A1  3DC2               	addwfc	___flmul@prod+1,f
 12020  01A2  3000               	movlw	0
 12021  01A3  3DC3               	addwfc	___flmul@prod+2,f
 12022  01A4  3DC4               	addwfc	___flmul@prod+3,f
 12023  01A5  082F               	movf	___flmul@b+2,w
 12024  01A6  00B5               	movwf	??___flmul
 12025  01A7  0835               	movf	??___flmul,w
 12026  01A8  00F0               	movwf	__Umul8_16@multiplicand
 12027  01A9  0833               	movf	___flmul@a+2,w
 12028  01AA  3196  2699  3180   	fcall	__Umul8_16
 12029  01AD  0871               	movf	?__Umul8_16+1,w
 12030  01AE  0020               	movlb	0	; select bank0
 12031  01AF  00C6               	movwf	___flmul@temp+1
 12032  01B0  0870               	movf	?__Umul8_16,w
 12033  01B1  00C5               	movwf	___flmul@temp
 12034  01B2  0845               	movf	___flmul@temp,w
 12035  01B3  00B5               	movwf	??___flmul
 12036  01B4  0846               	movf	___flmul@temp+1,w
 12037  01B5  00B6               	movwf	??___flmul+1
 12038  01B6  01B7               	clrf	??___flmul+2
 12039  01B7  01B8               	clrf	??___flmul+3
 12040  01B8  3008               	movlw	8
 12041  01B9                     u368_25:	
 12042  01B9  35B5               	lslf	??___flmul,f
 12043  01BA  0DB6               	rlf	??___flmul+1,f
 12044  01BB  0DB7               	rlf	??___flmul+2,f
 12045  01BC  0DB8               	rlf	??___flmul+3,f
 12046  01BD  0B89               	decfsz	9,f
 12047  01BE  29B9               	goto	u368_25
 12048  01BF  0835               	movf	??___flmul,w
 12049  01C0  07C1               	addwf	___flmul@prod,f
 12050  01C1  0836               	movf	??___flmul+1,w
 12051  01C2  3DC2               	addwfc	___flmul@prod+1,f
 12052  01C3  0837               	movf	??___flmul+2,w
 12053  01C4  3DC3               	addwfc	___flmul@prod+2,f
 12054  01C5  0838               	movf	??___flmul+3,w
 12055  01C6  3DC4               	addwfc	___flmul@prod+3,f
 12056  01C7  083B               	movf	___flmul@grs,w
 12057  01C8  00B5               	movwf	??___flmul
 12058  01C9  083C               	movf	___flmul@grs+1,w
 12059  01CA  00B6               	movwf	??___flmul+1
 12060  01CB  083D               	movf	___flmul@grs+2,w
 12061  01CC  00B7               	movwf	??___flmul+2
 12062  01CD  083E               	movf	___flmul@grs+3,w
 12063  01CE  00B8               	movwf	??___flmul+3
 12064  01CF  3018               	movlw	24
 12065  01D0                     u369_25:	
 12066  01D0  36B8               	lsrf	??___flmul+3,f
 12067  01D1  0CB7               	rrf	??___flmul+2,f
 12068  01D2  0CB6               	rrf	??___flmul+1,f
 12069  01D3  0CB5               	rrf	??___flmul,f
 12070  01D4  0B89               	decfsz	9,f
 12071  01D5  29D0               	goto	u369_25
 12072  01D6  0835               	movf	??___flmul,w
 12073  01D7  07C1               	addwf	___flmul@prod,f
 12074  01D8  0836               	movf	??___flmul+1,w
 12075  01D9  3DC2               	addwfc	___flmul@prod+1,f
 12076  01DA  0837               	movf	??___flmul+2,w
 12077  01DB  3DC3               	addwfc	___flmul@prod+2,f
 12078  01DC  0838               	movf	??___flmul+3,w
 12079  01DD  3DC4               	addwfc	___flmul@prod+3,f
 12080  01DE  3008               	movlw	8
 12081  01DF                     u370_25:	
 12082  01DF  35BB               	lslf	___flmul@grs,f
 12083  01E0  0DBC               	rlf	___flmul@grs+1,f
 12084  01E1  0DBD               	rlf	___flmul@grs+2,f
 12085  01E2  0DBE               	rlf	___flmul@grs+3,f
 12086  01E3  0B89               	decfsz	9,f
 12087  01E4  29DF               	goto	u370_25
 12088  01E5  0840               	movf	___flmul@bexp,w
 12089  01E6  073F               	addwf	___flmul@aexp,w
 12090  01E7  00B5               	movwf	??___flmul
 12091  01E8  01B6               	clrf	??___flmul+1
 12092  01E9  0DB6               	rlf	??___flmul+1,f
 12093  01EA  0835               	movf	??___flmul,w
 12094  01EB  3E82               	addlw	130
 12095  01EC  00C5               	movwf	___flmul@temp
 12096  01ED  30FF               	movlw	255
 12097  01EE  3D36               	addwfc	??___flmul+1,w
 12098  01EF  00C6               	movwf	___flmul@temp+1
 12099  01F0                     i1l3183:	
 12100  01F0  1BC3               	btfsc	___flmul@prod+2,7
 12101  01F1  2A07               	goto	i1l3185
 12102  01F2  3001               	movlw	1
 12103  01F3                     u371_25:	
 12104  01F3  35C1               	lslf	___flmul@prod,f
 12105  01F4  0DC2               	rlf	___flmul@prod+1,f
 12106  01F5  0DC3               	rlf	___flmul@prod+2,f
 12107  01F6  0DC4               	rlf	___flmul@prod+3,f
 12108  01F7  0B89               	decfsz	9,f
 12109  01F8  29F3               	goto	u371_25
 12110  01F9  1BBE               	btfsc	___flmul@grs+3,7
 12111  01FA  1441               	bsf	___flmul@prod,0
 12112  01FB  3001               	movlw	1
 12113  01FC                     u373_25:	
 12114  01FC  35BB               	lslf	___flmul@grs,f
 12115  01FD  0DBC               	rlf	___flmul@grs+1,f
 12116  01FE  0DBD               	rlf	___flmul@grs+2,f
 12117  01FF  0DBE               	rlf	___flmul@grs+3,f
 12118  0200  0B89               	decfsz	9,f
 12119  0201  29FC               	goto	u373_25
 12120  0202  30FF               	movlw	255
 12121  0203  07C5               	addwf	___flmul@temp,f
 12122  0204  30FF               	movlw	255
 12123  0205  3DC6               	addwfc	___flmul@temp+1,f
 12124  0206  29F0               	goto	i1l3183
 12125  0207                     i1l3185:	
 12126  0207  01BF               	clrf	___flmul@aexp
 12127  0208  1FBE               	btfss	___flmul@grs+3,7
 12128  0209  2A20               	goto	i1l3195
 12129  020A  30FF               	movlw	255
 12130  020B  053B               	andwf	___flmul@grs,w
 12131  020C  00B5               	movwf	??___flmul
 12132  020D  30FF               	movlw	255
 12133  020E  053C               	andwf	___flmul@grs+1,w
 12134  020F  00B6               	movwf	??___flmul+1
 12135  0210  30FF               	movlw	255
 12136  0211  053D               	andwf	___flmul@grs+2,w
 12137  0212  00B7               	movwf	??___flmul+2
 12138  0213  307F               	movlw	127
 12139  0214  053E               	andwf	___flmul@grs+3,w
 12140  0215  00B8               	movwf	??___flmul+3
 12141  0216  0838               	movf	??___flmul+3,w
 12142  0217  0437               	iorwf	??___flmul+2,w
 12143  0218  0436               	iorwf	??___flmul+1,w
 12144  0219  0435               	iorwf	??___flmul,w
 12145  021A  1903               	skipnz
 12146  021B  1841               	btfsc	___flmul@prod,0
 12147  021C  2A1E               	goto	i1l3191
 12148  021D  2A20               	goto	i1l3195
 12149  021E                     i1l3191:	
 12150  021E  01BF               	clrf	___flmul@aexp
 12151  021F  0ABF               	incf	___flmul@aexp,f
 12152  0220                     i1l3195:	
 12153  0220  083F               	movf	___flmul@aexp,w
 12154  0221  1903               	btfsc	3,2
 12155  0222  2A49               	goto	i1l3205
 12156  0223  3001               	movlw	1
 12157  0224  07C1               	addwf	___flmul@prod,f
 12158  0225  3000               	movlw	0
 12159  0226  3DC2               	addwfc	___flmul@prod+1,f
 12160  0227  3000               	movlw	0
 12161  0228  3DC3               	addwfc	___flmul@prod+2,f
 12162  0229  3000               	movlw	0
 12163  022A  3DC4               	addwfc	___flmul@prod+3,f
 12164  022B  1C44               	btfss	___flmul@prod+3,0
 12165  022C  2A49               	goto	i1l3205
 12166  022D  0841               	movf	___flmul@prod,w
 12167  022E  00B5               	movwf	??___flmul
 12168  022F  0842               	movf	___flmul@prod+1,w
 12169  0230  00B6               	movwf	??___flmul+1
 12170  0231  0843               	movf	___flmul@prod+2,w
 12171  0232  00B7               	movwf	??___flmul+2
 12172  0233  0844               	movf	___flmul@prod+3,w
 12173  0234  00B8               	movwf	??___flmul+3
 12174  0235  3001               	movlw	1
 12175  0236  00B9               	movwf	??___flmul+4
 12176  0237                     u380_25:	
 12177  0237  37B8               	asrf	??___flmul+3,f
 12178  0238  0CB7               	rrf	??___flmul+2,f
 12179  0239  0CB6               	rrf	??___flmul+1,f
 12180  023A  0CB5               	rrf	??___flmul,f
 12181  023B  0BB9               	decfsz	??___flmul+4,f
 12182  023C  2A37               	goto	u380_25
 12183  023D  0838               	movf	??___flmul+3,w
 12184  023E  00C4               	movwf	___flmul@prod+3
 12185  023F  0837               	movf	??___flmul+2,w
 12186  0240  00C3               	movwf	___flmul@prod+2
 12187  0241  0836               	movf	??___flmul+1,w
 12188  0242  00C2               	movwf	___flmul@prod+1
 12189  0243  0835               	movf	??___flmul,w
 12190  0244  00C1               	movwf	___flmul@prod
 12191  0245  3001               	movlw	1
 12192  0246  07C5               	addwf	___flmul@temp,f
 12193  0247  3000               	movlw	0
 12194  0248  3DC6               	addwfc	___flmul@temp+1,f
 12195  0249                     i1l3205:	
 12196  0249  0846               	movf	___flmul@temp+1,w
 12197  024A  3A80               	xorlw	128
 12198  024B  00B5               	movwf	??___flmul
 12199  024C  3080               	movlw	128
 12200  024D  0235               	subwf	??___flmul,w
 12201  024E  1D03               	skipz
 12202  024F  2A52               	goto	u381_25
 12203  0250  30FF               	movlw	255
 12204  0251  0245               	subwf	___flmul@temp,w
 12205  0252                     u381_25:	
 12206  0252  1C03               	skipc
 12207  0253  2A5E               	goto	i1l3209
 12208  0254  307F               	movlw	127
 12209  0255  0020               	movlb	0	; select bank0
 12210  0256  00C4               	movwf	___flmul@prod+3
 12211  0257  3080               	movlw	128
 12212  0258  00C3               	movwf	___flmul@prod+2
 12213  0259  3000               	movlw	0
 12214  025A  00C2               	movwf	___flmul@prod+1
 12215  025B  3000               	movlw	0
 12216  025C  00C1               	movwf	___flmul@prod
 12217  025D  2A88               	goto	i1l1071
 12218  025E                     i1l3209:	
 12219  025E  0020               	movlb	0	; select bank0
 12220  025F  0846               	movf	___flmul@temp+1,w
 12221  0260  3A80               	xorlw	128
 12222  0261  00B5               	movwf	??___flmul
 12223  0262  3080               	movlw	128
 12224  0263  0235               	subwf	??___flmul,w
 12225  0264  1D03               	skipz
 12226  0265  2A68               	goto	u382_25
 12227  0266  3001               	movlw	1
 12228  0267  0245               	subwf	___flmul@temp,w
 12229  0268                     u382_25:	
 12230  0268  1803               	skipnc
 12231  0269  2A75               	goto	i1l3215
 12232  026A  3000               	movlw	0
 12233  026B  0020               	movlb	0	; select bank0
 12234  026C  00C4               	movwf	___flmul@prod+3
 12235  026D  3000               	movlw	0
 12236  026E  00C3               	movwf	___flmul@prod+2
 12237  026F  3000               	movlw	0
 12238  0270  00C2               	movwf	___flmul@prod+1
 12239  0271  3000               	movlw	0
 12240  0272  00C1               	movwf	___flmul@prod
 12241  0273  01BA               	clrf	___flmul@sign
 12242  0274  2A88               	goto	i1l1071
 12243  0275                     i1l3215:	
 12244  0275  0020               	movlb	0	; select bank0
 12245  0276  0845               	movf	___flmul@temp,w
 12246  0277  00B5               	movwf	??___flmul
 12247  0278  0835               	movf	??___flmul,w
 12248  0279  00C0               	movwf	___flmul@bexp
 12249  027A  30FF               	movlw	255
 12250  027B  05C1               	andwf	___flmul@prod,f
 12251  027C  30FF               	movlw	255
 12252  027D  05C2               	andwf	___flmul@prod+1,f
 12253  027E  307F               	movlw	127
 12254  027F  05C3               	andwf	___flmul@prod+2,f
 12255  0280  3000               	movlw	0
 12256  0281  05C4               	andwf	___flmul@prod+3,f
 12257  0282  1840               	btfsc	___flmul@bexp,0
 12258  0283  17C3               	bsf	___flmul@prod+2,7
 12259  0284  3640               	lsrf	___flmul@bexp,w
 12260  0285  00B5               	movwf	??___flmul
 12261  0286  0835               	movf	??___flmul,w
 12262  0287  00C4               	movwf	___flmul@prod+3
 12263  0288                     i1l1071:	
 12264  0288  083A               	movf	___flmul@sign,w
 12265  0289  00B5               	movwf	??___flmul
 12266  028A  0835               	movf	??___flmul,w
 12267  028B  04C4               	iorwf	___flmul@prod+3,f
 12268  028C  0844               	movf	___flmul@prod+3,w
 12269  028D  00B0               	movwf	?___flmul+3
 12270  028E  0843               	movf	___flmul@prod+2,w
 12271  028F  00AF               	movwf	?___flmul+2
 12272  0290  0842               	movf	___flmul@prod+1,w
 12273  0291  00AE               	movwf	?___flmul+1
 12274  0292  0841               	movf	___flmul@prod,w
 12275  0293  00AD               	movwf	?___flmul
 12276  0294  0008               	return
 12277  0295                     __end_of___flmul:	
 12278                           
 12279                           	psect	text51
 12280  1699                     __ptext51:	
 12281 ;; *************** function __Umul8_16 *****************
 12282 ;; Defined at:
 12283 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul8_16.c"
 12284 ;; Parameters:    Size  Location     Type
 12285 ;;  multiplier      1    wreg     unsigned char 
 12286 ;;  multiplicand    1    0[COMMON] unsigned char 
 12287 ;; Auto vars:     Size  Location     Type
 12288 ;;  multiplier      1    8[COMMON] unsigned char 
 12289 ;;  word_mpld       2    6[COMMON] unsigned int 
 12290 ;;  product         2    4[COMMON] unsigned int 
 12291 ;; Return value:  Size  Location     Type
 12292 ;;                  2    0[COMMON] unsigned int 
 12293 ;; Registers used:
 12294 ;;		wreg, status,2, status,0
 12295 ;; Tracked objects:
 12296 ;;		On entry : 0/0
 12297 ;;		On exit  : 0/0
 12298 ;;		Unchanged: 0/0
 12299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12300 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12301 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12302 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12303 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12304 ;;Total ram usage:        9 bytes
 12305 ;; Hardware stack levels used:    1
 12306 ;; This function calls:
 12307 ;;		Nothing
 12308 ;; This function is called by:
 12309 ;;		___flmul
 12310 ;; This function uses a non-reentrant model
 12311 ;;
 12312                           
 12313                           
 12314                           ;psect for function __Umul8_16
 12315  1699                     __Umul8_16:	
 12316                           
 12317                           ;incstack = 0
 12318                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 12319                           ;__Umul8_16@multiplier stored from wreg
 12320  1699  00F8               	movwf	__Umul8_16@multiplier
 12321  169A  01F4               	clrf	__Umul8_16@product
 12322  169B  01F5               	clrf	__Umul8_16@product+1
 12323  169C  0870               	movf	__Umul8_16@multiplicand,w
 12324  169D  00F2               	movwf	??__Umul8_16
 12325  169E  01F3               	clrf	??__Umul8_16+1
 12326  169F  0872               	movf	??__Umul8_16,w
 12327  16A0  00F6               	movwf	__Umul8_16@word_mpld
 12328  16A1  0873               	movf	??__Umul8_16+1,w
 12329  16A2  00F7               	movwf	__Umul8_16@word_mpld+1
 12330  16A3                     i1l2761:	
 12331  16A3  1C78               	btfss	__Umul8_16@multiplier,0
 12332  16A4  2EA9               	goto	i1l1165
 12333  16A5  0876               	movf	__Umul8_16@word_mpld,w
 12334  16A6  07F4               	addwf	__Umul8_16@product,f
 12335  16A7  0877               	movf	__Umul8_16@word_mpld+1,w
 12336  16A8  3DF5               	addwfc	__Umul8_16@product+1,f
 12337  16A9                     i1l1165:	
 12338  16A9  3001               	movlw	1
 12339  16AA                     u282_25:	
 12340  16AA  35F6               	lslf	__Umul8_16@word_mpld,f
 12341  16AB  0DF7               	rlf	__Umul8_16@word_mpld+1,f
 12342  16AC  0B89               	decfsz	9,f
 12343  16AD  2EAA               	goto	u282_25
 12344  16AE  1003               	clrc
 12345  16AF  0CF8               	rrf	__Umul8_16@multiplier,f
 12346  16B0  0878               	movf	__Umul8_16@multiplier,w
 12347  16B1  1D03               	btfss	3,2
 12348  16B2  2EA3               	goto	i1l2761
 12349  16B3  0875               	movf	__Umul8_16@product+1,w
 12350  16B4  00F1               	movwf	?__Umul8_16+1
 12351  16B5  0874               	movf	__Umul8_16@product,w
 12352  16B6  00F0               	movwf	?__Umul8_16
 12353  16B7  0008               	return
 12354  16B8                     __end_of__Umul8_16:	
 12355                           
 12356                           	psect	text52
 12357  0658                     __ptext52:	
 12358 ;; *************** function ___fldiv *****************
 12359 ;; Defined at:
 12360 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
 12361 ;; Parameters:    Size  Location     Type
 12362 ;;  a               4    0[COMMON] unsigned int 
 12363 ;;  b               4    4[COMMON] unsigned int 
 12364 ;; Auto vars:     Size  Location     Type
 12365 ;;  grs             4    7[BANK0 ] unsigned long 
 12366 ;;  rem             4    0[BANK0 ] unsigned long 
 12367 ;;  new_exp         2    5[BANK0 ] int 
 12368 ;;  aexp            1   12[BANK0 ] unsigned char 
 12369 ;;  bexp            1   11[BANK0 ] unsigned char 
 12370 ;;  sign            1    4[BANK0 ] unsigned char 
 12371 ;; Return value:  Size  Location     Type
 12372 ;;                  4    0[COMMON] unsigned char 
 12373 ;; Registers used:
 12374 ;;		wreg, status,2, status,0
 12375 ;; Tracked objects:
 12376 ;;		On entry : 0/0
 12377 ;;		On exit  : 0/0
 12378 ;;		Unchanged: 0/0
 12379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12380 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12381 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12382 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12383 ;;      Totals:        13      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12384 ;;Total ram usage:       26 bytes
 12385 ;; Hardware stack levels used:    1
 12386 ;; This function calls:
 12387 ;;		Nothing
 12388 ;; This function is called by:
 12389 ;;		_speedCalc
 12390 ;; This function uses a non-reentrant model
 12391 ;;
 12392                           
 12393                           
 12394                           ;psect for function ___fldiv
 12395  0658                     ___fldiv:	
 12396                           
 12397                           ;incstack = 0
 12398                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 12399  0658  0877               	movf	___fldiv@b+3,w
 12400  0659  3980               	andlw	128
 12401  065A  00F8               	movwf	??___fldiv
 12402  065B  0878               	movf	??___fldiv,w
 12403  065C  0020               	movlb	0	; select bank0
 12404  065D  00A4               	movwf	___fldiv@sign
 12405  065E  3577               	lslf	___fldiv@b+3,w
 12406  065F  00F8               	movwf	??___fldiv
 12407  0660  0878               	movf	??___fldiv,w
 12408  0661  00AB               	movwf	___fldiv@bexp
 12409  0662  1BF6               	btfsc	___fldiv@b+2,7
 12410  0663  142B               	bsf	___fldiv@bexp,0
 12411  0664  082B               	movf	___fldiv@bexp,w
 12412  0665  1903               	btfsc	3,2
 12413  0666  2E75               	goto	i1l2965
 12414  0667  0A2B               	incf	___fldiv@bexp,w
 12415  0668  1D03               	btfss	3,2
 12416  0669  2E72               	goto	i1l2961
 12417  066A  3000               	movlw	0
 12418  066B  00F7               	movwf	___fldiv@b+3
 12419  066C  3000               	movlw	0
 12420  066D  00F6               	movwf	___fldiv@b+2
 12421  066E  3000               	movlw	0
 12422  066F  00F5               	movwf	___fldiv@b+1
 12423  0670  3000               	movlw	0
 12424  0671  00F4               	movwf	___fldiv@b
 12425  0672                     i1l2961:	
 12426  0672  17F6               	bsf	___fldiv@b+2,7
 12427  0673  01F7               	clrf	___fldiv@b+3
 12428  0674  2E7D               	goto	i1l2967
 12429  0675                     i1l2965:	
 12430  0675  3000               	movlw	0
 12431  0676  00F7               	movwf	___fldiv@b+3
 12432  0677  3000               	movlw	0
 12433  0678  00F6               	movwf	___fldiv@b+2
 12434  0679  3000               	movlw	0
 12435  067A  00F5               	movwf	___fldiv@b+1
 12436  067B  3000               	movlw	0
 12437  067C  00F4               	movwf	___fldiv@b
 12438  067D                     i1l2967:	
 12439  067D  0873               	movf	___fldiv@a+3,w
 12440  067E  3980               	andlw	128
 12441  067F  00F8               	movwf	??___fldiv
 12442  0680  0878               	movf	??___fldiv,w
 12443  0681  06A4               	xorwf	___fldiv@sign,f
 12444  0682  3573               	lslf	___fldiv@a+3,w
 12445  0683  00F8               	movwf	??___fldiv
 12446  0684  0878               	movf	??___fldiv,w
 12447  0685  00AC               	movwf	___fldiv@aexp
 12448  0686  1BF2               	btfsc	___fldiv@a+2,7
 12449  0687  142C               	bsf	___fldiv@aexp,0
 12450  0688  082C               	movf	___fldiv@aexp,w
 12451  0689  1903               	btfsc	3,2
 12452  068A  2E99               	goto	i1l2985
 12453  068B  0A2C               	incf	___fldiv@aexp,w
 12454  068C  1D03               	btfss	3,2
 12455  068D  2E96               	goto	i1l2981
 12456  068E  3000               	movlw	0
 12457  068F  00F3               	movwf	___fldiv@a+3
 12458  0690  3000               	movlw	0
 12459  0691  00F2               	movwf	___fldiv@a+2
 12460  0692  3000               	movlw	0
 12461  0693  00F1               	movwf	___fldiv@a+1
 12462  0694  3000               	movlw	0
 12463  0695  00F0               	movwf	___fldiv@a
 12464  0696                     i1l2981:	
 12465  0696  17F2               	bsf	___fldiv@a+2,7
 12466  0697  01F3               	clrf	___fldiv@a+3
 12467  0698  2EA1               	goto	i1l1019
 12468  0699                     i1l2985:	
 12469  0699  3000               	movlw	0
 12470  069A  00F3               	movwf	___fldiv@a+3
 12471  069B  3000               	movlw	0
 12472  069C  00F2               	movwf	___fldiv@a+2
 12473  069D  3000               	movlw	0
 12474  069E  00F1               	movwf	___fldiv@a+1
 12475  069F  3000               	movlw	0
 12476  06A0  00F0               	movwf	___fldiv@a
 12477  06A1                     i1l1019:	
 12478  06A1  0873               	movf	___fldiv@a+3,w
 12479  06A2  0472               	iorwf	___fldiv@a+2,w
 12480  06A3  0471               	iorwf	___fldiv@a+1,w
 12481  06A4  0470               	iorwf	___fldiv@a,w
 12482  06A5  1D03               	skipz
 12483  06A6  2EC0               	goto	i1l2995
 12484  06A7  3000               	movlw	0
 12485  06A8  00F7               	movwf	___fldiv@b+3
 12486  06A9  3000               	movlw	0
 12487  06AA  00F6               	movwf	___fldiv@b+2
 12488  06AB  3000               	movlw	0
 12489  06AC  00F5               	movwf	___fldiv@b+1
 12490  06AD  3000               	movlw	0
 12491  06AE  00F4               	movwf	___fldiv@b
 12492  06AF  3080               	movlw	128
 12493  06B0  04F6               	iorwf	___fldiv@b+2,f
 12494  06B1  307F               	movlw	127
 12495  06B2  04F7               	iorwf	___fldiv@b+3,f
 12496  06B3                     L5:	
 12497  06B3  0824               	movf	___fldiv@sign,w
 12498  06B4  00F8               	movwf	??___fldiv
 12499  06B5  0878               	movf	??___fldiv,w
 12500  06B6  04F7               	iorwf	___fldiv@b+3,f
 12501  06B7  0877               	movf	___fldiv@b+3,w
 12502  06B8  00F3               	movwf	?___fldiv+3
 12503  06B9  0876               	movf	___fldiv@b+2,w
 12504  06BA  00F2               	movwf	?___fldiv+2
 12505  06BB  0875               	movf	___fldiv@b+1,w
 12506  06BC  00F1               	movwf	?___fldiv+1
 12507  06BD  0874               	movf	___fldiv@b,w
 12508  06BE  00F0               	movwf	?___fldiv
 12509  06BF  0008               	return
 12510  06C0                     i1l2995:	
 12511  06C0  082B               	movf	___fldiv@bexp,w
 12512  06C1  1D03               	btfss	3,2
 12513  06C2  2ECC               	goto	i1l3001
 12514  06C3  3000               	movlw	0
 12515  06C4  00F3               	movwf	?___fldiv+3
 12516  06C5  3000               	movlw	0
 12517  06C6  00F2               	movwf	?___fldiv+2
 12518  06C7  3000               	movlw	0
 12519  06C8  00F1               	movwf	?___fldiv+1
 12520  06C9  3000               	movlw	0
 12521  06CA  00F0               	movwf	?___fldiv
 12522  06CB  0008               	return
 12523  06CC                     i1l3001:	
 12524  06CC  082B               	movf	___fldiv@bexp,w
 12525  06CD  00F8               	movwf	??___fldiv
 12526  06CE  01F9               	clrf	??___fldiv+1
 12527  06CF  0879               	movf	??___fldiv+1,w
 12528  06D0  00FB               	movwf	??___fldiv+3
 12529  06D1  082C               	movf	___fldiv@aexp,w
 12530  06D2  0278               	subwf	??___fldiv,w
 12531  06D3  00FA               	movwf	??___fldiv+2
 12532  06D4  1C03               	skipc
 12533  06D5  03FB               	decf	??___fldiv+3,f
 12534  06D6  087A               	movf	??___fldiv+2,w
 12535  06D7  3E7F               	addlw	127
 12536  06D8  00A5               	movwf	___fldiv@new_exp
 12537  06D9  3000               	movlw	0
 12538  06DA  3D7B               	addwfc	??___fldiv+3,w
 12539  06DB  00A6               	movwf	___fldiv@new_exp+1
 12540  06DC  0877               	movf	___fldiv@b+3,w
 12541  06DD  00A3               	movwf	___fldiv@rem+3
 12542  06DE  0876               	movf	___fldiv@b+2,w
 12543  06DF  00A2               	movwf	___fldiv@rem+2
 12544  06E0  0875               	movf	___fldiv@b+1,w
 12545  06E1  00A1               	movwf	___fldiv@rem+1
 12546  06E2  0874               	movf	___fldiv@b,w
 12547  06E3  00A0               	movwf	___fldiv@rem
 12548  06E4  3000               	movlw	0
 12549  06E5  00F7               	movwf	___fldiv@b+3
 12550  06E6  3000               	movlw	0
 12551  06E7  00F6               	movwf	___fldiv@b+2
 12552  06E8  3000               	movlw	0
 12553  06E9  00F5               	movwf	___fldiv@b+1
 12554  06EA  3000               	movlw	0
 12555  06EB  00F4               	movwf	___fldiv@b
 12556  06EC  3000               	movlw	0
 12557  06ED  00AA               	movwf	___fldiv@grs+3
 12558  06EE  3000               	movlw	0
 12559  06EF  00A9               	movwf	___fldiv@grs+2
 12560  06F0  3000               	movlw	0
 12561  06F1  00A8               	movwf	___fldiv@grs+1
 12562  06F2  3000               	movlw	0
 12563  06F3  00A7               	movwf	___fldiv@grs
 12564  06F4  01AC               	clrf	___fldiv@aexp
 12565  06F5                     i1l3029:	
 12566  06F5  301A               	movlw	26
 12567  06F6  022C               	subwf	___fldiv@aexp,w
 12568  06F7  1803               	btfsc	3,0
 12569  06F8  2F31               	goto	i1l3031
 12570  06F9  082C               	movf	___fldiv@aexp,w
 12571  06FA  1903               	btfsc	3,2
 12572  06FB  2F13               	goto	i1l3021
 12573  06FC  3001               	movlw	1
 12574  06FD                     u338_25:	
 12575  06FD  35A0               	lslf	___fldiv@rem,f
 12576  06FE  0DA1               	rlf	___fldiv@rem+1,f
 12577  06FF  0DA2               	rlf	___fldiv@rem+2,f
 12578  0700  0DA3               	rlf	___fldiv@rem+3,f
 12579  0701  0B89               	decfsz	9,f
 12580  0702  2EFD               	goto	u338_25
 12581  0703  3001               	movlw	1
 12582  0704                     u339_25:	
 12583  0704  35F4               	lslf	___fldiv@b,f
 12584  0705  0DF5               	rlf	___fldiv@b+1,f
 12585  0706  0DF6               	rlf	___fldiv@b+2,f
 12586  0707  0DF7               	rlf	___fldiv@b+3,f
 12587  0708  0B89               	decfsz	9,f
 12588  0709  2F04               	goto	u339_25
 12589  070A  1BAA               	btfsc	___fldiv@grs+3,7
 12590  070B  1474               	bsf	___fldiv@b,0
 12591  070C  3001               	movlw	1
 12592  070D                     u341_25:	
 12593  070D  35A7               	lslf	___fldiv@grs,f
 12594  070E  0DA8               	rlf	___fldiv@grs+1,f
 12595  070F  0DA9               	rlf	___fldiv@grs+2,f
 12596  0710  0DAA               	rlf	___fldiv@grs+3,f
 12597  0711  0B89               	decfsz	9,f
 12598  0712  2F0D               	goto	u341_25
 12599  0713                     i1l3021:	
 12600  0713  0873               	movf	___fldiv@a+3,w
 12601  0714  0223               	subwf	___fldiv@rem+3,w
 12602  0715  1D03               	skipz
 12603  0716  2F21               	goto	u342_25
 12604  0717  0872               	movf	___fldiv@a+2,w
 12605  0718  0222               	subwf	___fldiv@rem+2,w
 12606  0719  1D03               	skipz
 12607  071A  2F21               	goto	u342_25
 12608  071B  0871               	movf	___fldiv@a+1,w
 12609  071C  0221               	subwf	___fldiv@rem+1,w
 12610  071D  1D03               	skipz
 12611  071E  2F21               	goto	u342_25
 12612  071F  0870               	movf	___fldiv@a,w
 12613  0720  0220               	subwf	___fldiv@rem,w
 12614  0721                     u342_25:	
 12615  0721  1C03               	skipc
 12616  0722  2F2C               	goto	i1l3027
 12617  0723  172A               	bsf	___fldiv@grs+3,6
 12618  0724  0870               	movf	___fldiv@a,w
 12619  0725  02A0               	subwf	___fldiv@rem,f
 12620  0726  0871               	movf	___fldiv@a+1,w
 12621  0727  3BA1               	subwfb	___fldiv@rem+1,f
 12622  0728  0872               	movf	___fldiv@a+2,w
 12623  0729  3BA2               	subwfb	___fldiv@rem+2,f
 12624  072A  0873               	movf	___fldiv@a+3,w
 12625  072B  3BA3               	subwfb	___fldiv@rem+3,f
 12626  072C                     i1l3027:	
 12627  072C  3001               	movlw	1
 12628  072D  00F8               	movwf	??___fldiv
 12629  072E  0878               	movf	??___fldiv,w
 12630  072F  07AC               	addwf	___fldiv@aexp,f
 12631  0730  2EF5               	goto	i1l3029
 12632  0731                     i1l3031:	
 12633  0731  0823               	movf	___fldiv@rem+3,w
 12634  0732  0422               	iorwf	___fldiv@rem+2,w
 12635  0733  0421               	iorwf	___fldiv@rem+1,w
 12636  0734  0420               	iorwf	___fldiv@rem,w
 12637  0735  1D03               	btfss	3,2
 12638  0736  1427               	bsf	___fldiv@grs,0
 12639  0737                     i1l3045:	
 12640  0737  1BF6               	btfsc	___fldiv@b+2,7
 12641  0738  2F4E               	goto	i1l3047
 12642  0739  3001               	movlw	1
 12643  073A                     u345_25:	
 12644  073A  35F4               	lslf	___fldiv@b,f
 12645  073B  0DF5               	rlf	___fldiv@b+1,f
 12646  073C  0DF6               	rlf	___fldiv@b+2,f
 12647  073D  0DF7               	rlf	___fldiv@b+3,f
 12648  073E  0B89               	decfsz	9,f
 12649  073F  2F3A               	goto	u345_25
 12650  0740  1BAA               	btfsc	___fldiv@grs+3,7
 12651  0741  1474               	bsf	___fldiv@b,0
 12652  0742  3001               	movlw	1
 12653  0743                     u347_25:	
 12654  0743  35A7               	lslf	___fldiv@grs,f
 12655  0744  0DA8               	rlf	___fldiv@grs+1,f
 12656  0745  0DA9               	rlf	___fldiv@grs+2,f
 12657  0746  0DAA               	rlf	___fldiv@grs+3,f
 12658  0747  0B89               	decfsz	9,f
 12659  0748  2F43               	goto	u347_25
 12660  0749  30FF               	movlw	255
 12661  074A  07A5               	addwf	___fldiv@new_exp,f
 12662  074B  30FF               	movlw	255
 12663  074C  3DA6               	addwfc	___fldiv@new_exp+1,f
 12664  074D  2F37               	goto	i1l3045
 12665  074E                     i1l3047:	
 12666  074E  01AC               	clrf	___fldiv@aexp
 12667  074F  1FAA               	btfss	___fldiv@grs+3,7
 12668  0750  2F67               	goto	i1l3057
 12669  0751  30FF               	movlw	255
 12670  0752  0527               	andwf	___fldiv@grs,w
 12671  0753  00F8               	movwf	??___fldiv
 12672  0754  30FF               	movlw	255
 12673  0755  0528               	andwf	___fldiv@grs+1,w
 12674  0756  00F9               	movwf	??___fldiv+1
 12675  0757  30FF               	movlw	255
 12676  0758  0529               	andwf	___fldiv@grs+2,w
 12677  0759  00FA               	movwf	??___fldiv+2
 12678  075A  307F               	movlw	127
 12679  075B  052A               	andwf	___fldiv@grs+3,w
 12680  075C  00FB               	movwf	??___fldiv+3
 12681  075D  087B               	movf	??___fldiv+3,w
 12682  075E  047A               	iorwf	??___fldiv+2,w
 12683  075F  0479               	iorwf	??___fldiv+1,w
 12684  0760  0478               	iorwf	??___fldiv,w
 12685  0761  1903               	skipnz
 12686  0762  1874               	btfsc	___fldiv@b,0
 12687  0763  2F65               	goto	i1l3053
 12688  0764  2F67               	goto	i1l3057
 12689  0765                     i1l3053:	
 12690  0765  01AC               	clrf	___fldiv@aexp
 12691  0766  0AAC               	incf	___fldiv@aexp,f
 12692  0767                     i1l3057:	
 12693  0767  082C               	movf	___fldiv@aexp,w
 12694  0768  1903               	btfsc	3,2
 12695  0769  2F90               	goto	i1l3067
 12696  076A  3001               	movlw	1
 12697  076B  07F4               	addwf	___fldiv@b,f
 12698  076C  3000               	movlw	0
 12699  076D  3DF5               	addwfc	___fldiv@b+1,f
 12700  076E  3000               	movlw	0
 12701  076F  3DF6               	addwfc	___fldiv@b+2,f
 12702  0770  3000               	movlw	0
 12703  0771  3DF7               	addwfc	___fldiv@b+3,f
 12704  0772  1C77               	btfss	___fldiv@b+3,0
 12705  0773  2F90               	goto	i1l3067
 12706  0774  0874               	movf	___fldiv@b,w
 12707  0775  00F8               	movwf	??___fldiv
 12708  0776  0875               	movf	___fldiv@b+1,w
 12709  0777  00F9               	movwf	??___fldiv+1
 12710  0778  0876               	movf	___fldiv@b+2,w
 12711  0779  00FA               	movwf	??___fldiv+2
 12712  077A  0877               	movf	___fldiv@b+3,w
 12713  077B  00FB               	movwf	??___fldiv+3
 12714  077C  3001               	movlw	1
 12715  077D  00FC               	movwf	??___fldiv+4
 12716  077E                     u354_25:	
 12717  077E  37FB               	asrf	??___fldiv+3,f
 12718  077F  0CFA               	rrf	??___fldiv+2,f
 12719  0780  0CF9               	rrf	??___fldiv+1,f
 12720  0781  0CF8               	rrf	??___fldiv,f
 12721  0782  0BFC               	decfsz	??___fldiv+4,f
 12722  0783  2F7E               	goto	u354_25
 12723  0784  087B               	movf	??___fldiv+3,w
 12724  0785  00F7               	movwf	___fldiv@b+3
 12725  0786  087A               	movf	??___fldiv+2,w
 12726  0787  00F6               	movwf	___fldiv@b+2
 12727  0788  0879               	movf	??___fldiv+1,w
 12728  0789  00F5               	movwf	___fldiv@b+1
 12729  078A  0878               	movf	??___fldiv,w
 12730  078B  00F4               	movwf	___fldiv@b
 12731  078C  3001               	movlw	1
 12732  078D  07A5               	addwf	___fldiv@new_exp,f
 12733  078E  3000               	movlw	0
 12734  078F  3DA6               	addwfc	___fldiv@new_exp+1,f
 12735  0790                     i1l3067:	
 12736  0790  0826               	movf	___fldiv@new_exp+1,w
 12737  0791  3A80               	xorlw	128
 12738  0792  00F8               	movwf	??___fldiv
 12739  0793  3080               	movlw	128
 12740  0794  0278               	subwf	??___fldiv,w
 12741  0795  1D03               	skipz
 12742  0796  2F99               	goto	u355_25
 12743  0797  30FF               	movlw	255
 12744  0798  0225               	subwf	___fldiv@new_exp,w
 12745  0799                     u355_25:	
 12746  0799  1C03               	skipc
 12747  079A  2FA8               	goto	i1l1040
 12748  079B  30FF               	movlw	255
 12749  079C  0020               	movlb	0	; select bank0
 12750  079D  00A5               	movwf	___fldiv@new_exp
 12751  079E  3000               	movlw	0
 12752  079F  00A6               	movwf	___fldiv@new_exp+1
 12753  07A0  3000               	movlw	0
 12754  07A1  00F7               	movwf	___fldiv@b+3
 12755  07A2  3000               	movlw	0
 12756  07A3  00F6               	movwf	___fldiv@b+2
 12757  07A4  3000               	movlw	0
 12758  07A5  00F5               	movwf	___fldiv@b+1
 12759  07A6  3000               	movlw	0
 12760  07A7  00F4               	movwf	___fldiv@b
 12761  07A8                     i1l1040:	
 12762  07A8  0020               	movlb	0	; select bank0
 12763  07A9  0826               	movf	___fldiv@new_exp+1,w
 12764  07AA  3A80               	xorlw	128
 12765  07AB  00F8               	movwf	??___fldiv
 12766  07AC  3080               	movlw	128
 12767  07AD  0278               	subwf	??___fldiv,w
 12768  07AE  1D03               	skipz
 12769  07AF  2FB2               	goto	u356_25
 12770  07B0  3001               	movlw	1
 12771  07B1  0225               	subwf	___fldiv@new_exp,w
 12772  07B2                     u356_25:	
 12773  07B2  1803               	skipnc
 12774  07B3  2FC0               	goto	i1l1041
 12775  07B4  0020               	movlb	0	; select bank0
 12776  07B5  01A5               	clrf	___fldiv@new_exp
 12777  07B6  01A6               	clrf	___fldiv@new_exp+1
 12778  07B7  3000               	movlw	0
 12779  07B8  00F7               	movwf	___fldiv@b+3
 12780  07B9  3000               	movlw	0
 12781  07BA  00F6               	movwf	___fldiv@b+2
 12782  07BB  3000               	movlw	0
 12783  07BC  00F5               	movwf	___fldiv@b+1
 12784  07BD  3000               	movlw	0
 12785  07BE  00F4               	movwf	___fldiv@b
 12786  07BF  01A4               	clrf	___fldiv@sign
 12787  07C0                     i1l1041:	
 12788  07C0  0020               	movlb	0	; select bank0
 12789  07C1  0825               	movf	___fldiv@new_exp,w
 12790  07C2  00F8               	movwf	??___fldiv
 12791  07C3  0878               	movf	??___fldiv,w
 12792  07C4  00AB               	movwf	___fldiv@bexp
 12793  07C5  1C2B               	btfss	___fldiv@bexp,0
 12794  07C6  2FC9               	goto	i1l3081
 12795  07C7  17F6               	bsf	___fldiv@b+2,7
 12796  07C8  2FCD               	goto	i1l1043
 12797  07C9                     i1l3081:	
 12798  07C9  307F               	movlw	127
 12799  07CA  00F8               	movwf	??___fldiv
 12800  07CB  0878               	movf	??___fldiv,w
 12801  07CC  05F6               	andwf	___fldiv@b+2,f
 12802  07CD                     i1l1043:	
 12803  07CD  362B               	lsrf	___fldiv@bexp,w
 12804  07CE  00F8               	movwf	??___fldiv
 12805  07CF  0878               	movf	??___fldiv,w
 12806  07D0  00F7               	movwf	___fldiv@b+3
 12807  07D1  2EB3               	goto	L5
 12808  07D2                     __end_of___fldiv:	
 12809                           
 12810                           	psect	text53
 12811  17BA                     __ptext53:	
 12812 ;; *************** function ___awmod *****************
 12813 ;; Defined at:
 12814 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
 12815 ;; Parameters:    Size  Location     Type
 12816 ;;  divisor         2   50[BANK0 ] int 
 12817 ;;  dividend        2   52[BANK0 ] int 
 12818 ;; Auto vars:     Size  Location     Type
 12819 ;;  sign            1   55[BANK0 ] unsigned char 
 12820 ;;  counter         1   54[BANK0 ] unsigned char 
 12821 ;; Return value:  Size  Location     Type
 12822 ;;                  2   50[BANK0 ] int 
 12823 ;; Registers used:
 12824 ;;		wreg, status,2, status,0
 12825 ;; Tracked objects:
 12826 ;;		On entry : 0/0
 12827 ;;		On exit  : 0/0
 12828 ;;		Unchanged: 0/0
 12829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12830 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12831 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12832 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12833 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12834 ;;Total ram usage:        7 bytes
 12835 ;; Hardware stack levels used:    1
 12836 ;; This function calls:
 12837 ;;		Nothing
 12838 ;; This function is called by:
 12839 ;;		_speedCalc
 12840 ;; This function uses a non-reentrant model
 12841 ;;
 12842                           
 12843                           
 12844                           ;psect for function ___awmod
 12845  17BA                     ___awmod:	
 12846                           
 12847                           ;incstack = 0
 12848                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 12849  17BA  0020               	movlb	0	; select bank0
 12850  17BB  01D7               	clrf	___awmod@sign
 12851  17BC  1FD5               	btfss	___awmod@dividend+1,7
 12852  17BD  2FC5               	goto	i1l2881
 12853  17BE  09D4               	comf	___awmod@dividend,f
 12854  17BF  09D5               	comf	___awmod@dividend+1,f
 12855  17C0  0AD4               	incf	___awmod@dividend,f
 12856  17C1  1903               	skipnz
 12857  17C2  0AD5               	incf	___awmod@dividend+1,f
 12858  17C3  01D7               	clrf	___awmod@sign
 12859  17C4  0AD7               	incf	___awmod@sign,f
 12860  17C5                     i1l2881:	
 12861  17C5  1FD3               	btfss	___awmod@divisor+1,7
 12862  17C6  2FCC               	goto	i1l2885
 12863  17C7  09D2               	comf	___awmod@divisor,f
 12864  17C8  09D3               	comf	___awmod@divisor+1,f
 12865  17C9  0AD2               	incf	___awmod@divisor,f
 12866  17CA  1903               	skipnz
 12867  17CB  0AD3               	incf	___awmod@divisor+1,f
 12868  17CC                     i1l2885:	
 12869  17CC  0852               	movf	___awmod@divisor,w
 12870  17CD  0453               	iorwf	___awmod@divisor+1,w
 12871  17CE  1903               	btfsc	3,2
 12872  17CF  2FF3               	goto	i1l2903
 12873  17D0  01D6               	clrf	___awmod@counter
 12874  17D1  0AD6               	incf	___awmod@counter,f
 12875  17D2                     i1l2893:	
 12876  17D2  1BD3               	btfsc	___awmod@divisor+1,7
 12877  17D3  2FDE               	goto	i1l2895
 12878  17D4  3001               	movlw	1
 12879  17D5                     u313_25:	
 12880  17D5  35D2               	lslf	___awmod@divisor,f
 12881  17D6  0DD3               	rlf	___awmod@divisor+1,f
 12882  17D7  0B89               	decfsz	9,f
 12883  17D8  2FD5               	goto	u313_25
 12884  17D9  3001               	movlw	1
 12885  17DA  00FD               	movwf	??___awmod
 12886  17DB  087D               	movf	??___awmod,w
 12887  17DC  07D6               	addwf	___awmod@counter,f
 12888  17DD  2FD2               	goto	i1l2893
 12889  17DE                     i1l2895:	
 12890  17DE  0853               	movf	___awmod@divisor+1,w
 12891  17DF  0255               	subwf	___awmod@dividend+1,w
 12892  17E0  1D03               	skipz
 12893  17E1  2FE4               	goto	u315_25
 12894  17E2  0852               	movf	___awmod@divisor,w
 12895  17E3  0254               	subwf	___awmod@dividend,w
 12896  17E4                     u315_25:	
 12897  17E4  1C03               	skipc
 12898  17E5  2FEA               	goto	i1l2899
 12899  17E6  0852               	movf	___awmod@divisor,w
 12900  17E7  02D4               	subwf	___awmod@dividend,f
 12901  17E8  0853               	movf	___awmod@divisor+1,w
 12902  17E9  3BD5               	subwfb	___awmod@dividend+1,f
 12903  17EA                     i1l2899:	
 12904  17EA  3001               	movlw	1
 12905  17EB                     u316_25:	
 12906  17EB  36D3               	lsrf	___awmod@divisor+1,f
 12907  17EC  0CD2               	rrf	___awmod@divisor,f
 12908  17ED  0B89               	decfsz	9,f
 12909  17EE  2FEB               	goto	u316_25
 12910  17EF  3001               	movlw	1
 12911  17F0  02D6               	subwf	___awmod@counter,f
 12912  17F1  1D03               	btfss	3,2
 12913  17F2  2FDE               	goto	i1l2895
 12914  17F3                     i1l2903:	
 12915  17F3  0857               	movf	___awmod@sign,w
 12916  17F4  1903               	btfsc	3,2
 12917  17F5  2FFB               	goto	i1l2907
 12918  17F6  09D4               	comf	___awmod@dividend,f
 12919  17F7  09D5               	comf	___awmod@dividend+1,f
 12920  17F8  0AD4               	incf	___awmod@dividend,f
 12921  17F9  1903               	skipnz
 12922  17FA  0AD5               	incf	___awmod@dividend+1,f
 12923  17FB                     i1l2907:	
 12924  17FB  0855               	movf	___awmod@dividend+1,w
 12925  17FC  00D3               	movwf	?___awmod+1
 12926  17FD  0854               	movf	___awmod@dividend,w
 12927  17FE  00D2               	movwf	?___awmod
 12928  17FF  0008               	return
 12929  1800                     __end_of___awmod:	
 12930                           
 12931                           	psect	text54
 12932  0825                     __ptext54:	
 12933 ;; *************** function ___awdiv *****************
 12934 ;; Defined at:
 12935 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
 12936 ;; Parameters:    Size  Location     Type
 12937 ;;  divisor         2    0[COMMON] int 
 12938 ;;  dividend        2    2[COMMON] int 
 12939 ;; Auto vars:     Size  Location     Type
 12940 ;;  quotient        2    7[COMMON] int 
 12941 ;;  sign            1    6[COMMON] unsigned char 
 12942 ;;  counter         1    5[COMMON] unsigned char 
 12943 ;; Return value:  Size  Location     Type
 12944 ;;                  2    0[COMMON] int 
 12945 ;; Registers used:
 12946 ;;		wreg, status,2, status,0
 12947 ;; Tracked objects:
 12948 ;;		On entry : 0/0
 12949 ;;		On exit  : 0/0
 12950 ;;		Unchanged: 0/0
 12951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12952 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12953 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12954 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12955 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12956 ;;Total ram usage:        9 bytes
 12957 ;; Hardware stack levels used:    1
 12958 ;; This function calls:
 12959 ;;		Nothing
 12960 ;; This function is called by:
 12961 ;;		_speedCalc
 12962 ;;		_heartRateISR
 12963 ;; This function uses a non-reentrant model
 12964 ;;
 12965                           
 12966                           
 12967                           ;psect for function ___awdiv
 12968  0825                     ___awdiv:	
 12969                           
 12970                           ;incstack = 0
 12971                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 12972  0825  01F6               	clrf	___awdiv@sign
 12973  0826  1FF1               	btfss	___awdiv@divisor+1,7
 12974  0827  282F               	goto	i1l2837
 12975  0828  09F0               	comf	___awdiv@divisor,f
 12976  0829  09F1               	comf	___awdiv@divisor+1,f
 12977  082A  0AF0               	incf	___awdiv@divisor,f
 12978  082B  1903               	skipnz
 12979  082C  0AF1               	incf	___awdiv@divisor+1,f
 12980  082D  01F6               	clrf	___awdiv@sign
 12981  082E  0AF6               	incf	___awdiv@sign,f
 12982  082F                     i1l2837:	
 12983  082F  1FF3               	btfss	___awdiv@dividend+1,7
 12984  0830  283A               	goto	i1l2843
 12985  0831  09F2               	comf	___awdiv@dividend,f
 12986  0832  09F3               	comf	___awdiv@dividend+1,f
 12987  0833  0AF2               	incf	___awdiv@dividend,f
 12988  0834  1903               	skipnz
 12989  0835  0AF3               	incf	___awdiv@dividend+1,f
 12990  0836  3001               	movlw	1
 12991  0837  00F4               	movwf	??___awdiv
 12992  0838  0874               	movf	??___awdiv,w
 12993  0839  06F6               	xorwf	___awdiv@sign,f
 12994  083A                     i1l2843:	
 12995  083A  01F7               	clrf	___awdiv@quotient
 12996  083B  01F8               	clrf	___awdiv@quotient+1
 12997  083C  0870               	movf	___awdiv@divisor,w
 12998  083D  0471               	iorwf	___awdiv@divisor+1,w
 12999  083E  1903               	btfsc	3,2
 13000  083F  2869               	goto	i1l2865
 13001  0840  01F5               	clrf	___awdiv@counter
 13002  0841  0AF5               	incf	___awdiv@counter,f
 13003  0842                     i1l2853:	
 13004  0842  1BF1               	btfsc	___awdiv@divisor+1,7
 13005  0843  284E               	goto	i1l2855
 13006  0844  3001               	movlw	1
 13007  0845                     u303_25:	
 13008  0845  35F0               	lslf	___awdiv@divisor,f
 13009  0846  0DF1               	rlf	___awdiv@divisor+1,f
 13010  0847  0B89               	decfsz	9,f
 13011  0848  2845               	goto	u303_25
 13012  0849  3001               	movlw	1
 13013  084A  00F4               	movwf	??___awdiv
 13014  084B  0874               	movf	??___awdiv,w
 13015  084C  07F5               	addwf	___awdiv@counter,f
 13016  084D  2842               	goto	i1l2853
 13017  084E                     i1l2855:	
 13018  084E  3001               	movlw	1
 13019  084F                     u305_25:	
 13020  084F  35F7               	lslf	___awdiv@quotient,f
 13021  0850  0DF8               	rlf	___awdiv@quotient+1,f
 13022  0851  0B89               	decfsz	9,f
 13023  0852  284F               	goto	u305_25
 13024  0853  0871               	movf	___awdiv@divisor+1,w
 13025  0854  0273               	subwf	___awdiv@dividend+1,w
 13026  0855  1D03               	skipz
 13027  0856  2859               	goto	u306_25
 13028  0857  0870               	movf	___awdiv@divisor,w
 13029  0858  0272               	subwf	___awdiv@dividend,w
 13030  0859                     u306_25:	
 13031  0859  1C03               	skipc
 13032  085A  2860               	goto	i1l2861
 13033  085B  0870               	movf	___awdiv@divisor,w
 13034  085C  02F2               	subwf	___awdiv@dividend,f
 13035  085D  0871               	movf	___awdiv@divisor+1,w
 13036  085E  3BF3               	subwfb	___awdiv@dividend+1,f
 13037  085F  1477               	bsf	___awdiv@quotient,0
 13038  0860                     i1l2861:	
 13039  0860  3001               	movlw	1
 13040  0861                     u307_25:	
 13041  0861  36F1               	lsrf	___awdiv@divisor+1,f
 13042  0862  0CF0               	rrf	___awdiv@divisor,f
 13043  0863  0B89               	decfsz	9,f
 13044  0864  2861               	goto	u307_25
 13045  0865  3001               	movlw	1
 13046  0866  02F5               	subwf	___awdiv@counter,f
 13047  0867  1D03               	btfss	3,2
 13048  0868  284E               	goto	i1l2855
 13049  0869                     i1l2865:	
 13050  0869  0876               	movf	___awdiv@sign,w
 13051  086A  1903               	btfsc	3,2
 13052  086B  2871               	goto	i1l2869
 13053  086C  09F7               	comf	___awdiv@quotient,f
 13054  086D  09F8               	comf	___awdiv@quotient+1,f
 13055  086E  0AF7               	incf	___awdiv@quotient,f
 13056  086F  1903               	skipnz
 13057  0870  0AF8               	incf	___awdiv@quotient+1,f
 13058  0871                     i1l2869:	
 13059  0871  0878               	movf	___awdiv@quotient+1,w
 13060  0872  00F1               	movwf	?___awdiv+1
 13061  0873  0877               	movf	___awdiv@quotient,w
 13062  0874  00F0               	movwf	?___awdiv
 13063  0875  0008               	return
 13064  0876                     __end_of___awdiv:	
 13065  007E                     btemp	set	126	;btemp
 13066  007E                     int$flags	set	126
 13067  007E                     wtemp0	set	126


Data Sizes:
    Strings     51
    Constant    0
    Data        43
    BSS         107
    Persistent  47
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     60      80
    BANK1            80     80      80
    BANK2            80     14      75
    BANK3            80      0      52
    BANK4            80      0      32
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK4[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK4[32]), 

    puts@s	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_5(CODE[3]), hrDisp(BANK3[13]), distanceDisp(BANK3[11]), speedDisp(BANK3[8]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_4(CODE[10]), STR_3(CODE[9]), STR_2(CODE[14]), STR_1(CODE[15]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK2[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK4[32]), STR_5(CODE[3]), hrDisp(BANK3[13]), distanceDisp(BANK3[11]), 
		 -> speedDisp(BANK3[8]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S1272_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK2[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_4(CODE[10]), STR_3(CODE[9]), STR_2(CODE[14]), STR_1(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 15
		 -> STR_4(CODE[10]), STR_3(CODE[9]), STR_2(CODE[14]), STR_1(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK2[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK2[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK4[32]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), heartRateISR(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), heartRateISR(), Absolute function(), 

    writeString@string	PTR unsigned char  size(1) Largest target is 13
		 -> hrDisp(BANK3[13]), distanceDisp(BANK3[11]), speedDisp(BANK3[8]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timerISR(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timerISR(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    IOCCF7_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> speedCalc(), IOCCF7_DefaultInterruptHandler(), 

    IOCCF7_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> speedCalc(), Absolute function(), IOCCF7_DefaultInterruptHandler(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _heartRateISR->___wmul
    ___wmul->___awdiv
    _timerISR->___fladd
    _speedCalc->___awmod
    ___flmul->___fldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR1_ISR->_heartRateISR
    _heartRateISR->___aldiv
    _timerISR->___fladd
    _IOCCF7_ISR->_speedCalc
    _speedCalc->___awmod
    ___fltol->___flmul
    ___flmul->___fldiv
    ___awmod->___fltol

Critical Paths under _main in BANK1

    _main->_printf
    _writeString->_puts
    _setCursor->_EUSART_Write
    _setCursor->_EUSART_is_tx_ready
    _resetCursor->_puts
    _puts->_fputs
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _abs->___aomod
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCCF7_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_printf
    _printf->_vfprintf

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   14895
                                             12 BANK2      2     2      0
         _IOCCF7_SetInterruptHandler
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
           _TMR1_SetInterruptHandler
                             ___flge
                             _printf
                        _resetCursor
                          _setCursor
                        _writeString
 ---------------------------------------------------------------------------------
 (1) _writeString                                          1     1      0    2879
                                             24 BANK1      1     1      0
                 _EUSART_is_tx_ready
                               _puts
 ---------------------------------------------------------------------------------
 (1) _setCursor                                            4     3      1     688
                                              1 BANK1      4     3      1
                       _EUSART_Write
                 _EUSART_is_tx_ready
 ---------------------------------------------------------------------------------
 (2) _EUSART_is_tx_ready                                   1     1      0      24
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _resetCursor                                          0     0      0    2734
                               _puts
 ---------------------------------------------------------------------------------
 (2) _puts                                                 5     3      2    2734
                                             19 BANK1      5     3      2
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (1) _printf                                              10     4      6    6922
                                             79 BANK1      1     1      0
                                              3 BANK2      9     3      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    6564
                                             74 BANK1      5     2      3
                                              0 BANK2      3     3      0
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    6236
                                             58 BANK1     16    14      2
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    4723
                                             28 BANK1     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    3100
                                             19 BANK1      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     123
                                              0 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 (3) _fputs                                                9     6      3    1549
                                             10 BANK1      9     6      3
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     980
                                              2 BANK1      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      44
                                              1 BANK1      1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             19 BANK1      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     448
                                              0 BANK1     19     3     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     452
                                              0 BANK1     27    11     16
 ---------------------------------------------------------------------------------
 (1) ___flge                                              12     4      8     334
                                              0 BANK1     12     4      8
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     816
                     _ADC_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0     174
                                              2 BANK1      1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     174
         _IOCCF7_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCCF7_SetInterruptHandler                           2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          0     0      0   10959
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR1_ISR                                            0     0      0    2487
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
                       _heartRateISR *
 ---------------------------------------------------------------------------------
 (12) _heartRateISR                                       10    10      0    2247
                                              6 BANK0     10    10      0
                  _ADC_GetConversion
                            ___aldiv
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (13) ___wmul                                              6     2      4     396
                                              9 COMMON     4     0      4
                                              0 BANK0      2     2      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (13) ___aldiv                                            15     7      8     452
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (13) _ADC_GetConversion                                   4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (12) _TMR1_WriteTimer                                     2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (12) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR0_ISR                                            0     0      0    2262
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                           _timerISR *
 ---------------------------------------------------------------------------------
 (12) _timerISR                                            0     0      0    2262
                            ___fladd
 ---------------------------------------------------------------------------------
 (13) ___fladd                                            20    12      8    2262
                                              0 COMMON    12     4      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (12) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _PIN_MANAGER_IOC                                     0     0      0    6210
                         _IOCCF7_ISR
 ---------------------------------------------------------------------------------
 (12) _IOCCF7_ISR                                          0     0      0    6210
                   Absolute function *
     _IOCCF7_DefaultInterruptHandler *
                          _speedCalc *
 ---------------------------------------------------------------------------------
 (13) _speedCalc                                           4     4      0    6210
                                             56 BANK0      4     4      0
                            ___awdiv
                            ___awmod
                            ___fldiv
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (14) ___fltol                                            11     7      4     381
                                             39 BANK0     11     7      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (14) ___flmul                                            26    18      8    2873
                                             13 BANK0     26    18      8
                          __Umul8_16
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (15) __Umul8_16                                           9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (14) ___fldiv                                            26    18      8    1273
                                              0 COMMON    13     5      8
                                              0 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 (14) ___awmod                                             7     3      4     600
                                             13 COMMON     1     1      0
                                             50 BANK0      6     2      4
                            ___flmul (ARG)
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (13) ___awdiv                                             9     5      4    1060
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (13) _IOCCF7_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _IOCCF7_SetInterruptHandler
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCCF7_SetInterruptHandler
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
   _TMR0_SetInterruptHandler
   _TMR1_SetInterruptHandler
   ___flge
   _printf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART_Write
             _fputs
               _fputc
                 _putch
                   _EUSART_Write
             _strlen
         _fputc
           _putch
             _EUSART_Write
   _resetCursor
     _puts
       _fputc
         _putch
           _EUSART_Write
       _fputs
         _fputc
           _putch
             _EUSART_Write
   _setCursor
     _EUSART_Write
     _EUSART_is_tx_ready
   _writeString
     _EUSART_is_tx_ready
     _puts
       _fputc
         _putch
           _EUSART_Write
       _fputs
         _fputc
           _putch
             _EUSART_Write

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
     _IOCCF7_ISR
       Absolute function(Fake) *
       _IOCCF7_DefaultInterruptHandler *
       _speedCalc *
         ___awdiv
         ___awmod
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
           ___fltol (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
         ___fldiv
         ___flmul
           __Umul8_16
           ___fldiv (ARG)
         ___fltol
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _timerISR *
       ___fladd
   _TMR1_ISR
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     _heartRateISR *
       _ADC_GetConversion
       ___aldiv
       ___awdiv
       ___wmul
         ___awdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3C      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     50      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      E      4B       9       93.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      34      11       65.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      20      13       40.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     14D      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     14D      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Apr 13 16:17:25 2019

                                            _P 0169                                              _T 006D  
                                 ___fldiv@aexp 002C                                   ___fldiv@bexp 002B  
                                 ___fldiv@sign 0024                                    __CFG_CP$OFF 0000  
                                           l69 1532                                   ___awdiv@sign 0076  
                          ___wmul@multiplicand 007B                                _timer0ReloadVal 0158  
                          __Umul8_16@word_mpld 0076                                            l434 1779  
                                          l613 0891                                            l621 0EF3  
                                          l630 0FC1                                            l622 0EFB  
                                          l616 08B1                                            l626 0F17  
                                          l627 0F2B                                            l840 094D  
                                          l762 0D91                                            l843 099B  
                                          l775 0C9A                                            _IBI 0069  
                                          _BPM 0136                                _timer1ReloadVal 014C  
                                          _abs 15F6                                            _amp 0167  
                                          _pad 0876                                            _rpm 0142  
               ?_EUSART_SetFramingErrorHandler 00A0                                   ___awmod@sign 0057  
                                 __CFG_BORV$LO 0000                                            wreg 0009  
                                 __CFG_IESO$ON 0000                                   ___flmul@aexp 003F  
                                 ___flmul@bexp 0040         __end_of_IOCCF7_DefaultInterruptHandler 0003  
      __size_of_IOCCF7_DefaultInterruptHandler 0001                 _IOCCF7_DefaultInterruptHandler 0002  
                                 ___flmul@sign 003A                                   ___flmul@temp 0045  
                                 ___flmul@prod 0041                                   __CFG_LVP$OFF 0000  
                                 __CFG_ZCD$OFF 0000                                   ___fltol@exp1 0051  
                                         ?_abs 00B3                                           l4023 176B  
                                         l2701 0D05                                           l2711 0D1C  
                                         l2631 1785                                           l2721 0D64  
                                         l2713 0D2B                                           l3281 0B73  
                                         l3273 0B36                                           l2723 0D70  
                                         l2635 17A8                                           l2803 0F33  
                                         l2811 0FCD                                           l3291 0B9C  
                                         l2733 0BF9                                           l2637 17B1  
                                         l2821 0FE0                                           l2751 0C6D  
                                         l2647 07D5                                           l2671 088F  
                                         l2815 0FD5                                           l3287 0B96  
                                         l2745 0C2E                                           l2753 0C79  
                                         l2737 0C21                                           l2649 07F6  
                                         l2657 1615                                           l2681 08C0  
                                         l2825 0FED                                           l3297 0BA8  
                                         l2747 0C3D                                           l2659 1621  
                                         l2667 0887                                           l3571 1552  
                                         l2677 0893                                           ?_pad 00B3  
                                         l3911 0967                                           l2695 0CD8  
                                         l2783 0F0F                                           l2793 0F58  
                                         l3915 0981                                           l2699 0D00  
                                         l3843 174E                                           l2789 0F26  
                                         l3781 16E4                                           l3845 1753  
                                         l3853 1762                                           l3837 173F  
                                         l3783 1702                                           l3847 1758  
                                         l3863 15B2                                           l3849 175D  
                                         l3959 0A5C                                           l3979 0AB6  
                                         STR_1 1800                                           STR_2 180F  
                                         STR_3 1827                                           STR_4 181D  
                                         STR_5 1830                                           _LATA 010C  
                                         _LATB 010D                                           _LATC 010E  
                                         u2525 17A6                                           u2640 0D0D  
                                         u2575 089D                                           u2840 0EC9  
                                         u2850 0ECA                                           u2675 0D51  
                                         u2595 1600                                           u2925 0FCB  
                                         u2775 0C5B                                           u2945 0F47  
                                         u2955 0F53                                           u2895 0F07  
                                         u4957 0A51                                           u4967 15C1  
                                         u4977 174A                                           _TMR0 0015  
                                         _WPUA 020C                                           _WPUB 020D  
                                         _WPUC 020E                                   __CFG_WRT$OFF 0000  
                                __CFG_FCMEN$ON 0000                                           abs@a 00B3  
                                         _dbuf 0220                                           _main 0A30  
                                         _dtoa 0EAD                                           _rate 01C0  
                                         _prec 0134                                           _nout 0130  
                                         pad@i 00B7                                           pad@p 00B4  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         pad@w 00B9                                           btemp 007E  
                                         _puts 1643                                  __CFG_BOREN$ON 0000  
                                         start 0020                                ___fldiv@new_exp 0025  
                   ??_TMR1_SetInterruptHandler 00A2                                  __CFG_MCLRE$ON 0000  
                                        ??_abs 00B5                                          ??_pad 00B6  
                      __end_of_TMR0_Initialize 15DD                 ??_TMR0_DefaultInterruptHandler 0070  
                                ?_EUSART_Write 0070                 __size_of_OSCILLATOR_Initialize 0007  
                __end_of_OSCILLATOR_Initialize 14E3                            __size_of_IOCCF7_ISR 000D  
                                ___fltol@sign1 0050                                __end_of___aldiv 0A30  
                              __end_of___aodiv 0DA3                                __end_of___fladd 047E  
                                        ?_main 0070                                          ?_dtoa 00BC  
                              __end_of___aomod 0CAC                                __end_of___fldiv 07D2  
                              __end_of___awdiv 0876                                  __CFG_WDTE$OFF 0000  
                              __end_of___awmod 1800                                __end_of___flmul 0295  
                              __end_of___fltol 0932                                          ?_puts 00B3  
                              ___awdiv@divisor 0070                                          _T1CON 0018  
                                        i1l254 001E                                          i1l246 000D  
                                        i1l248 0014                                          i1l286 15EF  
                                        i1l395 04DB                                          i1l397 04FF  
                                        i1l662 1685                                          i1l398 05EE  
                                        i1l727 09BF                                          i1l863 0916  
                                        i1l963 02E2                                          i1l967 0376  
                                        i1l984 03FC                                          i1l969 0358  
                                        i1l997 045C                                ___awdiv@counter 0075  
                                 vfpfcnvrt@fmt 00DA                                          _TMR1H 0017  
                                        _TMR1L 0016                                          _TRISA 008C  
                                        _TRISB 008D                                          _TRISC 008E  
                                  _writeString 15B0              __size_of_TMR0_SetInterruptHandler 0009  
                    ?_TMR0_SetInterruptHandler 00A0                               __end_of_TMR0_ISR 1574  
                             __end_of_TMR1_ISR 159B                                          _Pulse 0066  
                      __end_of_PIN_MANAGER_IOC 14CA                                          _hrInt 0138  
                                        _flags 0060                                          _fputc 177A  
                                        _fputs 07D2                                          _speed 012C  
                                        pad@fp 00BB                                          _width 0132  
                                        _putch 14CA                                          dtoa@d 00BC  
                                        dtoa@i 00D8                                          dtoa@n 00D0  
                                        dtoa@p 00C9                                          dtoa@s 00CE  
                                        dtoa@w 00CC                        __end_of_TMR1_Initialize 1643  
                                        pclath 000A                                          puts@s 00B3  
                                        status 0003                                          wtemp0 007E  
                              _TMR1_WriteTimer 1555                                __initialization 0022  
                                 __end_of_main 0AEF                                   __end_of_dtoa 1000  
                                 __end_of_puts 165E                                 ??_EUSART_Write 00A0  
                               __CFG_LPBOR$OFF 0000                    ?_INTERRUPT_InterruptManager 0070  
                                       ??_main 0165                                         ??_dtoa 00C4  
                                       ??_puts 00B5                                 __CFG_PLLEN$OFF 0000  
                         __end_of_heartRateISR 0658              _EUSART_DefaultFramingErrorHandler 0000  
                                       _ADCON0 009D                                         _ADCON1 009E  
                                       _ADCON2 009F                     _EUSART_OverrunErrorHandler 0154  
                                       ?_fputc 00A2                                         ?_fputs 00AA  
                                       _ADRESH 009C                                         _ADRESL 009B  
                             ___awdiv@dividend 0072                                         _ANSELA 018C  
                                       ?_putch 0070                                         _ANSELB 018D  
                                       _ANSELC 018E                   ??_IOCCF7_SetInterruptHandler 00A2  
                                       _BORCON 0116                                         _T1GCON 0019  
                                       _RC1REG 0199                                         _RC1STA 019D  
                                       i1l1005 0475                                         i1l1040 07A8  
                                       i1l1041 07C0                        TMR1_WriteTimer@timerVal 0070  
                                       i1l1043 07CD                                         i1l1019 06A1  
                                       i1l1071 0288                                         i1l3001 06CC  
                                       _RB7PPS 0E9F                                         i1l3021 0713  
                                       i1l1165 16A9                                         i1l3101 0083  
                                       i1l3031 0731                                         i1l3103 0085  
                                       i1l3121 00A8                                         i1l3105 008D  
                                       _ODCONA 028C                                         _ODCONB 028D  
                                       i1l3027 072C                                         i1l3131 00BE  
                                       i1l3123 00B0                                         _ODCONC 028E  
                                       i1l3053 0765                                         i1l3045 0737  
                                       i1l3029 06F5                                         i1l3205 0249  
                                       i1l3047 074E                                         i1l3215 0275  
                                       i1l3119 00A6                                         i1l3081 07C9  
                                       i1l3057 0767                                         i1l3209 025E  
                                       i1l3401 02DA                                         i1l3067 0790  
                                       i1l3307 167E                                         i1l3191 021E  
                                       i1l3183 01F0                                         i1l3407 02EC  
                                       i1l3351 0A19                                         i1l3185 0207  
                                       i1l3521 042D                                         i1l3513 0422  
                                       i1l3337 09E0                                         i1l3329 09D0  
                                       i1l3195 0220                                         i1l3507 041B  
                                       i1l3515 0424                                         i1l3355 0A27  
                                       i1l3347 0A0E                                         i1l3339 09EE  
                                       i1l3525 042F                                         i1l3445 0361  
                                       i1l3437 0328                                         i1l3373 02AF  
                                       i1l2903 17F3                                         i1l3543 046C  
                                       i1l3471 0397                                         i1l3463 0384  
                                       i1l3447 0363                                         i1l3455 0372  
                                       i1l3711 0587                                         i1l3703 057D  
                                       i1l2761 16A3                                         i1l2913 08D6  
                                       i1l3473 0399                                         i1l3481 03A9  
                                       i1l3377 02B2                                         i1l2843 083A  
                                       i1l2907 17FB                                         i1l3547 0470  
                                       i1l3491 03F4                                         i1l3379 02BA  
                                       i1l2861 0860                                         i1l2853 0842  
                                       i1l2837 082F                                         i1l2933 0904  
                                       i1l2917 08DF                                         i1l3397 02D7  
                                       i1l3717 058B                                         i1l2855 084E  
                                       i1l2943 0923                                         i1l2935 0912  
                                       i1l3743 0627                                         i1l2865 0869  
                                       i1l2881 17C5                                         i1l2961 0672  
                                       i1l3657 1544                                         i1l3499 040E  
                                       i1l3771 155F                                         i1l2869 0871  
                                       i1l2893 17D2                                         i1l2885 17CC  
                                       i1l2981 0696                                         i1l2965 0675  
                                       i1l2895 17DE                                         i1l2967 067D  
                                       i1l2985 0699                                         i1l3697 0564  
                                       i1l2899 17EA                                         i1l2995 06C0  
                                       u303_25 0845                                         u320_25 08E8  
                                       u400_25 0A0F                                         u305_25 084F  
                                       u313_25 17D5                                         u306_25 0859  
                                       u307_25 0861                                         u315_25 17E4  
                                       u323_25 0905                                         u316_25 17EB  
                                       u412_25 033C                     __end_of_EUSART_is_tx_ready 1555  
                                       u413_20 0346                                         u341_25 070D  
                                       u414_20 0347                                         u342_25 0721  
                                       u326_25 091A                                         u424_25 039E  
                                       u425_23 03BC                                         u345_25 073A  
                                       u417_25 0368                                         u354_25 077E  
                                       u338_25 06FD                                         u282_25 16AA  
                                       u370_25 01DF                                         u450_25 04C7  
                                       u355_25 0799                                         u347_25 0743  
                                       u339_25 0704                                         u371_25 01F3  
                                       u451_25 04D4                                         u356_25 07B2  
                                       u380_25 0237                                         u452_25 04E6  
                                       u381_25 0252                                         u373_25 01FC  
                                       u429_25 040F                                         u461_25 05B4  
                                       u453_25 04F5                                         u382_25 0268  
                                       u366_25 0134                                         u390_25 1686  
                                       u462_25 05F9                                         u454_25 0509  
                                       u367_25 0163                                         u439_25 0447  
                                       u391_25 168B                                         u455_25 0516  
                                       u368_25 01B9                                         u464_25 0631  
                                       u369_25 01D0                                         u457_25 053D  
                                       u449_25 04A3                                         _OSCCON 0099  
                                       u459_25 057B                                         u396_25 09E3  
                                       u398_25 09EF                                         u399_25 0A03  
                                       u498_27 15EA                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         u261lld 0CD5  
                                       _TX1REG 019A                                         u272lld 0BF6  
                                       _TX1STA 019E                                   ?_resetCursor 0070  
                               __CFG_PWRTE$OFF 0000                              heartRateISR@i_743 002E  
                                       _Signal 0062           __end_of_TMR1_DefaultInterruptHandler 0800  
        __size_of_TMR1_DefaultInterruptHandler 0001                   _TMR1_DefaultInterruptHandler 07FF  
                                 vfprintf@cfmt 015A                                         ___flge 0932  
                                    ??___aldiv 0078                                      ??___aodiv 00B0  
                                    ??___fladd 0020                                      ??___aomod 00B0  
                                       ___wmul 167B                                      ??___fldiv 0078  
                                    ??___awdiv 0074                                 __CFG_STVREN$ON 0000  
                                    ??___awmod 007D                                      ??___flmul 0035  
                                    ??___fltol 004B                                         _hrDisp 01A0  
                                       _distHi 0140                                         _distLo 013E  
                             ?_TMR0_Initialize 0070                               ___awdiv@quotient 0077  
                              ___awmod@divisor 0052                                ___awmod@counter 0056  
                                       _printf 159B                                         _thresh 006B  
                                       pad@buf 00B3                                         dtoa@fp 00CB  
                                       _strlen 160F            __size_of_IOCCF7_SetInterruptHandler 0009  
                                       fputc@c 00A2                                         fputs@c 00B0  
                                       fputs@i 00B1                                         fputs@s 00AA  
                           __size_of__Umul8_16 001F                               __end_of_timerISR 167B  
                     ADC_GetConversion@channel 0073                               __end_of_vfprintf 170A  
     TMR1_SetInterruptHandler@InterruptHandler 00A0       TMR0_SetInterruptHandler@InterruptHandler 00A0  
   IOCCF7_SetInterruptHandler@InterruptHandler 00A0                               ?_PIN_MANAGER_IOC 0070  
                      __end_of_TMR1_WriteTimer 1564                                   ??_IOCCF7_ISR 007E  
                                   ___flge@ff1 00A0                                     ___flge@ff2 00A4  
                             ?_TMR1_Initialize 0070                              _SYSTEM_Initialize 1574  
                      __end_of__initialization 0065                                     _adcCounter 0124  
                           ?_SYSTEM_Initialize 0070                                     ___fltol@f1 0047  
                               __pcstackCOMMON 0070                                   __pidataBANK0 14E3  
                                 __pidataBANK2 07FB                                   __pidataBANK3 16B8  
                          ??_SYSTEM_Initialize 00A3                                      ?_TMR0_ISR 0070  
                                    ?_TMR1_ISR 0070                  ?_TMR1_DefaultInterruptHandler 0070  
                                __end_of_fputc 17BA                                  __end_of_fputs 07FB  
                                __end_of_putch 14D0                             __end_of_IOCCF7_ISR 1547  
                               _OPTION_REGbits 0095                ??_EUSART_SetOverrunErrorHandler 00A2  
                                      ??_fputc 00A5                      __end_of_SYSTEM_Initialize 1586  
                                      ??_fputs 00AD                                        ??_putch 00A1  
                                   __pbssBANK0 005C                                     __pbssBANK2 0120  
                                   __pbssBANK3 01C0                                     __pbssBANK4 0220  
                         __end_of_EUSART_Write 153A                              __end_of__Umul8_16 16B8  
                                   __pmaintext 0A30                                        ?___flge 00A0  
             __end_of_TMR0_SetInterruptHandler 1527                                        ?___wmul 0079  
                                   ??_TMR0_ISR 007C                                     ??_TMR1_ISR 007D  
                              __CFG_PPS1WAY$ON 0000                             __size_of_setCursor 003D  
                                   __pintentry 0004                                        ?_printf 015C  
                      __size_of_ADC_Initialize 0008                                        ?_strlen 00A0  
                        __size_of_heartRateISR 01DA                             __size_of_speedCalc 010A  
                              __CFG_WDTCCS$SWC 0000                                   ?_writeString 0070  
                           __size_of_vfpfcnvrt 00DE                                        _OSCTUNE 0098  
                                      _SLRCONA 030C                                        _SLRCONB 030D  
                                      _SLRCONC 030E             __end_of_IOCCF7_SetInterruptHandler 151E  
                   _IOCCF7_SetInterruptHandler 1515                       ??_EUSART_SetErrorHandler 00A2  
                             ?_TMR1_WriteTimer 0070                           __size_of_resetCursor 0008  
                                    ?_timerISR 0070                                   _heartRateISR 047E  
                                      ___aldiv 09AE                                __size_of___flge 007C  
                                      ___aodiv 0CAC                                        ___fladd 0295  
                                      ___aomod 0BCD                                        ___fldiv 0658  
                                      ___awdiv 0825                                        ___awmod 17BA  
                                      ___flmul 0069                                        ___fltol 08CC  
                              __size_of___wmul 001E                                      ?_vfprintf 00EA  
                                      __ptext1 15B0                                        __ptext2 173D  
                                      __ptext3 1547                                        __ptext4 14F2  
                                      __ptext5 1643                                        __ptext6 159B  
                                      __ptext7 16D8                                        __ptext8 0AEF  
                                      __ptext9 0EAD                                __size_of_printf 0015  
               ??_TMR1_DefaultInterruptHandler 0070                                __size_of_strlen 0019  
                                    _T1CONbits 0018                                        _counter 0146  
                        _OSCILLATOR_Initialize 14DC                                   __size_of_abs 0019  
                                 __size_of_pad 0056                               ___awmod@dividend 0054  
            __size_of_TMR1_SetInterruptHandler 0009                               ___aldiv@dividend 0074  
                     ??_PIN_MANAGER_Initialize 00A2                      ?_TMR1_SetInterruptHandler 00A0  
                                    _IOCCFbits 0399                                        _speedHi 013A  
                                    _IOCCNbits 0398                                        _speedLo 013C  
                                    _IOCCPbits 0397                     __size_of_SYSTEM_Initialize 0012  
                                      clrloop0 14D1                                     _secondBeat 0067  
                         end_of_initialization 0065                              __end_of_setCursor 177A  
        __end_of_EUSART_SetOverrunErrorHandler 1515         __size_of_EUSART_SetOverrunErrorHandler 0009  
                _EUSART_SetOverrunErrorHandler 150C                                        fputc@fp 00A4  
                                      init_ram 14D6                                        fputs@fp 00AC  
                                      initloop 14D7                              __end_of_speedCalc 0EAD  
                            _EUSART_Initialize 0800                             ?_EUSART_Initialize 0070  
                            __end_of_vfpfcnvrt 0BCD                                     ??_timerISR 007C  
                             ___aldiv@quotient 0022                             _EUSART_is_tx_ready 1547  
                                   ??_vfprintf 00ED                                        strlen@a 00A3  
                                      strlen@s 00A4                            ??_EUSART_Initialize 00A2  
                                 _distanceDisp 01AD                       _TMR0_SetInterruptHandler 151E  
                          ?_EUSART_is_tx_ready 0070                                    ___fladd@grs 007B  
                             __CFG_FOSC$INTOSC 0000                          __size_of_EUSART_Write 000A  
                                  ___fldiv@grs 0027                                    ___fldiv@rem 0020  
              __size_of_EUSART_SetErrorHandler 0009                                    ___flmul@grs 003B  
                    __end_of_EUSART_Initialize 0825                           ??_EUSART_is_tx_ready 00A0  
                               _speedCalc$1531 0058                                 __end_of___flge 09AE  
                   _EUSART_DefaultErrorHandler 0000                                    vfpfcnvrt@ap 00DB  
                                  vfpfcnvrt@fp 00E9                                    vfpfcnvrt@ll 00E1  
                               __end_of___wmul 1699                                   _lastBeatTime 0120  
                                 _EUSART_Write 1530                              __size_of_TMR0_ISR 0010  
                            __size_of_TMR1_ISR 0015                                 _ADC_Initialize 14EA  
                       ?_OSCILLATOR_Initialize 0070                              writeString@string 00B8  
                               __end_of_printf 15B0                       heartRateISR@runningTotal 0028  
                               __end_of_strlen 1628                            start_initialization 0022  
                     __size_of_TMR0_Initialize 0018                __size_of_PIN_MANAGER_Initialize 0033  
                                  __end_of_abs 160F                                    __end_of_pad 08CC  
                         __size_of_writeString 0015                         _EUSART_is_tx_ready$167 00A0  
                                  putch@txData 00A1                                  _sampleCounter 005C  
                     __size_of_PIN_MANAGER_IOC 0006                 ?_EUSART_SetOverrunErrorHandler 00A0  
                     __size_of_TMR1_Initialize 001B                                    vfprintf@fmt 00EA  
                   _EUSART_FramingErrorHandler 0156                                       ??___flge 00A8  
                                     ??___wmul 007D                         _EUSART_SetErrorHandler 14FA  
                       __end_of_ADC_Initialize 14F2                                      __Umul8_16 1699  
                                  __pdataBANK0 0069                                    __pdataBANK2 0167  
                                  __pdataBANK3 01A0                                       ??_printf 00EF  
                                     ??_strlen 00A2                                      ___fladd@a 0074  
                                    ___fladd@b 0070                                      ___fldiv@a 0070  
                                    ___fldiv@b 0074                                      ___flmul@a 0031  
                                    ___flmul@b 002D                                      ___latbits 0002  
                                __pcstackBANK0 0020                                  __pcstackBANK1 00A0  
                                __pcstackBANK2 0159                               ___aodiv@dividend 00A8  
                  ?_IOCCF7_SetInterruptHandler 00A0                     __size_of_EUSART_Initialize 0025  
                        _TMR0_InterruptHandler 014E                                      __pnvBANK2 014A  
                       _PIN_MANAGER_Initialize 170A               __end_of_TMR1_SetInterruptHandler 1530  
                                     ?___aldiv 0070                                       ?___aodiv 00A0  
                                     ?___fladd 0070                                       ?___aomod 00A0  
                                     ?___fldiv 0070                                       ?___awdiv 0070  
                             ___aodiv@quotient 00B3                                       ?___awmod 0052  
                                     ?___flmul 002D                                       ?___fltol 0047  
                                    _heartRate 0128                                     ?__Umul8_16 0070  
                                   setCursor@a 00A4                                     setCursor@b 00A1  
                              ?_ADC_Initialize 0070                              __size_of_timerISR 001D  
                 ??_INTERRUPT_InterruptManager 007E                              __size_of_vfprintf 0032  
                                     _BAUD1CON 019F                                      _firstBeat 006F  
                               __size_of_fputc 0040                                 __size_of_fputs 0029  
                               __size_of_putch 0006                                ___aldiv@divisor 0070  
                            ??_TMR0_Initialize 00A2                                  ??_resetCursor 00B8  
                              ___aldiv@counter 0020                                 ___wmul@product 0020  
       EUSART_SetErrorHandler@interruptHandler 00A0                                      _setCursor 173D  
                                    clear_ram0 14D0                                       _PIE1bits 0090  
                            _eusartRxLastError 0068                       __size_of_TMR1_WriteTimer 000F  
          __size_of_INTERRUPT_InterruptManager 001C                     ??_TMR0_SetInterruptHandler 00A2  
                                     _PIR1bits 0010                ??_EUSART_SetFramingErrorHandler 00A2  
                                    _puts$1319 00B7                                      _speedCalc 0DA3  
                                    _speedDisp 01B8               ??_IOCCF7_DefaultInterruptHandler 0070  
              ?_IOCCF7_DefaultInterruptHandler 0070                           __CFG_WDTCPS$WDTCPS1F 0000  
                                     _TMR0_ISR 1564              _EUSART_DefaultOverrunErrorHandler 0000  
                                     _TMR1_ISR 1586                              ??_PIN_MANAGER_IOC 007E  
                                    _vfpfcnvrt 0AEF                              ??_TMR1_Initialize 00A2  
                                   _ADCON0bits 009D                              ___wmul@multiplier 0079  
                                   ?_setCursor 00A1                                     vfprintf@ap 00EC  
                                   vfprintf@fp 0159                              _ADC_GetConversion 15DD  
                          __end_of_resetCursor 14FA                                     ?_speedCalc 0070  
                      ??_OSCILLATOR_Initialize 00A0                                    ??__Umul8_16 0072  
                          _EUSART_ErrorHandler 0152                             ?_ADC_GetConversion 0070  
                             __size_of___aldiv 0082                               __size_of___aodiv 00F7  
                             __size_of___fladd 01E9                               __size_of___aomod 00DF  
                             __size_of___fldiv 017A                               __size_of___awdiv 0051  
                             __size_of___awmod 0046                               __size_of___flmul 022C  
                             __size_of___fltol 0066                                     ?_vfpfcnvrt 00DA  
                              ___aodiv@divisor 00A0                       _TMR1_SetInterruptHandler 1527  
                              ___aodiv@counter 00B1                          _TMR1_InterruptHandler 014A  
                          ??_ADC_GetConversion 0072                                       _dtoa$973 00C7  
                                     __ptext10 0876                                       __ptext11 160F  
                                     __ptext20 1574                                       __ptext12 07D2  
                                     __ptext21 1628                                       __ptext13 177A  
                                   _T1GCONbits 0019                                       __ptext30 1503  
                                     __ptext22 1527                                       __ptext14 14CA  
                                     __ptext31 14FA                                       __ptext23 15C5  
                                     __ptext15 1530                                       __ptext40 1555  
                                     __ptext32 14EA                                       __ptext24 151E  
                                     __ptext16 15F6                                       __ptext41 1564  
                                     __ptext25 170A                                       __ptext17 0BCD  
                                     __ptext50 0069                                       __ptext42 0003  
                                     __ptext34 1586                                       __ptext26 1515  
                                     __ptext18 0CAC                                       __ptext51 1699  
                                     __ptext43 165E                                       __ptext35 07FF  
                                     __ptext27 14DC                                       __ptext19 0932  
                                     __ptext52 0658                                       __ptext44 0295  
                                     __ptext36 047E                                       __ptext28 0800  
                                     __ptext53 17BA                                       __ptext45 14C4  
                                     __ptext37 167B                                       __ptext29 150C  
                                     __ptext54 0825                                       __ptext46 153A  
                                     __ptext38 09AE                                       __ptext47 0002  
                                     __ptext39 15DD                                       __ptext48 0DA3  
                                     __ptext49 08CC                                       _distance 0064  
                                   _IOCCF7_ISR 153A                                  __size_of_main 00BF  
                                __size_of_dtoa 0153                                  __size_of_puts 001B  
                  __size_of_EUSART_is_tx_ready 000E           __end_of_TMR0_DefaultInterruptHandler 0004  
        __size_of_TMR0_DefaultInterruptHandler 0001                   _TMR0_DefaultInterruptHandler 0003  
                    __end_of_ADC_GetConversion 15F6                           __CFG_WDTCWS$WDTCWSSW 0000  
                      ?_EUSART_SetErrorHandler 00A0                                     _RC1STAbits 019D  
EUSART_SetOverrunErrorHandler@interruptHandler 00A0                                       _timerISR 165E  
                                     int$flags 007E                                       _vfprintf 16D8  
           __end_of_INTERRUPT_InterruptManager 0020                     _INTERRUPT_InterruptManager 0004  
                                    printf@fmt 015C          __end_of_EUSART_SetFramingErrorHandler 150C  
       __size_of_EUSART_SetFramingErrorHandler 0009                  _EUSART_SetFramingErrorHandler 1503  
                            ??_TMR1_WriteTimer 0072                                  heartRateISR@N 002C  
                             ___aomod@dividend 00A8                                  heartRateISR@i 002A  
                                ??_writeString 00B8                                     _INTCONbits 000B  
                                     intlevel1 0000                        ?_PIN_MANAGER_Initialize 0070  
                                  _resetCursor 14F2                 __end_of_EUSART_SetErrorHandler 1503  
                                  ??_setCursor 00A2                              __CFG_CLKOUTEN$OFF 0000  
                             ??_ADC_Initialize 00A0                  ?_TMR0_DefaultInterruptHandler 0070  
                                  ??_speedCalc 007E                                  ?_heartRateISR 0070  
                                     printf@ap 0164  EUSART_SetFramingErrorHandler@interruptHandler 00A0  
                              ___aomod@divisor 00A0                                    ??_vfpfcnvrt 00DC  
                              ___aomod@counter 00B1                                  __pstringtext1 1800  
                                __pstringtext2 180F                                  __pstringtext3 181D  
                                __pstringtext4 1827                                  __pstringtext5 1830  
                                __pstringtext6 0000                         __Umul8_16@multiplicand 0070  
                                   _OPTION_REG 0095                                _TMR0_Initialize 15C5  
                                 ___aldiv@sign 0021                                     _TX1STAbits 019E  
                                ___fladd@signs 0078                             EUSART_Write@txData 00A0  
                          __end_of_writeString 15C5                                   ___aodiv@sign 00B2  
               __end_of_PIN_MANAGER_Initialize 173D                                    ?_IOCCF7_ISR 0070  
                                 ___fladd@aexp 0079                                   ___fladd@bexp 007A  
                              _PIN_MANAGER_IOC 14C4                           __Umul8_16@multiplier 0078  
                   __size_of_ADC_GetConversion 0019                                   ___aomod@sign 00B2  
                              _TMR1_Initialize 1628                        _IOCCF7_InterruptHandler 0150  
                               ??_heartRateISR 0026                              __Umul8_16@product 0074  
