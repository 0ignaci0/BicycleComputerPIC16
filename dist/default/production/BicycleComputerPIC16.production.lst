

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Mar 30 15:48:02 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1619
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
     7                           	psect	stringtext1,global,class=STRCODE,delta=2
     8                           	psect	stringtext2,global,class=STRCODE,delta=2
     9                           	psect	stringtext3,global,class=STRCODE,delta=2
    10                           	psect	stringtext4,global,class=STRCODE,delta=2
    11                           	psect	stringtext5,global,class=STRCODE,delta=2
    12                           	psect	stringtext6,global,class=STRCODE,delta=2
    13                           	psect	cinit,global,class=CODE,merge=1,delta=2
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    18                           	psect	inittext,global,class=CODE,delta=2
    19                           	psect	clrtext,global,class=CODE,delta=2
    20                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    21                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    23                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    25                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    26                           	psect	text1,local,class=CODE,merge=1,delta=2
    27                           	psect	text2,local,class=CODE,merge=1,delta=2
    28                           	psect	text3,local,class=CODE,merge=1,delta=2
    29                           	psect	text4,local,class=CODE,merge=1,delta=2
    30                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text7,local,class=CODE,merge=1,delta=2
    33                           	psect	text8,local,class=CODE,merge=1,delta=2
    34                           	psect	text9,local,class=CODE,merge=1,delta=2
    35                           	psect	text10,local,class=CODE,merge=1,delta=2
    36                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text14,local,class=CODE,merge=1,delta=2
    40                           	psect	text15,local,class=CODE,merge=1,delta=2
    41                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text20,local,class=CODE,merge=1,delta=2
    46                           	psect	text21,local,class=CODE,merge=1,delta=2
    47                           	psect	text22,local,class=CODE,merge=1,delta=2
    48                           	psect	text23,local,class=CODE,merge=1,delta=2
    49                           	psect	text24,local,class=CODE,merge=1,delta=2
    50                           	psect	text25,local,class=CODE,merge=1,delta=2
    51                           	psect	text26,local,class=CODE,merge=1,delta=2
    52                           	psect	text27,local,class=CODE,merge=1,delta=2
    53                           	psect	text28,local,class=CODE,merge=1,delta=2
    54                           	psect	text29,local,class=CODE,merge=1,delta=2
    55                           	psect	intentry,global,class=CODE,delta=2
    56                           	psect	text31,local,class=CODE,merge=1,delta=2
    57                           	psect	text32,local,class=CODE,merge=1,delta=2
    58                           	psect	text33,local,class=CODE,merge=1,delta=2
    59                           	psect	text34,local,class=CODE,merge=1,delta=2
    60                           	psect	text35,local,class=CODE,merge=1,delta=2
    61                           	psect	text36,local,class=CODE,merge=1,delta=2
    62                           	psect	text37,local,class=CODE,merge=1,delta=2
    63                           	psect	text38,local,class=CODE,merge=1,delta=2,group=1
    64                           	psect	text39,local,class=CODE,merge=1,delta=2,group=1
    65                           	psect	text40,local,class=CODE,merge=1,delta=2,group=1
    66                           	psect	text41,local,class=CODE,merge=1,delta=2,group=1
    67                           	psect	text42,local,class=CODE,merge=1,delta=2,group=1
    68                           	psect	text43,local,class=CODE,merge=1,delta=2,group=1
    69                           	dabs	1,0x7E,2
    70  0000                     
    71                           ; Version 2.05
    72                           ; Generated 20/12/2018 GMT
    73                           ; 
    74                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    75                           ; All rights reserved.
    76                           ; 
    77                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    78                           ; 
    79                           ; Redistribution and use in source and binary forms, with or without modification, are
    80                           ; permitted provided that the following conditions are met:
    81                           ; 
    82                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    83                           ;        conditions and the following disclaimer.
    84                           ; 
    85                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    86                           ;        of conditions and the following disclaimer in the documentation and/or other
    87                           ;        materials provided with the distribution.
    88                           ; 
    89                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    90                           ;        software without specific prior written permission.
    91                           ; 
    92                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    93                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    94                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    95                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    96                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    97                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    98                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    99                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   100                           ; 
   101                           ; 
   102                           ; Code-generator required, PIC16F1619 Definitions
   103                           ; 
   104                           ; SFR Addresses
   105  0000                     	;# 
   106  0001                     	;# 
   107  0002                     	;# 
   108  0003                     	;# 
   109  0004                     	;# 
   110  0005                     	;# 
   111  0006                     	;# 
   112  0007                     	;# 
   113  0008                     	;# 
   114  0009                     	;# 
   115  000A                     	;# 
   116  000B                     	;# 
   117  000C                     	;# 
   118  000D                     	;# 
   119  000E                     	;# 
   120  0010                     	;# 
   121  0011                     	;# 
   122  0012                     	;# 
   123  0013                     	;# 
   124  0014                     	;# 
   125  0015                     	;# 
   126  0016                     	;# 
   127  0016                     	;# 
   128  0017                     	;# 
   129  0018                     	;# 
   130  0019                     	;# 
   131  001A                     	;# 
   132  001A                     	;# 
   133  001B                     	;# 
   134  001B                     	;# 
   135  001C                     	;# 
   136  001D                     	;# 
   137  001E                     	;# 
   138  001F                     	;# 
   139  008C                     	;# 
   140  008D                     	;# 
   141  008E                     	;# 
   142  0090                     	;# 
   143  0091                     	;# 
   144  0092                     	;# 
   145  0093                     	;# 
   146  0094                     	;# 
   147  0095                     	;# 
   148  0096                     	;# 
   149  0098                     	;# 
   150  0099                     	;# 
   151  009A                     	;# 
   152  009B                     	;# 
   153  009B                     	;# 
   154  009C                     	;# 
   155  009D                     	;# 
   156  009E                     	;# 
   157  009F                     	;# 
   158  010C                     	;# 
   159  010D                     	;# 
   160  010E                     	;# 
   161  0111                     	;# 
   162  0112                     	;# 
   163  0113                     	;# 
   164  0114                     	;# 
   165  0115                     	;# 
   166  0116                     	;# 
   167  0117                     	;# 
   168  0118                     	;# 
   169  0119                     	;# 
   170  011C                     	;# 
   171  018C                     	;# 
   172  018D                     	;# 
   173  018E                     	;# 
   174  0191                     	;# 
   175  0191                     	;# 
   176  0192                     	;# 
   177  0193                     	;# 
   178  0193                     	;# 
   179  0194                     	;# 
   180  0195                     	;# 
   181  0196                     	;# 
   182  0197                     	;# 
   183  0199                     	;# 
   184  0199                     	;# 
   185  0199                     	;# 
   186  019A                     	;# 
   187  019A                     	;# 
   188  019A                     	;# 
   189  019B                     	;# 
   190  019B                     	;# 
   191  019B                     	;# 
   192  019B                     	;# 
   193  019B                     	;# 
   194  019C                     	;# 
   195  019C                     	;# 
   196  019C                     	;# 
   197  019D                     	;# 
   198  019D                     	;# 
   199  019D                     	;# 
   200  019E                     	;# 
   201  019E                     	;# 
   202  019E                     	;# 
   203  019F                     	;# 
   204  019F                     	;# 
   205  019F                     	;# 
   206  019F                     	;# 
   207  019F                     	;# 
   208  020C                     	;# 
   209  020D                     	;# 
   210  020E                     	;# 
   211  0211                     	;# 
   212  0211                     	;# 
   213  0212                     	;# 
   214  0212                     	;# 
   215  0213                     	;# 
   216  0213                     	;# 
   217  0214                     	;# 
   218  0214                     	;# 
   219  0215                     	;# 
   220  0215                     	;# 
   221  0215                     	;# 
   222  0215                     	;# 
   223  0216                     	;# 
   224  0216                     	;# 
   225  0217                     	;# 
   226  0217                     	;# 
   227  028C                     	;# 
   228  028D                     	;# 
   229  028E                     	;# 
   230  0291                     	;# 
   231  0291                     	;# 
   232  0292                     	;# 
   233  0293                     	;# 
   234  0294                     	;# 
   235  0298                     	;# 
   236  0298                     	;# 
   237  0299                     	;# 
   238  029A                     	;# 
   239  029B                     	;# 
   240  029E                     	;# 
   241  030C                     	;# 
   242  030D                     	;# 
   243  030E                     	;# 
   244  038C                     	;# 
   245  038D                     	;# 
   246  038E                     	;# 
   247  0391                     	;# 
   248  0392                     	;# 
   249  0393                     	;# 
   250  0394                     	;# 
   251  0395                     	;# 
   252  0396                     	;# 
   253  0397                     	;# 
   254  0398                     	;# 
   255  0399                     	;# 
   256  040E                     	;# 
   257  0413                     	;# 
   258  0413                     	;# 
   259  0414                     	;# 
   260  0414                     	;# 
   261  0415                     	;# 
   262  0416                     	;# 
   263  0417                     	;# 
   264  0418                     	;# 
   265  041A                     	;# 
   266  041A                     	;# 
   267  041B                     	;# 
   268  041B                     	;# 
   269  041C                     	;# 
   270  041D                     	;# 
   271  041E                     	;# 
   272  041F                     	;# 
   273  0493                     	;# 
   274  0494                     	;# 
   275  0495                     	;# 
   276  0496                     	;# 
   277  049A                     	;# 
   278  049B                     	;# 
   279  049C                     	;# 
   280  049D                     	;# 
   281  058C                     	;# 
   282  058C                     	;# 
   283  058D                     	;# 
   284  058E                     	;# 
   285  058E                     	;# 
   286  058F                     	;# 
   287  0590                     	;# 
   288  0590                     	;# 
   289  0591                     	;# 
   290  0592                     	;# 
   291  0592                     	;# 
   292  0593                     	;# 
   293  0594                     	;# 
   294  0594                     	;# 
   295  0595                     	;# 
   296  0596                     	;# 
   297  0596                     	;# 
   298  0597                     	;# 
   299  0598                     	;# 
   300  0599                     	;# 
   301  059A                     	;# 
   302  059B                     	;# 
   303  059B                     	;# 
   304  059C                     	;# 
   305  059D                     	;# 
   306  060C                     	;# 
   307  060C                     	;# 
   308  060D                     	;# 
   309  060E                     	;# 
   310  060F                     	;# 
   311  060F                     	;# 
   312  0610                     	;# 
   313  0611                     	;# 
   314  0612                     	;# 
   315  0613                     	;# 
   316  0614                     	;# 
   317  0617                     	;# 
   318  0617                     	;# 
   319  0618                     	;# 
   320  0619                     	;# 
   321  061A                     	;# 
   322  061A                     	;# 
   323  061B                     	;# 
   324  061C                     	;# 
   325  0691                     	;# 
   326  0692                     	;# 
   327  0693                     	;# 
   328  0694                     	;# 
   329  0695                     	;# 
   330  0696                     	;# 
   331  0697                     	;# 
   332  0699                     	;# 
   333  069A                     	;# 
   334  0711                     	;# 
   335  0712                     	;# 
   336  0713                     	;# 
   337  0714                     	;# 
   338  0715                     	;# 
   339  0718                     	;# 
   340  0718                     	;# 
   341  0719                     	;# 
   342  071A                     	;# 
   343  071A                     	;# 
   344  071B                     	;# 
   345  071C                     	;# 
   346  071D                     	;# 
   347  0791                     	;# 
   348  0791                     	;# 
   349  0792                     	;# 
   350  0793                     	;# 
   351  0793                     	;# 
   352  0794                     	;# 
   353  0795                     	;# 
   354  0795                     	;# 
   355  0796                     	;# 
   356  0797                     	;# 
   357  0797                     	;# 
   358  0798                     	;# 
   359  0799                     	;# 
   360  079A                     	;# 
   361  080C                     	;# 
   362  080C                     	;# 
   363  080D                     	;# 
   364  080E                     	;# 
   365  080E                     	;# 
   366  080F                     	;# 
   367  0810                     	;# 
   368  0810                     	;# 
   369  0811                     	;# 
   370  0812                     	;# 
   371  0812                     	;# 
   372  0813                     	;# 
   373  0814                     	;# 
   374  0815                     	;# 
   375  0816                     	;# 
   376  0817                     	;# 
   377  0818                     	;# 
   378  0819                     	;# 
   379  081A                     	;# 
   380  081A                     	;# 
   381  081B                     	;# 
   382  081C                     	;# 
   383  081C                     	;# 
   384  081D                     	;# 
   385  088C                     	;# 
   386  088D                     	;# 
   387  088E                     	;# 
   388  088F                     	;# 
   389  088F                     	;# 
   390  0890                     	;# 
   391  0891                     	;# 
   392  0892                     	;# 
   393  0893                     	;# 
   394  0893                     	;# 
   395  0894                     	;# 
   396  0895                     	;# 
   397  0896                     	;# 
   398  0897                     	;# 
   399  0897                     	;# 
   400  0898                     	;# 
   401  0899                     	;# 
   402  0D8C                     	;# 
   403  0D8C                     	;# 
   404  0D8D                     	;# 
   405  0D8E                     	;# 
   406  0D8F                     	;# 
   407  0D8F                     	;# 
   408  0D90                     	;# 
   409  0D91                     	;# 
   410  0D92                     	;# 
   411  0D92                     	;# 
   412  0D93                     	;# 
   413  0D94                     	;# 
   414  0D95                     	;# 
   415  0D95                     	;# 
   416  0D96                     	;# 
   417  0D97                     	;# 
   418  0D98                     	;# 
   419  0D99                     	;# 
   420  0D9A                     	;# 
   421  0D9B                     	;# 
   422  0D9C                     	;# 
   423  0D9D                     	;# 
   424  0D9E                     	;# 
   425  0D9E                     	;# 
   426  0D9F                     	;# 
   427  0DA0                     	;# 
   428  0DA1                     	;# 
   429  0DA1                     	;# 
   430  0DA2                     	;# 
   431  0DA3                     	;# 
   432  0DA4                     	;# 
   433  0DA4                     	;# 
   434  0DA5                     	;# 
   435  0DA6                     	;# 
   436  0DA7                     	;# 
   437  0DA7                     	;# 
   438  0DA8                     	;# 
   439  0DA9                     	;# 
   440  0DAA                     	;# 
   441  0DAB                     	;# 
   442  0DAC                     	;# 
   443  0DAD                     	;# 
   444  0DAE                     	;# 
   445  0DAF                     	;# 
   446  0E0F                     	;# 
   447  0E10                     	;# 
   448  0E11                     	;# 
   449  0E12                     	;# 
   450  0E13                     	;# 
   451  0E14                     	;# 
   452  0E15                     	;# 
   453  0E16                     	;# 
   454  0E17                     	;# 
   455  0E18                     	;# 
   456  0E19                     	;# 
   457  0E1A                     	;# 
   458  0E1B                     	;# 
   459  0E1C                     	;# 
   460  0E1D                     	;# 
   461  0E1E                     	;# 
   462  0E1F                     	;# 
   463  0E20                     	;# 
   464  0E21                     	;# 
   465  0E22                     	;# 
   466  0E23                     	;# 
   467  0E24                     	;# 
   468  0E25                     	;# 
   469  0E26                     	;# 
   470  0E27                     	;# 
   471  0E28                     	;# 
   472  0E29                     	;# 
   473  0E2A                     	;# 
   474  0E2B                     	;# 
   475  0E2C                     	;# 
   476  0E2D                     	;# 
   477  0E2E                     	;# 
   478  0E90                     	;# 
   479  0E91                     	;# 
   480  0E92                     	;# 
   481  0E94                     	;# 
   482  0E95                     	;# 
   483  0E9C                     	;# 
   484  0E9D                     	;# 
   485  0E9E                     	;# 
   486  0E9F                     	;# 
   487  0EA0                     	;# 
   488  0EA1                     	;# 
   489  0EA2                     	;# 
   490  0EA3                     	;# 
   491  0EA4                     	;# 
   492  0EA5                     	;# 
   493  0EA6                     	;# 
   494  0EA7                     	;# 
   495  0F0F                     	;# 
   496  0F10                     	;# 
   497  0F11                     	;# 
   498  0F12                     	;# 
   499  0F13                     	;# 
   500  0F14                     	;# 
   501  0F15                     	;# 
   502  0F16                     	;# 
   503  0F17                     	;# 
   504  0F18                     	;# 
   505  0F19                     	;# 
   506  0F1A                     	;# 
   507  0F1B                     	;# 
   508  0F1C                     	;# 
   509  0F1D                     	;# 
   510  0F1E                     	;# 
   511  0F1F                     	;# 
   512  0F20                     	;# 
   513  0F21                     	;# 
   514  0F22                     	;# 
   515  0F23                     	;# 
   516  0F24                     	;# 
   517  0F25                     	;# 
   518  0F26                     	;# 
   519  0F27                     	;# 
   520  0F28                     	;# 
   521  0F29                     	;# 
   522  0F2A                     	;# 
   523  0F2B                     	;# 
   524  0F2C                     	;# 
   525  0F2D                     	;# 
   526  0F2E                     	;# 
   527  0F2F                     	;# 
   528  0F30                     	;# 
   529  0F31                     	;# 
   530  0F32                     	;# 
   531  0F33                     	;# 
   532  0F34                     	;# 
   533  0F35                     	;# 
   534  0F36                     	;# 
   535  0F37                     	;# 
   536  0FE4                     	;# 
   537  0FE5                     	;# 
   538  0FE6                     	;# 
   539  0FE7                     	;# 
   540  0FE8                     	;# 
   541  0FE9                     	;# 
   542  0FEA                     	;# 
   543  0FEB                     	;# 
   544  0FED                     	;# 
   545  0FEE                     	;# 
   546  0FEF                     	;# 
   547  0000                     	;# 
   548  0001                     	;# 
   549  0002                     	;# 
   550  0003                     	;# 
   551  0004                     	;# 
   552  0005                     	;# 
   553  0006                     	;# 
   554  0007                     	;# 
   555  0008                     	;# 
   556  0009                     	;# 
   557  000A                     	;# 
   558  000B                     	;# 
   559  000C                     	;# 
   560  000D                     	;# 
   561  000E                     	;# 
   562  0010                     	;# 
   563  0011                     	;# 
   564  0012                     	;# 
   565  0013                     	;# 
   566  0014                     	;# 
   567  0015                     	;# 
   568  0016                     	;# 
   569  0016                     	;# 
   570  0017                     	;# 
   571  0018                     	;# 
   572  0019                     	;# 
   573  001A                     	;# 
   574  001A                     	;# 
   575  001B                     	;# 
   576  001B                     	;# 
   577  001C                     	;# 
   578  001D                     	;# 
   579  001E                     	;# 
   580  001F                     	;# 
   581  008C                     	;# 
   582  008D                     	;# 
   583  008E                     	;# 
   584  0090                     	;# 
   585  0091                     	;# 
   586  0092                     	;# 
   587  0093                     	;# 
   588  0094                     	;# 
   589  0095                     	;# 
   590  0096                     	;# 
   591  0098                     	;# 
   592  0099                     	;# 
   593  009A                     	;# 
   594  009B                     	;# 
   595  009B                     	;# 
   596  009C                     	;# 
   597  009D                     	;# 
   598  009E                     	;# 
   599  009F                     	;# 
   600  010C                     	;# 
   601  010D                     	;# 
   602  010E                     	;# 
   603  0111                     	;# 
   604  0112                     	;# 
   605  0113                     	;# 
   606  0114                     	;# 
   607  0115                     	;# 
   608  0116                     	;# 
   609  0117                     	;# 
   610  0118                     	;# 
   611  0119                     	;# 
   612  011C                     	;# 
   613  018C                     	;# 
   614  018D                     	;# 
   615  018E                     	;# 
   616  0191                     	;# 
   617  0191                     	;# 
   618  0192                     	;# 
   619  0193                     	;# 
   620  0193                     	;# 
   621  0194                     	;# 
   622  0195                     	;# 
   623  0196                     	;# 
   624  0197                     	;# 
   625  0199                     	;# 
   626  0199                     	;# 
   627  0199                     	;# 
   628  019A                     	;# 
   629  019A                     	;# 
   630  019A                     	;# 
   631  019B                     	;# 
   632  019B                     	;# 
   633  019B                     	;# 
   634  019B                     	;# 
   635  019B                     	;# 
   636  019C                     	;# 
   637  019C                     	;# 
   638  019C                     	;# 
   639  019D                     	;# 
   640  019D                     	;# 
   641  019D                     	;# 
   642  019E                     	;# 
   643  019E                     	;# 
   644  019E                     	;# 
   645  019F                     	;# 
   646  019F                     	;# 
   647  019F                     	;# 
   648  019F                     	;# 
   649  019F                     	;# 
   650  020C                     	;# 
   651  020D                     	;# 
   652  020E                     	;# 
   653  0211                     	;# 
   654  0211                     	;# 
   655  0212                     	;# 
   656  0212                     	;# 
   657  0213                     	;# 
   658  0213                     	;# 
   659  0214                     	;# 
   660  0214                     	;# 
   661  0215                     	;# 
   662  0215                     	;# 
   663  0215                     	;# 
   664  0215                     	;# 
   665  0216                     	;# 
   666  0216                     	;# 
   667  0217                     	;# 
   668  0217                     	;# 
   669  028C                     	;# 
   670  028D                     	;# 
   671  028E                     	;# 
   672  0291                     	;# 
   673  0291                     	;# 
   674  0292                     	;# 
   675  0293                     	;# 
   676  0294                     	;# 
   677  0298                     	;# 
   678  0298                     	;# 
   679  0299                     	;# 
   680  029A                     	;# 
   681  029B                     	;# 
   682  029E                     	;# 
   683  030C                     	;# 
   684  030D                     	;# 
   685  030E                     	;# 
   686  038C                     	;# 
   687  038D                     	;# 
   688  038E                     	;# 
   689  0391                     	;# 
   690  0392                     	;# 
   691  0393                     	;# 
   692  0394                     	;# 
   693  0395                     	;# 
   694  0396                     	;# 
   695  0397                     	;# 
   696  0398                     	;# 
   697  0399                     	;# 
   698  040E                     	;# 
   699  0413                     	;# 
   700  0413                     	;# 
   701  0414                     	;# 
   702  0414                     	;# 
   703  0415                     	;# 
   704  0416                     	;# 
   705  0417                     	;# 
   706  0418                     	;# 
   707  041A                     	;# 
   708  041A                     	;# 
   709  041B                     	;# 
   710  041B                     	;# 
   711  041C                     	;# 
   712  041D                     	;# 
   713  041E                     	;# 
   714  041F                     	;# 
   715  0493                     	;# 
   716  0494                     	;# 
   717  0495                     	;# 
   718  0496                     	;# 
   719  049A                     	;# 
   720  049B                     	;# 
   721  049C                     	;# 
   722  049D                     	;# 
   723  058C                     	;# 
   724  058C                     	;# 
   725  058D                     	;# 
   726  058E                     	;# 
   727  058E                     	;# 
   728  058F                     	;# 
   729  0590                     	;# 
   730  0590                     	;# 
   731  0591                     	;# 
   732  0592                     	;# 
   733  0592                     	;# 
   734  0593                     	;# 
   735  0594                     	;# 
   736  0594                     	;# 
   737  0595                     	;# 
   738  0596                     	;# 
   739  0596                     	;# 
   740  0597                     	;# 
   741  0598                     	;# 
   742  0599                     	;# 
   743  059A                     	;# 
   744  059B                     	;# 
   745  059B                     	;# 
   746  059C                     	;# 
   747  059D                     	;# 
   748  060C                     	;# 
   749  060C                     	;# 
   750  060D                     	;# 
   751  060E                     	;# 
   752  060F                     	;# 
   753  060F                     	;# 
   754  0610                     	;# 
   755  0611                     	;# 
   756  0612                     	;# 
   757  0613                     	;# 
   758  0614                     	;# 
   759  0617                     	;# 
   760  0617                     	;# 
   761  0618                     	;# 
   762  0619                     	;# 
   763  061A                     	;# 
   764  061A                     	;# 
   765  061B                     	;# 
   766  061C                     	;# 
   767  0691                     	;# 
   768  0692                     	;# 
   769  0693                     	;# 
   770  0694                     	;# 
   771  0695                     	;# 
   772  0696                     	;# 
   773  0697                     	;# 
   774  0699                     	;# 
   775  069A                     	;# 
   776  0711                     	;# 
   777  0712                     	;# 
   778  0713                     	;# 
   779  0714                     	;# 
   780  0715                     	;# 
   781  0718                     	;# 
   782  0718                     	;# 
   783  0719                     	;# 
   784  071A                     	;# 
   785  071A                     	;# 
   786  071B                     	;# 
   787  071C                     	;# 
   788  071D                     	;# 
   789  0791                     	;# 
   790  0791                     	;# 
   791  0792                     	;# 
   792  0793                     	;# 
   793  0793                     	;# 
   794  0794                     	;# 
   795  0795                     	;# 
   796  0795                     	;# 
   797  0796                     	;# 
   798  0797                     	;# 
   799  0797                     	;# 
   800  0798                     	;# 
   801  0799                     	;# 
   802  079A                     	;# 
   803  080C                     	;# 
   804  080C                     	;# 
   805  080D                     	;# 
   806  080E                     	;# 
   807  080E                     	;# 
   808  080F                     	;# 
   809  0810                     	;# 
   810  0810                     	;# 
   811  0811                     	;# 
   812  0812                     	;# 
   813  0812                     	;# 
   814  0813                     	;# 
   815  0814                     	;# 
   816  0815                     	;# 
   817  0816                     	;# 
   818  0817                     	;# 
   819  0818                     	;# 
   820  0819                     	;# 
   821  081A                     	;# 
   822  081A                     	;# 
   823  081B                     	;# 
   824  081C                     	;# 
   825  081C                     	;# 
   826  081D                     	;# 
   827  088C                     	;# 
   828  088D                     	;# 
   829  088E                     	;# 
   830  088F                     	;# 
   831  088F                     	;# 
   832  0890                     	;# 
   833  0891                     	;# 
   834  0892                     	;# 
   835  0893                     	;# 
   836  0893                     	;# 
   837  0894                     	;# 
   838  0895                     	;# 
   839  0896                     	;# 
   840  0897                     	;# 
   841  0897                     	;# 
   842  0898                     	;# 
   843  0899                     	;# 
   844  0D8C                     	;# 
   845  0D8C                     	;# 
   846  0D8D                     	;# 
   847  0D8E                     	;# 
   848  0D8F                     	;# 
   849  0D8F                     	;# 
   850  0D90                     	;# 
   851  0D91                     	;# 
   852  0D92                     	;# 
   853  0D92                     	;# 
   854  0D93                     	;# 
   855  0D94                     	;# 
   856  0D95                     	;# 
   857  0D95                     	;# 
   858  0D96                     	;# 
   859  0D97                     	;# 
   860  0D98                     	;# 
   861  0D99                     	;# 
   862  0D9A                     	;# 
   863  0D9B                     	;# 
   864  0D9C                     	;# 
   865  0D9D                     	;# 
   866  0D9E                     	;# 
   867  0D9E                     	;# 
   868  0D9F                     	;# 
   869  0DA0                     	;# 
   870  0DA1                     	;# 
   871  0DA1                     	;# 
   872  0DA2                     	;# 
   873  0DA3                     	;# 
   874  0DA4                     	;# 
   875  0DA4                     	;# 
   876  0DA5                     	;# 
   877  0DA6                     	;# 
   878  0DA7                     	;# 
   879  0DA7                     	;# 
   880  0DA8                     	;# 
   881  0DA9                     	;# 
   882  0DAA                     	;# 
   883  0DAB                     	;# 
   884  0DAC                     	;# 
   885  0DAD                     	;# 
   886  0DAE                     	;# 
   887  0DAF                     	;# 
   888  0E0F                     	;# 
   889  0E10                     	;# 
   890  0E11                     	;# 
   891  0E12                     	;# 
   892  0E13                     	;# 
   893  0E14                     	;# 
   894  0E15                     	;# 
   895  0E16                     	;# 
   896  0E17                     	;# 
   897  0E18                     	;# 
   898  0E19                     	;# 
   899  0E1A                     	;# 
   900  0E1B                     	;# 
   901  0E1C                     	;# 
   902  0E1D                     	;# 
   903  0E1E                     	;# 
   904  0E1F                     	;# 
   905  0E20                     	;# 
   906  0E21                     	;# 
   907  0E22                     	;# 
   908  0E23                     	;# 
   909  0E24                     	;# 
   910  0E25                     	;# 
   911  0E26                     	;# 
   912  0E27                     	;# 
   913  0E28                     	;# 
   914  0E29                     	;# 
   915  0E2A                     	;# 
   916  0E2B                     	;# 
   917  0E2C                     	;# 
   918  0E2D                     	;# 
   919  0E2E                     	;# 
   920  0E90                     	;# 
   921  0E91                     	;# 
   922  0E92                     	;# 
   923  0E94                     	;# 
   924  0E95                     	;# 
   925  0E9C                     	;# 
   926  0E9D                     	;# 
   927  0E9E                     	;# 
   928  0E9F                     	;# 
   929  0EA0                     	;# 
   930  0EA1                     	;# 
   931  0EA2                     	;# 
   932  0EA3                     	;# 
   933  0EA4                     	;# 
   934  0EA5                     	;# 
   935  0EA6                     	;# 
   936  0EA7                     	;# 
   937  0F0F                     	;# 
   938  0F10                     	;# 
   939  0F11                     	;# 
   940  0F12                     	;# 
   941  0F13                     	;# 
   942  0F14                     	;# 
   943  0F15                     	;# 
   944  0F16                     	;# 
   945  0F17                     	;# 
   946  0F18                     	;# 
   947  0F19                     	;# 
   948  0F1A                     	;# 
   949  0F1B                     	;# 
   950  0F1C                     	;# 
   951  0F1D                     	;# 
   952  0F1E                     	;# 
   953  0F1F                     	;# 
   954  0F20                     	;# 
   955  0F21                     	;# 
   956  0F22                     	;# 
   957  0F23                     	;# 
   958  0F24                     	;# 
   959  0F25                     	;# 
   960  0F26                     	;# 
   961  0F27                     	;# 
   962  0F28                     	;# 
   963  0F29                     	;# 
   964  0F2A                     	;# 
   965  0F2B                     	;# 
   966  0F2C                     	;# 
   967  0F2D                     	;# 
   968  0F2E                     	;# 
   969  0F2F                     	;# 
   970  0F30                     	;# 
   971  0F31                     	;# 
   972  0F32                     	;# 
   973  0F33                     	;# 
   974  0F34                     	;# 
   975  0F35                     	;# 
   976  0F36                     	;# 
   977  0F37                     	;# 
   978  0FE4                     	;# 
   979  0FE5                     	;# 
   980  0FE6                     	;# 
   981  0FE7                     	;# 
   982  0FE8                     	;# 
   983  0FE9                     	;# 
   984  0FEA                     	;# 
   985  0FEB                     	;# 
   986  0FED                     	;# 
   987  0FEE                     	;# 
   988  0FEF                     	;# 
   989  0000                     	;# 
   990  0001                     	;# 
   991  0002                     	;# 
   992  0003                     	;# 
   993  0004                     	;# 
   994  0005                     	;# 
   995  0006                     	;# 
   996  0007                     	;# 
   997  0008                     	;# 
   998  0009                     	;# 
   999  000A                     	;# 
  1000  000B                     	;# 
  1001  000C                     	;# 
  1002  000D                     	;# 
  1003  000E                     	;# 
  1004  0010                     	;# 
  1005  0011                     	;# 
  1006  0012                     	;# 
  1007  0013                     	;# 
  1008  0014                     	;# 
  1009  0015                     	;# 
  1010  0016                     	;# 
  1011  0016                     	;# 
  1012  0017                     	;# 
  1013  0018                     	;# 
  1014  0019                     	;# 
  1015  001A                     	;# 
  1016  001A                     	;# 
  1017  001B                     	;# 
  1018  001B                     	;# 
  1019  001C                     	;# 
  1020  001D                     	;# 
  1021  001E                     	;# 
  1022  001F                     	;# 
  1023  008C                     	;# 
  1024  008D                     	;# 
  1025  008E                     	;# 
  1026  0090                     	;# 
  1027  0091                     	;# 
  1028  0092                     	;# 
  1029  0093                     	;# 
  1030  0094                     	;# 
  1031  0095                     	;# 
  1032  0096                     	;# 
  1033  0098                     	;# 
  1034  0099                     	;# 
  1035  009A                     	;# 
  1036  009B                     	;# 
  1037  009B                     	;# 
  1038  009C                     	;# 
  1039  009D                     	;# 
  1040  009E                     	;# 
  1041  009F                     	;# 
  1042  010C                     	;# 
  1043  010D                     	;# 
  1044  010E                     	;# 
  1045  0111                     	;# 
  1046  0112                     	;# 
  1047  0113                     	;# 
  1048  0114                     	;# 
  1049  0115                     	;# 
  1050  0116                     	;# 
  1051  0117                     	;# 
  1052  0118                     	;# 
  1053  0119                     	;# 
  1054  011C                     	;# 
  1055  018C                     	;# 
  1056  018D                     	;# 
  1057  018E                     	;# 
  1058  0191                     	;# 
  1059  0191                     	;# 
  1060  0192                     	;# 
  1061  0193                     	;# 
  1062  0193                     	;# 
  1063  0194                     	;# 
  1064  0195                     	;# 
  1065  0196                     	;# 
  1066  0197                     	;# 
  1067  0199                     	;# 
  1068  0199                     	;# 
  1069  0199                     	;# 
  1070  019A                     	;# 
  1071  019A                     	;# 
  1072  019A                     	;# 
  1073  019B                     	;# 
  1074  019B                     	;# 
  1075  019B                     	;# 
  1076  019B                     	;# 
  1077  019B                     	;# 
  1078  019C                     	;# 
  1079  019C                     	;# 
  1080  019C                     	;# 
  1081  019D                     	;# 
  1082  019D                     	;# 
  1083  019D                     	;# 
  1084  019E                     	;# 
  1085  019E                     	;# 
  1086  019E                     	;# 
  1087  019F                     	;# 
  1088  019F                     	;# 
  1089  019F                     	;# 
  1090  019F                     	;# 
  1091  019F                     	;# 
  1092  020C                     	;# 
  1093  020D                     	;# 
  1094  020E                     	;# 
  1095  0211                     	;# 
  1096  0211                     	;# 
  1097  0212                     	;# 
  1098  0212                     	;# 
  1099  0213                     	;# 
  1100  0213                     	;# 
  1101  0214                     	;# 
  1102  0214                     	;# 
  1103  0215                     	;# 
  1104  0215                     	;# 
  1105  0215                     	;# 
  1106  0215                     	;# 
  1107  0216                     	;# 
  1108  0216                     	;# 
  1109  0217                     	;# 
  1110  0217                     	;# 
  1111  028C                     	;# 
  1112  028D                     	;# 
  1113  028E                     	;# 
  1114  0291                     	;# 
  1115  0291                     	;# 
  1116  0292                     	;# 
  1117  0293                     	;# 
  1118  0294                     	;# 
  1119  0298                     	;# 
  1120  0298                     	;# 
  1121  0299                     	;# 
  1122  029A                     	;# 
  1123  029B                     	;# 
  1124  029E                     	;# 
  1125  030C                     	;# 
  1126  030D                     	;# 
  1127  030E                     	;# 
  1128  038C                     	;# 
  1129  038D                     	;# 
  1130  038E                     	;# 
  1131  0391                     	;# 
  1132  0392                     	;# 
  1133  0393                     	;# 
  1134  0394                     	;# 
  1135  0395                     	;# 
  1136  0396                     	;# 
  1137  0397                     	;# 
  1138  0398                     	;# 
  1139  0399                     	;# 
  1140  040E                     	;# 
  1141  0413                     	;# 
  1142  0413                     	;# 
  1143  0414                     	;# 
  1144  0414                     	;# 
  1145  0415                     	;# 
  1146  0416                     	;# 
  1147  0417                     	;# 
  1148  0418                     	;# 
  1149  041A                     	;# 
  1150  041A                     	;# 
  1151  041B                     	;# 
  1152  041B                     	;# 
  1153  041C                     	;# 
  1154  041D                     	;# 
  1155  041E                     	;# 
  1156  041F                     	;# 
  1157  0493                     	;# 
  1158  0494                     	;# 
  1159  0495                     	;# 
  1160  0496                     	;# 
  1161  049A                     	;# 
  1162  049B                     	;# 
  1163  049C                     	;# 
  1164  049D                     	;# 
  1165  058C                     	;# 
  1166  058C                     	;# 
  1167  058D                     	;# 
  1168  058E                     	;# 
  1169  058E                     	;# 
  1170  058F                     	;# 
  1171  0590                     	;# 
  1172  0590                     	;# 
  1173  0591                     	;# 
  1174  0592                     	;# 
  1175  0592                     	;# 
  1176  0593                     	;# 
  1177  0594                     	;# 
  1178  0594                     	;# 
  1179  0595                     	;# 
  1180  0596                     	;# 
  1181  0596                     	;# 
  1182  0597                     	;# 
  1183  0598                     	;# 
  1184  0599                     	;# 
  1185  059A                     	;# 
  1186  059B                     	;# 
  1187  059B                     	;# 
  1188  059C                     	;# 
  1189  059D                     	;# 
  1190  060C                     	;# 
  1191  060C                     	;# 
  1192  060D                     	;# 
  1193  060E                     	;# 
  1194  060F                     	;# 
  1195  060F                     	;# 
  1196  0610                     	;# 
  1197  0611                     	;# 
  1198  0612                     	;# 
  1199  0613                     	;# 
  1200  0614                     	;# 
  1201  0617                     	;# 
  1202  0617                     	;# 
  1203  0618                     	;# 
  1204  0619                     	;# 
  1205  061A                     	;# 
  1206  061A                     	;# 
  1207  061B                     	;# 
  1208  061C                     	;# 
  1209  0691                     	;# 
  1210  0692                     	;# 
  1211  0693                     	;# 
  1212  0694                     	;# 
  1213  0695                     	;# 
  1214  0696                     	;# 
  1215  0697                     	;# 
  1216  0699                     	;# 
  1217  069A                     	;# 
  1218  0711                     	;# 
  1219  0712                     	;# 
  1220  0713                     	;# 
  1221  0714                     	;# 
  1222  0715                     	;# 
  1223  0718                     	;# 
  1224  0718                     	;# 
  1225  0719                     	;# 
  1226  071A                     	;# 
  1227  071A                     	;# 
  1228  071B                     	;# 
  1229  071C                     	;# 
  1230  071D                     	;# 
  1231  0791                     	;# 
  1232  0791                     	;# 
  1233  0792                     	;# 
  1234  0793                     	;# 
  1235  0793                     	;# 
  1236  0794                     	;# 
  1237  0795                     	;# 
  1238  0795                     	;# 
  1239  0796                     	;# 
  1240  0797                     	;# 
  1241  0797                     	;# 
  1242  0798                     	;# 
  1243  0799                     	;# 
  1244  079A                     	;# 
  1245  080C                     	;# 
  1246  080C                     	;# 
  1247  080D                     	;# 
  1248  080E                     	;# 
  1249  080E                     	;# 
  1250  080F                     	;# 
  1251  0810                     	;# 
  1252  0810                     	;# 
  1253  0811                     	;# 
  1254  0812                     	;# 
  1255  0812                     	;# 
  1256  0813                     	;# 
  1257  0814                     	;# 
  1258  0815                     	;# 
  1259  0816                     	;# 
  1260  0817                     	;# 
  1261  0818                     	;# 
  1262  0819                     	;# 
  1263  081A                     	;# 
  1264  081A                     	;# 
  1265  081B                     	;# 
  1266  081C                     	;# 
  1267  081C                     	;# 
  1268  081D                     	;# 
  1269  088C                     	;# 
  1270  088D                     	;# 
  1271  088E                     	;# 
  1272  088F                     	;# 
  1273  088F                     	;# 
  1274  0890                     	;# 
  1275  0891                     	;# 
  1276  0892                     	;# 
  1277  0893                     	;# 
  1278  0893                     	;# 
  1279  0894                     	;# 
  1280  0895                     	;# 
  1281  0896                     	;# 
  1282  0897                     	;# 
  1283  0897                     	;# 
  1284  0898                     	;# 
  1285  0899                     	;# 
  1286  0D8C                     	;# 
  1287  0D8C                     	;# 
  1288  0D8D                     	;# 
  1289  0D8E                     	;# 
  1290  0D8F                     	;# 
  1291  0D8F                     	;# 
  1292  0D90                     	;# 
  1293  0D91                     	;# 
  1294  0D92                     	;# 
  1295  0D92                     	;# 
  1296  0D93                     	;# 
  1297  0D94                     	;# 
  1298  0D95                     	;# 
  1299  0D95                     	;# 
  1300  0D96                     	;# 
  1301  0D97                     	;# 
  1302  0D98                     	;# 
  1303  0D99                     	;# 
  1304  0D9A                     	;# 
  1305  0D9B                     	;# 
  1306  0D9C                     	;# 
  1307  0D9D                     	;# 
  1308  0D9E                     	;# 
  1309  0D9E                     	;# 
  1310  0D9F                     	;# 
  1311  0DA0                     	;# 
  1312  0DA1                     	;# 
  1313  0DA1                     	;# 
  1314  0DA2                     	;# 
  1315  0DA3                     	;# 
  1316  0DA4                     	;# 
  1317  0DA4                     	;# 
  1318  0DA5                     	;# 
  1319  0DA6                     	;# 
  1320  0DA7                     	;# 
  1321  0DA7                     	;# 
  1322  0DA8                     	;# 
  1323  0DA9                     	;# 
  1324  0DAA                     	;# 
  1325  0DAB                     	;# 
  1326  0DAC                     	;# 
  1327  0DAD                     	;# 
  1328  0DAE                     	;# 
  1329  0DAF                     	;# 
  1330  0E0F                     	;# 
  1331  0E10                     	;# 
  1332  0E11                     	;# 
  1333  0E12                     	;# 
  1334  0E13                     	;# 
  1335  0E14                     	;# 
  1336  0E15                     	;# 
  1337  0E16                     	;# 
  1338  0E17                     	;# 
  1339  0E18                     	;# 
  1340  0E19                     	;# 
  1341  0E1A                     	;# 
  1342  0E1B                     	;# 
  1343  0E1C                     	;# 
  1344  0E1D                     	;# 
  1345  0E1E                     	;# 
  1346  0E1F                     	;# 
  1347  0E20                     	;# 
  1348  0E21                     	;# 
  1349  0E22                     	;# 
  1350  0E23                     	;# 
  1351  0E24                     	;# 
  1352  0E25                     	;# 
  1353  0E26                     	;# 
  1354  0E27                     	;# 
  1355  0E28                     	;# 
  1356  0E29                     	;# 
  1357  0E2A                     	;# 
  1358  0E2B                     	;# 
  1359  0E2C                     	;# 
  1360  0E2D                     	;# 
  1361  0E2E                     	;# 
  1362  0E90                     	;# 
  1363  0E91                     	;# 
  1364  0E92                     	;# 
  1365  0E94                     	;# 
  1366  0E95                     	;# 
  1367  0E9C                     	;# 
  1368  0E9D                     	;# 
  1369  0E9E                     	;# 
  1370  0E9F                     	;# 
  1371  0EA0                     	;# 
  1372  0EA1                     	;# 
  1373  0EA2                     	;# 
  1374  0EA3                     	;# 
  1375  0EA4                     	;# 
  1376  0EA5                     	;# 
  1377  0EA6                     	;# 
  1378  0EA7                     	;# 
  1379  0F0F                     	;# 
  1380  0F10                     	;# 
  1381  0F11                     	;# 
  1382  0F12                     	;# 
  1383  0F13                     	;# 
  1384  0F14                     	;# 
  1385  0F15                     	;# 
  1386  0F16                     	;# 
  1387  0F17                     	;# 
  1388  0F18                     	;# 
  1389  0F19                     	;# 
  1390  0F1A                     	;# 
  1391  0F1B                     	;# 
  1392  0F1C                     	;# 
  1393  0F1D                     	;# 
  1394  0F1E                     	;# 
  1395  0F1F                     	;# 
  1396  0F20                     	;# 
  1397  0F21                     	;# 
  1398  0F22                     	;# 
  1399  0F23                     	;# 
  1400  0F24                     	;# 
  1401  0F25                     	;# 
  1402  0F26                     	;# 
  1403  0F27                     	;# 
  1404  0F28                     	;# 
  1405  0F29                     	;# 
  1406  0F2A                     	;# 
  1407  0F2B                     	;# 
  1408  0F2C                     	;# 
  1409  0F2D                     	;# 
  1410  0F2E                     	;# 
  1411  0F2F                     	;# 
  1412  0F30                     	;# 
  1413  0F31                     	;# 
  1414  0F32                     	;# 
  1415  0F33                     	;# 
  1416  0F34                     	;# 
  1417  0F35                     	;# 
  1418  0F36                     	;# 
  1419  0F37                     	;# 
  1420  0FE4                     	;# 
  1421  0FE5                     	;# 
  1422  0FE6                     	;# 
  1423  0FE7                     	;# 
  1424  0FE8                     	;# 
  1425  0FE9                     	;# 
  1426  0FEA                     	;# 
  1427  0FEB                     	;# 
  1428  0FED                     	;# 
  1429  0FEE                     	;# 
  1430  0FEF                     	;# 
  1431  0000                     	;# 
  1432  0001                     	;# 
  1433  0002                     	;# 
  1434  0003                     	;# 
  1435  0004                     	;# 
  1436  0005                     	;# 
  1437  0006                     	;# 
  1438  0007                     	;# 
  1439  0008                     	;# 
  1440  0009                     	;# 
  1441  000A                     	;# 
  1442  000B                     	;# 
  1443  000C                     	;# 
  1444  000D                     	;# 
  1445  000E                     	;# 
  1446  0010                     	;# 
  1447  0011                     	;# 
  1448  0012                     	;# 
  1449  0013                     	;# 
  1450  0014                     	;# 
  1451  0015                     	;# 
  1452  0016                     	;# 
  1453  0016                     	;# 
  1454  0017                     	;# 
  1455  0018                     	;# 
  1456  0019                     	;# 
  1457  001A                     	;# 
  1458  001A                     	;# 
  1459  001B                     	;# 
  1460  001B                     	;# 
  1461  001C                     	;# 
  1462  001D                     	;# 
  1463  001E                     	;# 
  1464  001F                     	;# 
  1465  008C                     	;# 
  1466  008D                     	;# 
  1467  008E                     	;# 
  1468  0090                     	;# 
  1469  0091                     	;# 
  1470  0092                     	;# 
  1471  0093                     	;# 
  1472  0094                     	;# 
  1473  0095                     	;# 
  1474  0096                     	;# 
  1475  0098                     	;# 
  1476  0099                     	;# 
  1477  009A                     	;# 
  1478  009B                     	;# 
  1479  009B                     	;# 
  1480  009C                     	;# 
  1481  009D                     	;# 
  1482  009E                     	;# 
  1483  009F                     	;# 
  1484  010C                     	;# 
  1485  010D                     	;# 
  1486  010E                     	;# 
  1487  0111                     	;# 
  1488  0112                     	;# 
  1489  0113                     	;# 
  1490  0114                     	;# 
  1491  0115                     	;# 
  1492  0116                     	;# 
  1493  0117                     	;# 
  1494  0118                     	;# 
  1495  0119                     	;# 
  1496  011C                     	;# 
  1497  018C                     	;# 
  1498  018D                     	;# 
  1499  018E                     	;# 
  1500  0191                     	;# 
  1501  0191                     	;# 
  1502  0192                     	;# 
  1503  0193                     	;# 
  1504  0193                     	;# 
  1505  0194                     	;# 
  1506  0195                     	;# 
  1507  0196                     	;# 
  1508  0197                     	;# 
  1509  0199                     	;# 
  1510  0199                     	;# 
  1511  0199                     	;# 
  1512  019A                     	;# 
  1513  019A                     	;# 
  1514  019A                     	;# 
  1515  019B                     	;# 
  1516  019B                     	;# 
  1517  019B                     	;# 
  1518  019B                     	;# 
  1519  019B                     	;# 
  1520  019C                     	;# 
  1521  019C                     	;# 
  1522  019C                     	;# 
  1523  019D                     	;# 
  1524  019D                     	;# 
  1525  019D                     	;# 
  1526  019E                     	;# 
  1527  019E                     	;# 
  1528  019E                     	;# 
  1529  019F                     	;# 
  1530  019F                     	;# 
  1531  019F                     	;# 
  1532  019F                     	;# 
  1533  019F                     	;# 
  1534  020C                     	;# 
  1535  020D                     	;# 
  1536  020E                     	;# 
  1537  0211                     	;# 
  1538  0211                     	;# 
  1539  0212                     	;# 
  1540  0212                     	;# 
  1541  0213                     	;# 
  1542  0213                     	;# 
  1543  0214                     	;# 
  1544  0214                     	;# 
  1545  0215                     	;# 
  1546  0215                     	;# 
  1547  0215                     	;# 
  1548  0215                     	;# 
  1549  0216                     	;# 
  1550  0216                     	;# 
  1551  0217                     	;# 
  1552  0217                     	;# 
  1553  028C                     	;# 
  1554  028D                     	;# 
  1555  028E                     	;# 
  1556  0291                     	;# 
  1557  0291                     	;# 
  1558  0292                     	;# 
  1559  0293                     	;# 
  1560  0294                     	;# 
  1561  0298                     	;# 
  1562  0298                     	;# 
  1563  0299                     	;# 
  1564  029A                     	;# 
  1565  029B                     	;# 
  1566  029E                     	;# 
  1567  030C                     	;# 
  1568  030D                     	;# 
  1569  030E                     	;# 
  1570  038C                     	;# 
  1571  038D                     	;# 
  1572  038E                     	;# 
  1573  0391                     	;# 
  1574  0392                     	;# 
  1575  0393                     	;# 
  1576  0394                     	;# 
  1577  0395                     	;# 
  1578  0396                     	;# 
  1579  0397                     	;# 
  1580  0398                     	;# 
  1581  0399                     	;# 
  1582  040E                     	;# 
  1583  0413                     	;# 
  1584  0413                     	;# 
  1585  0414                     	;# 
  1586  0414                     	;# 
  1587  0415                     	;# 
  1588  0416                     	;# 
  1589  0417                     	;# 
  1590  0418                     	;# 
  1591  041A                     	;# 
  1592  041A                     	;# 
  1593  041B                     	;# 
  1594  041B                     	;# 
  1595  041C                     	;# 
  1596  041D                     	;# 
  1597  041E                     	;# 
  1598  041F                     	;# 
  1599  0493                     	;# 
  1600  0494                     	;# 
  1601  0495                     	;# 
  1602  0496                     	;# 
  1603  049A                     	;# 
  1604  049B                     	;# 
  1605  049C                     	;# 
  1606  049D                     	;# 
  1607  058C                     	;# 
  1608  058C                     	;# 
  1609  058D                     	;# 
  1610  058E                     	;# 
  1611  058E                     	;# 
  1612  058F                     	;# 
  1613  0590                     	;# 
  1614  0590                     	;# 
  1615  0591                     	;# 
  1616  0592                     	;# 
  1617  0592                     	;# 
  1618  0593                     	;# 
  1619  0594                     	;# 
  1620  0594                     	;# 
  1621  0595                     	;# 
  1622  0596                     	;# 
  1623  0596                     	;# 
  1624  0597                     	;# 
  1625  0598                     	;# 
  1626  0599                     	;# 
  1627  059A                     	;# 
  1628  059B                     	;# 
  1629  059B                     	;# 
  1630  059C                     	;# 
  1631  059D                     	;# 
  1632  060C                     	;# 
  1633  060C                     	;# 
  1634  060D                     	;# 
  1635  060E                     	;# 
  1636  060F                     	;# 
  1637  060F                     	;# 
  1638  0610                     	;# 
  1639  0611                     	;# 
  1640  0612                     	;# 
  1641  0613                     	;# 
  1642  0614                     	;# 
  1643  0617                     	;# 
  1644  0617                     	;# 
  1645  0618                     	;# 
  1646  0619                     	;# 
  1647  061A                     	;# 
  1648  061A                     	;# 
  1649  061B                     	;# 
  1650  061C                     	;# 
  1651  0691                     	;# 
  1652  0692                     	;# 
  1653  0693                     	;# 
  1654  0694                     	;# 
  1655  0695                     	;# 
  1656  0696                     	;# 
  1657  0697                     	;# 
  1658  0699                     	;# 
  1659  069A                     	;# 
  1660  0711                     	;# 
  1661  0712                     	;# 
  1662  0713                     	;# 
  1663  0714                     	;# 
  1664  0715                     	;# 
  1665  0718                     	;# 
  1666  0718                     	;# 
  1667  0719                     	;# 
  1668  071A                     	;# 
  1669  071A                     	;# 
  1670  071B                     	;# 
  1671  071C                     	;# 
  1672  071D                     	;# 
  1673  0791                     	;# 
  1674  0791                     	;# 
  1675  0792                     	;# 
  1676  0793                     	;# 
  1677  0793                     	;# 
  1678  0794                     	;# 
  1679  0795                     	;# 
  1680  0795                     	;# 
  1681  0796                     	;# 
  1682  0797                     	;# 
  1683  0797                     	;# 
  1684  0798                     	;# 
  1685  0799                     	;# 
  1686  079A                     	;# 
  1687  080C                     	;# 
  1688  080C                     	;# 
  1689  080D                     	;# 
  1690  080E                     	;# 
  1691  080E                     	;# 
  1692  080F                     	;# 
  1693  0810                     	;# 
  1694  0810                     	;# 
  1695  0811                     	;# 
  1696  0812                     	;# 
  1697  0812                     	;# 
  1698  0813                     	;# 
  1699  0814                     	;# 
  1700  0815                     	;# 
  1701  0816                     	;# 
  1702  0817                     	;# 
  1703  0818                     	;# 
  1704  0819                     	;# 
  1705  081A                     	;# 
  1706  081A                     	;# 
  1707  081B                     	;# 
  1708  081C                     	;# 
  1709  081C                     	;# 
  1710  081D                     	;# 
  1711  088C                     	;# 
  1712  088D                     	;# 
  1713  088E                     	;# 
  1714  088F                     	;# 
  1715  088F                     	;# 
  1716  0890                     	;# 
  1717  0891                     	;# 
  1718  0892                     	;# 
  1719  0893                     	;# 
  1720  0893                     	;# 
  1721  0894                     	;# 
  1722  0895                     	;# 
  1723  0896                     	;# 
  1724  0897                     	;# 
  1725  0897                     	;# 
  1726  0898                     	;# 
  1727  0899                     	;# 
  1728  0D8C                     	;# 
  1729  0D8C                     	;# 
  1730  0D8D                     	;# 
  1731  0D8E                     	;# 
  1732  0D8F                     	;# 
  1733  0D8F                     	;# 
  1734  0D90                     	;# 
  1735  0D91                     	;# 
  1736  0D92                     	;# 
  1737  0D92                     	;# 
  1738  0D93                     	;# 
  1739  0D94                     	;# 
  1740  0D95                     	;# 
  1741  0D95                     	;# 
  1742  0D96                     	;# 
  1743  0D97                     	;# 
  1744  0D98                     	;# 
  1745  0D99                     	;# 
  1746  0D9A                     	;# 
  1747  0D9B                     	;# 
  1748  0D9C                     	;# 
  1749  0D9D                     	;# 
  1750  0D9E                     	;# 
  1751  0D9E                     	;# 
  1752  0D9F                     	;# 
  1753  0DA0                     	;# 
  1754  0DA1                     	;# 
  1755  0DA1                     	;# 
  1756  0DA2                     	;# 
  1757  0DA3                     	;# 
  1758  0DA4                     	;# 
  1759  0DA4                     	;# 
  1760  0DA5                     	;# 
  1761  0DA6                     	;# 
  1762  0DA7                     	;# 
  1763  0DA7                     	;# 
  1764  0DA8                     	;# 
  1765  0DA9                     	;# 
  1766  0DAA                     	;# 
  1767  0DAB                     	;# 
  1768  0DAC                     	;# 
  1769  0DAD                     	;# 
  1770  0DAE                     	;# 
  1771  0DAF                     	;# 
  1772  0E0F                     	;# 
  1773  0E10                     	;# 
  1774  0E11                     	;# 
  1775  0E12                     	;# 
  1776  0E13                     	;# 
  1777  0E14                     	;# 
  1778  0E15                     	;# 
  1779  0E16                     	;# 
  1780  0E17                     	;# 
  1781  0E18                     	;# 
  1782  0E19                     	;# 
  1783  0E1A                     	;# 
  1784  0E1B                     	;# 
  1785  0E1C                     	;# 
  1786  0E1D                     	;# 
  1787  0E1E                     	;# 
  1788  0E1F                     	;# 
  1789  0E20                     	;# 
  1790  0E21                     	;# 
  1791  0E22                     	;# 
  1792  0E23                     	;# 
  1793  0E24                     	;# 
  1794  0E25                     	;# 
  1795  0E26                     	;# 
  1796  0E27                     	;# 
  1797  0E28                     	;# 
  1798  0E29                     	;# 
  1799  0E2A                     	;# 
  1800  0E2B                     	;# 
  1801  0E2C                     	;# 
  1802  0E2D                     	;# 
  1803  0E2E                     	;# 
  1804  0E90                     	;# 
  1805  0E91                     	;# 
  1806  0E92                     	;# 
  1807  0E94                     	;# 
  1808  0E95                     	;# 
  1809  0E9C                     	;# 
  1810  0E9D                     	;# 
  1811  0E9E                     	;# 
  1812  0E9F                     	;# 
  1813  0EA0                     	;# 
  1814  0EA1                     	;# 
  1815  0EA2                     	;# 
  1816  0EA3                     	;# 
  1817  0EA4                     	;# 
  1818  0EA5                     	;# 
  1819  0EA6                     	;# 
  1820  0EA7                     	;# 
  1821  0F0F                     	;# 
  1822  0F10                     	;# 
  1823  0F11                     	;# 
  1824  0F12                     	;# 
  1825  0F13                     	;# 
  1826  0F14                     	;# 
  1827  0F15                     	;# 
  1828  0F16                     	;# 
  1829  0F17                     	;# 
  1830  0F18                     	;# 
  1831  0F19                     	;# 
  1832  0F1A                     	;# 
  1833  0F1B                     	;# 
  1834  0F1C                     	;# 
  1835  0F1D                     	;# 
  1836  0F1E                     	;# 
  1837  0F1F                     	;# 
  1838  0F20                     	;# 
  1839  0F21                     	;# 
  1840  0F22                     	;# 
  1841  0F23                     	;# 
  1842  0F24                     	;# 
  1843  0F25                     	;# 
  1844  0F26                     	;# 
  1845  0F27                     	;# 
  1846  0F28                     	;# 
  1847  0F29                     	;# 
  1848  0F2A                     	;# 
  1849  0F2B                     	;# 
  1850  0F2C                     	;# 
  1851  0F2D                     	;# 
  1852  0F2E                     	;# 
  1853  0F2F                     	;# 
  1854  0F30                     	;# 
  1855  0F31                     	;# 
  1856  0F32                     	;# 
  1857  0F33                     	;# 
  1858  0F34                     	;# 
  1859  0F35                     	;# 
  1860  0F36                     	;# 
  1861  0F37                     	;# 
  1862  0FE4                     	;# 
  1863  0FE5                     	;# 
  1864  0FE6                     	;# 
  1865  0FE7                     	;# 
  1866  0FE8                     	;# 
  1867  0FE9                     	;# 
  1868  0FEA                     	;# 
  1869  0FEB                     	;# 
  1870  0FED                     	;# 
  1871  0FEE                     	;# 
  1872  0FEF                     	;# 
  1873  0000                     	;# 
  1874  0001                     	;# 
  1875  0002                     	;# 
  1876  0003                     	;# 
  1877  0004                     	;# 
  1878  0005                     	;# 
  1879  0006                     	;# 
  1880  0007                     	;# 
  1881  0008                     	;# 
  1882  0009                     	;# 
  1883  000A                     	;# 
  1884  000B                     	;# 
  1885  000C                     	;# 
  1886  000D                     	;# 
  1887  000E                     	;# 
  1888  0010                     	;# 
  1889  0011                     	;# 
  1890  0012                     	;# 
  1891  0013                     	;# 
  1892  0014                     	;# 
  1893  0015                     	;# 
  1894  0016                     	;# 
  1895  0016                     	;# 
  1896  0017                     	;# 
  1897  0018                     	;# 
  1898  0019                     	;# 
  1899  001A                     	;# 
  1900  001A                     	;# 
  1901  001B                     	;# 
  1902  001B                     	;# 
  1903  001C                     	;# 
  1904  001D                     	;# 
  1905  001E                     	;# 
  1906  001F                     	;# 
  1907  008C                     	;# 
  1908  008D                     	;# 
  1909  008E                     	;# 
  1910  0090                     	;# 
  1911  0091                     	;# 
  1912  0092                     	;# 
  1913  0093                     	;# 
  1914  0094                     	;# 
  1915  0095                     	;# 
  1916  0096                     	;# 
  1917  0098                     	;# 
  1918  0099                     	;# 
  1919  009A                     	;# 
  1920  009B                     	;# 
  1921  009B                     	;# 
  1922  009C                     	;# 
  1923  009D                     	;# 
  1924  009E                     	;# 
  1925  009F                     	;# 
  1926  010C                     	;# 
  1927  010D                     	;# 
  1928  010E                     	;# 
  1929  0111                     	;# 
  1930  0112                     	;# 
  1931  0113                     	;# 
  1932  0114                     	;# 
  1933  0115                     	;# 
  1934  0116                     	;# 
  1935  0117                     	;# 
  1936  0118                     	;# 
  1937  0119                     	;# 
  1938  011C                     	;# 
  1939  018C                     	;# 
  1940  018D                     	;# 
  1941  018E                     	;# 
  1942  0191                     	;# 
  1943  0191                     	;# 
  1944  0192                     	;# 
  1945  0193                     	;# 
  1946  0193                     	;# 
  1947  0194                     	;# 
  1948  0195                     	;# 
  1949  0196                     	;# 
  1950  0197                     	;# 
  1951  0199                     	;# 
  1952  0199                     	;# 
  1953  0199                     	;# 
  1954  019A                     	;# 
  1955  019A                     	;# 
  1956  019A                     	;# 
  1957  019B                     	;# 
  1958  019B                     	;# 
  1959  019B                     	;# 
  1960  019B                     	;# 
  1961  019B                     	;# 
  1962  019C                     	;# 
  1963  019C                     	;# 
  1964  019C                     	;# 
  1965  019D                     	;# 
  1966  019D                     	;# 
  1967  019D                     	;# 
  1968  019E                     	;# 
  1969  019E                     	;# 
  1970  019E                     	;# 
  1971  019F                     	;# 
  1972  019F                     	;# 
  1973  019F                     	;# 
  1974  019F                     	;# 
  1975  019F                     	;# 
  1976  020C                     	;# 
  1977  020D                     	;# 
  1978  020E                     	;# 
  1979  0211                     	;# 
  1980  0211                     	;# 
  1981  0212                     	;# 
  1982  0212                     	;# 
  1983  0213                     	;# 
  1984  0213                     	;# 
  1985  0214                     	;# 
  1986  0214                     	;# 
  1987  0215                     	;# 
  1988  0215                     	;# 
  1989  0215                     	;# 
  1990  0215                     	;# 
  1991  0216                     	;# 
  1992  0216                     	;# 
  1993  0217                     	;# 
  1994  0217                     	;# 
  1995  028C                     	;# 
  1996  028D                     	;# 
  1997  028E                     	;# 
  1998  0291                     	;# 
  1999  0291                     	;# 
  2000  0292                     	;# 
  2001  0293                     	;# 
  2002  0294                     	;# 
  2003  0298                     	;# 
  2004  0298                     	;# 
  2005  0299                     	;# 
  2006  029A                     	;# 
  2007  029B                     	;# 
  2008  029E                     	;# 
  2009  030C                     	;# 
  2010  030D                     	;# 
  2011  030E                     	;# 
  2012  038C                     	;# 
  2013  038D                     	;# 
  2014  038E                     	;# 
  2015  0391                     	;# 
  2016  0392                     	;# 
  2017  0393                     	;# 
  2018  0394                     	;# 
  2019  0395                     	;# 
  2020  0396                     	;# 
  2021  0397                     	;# 
  2022  0398                     	;# 
  2023  0399                     	;# 
  2024  040E                     	;# 
  2025  0413                     	;# 
  2026  0413                     	;# 
  2027  0414                     	;# 
  2028  0414                     	;# 
  2029  0415                     	;# 
  2030  0416                     	;# 
  2031  0417                     	;# 
  2032  0418                     	;# 
  2033  041A                     	;# 
  2034  041A                     	;# 
  2035  041B                     	;# 
  2036  041B                     	;# 
  2037  041C                     	;# 
  2038  041D                     	;# 
  2039  041E                     	;# 
  2040  041F                     	;# 
  2041  0493                     	;# 
  2042  0494                     	;# 
  2043  0495                     	;# 
  2044  0496                     	;# 
  2045  049A                     	;# 
  2046  049B                     	;# 
  2047  049C                     	;# 
  2048  049D                     	;# 
  2049  058C                     	;# 
  2050  058C                     	;# 
  2051  058D                     	;# 
  2052  058E                     	;# 
  2053  058E                     	;# 
  2054  058F                     	;# 
  2055  0590                     	;# 
  2056  0590                     	;# 
  2057  0591                     	;# 
  2058  0592                     	;# 
  2059  0592                     	;# 
  2060  0593                     	;# 
  2061  0594                     	;# 
  2062  0594                     	;# 
  2063  0595                     	;# 
  2064  0596                     	;# 
  2065  0596                     	;# 
  2066  0597                     	;# 
  2067  0598                     	;# 
  2068  0599                     	;# 
  2069  059A                     	;# 
  2070  059B                     	;# 
  2071  059B                     	;# 
  2072  059C                     	;# 
  2073  059D                     	;# 
  2074  060C                     	;# 
  2075  060C                     	;# 
  2076  060D                     	;# 
  2077  060E                     	;# 
  2078  060F                     	;# 
  2079  060F                     	;# 
  2080  0610                     	;# 
  2081  0611                     	;# 
  2082  0612                     	;# 
  2083  0613                     	;# 
  2084  0614                     	;# 
  2085  0617                     	;# 
  2086  0617                     	;# 
  2087  0618                     	;# 
  2088  0619                     	;# 
  2089  061A                     	;# 
  2090  061A                     	;# 
  2091  061B                     	;# 
  2092  061C                     	;# 
  2093  0691                     	;# 
  2094  0692                     	;# 
  2095  0693                     	;# 
  2096  0694                     	;# 
  2097  0695                     	;# 
  2098  0696                     	;# 
  2099  0697                     	;# 
  2100  0699                     	;# 
  2101  069A                     	;# 
  2102  0711                     	;# 
  2103  0712                     	;# 
  2104  0713                     	;# 
  2105  0714                     	;# 
  2106  0715                     	;# 
  2107  0718                     	;# 
  2108  0718                     	;# 
  2109  0719                     	;# 
  2110  071A                     	;# 
  2111  071A                     	;# 
  2112  071B                     	;# 
  2113  071C                     	;# 
  2114  071D                     	;# 
  2115  0791                     	;# 
  2116  0791                     	;# 
  2117  0792                     	;# 
  2118  0793                     	;# 
  2119  0793                     	;# 
  2120  0794                     	;# 
  2121  0795                     	;# 
  2122  0795                     	;# 
  2123  0796                     	;# 
  2124  0797                     	;# 
  2125  0797                     	;# 
  2126  0798                     	;# 
  2127  0799                     	;# 
  2128  079A                     	;# 
  2129  080C                     	;# 
  2130  080C                     	;# 
  2131  080D                     	;# 
  2132  080E                     	;# 
  2133  080E                     	;# 
  2134  080F                     	;# 
  2135  0810                     	;# 
  2136  0810                     	;# 
  2137  0811                     	;# 
  2138  0812                     	;# 
  2139  0812                     	;# 
  2140  0813                     	;# 
  2141  0814                     	;# 
  2142  0815                     	;# 
  2143  0816                     	;# 
  2144  0817                     	;# 
  2145  0818                     	;# 
  2146  0819                     	;# 
  2147  081A                     	;# 
  2148  081A                     	;# 
  2149  081B                     	;# 
  2150  081C                     	;# 
  2151  081C                     	;# 
  2152  081D                     	;# 
  2153  088C                     	;# 
  2154  088D                     	;# 
  2155  088E                     	;# 
  2156  088F                     	;# 
  2157  088F                     	;# 
  2158  0890                     	;# 
  2159  0891                     	;# 
  2160  0892                     	;# 
  2161  0893                     	;# 
  2162  0893                     	;# 
  2163  0894                     	;# 
  2164  0895                     	;# 
  2165  0896                     	;# 
  2166  0897                     	;# 
  2167  0897                     	;# 
  2168  0898                     	;# 
  2169  0899                     	;# 
  2170  0D8C                     	;# 
  2171  0D8C                     	;# 
  2172  0D8D                     	;# 
  2173  0D8E                     	;# 
  2174  0D8F                     	;# 
  2175  0D8F                     	;# 
  2176  0D90                     	;# 
  2177  0D91                     	;# 
  2178  0D92                     	;# 
  2179  0D92                     	;# 
  2180  0D93                     	;# 
  2181  0D94                     	;# 
  2182  0D95                     	;# 
  2183  0D95                     	;# 
  2184  0D96                     	;# 
  2185  0D97                     	;# 
  2186  0D98                     	;# 
  2187  0D99                     	;# 
  2188  0D9A                     	;# 
  2189  0D9B                     	;# 
  2190  0D9C                     	;# 
  2191  0D9D                     	;# 
  2192  0D9E                     	;# 
  2193  0D9E                     	;# 
  2194  0D9F                     	;# 
  2195  0DA0                     	;# 
  2196  0DA1                     	;# 
  2197  0DA1                     	;# 
  2198  0DA2                     	;# 
  2199  0DA3                     	;# 
  2200  0DA4                     	;# 
  2201  0DA4                     	;# 
  2202  0DA5                     	;# 
  2203  0DA6                     	;# 
  2204  0DA7                     	;# 
  2205  0DA7                     	;# 
  2206  0DA8                     	;# 
  2207  0DA9                     	;# 
  2208  0DAA                     	;# 
  2209  0DAB                     	;# 
  2210  0DAC                     	;# 
  2211  0DAD                     	;# 
  2212  0DAE                     	;# 
  2213  0DAF                     	;# 
  2214  0E0F                     	;# 
  2215  0E10                     	;# 
  2216  0E11                     	;# 
  2217  0E12                     	;# 
  2218  0E13                     	;# 
  2219  0E14                     	;# 
  2220  0E15                     	;# 
  2221  0E16                     	;# 
  2222  0E17                     	;# 
  2223  0E18                     	;# 
  2224  0E19                     	;# 
  2225  0E1A                     	;# 
  2226  0E1B                     	;# 
  2227  0E1C                     	;# 
  2228  0E1D                     	;# 
  2229  0E1E                     	;# 
  2230  0E1F                     	;# 
  2231  0E20                     	;# 
  2232  0E21                     	;# 
  2233  0E22                     	;# 
  2234  0E23                     	;# 
  2235  0E24                     	;# 
  2236  0E25                     	;# 
  2237  0E26                     	;# 
  2238  0E27                     	;# 
  2239  0E28                     	;# 
  2240  0E29                     	;# 
  2241  0E2A                     	;# 
  2242  0E2B                     	;# 
  2243  0E2C                     	;# 
  2244  0E2D                     	;# 
  2245  0E2E                     	;# 
  2246  0E90                     	;# 
  2247  0E91                     	;# 
  2248  0E92                     	;# 
  2249  0E94                     	;# 
  2250  0E95                     	;# 
  2251  0E9C                     	;# 
  2252  0E9D                     	;# 
  2253  0E9E                     	;# 
  2254  0E9F                     	;# 
  2255  0EA0                     	;# 
  2256  0EA1                     	;# 
  2257  0EA2                     	;# 
  2258  0EA3                     	;# 
  2259  0EA4                     	;# 
  2260  0EA5                     	;# 
  2261  0EA6                     	;# 
  2262  0EA7                     	;# 
  2263  0F0F                     	;# 
  2264  0F10                     	;# 
  2265  0F11                     	;# 
  2266  0F12                     	;# 
  2267  0F13                     	;# 
  2268  0F14                     	;# 
  2269  0F15                     	;# 
  2270  0F16                     	;# 
  2271  0F17                     	;# 
  2272  0F18                     	;# 
  2273  0F19                     	;# 
  2274  0F1A                     	;# 
  2275  0F1B                     	;# 
  2276  0F1C                     	;# 
  2277  0F1D                     	;# 
  2278  0F1E                     	;# 
  2279  0F1F                     	;# 
  2280  0F20                     	;# 
  2281  0F21                     	;# 
  2282  0F22                     	;# 
  2283  0F23                     	;# 
  2284  0F24                     	;# 
  2285  0F25                     	;# 
  2286  0F26                     	;# 
  2287  0F27                     	;# 
  2288  0F28                     	;# 
  2289  0F29                     	;# 
  2290  0F2A                     	;# 
  2291  0F2B                     	;# 
  2292  0F2C                     	;# 
  2293  0F2D                     	;# 
  2294  0F2E                     	;# 
  2295  0F2F                     	;# 
  2296  0F30                     	;# 
  2297  0F31                     	;# 
  2298  0F32                     	;# 
  2299  0F33                     	;# 
  2300  0F34                     	;# 
  2301  0F35                     	;# 
  2302  0F36                     	;# 
  2303  0F37                     	;# 
  2304  0FE4                     	;# 
  2305  0FE5                     	;# 
  2306  0FE6                     	;# 
  2307  0FE7                     	;# 
  2308  0FE8                     	;# 
  2309  0FE9                     	;# 
  2310  0FEA                     	;# 
  2311  0FEB                     	;# 
  2312  0FED                     	;# 
  2313  0FEE                     	;# 
  2314  0FEF                     	;# 
  2315  0000                     	;# 
  2316  0001                     	;# 
  2317  0002                     	;# 
  2318  0003                     	;# 
  2319  0004                     	;# 
  2320  0005                     	;# 
  2321  0006                     	;# 
  2322  0007                     	;# 
  2323  0008                     	;# 
  2324  0009                     	;# 
  2325  000A                     	;# 
  2326  000B                     	;# 
  2327  000C                     	;# 
  2328  000D                     	;# 
  2329  000E                     	;# 
  2330  0010                     	;# 
  2331  0011                     	;# 
  2332  0012                     	;# 
  2333  0013                     	;# 
  2334  0014                     	;# 
  2335  0015                     	;# 
  2336  0016                     	;# 
  2337  0016                     	;# 
  2338  0017                     	;# 
  2339  0018                     	;# 
  2340  0019                     	;# 
  2341  001A                     	;# 
  2342  001A                     	;# 
  2343  001B                     	;# 
  2344  001B                     	;# 
  2345  001C                     	;# 
  2346  001D                     	;# 
  2347  001E                     	;# 
  2348  001F                     	;# 
  2349  008C                     	;# 
  2350  008D                     	;# 
  2351  008E                     	;# 
  2352  0090                     	;# 
  2353  0091                     	;# 
  2354  0092                     	;# 
  2355  0093                     	;# 
  2356  0094                     	;# 
  2357  0095                     	;# 
  2358  0096                     	;# 
  2359  0098                     	;# 
  2360  0099                     	;# 
  2361  009A                     	;# 
  2362  009B                     	;# 
  2363  009B                     	;# 
  2364  009C                     	;# 
  2365  009D                     	;# 
  2366  009E                     	;# 
  2367  009F                     	;# 
  2368  010C                     	;# 
  2369  010D                     	;# 
  2370  010E                     	;# 
  2371  0111                     	;# 
  2372  0112                     	;# 
  2373  0113                     	;# 
  2374  0114                     	;# 
  2375  0115                     	;# 
  2376  0116                     	;# 
  2377  0117                     	;# 
  2378  0118                     	;# 
  2379  0119                     	;# 
  2380  011C                     	;# 
  2381  018C                     	;# 
  2382  018D                     	;# 
  2383  018E                     	;# 
  2384  0191                     	;# 
  2385  0191                     	;# 
  2386  0192                     	;# 
  2387  0193                     	;# 
  2388  0193                     	;# 
  2389  0194                     	;# 
  2390  0195                     	;# 
  2391  0196                     	;# 
  2392  0197                     	;# 
  2393  0199                     	;# 
  2394  0199                     	;# 
  2395  0199                     	;# 
  2396  019A                     	;# 
  2397  019A                     	;# 
  2398  019A                     	;# 
  2399  019B                     	;# 
  2400  019B                     	;# 
  2401  019B                     	;# 
  2402  019B                     	;# 
  2403  019B                     	;# 
  2404  019C                     	;# 
  2405  019C                     	;# 
  2406  019C                     	;# 
  2407  019D                     	;# 
  2408  019D                     	;# 
  2409  019D                     	;# 
  2410  019E                     	;# 
  2411  019E                     	;# 
  2412  019E                     	;# 
  2413  019F                     	;# 
  2414  019F                     	;# 
  2415  019F                     	;# 
  2416  019F                     	;# 
  2417  019F                     	;# 
  2418  020C                     	;# 
  2419  020D                     	;# 
  2420  020E                     	;# 
  2421  0211                     	;# 
  2422  0211                     	;# 
  2423  0212                     	;# 
  2424  0212                     	;# 
  2425  0213                     	;# 
  2426  0213                     	;# 
  2427  0214                     	;# 
  2428  0214                     	;# 
  2429  0215                     	;# 
  2430  0215                     	;# 
  2431  0215                     	;# 
  2432  0215                     	;# 
  2433  0216                     	;# 
  2434  0216                     	;# 
  2435  0217                     	;# 
  2436  0217                     	;# 
  2437  028C                     	;# 
  2438  028D                     	;# 
  2439  028E                     	;# 
  2440  0291                     	;# 
  2441  0291                     	;# 
  2442  0292                     	;# 
  2443  0293                     	;# 
  2444  0294                     	;# 
  2445  0298                     	;# 
  2446  0298                     	;# 
  2447  0299                     	;# 
  2448  029A                     	;# 
  2449  029B                     	;# 
  2450  029E                     	;# 
  2451  030C                     	;# 
  2452  030D                     	;# 
  2453  030E                     	;# 
  2454  038C                     	;# 
  2455  038D                     	;# 
  2456  038E                     	;# 
  2457  0391                     	;# 
  2458  0392                     	;# 
  2459  0393                     	;# 
  2460  0394                     	;# 
  2461  0395                     	;# 
  2462  0396                     	;# 
  2463  0397                     	;# 
  2464  0398                     	;# 
  2465  0399                     	;# 
  2466  040E                     	;# 
  2467  0413                     	;# 
  2468  0413                     	;# 
  2469  0414                     	;# 
  2470  0414                     	;# 
  2471  0415                     	;# 
  2472  0416                     	;# 
  2473  0417                     	;# 
  2474  0418                     	;# 
  2475  041A                     	;# 
  2476  041A                     	;# 
  2477  041B                     	;# 
  2478  041B                     	;# 
  2479  041C                     	;# 
  2480  041D                     	;# 
  2481  041E                     	;# 
  2482  041F                     	;# 
  2483  0493                     	;# 
  2484  0494                     	;# 
  2485  0495                     	;# 
  2486  0496                     	;# 
  2487  049A                     	;# 
  2488  049B                     	;# 
  2489  049C                     	;# 
  2490  049D                     	;# 
  2491  058C                     	;# 
  2492  058C                     	;# 
  2493  058D                     	;# 
  2494  058E                     	;# 
  2495  058E                     	;# 
  2496  058F                     	;# 
  2497  0590                     	;# 
  2498  0590                     	;# 
  2499  0591                     	;# 
  2500  0592                     	;# 
  2501  0592                     	;# 
  2502  0593                     	;# 
  2503  0594                     	;# 
  2504  0594                     	;# 
  2505  0595                     	;# 
  2506  0596                     	;# 
  2507  0596                     	;# 
  2508  0597                     	;# 
  2509  0598                     	;# 
  2510  0599                     	;# 
  2511  059A                     	;# 
  2512  059B                     	;# 
  2513  059B                     	;# 
  2514  059C                     	;# 
  2515  059D                     	;# 
  2516  060C                     	;# 
  2517  060C                     	;# 
  2518  060D                     	;# 
  2519  060E                     	;# 
  2520  060F                     	;# 
  2521  060F                     	;# 
  2522  0610                     	;# 
  2523  0611                     	;# 
  2524  0612                     	;# 
  2525  0613                     	;# 
  2526  0614                     	;# 
  2527  0617                     	;# 
  2528  0617                     	;# 
  2529  0618                     	;# 
  2530  0619                     	;# 
  2531  061A                     	;# 
  2532  061A                     	;# 
  2533  061B                     	;# 
  2534  061C                     	;# 
  2535  0691                     	;# 
  2536  0692                     	;# 
  2537  0693                     	;# 
  2538  0694                     	;# 
  2539  0695                     	;# 
  2540  0696                     	;# 
  2541  0697                     	;# 
  2542  0699                     	;# 
  2543  069A                     	;# 
  2544  0711                     	;# 
  2545  0712                     	;# 
  2546  0713                     	;# 
  2547  0714                     	;# 
  2548  0715                     	;# 
  2549  0718                     	;# 
  2550  0718                     	;# 
  2551  0719                     	;# 
  2552  071A                     	;# 
  2553  071A                     	;# 
  2554  071B                     	;# 
  2555  071C                     	;# 
  2556  071D                     	;# 
  2557  0791                     	;# 
  2558  0791                     	;# 
  2559  0792                     	;# 
  2560  0793                     	;# 
  2561  0793                     	;# 
  2562  0794                     	;# 
  2563  0795                     	;# 
  2564  0795                     	;# 
  2565  0796                     	;# 
  2566  0797                     	;# 
  2567  0797                     	;# 
  2568  0798                     	;# 
  2569  0799                     	;# 
  2570  079A                     	;# 
  2571  080C                     	;# 
  2572  080C                     	;# 
  2573  080D                     	;# 
  2574  080E                     	;# 
  2575  080E                     	;# 
  2576  080F                     	;# 
  2577  0810                     	;# 
  2578  0810                     	;# 
  2579  0811                     	;# 
  2580  0812                     	;# 
  2581  0812                     	;# 
  2582  0813                     	;# 
  2583  0814                     	;# 
  2584  0815                     	;# 
  2585  0816                     	;# 
  2586  0817                     	;# 
  2587  0818                     	;# 
  2588  0819                     	;# 
  2589  081A                     	;# 
  2590  081A                     	;# 
  2591  081B                     	;# 
  2592  081C                     	;# 
  2593  081C                     	;# 
  2594  081D                     	;# 
  2595  088C                     	;# 
  2596  088D                     	;# 
  2597  088E                     	;# 
  2598  088F                     	;# 
  2599  088F                     	;# 
  2600  0890                     	;# 
  2601  0891                     	;# 
  2602  0892                     	;# 
  2603  0893                     	;# 
  2604  0893                     	;# 
  2605  0894                     	;# 
  2606  0895                     	;# 
  2607  0896                     	;# 
  2608  0897                     	;# 
  2609  0897                     	;# 
  2610  0898                     	;# 
  2611  0899                     	;# 
  2612  0D8C                     	;# 
  2613  0D8C                     	;# 
  2614  0D8D                     	;# 
  2615  0D8E                     	;# 
  2616  0D8F                     	;# 
  2617  0D8F                     	;# 
  2618  0D90                     	;# 
  2619  0D91                     	;# 
  2620  0D92                     	;# 
  2621  0D92                     	;# 
  2622  0D93                     	;# 
  2623  0D94                     	;# 
  2624  0D95                     	;# 
  2625  0D95                     	;# 
  2626  0D96                     	;# 
  2627  0D97                     	;# 
  2628  0D98                     	;# 
  2629  0D99                     	;# 
  2630  0D9A                     	;# 
  2631  0D9B                     	;# 
  2632  0D9C                     	;# 
  2633  0D9D                     	;# 
  2634  0D9E                     	;# 
  2635  0D9E                     	;# 
  2636  0D9F                     	;# 
  2637  0DA0                     	;# 
  2638  0DA1                     	;# 
  2639  0DA1                     	;# 
  2640  0DA2                     	;# 
  2641  0DA3                     	;# 
  2642  0DA4                     	;# 
  2643  0DA4                     	;# 
  2644  0DA5                     	;# 
  2645  0DA6                     	;# 
  2646  0DA7                     	;# 
  2647  0DA7                     	;# 
  2648  0DA8                     	;# 
  2649  0DA9                     	;# 
  2650  0DAA                     	;# 
  2651  0DAB                     	;# 
  2652  0DAC                     	;# 
  2653  0DAD                     	;# 
  2654  0DAE                     	;# 
  2655  0DAF                     	;# 
  2656  0E0F                     	;# 
  2657  0E10                     	;# 
  2658  0E11                     	;# 
  2659  0E12                     	;# 
  2660  0E13                     	;# 
  2661  0E14                     	;# 
  2662  0E15                     	;# 
  2663  0E16                     	;# 
  2664  0E17                     	;# 
  2665  0E18                     	;# 
  2666  0E19                     	;# 
  2667  0E1A                     	;# 
  2668  0E1B                     	;# 
  2669  0E1C                     	;# 
  2670  0E1D                     	;# 
  2671  0E1E                     	;# 
  2672  0E1F                     	;# 
  2673  0E20                     	;# 
  2674  0E21                     	;# 
  2675  0E22                     	;# 
  2676  0E23                     	;# 
  2677  0E24                     	;# 
  2678  0E25                     	;# 
  2679  0E26                     	;# 
  2680  0E27                     	;# 
  2681  0E28                     	;# 
  2682  0E29                     	;# 
  2683  0E2A                     	;# 
  2684  0E2B                     	;# 
  2685  0E2C                     	;# 
  2686  0E2D                     	;# 
  2687  0E2E                     	;# 
  2688  0E90                     	;# 
  2689  0E91                     	;# 
  2690  0E92                     	;# 
  2691  0E94                     	;# 
  2692  0E95                     	;# 
  2693  0E9C                     	;# 
  2694  0E9D                     	;# 
  2695  0E9E                     	;# 
  2696  0E9F                     	;# 
  2697  0EA0                     	;# 
  2698  0EA1                     	;# 
  2699  0EA2                     	;# 
  2700  0EA3                     	;# 
  2701  0EA4                     	;# 
  2702  0EA5                     	;# 
  2703  0EA6                     	;# 
  2704  0EA7                     	;# 
  2705  0F0F                     	;# 
  2706  0F10                     	;# 
  2707  0F11                     	;# 
  2708  0F12                     	;# 
  2709  0F13                     	;# 
  2710  0F14                     	;# 
  2711  0F15                     	;# 
  2712  0F16                     	;# 
  2713  0F17                     	;# 
  2714  0F18                     	;# 
  2715  0F19                     	;# 
  2716  0F1A                     	;# 
  2717  0F1B                     	;# 
  2718  0F1C                     	;# 
  2719  0F1D                     	;# 
  2720  0F1E                     	;# 
  2721  0F1F                     	;# 
  2722  0F20                     	;# 
  2723  0F21                     	;# 
  2724  0F22                     	;# 
  2725  0F23                     	;# 
  2726  0F24                     	;# 
  2727  0F25                     	;# 
  2728  0F26                     	;# 
  2729  0F27                     	;# 
  2730  0F28                     	;# 
  2731  0F29                     	;# 
  2732  0F2A                     	;# 
  2733  0F2B                     	;# 
  2734  0F2C                     	;# 
  2735  0F2D                     	;# 
  2736  0F2E                     	;# 
  2737  0F2F                     	;# 
  2738  0F30                     	;# 
  2739  0F31                     	;# 
  2740  0F32                     	;# 
  2741  0F33                     	;# 
  2742  0F34                     	;# 
  2743  0F35                     	;# 
  2744  0F36                     	;# 
  2745  0F37                     	;# 
  2746  0FE4                     	;# 
  2747  0FE5                     	;# 
  2748  0FE6                     	;# 
  2749  0FE7                     	;# 
  2750  0FE8                     	;# 
  2751  0FE9                     	;# 
  2752  0FEA                     	;# 
  2753  0FEB                     	;# 
  2754  0FED                     	;# 
  2755  0FEE                     	;# 
  2756  0FEF                     	;# 
  2757  0000                     	;# 
  2758  0001                     	;# 
  2759  0002                     	;# 
  2760  0003                     	;# 
  2761  0004                     	;# 
  2762  0005                     	;# 
  2763  0006                     	;# 
  2764  0007                     	;# 
  2765  0008                     	;# 
  2766  0009                     	;# 
  2767  000A                     	;# 
  2768  000B                     	;# 
  2769  000C                     	;# 
  2770  000D                     	;# 
  2771  000E                     	;# 
  2772  0010                     	;# 
  2773  0011                     	;# 
  2774  0012                     	;# 
  2775  0013                     	;# 
  2776  0014                     	;# 
  2777  0015                     	;# 
  2778  0016                     	;# 
  2779  0016                     	;# 
  2780  0017                     	;# 
  2781  0018                     	;# 
  2782  0019                     	;# 
  2783  001A                     	;# 
  2784  001A                     	;# 
  2785  001B                     	;# 
  2786  001B                     	;# 
  2787  001C                     	;# 
  2788  001D                     	;# 
  2789  001E                     	;# 
  2790  001F                     	;# 
  2791  008C                     	;# 
  2792  008D                     	;# 
  2793  008E                     	;# 
  2794  0090                     	;# 
  2795  0091                     	;# 
  2796  0092                     	;# 
  2797  0093                     	;# 
  2798  0094                     	;# 
  2799  0095                     	;# 
  2800  0096                     	;# 
  2801  0098                     	;# 
  2802  0099                     	;# 
  2803  009A                     	;# 
  2804  009B                     	;# 
  2805  009B                     	;# 
  2806  009C                     	;# 
  2807  009D                     	;# 
  2808  009E                     	;# 
  2809  009F                     	;# 
  2810  010C                     	;# 
  2811  010D                     	;# 
  2812  010E                     	;# 
  2813  0111                     	;# 
  2814  0112                     	;# 
  2815  0113                     	;# 
  2816  0114                     	;# 
  2817  0115                     	;# 
  2818  0116                     	;# 
  2819  0117                     	;# 
  2820  0118                     	;# 
  2821  0119                     	;# 
  2822  011C                     	;# 
  2823  018C                     	;# 
  2824  018D                     	;# 
  2825  018E                     	;# 
  2826  0191                     	;# 
  2827  0191                     	;# 
  2828  0192                     	;# 
  2829  0193                     	;# 
  2830  0193                     	;# 
  2831  0194                     	;# 
  2832  0195                     	;# 
  2833  0196                     	;# 
  2834  0197                     	;# 
  2835  0199                     	;# 
  2836  0199                     	;# 
  2837  0199                     	;# 
  2838  019A                     	;# 
  2839  019A                     	;# 
  2840  019A                     	;# 
  2841  019B                     	;# 
  2842  019B                     	;# 
  2843  019B                     	;# 
  2844  019B                     	;# 
  2845  019B                     	;# 
  2846  019C                     	;# 
  2847  019C                     	;# 
  2848  019C                     	;# 
  2849  019D                     	;# 
  2850  019D                     	;# 
  2851  019D                     	;# 
  2852  019E                     	;# 
  2853  019E                     	;# 
  2854  019E                     	;# 
  2855  019F                     	;# 
  2856  019F                     	;# 
  2857  019F                     	;# 
  2858  019F                     	;# 
  2859  019F                     	;# 
  2860  020C                     	;# 
  2861  020D                     	;# 
  2862  020E                     	;# 
  2863  0211                     	;# 
  2864  0211                     	;# 
  2865  0212                     	;# 
  2866  0212                     	;# 
  2867  0213                     	;# 
  2868  0213                     	;# 
  2869  0214                     	;# 
  2870  0214                     	;# 
  2871  0215                     	;# 
  2872  0215                     	;# 
  2873  0215                     	;# 
  2874  0215                     	;# 
  2875  0216                     	;# 
  2876  0216                     	;# 
  2877  0217                     	;# 
  2878  0217                     	;# 
  2879  028C                     	;# 
  2880  028D                     	;# 
  2881  028E                     	;# 
  2882  0291                     	;# 
  2883  0291                     	;# 
  2884  0292                     	;# 
  2885  0293                     	;# 
  2886  0294                     	;# 
  2887  0298                     	;# 
  2888  0298                     	;# 
  2889  0299                     	;# 
  2890  029A                     	;# 
  2891  029B                     	;# 
  2892  029E                     	;# 
  2893  030C                     	;# 
  2894  030D                     	;# 
  2895  030E                     	;# 
  2896  038C                     	;# 
  2897  038D                     	;# 
  2898  038E                     	;# 
  2899  0391                     	;# 
  2900  0392                     	;# 
  2901  0393                     	;# 
  2902  0394                     	;# 
  2903  0395                     	;# 
  2904  0396                     	;# 
  2905  0397                     	;# 
  2906  0398                     	;# 
  2907  0399                     	;# 
  2908  040E                     	;# 
  2909  0413                     	;# 
  2910  0413                     	;# 
  2911  0414                     	;# 
  2912  0414                     	;# 
  2913  0415                     	;# 
  2914  0416                     	;# 
  2915  0417                     	;# 
  2916  0418                     	;# 
  2917  041A                     	;# 
  2918  041A                     	;# 
  2919  041B                     	;# 
  2920  041B                     	;# 
  2921  041C                     	;# 
  2922  041D                     	;# 
  2923  041E                     	;# 
  2924  041F                     	;# 
  2925  0493                     	;# 
  2926  0494                     	;# 
  2927  0495                     	;# 
  2928  0496                     	;# 
  2929  049A                     	;# 
  2930  049B                     	;# 
  2931  049C                     	;# 
  2932  049D                     	;# 
  2933  058C                     	;# 
  2934  058C                     	;# 
  2935  058D                     	;# 
  2936  058E                     	;# 
  2937  058E                     	;# 
  2938  058F                     	;# 
  2939  0590                     	;# 
  2940  0590                     	;# 
  2941  0591                     	;# 
  2942  0592                     	;# 
  2943  0592                     	;# 
  2944  0593                     	;# 
  2945  0594                     	;# 
  2946  0594                     	;# 
  2947  0595                     	;# 
  2948  0596                     	;# 
  2949  0596                     	;# 
  2950  0597                     	;# 
  2951  0598                     	;# 
  2952  0599                     	;# 
  2953  059A                     	;# 
  2954  059B                     	;# 
  2955  059B                     	;# 
  2956  059C                     	;# 
  2957  059D                     	;# 
  2958  060C                     	;# 
  2959  060C                     	;# 
  2960  060D                     	;# 
  2961  060E                     	;# 
  2962  060F                     	;# 
  2963  060F                     	;# 
  2964  0610                     	;# 
  2965  0611                     	;# 
  2966  0612                     	;# 
  2967  0613                     	;# 
  2968  0614                     	;# 
  2969  0617                     	;# 
  2970  0617                     	;# 
  2971  0618                     	;# 
  2972  0619                     	;# 
  2973  061A                     	;# 
  2974  061A                     	;# 
  2975  061B                     	;# 
  2976  061C                     	;# 
  2977  0691                     	;# 
  2978  0692                     	;# 
  2979  0693                     	;# 
  2980  0694                     	;# 
  2981  0695                     	;# 
  2982  0696                     	;# 
  2983  0697                     	;# 
  2984  0699                     	;# 
  2985  069A                     	;# 
  2986  0711                     	;# 
  2987  0712                     	;# 
  2988  0713                     	;# 
  2989  0714                     	;# 
  2990  0715                     	;# 
  2991  0718                     	;# 
  2992  0718                     	;# 
  2993  0719                     	;# 
  2994  071A                     	;# 
  2995  071A                     	;# 
  2996  071B                     	;# 
  2997  071C                     	;# 
  2998  071D                     	;# 
  2999  0791                     	;# 
  3000  0791                     	;# 
  3001  0792                     	;# 
  3002  0793                     	;# 
  3003  0793                     	;# 
  3004  0794                     	;# 
  3005  0795                     	;# 
  3006  0795                     	;# 
  3007  0796                     	;# 
  3008  0797                     	;# 
  3009  0797                     	;# 
  3010  0798                     	;# 
  3011  0799                     	;# 
  3012  079A                     	;# 
  3013  080C                     	;# 
  3014  080C                     	;# 
  3015  080D                     	;# 
  3016  080E                     	;# 
  3017  080E                     	;# 
  3018  080F                     	;# 
  3019  0810                     	;# 
  3020  0810                     	;# 
  3021  0811                     	;# 
  3022  0812                     	;# 
  3023  0812                     	;# 
  3024  0813                     	;# 
  3025  0814                     	;# 
  3026  0815                     	;# 
  3027  0816                     	;# 
  3028  0817                     	;# 
  3029  0818                     	;# 
  3030  0819                     	;# 
  3031  081A                     	;# 
  3032  081A                     	;# 
  3033  081B                     	;# 
  3034  081C                     	;# 
  3035  081C                     	;# 
  3036  081D                     	;# 
  3037  088C                     	;# 
  3038  088D                     	;# 
  3039  088E                     	;# 
  3040  088F                     	;# 
  3041  088F                     	;# 
  3042  0890                     	;# 
  3043  0891                     	;# 
  3044  0892                     	;# 
  3045  0893                     	;# 
  3046  0893                     	;# 
  3047  0894                     	;# 
  3048  0895                     	;# 
  3049  0896                     	;# 
  3050  0897                     	;# 
  3051  0897                     	;# 
  3052  0898                     	;# 
  3053  0899                     	;# 
  3054  0D8C                     	;# 
  3055  0D8C                     	;# 
  3056  0D8D                     	;# 
  3057  0D8E                     	;# 
  3058  0D8F                     	;# 
  3059  0D8F                     	;# 
  3060  0D90                     	;# 
  3061  0D91                     	;# 
  3062  0D92                     	;# 
  3063  0D92                     	;# 
  3064  0D93                     	;# 
  3065  0D94                     	;# 
  3066  0D95                     	;# 
  3067  0D95                     	;# 
  3068  0D96                     	;# 
  3069  0D97                     	;# 
  3070  0D98                     	;# 
  3071  0D99                     	;# 
  3072  0D9A                     	;# 
  3073  0D9B                     	;# 
  3074  0D9C                     	;# 
  3075  0D9D                     	;# 
  3076  0D9E                     	;# 
  3077  0D9E                     	;# 
  3078  0D9F                     	;# 
  3079  0DA0                     	;# 
  3080  0DA1                     	;# 
  3081  0DA1                     	;# 
  3082  0DA2                     	;# 
  3083  0DA3                     	;# 
  3084  0DA4                     	;# 
  3085  0DA4                     	;# 
  3086  0DA5                     	;# 
  3087  0DA6                     	;# 
  3088  0DA7                     	;# 
  3089  0DA7                     	;# 
  3090  0DA8                     	;# 
  3091  0DA9                     	;# 
  3092  0DAA                     	;# 
  3093  0DAB                     	;# 
  3094  0DAC                     	;# 
  3095  0DAD                     	;# 
  3096  0DAE                     	;# 
  3097  0DAF                     	;# 
  3098  0E0F                     	;# 
  3099  0E10                     	;# 
  3100  0E11                     	;# 
  3101  0E12                     	;# 
  3102  0E13                     	;# 
  3103  0E14                     	;# 
  3104  0E15                     	;# 
  3105  0E16                     	;# 
  3106  0E17                     	;# 
  3107  0E18                     	;# 
  3108  0E19                     	;# 
  3109  0E1A                     	;# 
  3110  0E1B                     	;# 
  3111  0E1C                     	;# 
  3112  0E1D                     	;# 
  3113  0E1E                     	;# 
  3114  0E1F                     	;# 
  3115  0E20                     	;# 
  3116  0E21                     	;# 
  3117  0E22                     	;# 
  3118  0E23                     	;# 
  3119  0E24                     	;# 
  3120  0E25                     	;# 
  3121  0E26                     	;# 
  3122  0E27                     	;# 
  3123  0E28                     	;# 
  3124  0E29                     	;# 
  3125  0E2A                     	;# 
  3126  0E2B                     	;# 
  3127  0E2C                     	;# 
  3128  0E2D                     	;# 
  3129  0E2E                     	;# 
  3130  0E90                     	;# 
  3131  0E91                     	;# 
  3132  0E92                     	;# 
  3133  0E94                     	;# 
  3134  0E95                     	;# 
  3135  0E9C                     	;# 
  3136  0E9D                     	;# 
  3137  0E9E                     	;# 
  3138  0E9F                     	;# 
  3139  0EA0                     	;# 
  3140  0EA1                     	;# 
  3141  0EA2                     	;# 
  3142  0EA3                     	;# 
  3143  0EA4                     	;# 
  3144  0EA5                     	;# 
  3145  0EA6                     	;# 
  3146  0EA7                     	;# 
  3147  0F0F                     	;# 
  3148  0F10                     	;# 
  3149  0F11                     	;# 
  3150  0F12                     	;# 
  3151  0F13                     	;# 
  3152  0F14                     	;# 
  3153  0F15                     	;# 
  3154  0F16                     	;# 
  3155  0F17                     	;# 
  3156  0F18                     	;# 
  3157  0F19                     	;# 
  3158  0F1A                     	;# 
  3159  0F1B                     	;# 
  3160  0F1C                     	;# 
  3161  0F1D                     	;# 
  3162  0F1E                     	;# 
  3163  0F1F                     	;# 
  3164  0F20                     	;# 
  3165  0F21                     	;# 
  3166  0F22                     	;# 
  3167  0F23                     	;# 
  3168  0F24                     	;# 
  3169  0F25                     	;# 
  3170  0F26                     	;# 
  3171  0F27                     	;# 
  3172  0F28                     	;# 
  3173  0F29                     	;# 
  3174  0F2A                     	;# 
  3175  0F2B                     	;# 
  3176  0F2C                     	;# 
  3177  0F2D                     	;# 
  3178  0F2E                     	;# 
  3179  0F2F                     	;# 
  3180  0F30                     	;# 
  3181  0F31                     	;# 
  3182  0F32                     	;# 
  3183  0F33                     	;# 
  3184  0F34                     	;# 
  3185  0F35                     	;# 
  3186  0F36                     	;# 
  3187  0F37                     	;# 
  3188  0FE4                     	;# 
  3189  0FE5                     	;# 
  3190  0FE6                     	;# 
  3191  0FE7                     	;# 
  3192  0FE8                     	;# 
  3193  0FE9                     	;# 
  3194  0FEA                     	;# 
  3195  0FEB                     	;# 
  3196  0FED                     	;# 
  3197  0FEE                     	;# 
  3198  0FEF                     	;# 
  3199                           
  3200 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  3201  0000                     
  3202 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  3203  0000                     
  3204 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  3205  0000                     
  3206                           	psect	idataBANK2
  3207  0A8F                     __pidataBANK2:	
  3208                           
  3209                           ;initializer for _hrDisp
  3210  0A8F  3448               	retlw	72
  3211  0A90  3465               	retlw	101
  3212  0A91  3461               	retlw	97
  3213  0A92  3472               	retlw	114
  3214  0A93  3474               	retlw	116
  3215  0A94  3420               	retlw	32
  3216  0A95  3452               	retlw	82
  3217  0A96  3461               	retlw	97
  3218  0A97  3474               	retlw	116
  3219  0A98  3465               	retlw	101
  3220  0A99  343A               	retlw	58
  3221  0A9A  3420               	retlw	32
  3222  0A9B  3400               	retlw	0
  3223                           
  3224                           ;initializer for _distanceDisp
  3225  0A9C  3444               	retlw	68
  3226  0A9D  3469               	retlw	105
  3227  0A9E  3473               	retlw	115
  3228  0A9F  3474               	retlw	116
  3229  0AA0  3461               	retlw	97
  3230  0AA1  346E               	retlw	110
  3231  0AA2  3463               	retlw	99
  3232  0AA3  3465               	retlw	101
  3233  0AA4  343A               	retlw	58
  3234  0AA5  3420               	retlw	32
  3235  0AA6  3400               	retlw	0
  3236                           
  3237                           ;initializer for _speedDisp
  3238  0AA7  3453               	retlw	83
  3239  0AA8  3470               	retlw	112
  3240  0AA9  3465               	retlw	101
  3241  0AAA  3465               	retlw	101
  3242  0AAB  3464               	retlw	100
  3243  0AAC  343A               	retlw	58
  3244  0AAD  3420               	retlw	32
  3245  0AAE  3400               	retlw	0
  3246                           
  3247                           	psect	nvBANK0
  3248  005F                     __pnvBANK0:	
  3249  005F                     _timer0ReloadVal:	
  3250  005F                     	ds	1
  3251                           
  3252                           	psect	nvBANK2
  3253  0164                     __pnvBANK2:	
  3254  0164                     _TMR0_InterruptHandler:	
  3255  0164                     	ds	2
  3256  0166                     _IOCCF7_InterruptHandler:	
  3257  0166                     	ds	2
  3258  0168                     _EUSART_ErrorHandler:	
  3259  0168                     	ds	2
  3260  016A                     _EUSART_OverrunErrorHandler:	
  3261  016A                     	ds	2
  3262  016C                     _EUSART_FramingErrorHandler:	
  3263  016C                     	ds	2
  3264  0015                     _TMR0	set	21
  3265  000B                     _INTCONbits	set	11
  3266  0010                     _PIR1bits	set	16
  3267  0095                     _OPTION_REG	set	149
  3268  0095                     _OPTION_REGbits	set	149
  3269  008E                     _TRISC	set	142
  3270  008D                     _TRISB	set	141
  3271  008C                     _TRISA	set	140
  3272  0098                     _OSCTUNE	set	152
  3273  0099                     _OSCCON	set	153
  3274  010E                     _LATC	set	270
  3275  010D                     _LATB	set	269
  3276  010C                     _LATA	set	268
  3277  0116                     _BORCON	set	278
  3278  018C                     _ANSELA	set	396
  3279  018D                     _ANSELB	set	397
  3280  018E                     _ANSELC	set	398
  3281  019A                     _TX1REG	set	410
  3282  0199                     _RC1REG	set	409
  3283  019D                     _RC1STAbits	set	413
  3284  019E                     _TX1STAbits	set	414
  3285  019C                     _SPBRGH	set	412
  3286  019B                     _SPBRGL	set	411
  3287  019E                     _TX1STA	set	414
  3288  019D                     _RC1STA	set	413
  3289  019F                     _BAUD1CON	set	415
  3290  020E                     _WPUC	set	526
  3291  020C                     _WPUA	set	524
  3292  020D                     _WPUB	set	525
  3293  028E                     _ODCONC	set	654
  3294  028D                     _ODCONB	set	653
  3295  028C                     _ODCONA	set	652
  3296  030E                     _SLRCONC	set	782
  3297  030D                     _SLRCONB	set	781
  3298  030C                     _SLRCONA	set	780
  3299  0397                     _IOCCPbits	set	919
  3300  0398                     _IOCCNbits	set	920
  3301  0399                     _IOCCFbits	set	921
  3302  0E9F                     _RB7PPS	set	3743
  3303                           
  3304                           	psect	stringtext1
  3305  1000                     __pstringtext1:	
  3306  1000                     STR_2:	
  3307  1000  3425               	retlw	37	;'%'
  3308  1001  3464               	retlw	100	;'d'
  3309  1002  3420               	retlw	32	;' '
  3310  1003  346B               	retlw	107	;'k'
  3311  1004  346D               	retlw	109	;'m'
  3312  1005  3468               	retlw	104	;'h'
  3313  1006  3420               	retlw	32	;' '
  3314  1007  3420               	retlw	32	;' '
  3315  1008  3420               	retlw	32	;' '
  3316  1009  3420               	retlw	32	;' '
  3317  100A  3420               	retlw	32	;' '
  3318  100B  3420               	retlw	32	;' '
  3319  100C  3400               	retlw	0
  3320                           
  3321                           	psect	stringtext2
  3322  100D                     __pstringtext2:	
  3323  100D                     STR_1:	
  3324  100D  3430               	retlw	48	;'0'
  3325  100E  3420               	retlw	32	;' '
  3326  100F  346B               	retlw	107	;'k'
  3327  1010  346D               	retlw	109	;'m'
  3328  1011  3468               	retlw	104	;'h'
  3329  1012  3420               	retlw	32	;' '
  3330  1013  3420               	retlw	32	;' '
  3331  1014  3420               	retlw	32	;' '
  3332  1015  3420               	retlw	32	;' '
  3333  1016  3420               	retlw	32	;' '
  3334  1017  3420               	retlw	32	;' '
  3335  1018  3400               	retlw	0
  3336                           
  3337                           	psect	stringtext3
  3338  1019                     __pstringtext3:	
  3339  1019                     STR_3:	
  3340  1019  3425               	retlw	37	;'%'
  3341  101A  3464               	retlw	100	;'d'
  3342  101B  3420               	retlw	32	;' '
  3343  101C  346D               	retlw	109	;'m'
  3344  101D  3420               	retlw	32	;' '
  3345  101E  3420               	retlw	32	;' '
  3346  101F  3420               	retlw	32	;' '
  3347  1020  3420               	retlw	32	;' '
  3348  1021  3420               	retlw	32	;' '
  3349  1022  3400               	retlw	0
  3350                           
  3351                           	psect	stringtext4
  3352  1023                     __pstringtext4:	
  3353  1023                     STR_4:	
  3354  1023  3425               	retlw	37	;'%'
  3355  1024  3464               	retlw	100	;'d'
  3356  1025  3420               	retlw	32	;' '
  3357  1026  3462               	retlw	98	;'b'
  3358  1027  3470               	retlw	112	;'p'
  3359  1028  346D               	retlw	109	;'m'
  3360  1029  3420               	retlw	32	;' '
  3361  102A  3420               	retlw	32	;' '
  3362  102B  3420               	retlw	32	;' '
  3363  102C  3400               	retlw	0
  3364                           
  3365                           	psect	stringtext5
  3366  102D                     __pstringtext5:	
  3367  102D                     STR_5:	
  3368  102D  347C               	retlw	124	;'|'
  3369  102E  342D               	retlw	45	;'-'
  3370  102F  3400               	retlw	0
  3371                           
  3372                           	psect	stringtext6
  3373  0000                     __pstringtext6:	
  3374                           
  3375                           ; #config settings
  3376  0000                     
  3377                           	psect	cinit
  3378  0016                     start_initialization:	
  3379  0016                     __initialization:	
  3380                           
  3381                           ; Initialize objects allocated to BANK2
  3382  0016  308F               	movlw	low __pidataBANK2
  3383  0017  0084               	movwf	4
  3384  0018  308A               	movlw	(high __pidataBANK2)| (0+128)
  3385  0019  0085               	movwf	5
  3386  001A  3044               	movlw	low __pdataBANK2
  3387  001B  0086               	movwf	6
  3388  001C  3001               	movlw	high __pdataBANK2
  3389  001D  0087               	movwf	7
  3390  001E  3020               	movlw	32
  3391  001F  3189  2163  3180   	fcall	init_ram
  3392                           
  3393                           ; Clear objects allocated to BANK0
  3394  0022  3040               	movlw	low __pbssBANK0
  3395  0023  0084               	movwf	4
  3396  0024  3000               	movlw	high __pbssBANK0
  3397  0025  0085               	movwf	5
  3398  0026  301F               	movlw	31
  3399  0027  3189  215D  3180   	fcall	clear_ram0
  3400                           
  3401                           ; Clear objects allocated to BANK1
  3402  002A  0021               	movlb	1	; select bank1
  3403  002B  01EC               	clrf	__pbssBANK1& (0+127)
  3404  002C  01ED               	clrf	(__pbssBANK1+1)& (0+127)
  3405  002D  01EE               	clrf	(__pbssBANK1+2)& (0+127)
  3406  002E  01EF               	clrf	(__pbssBANK1+3)& (0+127)
  3407                           
  3408                           ; Clear objects allocated to BANK2
  3409  002F  3020               	movlw	low __pbssBANK2
  3410  0030  0084               	movwf	4
  3411  0031  3001               	movlw	high __pbssBANK2
  3412  0032  0085               	movwf	5
  3413  0033  3024               	movlw	36
  3414  0034  3189  215D         	fcall	clear_ram0
  3415  0036                     end_of_initialization:	
  3416                           ;End of C runtime variable initialization code
  3417                           
  3418  0036                     __end_of__initialization:	
  3419  0036  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3420  0037  0020               	movlb	0
  3421  0038  3186  2EA3         	ljmp	_main	;jump to C main() function
  3422                           
  3423                           	psect	bssBANK0
  3424  0040                     __pbssBANK0:	
  3425  0040                     _distance:	
  3426  0040                     	ds	4
  3427  0044                     _speed:	
  3428  0044                     	ds	4
  3429  0048                     _adcCounter:	
  3430  0048                     	ds	4
  3431  004C                     _nout:	
  3432  004C                     	ds	2
  3433  004E                     _width:	
  3434  004E                     	ds	2
  3435  0050                     _hrInt:	
  3436  0050                     	ds	2
  3437  0052                     _distInt:	
  3438  0052                     	ds	2
  3439  0054                     _speedInt:	
  3440  0054                     	ds	2
  3441  0056                     _eusartRxLastError:	
  3442  0056                     	ds	1
  3443  0057                     _rpm:	
  3444  0057                     	ds	4
  3445  005B                     _counter:	
  3446  005B                     	ds	4
  3447                           
  3448                           	psect	bssBANK1
  3449  00EC                     __pbssBANK1:	
  3450  00EC                     _prec:	
  3451  00EC                     	ds	2
  3452  00EE                     _flags:	
  3453  00EE                     	ds	2
  3454                           
  3455                           	psect	bssBANK2
  3456  0120                     __pbssBANK2:	
  3457  0120                     _heartRate:	
  3458  0120                     	ds	4
  3459  0124                     _dbuf:	
  3460  0124                     	ds	32
  3461                           
  3462                           	psect	dataBANK2
  3463  0144                     __pdataBANK2:	
  3464  0144                     _hrDisp:	
  3465  0144                     	ds	13
  3466  0151                     _distanceDisp:	
  3467  0151                     	ds	11
  3468  015C                     _speedDisp:	
  3469  015C                     	ds	8
  3470                           
  3471                           	psect	inittext
  3472  0963                     init_ram:	
  3473  0963  00FE               	movwf	126
  3474  0964                     initloop:	
  3475  0964  0012               	moviw fsr0++
  3476  0965  001E               	movwi fsr1++
  3477  0966  0BFE               	decfsz	126,f
  3478  0967  2964               	goto	initloop
  3479  0968  3400               	retlw	0
  3480                           
  3481                           	psect	clrtext
  3482  095D                     clear_ram0:	
  3483                           ;	Called with FSR0 containing the base address, and
  3484                           ;	WREG with the size to clear
  3485                           
  3486  095D  0064               	clrwdt	;clear the watchdog before getting into this loop
  3487  095E                     clrloop0:	
  3488  095E  0180               	clrf	0	;clear RAM location pointed to by FSR
  3489  095F  3101               	addfsr 0,1
  3490  0960  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3491  0961  295E               	goto	clrloop0	;have we reached the end yet?
  3492  0962  3400               	retlw	0	;all done for this memory range, return
  3493                           
  3494                           	psect	cstackBANK3
  3495  01A0                     __pcstackBANK3:	
  3496  01A0                     ?_vfprintf:	
  3497  01A0                     vfprintf@fmt:	
  3498                           ; 2 bytes @ 0x0
  3499                           
  3500                           
  3501                           ; 2 bytes @ 0x0
  3502  01A0                     	ds	2
  3503  01A2                     vfprintf@ap:	
  3504                           
  3505                           ; 1 bytes @ 0x2
  3506  01A2                     	ds	1
  3507  01A3                     vfprintf@fp:	
  3508                           
  3509                           ; 1 bytes @ 0x3
  3510  01A3                     	ds	1
  3511  01A4                     vfprintf@cfmt:	
  3512                           
  3513                           ; 2 bytes @ 0x4
  3514  01A4                     	ds	2
  3515  01A6                     ?_printf:	
  3516  01A6                     printf@fmt:	
  3517                           ; 2 bytes @ 0x6
  3518                           
  3519                           
  3520                           ; 2 bytes @ 0x6
  3521  01A6                     	ds	4
  3522  01AA                     ??_printf:	
  3523                           
  3524                           ; 1 bytes @ 0xA
  3525  01AA                     	ds	3
  3526  01AD                     printf@ap:	
  3527                           
  3528                           ; 1 bytes @ 0xD
  3529  01AD                     	ds	1
  3530  01AE                     ??_main:	
  3531                           
  3532                           ; 1 bytes @ 0xE
  3533  01AE                     	ds	1
  3534                           
  3535                           	psect	cstackBANK2
  3536  016E                     __pcstackBANK2:	
  3537  016E                     ??_vfprintf:	
  3538                           
  3539                           ; 1 bytes @ 0x0
  3540  016E                     	ds	2
  3541                           
  3542                           	psect	cstackBANK1
  3543  00A0                     __pcstackBANK1:	
  3544  00A0                     ?_EUSART_SetFramingErrorHandler:	
  3545  00A0                     ?_EUSART_SetOverrunErrorHandler:	
  3546                           ; 1 bytes @ 0x0
  3547                           
  3548  00A0                     ?_EUSART_SetErrorHandler:	
  3549                           ; 1 bytes @ 0x0
  3550                           
  3551  00A0                     ??_OSCILLATOR_Initialize:	
  3552                           ; 1 bytes @ 0x0
  3553                           
  3554  00A0                     ?_IOCCF7_SetInterruptHandler:	
  3555                           ; 1 bytes @ 0x0
  3556                           
  3557  00A0                     ?_TMR0_SetInterruptHandler:	
  3558                           ; 1 bytes @ 0x0
  3559                           
  3560  00A0                     ??_EUSART_is_tx_ready:	
  3561                           ; 1 bytes @ 0x0
  3562                           
  3563  00A0                     ??_EUSART_Write:	
  3564                           ; 1 bytes @ 0x0
  3565                           
  3566  00A0                     ?_strlen:	
  3567                           ; 1 bytes @ 0x0
  3568                           
  3569  00A0                     ?___fltol:	
  3570                           ; 2 bytes @ 0x0
  3571                           
  3572  00A0                     ?___aodiv:	
  3573                           ; 4 bytes @ 0x0
  3574                           
  3575  00A0                     ?___aomod:	
  3576                           ; 8 bytes @ 0x0
  3577                           
  3578  00A0                     _EUSART_is_tx_ready$167:	
  3579                           ; 8 bytes @ 0x0
  3580                           
  3581  00A0                     EUSART_Write@txData:	
  3582                           ; 1 bytes @ 0x0
  3583                           
  3584  00A0                     EUSART_SetFramingErrorHandler@interruptHandler:	
  3585                           ; 1 bytes @ 0x0
  3586                           
  3587  00A0                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  3588                           ; 2 bytes @ 0x0
  3589                           
  3590  00A0                     EUSART_SetErrorHandler@interruptHandler:	
  3591                           ; 2 bytes @ 0x0
  3592                           
  3593  00A0                     IOCCF7_SetInterruptHandler@InterruptHandler:	
  3594                           ; 2 bytes @ 0x0
  3595                           
  3596  00A0                     TMR0_SetInterruptHandler@InterruptHandler:	
  3597                           ; 2 bytes @ 0x0
  3598                           
  3599  00A0                     ___fltol@f1:	
  3600                           ; 2 bytes @ 0x0
  3601                           
  3602  00A0                     ___aodiv@divisor:	
  3603                           ; 4 bytes @ 0x0
  3604                           
  3605  00A0                     ___aomod@divisor:	
  3606                           ; 8 bytes @ 0x0
  3607                           
  3608                           
  3609                           ; 8 bytes @ 0x0
  3610  00A0                     	ds	1
  3611  00A1                     ?_setCursor:	
  3612  00A1                     ??_putch:	
  3613                           ; 1 bytes @ 0x1
  3614                           
  3615  00A1                     putch@txData:	
  3616                           ; 1 bytes @ 0x1
  3617                           
  3618  00A1                     setCursor@b:	
  3619                           ; 1 bytes @ 0x1
  3620                           
  3621                           
  3622                           ; 1 bytes @ 0x1
  3623  00A1                     	ds	1
  3624  00A2                     ??_EUSART_SetFramingErrorHandler:	
  3625  00A2                     ??_EUSART_SetOverrunErrorHandler:	
  3626                           ; 1 bytes @ 0x2
  3627                           
  3628  00A2                     ??_EUSART_SetErrorHandler:	
  3629                           ; 1 bytes @ 0x2
  3630                           
  3631  00A2                     ??_PIN_MANAGER_Initialize:	
  3632                           ; 1 bytes @ 0x2
  3633                           
  3634  00A2                     ??_TMR0_Initialize:	
  3635                           ; 1 bytes @ 0x2
  3636                           
  3637  00A2                     ??_IOCCF7_SetInterruptHandler:	
  3638                           ; 1 bytes @ 0x2
  3639                           
  3640  00A2                     ??_TMR0_SetInterruptHandler:	
  3641                           ; 1 bytes @ 0x2
  3642                           
  3643  00A2                     ??_setCursor:	
  3644                           ; 1 bytes @ 0x2
  3645                           
  3646  00A2                     ??_strlen:	
  3647                           ; 1 bytes @ 0x2
  3648                           
  3649  00A2                     ??_EUSART_Initialize:	
  3650                           ; 1 bytes @ 0x2
  3651                           
  3652  00A2                     ?_fputc:	
  3653                           ; 1 bytes @ 0x2
  3654                           
  3655  00A2                     fputc@c:	
  3656                           ; 2 bytes @ 0x2
  3657                           
  3658                           
  3659                           ; 2 bytes @ 0x2
  3660  00A2                     	ds	1
  3661  00A3                     ??_SYSTEM_Initialize:	
  3662  00A3                     strlen@a:	
  3663                           ; 1 bytes @ 0x3
  3664                           
  3665                           
  3666                           ; 1 bytes @ 0x3
  3667  00A3                     	ds	1
  3668  00A4                     ??___fltol:	
  3669  00A4                     setCursor@a:	
  3670                           ; 1 bytes @ 0x4
  3671                           
  3672  00A4                     fputc@fp:	
  3673                           ; 1 bytes @ 0x4
  3674                           
  3675  00A4                     strlen@s:	
  3676                           ; 1 bytes @ 0x4
  3677                           
  3678                           
  3679                           ; 1 bytes @ 0x4
  3680  00A4                     	ds	1
  3681  00A5                     ??_fputc:	
  3682                           
  3683                           ; 1 bytes @ 0x5
  3684  00A5                     	ds	3
  3685  00A8                     ___aodiv@dividend:	
  3686  00A8                     ___aomod@dividend:	
  3687                           ; 8 bytes @ 0x8
  3688                           
  3689                           
  3690                           ; 8 bytes @ 0x8
  3691  00A8                     	ds	1
  3692  00A9                     ___fltol@sign1:	
  3693                           
  3694                           ; 1 bytes @ 0x9
  3695  00A9                     	ds	1
  3696  00AA                     ?_fputs:	
  3697  00AA                     ___fltol@exp1:	
  3698                           ; 2 bytes @ 0xA
  3699                           
  3700  00AA                     fputs@s:	
  3701                           ; 1 bytes @ 0xA
  3702                           
  3703                           
  3704                           ; 2 bytes @ 0xA
  3705  00AA                     	ds	2
  3706  00AC                     fputs@fp:	
  3707                           
  3708                           ; 1 bytes @ 0xC
  3709  00AC                     	ds	1
  3710  00AD                     ??_fputs:	
  3711                           
  3712                           ; 1 bytes @ 0xD
  3713  00AD                     	ds	3
  3714  00B0                     ??___aodiv:	
  3715  00B0                     ??___aomod:	
  3716                           ; 1 bytes @ 0x10
  3717                           
  3718  00B0                     fputs@c:	
  3719                           ; 1 bytes @ 0x10
  3720                           
  3721                           
  3722                           ; 1 bytes @ 0x10
  3723  00B0                     	ds	1
  3724  00B1                     ___aodiv@counter:	
  3725  00B1                     ___aomod@counter:	
  3726                           ; 1 bytes @ 0x11
  3727                           
  3728  00B1                     fputs@i:	
  3729                           ; 1 bytes @ 0x11
  3730                           
  3731                           
  3732                           ; 2 bytes @ 0x11
  3733  00B1                     	ds	1
  3734  00B2                     ___aodiv@sign:	
  3735  00B2                     ___aomod@sign:	
  3736                           ; 1 bytes @ 0x12
  3737                           
  3738                           
  3739                           ; 1 bytes @ 0x12
  3740  00B2                     	ds	1
  3741  00B3                     ?_puts:	
  3742  00B3                     ?_abs:	
  3743                           ; 2 bytes @ 0x13
  3744                           
  3745  00B3                     ?_pad:	
  3746                           ; 2 bytes @ 0x13
  3747                           
  3748  00B3                     pad@buf:	
  3749                           ; 2 bytes @ 0x13
  3750                           
  3751  00B3                     abs@a:	
  3752                           ; 1 bytes @ 0x13
  3753                           
  3754  00B3                     puts@s:	
  3755                           ; 2 bytes @ 0x13
  3756                           
  3757  00B3                     ___aodiv@quotient:	
  3758                           ; 2 bytes @ 0x13
  3759                           
  3760                           
  3761                           ; 8 bytes @ 0x13
  3762  00B3                     	ds	1
  3763  00B4                     pad@p:	
  3764                           
  3765                           ; 2 bytes @ 0x14
  3766  00B4                     	ds	1
  3767  00B5                     ??_puts:	
  3768  00B5                     ??_abs:	
  3769                           ; 1 bytes @ 0x15
  3770                           
  3771                           
  3772                           ; 1 bytes @ 0x15
  3773  00B5                     	ds	1
  3774  00B6                     ??_pad:	
  3775                           
  3776                           ; 1 bytes @ 0x16
  3777  00B6                     	ds	1
  3778  00B7                     _puts$1041:	
  3779  00B7                     pad@i:	
  3780                           ; 1 bytes @ 0x17
  3781                           
  3782                           
  3783                           ; 2 bytes @ 0x17
  3784  00B7                     	ds	1
  3785  00B8                     ??_resetCursor:	
  3786  00B8                     ??_writeString:	
  3787                           ; 1 bytes @ 0x18
  3788                           
  3789  00B8                     writeString@string:	
  3790                           ; 1 bytes @ 0x18
  3791                           
  3792                           
  3793                           ; 1 bytes @ 0x18
  3794  00B8                     	ds	1
  3795  00B9                     pad@w:	
  3796                           
  3797                           ; 2 bytes @ 0x19
  3798  00B9                     	ds	2
  3799  00BB                     pad@fp:	
  3800                           
  3801                           ; 1 bytes @ 0x1B
  3802  00BB                     	ds	1
  3803  00BC                     ?_dtoa:	
  3804  00BC                     dtoa@d:	
  3805                           ; 2 bytes @ 0x1C
  3806                           
  3807                           
  3808                           ; 8 bytes @ 0x1C
  3809  00BC                     	ds	8
  3810  00C4                     ??_dtoa:	
  3811                           
  3812                           ; 1 bytes @ 0x24
  3813  00C4                     	ds	3
  3814  00C7                     _dtoa$695:	
  3815                           
  3816                           ; 2 bytes @ 0x27
  3817  00C7                     	ds	2
  3818  00C9                     dtoa@fp:	
  3819                           
  3820                           ; 1 bytes @ 0x29
  3821  00C9                     	ds	1
  3822  00CA                     dtoa@p:	
  3823                           
  3824                           ; 2 bytes @ 0x2A
  3825  00CA                     	ds	2
  3826  00CC                     dtoa@w:	
  3827                           
  3828                           ; 2 bytes @ 0x2C
  3829  00CC                     	ds	2
  3830  00CE                     dtoa@s:	
  3831                           
  3832                           ; 2 bytes @ 0x2E
  3833  00CE                     	ds	2
  3834  00D0                     dtoa@n:	
  3835                           
  3836                           ; 8 bytes @ 0x30
  3837  00D0                     	ds	8
  3838  00D8                     dtoa@i:	
  3839                           
  3840                           ; 2 bytes @ 0x38
  3841  00D8                     	ds	2
  3842  00DA                     ?_vfpfcnvrt:	
  3843  00DA                     vfpfcnvrt@fmt:	
  3844                           ; 2 bytes @ 0x3A
  3845                           
  3846                           
  3847                           ; 1 bytes @ 0x3A
  3848  00DA                     	ds	1
  3849  00DB                     vfpfcnvrt@ap:	
  3850                           
  3851                           ; 1 bytes @ 0x3B
  3852  00DB                     	ds	1
  3853  00DC                     ??_vfpfcnvrt:	
  3854                           
  3855                           ; 1 bytes @ 0x3C
  3856  00DC                     	ds	5
  3857  00E1                     vfpfcnvrt@ll:	
  3858                           
  3859                           ; 8 bytes @ 0x41
  3860  00E1                     	ds	8
  3861  00E9                     vfpfcnvrt@vp:	
  3862                           
  3863                           ; 2 bytes @ 0x49
  3864  00E9                     	ds	2
  3865  00EB                     vfpfcnvrt@fp:	
  3866                           
  3867                           ; 1 bytes @ 0x4B
  3868  00EB                     	ds	1
  3869                           
  3870                           	psect	cstackCOMMON
  3871  0070                     __pcstackCOMMON:	
  3872  0070                     ?_PIN_MANAGER_Initialize:	
  3873  0070                     ?_OSCILLATOR_Initialize:	
  3874                           ; 1 bytes @ 0x0
  3875                           
  3876  0070                     ?_TMR0_Initialize:	
  3877                           ; 1 bytes @ 0x0
  3878                           
  3879  0070                     ?_IOCCF7_DefaultInterruptHandler:	
  3880                           ; 1 bytes @ 0x0
  3881                           
  3882  0070                     ??_IOCCF7_DefaultInterruptHandler:	
  3883                           ; 1 bytes @ 0x0
  3884                           
  3885  0070                     ?_IOCCF7_ISR:	
  3886                           ; 1 bytes @ 0x0
  3887                           
  3888  0070                     ?_TMR0_DefaultInterruptHandler:	
  3889                           ; 1 bytes @ 0x0
  3890                           
  3891  0070                     ??_TMR0_DefaultInterruptHandler:	
  3892                           ; 1 bytes @ 0x0
  3893                           
  3894  0070                     ?_timerISR:	
  3895                           ; 1 bytes @ 0x0
  3896                           
  3897  0070                     ??_timerISR:	
  3898                           ; 1 bytes @ 0x0
  3899                           
  3900  0070                     ?_speedCalc:	
  3901                           ; 1 bytes @ 0x0
  3902                           
  3903  0070                     ?_resetCursor:	
  3904                           ; 1 bytes @ 0x0
  3905                           
  3906  0070                     ?_writeString:	
  3907                           ; 1 bytes @ 0x0
  3908                           
  3909  0070                     ?_EUSART_Initialize:	
  3910                           ; 1 bytes @ 0x0
  3911                           
  3912  0070                     ?_EUSART_is_tx_ready:	
  3913                           ; 1 bytes @ 0x0
  3914                           
  3915  0070                     ?_EUSART_Write:	
  3916                           ; 1 bytes @ 0x0
  3917                           
  3918  0070                     ?_putch:	
  3919                           ; 1 bytes @ 0x0
  3920                           
  3921  0070                     ?_SYSTEM_Initialize:	
  3922                           ; 1 bytes @ 0x0
  3923                           
  3924  0070                     ?_PIN_MANAGER_IOC:	
  3925                           ; 1 bytes @ 0x0
  3926                           
  3927  0070                     ?_TMR0_ISR:	
  3928                           ; 1 bytes @ 0x0
  3929                           
  3930  0070                     ??_TMR0_ISR:	
  3931                           ; 1 bytes @ 0x0
  3932                           
  3933  0070                     ?_INTERRUPT_InterruptManager:	
  3934                           ; 1 bytes @ 0x0
  3935                           
  3936  0070                     ?_main:	
  3937                           ; 1 bytes @ 0x0
  3938                           
  3939  0070                     ?__Umul8_16:	
  3940                           ; 1 bytes @ 0x0
  3941                           
  3942  0070                     ?___aldiv:	
  3943                           ; 2 bytes @ 0x0
  3944                           
  3945  0070                     ?___fladd:	
  3946                           ; 4 bytes @ 0x0
  3947                           
  3948  0070                     __Umul8_16@multiplicand:	
  3949                           ; 4 bytes @ 0x0
  3950                           
  3951  0070                     ___aldiv@divisor:	
  3952                           ; 1 bytes @ 0x0
  3953                           
  3954  0070                     ___fladd@b:	
  3955                           ; 4 bytes @ 0x0
  3956                           
  3957                           
  3958                           ; 4 bytes @ 0x0
  3959  0070                     	ds	2
  3960  0072                     ??__Umul8_16:	
  3961                           
  3962                           ; 1 bytes @ 0x2
  3963  0072                     	ds	2
  3964  0074                     __Umul8_16@product:	
  3965  0074                     ___aldiv@dividend:	
  3966                           ; 2 bytes @ 0x4
  3967                           
  3968  0074                     ___fladd@a:	
  3969                           ; 4 bytes @ 0x4
  3970                           
  3971                           
  3972                           ; 4 bytes @ 0x4
  3973  0074                     	ds	2
  3974  0076                     __Umul8_16@word_mpld:	
  3975                           
  3976                           ; 2 bytes @ 0x6
  3977  0076                     	ds	2
  3978  0078                     ??___aldiv:	
  3979  0078                     ___fladd@signs:	
  3980                           ; 1 bytes @ 0x8
  3981                           
  3982  0078                     __Umul8_16@multiplier:	
  3983                           ; 1 bytes @ 0x8
  3984                           
  3985                           
  3986                           ; 1 bytes @ 0x8
  3987  0078                     	ds	1
  3988  0079                     ??___lmul:	
  3989  0079                     ??___flmul:	
  3990                           ; 1 bytes @ 0x9
  3991                           
  3992  0079                     ___fladd@aexp:	
  3993                           ; 1 bytes @ 0x9
  3994                           
  3995  0079                     ___lmul@product:	
  3996                           ; 1 bytes @ 0x9
  3997                           
  3998                           
  3999                           ; 4 bytes @ 0x9
  4000  0079                     	ds	1
  4001  007A                     ___fladd@bexp:	
  4002                           
  4003                           ; 1 bytes @ 0xA
  4004  007A                     	ds	1
  4005  007B                     ___fladd@grs:	
  4006                           
  4007                           ; 1 bytes @ 0xB
  4008  007B                     	ds	3
  4009  007E                     ??_IOCCF7_ISR:	
  4010  007E                     ??_speedCalc:	
  4011                           ; 1 bytes @ 0xE
  4012                           
  4013  007E                     ??_PIN_MANAGER_IOC:	
  4014                           ; 1 bytes @ 0xE
  4015                           
  4016  007E                     ??_INTERRUPT_InterruptManager:	
  4017                           ; 1 bytes @ 0xE
  4018                           
  4019                           
  4020                           	psect	cstackBANK0
  4021  0020                     __pcstackBANK0:	
  4022                           ; 1 bytes @ 0xE
  4023                           
  4024  0020                     ??___fladd:	
  4025  0020                     ?___flmul:	
  4026                           ; 1 bytes @ 0x0
  4027                           
  4028  0020                     ___aldiv@counter:	
  4029                           ; 4 bytes @ 0x0
  4030                           
  4031  0020                     ___flmul@b:	
  4032                           ; 1 bytes @ 0x0
  4033                           
  4034                           
  4035                           ; 4 bytes @ 0x0
  4036  0020                     	ds	1
  4037  0021                     ___aldiv@sign:	
  4038                           
  4039                           ; 1 bytes @ 0x1
  4040  0021                     	ds	1
  4041  0022                     ___aldiv@quotient:	
  4042                           
  4043                           ; 4 bytes @ 0x2
  4044  0022                     	ds	2
  4045  0024                     ___flmul@a:	
  4046                           
  4047                           ; 4 bytes @ 0x4
  4048  0024                     	ds	2
  4049  0026                     ?___lmul:	
  4050  0026                     ___lmul@multiplier:	
  4051                           ; 4 bytes @ 0x6
  4052                           
  4053                           
  4054                           ; 4 bytes @ 0x6
  4055  0026                     	ds	2
  4056  0028                     ___flmul@sign:	
  4057                           
  4058                           ; 1 bytes @ 0x8
  4059  0028                     	ds	1
  4060  0029                     ___flmul@grs:	
  4061                           
  4062                           ; 4 bytes @ 0x9
  4063  0029                     	ds	1
  4064  002A                     ___lmul@multiplicand:	
  4065                           
  4066                           ; 4 bytes @ 0xA
  4067  002A                     	ds	3
  4068  002D                     ___flmul@aexp:	
  4069                           
  4070                           ; 1 bytes @ 0xD
  4071  002D                     	ds	1
  4072  002E                     ?___xxtofl:	
  4073  002E                     ___flmul@bexp:	
  4074                           ; 4 bytes @ 0xE
  4075                           
  4076  002E                     ___xxtofl@val:	
  4077                           ; 1 bytes @ 0xE
  4078                           
  4079                           
  4080                           ; 4 bytes @ 0xE
  4081  002E                     	ds	1
  4082  002F                     ___flmul@prod:	
  4083                           
  4084                           ; 4 bytes @ 0xF
  4085  002F                     	ds	3
  4086  0032                     ??___xxtofl:	
  4087                           
  4088                           ; 1 bytes @ 0x12
  4089  0032                     	ds	1
  4090  0033                     ___flmul@temp:	
  4091                           
  4092                           ; 2 bytes @ 0x13
  4093  0033                     	ds	3
  4094  0036                     ___xxtofl@sign:	
  4095                           
  4096                           ; 1 bytes @ 0x16
  4097  0036                     	ds	1
  4098  0037                     ___xxtofl@exp:	
  4099                           
  4100                           ; 1 bytes @ 0x17
  4101  0037                     	ds	1
  4102  0038                     ___xxtofl@arg:	
  4103                           
  4104                           ; 4 bytes @ 0x18
  4105  0038                     	ds	4
  4106  003C                     _speedCalc$1222:	
  4107                           
  4108                           ; 4 bytes @ 0x1C
  4109  003C                     	ds	4
  4110                           
  4111                           	psect	maintext
  4112  06A3                     __pmaintext:	
  4113 ;;
  4114 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  4115 ;;
  4116 ;; *************** function _main *****************
  4117 ;; Defined at:
  4118 ;;		line 32 in file "main.c"
  4119 ;; Parameters:    Size  Location     Type
  4120 ;;		None
  4121 ;; Auto vars:     Size  Location     Type
  4122 ;;		None
  4123 ;; Return value:  Size  Location     Type
  4124 ;;                  1    wreg      void 
  4125 ;; Registers used:
  4126 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4127 ;; Tracked objects:
  4128 ;;		On entry : B1F/0
  4129 ;;		On exit  : 0/0
  4130 ;;		Unchanged: 0/0
  4131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4134 ;;      Temps:          0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0
  4135 ;;      Totals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0
  4136 ;;Total ram usage:        1 bytes
  4137 ;; Hardware stack levels required when called:   15
  4138 ;; This function calls:
  4139 ;;		_EUSART_Write
  4140 ;;		_IOCCF7_SetInterruptHandler
  4141 ;;		_SYSTEM_Initialize
  4142 ;;		_TMR0_SetInterruptHandler
  4143 ;;		___fltol
  4144 ;;		_printf
  4145 ;;		_resetCursor
  4146 ;;		_setCursor
  4147 ;;		_writeString
  4148 ;; This function is called by:
  4149 ;;		Startup code after reset
  4150 ;; This function uses a non-reentrant model
  4151 ;;
  4152                           
  4153                           
  4154                           ;psect for function _main
  4155  06A3                     _main:	
  4156                           
  4157                           ;main.c: 35:     SYSTEM_Initialize();
  4158                           
  4159                           ;incstack = 0
  4160                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4161  06A3  3189  21AF  3186   	fcall	_SYSTEM_Initialize
  4162                           
  4163                           ;main.c: 37:     EUSART_Write( 0x7C ) ;
  4164  06A6  307C               	movlw	124
  4165  06A7  3189  21A5  3186   	fcall	_EUSART_Write
  4166                           
  4167                           ;main.c: 38:     EUSART_Write( 0x0D ) ;
  4168  06AA  300D               	movlw	13
  4169  06AB  3189  21A5  3186   	fcall	_EUSART_Write
  4170                           
  4171                           ;main.c: 41:     TMR0_SetInterruptHandler( timerISR ) ;
  4172  06AE  30EE               	movlw	low _timerISR
  4173  06AF  0021               	movlb	1	; select bank1
  4174  06B0  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler^(0+128)
  4175  06B1  3007               	movlw	high _timerISR
  4176  06B2  00A1               	movwf	(TMR0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  4177  06B3  3189  219C  3186   	fcall	_TMR0_SetInterruptHandler
  4178                           
  4179                           ;main.c: 42:     IOCCF7_SetInterruptHandler( speedCalc ) ;
  4180  06B6  3090               	movlw	low _speedCalc
  4181  06B7  0021               	movlb	1	; select bank1
  4182  06B8  00A0               	movwf	IOCCF7_SetInterruptHandler@InterruptHandler^(0+128)
  4183  06B9  300D               	movlw	high _speedCalc
  4184  06BA  00A1               	movwf	(IOCCF7_SetInterruptHandler@InterruptHandler^(0+128)+1)
  4185  06BB  3189  2193  3186   	fcall	_IOCCF7_SetInterruptHandler
  4186                           
  4187                           ;main.c: 45:     resetCursor() ;
  4188  06BE  3189  2170  3186   	fcall	_resetCursor
  4189                           
  4190                           ;main.c: 48:     setCursor(1,0) ;
  4191  06C1  0021               	movlb	1	; select bank1
  4192  06C2  01A1               	clrf	setCursor@b^(0+128)
  4193  06C3  3001               	movlw	1
  4194  06C4  318B  2395  3186   	fcall	_setCursor
  4195                           
  4196                           ;main.c: 49:     writeString(speedDisp);
  4197  06C7  305C               	movlw	(low (_speedDisp| (0+256)))& (0+255)
  4198  06C8  3189  21F6  3186   	fcall	_writeString
  4199                           
  4200                           ;main.c: 50:     setCursor(2,0) ;
  4201  06CB  0021               	movlb	1	; select bank1
  4202  06CC  01A1               	clrf	setCursor@b^(0+128)
  4203  06CD  3002               	movlw	2
  4204  06CE  318B  2395  3186   	fcall	_setCursor
  4205                           
  4206                           ;main.c: 51:     writeString(distanceDisp);
  4207  06D1  3051               	movlw	(low (_distanceDisp| (0+256)))& (0+255)
  4208  06D2  3189  21F6  3186   	fcall	_writeString
  4209                           
  4210                           ;main.c: 52:     setCursor(3,0) ;
  4211  06D5  0021               	movlb	1	; select bank1
  4212  06D6  01A1               	clrf	setCursor@b^(0+128)
  4213  06D7  3003               	movlw	3
  4214  06D8  318B  2395  3186   	fcall	_setCursor
  4215                           
  4216                           ;main.c: 53:     writeString(hrDisp);
  4217  06DB  3044               	movlw	(low (_hrDisp| (0+256)))& (0+255)
  4218  06DC  3189  21F6  3186   	fcall	_writeString
  4219                           
  4220                           ;main.c: 54:     setCursor(4,0) ;
  4221  06DF  0021               	movlb	1	; select bank1
  4222  06E0  01A1               	clrf	setCursor@b^(0+128)
  4223  06E1  3004               	movlw	4
  4224  06E2  318B  2395  3186   	fcall	_setCursor
  4225                           
  4226                           ;main.c: 57:     (INTCONbits.GIE = 1);
  4227  06E5  178B               	bsf	11,7	;volatile
  4228                           
  4229                           ;main.c: 58:     (INTCONbits.PEIE = 1);
  4230  06E6  170B               	bsf	11,6	;volatile
  4231  06E7                     l3755:	
  4232                           
  4233                           ;main.c: 72:         setCursor(1,7) ;
  4234  06E7  3007               	movlw	7
  4235  06E8  0023               	movlb	3	; select bank3
  4236  06E9  00AE               	movwf	??_main^(0+384)
  4237  06EA  082E               	movf	??_main^(0+384),w
  4238  06EB  0021               	movlb	1	; select bank1
  4239  06EC  00A1               	movwf	setCursor@b^(0+128)
  4240  06ED  3001               	movlw	1
  4241  06EE  318B  2395  3186   	fcall	_setCursor
  4242                           
  4243                           ;main.c: 73:         speedInt = speed ;
  4244  06F1  0020               	movlb	0	; select bank0
  4245  06F2  0847               	movf	_speed+3,w	;volatile
  4246  06F3  0021               	movlb	1	; select bank1
  4247  06F4  00A3               	movwf	(___fltol@f1+3)^(0+128)
  4248  06F5  0020               	movlb	0	; select bank0
  4249  06F6  0846               	movf	_speed+2,w	;volatile
  4250  06F7  0021               	movlb	1	; select bank1
  4251  06F8  00A2               	movwf	(___fltol@f1+2)^(0+128)
  4252  06F9  0020               	movlb	0	; select bank0
  4253  06FA  0845               	movf	_speed+1,w	;volatile
  4254  06FB  0021               	movlb	1	; select bank1
  4255  06FC  00A1               	movwf	(___fltol@f1+1)^(0+128)
  4256  06FD  0020               	movlb	0	; select bank0
  4257  06FE  0844               	movf	_speed,w	;volatile
  4258  06FF  0021               	movlb	1	; select bank1
  4259  0700  00A0               	movwf	___fltol@f1^(0+128)
  4260  0701  318C  2412  3186   	fcall	___fltol
  4261  0704  0021               	movlb	1	; select bank1
  4262  0705  0821               	movf	(?___fltol+1)^(0+128),w
  4263  0706  0020               	movlb	0	; select bank0
  4264  0707  00D5               	movwf	_speedInt+1	;volatile
  4265  0708  0021               	movlb	1	; select bank1
  4266  0709  0820               	movf	?___fltol^(0+128),w
  4267  070A  0020               	movlb	0	; select bank0
  4268  070B  00D4               	movwf	_speedInt	;volatile
  4269                           
  4270                           ;main.c: 74:         if( counter > 5000 ){
  4271  070C  1BDE               	btfsc	_counter+3,7	;volatile
  4272  070D  2F20               	goto	l3763
  4273  070E  085E               	movf	_counter+3,w	;volatile
  4274  070F  1D03               	btfss	3,2
  4275  0710  2F1A               	goto	l3761
  4276  0711  085D               	movf	_counter+2,w	;volatile
  4277  0712  1D03               	btfss	3,2
  4278  0713  2F1A               	goto	l3761
  4279  0714  3089               	movlw	137
  4280  0715  025B               	subwf	_counter,w	;volatile
  4281  0716  3013               	movlw	19
  4282  0717  3B5C               	subwfb	_counter+1,w	;volatile
  4283  0718  1C03               	btfss	3,0
  4284  0719  2F20               	goto	l3763
  4285  071A                     l3761:	
  4286                           
  4287                           ;main.c: 75:             printf( "0 kmh      " ) ;
  4288  071A  300D               	movlw	low (STR_1| (0+32768))
  4289  071B  0023               	movlb	3	; select bank3
  4290  071C  00A6               	movwf	printf@fmt^(0+384)
  4291  071D  3090               	movlw	high (STR_1| (0+32768))
  4292  071E  00A7               	movwf	(printf@fmt^(0+384)+1)
  4293  071F  2F2D               	goto	L1
  4294  0720                     l3763:	
  4295                           ;main.c: 77:         }
  4296                           
  4297                           
  4298                           ;main.c: 79:             printf( "%d kmh      ", speedInt ) ;
  4299  0720  3000               	movlw	low (STR_2| (0+32768))
  4300  0721  0023               	movlb	3	; select bank3
  4301  0722  00A6               	movwf	printf@fmt^(0+384)
  4302  0723  3090               	movlw	high (STR_2| (0+32768))
  4303  0724  00A7               	movwf	(printf@fmt^(0+384)+1)
  4304  0725  0020               	movlb	0	; select bank0
  4305  0726  0855               	movf	_speedInt+1,w	;volatile
  4306  0727  0023               	movlb	3	; select bank3
  4307  0728  00A9               	movwf	((?_printf+1)^(0+384)+2)
  4308  0729  0020               	movlb	0	; select bank0
  4309  072A  0854               	movf	_speedInt,w	;volatile
  4310  072B  0023               	movlb	3	; select bank3
  4311  072C  00A8               	movwf	(?_printf^(0+384)+2)
  4312  072D                     L1:	
  4313  072D  3189  21E5  3186   	fcall	_printf
  4314                           
  4315                           ;main.c: 83:         setCursor(2,10) ;
  4316  0730  300A               	movlw	10
  4317  0731  0023               	movlb	3	; select bank3
  4318  0732  00AE               	movwf	??_main^(0+384)
  4319  0733  082E               	movf	??_main^(0+384),w
  4320  0734  0021               	movlb	1	; select bank1
  4321  0735  00A1               	movwf	setCursor@b^(0+128)
  4322  0736  3002               	movlw	2
  4323  0737  318B  2395  3186   	fcall	_setCursor
  4324                           
  4325                           ;main.c: 84:         distInt = distance ;
  4326  073A  0020               	movlb	0	; select bank0
  4327  073B  0843               	movf	_distance+3,w	;volatile
  4328  073C  0021               	movlb	1	; select bank1
  4329  073D  00A3               	movwf	(___fltol@f1+3)^(0+128)
  4330  073E  0020               	movlb	0	; select bank0
  4331  073F  0842               	movf	_distance+2,w	;volatile
  4332  0740  0021               	movlb	1	; select bank1
  4333  0741  00A2               	movwf	(___fltol@f1+2)^(0+128)
  4334  0742  0020               	movlb	0	; select bank0
  4335  0743  0841               	movf	_distance+1,w	;volatile
  4336  0744  0021               	movlb	1	; select bank1
  4337  0745  00A1               	movwf	(___fltol@f1+1)^(0+128)
  4338  0746  0020               	movlb	0	; select bank0
  4339  0747  0840               	movf	_distance,w	;volatile
  4340  0748  0021               	movlb	1	; select bank1
  4341  0749  00A0               	movwf	___fltol@f1^(0+128)
  4342  074A  318C  2412  3186   	fcall	___fltol
  4343  074D  0021               	movlb	1	; select bank1
  4344  074E  0821               	movf	(?___fltol+1)^(0+128),w
  4345  074F  0020               	movlb	0	; select bank0
  4346  0750  00D3               	movwf	_distInt+1	;volatile
  4347  0751  0021               	movlb	1	; select bank1
  4348  0752  0820               	movf	?___fltol^(0+128),w
  4349  0753  0020               	movlb	0	; select bank0
  4350  0754  00D2               	movwf	_distInt	;volatile
  4351                           
  4352                           ;main.c: 85:         printf("%d m     ", distInt ) ;
  4353  0755  3019               	movlw	low (STR_3| (0+32768))
  4354  0756  0023               	movlb	3	; select bank3
  4355  0757  00A6               	movwf	printf@fmt^(0+384)
  4356  0758  3090               	movlw	high (STR_3| (0+32768))
  4357  0759  00A7               	movwf	(printf@fmt^(0+384)+1)
  4358  075A  0020               	movlb	0	; select bank0
  4359  075B  0853               	movf	_distInt+1,w	;volatile
  4360  075C  0023               	movlb	3	; select bank3
  4361  075D  00A9               	movwf	((?_printf+1)^(0+384)+2)
  4362  075E  0020               	movlb	0	; select bank0
  4363  075F  0852               	movf	_distInt,w	;volatile
  4364  0760  0023               	movlb	3	; select bank3
  4365  0761  00A8               	movwf	(?_printf^(0+384)+2)
  4366  0762  3189  21E5  3186   	fcall	_printf
  4367                           
  4368                           ;main.c: 88:         setCursor(3,13) ;
  4369  0765  300D               	movlw	13
  4370  0766  0023               	movlb	3	; select bank3
  4371  0767  00AE               	movwf	??_main^(0+384)
  4372  0768  082E               	movf	??_main^(0+384),w
  4373  0769  0021               	movlb	1	; select bank1
  4374  076A  00A1               	movwf	setCursor@b^(0+128)
  4375  076B  3003               	movlw	3
  4376  076C  318B  2395  3186   	fcall	_setCursor
  4377                           
  4378                           ;main.c: 89:         hrInt = heartRate ;
  4379  076F  0022               	movlb	2	; select bank2
  4380  0770  0823               	movf	(_heartRate+3)^(0+256),w	;volatile
  4381  0771  0021               	movlb	1	; select bank1
  4382  0772  00A3               	movwf	(___fltol@f1+3)^(0+128)
  4383  0773  0022               	movlb	2	; select bank2
  4384  0774  0822               	movf	(_heartRate+2)^(0+256),w	;volatile
  4385  0775  0021               	movlb	1	; select bank1
  4386  0776  00A2               	movwf	(___fltol@f1+2)^(0+128)
  4387  0777  0022               	movlb	2	; select bank2
  4388  0778  0821               	movf	(_heartRate+1)^(0+256),w	;volatile
  4389  0779  0021               	movlb	1	; select bank1
  4390  077A  00A1               	movwf	(___fltol@f1+1)^(0+128)
  4391  077B  0022               	movlb	2	; select bank2
  4392  077C  0820               	movf	_heartRate^(0+256),w	;volatile
  4393  077D  0021               	movlb	1	; select bank1
  4394  077E  00A0               	movwf	___fltol@f1^(0+128)
  4395  077F  318C  2412  3186   	fcall	___fltol
  4396  0782  0021               	movlb	1	; select bank1
  4397  0783  0821               	movf	(?___fltol+1)^(0+128),w
  4398  0784  0020               	movlb	0	; select bank0
  4399  0785  00D1               	movwf	_hrInt+1	;volatile
  4400  0786  0021               	movlb	1	; select bank1
  4401  0787  0820               	movf	?___fltol^(0+128),w
  4402  0788  0020               	movlb	0	; select bank0
  4403  0789  00D0               	movwf	_hrInt	;volatile
  4404                           
  4405                           ;main.c: 90:         printf( "%d bpm   " , hrInt ) ;
  4406  078A  3023               	movlw	low (STR_4| (0+32768))
  4407  078B  0023               	movlb	3	; select bank3
  4408  078C  00A6               	movwf	printf@fmt^(0+384)
  4409  078D  3090               	movlw	high (STR_4| (0+32768))
  4410  078E  00A7               	movwf	(printf@fmt^(0+384)+1)
  4411  078F  0020               	movlb	0	; select bank0
  4412  0790  0851               	movf	_hrInt+1,w	;volatile
  4413  0791  0023               	movlb	3	; select bank3
  4414  0792  00A9               	movwf	((?_printf+1)^(0+384)+2)
  4415  0793  0020               	movlb	0	; select bank0
  4416  0794  0850               	movf	_hrInt,w	;volatile
  4417  0795  0023               	movlb	3	; select bank3
  4418  0796  00A8               	movwf	(?_printf^(0+384)+2)
  4419  0797  3189  21E5  3186   	fcall	_printf
  4420  079A  2EE7               	goto	l3755
  4421  079B                     __end_of_main:	
  4422                           
  4423                           	psect	text1
  4424  09F6                     __ptext1:	
  4425 ;; *************** function _writeString *****************
  4426 ;; Defined at:
  4427 ;;		line 61 in file "displayOptions.c"
  4428 ;; Parameters:    Size  Location     Type
  4429 ;;  string          1    wreg     PTR unsigned char 
  4430 ;;		 -> hrDisp(13), distanceDisp(11), speedDisp(8), 
  4431 ;; Auto vars:     Size  Location     Type
  4432 ;;  string          1   24[BANK1 ] PTR unsigned char 
  4433 ;;		 -> hrDisp(13), distanceDisp(11), speedDisp(8), 
  4434 ;; Return value:  Size  Location     Type
  4435 ;;                  1    wreg      void 
  4436 ;; Registers used:
  4437 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4438 ;; Tracked objects:
  4439 ;;		On entry : 0/0
  4440 ;;		On exit  : 0/0
  4441 ;;		Unchanged: 0/0
  4442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4444 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4446 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4447 ;;Total ram usage:        1 bytes
  4448 ;; Hardware stack levels used:    1
  4449 ;; Hardware stack levels required when called:   11
  4450 ;; This function calls:
  4451 ;;		_EUSART_is_tx_ready
  4452 ;;		_puts
  4453 ;; This function is called by:
  4454 ;;		_main
  4455 ;; This function uses a non-reentrant model
  4456 ;;
  4457                           
  4458                           
  4459                           ;psect for function _writeString
  4460  09F6                     _writeString:	
  4461                           
  4462                           ;incstack = 0
  4463                           ; Regs used in _writeString: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4464                           ;writeString@string stored from wreg
  4465  09F6  0021               	movlb	1	; select bank1
  4466  09F7  00B8               	movwf	writeString@string^(0+128)
  4467  09F8                     l3561:	
  4468                           ;displayOptions.c: 62:     while( !EUSART_is_tx_ready() ) ;
  4469                           
  4470  09F8  3189  21C8  3189   	fcall	_EUSART_is_tx_ready
  4471  09FB  3A00               	xorlw	0
  4472  09FC  1903               	skipnz
  4473  09FD  29F8               	goto	l3561
  4474                           
  4475                           ;displayOptions.c: 63:     puts( string );
  4476  09FE  0021               	movlb	1	; select bank1
  4477  09FF  0838               	movf	writeString@string^(0+128),w
  4478  0A00  00B3               	movwf	puts@s^(0+128)
  4479  0A01  3001               	movlw	1
  4480  0A02  00B4               	movwf	(puts@s+1)^(0+128)
  4481  0A03  318A  2255  3189   	fcall	_puts
  4482                           
  4483                           ;displayOptions.c: 64:     _delay((unsigned long)((200)*(16000000/4000000.0)));
  4484  0A06  30A0               	movlw	160
  4485  0A07                     u4567:	
  4486  0A07  3200               	nop2
  4487  0A08  0B89               	decfsz	9,f
  4488  0A09  2A07               	goto	u4567
  4489  0A0A  0008               	return
  4490  0A0B                     __end_of_writeString:	
  4491                           
  4492                           	psect	text2
  4493  0B95                     __ptext2:	
  4494 ;; *************** function _setCursor *****************
  4495 ;; Defined at:
  4496 ;;		line 73 in file "displayOptions.c"
  4497 ;; Parameters:    Size  Location     Type
  4498 ;;  a               1    wreg     unsigned char 
  4499 ;;  b               1    1[BANK1 ] unsigned char 
  4500 ;; Auto vars:     Size  Location     Type
  4501 ;;  a               1    4[BANK1 ] unsigned char 
  4502 ;; Return value:  Size  Location     Type
  4503 ;;                  1    wreg      void 
  4504 ;; Registers used:
  4505 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4506 ;; Tracked objects:
  4507 ;;		On entry : 0/0
  4508 ;;		On exit  : 0/0
  4509 ;;		Unchanged: 0/0
  4510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4511 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4512 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4513 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4514 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4515 ;;Total ram usage:        4 bytes
  4516 ;; Hardware stack levels used:    1
  4517 ;; Hardware stack levels required when called:    7
  4518 ;; This function calls:
  4519 ;;		_EUSART_Write
  4520 ;;		_EUSART_is_tx_ready
  4521 ;; This function is called by:
  4522 ;;		_main
  4523 ;; This function uses a non-reentrant model
  4524 ;;
  4525                           
  4526                           
  4527                           ;psect for function _setCursor
  4528  0B95                     _setCursor:	
  4529                           
  4530                           ;incstack = 0
  4531                           ; Regs used in _setCursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4532                           ;setCursor@a stored from wreg
  4533  0B95  0021               	movlb	1	; select bank1
  4534  0B96  00A4               	movwf	setCursor@a^(0+128)
  4535  0B97                     l3535:	
  4536                           ;displayOptions.c: 74:     while( !EUSART_is_tx_ready() ) ;
  4537                           
  4538  0B97  3189  21C8  318B   	fcall	_EUSART_is_tx_ready
  4539  0B9A  3A00               	xorlw	0
  4540  0B9B  1903               	skipnz
  4541  0B9C  2B97               	goto	l3535
  4542                           
  4543                           ;displayOptions.c: 75:     EUSART_Write( 254 );
  4544  0B9D  30FE               	movlw	254
  4545  0B9E  3189  21A5  318B   	fcall	_EUSART_Write
  4546                           
  4547                           ;displayOptions.c: 76:     _delay((unsigned long)((200)*(16000000/4000000.0)));
  4548  0BA1  30A0               	movlw	160
  4549  0BA2                     u4577:	
  4550  0BA2  3200               	nop2
  4551  0BA3  0B89               	decfsz	9,f
  4552  0BA4  2BA2               	goto	u4577
  4553                           
  4554                           ;displayOptions.c: 77:     switch ( a ){
  4555  0BA5  2BBA               	goto	l3551
  4556  0BA6                     l3541:	
  4557                           
  4558                           ;displayOptions.c: 79:         {;displayOptions.c: 80:             EUSART_Write(128 + 0 
      +                          + b) ;
  4559  0BA6  0821               	movf	setCursor@b^(0+128),w
  4560  0BA7  3E80               	addlw	128
  4561  0BA8  3189  21A5         	fcall	_EUSART_Write
  4562                           
  4563                           ;displayOptions.c: 81:             break ;
  4564  0BAA  0008               	return
  4565  0BAB                     l3543:	
  4566                           
  4567                           ;displayOptions.c: 84:         {;displayOptions.c: 85:            EUSART_Write(128 + 64 
      +                          + b) ;
  4568  0BAB  0821               	movf	setCursor@b^(0+128),w
  4569  0BAC  3EC0               	addlw	192
  4570  0BAD  3189  21A5         	fcall	_EUSART_Write
  4571                           
  4572                           ;displayOptions.c: 86:            break ;
  4573  0BAF  0008               	return
  4574  0BB0                     l3545:	
  4575                           
  4576                           ;displayOptions.c: 89:         {;displayOptions.c: 90:             EUSART_Write(128 + 20
      +                           + b) ;
  4577  0BB0  0821               	movf	setCursor@b^(0+128),w
  4578  0BB1  3E94               	addlw	148
  4579  0BB2  3189  21A5         	fcall	_EUSART_Write
  4580                           
  4581                           ;displayOptions.c: 91:             break ;
  4582  0BB4  0008               	return
  4583  0BB5                     l3547:	
  4584                           
  4585                           ;displayOptions.c: 94:         {;displayOptions.c: 95:             EUSART_Write(128 + 84
      +                           + b) ;
  4586  0BB5  0821               	movf	setCursor@b^(0+128),w
  4587  0BB6  3ED4               	addlw	212
  4588  0BB7  3189  21A5         	fcall	_EUSART_Write
  4589                           
  4590                           ;displayOptions.c: 96:             break ;
  4591  0BB9  0008               	return
  4592  0BBA                     l3551:	
  4593  0BBA  0021               	movlb	1	; select bank1
  4594  0BBB  0824               	movf	setCursor@a^(0+128),w
  4595  0BBC  00A2               	movwf	??_setCursor^(0+128)
  4596  0BBD  01A3               	clrf	(??_setCursor^(0+128)+1)
  4597                           
  4598                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4599                           ; Switch size 1, requested type "simple"
  4600                           ; Number of cases is 1, Range of values is 0 to 0
  4601                           ; switch strategies available:
  4602                           ; Name         Instructions Cycles
  4603                           ; simple_byte            4     3 (average)
  4604                           ; direct_byte            8     6 (fixed)
  4605                           ; jumptable            260     6 (fixed)
  4606                           ;	Chosen strategy is simple_byte
  4607  0BBE  0823               	movf	(??_setCursor+1)^(0+128),w
  4608  0BBF  3A00               	xorlw	0	; case 0
  4609  0BC0  1903               	skipnz
  4610  0BC1  2BC3               	goto	l3813
  4611  0BC2  2BD1               	goto	l365
  4612  0BC3                     l3813:	
  4613                           
  4614                           ; Switch size 1, requested type "simple"
  4615                           ; Number of cases is 4, Range of values is 1 to 4
  4616                           ; switch strategies available:
  4617                           ; Name         Instructions Cycles
  4618                           ; simple_byte           13     7 (average)
  4619                           ; direct_byte           17     9 (fixed)
  4620                           ; jumptable            263     9 (fixed)
  4621                           ;	Chosen strategy is simple_byte
  4622  0BC3  0822               	movf	??_setCursor^(0+128),w
  4623  0BC4  3A01               	xorlw	1	; case 1
  4624  0BC5  1903               	skipnz
  4625  0BC6  2BA6               	goto	l3541
  4626  0BC7  3A03               	xorlw	3	; case 2
  4627  0BC8  1903               	skipnz
  4628  0BC9  2BAB               	goto	l3543
  4629  0BCA  3A01               	xorlw	1	; case 3
  4630  0BCB  1903               	skipnz
  4631  0BCC  2BB0               	goto	l3545
  4632  0BCD  3A07               	xorlw	7	; case 4
  4633  0BCE  1903               	skipnz
  4634  0BCF  2BB5               	goto	l3547
  4635  0BD0  2BD1               	goto	l365
  4636  0BD1                     l365:	
  4637  0BD1  0008               	return
  4638  0BD2                     __end_of_setCursor:	
  4639                           
  4640                           	psect	text3
  4641  09C8                     __ptext3:	
  4642 ;; *************** function _EUSART_is_tx_ready *****************
  4643 ;; Defined at:
  4644 ;;		line 93 in file "mcc_generated_files/eusart.c"
  4645 ;; Parameters:    Size  Location     Type
  4646 ;;		None
  4647 ;; Auto vars:     Size  Location     Type
  4648 ;;		None
  4649 ;; Return value:  Size  Location     Type
  4650 ;;                  1    wreg      _Bool 
  4651 ;; Registers used:
  4652 ;;		wreg, status,2
  4653 ;; Tracked objects:
  4654 ;;		On entry : 0/0
  4655 ;;		On exit  : 0/0
  4656 ;;		Unchanged: 0/0
  4657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4659 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4661 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4662 ;;Total ram usage:        1 bytes
  4663 ;; Hardware stack levels used:    1
  4664 ;; Hardware stack levels required when called:    6
  4665 ;; This function calls:
  4666 ;;		Nothing
  4667 ;; This function is called by:
  4668 ;;		_writeString
  4669 ;;		_setCursor
  4670 ;;		_backlightBrightness
  4671 ;;		_writePrintf
  4672 ;; This function uses a non-reentrant model
  4673 ;;
  4674                           
  4675                           
  4676                           ;psect for function _EUSART_is_tx_ready
  4677  09C8                     _EUSART_is_tx_ready:	
  4678                           
  4679                           ;mcc_generated_files/eusart.c: 95:     return (_Bool)(PIR1bits.TXIF && TX1STAbits.TXEN);
  4680                           
  4681                           ;incstack = 0
  4682                           ; Regs used in _EUSART_is_tx_ready: [wreg+status,2]
  4683  09C8  0021               	movlb	1	; select bank1
  4684  09C9  01A0               	clrf	_EUSART_is_tx_ready$167^(0+128)
  4685  09CA  0020               	movlb	0	; select bank0
  4686  09CB  1E10               	btfss	16,4	;volatile
  4687  09CC  29D3               	goto	l3449
  4688  09CD  0023               	movlb	3	; select bank3
  4689  09CE  1E9E               	btfss	30,5	;volatile
  4690  09CF  29D3               	goto	l3449
  4691  09D0  0021               	movlb	1	; select bank1
  4692  09D1  01A0               	clrf	_EUSART_is_tx_ready$167^(0+128)
  4693  09D2  0AA0               	incf	_EUSART_is_tx_ready$167^(0+128),f
  4694  09D3                     l3449:	
  4695  09D3  0021               	movlb	1	; select bank1
  4696  09D4  0820               	movf	_EUSART_is_tx_ready$167^(0+128),w
  4697  09D5  0008               	return
  4698  09D6                     __end_of_EUSART_is_tx_ready:	
  4699                           
  4700                           	psect	text4
  4701  0970                     __ptext4:	
  4702 ;; *************** function _resetCursor *****************
  4703 ;; Defined at:
  4704 ;;		line 57 in file "displayOptions.c"
  4705 ;; Parameters:    Size  Location     Type
  4706 ;;		None
  4707 ;; Auto vars:     Size  Location     Type
  4708 ;;		None
  4709 ;; Return value:  Size  Location     Type
  4710 ;;                  1    wreg      void 
  4711 ;; Registers used:
  4712 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4713 ;; Tracked objects:
  4714 ;;		On entry : 0/0
  4715 ;;		On exit  : 0/0
  4716 ;;		Unchanged: 0/0
  4717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4722 ;;Total ram usage:        0 bytes
  4723 ;; Hardware stack levels used:    1
  4724 ;; Hardware stack levels required when called:   11
  4725 ;; This function calls:
  4726 ;;		_puts
  4727 ;; This function is called by:
  4728 ;;		_main
  4729 ;; This function uses a non-reentrant model
  4730 ;;
  4731                           
  4732                           
  4733                           ;psect for function _resetCursor
  4734  0970                     _resetCursor:	
  4735                           
  4736                           ;displayOptions.c: 58:     puts("|-");
  4737                           
  4738                           ;incstack = 0
  4739                           ; Regs used in _resetCursor: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4740  0970  302D               	movlw	low (STR_5| (0+32768))
  4741  0971  0021               	movlb	1	; select bank1
  4742  0972  00B3               	movwf	puts@s^(0+128)
  4743  0973  3090               	movlw	high (STR_5| (0+32768))
  4744  0974  00B4               	movwf	(puts@s^(0+128)+1)
  4745  0975  318A  2255         	fcall	_puts
  4746  0977  0008               	return
  4747  0978                     __end_of_resetCursor:	
  4748                           
  4749                           	psect	text5
  4750  0A55                     __ptext5:	
  4751 ;; *************** function _puts *****************
  4752 ;; Defined at:
  4753 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\puts.c"
  4754 ;; Parameters:    Size  Location     Type
  4755 ;;  s               2   19[BANK1 ] PTR const unsigned char 
  4756 ;;		 -> STR_5(3), hrDisp(13), distanceDisp(11), speedDisp(8), 
  4757 ;; Auto vars:     Size  Location     Type
  4758 ;;  r               2    0        int 
  4759 ;; Return value:  Size  Location     Type
  4760 ;;                  2   19[BANK1 ] int 
  4761 ;; Registers used:
  4762 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4763 ;; Tracked objects:
  4764 ;;		On entry : 0/0
  4765 ;;		On exit  : 0/0
  4766 ;;		Unchanged: 0/0
  4767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4768 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4769 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4771 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  4772 ;;Total ram usage:        5 bytes
  4773 ;; Hardware stack levels used:    1
  4774 ;; Hardware stack levels required when called:   10
  4775 ;; This function calls:
  4776 ;;		_fputc
  4777 ;;		_fputs
  4778 ;; This function is called by:
  4779 ;;		_resetCursor
  4780 ;;		_writeString
  4781 ;; This function uses a non-reentrant model
  4782 ;;
  4783                           
  4784                           
  4785                           ;psect for function _puts
  4786  0A55                     _puts:	
  4787                           
  4788                           ;incstack = 0
  4789                           ; Regs used in _puts: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4790  0A55  0021               	movlb	1	; select bank1
  4791  0A56  01B7               	clrf	_puts$1041^(0+128)
  4792  0A57  0AB7               	incf	_puts$1041^(0+128),f
  4793  0A58  0834               	movf	(puts@s+1)^(0+128),w
  4794  0A59  00AB               	movwf	(fputs@s+1)^(0+128)
  4795  0A5A  0833               	movf	puts@s^(0+128),w
  4796  0A5B  00AA               	movwf	fputs@s^(0+128)
  4797  0A5C  01AC               	clrf	fputs@fp^(0+128)
  4798  0A5D  318A  22D4  318A   	fcall	_fputs
  4799  0A60  0021               	movlb	1	; select bank1
  4800  0A61  1BAB               	btfsc	(?_fputs+1)^(0+128),7
  4801  0A62  0008               	return
  4802  0A63  300A               	movlw	10
  4803  0A64  00A2               	movwf	fputc@c^(0+128)
  4804  0A65  3000               	movlw	0
  4805  0A66  00A3               	movwf	(fputc@c^(0+128)+1)
  4806  0A67  01A4               	clrf	fputc@fp^(0+128)
  4807  0A68  318B  23D2  318A   	fcall	_fputc
  4808  0A6B  0021               	movlb	1	; select bank1
  4809  0A6C  1BA3               	btfsc	(?_fputc+1)^(0+128),7
  4810  0A6D  0008               	return
  4811  0A6E  01B7               	clrf	_puts$1041^(0+128)
  4812  0A6F  0008               	return
  4813  0A70                     __end_of_puts:	
  4814                           
  4815                           	psect	text6
  4816  09E5                     __ptext6:	
  4817 ;; *************** function _printf *****************
  4818 ;; Defined at:
  4819 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  4820 ;; Parameters:    Size  Location     Type
  4821 ;;  fmt             2    6[BANK3 ] PTR const unsigned char 
  4822 ;;		 -> STR_4(10), STR_3(10), STR_2(13), STR_1(12), 
  4823 ;; Auto vars:     Size  Location     Type
  4824 ;;  ret             2    0        int 
  4825 ;;  ap              1   13[BANK3 ] PTR void [1]
  4826 ;;		 -> ?_printf(2), 
  4827 ;; Return value:  Size  Location     Type
  4828 ;;                  2    6[BANK3 ] int 
  4829 ;; Registers used:
  4830 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4831 ;; Tracked objects:
  4832 ;;		On entry : 0/0
  4833 ;;		On exit  : 0/0
  4834 ;;		Unchanged: 0/0
  4835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4836 ;;      Params:         0       0       0       0       4       0       0       0       0       0       0       0       
      +0       0
  4837 ;;      Locals:         0       0       0       0       3       0       0       0       0       0       0       0       
      +0       0
  4838 ;;      Temps:          0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0
  4839 ;;      Totals:         0       0       0       0       8       0       0       0       0       0       0       0       
      +0       0
  4840 ;;Total ram usage:        8 bytes
  4841 ;; Hardware stack levels used:    1
  4842 ;; Hardware stack levels required when called:   14
  4843 ;; This function calls:
  4844 ;;		_vfprintf
  4845 ;; This function is called by:
  4846 ;;		_main
  4847 ;;		_writePrintf
  4848 ;; This function uses a non-reentrant model
  4849 ;;
  4850                           
  4851                           
  4852                           ;psect for function _printf
  4853  09E5                     _printf:	
  4854                           
  4855                           ;incstack = 0
  4856                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4857  09E5  30A8               	movlw	(low ((?_printf| (0+256)+2)))& (0+255)
  4858  09E6  0023               	movlb	3	; select bank3
  4859  09E7  00AA               	movwf	??_printf^(0+384)
  4860  09E8  082A               	movf	??_printf^(0+384),w
  4861  09E9  00AD               	movwf	printf@ap^(0+384)
  4862  09EA  0827               	movf	(printf@fmt+1)^(0+384),w
  4863  09EB  00A1               	movwf	(vfprintf@fmt+1)^(0+384)
  4864  09EC  0826               	movf	printf@fmt^(0+384),w
  4865  09ED  00A0               	movwf	vfprintf@fmt^(0+384)
  4866  09EE  30AD               	movlw	(low (printf@ap| (0+256)))& (0+255)
  4867  09EF  00AA               	movwf	??_printf^(0+384)
  4868  09F0  082A               	movf	??_printf^(0+384),w
  4869  09F1  00A2               	movwf	vfprintf@ap^(0+384)
  4870  09F2  3000               	movlw	0
  4871  09F3  318B  2360         	fcall	_vfprintf
  4872  09F5  0008               	return
  4873  09F6                     __end_of_printf:	
  4874                           
  4875                           	psect	text7
  4876  0B60                     __ptext7:	
  4877 ;; *************** function _vfprintf *****************
  4878 ;; Defined at:
  4879 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4880 ;; Parameters:    Size  Location     Type
  4881 ;;  fp              1    wreg     PTR struct _IO_FILE
  4882 ;;		 -> NULL(0), 
  4883 ;;  fmt             2    0[BANK3 ] PTR const unsigned char 
  4884 ;;		 -> STR_4(10), STR_3(10), STR_2(13), STR_1(12), 
  4885 ;;  ap              1    2[BANK3 ] PTR PTR void 
  4886 ;;		 -> printf@ap(1), 
  4887 ;; Auto vars:     Size  Location     Type
  4888 ;;  fp              1    3[BANK3 ] PTR struct _IO_FILE
  4889 ;;		 -> NULL(0), 
  4890 ;;  cfmt            2    4[BANK3 ] PTR unsigned char 
  4891 ;;		 -> STR_4(10), STR_3(10), STR_2(13), STR_1(12), 
  4892 ;; Return value:  Size  Location     Type
  4893 ;;                  2    0[BANK3 ] int 
  4894 ;; Registers used:
  4895 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4896 ;; Tracked objects:
  4897 ;;		On entry : 0/0
  4898 ;;		On exit  : 0/0
  4899 ;;		Unchanged: 0/0
  4900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4901 ;;      Params:         0       0       0       0       3       0       0       0       0       0       0       0       
      +0       0
  4902 ;;      Locals:         0       0       0       0       3       0       0       0       0       0       0       0       
      +0       0
  4903 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  4904 ;;      Totals:         0       0       0       2       6       0       0       0       0       0       0       0       
      +0       0
  4905 ;;Total ram usage:        8 bytes
  4906 ;; Hardware stack levels used:    1
  4907 ;; Hardware stack levels required when called:   13
  4908 ;; This function calls:
  4909 ;;		_vfpfcnvrt
  4910 ;; This function is called by:
  4911 ;;		_printf
  4912 ;; This function uses a non-reentrant model
  4913 ;;
  4914                           
  4915                           
  4916                           ;psect for function _vfprintf
  4917  0B60                     _vfprintf:	
  4918                           
  4919                           ;incstack = 0
  4920                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4921                           ;vfprintf@fp stored from wreg
  4922  0B60  0023               	movlb	3	; select bank3
  4923  0B61  00A3               	movwf	vfprintf@fp^(0+384)
  4924                           
  4925                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  4926  0B62  0821               	movf	(vfprintf@fmt+1)^(0+384),w
  4927  0B63  00A5               	movwf	(vfprintf@cfmt+1)^(0+384)
  4928  0B64  0820               	movf	vfprintf@fmt^(0+384),w
  4929  0B65  00A4               	movwf	vfprintf@cfmt^(0+384)
  4930                           
  4931                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  4932  0B66  0020               	movlb	0	; select bank0
  4933  0B67  01CC               	clrf	_nout
  4934  0B68  01CD               	clrf	_nout+1
  4935  0B69                     l3523:	
  4936                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  4937                           
  4938                           
  4939                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  4940  0B69  0023               	movlb	3	; select bank3
  4941  0B6A  0824               	movf	vfprintf@cfmt^(0+384),w
  4942  0B6B  0084               	movwf	4
  4943  0B6C  0825               	movf	(vfprintf@cfmt+1)^(0+384),w
  4944  0B6D  0085               	movwf	5
  4945  0B6E  0012               	moviw fsr0++
  4946  0B6F  1903               	btfsc	3,2
  4947  0B70  2B8C               	goto	l3525
  4948                           
  4949                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  4950  0B71  30A4               	movlw	(low (vfprintf@cfmt| (0+256)))& (0+255)
  4951  0B72  0022               	movlb	2	; select bank2
  4952  0B73  00EE               	movwf	??_vfprintf^(0+256)
  4953  0B74  086E               	movf	??_vfprintf^(0+256),w
  4954  0B75  0021               	movlb	1	; select bank1
  4955  0B76  00DA               	movwf	vfpfcnvrt@fmt^(0+128)
  4956  0B77  0023               	movlb	3	; select bank3
  4957  0B78  0822               	movf	vfprintf@ap^(0+384),w
  4958  0B79  0022               	movlb	2	; select bank2
  4959  0B7A  00EF               	movwf	(??_vfprintf+1)^(0+256)
  4960  0B7B  086F               	movf	(??_vfprintf+1)^(0+256),w
  4961  0B7C  0021               	movlb	1	; select bank1
  4962  0B7D  00DB               	movwf	vfpfcnvrt@ap^(0+128)
  4963  0B7E  0023               	movlb	3	; select bank3
  4964  0B7F  0823               	movf	vfprintf@fp^(0+384),w
  4965  0B80  3185  2595  318B   	fcall	_vfpfcnvrt
  4966  0B83  0021               	movlb	1	; select bank1
  4967  0B84  085A               	movf	?_vfpfcnvrt^(0+128),w
  4968  0B85  0020               	movlb	0	; select bank0
  4969  0B86  07CC               	addwf	_nout,f
  4970  0B87  0021               	movlb	1	; select bank1
  4971  0B88  085B               	movf	(?_vfpfcnvrt+1)^(0+128),w
  4972  0B89  0020               	movlb	0	; select bank0
  4973  0B8A  3DCD               	addwfc	_nout+1,f
  4974  0B8B  2B69               	goto	l3523
  4975  0B8C                     l3525:	
  4976                           
  4977                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  4978  0B8C  0020               	movlb	0	; select bank0
  4979  0B8D  084D               	movf	_nout+1,w
  4980  0B8E  0023               	movlb	3	; select bank3
  4981  0B8F  00A1               	movwf	(?_vfprintf+1)^(0+384)
  4982  0B90  0020               	movlb	0	; select bank0
  4983  0B91  084C               	movf	_nout,w
  4984  0B92  0023               	movlb	3	; select bank3
  4985  0B93  00A0               	movwf	?_vfprintf^(0+384)
  4986  0B94  0008               	return
  4987  0B95                     __end_of_vfprintf:	
  4988                           
  4989                           	psect	text8
  4990  0595                     __ptext8:	
  4991 ;; *************** function _vfpfcnvrt *****************
  4992 ;; Defined at:
  4993 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4994 ;; Parameters:    Size  Location     Type
  4995 ;;  fp              1    wreg     PTR struct _IO_FILE
  4996 ;;		 -> NULL(0), 
  4997 ;;  fmt             1   58[BANK1 ] PTR PTR unsigned char 
  4998 ;;		 -> vfprintf@cfmt(2), 
  4999 ;;  ap              1   59[BANK1 ] PTR PTR void 
  5000 ;;		 -> printf@ap(1), 
  5001 ;; Auto vars:     Size  Location     Type
  5002 ;;  fp              1   75[BANK1 ] PTR struct _IO_FILE
  5003 ;;		 -> NULL(0), 
  5004 ;;  ll              8   65[BANK1 ] long long 
  5005 ;;  llu             8    0        unsigned long long 
  5006 ;;  f               4    0        unsigned long long 
  5007 ;;  ct              3    0        unsigned char [3]
  5008 ;;  vp              2   73[BANK1 ] PTR void 
  5009 ;;		 -> ?_printf(2), rpm(4), counter(4), 
  5010 ;;  i               2    0        int 
  5011 ;;  done            2    0        int 
  5012 ;;  cp              2    0        PTR unsigned char 
  5013 ;;  c               1    0        unsigned char 
  5014 ;; Return value:  Size  Location     Type
  5015 ;;                  2   58[BANK1 ] int 
  5016 ;; Registers used:
  5017 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5018 ;; Tracked objects:
  5019 ;;		On entry : 0/0
  5020 ;;		On exit  : 0/0
  5021 ;;		Unchanged: 0/0
  5022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5023 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5024 ;;      Locals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0
  5025 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  5026 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0
  5027 ;;Total ram usage:       18 bytes
  5028 ;; Hardware stack levels used:    1
  5029 ;; Hardware stack levels required when called:   12
  5030 ;; This function calls:
  5031 ;;		_dtoa
  5032 ;;		_fputc
  5033 ;; This function is called by:
  5034 ;;		_vfprintf
  5035 ;; This function uses a non-reentrant model
  5036 ;;
  5037                           
  5038                           
  5039                           ;psect for function _vfpfcnvrt
  5040  0595                     _vfpfcnvrt:	
  5041                           
  5042                           ;incstack = 0
  5043                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5044                           ;vfpfcnvrt@fp stored from wreg
  5045  0595  0021               	movlb	1	; select bank1
  5046  0596  00EB               	movwf	vfpfcnvrt@fp^(0+128)
  5047                           
  5048                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  5049  0597  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5050  0598  0086               	movwf	6
  5051  0599  3001               	movlw	1	; select bank2/3
  5052  059A  0087               	movwf	7
  5053  059B  3F40               	moviw [0]fsr1
  5054  059C  00DC               	movwf	??_vfpfcnvrt^(0+128)
  5055  059D  3F41               	moviw [1]fsr1
  5056  059E  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5057  059F  085C               	movf	??_vfpfcnvrt^(0+128),w
  5058  05A0  0084               	movwf	4
  5059  05A1  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5060  05A2  0085               	movwf	5
  5061  05A3  0012               	moviw fsr0++
  5062  05A4  3A25               	xorlw	37
  5063  05A5  1D03               	btfss	3,2
  5064  05A6  2E7E               	goto	l3423
  5065                           
  5066                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  5067  05A7  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5068  05A8  0086               	movwf	6
  5069  05A9  3001               	movlw	1	; select bank2/3
  5070  05AA  0087               	movwf	7
  5071  05AB  3001               	movlw	1
  5072  05AC  0781               	addwf	1,f
  5073  05AD  3141               	addfsr 1,1
  5074  05AE  1803               	skipnc
  5075  05AF  0A81               	incf	1,f
  5076                           
  5077                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  5078  05B0  0020               	movlb	0	; select bank0
  5079  05B1  01CE               	clrf	_width
  5080  05B2  01CF               	clrf	_width+1
  5081  05B3  0021               	movlb	1	; select bank1
  5082  05B4  01EE               	clrf	_flags^(0+128)
  5083  05B5  01EF               	clrf	(_flags+1)^(0+128)
  5084                           
  5085                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  5086  05B6  30FF               	movlw	255
  5087  05B7  00EC               	movwf	_prec^(0+128)
  5088  05B8  30FF               	movlw	255
  5089  05B9  00ED               	movwf	(_prec^(0+128)+1)
  5090                           
  5091                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  5092  05BA  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5093  05BB  0086               	movwf	6
  5094  05BC  3001               	movlw	1	; select bank2/3
  5095  05BD  0087               	movwf	7
  5096  05BE  3F40               	moviw [0]fsr1
  5097  05BF  00DC               	movwf	??_vfpfcnvrt^(0+128)
  5098  05C0  3F41               	moviw [1]fsr1
  5099  05C1  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5100  05C2  085C               	movf	??_vfpfcnvrt^(0+128),w
  5101  05C3  0084               	movwf	4
  5102  05C4  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5103  05C5  0085               	movwf	5
  5104  05C6  0012               	moviw fsr0++
  5105  05C7  3A64               	xorlw	100
  5106  05C8  1903               	btfsc	3,2
  5107  05C9  2DDA               	goto	l3387
  5108  05CA  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5109  05CB  0086               	movwf	6
  5110  05CC  3001               	movlw	1	; select bank2/3
  5111  05CD  0087               	movwf	7
  5112  05CE  3F40               	moviw [0]fsr1
  5113  05CF  00DC               	movwf	??_vfpfcnvrt^(0+128)
  5114  05D0  3F41               	moviw [1]fsr1
  5115  05D1  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5116  05D2  085C               	movf	??_vfpfcnvrt^(0+128),w
  5117  05D3  0084               	movwf	4
  5118  05D4  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5119  05D5  0085               	movwf	5
  5120  05D6  0012               	moviw fsr0++
  5121  05D7  3A69               	xorlw	105
  5122  05D8  1D03               	btfss	3,2
  5123  05D9  2E17               	goto	l3395
  5124  05DA                     l3387:	
  5125                           
  5126                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  5127  05DA  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5128  05DB  0086               	movwf	6
  5129  05DC  3001               	movlw	1	; select bank2/3
  5130  05DD  0087               	movwf	7
  5131  05DE  3001               	movlw	1
  5132  05DF  0781               	addwf	1,f
  5133  05E0  3141               	addfsr 1,1
  5134  05E1  1803               	skipnc
  5135  05E2  0A81               	incf	1,f
  5136                           
  5137                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  5138  05E3  085B               	movf	vfpfcnvrt@ap^(0+128),w
  5139  05E4  0086               	movwf	6
  5140  05E5  3001               	movlw	1	; select bank2/3
  5141  05E6  0087               	movwf	7
  5142  05E7  0801               	movf	1,w
  5143  05E8  0084               	movwf	4
  5144  05E9  3001               	movlw	1	; select bank2/3
  5145  05EA  0085               	movwf	5
  5146  05EB  3002               	movlw	2
  5147  05EC  0781               	addwf	1,f
  5148  05ED  3F00               	moviw [0]fsr0
  5149  05EE  00DC               	movwf	??_vfpfcnvrt^(0+128)
  5150  05EF  3F01               	moviw [1]fsr0
  5151  05F0  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5152  05F1  085C               	movf	??_vfpfcnvrt^(0+128),w
  5153  05F2  00E1               	movwf	vfpfcnvrt@ll^(0+128)
  5154  05F3  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5155  05F4  00E2               	movwf	(vfpfcnvrt@ll+1)^(0+128)
  5156  05F5  0D89               	rlf	9,f
  5157  05F6  3B89               	subwfb	9,f
  5158  05F7  0989               	comf	9,f
  5159  05F8  00E3               	movwf	(vfpfcnvrt@ll+2)^(0+128)
  5160  05F9  00E4               	movwf	(vfpfcnvrt@ll+3)^(0+128)
  5161  05FA  00E5               	movwf	(vfpfcnvrt@ll+4)^(0+128)
  5162  05FB  00E6               	movwf	(vfpfcnvrt@ll+5)^(0+128)
  5163  05FC  00E7               	movwf	(vfpfcnvrt@ll+6)^(0+128)
  5164  05FD  00E8               	movwf	(vfpfcnvrt@ll+7)^(0+128)
  5165                           
  5166                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  5167  05FE  0861               	movf	vfpfcnvrt@ll^(0+128),w
  5168  05FF  00BC               	movwf	dtoa@d^(0+128)
  5169  0600  0862               	movf	(vfpfcnvrt@ll+1)^(0+128),w
  5170  0601  00BD               	movwf	(dtoa@d+1)^(0+128)
  5171  0602  0863               	movf	(vfpfcnvrt@ll+2)^(0+128),w
  5172  0603  00BE               	movwf	(dtoa@d+2)^(0+128)
  5173  0604  0864               	movf	(vfpfcnvrt@ll+3)^(0+128),w
  5174  0605  00BF               	movwf	(dtoa@d+3)^(0+128)
  5175  0606  0865               	movf	(vfpfcnvrt@ll+4)^(0+128),w
  5176  0607  00C0               	movwf	(dtoa@d+4)^(0+128)
  5177  0608  0866               	movf	(vfpfcnvrt@ll+5)^(0+128),w
  5178  0609  00C1               	movwf	(dtoa@d+5)^(0+128)
  5179  060A  0867               	movf	(vfpfcnvrt@ll+6)^(0+128),w
  5180  060B  00C2               	movwf	(dtoa@d+6)^(0+128)
  5181  060C  0868               	movf	(vfpfcnvrt@ll+7)^(0+128),w
  5182  060D  00C3               	movwf	(dtoa@d+7)^(0+128)
  5183  060E  086B               	movf	vfpfcnvrt@fp^(0+128),w
  5184  060F  3184  244F         	fcall	_dtoa
  5185  0611  0021               	movlb	1	; select bank1
  5186  0612  083D               	movf	(?_dtoa+1)^(0+128),w
  5187  0613  00DB               	movwf	(?_vfpfcnvrt+1)^(0+128)
  5188  0614  083C               	movf	?_dtoa^(0+128),w
  5189  0615  00DA               	movwf	?_vfpfcnvrt^(0+128)
  5190  0616  0008               	return
  5191  0617                     l3395:	
  5192                           
  5193                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1077:      
      +                             if (*fmt[0] == 'n') {
  5194  0617  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5195  0618  0086               	movwf	6
  5196  0619  3001               	movlw	1	; select bank2/3
  5197  061A  0087               	movwf	7
  5198  061B  3F40               	moviw [0]fsr1
  5199  061C  00DC               	movwf	??_vfpfcnvrt^(0+128)
  5200  061D  3F41               	moviw [1]fsr1
  5201  061E  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5202  061F  085C               	movf	??_vfpfcnvrt^(0+128),w
  5203  0620  0084               	movwf	4
  5204  0621  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5205  0622  0085               	movwf	5
  5206  0623  0012               	moviw fsr0++
  5207  0624  3A6E               	xorlw	110
  5208  0625  1D03               	btfss	3,2
  5209  0626  2E4B               	goto	l3407
  5210                           
  5211                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1078:      
      +                                 ++*fmt;
  5212  0627  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5213  0628  0086               	movwf	6
  5214  0629  3001               	movlw	1	; select bank2/3
  5215  062A  0087               	movwf	7
  5216  062B  3001               	movlw	1
  5217  062C  0781               	addwf	1,f
  5218  062D  3141               	addfsr 1,1
  5219  062E  1803               	skipnc
  5220  062F  0A81               	incf	1,f
  5221                           
  5222                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1079:      
      +                                 vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
  5223  0630  085B               	movf	vfpfcnvrt@ap^(0+128),w
  5224  0631  0086               	movwf	6
  5225  0632  3001               	movlw	1	; select bank2/3
  5226  0633  0087               	movwf	7
  5227  0634  0801               	movf	1,w
  5228  0635  0084               	movwf	4
  5229  0636  3001               	movlw	1	; select bank2/3
  5230  0637  0085               	movwf	5
  5231  0638  3002               	movlw	2
  5232  0639  0781               	addwf	1,f
  5233  063A  3F00               	moviw [0]fsr0
  5234  063B  00E9               	movwf	vfpfcnvrt@vp^(0+128)
  5235  063C  3F01               	moviw [1]fsr0
  5236  063D  00EA               	movwf	(vfpfcnvrt@vp+1)^(0+128)
  5237                           
  5238                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1080:      
      +                                 *(int *)vp = nout;
  5239  063E  0869               	movf	vfpfcnvrt@vp^(0+128),w
  5240  063F  0086               	movwf	6
  5241  0640  086A               	movf	(vfpfcnvrt@vp+1)^(0+128),w
  5242  0641  0087               	movwf	7
  5243  0642  0020               	movlb	0	; select bank0
  5244  0643  084C               	movf	_nout,w
  5245  0644  3FC0               	movwi [0]fsr1
  5246  0645  084D               	movf	_nout+1,w
  5247  0646  3FC1               	movwi [1]fsr1
  5248  0647                     l3403:	
  5249                           
  5250                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1081:      
      +                                 return 0;
  5251  0647  0021               	movlb	1	; select bank1
  5252  0648  01DA               	clrf	?_vfpfcnvrt^(0+128)
  5253  0649  01DB               	clrf	(?_vfpfcnvrt+1)^(0+128)
  5254  064A  0008               	return
  5255  064B                     l3407:	
  5256                           
  5257                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  5258  064B  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5259  064C  0086               	movwf	6
  5260  064D  3001               	movlw	1	; select bank2/3
  5261  064E  0087               	movwf	7
  5262  064F  3F40               	moviw [0]fsr1
  5263  0650  00DC               	movwf	??_vfpfcnvrt^(0+128)
  5264  0651  3F41               	moviw [1]fsr1
  5265  0652  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5266  0653  085C               	movf	??_vfpfcnvrt^(0+128),w
  5267  0654  0084               	movwf	4
  5268  0655  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5269  0656  0085               	movwf	5
  5270  0657  0012               	moviw fsr0++
  5271  0658  3A25               	xorlw	37
  5272  0659  1D03               	btfss	3,2
  5273  065A  2E74               	goto	l3417
  5274                           
  5275                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  5276  065B  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5277  065C  0086               	movwf	6
  5278  065D  3001               	movlw	1	; select bank2/3
  5279  065E  0087               	movwf	7
  5280  065F  3001               	movlw	1
  5281  0660  0781               	addwf	1,f
  5282  0661  3141               	addfsr 1,1
  5283  0662  1803               	skipnc
  5284  0663  0A81               	incf	1,f
  5285                           
  5286                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  5287  0664  3025               	movlw	37
  5288  0665  00A2               	movwf	fputc@c^(0+128)
  5289  0666  3000               	movlw	0
  5290  0667  00A3               	movwf	(fputc@c^(0+128)+1)
  5291  0668  086B               	movf	vfpfcnvrt@fp^(0+128),w
  5292  0669  00DC               	movwf	??_vfpfcnvrt^(0+128)
  5293  066A  085C               	movf	??_vfpfcnvrt^(0+128),w
  5294  066B  00A4               	movwf	fputc@fp^(0+128)
  5295  066C  318B  23D2         	fcall	_fputc
  5296  066E                     l3413:	
  5297                           
  5298                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  5299  066E  3001               	movlw	1
  5300  066F  0021               	movlb	1	; select bank1
  5301  0670  00DA               	movwf	?_vfpfcnvrt^(0+128)
  5302  0671  3000               	movlw	0
  5303  0672  00DB               	movwf	(?_vfpfcnvrt^(0+128)+1)
  5304  0673  0008               	return
  5305  0674                     l3417:	
  5306                           
  5307                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  5308  0674  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5309  0675  0086               	movwf	6
  5310  0676  3001               	movlw	1	; select bank2/3
  5311  0677  0087               	movwf	7
  5312  0678  3001               	movlw	1
  5313  0679  0781               	addwf	1,f
  5314  067A  3141               	addfsr 1,1
  5315  067B  1803               	skipnc
  5316  067C  0A81               	incf	1,f
  5317  067D  2E47               	goto	l3403
  5318  067E                     l3423:	
  5319                           
  5320                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  5321  067E  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5322  067F  0086               	movwf	6
  5323  0680  3001               	movlw	1	; select bank2/3
  5324  0681  0087               	movwf	7
  5325  0682  3F40               	moviw [0]fsr1
  5326  0683  00DC               	movwf	??_vfpfcnvrt^(0+128)
  5327  0684  3F41               	moviw [1]fsr1
  5328  0685  00DD               	movwf	(??_vfpfcnvrt^(0+128)+1)
  5329  0686  085C               	movf	??_vfpfcnvrt^(0+128),w
  5330  0687  0084               	movwf	4
  5331  0688  085D               	movf	(??_vfpfcnvrt+1)^(0+128),w
  5332  0689  0085               	movwf	5
  5333  068A  0800               	movf	0,w	;code access
  5334  068B  00DE               	movwf	(??_vfpfcnvrt+2)^(0+128)
  5335  068C  01DF               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  5336  068D  085E               	movf	(??_vfpfcnvrt+2)^(0+128),w
  5337  068E  00A2               	movwf	fputc@c^(0+128)
  5338  068F  085F               	movf	(??_vfpfcnvrt+3)^(0+128),w
  5339  0690  00A3               	movwf	(fputc@c+1)^(0+128)
  5340  0691  086B               	movf	vfpfcnvrt@fp^(0+128),w
  5341  0692  00E0               	movwf	(??_vfpfcnvrt+4)^(0+128)
  5342  0693  0860               	movf	(??_vfpfcnvrt+4)^(0+128),w
  5343  0694  00A4               	movwf	fputc@fp^(0+128)
  5344  0695  318B  23D2  3185   	fcall	_fputc
  5345                           
  5346                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  5347  0698  0021               	movlb	1	; select bank1
  5348  0699  085A               	movf	vfpfcnvrt@fmt^(0+128),w
  5349  069A  0086               	movwf	6
  5350  069B  3001               	movlw	1	; select bank2/3
  5351  069C  0087               	movwf	7
  5352  069D  3001               	movlw	1
  5353  069E  0781               	addwf	1,f
  5354  069F  3141               	addfsr 1,1
  5355  06A0  1803               	skipnc
  5356  06A1  0A81               	incf	1,f
  5357  06A2  2E6E               	goto	l3413
  5358  06A3                     __end_of_vfpfcnvrt:	
  5359                           
  5360                           	psect	text9
  5361  044F                     __ptext9:	
  5362 ;; *************** function _dtoa *****************
  5363 ;; Defined at:
  5364 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5365 ;; Parameters:    Size  Location     Type
  5366 ;;  fp              1    wreg     PTR struct _IO_FILE
  5367 ;;		 -> NULL(0), 
  5368 ;;  d               8   28[BANK1 ] long long 
  5369 ;; Auto vars:     Size  Location     Type
  5370 ;;  fp              1   41[BANK1 ] PTR struct _IO_FILE
  5371 ;;		 -> NULL(0), 
  5372 ;;  n               8   48[BANK1 ] long long 
  5373 ;;  i               2   56[BANK1 ] int 
  5374 ;;  s               2   46[BANK1 ] int 
  5375 ;;  w               2   44[BANK1 ] int 
  5376 ;;  p               2   42[BANK1 ] int 
  5377 ;; Return value:  Size  Location     Type
  5378 ;;                  2   28[BANK1 ] int 
  5379 ;; Registers used:
  5380 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5381 ;; Tracked objects:
  5382 ;;		On entry : 0/0
  5383 ;;		On exit  : 0/0
  5384 ;;		Unchanged: 0/0
  5385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5386 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  5387 ;;      Locals:         0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0
  5388 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5389 ;;      Totals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0
  5390 ;;Total ram usage:       30 bytes
  5391 ;; Hardware stack levels used:    1
  5392 ;; Hardware stack levels required when called:   11
  5393 ;; This function calls:
  5394 ;;		___aodiv
  5395 ;;		___aomod
  5396 ;;		_abs
  5397 ;;		_pad
  5398 ;; This function is called by:
  5399 ;;		_vfpfcnvrt
  5400 ;; This function uses a non-reentrant model
  5401 ;;
  5402                           
  5403                           
  5404                           ;psect for function _dtoa
  5405  044F                     _dtoa:	
  5406                           
  5407                           ;incstack = 0
  5408                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5409                           ;dtoa@fp stored from wreg
  5410  044F  0021               	movlb	1	; select bank1
  5411  0450  00C9               	movwf	dtoa@fp^(0+128)
  5412                           
  5413                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  5414  0451  083C               	movf	dtoa@d^(0+128),w
  5415  0452  00D0               	movwf	dtoa@n^(0+128)
  5416  0453  083D               	movf	(dtoa@d+1)^(0+128),w
  5417  0454  00D1               	movwf	(dtoa@n+1)^(0+128)
  5418  0455  083E               	movf	(dtoa@d+2)^(0+128),w
  5419  0456  00D2               	movwf	(dtoa@n+2)^(0+128)
  5420  0457  083F               	movf	(dtoa@d+3)^(0+128),w
  5421  0458  00D3               	movwf	(dtoa@n+3)^(0+128)
  5422  0459  0840               	movf	(dtoa@d+4)^(0+128),w
  5423  045A  00D4               	movwf	(dtoa@n+4)^(0+128)
  5424  045B  0841               	movf	(dtoa@d+5)^(0+128),w
  5425  045C  00D5               	movwf	(dtoa@n+5)^(0+128)
  5426  045D  0842               	movf	(dtoa@d+6)^(0+128),w
  5427  045E  00D6               	movwf	(dtoa@n+6)^(0+128)
  5428  045F  0843               	movf	(dtoa@d+7)^(0+128),w
  5429  0460  00D7               	movwf	(dtoa@n+7)^(0+128)
  5430                           
  5431                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  5432  0461  30D0               	movlw	low dtoa@n
  5433  0462  0086               	movwf	6
  5434  0463  3000               	movlw	high dtoa@n
  5435  0464  0087               	movwf	7
  5436  0465  3F47               	moviw [7]fsr1
  5437  0466  00C4               	movwf	??_dtoa^(0+128)
  5438  0467  1FC4               	btfss	??_dtoa^(0+128),7
  5439  0468  2C6B               	goto	u4100
  5440  0469  3001               	movlw	1
  5441  046A  2C6C               	goto	u4110
  5442  046B                     u4100:	
  5443  046B  3000               	movlw	0
  5444  046C                     u4110:	
  5445  046C  0021               	movlb	1	; select bank1
  5446  046D  00C5               	movwf	(??_dtoa+1)^(0+128)
  5447  046E  01C6               	clrf	((??_dtoa+1)^(0+128)+1)
  5448  046F  0845               	movf	(??_dtoa+1)^(0+128),w
  5449  0470  00CE               	movwf	dtoa@s^(0+128)
  5450  0471  0846               	movf	(??_dtoa+2)^(0+128),w
  5451  0472  00CF               	movwf	(dtoa@s+1)^(0+128)
  5452                           
  5453                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  5454  0473  084E               	movf	dtoa@s^(0+128),w
  5455  0474  044F               	iorwf	(dtoa@s+1)^(0+128),w
  5456  0475  1903               	btfsc	3,2
  5457  0476  2C95               	goto	l464
  5458                           
  5459                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  5460  0477  09D0               	comf	dtoa@n^(0+128),f
  5461  0478  09D1               	comf	(dtoa@n+1)^(0+128),f
  5462  0479  09D2               	comf	(dtoa@n+2)^(0+128),f
  5463  047A  09D3               	comf	(dtoa@n+3)^(0+128),f
  5464  047B  09D4               	comf	(dtoa@n+4)^(0+128),f
  5465  047C  09D5               	comf	(dtoa@n+5)^(0+128),f
  5466  047D  09D6               	comf	(dtoa@n+6)^(0+128),f
  5467  047E  09D7               	comf	(dtoa@n+7)^(0+128),f
  5468  047F  0AD0               	incf	dtoa@n^(0+128),f
  5469  0480  1D03               	skipz
  5470  0481  2C95               	goto	l464
  5471  0482  0AD1               	incf	(dtoa@n+1)^(0+128),f
  5472  0483  1D03               	skipz
  5473  0484  2C95               	goto	l464
  5474  0485  0AD2               	incf	(dtoa@n+2)^(0+128),f
  5475  0486  1D03               	skipz
  5476  0487  2C95               	goto	l464
  5477  0488  0AD3               	incf	(dtoa@n+3)^(0+128),f
  5478  0489  1D03               	skipz
  5479  048A  2C95               	goto	l464
  5480  048B  0AD4               	incf	(dtoa@n+4)^(0+128),f
  5481  048C  1D03               	skipz
  5482  048D  2C95               	goto	l464
  5483  048E  0AD5               	incf	(dtoa@n+5)^(0+128),f
  5484  048F  1D03               	skipz
  5485  0490  2C95               	goto	l464
  5486  0491  0AD6               	incf	(dtoa@n+6)^(0+128),f
  5487  0492  1D03               	skipz
  5488  0493  2C95               	goto	l464
  5489  0494  0AD7               	incf	(dtoa@n+7)^(0+128),f
  5490  0495                     l464:	
  5491                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 284:     }
  5492                           
  5493                           
  5494                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  5495  0495  0021               	movlb	1	; select bank1
  5496  0496  1BED               	btfsc	(_prec+1)^(0+128),7
  5497  0497  2C9C               	goto	l465
  5498                           
  5499                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  5500  0498  30FD               	movlw	253
  5501  0499  05EE               	andwf	_flags^(0+128),f
  5502  049A  30FF               	movlw	255
  5503  049B  05EF               	andwf	(_flags+1)^(0+128),f
  5504  049C                     l465:	
  5505                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 289:     }
  5506                           
  5507                           
  5508                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  5509  049C  086D               	movf	(_prec+1)^(0+128),w
  5510  049D  3A80               	xorlw	128
  5511  049E  00C4               	movwf	??_dtoa^(0+128)
  5512  049F  3080               	movlw	128
  5513  04A0  0244               	subwf	??_dtoa^(0+128),w
  5514  04A1  1D03               	skipz
  5515  04A2  2CA5               	goto	u4155
  5516  04A3  3001               	movlw	1
  5517  04A4  026C               	subwf	_prec^(0+128),w
  5518  04A5                     u4155:	
  5519  04A5  1803               	skipnc
  5520  04A6  2CAD               	goto	l3319
  5521  04A7  3001               	movlw	1
  5522  04A8  0021               	movlb	1	; select bank1
  5523  04A9  00CA               	movwf	dtoa@p^(0+128)
  5524  04AA  3000               	movlw	0
  5525  04AB  00CB               	movwf	(dtoa@p^(0+128)+1)
  5526  04AC  2CB2               	goto	l469
  5527  04AD                     l3319:	
  5528  04AD  0021               	movlb	1	; select bank1
  5529  04AE  086D               	movf	(_prec+1)^(0+128),w
  5530  04AF  00CB               	movwf	(dtoa@p+1)^(0+128)
  5531  04B0  086C               	movf	_prec^(0+128),w
  5532  04B1  00CA               	movwf	dtoa@p^(0+128)
  5533  04B2                     l469:	
  5534                           
  5535                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  5536  04B2  0020               	movlb	0	; select bank0
  5537  04B3  084F               	movf	_width+1,w
  5538  04B4  0021               	movlb	1	; select bank1
  5539  04B5  00CD               	movwf	(dtoa@w+1)^(0+128)
  5540  04B6  0020               	movlb	0	; select bank0
  5541  04B7  084E               	movf	_width,w
  5542  04B8  0021               	movlb	1	; select bank1
  5543  04B9  00CC               	movwf	dtoa@w^(0+128)
  5544                           
  5545                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  5546  04BA  084E               	movf	dtoa@s^(0+128),w
  5547  04BB  044F               	iorwf	(dtoa@s+1)^(0+128),w
  5548  04BC  1D03               	btfss	3,2
  5549  04BD  2CC0               	goto	l3325
  5550  04BE  1D6E               	btfss	_flags^(0+128),2
  5551  04BF  2CC4               	goto	l470
  5552  04C0                     l3325:	
  5553                           
  5554                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  5555  04C0  30FF               	movlw	255
  5556  04C1  07CC               	addwf	dtoa@w^(0+128),f
  5557  04C2  30FF               	movlw	255
  5558  04C3  3DCD               	addwfc	(dtoa@w+1)^(0+128),f
  5559  04C4                     l470:	
  5560                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 294:     }
  5561                           
  5562                           
  5563                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  5564  04C4  301F               	movlw	31
  5565  04C5  00D8               	movwf	dtoa@i^(0+128)
  5566  04C6  3000               	movlw	0
  5567  04C7  00D9               	movwf	(dtoa@i^(0+128)+1)
  5568                           
  5569                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  5570  04C8  0022               	movlb	2	; select bank2
  5571  04C9  01C3               	clrf	(_dbuf^(0+256)+31)
  5572                           
  5573                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5574  04CA  2D59               	goto	l473
  5575  04CB                     l3339:	
  5576  04CB  0021               	movlb	1	; select bank1
  5577  04CC  0850               	movf	dtoa@n^(0+128),w
  5578  04CD  0451               	iorwf	(dtoa@n+1)^(0+128),w
  5579  04CE  0452               	iorwf	(dtoa@n+2)^(0+128),w
  5580  04CF  0453               	iorwf	(dtoa@n+3)^(0+128),w
  5581  04D0  0454               	iorwf	(dtoa@n+4)^(0+128),w
  5582  04D1  0455               	iorwf	(dtoa@n+5)^(0+128),w
  5583  04D2  0456               	iorwf	(dtoa@n+6)^(0+128),w
  5584  04D3  0457               	iorwf	(dtoa@n+7)^(0+128),w
  5585  04D4  1D03               	skipz
  5586  04D5  2CF0               	goto	l3329
  5587  04D6  084B               	movf	(dtoa@p+1)^(0+128),w
  5588  04D7  3A80               	xorlw	128
  5589  04D8  00C4               	movwf	??_dtoa^(0+128)
  5590  04D9  3080               	movlw	128
  5591  04DA  0244               	subwf	??_dtoa^(0+128),w
  5592  04DB  1D03               	skipz
  5593  04DC  2CDF               	goto	u4205
  5594  04DD  3001               	movlw	1
  5595  04DE  024A               	subwf	dtoa@p^(0+128),w
  5596  04DF                     u4205:	
  5597  04DF  1803               	skipnc
  5598  04E0  2CF0               	goto	l3329
  5599  04E1  0021               	movlb	1	; select bank1
  5600  04E2  084D               	movf	(dtoa@w+1)^(0+128),w
  5601  04E3  3A80               	xorlw	128
  5602  04E4  00C4               	movwf	??_dtoa^(0+128)
  5603  04E5  3080               	movlw	128
  5604  04E6  0244               	subwf	??_dtoa^(0+128),w
  5605  04E7  1D03               	skipz
  5606  04E8  2CEB               	goto	u4215
  5607  04E9  3001               	movlw	1
  5608  04EA  024C               	subwf	dtoa@w^(0+128),w
  5609  04EB                     u4215:	
  5610  04EB  1C03               	skipc
  5611  04EC  2D65               	goto	l3347
  5612  04ED  0021               	movlb	1	; select bank1
  5613  04EE  1CEE               	btfss	_flags^(0+128),1
  5614  04EF  2D65               	goto	l3347
  5615  04F0                     l3329:	
  5616                           
  5617                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  5618  04F0  30FF               	movlw	255
  5619  04F1  0021               	movlb	1	; select bank1
  5620  04F2  07D8               	addwf	dtoa@i^(0+128),f
  5621  04F3  30FF               	movlw	255
  5622  04F4  3DD9               	addwfc	(dtoa@i+1)^(0+128),f
  5623                           
  5624                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  5625  04F5  300A               	movlw	10
  5626  04F6  00A0               	movwf	___aomod@divisor^(0+128)
  5627  04F7  01A1               	clrf	(___aomod@divisor+1)^(0+128)
  5628  04F8  01A2               	clrf	(___aomod@divisor+2)^(0+128)
  5629  04F9  01A3               	clrf	(___aomod@divisor+3)^(0+128)
  5630  04FA  01A4               	clrf	(___aomod@divisor+4)^(0+128)
  5631  04FB  01A5               	clrf	(___aomod@divisor+5)^(0+128)
  5632  04FC  01A6               	clrf	(___aomod@divisor+6)^(0+128)
  5633  04FD  01A7               	clrf	(___aomod@divisor+7)^(0+128)
  5634  04FE  0850               	movf	dtoa@n^(0+128),w
  5635  04FF  00A8               	movwf	___aomod@dividend^(0+128)
  5636  0500  0851               	movf	(dtoa@n+1)^(0+128),w
  5637  0501  00A9               	movwf	(___aomod@dividend+1)^(0+128)
  5638  0502  0852               	movf	(dtoa@n+2)^(0+128),w
  5639  0503  00AA               	movwf	(___aomod@dividend+2)^(0+128)
  5640  0504  0853               	movf	(dtoa@n+3)^(0+128),w
  5641  0505  00AB               	movwf	(___aomod@dividend+3)^(0+128)
  5642  0506  0854               	movf	(dtoa@n+4)^(0+128),w
  5643  0507  00AC               	movwf	(___aomod@dividend+4)^(0+128)
  5644  0508  0855               	movf	(dtoa@n+5)^(0+128),w
  5645  0509  00AD               	movwf	(___aomod@dividend+5)^(0+128)
  5646  050A  0856               	movf	(dtoa@n+6)^(0+128),w
  5647  050B  00AE               	movwf	(___aomod@dividend+6)^(0+128)
  5648  050C  0857               	movf	(dtoa@n+7)^(0+128),w
  5649  050D  00AF               	movwf	(___aomod@dividend+7)^(0+128)
  5650  050E  318E  262A  3184   	fcall	___aomod
  5651  0511  0021               	movlb	1	; select bank1
  5652  0512  0821               	movf	(?___aomod+1)^(0+128),w
  5653  0513  00B4               	movwf	(abs@a+1)^(0+128)
  5654  0514  0820               	movf	?___aomod^(0+128),w
  5655  0515  00B3               	movwf	abs@a^(0+128)
  5656  0516  318A  2223  3184   	fcall	_abs
  5657  0519  0021               	movlb	1	; select bank1
  5658  051A  0833               	movf	?_abs^(0+128),w
  5659  051B  3E30               	addlw	48
  5660  051C  00C4               	movwf	??_dtoa^(0+128)
  5661  051D  0858               	movf	dtoa@i^(0+128),w
  5662  051E  3E24               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5663  051F  0086               	movwf	6
  5664  0520  3001               	movlw	1	; select bank2/3
  5665  0521  0087               	movwf	7
  5666  0522  0844               	movf	??_dtoa^(0+128),w
  5667  0523  0081               	movwf	1
  5668                           
  5669                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  5670  0524  30FF               	movlw	255
  5671  0525  07CA               	addwf	dtoa@p^(0+128),f
  5672  0526  30FF               	movlw	255
  5673  0527  3DCB               	addwfc	(dtoa@p+1)^(0+128),f
  5674                           
  5675                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  5676  0528  30FF               	movlw	255
  5677  0529  07CC               	addwf	dtoa@w^(0+128),f
  5678  052A  30FF               	movlw	255
  5679  052B  3DCD               	addwfc	(dtoa@w+1)^(0+128),f
  5680                           
  5681                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  5682  052C  300A               	movlw	10
  5683  052D  00A0               	movwf	___aodiv@divisor^(0+128)
  5684  052E  01A1               	clrf	(___aodiv@divisor+1)^(0+128)
  5685  052F  01A2               	clrf	(___aodiv@divisor+2)^(0+128)
  5686  0530  01A3               	clrf	(___aodiv@divisor+3)^(0+128)
  5687  0531  01A4               	clrf	(___aodiv@divisor+4)^(0+128)
  5688  0532  01A5               	clrf	(___aodiv@divisor+5)^(0+128)
  5689  0533  01A6               	clrf	(___aodiv@divisor+6)^(0+128)
  5690  0534  01A7               	clrf	(___aodiv@divisor+7)^(0+128)
  5691  0535  0850               	movf	dtoa@n^(0+128),w
  5692  0536  00A8               	movwf	___aodiv@dividend^(0+128)
  5693  0537  0851               	movf	(dtoa@n+1)^(0+128),w
  5694  0538  00A9               	movwf	(___aodiv@dividend+1)^(0+128)
  5695  0539  0852               	movf	(dtoa@n+2)^(0+128),w
  5696  053A  00AA               	movwf	(___aodiv@dividend+2)^(0+128)
  5697  053B  0853               	movf	(dtoa@n+3)^(0+128),w
  5698  053C  00AB               	movwf	(___aodiv@dividend+3)^(0+128)
  5699  053D  0854               	movf	(dtoa@n+4)^(0+128),w
  5700  053E  00AC               	movwf	(___aodiv@dividend+4)^(0+128)
  5701  053F  0855               	movf	(dtoa@n+5)^(0+128),w
  5702  0540  00AD               	movwf	(___aodiv@dividend+5)^(0+128)
  5703  0541  0856               	movf	(dtoa@n+6)^(0+128),w
  5704  0542  00AE               	movwf	(___aodiv@dividend+6)^(0+128)
  5705  0543  0857               	movf	(dtoa@n+7)^(0+128),w
  5706  0544  00AF               	movwf	(___aodiv@dividend+7)^(0+128)
  5707  0545  318F  2709  3184   	fcall	___aodiv
  5708  0548  0021               	movlb	1	; select bank1
  5709  0549  0820               	movf	?___aodiv^(0+128),w
  5710  054A  00D0               	movwf	dtoa@n^(0+128)
  5711  054B  0821               	movf	(?___aodiv+1)^(0+128),w
  5712  054C  00D1               	movwf	(dtoa@n+1)^(0+128)
  5713  054D  0822               	movf	(?___aodiv+2)^(0+128),w
  5714  054E  00D2               	movwf	(dtoa@n+2)^(0+128)
  5715  054F  0823               	movf	(?___aodiv+3)^(0+128),w
  5716  0550  00D3               	movwf	(dtoa@n+3)^(0+128)
  5717  0551  0824               	movf	(?___aodiv+4)^(0+128),w
  5718  0552  00D4               	movwf	(dtoa@n+4)^(0+128)
  5719  0553  0825               	movf	(?___aodiv+5)^(0+128),w
  5720  0554  00D5               	movwf	(dtoa@n+5)^(0+128)
  5721  0555  0826               	movf	(?___aodiv+6)^(0+128),w
  5722  0556  00D6               	movwf	(dtoa@n+6)^(0+128)
  5723  0557  0827               	movf	(?___aodiv+7)^(0+128),w
  5724  0558  00D7               	movwf	(dtoa@n+7)^(0+128)
  5725  0559                     l473:	
  5726                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 305:     }
  5727                           
  5728                           
  5729                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5730  0559  0021               	movlb	1	; select bank1
  5731  055A  0859               	movf	(dtoa@i+1)^(0+128),w
  5732  055B  3A80               	xorlw	128
  5733  055C  00C4               	movwf	??_dtoa^(0+128)
  5734  055D  3080               	movlw	128
  5735  055E  0244               	subwf	??_dtoa^(0+128),w
  5736  055F  1D03               	skipz
  5737  0560  2D63               	goto	u4185
  5738  0561  3001               	movlw	1
  5739  0562  0258               	subwf	dtoa@i^(0+128),w
  5740  0563                     u4185:	
  5741  0563  1803               	btfsc	3,0
  5742  0564  2CCB               	goto	l3339
  5743  0565                     l3347:	
  5744                           
  5745                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  5746  0565  0021               	movlb	1	; select bank1
  5747  0566  084E               	movf	dtoa@s^(0+128),w
  5748  0567  044F               	iorwf	(dtoa@s+1)^(0+128),w
  5749  0568  1D03               	btfss	3,2
  5750  0569  2D6C               	goto	l3351
  5751  056A  1D6E               	btfss	_flags^(0+128),2
  5752  056B  2D83               	goto	l3361
  5753  056C                     l3351:	
  5754                           
  5755                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  5756  056C  30FF               	movlw	255
  5757  056D  07D8               	addwf	dtoa@i^(0+128),f
  5758  056E  30FF               	movlw	255
  5759  056F  3DD9               	addwfc	(dtoa@i+1)^(0+128),f
  5760                           
  5761                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  5762  0570  084E               	movf	dtoa@s^(0+128),w
  5763  0571  044F               	iorwf	(dtoa@s+1)^(0+128),w
  5764  0572  1D03               	btfss	3,2
  5765  0573  2D76               	goto	l3357
  5766  0574  302B               	movlw	43
  5767  0575  2D77               	goto	L2
  5768  0576                     l3357:	
  5769  0576  302D               	movlw	45
  5770  0577                     L2:	
  5771  0577  00C7               	movwf	_dtoa$695^(0+128)
  5772  0578  3000               	movlw	0
  5773  0579  00C8               	movwf	(_dtoa$695^(0+128)+1)
  5774  057A  0847               	movf	_dtoa$695^(0+128),w
  5775  057B  00C4               	movwf	??_dtoa^(0+128)
  5776  057C  0858               	movf	dtoa@i^(0+128),w
  5777  057D  3E24               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5778  057E  0086               	movwf	6
  5779  057F  3001               	movlw	1	; select bank2/3
  5780  0580  0087               	movwf	7
  5781  0581  0844               	movf	??_dtoa^(0+128),w
  5782  0582  0081               	movwf	1
  5783  0583                     l3361:	
  5784                           
  5785                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  5786  0583  0858               	movf	dtoa@i^(0+128),w
  5787  0584  3E24               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5788  0585  00C4               	movwf	??_dtoa^(0+128)
  5789  0586  0844               	movf	??_dtoa^(0+128),w
  5790  0587  00B3               	movwf	pad@buf^(0+128)
  5791  0588  084D               	movf	(dtoa@w+1)^(0+128),w
  5792  0589  00B5               	movwf	(pad@p+1)^(0+128)
  5793  058A  084C               	movf	dtoa@w^(0+128),w
  5794  058B  00B4               	movwf	pad@p^(0+128)
  5795  058C  0849               	movf	dtoa@fp^(0+128),w
  5796  058D  3187  279B         	fcall	_pad
  5797  058F  0021               	movlb	1	; select bank1
  5798  0590  0834               	movf	(?_pad+1)^(0+128),w
  5799  0591  00BD               	movwf	(?_dtoa+1)^(0+128)
  5800  0592  0833               	movf	?_pad^(0+128),w
  5801  0593  00BC               	movwf	?_dtoa^(0+128)
  5802  0594  0008               	return
  5803  0595                     __end_of_dtoa:	
  5804                           
  5805                           	psect	text10
  5806  079B                     __ptext10:	
  5807 ;; *************** function _pad *****************
  5808 ;; Defined at:
  5809 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5810 ;; Parameters:    Size  Location     Type
  5811 ;;  fp              1    wreg     PTR struct _IO_FILE
  5812 ;;		 -> NULL(0), 
  5813 ;;  buf             1   19[BANK1 ] PTR unsigned char 
  5814 ;;		 -> dbuf(32), 
  5815 ;;  p               2   20[BANK1 ] int 
  5816 ;; Auto vars:     Size  Location     Type
  5817 ;;  fp              1   27[BANK1 ] PTR struct _IO_FILE
  5818 ;;		 -> NULL(0), 
  5819 ;;  w               2   25[BANK1 ] int 
  5820 ;;  i               2   23[BANK1 ] int 
  5821 ;; Return value:  Size  Location     Type
  5822 ;;                  2   19[BANK1 ] int 
  5823 ;; Registers used:
  5824 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5825 ;; Tracked objects:
  5826 ;;		On entry : 0/0
  5827 ;;		On exit  : 0/0
  5828 ;;		Unchanged: 0/0
  5829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5830 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5831 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  5832 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5833 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  5834 ;;Total ram usage:        9 bytes
  5835 ;; Hardware stack levels used:    1
  5836 ;; Hardware stack levels required when called:   10
  5837 ;; This function calls:
  5838 ;;		_fputc
  5839 ;;		_fputs
  5840 ;;		_strlen
  5841 ;; This function is called by:
  5842 ;;		_dtoa
  5843 ;; This function uses a non-reentrant model
  5844 ;;
  5845                           
  5846                           
  5847                           ;psect for function _pad
  5848  079B                     _pad:	
  5849                           
  5850                           ;incstack = 0
  5851                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5852                           ;pad@fp stored from wreg
  5853  079B  0021               	movlb	1	; select bank1
  5854  079C  00BB               	movwf	pad@fp^(0+128)
  5855                           
  5856                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  5857  079D  1C6E               	btfss	_flags^(0+128),0
  5858  079E  2FAA               	goto	l3217
  5859                           
  5860                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  5861  079F  0833               	movf	pad@buf^(0+128),w
  5862  07A0  00AA               	movwf	fputs@s^(0+128)
  5863  07A1  3001               	movlw	1
  5864  07A2  00AB               	movwf	(fputs@s+1)^(0+128)
  5865  07A3  083B               	movf	pad@fp^(0+128),w
  5866  07A4  00B6               	movwf	??_pad^(0+128)
  5867  07A5  0836               	movf	??_pad^(0+128),w
  5868  07A6  00AC               	movwf	fputs@fp^(0+128)
  5869  07A7  318A  22D4  3187   	fcall	_fputs
  5870  07AA                     l3217:	
  5871                           
  5872                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  5873  07AA  0021               	movlb	1	; select bank1
  5874  07AB  1BB5               	btfsc	(pad@p+1)^(0+128),7
  5875  07AC  2FB2               	goto	l3221
  5876  07AD  0835               	movf	(pad@p+1)^(0+128),w
  5877  07AE  00BA               	movwf	(pad@w+1)^(0+128)
  5878  07AF  0834               	movf	pad@p^(0+128),w
  5879  07B0  00B9               	movwf	pad@w^(0+128)
  5880  07B1  2FB4               	goto	l456
  5881  07B2                     l3221:	
  5882  07B2  01B9               	clrf	pad@w^(0+128)
  5883  07B3  01BA               	clrf	(pad@w+1)^(0+128)
  5884  07B4                     l456:	
  5885                           
  5886                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  5887  07B4  01B7               	clrf	pad@i^(0+128)
  5888  07B5  01B8               	clrf	(pad@i+1)^(0+128)
  5889  07B6                     l3227:	
  5890                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  5891                           
  5892                           
  5893                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  5894  07B6  0838               	movf	(pad@i+1)^(0+128),w
  5895  07B7  3A80               	xorlw	128
  5896  07B8  00B6               	movwf	??_pad^(0+128)
  5897  07B9  083A               	movf	(pad@w+1)^(0+128),w
  5898  07BA  3A80               	xorlw	128
  5899  07BB  0236               	subwf	??_pad^(0+128),w
  5900  07BC  1D03               	skipz
  5901  07BD  2FC0               	goto	u3865
  5902  07BE  0839               	movf	pad@w^(0+128),w
  5903  07BF  0237               	subwf	pad@i^(0+128),w
  5904  07C0                     u3865:	
  5905  07C0  1803               	btfsc	3,0
  5906  07C1  2FD4               	goto	l459
  5907                           
  5908                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  5909  07C2  3020               	movlw	32
  5910  07C3  0021               	movlb	1	; select bank1
  5911  07C4  00A2               	movwf	fputc@c^(0+128)
  5912  07C5  3000               	movlw	0
  5913  07C6  00A3               	movwf	(fputc@c^(0+128)+1)
  5914  07C7  083B               	movf	pad@fp^(0+128),w
  5915  07C8  00B6               	movwf	??_pad^(0+128)
  5916  07C9  0836               	movf	??_pad^(0+128),w
  5917  07CA  00A4               	movwf	fputc@fp^(0+128)
  5918  07CB  318B  23D2  3187   	fcall	_fputc
  5919                           
  5920                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  5921  07CE  3001               	movlw	1
  5922  07CF  0021               	movlb	1	; select bank1
  5923  07D0  07B7               	addwf	pad@i^(0+128),f
  5924  07D1  3000               	movlw	0
  5925  07D2  3DB8               	addwfc	(pad@i+1)^(0+128),f
  5926  07D3  2FB6               	goto	l3227
  5927  07D4                     l459:	
  5928                           
  5929                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  5930  07D4  0021               	movlb	1	; select bank1
  5931  07D5  186E               	btfsc	_flags^(0+128),0
  5932  07D6  2FE2               	goto	l3231
  5933                           
  5934                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  5935  07D7  0833               	movf	pad@buf^(0+128),w
  5936  07D8  00AA               	movwf	fputs@s^(0+128)
  5937  07D9  3001               	movlw	1
  5938  07DA  00AB               	movwf	(fputs@s+1)^(0+128)
  5939  07DB  083B               	movf	pad@fp^(0+128),w
  5940  07DC  00B6               	movwf	??_pad^(0+128)
  5941  07DD  0836               	movf	??_pad^(0+128),w
  5942  07DE  00AC               	movwf	fputs@fp^(0+128)
  5943  07DF  318A  22D4  3187   	fcall	_fputs
  5944  07E2                     l3231:	
  5945                           
  5946                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  5947  07E2  0021               	movlb	1	; select bank1
  5948  07E3  0833               	movf	pad@buf^(0+128),w
  5949  07E4  318A  223C         	fcall	_strlen
  5950  07E6  0021               	movlb	1	; select bank1
  5951  07E7  0839               	movf	pad@w^(0+128),w
  5952  07E8  0720               	addwf	?_strlen^(0+128),w
  5953  07E9  00B3               	movwf	?_pad^(0+128)
  5954  07EA  083A               	movf	(pad@w+1)^(0+128),w
  5955  07EB  3D21               	addwfc	(?_strlen+1)^(0+128),w
  5956  07EC  00B4               	movwf	(?_pad+1)^(0+128)
  5957  07ED  0008               	return
  5958  07EE                     __end_of_pad:	
  5959                           
  5960                           	psect	text11
  5961  0A3C                     __ptext11:	
  5962 ;; *************** function _strlen *****************
  5963 ;; Defined at:
  5964 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  5965 ;; Parameters:    Size  Location     Type
  5966 ;;  s               1    wreg     PTR const unsigned char 
  5967 ;;		 -> dbuf(32), 
  5968 ;; Auto vars:     Size  Location     Type
  5969 ;;  s               1    4[BANK1 ] PTR const unsigned char 
  5970 ;;		 -> dbuf(32), 
  5971 ;;  a               1    3[BANK1 ] PTR const unsigned char 
  5972 ;;		 -> dbuf(32), 
  5973 ;; Return value:  Size  Location     Type
  5974 ;;                  2    0[BANK1 ] unsigned int 
  5975 ;; Registers used:
  5976 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5977 ;; Tracked objects:
  5978 ;;		On entry : 0/0
  5979 ;;		On exit  : 0/0
  5980 ;;		Unchanged: 0/0
  5981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5982 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5983 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5984 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5985 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  5986 ;;Total ram usage:        5 bytes
  5987 ;; Hardware stack levels used:    1
  5988 ;; Hardware stack levels required when called:    6
  5989 ;; This function calls:
  5990 ;;		Nothing
  5991 ;; This function is called by:
  5992 ;;		_pad
  5993 ;; This function uses a non-reentrant model
  5994 ;;
  5995                           
  5996                           
  5997                           ;psect for function _strlen
  5998  0A3C                     _strlen:	
  5999                           
  6000                           ;incstack = 0
  6001                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  6002                           ;strlen@s stored from wreg
  6003  0A3C  0021               	movlb	1	; select bank1
  6004  0A3D  00A4               	movwf	strlen@s^(0+128)
  6005  0A3E  0824               	movf	strlen@s^(0+128),w
  6006  0A3F  00A2               	movwf	??_strlen^(0+128)
  6007  0A40  0822               	movf	??_strlen^(0+128),w
  6008  0A41  00A3               	movwf	strlen@a^(0+128)
  6009  0A42                     l3207:	
  6010  0A42  0824               	movf	strlen@s^(0+128),w
  6011  0A43  0086               	movwf	6
  6012  0A44  3001               	movlw	1	; select bank2/3
  6013  0A45  0087               	movwf	7
  6014  0A46  0801               	movf	1,w
  6015  0A47  1903               	btfsc	3,2
  6016  0A48  2A4E               	goto	l3209
  6017  0A49  3001               	movlw	1
  6018  0A4A  00A2               	movwf	??_strlen^(0+128)
  6019  0A4B  0822               	movf	??_strlen^(0+128),w
  6020  0A4C  07A4               	addwf	strlen@s^(0+128),f
  6021  0A4D  2A42               	goto	l3207
  6022  0A4E                     l3209:	
  6023  0A4E  0823               	movf	strlen@a^(0+128),w
  6024  0A4F  0224               	subwf	strlen@s^(0+128),w
  6025  0A50  00A0               	movwf	?_strlen^(0+128)
  6026  0A51  01A1               	clrf	(?_strlen+1)^(0+128)
  6027  0A52  1BA0               	btfsc	?_strlen^(0+128),7
  6028  0A53  03A1               	decf	(?_strlen+1)^(0+128),f
  6029  0A54  0008               	return
  6030  0A55                     __end_of_strlen:	
  6031                           
  6032                           	psect	text12
  6033  0AD4                     __ptext12:	
  6034 ;; *************** function _fputs *****************
  6035 ;; Defined at:
  6036 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  6037 ;; Parameters:    Size  Location     Type
  6038 ;;  s               2   10[BANK1 ] PTR const unsigned char 
  6039 ;;		 -> dbuf(32), STR_5(3), hrDisp(13), distanceDisp(11), 
  6040 ;;		 -> speedDisp(8), 
  6041 ;;  fp              1   12[BANK1 ] PTR struct _IO_FILE
  6042 ;;		 -> NULL(0), 
  6043 ;; Auto vars:     Size  Location     Type
  6044 ;;  i               2   17[BANK1 ] int 
  6045 ;;  c               1   16[BANK1 ] unsigned char 
  6046 ;; Return value:  Size  Location     Type
  6047 ;;                  2   10[BANK1 ] int 
  6048 ;; Registers used:
  6049 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6050 ;; Tracked objects:
  6051 ;;		On entry : 0/0
  6052 ;;		On exit  : 0/0
  6053 ;;		Unchanged: 0/0
  6054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6055 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6056 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6057 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6058 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  6059 ;;Total ram usage:        9 bytes
  6060 ;; Hardware stack levels used:    1
  6061 ;; Hardware stack levels required when called:    9
  6062 ;; This function calls:
  6063 ;;		_fputc
  6064 ;; This function is called by:
  6065 ;;		_pad
  6066 ;;		_puts
  6067 ;; This function uses a non-reentrant model
  6068 ;;
  6069                           
  6070                           
  6071                           ;psect for function _fputs
  6072  0AD4                     _fputs:	
  6073                           
  6074                           ;incstack = 0
  6075                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6076  0AD4  0021               	movlb	1	; select bank1
  6077  0AD5  01B1               	clrf	fputs@i^(0+128)
  6078  0AD6  01B2               	clrf	(fputs@i+1)^(0+128)
  6079  0AD7                     l3197:	
  6080  0AD7  082A               	movf	fputs@s^(0+128),w
  6081  0AD8  0731               	addwf	fputs@i^(0+128),w
  6082  0AD9  0084               	movwf	4
  6083  0ADA  082B               	movf	(fputs@s+1)^(0+128),w
  6084  0ADB  3D32               	addwfc	(fputs@i+1)^(0+128),w
  6085  0ADC  0085               	movwf	5
  6086  0ADD  0800               	movf	0,w	;code access
  6087  0ADE  00AD               	movwf	??_fputs^(0+128)
  6088  0ADF  082D               	movf	??_fputs^(0+128),w
  6089  0AE0  00B0               	movwf	fputs@c^(0+128)
  6090  0AE1  0830               	movf	fputs@c^(0+128),w
  6091  0AE2  1903               	btfsc	3,2
  6092  0AE3  2AF8               	goto	l3199
  6093  0AE4  0830               	movf	fputs@c^(0+128),w
  6094  0AE5  00AD               	movwf	??_fputs^(0+128)
  6095  0AE6  01AE               	clrf	(??_fputs^(0+128)+1)
  6096  0AE7  082D               	movf	??_fputs^(0+128),w
  6097  0AE8  00A2               	movwf	fputc@c^(0+128)
  6098  0AE9  082E               	movf	(??_fputs+1)^(0+128),w
  6099  0AEA  00A3               	movwf	(fputc@c+1)^(0+128)
  6100  0AEB  082C               	movf	fputs@fp^(0+128),w
  6101  0AEC  00AF               	movwf	(??_fputs+2)^(0+128)
  6102  0AED  082F               	movf	(??_fputs+2)^(0+128),w
  6103  0AEE  00A4               	movwf	fputc@fp^(0+128)
  6104  0AEF  318B  23D2  318A   	fcall	_fputc
  6105  0AF2  3001               	movlw	1
  6106  0AF3  0021               	movlb	1	; select bank1
  6107  0AF4  07B1               	addwf	fputs@i^(0+128),f
  6108  0AF5  3000               	movlw	0
  6109  0AF6  3DB2               	addwfc	(fputs@i+1)^(0+128),f
  6110  0AF7  2AD7               	goto	l3197
  6111  0AF8                     l3199:	
  6112  0AF8  0832               	movf	(fputs@i+1)^(0+128),w
  6113  0AF9  00AB               	movwf	(?_fputs+1)^(0+128)
  6114  0AFA  0831               	movf	fputs@i^(0+128),w
  6115  0AFB  00AA               	movwf	?_fputs^(0+128)
  6116  0AFC  0008               	return
  6117  0AFD                     __end_of_fputs:	
  6118                           
  6119                           	psect	text13
  6120  0BD2                     __ptext13:	
  6121 ;; *************** function _fputc *****************
  6122 ;; Defined at:
  6123 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  6124 ;; Parameters:    Size  Location     Type
  6125 ;;  c               2    2[BANK1 ] int 
  6126 ;;  fp              1    4[BANK1 ] PTR struct _IO_FILE
  6127 ;;		 -> NULL(0), 
  6128 ;; Auto vars:     Size  Location     Type
  6129 ;;		None
  6130 ;; Return value:  Size  Location     Type
  6131 ;;                  2    2[BANK1 ] int 
  6132 ;; Registers used:
  6133 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6134 ;; Tracked objects:
  6135 ;;		On entry : 0/0
  6136 ;;		On exit  : 0/0
  6137 ;;		Unchanged: 0/0
  6138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6139 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6141 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  6142 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  6143 ;;Total ram usage:        8 bytes
  6144 ;; Hardware stack levels used:    1
  6145 ;; Hardware stack levels required when called:    8
  6146 ;; This function calls:
  6147 ;;		_putch
  6148 ;; This function is called by:
  6149 ;;		_pad
  6150 ;;		_vfpfcnvrt
  6151 ;;		_fputs
  6152 ;;		_puts
  6153 ;; This function uses a non-reentrant model
  6154 ;;
  6155                           
  6156                           
  6157                           ;psect for function _fputc
  6158  0BD2                     _fputc:	
  6159                           
  6160                           ;incstack = 0
  6161                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6162  0BD2  0021               	movlb	1	; select bank1
  6163  0BD3  0824               	movf	fputc@fp^(0+128),w
  6164  0BD4  1D03               	btfss	3,2
  6165  0BD5  0824               	movf	fputc@fp^(0+128),w
  6166  0BD6  1D03               	btfss	3,2
  6167  0BD7  2BDD               	goto	l3181
  6168  0BD8  0822               	movf	fputc@c^(0+128),w
  6169  0BD9  3189  2157  318B   	fcall	_putch
  6170  0BDC  2C09               	goto	l3187
  6171  0BDD                     l3181:	
  6172  0BDD  0824               	movf	fputc@fp^(0+128),w
  6173  0BDE  3E03               	addlw	3
  6174  0BDF  0086               	movwf	6
  6175  0BE0  0187               	clrf	7
  6176  0BE1  0016               	moviw fsr1++
  6177  0BE2  0401               	iorwf	1,w
  6178  0BE3  1903               	btfsc	3,2
  6179  0BE4  2C00               	goto	l3185
  6180  0BE5  0824               	movf	fputc@fp^(0+128),w
  6181  0BE6  3E03               	addlw	3
  6182  0BE7  0086               	movwf	6
  6183  0BE8  0187               	clrf	7
  6184  0BE9  3F40               	moviw [0]fsr1
  6185  0BEA  00A5               	movwf	??_fputc^(0+128)
  6186  0BEB  3F41               	moviw [1]fsr1
  6187  0BEC  00A6               	movwf	(??_fputc^(0+128)+1)
  6188  0BED  0A24               	incf	fputc@fp^(0+128),w
  6189  0BEE  0086               	movwf	6
  6190  0BEF  0187               	clrf	7
  6191  0BF0  3F40               	moviw [0]fsr1
  6192  0BF1  00A7               	movwf	(??_fputc+2)^(0+128)
  6193  0BF2  3F41               	moviw [1]fsr1
  6194  0BF3  00A8               	movwf	((??_fputc+2)^(0+128)+1)
  6195  0BF4  0828               	movf	(??_fputc+3)^(0+128),w
  6196  0BF5  3A80               	xorlw	128
  6197  0BF6  00A9               	movwf	(??_fputc+4)^(0+128)
  6198  0BF7  0826               	movf	(??_fputc+1)^(0+128),w
  6199  0BF8  3A80               	xorlw	128
  6200  0BF9  0229               	subwf	(??_fputc+4)^(0+128),w
  6201  0BFA  1D03               	skipz
  6202  0BFB  2BFE               	goto	u3815
  6203  0BFC  0825               	movf	??_fputc^(0+128),w
  6204  0BFD  0227               	subwf	(??_fputc+2)^(0+128),w
  6205  0BFE                     u3815:	
  6206  0BFE  1803               	skipnc
  6207  0BFF  2C09               	goto	l3187
  6208  0C00                     l3185:	
  6209  0C00  0021               	movlb	1	; select bank1
  6210  0C01  0A24               	incf	fputc@fp^(0+128),w
  6211  0C02  0086               	movwf	6
  6212  0C03  0187               	clrf	7
  6213  0C04  3001               	movlw	1
  6214  0C05  0781               	addwf	1,f
  6215  0C06  3141               	addfsr 1,1
  6216  0C07  1803               	skipnc
  6217  0C08  0A81               	incf	1,f
  6218  0C09                     l3187:	
  6219  0C09  0021               	movlb	1	; select bank1
  6220  0C0A  0822               	movf	fputc@c^(0+128),w
  6221  0C0B  00A5               	movwf	??_fputc^(0+128)
  6222  0C0C  01A6               	clrf	(??_fputc^(0+128)+1)
  6223  0C0D  0825               	movf	??_fputc^(0+128),w
  6224  0C0E  00A2               	movwf	?_fputc^(0+128)
  6225  0C0F  0826               	movf	(??_fputc+1)^(0+128),w
  6226  0C10  00A3               	movwf	(?_fputc+1)^(0+128)
  6227  0C11  0008               	return
  6228  0C12                     __end_of_fputc:	
  6229                           
  6230                           	psect	text14
  6231  0957                     __ptext14:	
  6232 ;; *************** function _putch *****************
  6233 ;; Defined at:
  6234 ;;		line 151 in file "mcc_generated_files/eusart.c"
  6235 ;; Parameters:    Size  Location     Type
  6236 ;;  txData          1    wreg     unsigned char 
  6237 ;; Auto vars:     Size  Location     Type
  6238 ;;  txData          1    1[BANK1 ] unsigned char 
  6239 ;; Return value:  Size  Location     Type
  6240 ;;                  1    wreg      void 
  6241 ;; Registers used:
  6242 ;;		wreg, status,2, status,0, pclath, cstack
  6243 ;; Tracked objects:
  6244 ;;		On entry : 0/0
  6245 ;;		On exit  : 0/0
  6246 ;;		Unchanged: 0/0
  6247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6249 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6251 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6252 ;;Total ram usage:        1 bytes
  6253 ;; Hardware stack levels used:    1
  6254 ;; Hardware stack levels required when called:    7
  6255 ;; This function calls:
  6256 ;;		_EUSART_Write
  6257 ;; This function is called by:
  6258 ;;		_fputc
  6259 ;; This function uses a non-reentrant model
  6260 ;;
  6261                           
  6262                           
  6263                           ;psect for function _putch
  6264  0957                     _putch:	
  6265                           
  6266                           ;incstack = 0
  6267                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  6268                           ;putch@txData stored from wreg
  6269  0957  0021               	movlb	1	; select bank1
  6270  0958  00A1               	movwf	putch@txData^(0+128)
  6271                           
  6272                           ;mcc_generated_files/eusart.c: 151: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 152: {;mcc_generated_files/eusart.c: 153:     EUSART_Write(txData);
  6273  0959  0821               	movf	putch@txData^(0+128),w
  6274  095A  3189  21A5         	fcall	_EUSART_Write
  6275  095C  0008               	return
  6276  095D                     __end_of_putch:	
  6277                           
  6278                           	psect	text15
  6279  09A5                     __ptext15:	
  6280 ;; *************** function _EUSART_Write *****************
  6281 ;; Defined at:
  6282 ;;		line 137 in file "mcc_generated_files/eusart.c"
  6283 ;; Parameters:    Size  Location     Type
  6284 ;;  txData          1    wreg     unsigned char 
  6285 ;; Auto vars:     Size  Location     Type
  6286 ;;  txData          1    0[BANK1 ] unsigned char 
  6287 ;; Return value:  Size  Location     Type
  6288 ;;                  1    wreg      void 
  6289 ;; Registers used:
  6290 ;;		wreg
  6291 ;; Tracked objects:
  6292 ;;		On entry : 0/0
  6293 ;;		On exit  : 0/0
  6294 ;;		Unchanged: 0/0
  6295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6297 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6299 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6300 ;;Total ram usage:        1 bytes
  6301 ;; Hardware stack levels used:    1
  6302 ;; Hardware stack levels required when called:    6
  6303 ;; This function calls:
  6304 ;;		Nothing
  6305 ;; This function is called by:
  6306 ;;		_putch
  6307 ;;		_main
  6308 ;;		_setCursor
  6309 ;;		_backlightBrightness
  6310 ;; This function uses a non-reentrant model
  6311 ;;
  6312                           
  6313                           
  6314                           ;psect for function _EUSART_Write
  6315  09A5                     _EUSART_Write:	
  6316                           
  6317                           ;incstack = 0
  6318                           ; Regs used in _EUSART_Write: [wreg]
  6319                           ;EUSART_Write@txData stored from wreg
  6320  09A5  0021               	movlb	1	; select bank1
  6321  09A6  00A0               	movwf	EUSART_Write@txData^(0+128)
  6322  09A7                     l69:	
  6323                           ;mcc_generated_files/eusart.c: 140:     {;mcc_generated_files/eusart.c: 141:     }
  6324                           
  6325                           
  6326                           ;mcc_generated_files/eusart.c: 139:     while(0 == PIR1bits.TXIF)
  6327  09A7  0020               	movlb	0	; select bank0
  6328  09A8  1E10               	btfss	16,4	;volatile
  6329  09A9  29A7               	goto	l69
  6330                           
  6331                           ;mcc_generated_files/eusart.c: 143:     TX1REG = txData;
  6332  09AA  0021               	movlb	1	; select bank1
  6333  09AB  0820               	movf	EUSART_Write@txData^(0+128),w
  6334  09AC  0023               	movlb	3	; select bank3
  6335  09AD  009A               	movwf	26	;volatile
  6336  09AE  0008               	return
  6337  09AF                     __end_of_EUSART_Write:	
  6338                           
  6339                           	psect	text16
  6340  0A23                     __ptext16:	
  6341 ;; *************** function _abs *****************
  6342 ;; Defined at:
  6343 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  6344 ;; Parameters:    Size  Location     Type
  6345 ;;  a               2   19[BANK1 ] int 
  6346 ;; Auto vars:     Size  Location     Type
  6347 ;;		None
  6348 ;; Return value:  Size  Location     Type
  6349 ;;                  2   19[BANK1 ] int 
  6350 ;; Registers used:
  6351 ;;		wreg, status,2, status,0
  6352 ;; Tracked objects:
  6353 ;;		On entry : 0/0
  6354 ;;		On exit  : 0/0
  6355 ;;		Unchanged: 0/0
  6356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6357 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6359 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6360 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  6361 ;;Total ram usage:        4 bytes
  6362 ;; Hardware stack levels used:    1
  6363 ;; Hardware stack levels required when called:    6
  6364 ;; This function calls:
  6365 ;;		Nothing
  6366 ;; This function is called by:
  6367 ;;		_dtoa
  6368 ;; This function uses a non-reentrant model
  6369 ;;
  6370                           
  6371                           
  6372                           ;psect for function _abs
  6373  0A23                     _abs:	
  6374                           
  6375                           ;incstack = 0
  6376                           ; Regs used in _abs: [wreg+status,2+status,0]
  6377  0A23  0021               	movlb	1	; select bank1
  6378  0A24  0834               	movf	(abs@a+1)^(0+128),w
  6379  0A25  3A80               	xorlw	128
  6380  0A26  00B5               	movwf	??_abs^(0+128)
  6381  0A27  3080               	movlw	128
  6382  0A28  0235               	subwf	??_abs^(0+128),w
  6383  0A29  1D03               	skipz
  6384  0A2A  2A2D               	goto	u3885
  6385  0A2B  3001               	movlw	1
  6386  0A2C  0233               	subwf	abs@a^(0+128),w
  6387  0A2D                     u3885:	
  6388  0A2D  1803               	skipnc
  6389  0A2E  0008               	return
  6390  0A2F  0021               	movlb	1	; select bank1
  6391  0A30  0933               	comf	abs@a^(0+128),w
  6392  0A31  00B5               	movwf	??_abs^(0+128)
  6393  0A32  0934               	comf	(abs@a+1)^(0+128),w
  6394  0A33  00B6               	movwf	(??_abs^(0+128)+1)
  6395  0A34  0AB5               	incf	??_abs^(0+128),f
  6396  0A35  1903               	skipnz
  6397  0A36  0AB6               	incf	(??_abs^(0+128)+1),f
  6398  0A37  0835               	movf	??_abs^(0+128),w
  6399  0A38  00B3               	movwf	?_abs^(0+128)
  6400  0A39  0836               	movf	(??_abs+1)^(0+128),w
  6401  0A3A  00B4               	movwf	(?_abs+1)^(0+128)
  6402  0A3B  0008               	return
  6403  0A3C                     __end_of_abs:	
  6404                           
  6405                           	psect	text17
  6406  0E2A                     __ptext17:	
  6407 ;; *************** function ___aomod *****************
  6408 ;; Defined at:
  6409 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  6410 ;; Parameters:    Size  Location     Type
  6411 ;;  divisor         8    0[BANK1 ] long long 
  6412 ;;  dividend        8    8[BANK1 ] long long 
  6413 ;; Auto vars:     Size  Location     Type
  6414 ;;  sign            1   18[BANK1 ] unsigned char 
  6415 ;;  counter         1   17[BANK1 ] unsigned char 
  6416 ;; Return value:  Size  Location     Type
  6417 ;;                  8    0[BANK1 ] long long 
  6418 ;; Registers used:
  6419 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6420 ;; Tracked objects:
  6421 ;;		On entry : 0/0
  6422 ;;		On exit  : 0/0
  6423 ;;		Unchanged: 0/0
  6424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6425 ;;      Params:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  6426 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6427 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6428 ;;      Totals:         0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0
  6429 ;;Total ram usage:       19 bytes
  6430 ;; Hardware stack levels used:    1
  6431 ;; Hardware stack levels required when called:    6
  6432 ;; This function calls:
  6433 ;;		Nothing
  6434 ;; This function is called by:
  6435 ;;		_dtoa
  6436 ;; This function uses a non-reentrant model
  6437 ;;
  6438                           
  6439                           
  6440                           ;psect for function ___aomod
  6441  0E2A                     ___aomod:	
  6442                           
  6443                           ;incstack = 0
  6444                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  6445  0E2A  0021               	movlb	1	; select bank1
  6446  0E2B  01B2               	clrf	___aomod@sign^(0+128)
  6447  0E2C  30A8               	movlw	low ___aomod@dividend
  6448  0E2D  0086               	movwf	6
  6449  0E2E  3000               	movlw	high ___aomod@dividend
  6450  0E2F  0087               	movwf	7
  6451  0E30  3F47               	moviw [7]fsr1
  6452  0E31  00B0               	movwf	??___aomod^(0+128)
  6453  0E32  1FB0               	btfss	??___aomod^(0+128),7
  6454  0E33  2E56               	goto	l3283
  6455  0E34  0021               	movlb	1	; select bank1
  6456  0E35  09A8               	comf	___aomod@dividend^(0+128),f
  6457  0E36  09A9               	comf	(___aomod@dividend+1)^(0+128),f
  6458  0E37  09AA               	comf	(___aomod@dividend+2)^(0+128),f
  6459  0E38  09AB               	comf	(___aomod@dividend+3)^(0+128),f
  6460  0E39  09AC               	comf	(___aomod@dividend+4)^(0+128),f
  6461  0E3A  09AD               	comf	(___aomod@dividend+5)^(0+128),f
  6462  0E3B  09AE               	comf	(___aomod@dividend+6)^(0+128),f
  6463  0E3C  09AF               	comf	(___aomod@dividend+7)^(0+128),f
  6464  0E3D  0AA8               	incf	___aomod@dividend^(0+128),f
  6465  0E3E  1D03               	skipz
  6466  0E3F  2E53               	goto	u401lld
  6467  0E40  0AA9               	incf	(___aomod@dividend+1)^(0+128),f
  6468  0E41  1D03               	skipz
  6469  0E42  2E53               	goto	u401lld
  6470  0E43  0AAA               	incf	(___aomod@dividend+2)^(0+128),f
  6471  0E44  1D03               	skipz
  6472  0E45  2E53               	goto	u401lld
  6473  0E46  0AAB               	incf	(___aomod@dividend+3)^(0+128),f
  6474  0E47  1D03               	skipz
  6475  0E48  2E53               	goto	u401lld
  6476  0E49  0AAC               	incf	(___aomod@dividend+4)^(0+128),f
  6477  0E4A  1D03               	skipz
  6478  0E4B  2E53               	goto	u401lld
  6479  0E4C  0AAD               	incf	(___aomod@dividend+5)^(0+128),f
  6480  0E4D  1D03               	skipz
  6481  0E4E  2E53               	goto	u401lld
  6482  0E4F  0AAE               	incf	(___aomod@dividend+6)^(0+128),f
  6483  0E50  1D03               	skipz
  6484  0E51  2E53               	goto	u401lld
  6485  0E52  0AAF               	incf	(___aomod@dividend+7)^(0+128),f
  6486  0E53                     u401lld:	
  6487  0E53  0021               	movlb	1	; select bank1
  6488  0E54  01B2               	clrf	___aomod@sign^(0+128)
  6489  0E55  0AB2               	incf	___aomod@sign^(0+128),f
  6490  0E56                     l3283:	
  6491  0E56  30A0               	movlw	low ___aomod@divisor
  6492  0E57  0086               	movwf	6
  6493  0E58  3000               	movlw	high ___aomod@divisor
  6494  0E59  0087               	movwf	7
  6495  0E5A  3F47               	moviw [7]fsr1
  6496  0E5B  0021               	movlb	1	; select bank1
  6497  0E5C  00B0               	movwf	??___aomod^(0+128)
  6498  0E5D  1FB0               	btfss	??___aomod^(0+128),7
  6499  0E5E  2E7E               	goto	l3287
  6500  0E5F  0021               	movlb	1	; select bank1
  6501  0E60  09A0               	comf	___aomod@divisor^(0+128),f
  6502  0E61  09A1               	comf	(___aomod@divisor+1)^(0+128),f
  6503  0E62  09A2               	comf	(___aomod@divisor+2)^(0+128),f
  6504  0E63  09A3               	comf	(___aomod@divisor+3)^(0+128),f
  6505  0E64  09A4               	comf	(___aomod@divisor+4)^(0+128),f
  6506  0E65  09A5               	comf	(___aomod@divisor+5)^(0+128),f
  6507  0E66  09A6               	comf	(___aomod@divisor+6)^(0+128),f
  6508  0E67  09A7               	comf	(___aomod@divisor+7)^(0+128),f
  6509  0E68  0AA0               	incf	___aomod@divisor^(0+128),f
  6510  0E69  1D03               	skipz
  6511  0E6A  2E7E               	goto	l3287
  6512  0E6B  0AA1               	incf	(___aomod@divisor+1)^(0+128),f
  6513  0E6C  1D03               	skipz
  6514  0E6D  2E7E               	goto	l3287
  6515  0E6E  0AA2               	incf	(___aomod@divisor+2)^(0+128),f
  6516  0E6F  1D03               	skipz
  6517  0E70  2E7E               	goto	l3287
  6518  0E71  0AA3               	incf	(___aomod@divisor+3)^(0+128),f
  6519  0E72  1D03               	skipz
  6520  0E73  2E7E               	goto	l3287
  6521  0E74  0AA4               	incf	(___aomod@divisor+4)^(0+128),f
  6522  0E75  1D03               	skipz
  6523  0E76  2E7E               	goto	l3287
  6524  0E77  0AA5               	incf	(___aomod@divisor+5)^(0+128),f
  6525  0E78  1D03               	skipz
  6526  0E79  2E7E               	goto	l3287
  6527  0E7A  0AA6               	incf	(___aomod@divisor+6)^(0+128),f
  6528  0E7B  1D03               	skipz
  6529  0E7C  2E7E               	goto	l3287
  6530  0E7D  0AA7               	incf	(___aomod@divisor+7)^(0+128),f
  6531  0E7E                     l3287:	
  6532  0E7E  0021               	movlb	1	; select bank1
  6533  0E7F  0820               	movf	___aomod@divisor^(0+128),w
  6534  0E80  0421               	iorwf	(___aomod@divisor+1)^(0+128),w
  6535  0E81  0422               	iorwf	(___aomod@divisor+2)^(0+128),w
  6536  0E82  0423               	iorwf	(___aomod@divisor+3)^(0+128),w
  6537  0E83  0424               	iorwf	(___aomod@divisor+4)^(0+128),w
  6538  0E84  0425               	iorwf	(___aomod@divisor+5)^(0+128),w
  6539  0E85  0426               	iorwf	(___aomod@divisor+6)^(0+128),w
  6540  0E86  0427               	iorwf	(___aomod@divisor+7)^(0+128),w
  6541  0E87  1903               	skipnz
  6542  0E88  2ED6               	goto	l3303
  6543  0E89  01B1               	clrf	___aomod@counter^(0+128)
  6544  0E8A  0AB1               	incf	___aomod@counter^(0+128),f
  6545  0E8B                     l3295:	
  6546  0E8B  1BA7               	btfsc	(___aomod@divisor+7)^(0+128),7
  6547  0E8C  2E9A               	goto	l3297
  6548  0E8D  35A0               	lslf	___aomod@divisor^(0+128),f
  6549  0E8E  0DA1               	rlf	(___aomod@divisor+1)^(0+128),f
  6550  0E8F  0DA2               	rlf	(___aomod@divisor+2)^(0+128),f
  6551  0E90  0DA3               	rlf	(___aomod@divisor+3)^(0+128),f
  6552  0E91  0DA4               	rlf	(___aomod@divisor+4)^(0+128),f
  6553  0E92  0DA5               	rlf	(___aomod@divisor+5)^(0+128),f
  6554  0E93  0DA6               	rlf	(___aomod@divisor+6)^(0+128),f
  6555  0E94  0DA7               	rlf	(___aomod@divisor+7)^(0+128),f
  6556  0E95  3001               	movlw	1
  6557  0E96  00B0               	movwf	??___aomod^(0+128)
  6558  0E97  0830               	movf	??___aomod^(0+128),w
  6559  0E98  07B1               	addwf	___aomod@counter^(0+128),f
  6560  0E99  2E8B               	goto	l3295
  6561  0E9A                     l3297:	
  6562  0E9A  0827               	movf	(___aomod@divisor+7)^(0+128),w
  6563  0E9B  022F               	subwf	(___aomod@dividend+7)^(0+128),w
  6564  0E9C  1D03               	skipz
  6565  0E9D  2EB8               	goto	u4065
  6566  0E9E  0826               	movf	(___aomod@divisor+6)^(0+128),w
  6567  0E9F  022E               	subwf	(___aomod@dividend+6)^(0+128),w
  6568  0EA0  1D03               	skipz
  6569  0EA1  2EB8               	goto	u4065
  6570  0EA2  0825               	movf	(___aomod@divisor+5)^(0+128),w
  6571  0EA3  022D               	subwf	(___aomod@dividend+5)^(0+128),w
  6572  0EA4  1D03               	skipz
  6573  0EA5  2EB8               	goto	u4065
  6574  0EA6  0824               	movf	(___aomod@divisor+4)^(0+128),w
  6575  0EA7  022C               	subwf	(___aomod@dividend+4)^(0+128),w
  6576  0EA8  1D03               	skipz
  6577  0EA9  2EB8               	goto	u4065
  6578  0EAA  0823               	movf	(___aomod@divisor+3)^(0+128),w
  6579  0EAB  022B               	subwf	(___aomod@dividend+3)^(0+128),w
  6580  0EAC  1D03               	skipz
  6581  0EAD  2EB8               	goto	u4065
  6582  0EAE  0822               	movf	(___aomod@divisor+2)^(0+128),w
  6583  0EAF  022A               	subwf	(___aomod@dividend+2)^(0+128),w
  6584  0EB0  1D03               	skipz
  6585  0EB1  2EB8               	goto	u4065
  6586  0EB2  0821               	movf	(___aomod@divisor+1)^(0+128),w
  6587  0EB3  0229               	subwf	(___aomod@dividend+1)^(0+128),w
  6588  0EB4  1D03               	skipz
  6589  0EB5  2EB8               	goto	u4065
  6590  0EB6  0820               	movf	___aomod@divisor^(0+128),w
  6591  0EB7  0228               	subwf	___aomod@dividend^(0+128),w
  6592  0EB8                     u4065:	
  6593  0EB8  1C03               	skipc
  6594  0EB9  2ECA               	goto	l3301
  6595  0EBA  0820               	movf	___aomod@divisor^(0+128),w
  6596  0EBB  02A8               	subwf	___aomod@dividend^(0+128),f
  6597  0EBC  0821               	movf	(___aomod@divisor+1)^(0+128),w
  6598  0EBD  3BA9               	subwfb	(___aomod@dividend+1)^(0+128),f
  6599  0EBE  0822               	movf	(___aomod@divisor+2)^(0+128),w
  6600  0EBF  3BAA               	subwfb	(___aomod@dividend+2)^(0+128),f
  6601  0EC0  0823               	movf	(___aomod@divisor+3)^(0+128),w
  6602  0EC1  3BAB               	subwfb	(___aomod@dividend+3)^(0+128),f
  6603  0EC2  0824               	movf	(___aomod@divisor+4)^(0+128),w
  6604  0EC3  3BAC               	subwfb	(___aomod@dividend+4)^(0+128),f
  6605  0EC4  0825               	movf	(___aomod@divisor+5)^(0+128),w
  6606  0EC5  3BAD               	subwfb	(___aomod@dividend+5)^(0+128),f
  6607  0EC6  0826               	movf	(___aomod@divisor+6)^(0+128),w
  6608  0EC7  3BAE               	subwfb	(___aomod@dividend+6)^(0+128),f
  6609  0EC8  0827               	movf	(___aomod@divisor+7)^(0+128),w
  6610  0EC9  3BAF               	subwfb	(___aomod@dividend+7)^(0+128),f
  6611  0ECA                     l3301:	
  6612  0ECA  36A7               	lsrf	(___aomod@divisor+7)^(0+128),f
  6613  0ECB  0CA6               	rrf	(___aomod@divisor+6)^(0+128),f
  6614  0ECC  0CA5               	rrf	(___aomod@divisor+5)^(0+128),f
  6615  0ECD  0CA4               	rrf	(___aomod@divisor+4)^(0+128),f
  6616  0ECE  0CA3               	rrf	(___aomod@divisor+3)^(0+128),f
  6617  0ECF  0CA2               	rrf	(___aomod@divisor+2)^(0+128),f
  6618  0ED0  0CA1               	rrf	(___aomod@divisor+1)^(0+128),f
  6619  0ED1  0CA0               	rrf	___aomod@divisor^(0+128),f
  6620  0ED2  3001               	movlw	1
  6621  0ED3  02B1               	subwf	___aomod@counter^(0+128),f
  6622  0ED4  1D03               	btfss	3,2
  6623  0ED5  2E9A               	goto	l3297
  6624  0ED6                     l3303:	
  6625  0ED6  0832               	movf	___aomod@sign^(0+128),w
  6626  0ED7  1903               	btfsc	3,2
  6627  0ED8  2EF7               	goto	l619
  6628  0ED9  09A8               	comf	___aomod@dividend^(0+128),f
  6629  0EDA  09A9               	comf	(___aomod@dividend+1)^(0+128),f
  6630  0EDB  09AA               	comf	(___aomod@dividend+2)^(0+128),f
  6631  0EDC  09AB               	comf	(___aomod@dividend+3)^(0+128),f
  6632  0EDD  09AC               	comf	(___aomod@dividend+4)^(0+128),f
  6633  0EDE  09AD               	comf	(___aomod@dividend+5)^(0+128),f
  6634  0EDF  09AE               	comf	(___aomod@dividend+6)^(0+128),f
  6635  0EE0  09AF               	comf	(___aomod@dividend+7)^(0+128),f
  6636  0EE1  0AA8               	incf	___aomod@dividend^(0+128),f
  6637  0EE2  1D03               	skipz
  6638  0EE3  2EF7               	goto	l619
  6639  0EE4  0AA9               	incf	(___aomod@dividend+1)^(0+128),f
  6640  0EE5  1D03               	skipz
  6641  0EE6  2EF7               	goto	l619
  6642  0EE7  0AAA               	incf	(___aomod@dividend+2)^(0+128),f
  6643  0EE8  1D03               	skipz
  6644  0EE9  2EF7               	goto	l619
  6645  0EEA  0AAB               	incf	(___aomod@dividend+3)^(0+128),f
  6646  0EEB  1D03               	skipz
  6647  0EEC  2EF7               	goto	l619
  6648  0EED  0AAC               	incf	(___aomod@dividend+4)^(0+128),f
  6649  0EEE  1D03               	skipz
  6650  0EEF  2EF7               	goto	l619
  6651  0EF0  0AAD               	incf	(___aomod@dividend+5)^(0+128),f
  6652  0EF1  1D03               	skipz
  6653  0EF2  2EF7               	goto	l619
  6654  0EF3  0AAE               	incf	(___aomod@dividend+6)^(0+128),f
  6655  0EF4  1D03               	skipz
  6656  0EF5  2EF7               	goto	l619
  6657  0EF6  0AAF               	incf	(___aomod@dividend+7)^(0+128),f
  6658  0EF7                     l619:	
  6659  0EF7  0021               	movlb	1	; select bank1
  6660  0EF8  0828               	movf	___aomod@dividend^(0+128),w
  6661  0EF9  00A0               	movwf	?___aomod^(0+128)
  6662  0EFA  0829               	movf	(___aomod@dividend+1)^(0+128),w
  6663  0EFB  00A1               	movwf	(?___aomod+1)^(0+128)
  6664  0EFC  082A               	movf	(___aomod@dividend+2)^(0+128),w
  6665  0EFD  00A2               	movwf	(?___aomod+2)^(0+128)
  6666  0EFE  082B               	movf	(___aomod@dividend+3)^(0+128),w
  6667  0EFF  00A3               	movwf	(?___aomod+3)^(0+128)
  6668  0F00  082C               	movf	(___aomod@dividend+4)^(0+128),w
  6669  0F01  00A4               	movwf	(?___aomod+4)^(0+128)
  6670  0F02  082D               	movf	(___aomod@dividend+5)^(0+128),w
  6671  0F03  00A5               	movwf	(?___aomod+5)^(0+128)
  6672  0F04  082E               	movf	(___aomod@dividend+6)^(0+128),w
  6673  0F05  00A6               	movwf	(?___aomod+6)^(0+128)
  6674  0F06  082F               	movf	(___aomod@dividend+7)^(0+128),w
  6675  0F07  00A7               	movwf	(?___aomod+7)^(0+128)
  6676  0F08  0008               	return
  6677  0F09                     __end_of___aomod:	
  6678                           
  6679                           	psect	text18
  6680  0F09                     __ptext18:	
  6681 ;; *************** function ___aodiv *****************
  6682 ;; Defined at:
  6683 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  6684 ;; Parameters:    Size  Location     Type
  6685 ;;  divisor         8    0[BANK1 ] long long 
  6686 ;;  dividend        8    8[BANK1 ] long long 
  6687 ;; Auto vars:     Size  Location     Type
  6688 ;;  quotient        8   19[BANK1 ] long long 
  6689 ;;  sign            1   18[BANK1 ] unsigned char 
  6690 ;;  counter         1   17[BANK1 ] unsigned char 
  6691 ;; Return value:  Size  Location     Type
  6692 ;;                  8    0[BANK1 ] long long 
  6693 ;; Registers used:
  6694 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6695 ;; Tracked objects:
  6696 ;;		On entry : 0/0
  6697 ;;		On exit  : 0/0
  6698 ;;		Unchanged: 0/0
  6699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6700 ;;      Params:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  6701 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  6702 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6703 ;;      Totals:         0       0      27       0       0       0       0       0       0       0       0       0       
      +0       0
  6704 ;;Total ram usage:       27 bytes
  6705 ;; Hardware stack levels used:    1
  6706 ;; Hardware stack levels required when called:    6
  6707 ;; This function calls:
  6708 ;;		Nothing
  6709 ;; This function is called by:
  6710 ;;		_dtoa
  6711 ;; This function uses a non-reentrant model
  6712 ;;
  6713                           
  6714                           
  6715                           ;psect for function ___aodiv
  6716  0F09                     ___aodiv:	
  6717                           
  6718                           ;incstack = 0
  6719                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  6720  0F09  0021               	movlb	1	; select bank1
  6721  0F0A  01B2               	clrf	___aodiv@sign^(0+128)
  6722  0F0B  30A0               	movlw	low ___aodiv@divisor
  6723  0F0C  0086               	movwf	6
  6724  0F0D  3000               	movlw	high ___aodiv@divisor
  6725  0F0E  0087               	movwf	7
  6726  0F0F  3F47               	moviw [7]fsr1
  6727  0F10  00B0               	movwf	??___aodiv^(0+128)
  6728  0F11  1FB0               	btfss	??___aodiv^(0+128),7
  6729  0F12  2F35               	goto	l3245
  6730  0F13  0021               	movlb	1	; select bank1
  6731  0F14  09A0               	comf	___aodiv@divisor^(0+128),f
  6732  0F15  09A1               	comf	(___aodiv@divisor+1)^(0+128),f
  6733  0F16  09A2               	comf	(___aodiv@divisor+2)^(0+128),f
  6734  0F17  09A3               	comf	(___aodiv@divisor+3)^(0+128),f
  6735  0F18  09A4               	comf	(___aodiv@divisor+4)^(0+128),f
  6736  0F19  09A5               	comf	(___aodiv@divisor+5)^(0+128),f
  6737  0F1A  09A6               	comf	(___aodiv@divisor+6)^(0+128),f
  6738  0F1B  09A7               	comf	(___aodiv@divisor+7)^(0+128),f
  6739  0F1C  0AA0               	incf	___aodiv@divisor^(0+128),f
  6740  0F1D  1D03               	skipz
  6741  0F1E  2F32               	goto	u390lld
  6742  0F1F  0AA1               	incf	(___aodiv@divisor+1)^(0+128),f
  6743  0F20  1D03               	skipz
  6744  0F21  2F32               	goto	u390lld
  6745  0F22  0AA2               	incf	(___aodiv@divisor+2)^(0+128),f
  6746  0F23  1D03               	skipz
  6747  0F24  2F32               	goto	u390lld
  6748  0F25  0AA3               	incf	(___aodiv@divisor+3)^(0+128),f
  6749  0F26  1D03               	skipz
  6750  0F27  2F32               	goto	u390lld
  6751  0F28  0AA4               	incf	(___aodiv@divisor+4)^(0+128),f
  6752  0F29  1D03               	skipz
  6753  0F2A  2F32               	goto	u390lld
  6754  0F2B  0AA5               	incf	(___aodiv@divisor+5)^(0+128),f
  6755  0F2C  1D03               	skipz
  6756  0F2D  2F32               	goto	u390lld
  6757  0F2E  0AA6               	incf	(___aodiv@divisor+6)^(0+128),f
  6758  0F2F  1D03               	skipz
  6759  0F30  2F32               	goto	u390lld
  6760  0F31  0AA7               	incf	(___aodiv@divisor+7)^(0+128),f
  6761  0F32                     u390lld:	
  6762  0F32  0021               	movlb	1	; select bank1
  6763  0F33  01B2               	clrf	___aodiv@sign^(0+128)
  6764  0F34  0AB2               	incf	___aodiv@sign^(0+128),f
  6765  0F35                     l3245:	
  6766  0F35  30A8               	movlw	low ___aodiv@dividend
  6767  0F36  0086               	movwf	6
  6768  0F37  3000               	movlw	high ___aodiv@dividend
  6769  0F38  0087               	movwf	7
  6770  0F39  3F47               	moviw [7]fsr1
  6771  0F3A  0021               	movlb	1	; select bank1
  6772  0F3B  00B0               	movwf	??___aodiv^(0+128)
  6773  0F3C  1FB0               	btfss	??___aodiv^(0+128),7
  6774  0F3D  2F62               	goto	l3251
  6775  0F3E  0021               	movlb	1	; select bank1
  6776  0F3F  09A8               	comf	___aodiv@dividend^(0+128),f
  6777  0F40  09A9               	comf	(___aodiv@dividend+1)^(0+128),f
  6778  0F41  09AA               	comf	(___aodiv@dividend+2)^(0+128),f
  6779  0F42  09AB               	comf	(___aodiv@dividend+3)^(0+128),f
  6780  0F43  09AC               	comf	(___aodiv@dividend+4)^(0+128),f
  6781  0F44  09AD               	comf	(___aodiv@dividend+5)^(0+128),f
  6782  0F45  09AE               	comf	(___aodiv@dividend+6)^(0+128),f
  6783  0F46  09AF               	comf	(___aodiv@dividend+7)^(0+128),f
  6784  0F47  0AA8               	incf	___aodiv@dividend^(0+128),f
  6785  0F48  1D03               	skipz
  6786  0F49  2F5D               	goto	l3249
  6787  0F4A  0AA9               	incf	(___aodiv@dividend+1)^(0+128),f
  6788  0F4B  1D03               	skipz
  6789  0F4C  2F5D               	goto	l3249
  6790  0F4D  0AAA               	incf	(___aodiv@dividend+2)^(0+128),f
  6791  0F4E  1D03               	skipz
  6792  0F4F  2F5D               	goto	l3249
  6793  0F50  0AAB               	incf	(___aodiv@dividend+3)^(0+128),f
  6794  0F51  1D03               	skipz
  6795  0F52  2F5D               	goto	l3249
  6796  0F53  0AAC               	incf	(___aodiv@dividend+4)^(0+128),f
  6797  0F54  1D03               	skipz
  6798  0F55  2F5D               	goto	l3249
  6799  0F56  0AAD               	incf	(___aodiv@dividend+5)^(0+128),f
  6800  0F57  1D03               	skipz
  6801  0F58  2F5D               	goto	l3249
  6802  0F59  0AAE               	incf	(___aodiv@dividend+6)^(0+128),f
  6803  0F5A  1D03               	skipz
  6804  0F5B  2F5D               	goto	l3249
  6805  0F5C  0AAF               	incf	(___aodiv@dividend+7)^(0+128),f
  6806  0F5D                     l3249:	
  6807  0F5D  3001               	movlw	1
  6808  0F5E  0021               	movlb	1	; select bank1
  6809  0F5F  00B0               	movwf	??___aodiv^(0+128)
  6810  0F60  0830               	movf	??___aodiv^(0+128),w
  6811  0F61  06B2               	xorwf	___aodiv@sign^(0+128),f
  6812  0F62                     l3251:	
  6813  0F62  30B3               	movlw	low ___aodiv@quotient
  6814  0F63  0086               	movwf	6
  6815  0F64  3000               	movlw	high ___aodiv@quotient
  6816  0F65  0087               	movwf	7
  6817  0F66  3008               	movlw	8
  6818  0F67  0021               	movlb	1	; select bank1
  6819  0F68  00B0               	movwf	??___aodiv^(0+128)
  6820  0F69  3000               	movlw	0
  6821  0F6A                     u3930:	
  6822  0F6A  001E               	movwi fsr1++
  6823  0F6B  0BB0               	decfsz	??___aodiv^(0+128),f
  6824  0F6C  2F6A               	goto	u3930
  6825  0F6D  0820               	movf	___aodiv@divisor^(0+128),w
  6826  0F6E  0421               	iorwf	(___aodiv@divisor+1)^(0+128),w
  6827  0F6F  0422               	iorwf	(___aodiv@divisor+2)^(0+128),w
  6828  0F70  0423               	iorwf	(___aodiv@divisor+3)^(0+128),w
  6829  0F71  0424               	iorwf	(___aodiv@divisor+4)^(0+128),w
  6830  0F72  0425               	iorwf	(___aodiv@divisor+5)^(0+128),w
  6831  0F73  0426               	iorwf	(___aodiv@divisor+6)^(0+128),w
  6832  0F74  0427               	iorwf	(___aodiv@divisor+7)^(0+128),w
  6833  0F75  1903               	skipnz
  6834  0F76  2FCD               	goto	l3273
  6835  0F77  01B1               	clrf	___aodiv@counter^(0+128)
  6836  0F78  0AB1               	incf	___aodiv@counter^(0+128),f
  6837  0F79                     l3261:	
  6838  0F79  1BA7               	btfsc	(___aodiv@divisor+7)^(0+128),7
  6839  0F7A  2F88               	goto	l3263
  6840  0F7B  35A0               	lslf	___aodiv@divisor^(0+128),f
  6841  0F7C  0DA1               	rlf	(___aodiv@divisor+1)^(0+128),f
  6842  0F7D  0DA2               	rlf	(___aodiv@divisor+2)^(0+128),f
  6843  0F7E  0DA3               	rlf	(___aodiv@divisor+3)^(0+128),f
  6844  0F7F  0DA4               	rlf	(___aodiv@divisor+4)^(0+128),f
  6845  0F80  0DA5               	rlf	(___aodiv@divisor+5)^(0+128),f
  6846  0F81  0DA6               	rlf	(___aodiv@divisor+6)^(0+128),f
  6847  0F82  0DA7               	rlf	(___aodiv@divisor+7)^(0+128),f
  6848  0F83  3001               	movlw	1
  6849  0F84  00B0               	movwf	??___aodiv^(0+128)
  6850  0F85  0830               	movf	??___aodiv^(0+128),w
  6851  0F86  07B1               	addwf	___aodiv@counter^(0+128),f
  6852  0F87  2F79               	goto	l3261
  6853  0F88                     l3263:	
  6854  0F88  35B3               	lslf	___aodiv@quotient^(0+128),f
  6855  0F89  0DB4               	rlf	(___aodiv@quotient+1)^(0+128),f
  6856  0F8A  0DB5               	rlf	(___aodiv@quotient+2)^(0+128),f
  6857  0F8B  0DB6               	rlf	(___aodiv@quotient+3)^(0+128),f
  6858  0F8C  0DB7               	rlf	(___aodiv@quotient+4)^(0+128),f
  6859  0F8D  0DB8               	rlf	(___aodiv@quotient+5)^(0+128),f
  6860  0F8E  0DB9               	rlf	(___aodiv@quotient+6)^(0+128),f
  6861  0F8F  0DBA               	rlf	(___aodiv@quotient+7)^(0+128),f
  6862  0F90  0827               	movf	(___aodiv@divisor+7)^(0+128),w
  6863  0F91  022F               	subwf	(___aodiv@dividend+7)^(0+128),w
  6864  0F92  1D03               	skipz
  6865  0F93  2FAE               	goto	u3965
  6866  0F94  0826               	movf	(___aodiv@divisor+6)^(0+128),w
  6867  0F95  022E               	subwf	(___aodiv@dividend+6)^(0+128),w
  6868  0F96  1D03               	skipz
  6869  0F97  2FAE               	goto	u3965
  6870  0F98  0825               	movf	(___aodiv@divisor+5)^(0+128),w
  6871  0F99  022D               	subwf	(___aodiv@dividend+5)^(0+128),w
  6872  0F9A  1D03               	skipz
  6873  0F9B  2FAE               	goto	u3965
  6874  0F9C  0824               	movf	(___aodiv@divisor+4)^(0+128),w
  6875  0F9D  022C               	subwf	(___aodiv@dividend+4)^(0+128),w
  6876  0F9E  1D03               	skipz
  6877  0F9F  2FAE               	goto	u3965
  6878  0FA0  0823               	movf	(___aodiv@divisor+3)^(0+128),w
  6879  0FA1  022B               	subwf	(___aodiv@dividend+3)^(0+128),w
  6880  0FA2  1D03               	skipz
  6881  0FA3  2FAE               	goto	u3965
  6882  0FA4  0822               	movf	(___aodiv@divisor+2)^(0+128),w
  6883  0FA5  022A               	subwf	(___aodiv@dividend+2)^(0+128),w
  6884  0FA6  1D03               	skipz
  6885  0FA7  2FAE               	goto	u3965
  6886  0FA8  0821               	movf	(___aodiv@divisor+1)^(0+128),w
  6887  0FA9  0229               	subwf	(___aodiv@dividend+1)^(0+128),w
  6888  0FAA  1D03               	skipz
  6889  0FAB  2FAE               	goto	u3965
  6890  0FAC  0820               	movf	___aodiv@divisor^(0+128),w
  6891  0FAD  0228               	subwf	___aodiv@dividend^(0+128),w
  6892  0FAE                     u3965:	
  6893  0FAE  1C03               	skipc
  6894  0FAF  2FC1               	goto	l3271
  6895  0FB0  0820               	movf	___aodiv@divisor^(0+128),w
  6896  0FB1  02A8               	subwf	___aodiv@dividend^(0+128),f
  6897  0FB2  0821               	movf	(___aodiv@divisor+1)^(0+128),w
  6898  0FB3  3BA9               	subwfb	(___aodiv@dividend+1)^(0+128),f
  6899  0FB4  0822               	movf	(___aodiv@divisor+2)^(0+128),w
  6900  0FB5  3BAA               	subwfb	(___aodiv@dividend+2)^(0+128),f
  6901  0FB6  0823               	movf	(___aodiv@divisor+3)^(0+128),w
  6902  0FB7  3BAB               	subwfb	(___aodiv@dividend+3)^(0+128),f
  6903  0FB8  0824               	movf	(___aodiv@divisor+4)^(0+128),w
  6904  0FB9  3BAC               	subwfb	(___aodiv@dividend+4)^(0+128),f
  6905  0FBA  0825               	movf	(___aodiv@divisor+5)^(0+128),w
  6906  0FBB  3BAD               	subwfb	(___aodiv@dividend+5)^(0+128),f
  6907  0FBC  0826               	movf	(___aodiv@divisor+6)^(0+128),w
  6908  0FBD  3BAE               	subwfb	(___aodiv@dividend+6)^(0+128),f
  6909  0FBE  0827               	movf	(___aodiv@divisor+7)^(0+128),w
  6910  0FBF  3BAF               	subwfb	(___aodiv@dividend+7)^(0+128),f
  6911  0FC0  1433               	bsf	___aodiv@quotient^(0+128),0
  6912  0FC1                     l3271:	
  6913  0FC1  36A7               	lsrf	(___aodiv@divisor+7)^(0+128),f
  6914  0FC2  0CA6               	rrf	(___aodiv@divisor+6)^(0+128),f
  6915  0FC3  0CA5               	rrf	(___aodiv@divisor+5)^(0+128),f
  6916  0FC4  0CA4               	rrf	(___aodiv@divisor+4)^(0+128),f
  6917  0FC5  0CA3               	rrf	(___aodiv@divisor+3)^(0+128),f
  6918  0FC6  0CA2               	rrf	(___aodiv@divisor+2)^(0+128),f
  6919  0FC7  0CA1               	rrf	(___aodiv@divisor+1)^(0+128),f
  6920  0FC8  0CA0               	rrf	___aodiv@divisor^(0+128),f
  6921  0FC9  3001               	movlw	1
  6922  0FCA  02B1               	subwf	___aodiv@counter^(0+128),f
  6923  0FCB  1D03               	btfss	3,2
  6924  0FCC  2F88               	goto	l3263
  6925  0FCD                     l3273:	
  6926  0FCD  0832               	movf	___aodiv@sign^(0+128),w
  6927  0FCE  1903               	btfsc	3,2
  6928  0FCF  2FEE               	goto	l606
  6929  0FD0  09B3               	comf	___aodiv@quotient^(0+128),f
  6930  0FD1  09B4               	comf	(___aodiv@quotient+1)^(0+128),f
  6931  0FD2  09B5               	comf	(___aodiv@quotient+2)^(0+128),f
  6932  0FD3  09B6               	comf	(___aodiv@quotient+3)^(0+128),f
  6933  0FD4  09B7               	comf	(___aodiv@quotient+4)^(0+128),f
  6934  0FD5  09B8               	comf	(___aodiv@quotient+5)^(0+128),f
  6935  0FD6  09B9               	comf	(___aodiv@quotient+6)^(0+128),f
  6936  0FD7  09BA               	comf	(___aodiv@quotient+7)^(0+128),f
  6937  0FD8  0AB3               	incf	___aodiv@quotient^(0+128),f
  6938  0FD9  1D03               	skipz
  6939  0FDA  2FEE               	goto	l606
  6940  0FDB  0AB4               	incf	(___aodiv@quotient+1)^(0+128),f
  6941  0FDC  1D03               	skipz
  6942  0FDD  2FEE               	goto	l606
  6943  0FDE  0AB5               	incf	(___aodiv@quotient+2)^(0+128),f
  6944  0FDF  1D03               	skipz
  6945  0FE0  2FEE               	goto	l606
  6946  0FE1  0AB6               	incf	(___aodiv@quotient+3)^(0+128),f
  6947  0FE2  1D03               	skipz
  6948  0FE3  2FEE               	goto	l606
  6949  0FE4  0AB7               	incf	(___aodiv@quotient+4)^(0+128),f
  6950  0FE5  1D03               	skipz
  6951  0FE6  2FEE               	goto	l606
  6952  0FE7  0AB8               	incf	(___aodiv@quotient+5)^(0+128),f
  6953  0FE8  1D03               	skipz
  6954  0FE9  2FEE               	goto	l606
  6955  0FEA  0AB9               	incf	(___aodiv@quotient+6)^(0+128),f
  6956  0FEB  1D03               	skipz
  6957  0FEC  2FEE               	goto	l606
  6958  0FED  0ABA               	incf	(___aodiv@quotient+7)^(0+128),f
  6959  0FEE                     l606:	
  6960  0FEE  0021               	movlb	1	; select bank1
  6961  0FEF  0833               	movf	___aodiv@quotient^(0+128),w
  6962  0FF0  00A0               	movwf	?___aodiv^(0+128)
  6963  0FF1  0834               	movf	(___aodiv@quotient+1)^(0+128),w
  6964  0FF2  00A1               	movwf	(?___aodiv+1)^(0+128)
  6965  0FF3  0835               	movf	(___aodiv@quotient+2)^(0+128),w
  6966  0FF4  00A2               	movwf	(?___aodiv+2)^(0+128)
  6967  0FF5  0836               	movf	(___aodiv@quotient+3)^(0+128),w
  6968  0FF6  00A3               	movwf	(?___aodiv+3)^(0+128)
  6969  0FF7  0837               	movf	(___aodiv@quotient+4)^(0+128),w
  6970  0FF8  00A4               	movwf	(?___aodiv+4)^(0+128)
  6971  0FF9  0838               	movf	(___aodiv@quotient+5)^(0+128),w
  6972  0FFA  00A5               	movwf	(?___aodiv+5)^(0+128)
  6973  0FFB  0839               	movf	(___aodiv@quotient+6)^(0+128),w
  6974  0FFC  00A6               	movwf	(?___aodiv+6)^(0+128)
  6975  0FFD  083A               	movf	(___aodiv@quotient+7)^(0+128),w
  6976  0FFE  00A7               	movwf	(?___aodiv+7)^(0+128)
  6977  0FFF  0008               	return
  6978  1000                     __end_of___aodiv:	
  6979                           
  6980                           	psect	text19
  6981  0C12                     __ptext19:	
  6982 ;; *************** function ___fltol *****************
  6983 ;; Defined at:
  6984 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
  6985 ;; Parameters:    Size  Location     Type
  6986 ;;  f1              4    0[BANK1 ] long long 
  6987 ;; Auto vars:     Size  Location     Type
  6988 ;;  exp1            1   10[BANK1 ] unsigned char 
  6989 ;;  sign1           1    9[BANK1 ] unsigned char 
  6990 ;; Return value:  Size  Location     Type
  6991 ;;                  4    0[BANK1 ] long 
  6992 ;; Registers used:
  6993 ;;		wreg, status,2, status,0
  6994 ;; Tracked objects:
  6995 ;;		On entry : 0/0
  6996 ;;		On exit  : 0/0
  6997 ;;		Unchanged: 0/0
  6998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6999 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  7000 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7001 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  7002 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0
  7003 ;;Total ram usage:       11 bytes
  7004 ;; Hardware stack levels used:    1
  7005 ;; Hardware stack levels required when called:    6
  7006 ;; This function calls:
  7007 ;;		Nothing
  7008 ;; This function is called by:
  7009 ;;		_main
  7010 ;; This function uses a non-reentrant model
  7011 ;;
  7012                           
  7013                           
  7014                           ;psect for function ___fltol
  7015  0C12                     ___fltol:	
  7016                           
  7017                           ;incstack = 0
  7018                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7019  0C12  1003               	clrc
  7020  0C13  0021               	movlb	1	; select bank1
  7021  0C14  0D22               	rlf	(___fltol@f1+2)^(0+128),w
  7022  0C15  0D23               	rlf	(___fltol@f1+3)^(0+128),w
  7023  0C16  00A4               	movwf	??___fltol^(0+128)
  7024  0C17  0824               	movf	??___fltol^(0+128),w
  7025  0C18  00AA               	movwf	___fltol@exp1^(0+128)
  7026  0C19  082A               	movf	___fltol@exp1^(0+128),w
  7027  0C1A  1D03               	btfss	3,2
  7028  0C1B  2C25               	goto	l3609
  7029  0C1C                     l3605:	
  7030  0C1C  3000               	movlw	0
  7031  0C1D  00A3               	movwf	(?___fltol+3)^(0+128)
  7032  0C1E  3000               	movlw	0
  7033  0C1F  00A2               	movwf	(?___fltol+2)^(0+128)
  7034  0C20  3000               	movlw	0
  7035  0C21  00A1               	movwf	(?___fltol+1)^(0+128)
  7036  0C22  3000               	movlw	0
  7037  0C23  00A0               	movwf	?___fltol^(0+128)
  7038  0C24  0008               	return
  7039  0C25                     l3609:	
  7040  0C25  0820               	movf	___fltol@f1^(0+128),w
  7041  0C26  00A4               	movwf	??___fltol^(0+128)
  7042  0C27  0821               	movf	(___fltol@f1+1)^(0+128),w
  7043  0C28  00A5               	movwf	(??___fltol^(0+128)+1)
  7044  0C29  0822               	movf	(___fltol@f1+2)^(0+128),w
  7045  0C2A  00A6               	movwf	(??___fltol^(0+128)+2)
  7046  0C2B  0823               	movf	(___fltol@f1+3)^(0+128),w
  7047  0C2C  00A7               	movwf	(??___fltol^(0+128)+3)
  7048  0C2D  301F               	movlw	31
  7049  0C2E                     u4435:	
  7050  0C2E  36A7               	lsrf	(??___fltol^(0+128)+3),f
  7051  0C2F  0CA6               	rrf	(??___fltol^(0+128)+2),f
  7052  0C30  0CA5               	rrf	(??___fltol^(0+128)+1),f
  7053  0C31  0CA4               	rrf	??___fltol^(0+128),f
  7054  0C32  0B89               	decfsz	9,f
  7055  0C33  2C2E               	goto	u4435
  7056  0C34  0824               	movf	??___fltol^(0+128),w
  7057  0C35  00A8               	movwf	(??___fltol+4)^(0+128)
  7058  0C36  0828               	movf	(??___fltol+4)^(0+128),w
  7059  0C37  00A9               	movwf	___fltol@sign1^(0+128)
  7060  0C38  17A2               	bsf	(___fltol@f1^(0+128)+2),7
  7061  0C39  30FF               	movlw	255
  7062  0C3A  05A0               	andwf	___fltol@f1^(0+128),f
  7063  0C3B  30FF               	movlw	255
  7064  0C3C  05A1               	andwf	(___fltol@f1+1)^(0+128),f
  7065  0C3D  30FF               	movlw	255
  7066  0C3E  05A2               	andwf	(___fltol@f1+2)^(0+128),f
  7067  0C3F  3000               	movlw	0
  7068  0C40  05A3               	andwf	(___fltol@f1+3)^(0+128),f
  7069  0C41  3096               	movlw	150
  7070  0C42  02AA               	subwf	___fltol@exp1^(0+128),f
  7071  0C43  1FAA               	btfss	___fltol@exp1^(0+128),7
  7072  0C44  2C58               	goto	l3627
  7073  0C45  082A               	movf	___fltol@exp1^(0+128),w
  7074  0C46  3A80               	xorlw	128
  7075  0C47  3E97               	addlw	151
  7076  0C48  1C03               	btfss	3,0
  7077  0C49  2C1C               	goto	l3605
  7078  0C4A                     l3625:	
  7079  0C4A  3001               	movlw	1
  7080  0C4B                     u4465:	
  7081  0C4B  36A3               	lsrf	(___fltol@f1+3)^(0+128),f
  7082  0C4C  0CA2               	rrf	(___fltol@f1+2)^(0+128),f
  7083  0C4D  0CA1               	rrf	(___fltol@f1+1)^(0+128),f
  7084  0C4E  0CA0               	rrf	___fltol@f1^(0+128),f
  7085  0C4F  0B89               	decfsz	9,f
  7086  0C50  2C4B               	goto	u4465
  7087  0C51  3001               	movlw	1
  7088  0C52  00A4               	movwf	??___fltol^(0+128)
  7089  0C53  0824               	movf	??___fltol^(0+128),w
  7090  0C54  07AA               	addwf	___fltol@exp1^(0+128),f
  7091  0C55  1903               	btfsc	3,2
  7092  0C56  2C69               	goto	l3635
  7093  0C57  2C4A               	goto	l3625
  7094  0C58                     l3627:	
  7095  0C58  3020               	movlw	32
  7096  0C59  022A               	subwf	___fltol@exp1^(0+128),w
  7097  0C5A  1803               	btfsc	3,0
  7098  0C5B  2C1C               	goto	l3605
  7099  0C5C                     l707:	
  7100  0C5C  082A               	movf	___fltol@exp1^(0+128),w
  7101  0C5D  1903               	btfsc	3,2
  7102  0C5E  2C69               	goto	l3635
  7103  0C5F  3001               	movlw	1
  7104  0C60                     u4495:	
  7105  0C60  35A0               	lslf	___fltol@f1^(0+128),f
  7106  0C61  0DA1               	rlf	(___fltol@f1+1)^(0+128),f
  7107  0C62  0DA2               	rlf	(___fltol@f1+2)^(0+128),f
  7108  0C63  0DA3               	rlf	(___fltol@f1+3)^(0+128),f
  7109  0C64  0B89               	decfsz	9,f
  7110  0C65  2C60               	goto	u4495
  7111  0C66  3001               	movlw	1
  7112  0C67  02AA               	subwf	___fltol@exp1^(0+128),f
  7113  0C68  2C5C               	goto	l707
  7114  0C69                     l3635:	
  7115  0C69  0829               	movf	___fltol@sign1^(0+128),w
  7116  0C6A  1903               	btfsc	3,2
  7117  0C6B  0008               	return
  7118  0C6C  09A0               	comf	___fltol@f1^(0+128),f
  7119  0C6D  09A1               	comf	(___fltol@f1+1)^(0+128),f
  7120  0C6E  09A2               	comf	(___fltol@f1+2)^(0+128),f
  7121  0C6F  09A3               	comf	(___fltol@f1+3)^(0+128),f
  7122  0C70  0AA0               	incf	___fltol@f1^(0+128),f
  7123  0C71  1903               	skipnz
  7124  0C72  0AA1               	incf	(___fltol@f1+1)^(0+128),f
  7125  0C73  1903               	skipnz
  7126  0C74  0AA2               	incf	(___fltol@f1+2)^(0+128),f
  7127  0C75  1903               	skipnz
  7128  0C76  0AA3               	incf	(___fltol@f1+3)^(0+128),f
  7129  0C77  0008               	return
  7130  0C78                     __end_of___fltol:	
  7131                           
  7132                           	psect	text20
  7133  09AF                     __ptext20:	
  7134 ;; *************** function _SYSTEM_Initialize *****************
  7135 ;; Defined at:
  7136 ;;		line 4 in file "mcc_generated_files/mcc.c"
  7137 ;; Parameters:    Size  Location     Type
  7138 ;;		None
  7139 ;; Auto vars:     Size  Location     Type
  7140 ;;		None
  7141 ;; Return value:  Size  Location     Type
  7142 ;;                  1    wreg      void 
  7143 ;; Registers used:
  7144 ;;		wreg, status,2, status,0, pclath, cstack
  7145 ;; Tracked objects:
  7146 ;;		On entry : 0/0
  7147 ;;		On exit  : 0/0
  7148 ;;		Unchanged: 0/0
  7149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7154 ;;Total ram usage:        0 bytes
  7155 ;; Hardware stack levels used:    1
  7156 ;; Hardware stack levels required when called:    8
  7157 ;; This function calls:
  7158 ;;		_EUSART_Initialize
  7159 ;;		_OSCILLATOR_Initialize
  7160 ;;		_PIN_MANAGER_Initialize
  7161 ;;		_TMR0_Initialize
  7162 ;; This function is called by:
  7163 ;;		_main
  7164 ;; This function uses a non-reentrant model
  7165 ;;
  7166                           
  7167                           
  7168                           ;psect for function _SYSTEM_Initialize
  7169  09AF                     _SYSTEM_Initialize:	
  7170                           
  7171                           ;mcc_generated_files/mcc.c: 6:     PIN_MANAGER_Initialize();
  7172                           
  7173                           ;incstack = 0
  7174                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7175  09AF  318B  232D  3189   	fcall	_PIN_MANAGER_Initialize
  7176                           
  7177                           ;mcc_generated_files/mcc.c: 7:     OSCILLATOR_Initialize();
  7178  09B2  3189  2169  3189   	fcall	_OSCILLATOR_Initialize
  7179                           
  7180                           ;mcc_generated_files/mcc.c: 8:     TMR0_Initialize();
  7181  09B5  318A  220B  3189   	fcall	_TMR0_Initialize
  7182                           
  7183                           ;mcc_generated_files/mcc.c: 9:     EUSART_Initialize();
  7184  09B8  318A  22AF         	fcall	_EUSART_Initialize
  7185  09BA  0008               	return
  7186  09BB                     __end_of_SYSTEM_Initialize:	
  7187                           
  7188                           	psect	text21
  7189  0A0B                     __ptext21:	
  7190 ;; *************** function _TMR0_Initialize *****************
  7191 ;; Defined at:
  7192 ;;		line 18 in file "mcc_generated_files/tmr0.c"
  7193 ;; Parameters:    Size  Location     Type
  7194 ;;		None
  7195 ;; Auto vars:     Size  Location     Type
  7196 ;;		None
  7197 ;; Return value:  Size  Location     Type
  7198 ;;                  1    wreg      void 
  7199 ;; Registers used:
  7200 ;;		wreg, status,2, status,0, pclath, cstack
  7201 ;; Tracked objects:
  7202 ;;		On entry : 0/0
  7203 ;;		On exit  : 0/0
  7204 ;;		Unchanged: 0/0
  7205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7208 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7209 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7210 ;;Total ram usage:        1 bytes
  7211 ;; Hardware stack levels used:    1
  7212 ;; Hardware stack levels required when called:    7
  7213 ;; This function calls:
  7214 ;;		_TMR0_SetInterruptHandler
  7215 ;; This function is called by:
  7216 ;;		_SYSTEM_Initialize
  7217 ;; This function uses a non-reentrant model
  7218 ;;
  7219                           
  7220                           
  7221                           ;psect for function _TMR0_Initialize
  7222  0A0B                     _TMR0_Initialize:	
  7223                           
  7224                           ;mcc_generated_files/tmr0.c: 23:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD4 
      +                          & 0x3F));
  7225                           
  7226                           ;incstack = 0
  7227                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7228  0A0B  0021               	movlb	1	; select bank1
  7229  0A0C  0815               	movf	21,w	;volatile
  7230  0A0D  39C0               	andlw	192
  7231  0A0E  3814               	iorlw	20
  7232  0A0F  0095               	movwf	21	;volatile
  7233                           
  7234                           ;mcc_generated_files/tmr0.c: 26:     TMR0 = 0x83;
  7235  0A10  3083               	movlw	131
  7236  0A11  0020               	movlb	0	; select bank0
  7237  0A12  0095               	movwf	21	;volatile
  7238                           
  7239                           ;mcc_generated_files/tmr0.c: 29:     timer0ReloadVal= 131;
  7240  0A13  3083               	movlw	131
  7241  0A14  0021               	movlb	1	; select bank1
  7242  0A15  00A2               	movwf	??_TMR0_Initialize^(0+128)
  7243  0A16  0822               	movf	??_TMR0_Initialize^(0+128),w
  7244  0A17  0020               	movlb	0	; select bank0
  7245  0A18  00DF               	movwf	_timer0ReloadVal	;volatile
  7246                           
  7247                           ;mcc_generated_files/tmr0.c: 32:     INTCONbits.TMR0IF = 0;
  7248  0A19  110B               	bcf	11,2	;volatile
  7249                           
  7250                           ;mcc_generated_files/tmr0.c: 35:     INTCONbits.TMR0IE = 1;
  7251  0A1A  168B               	bsf	11,5	;volatile
  7252                           
  7253                           ;mcc_generated_files/tmr0.c: 38:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  7254  0A1B  3003               	movlw	low _TMR0_DefaultInterruptHandler
  7255  0A1C  0021               	movlb	1	; select bank1
  7256  0A1D  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler^(0+128)
  7257  0A1E  3000               	movlw	high _TMR0_DefaultInterruptHandler
  7258  0A1F  00A1               	movwf	(TMR0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  7259  0A20  3189  219C         	fcall	_TMR0_SetInterruptHandler
  7260  0A22  0008               	return
  7261  0A23                     __end_of_TMR0_Initialize:	
  7262                           
  7263                           	psect	text22
  7264  099C                     __ptext22:	
  7265 ;; *************** function _TMR0_SetInterruptHandler *****************
  7266 ;; Defined at:
  7267 ;;		line 79 in file "mcc_generated_files/tmr0.c"
  7268 ;; Parameters:    Size  Location     Type
  7269 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  7270 ;;		 -> timerISR(1), TMR0_DefaultInterruptHandler(1), 
  7271 ;; Auto vars:     Size  Location     Type
  7272 ;;		None
  7273 ;; Return value:  Size  Location     Type
  7274 ;;                  1    wreg      void 
  7275 ;; Registers used:
  7276 ;;		wreg
  7277 ;; Tracked objects:
  7278 ;;		On entry : 0/0
  7279 ;;		On exit  : 0/0
  7280 ;;		Unchanged: 0/0
  7281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7282 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7285 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7286 ;;Total ram usage:        2 bytes
  7287 ;; Hardware stack levels used:    1
  7288 ;; Hardware stack levels required when called:    6
  7289 ;; This function calls:
  7290 ;;		Nothing
  7291 ;; This function is called by:
  7292 ;;		_TMR0_Initialize
  7293 ;;		_main
  7294 ;; This function uses a non-reentrant model
  7295 ;;
  7296                           
  7297                           
  7298                           ;psect for function _TMR0_SetInterruptHandler
  7299  099C                     _TMR0_SetInterruptHandler:	
  7300                           
  7301                           ;mcc_generated_files/tmr0.c: 80:     TMR0_InterruptHandler = InterruptHandler;
  7302                           
  7303                           ;incstack = 0
  7304                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  7305  099C  0021               	movlb	1	; select bank1
  7306  099D  0821               	movf	(TMR0_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  7307  099E  0022               	movlb	2	; select bank2
  7308  099F  00E5               	movwf	(_TMR0_InterruptHandler+1)^(0+256)
  7309  09A0  0021               	movlb	1	; select bank1
  7310  09A1  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler^(0+128),w
  7311  09A2  0022               	movlb	2	; select bank2
  7312  09A3  00E4               	movwf	_TMR0_InterruptHandler^(0+256)
  7313  09A4  0008               	return
  7314  09A5                     __end_of_TMR0_SetInterruptHandler:	
  7315                           
  7316                           	psect	text23
  7317  0B2D                     __ptext23:	
  7318 ;; *************** function _PIN_MANAGER_Initialize *****************
  7319 ;; Defined at:
  7320 ;;		line 6 in file "mcc_generated_files/pin_manager.c"
  7321 ;; Parameters:    Size  Location     Type
  7322 ;;		None
  7323 ;; Auto vars:     Size  Location     Type
  7324 ;;		None
  7325 ;; Return value:  Size  Location     Type
  7326 ;;                  1    wreg      void 
  7327 ;; Registers used:
  7328 ;;		wreg, status,2, status,0, pclath, cstack
  7329 ;; Tracked objects:
  7330 ;;		On entry : 0/0
  7331 ;;		On exit  : 0/0
  7332 ;;		Unchanged: 0/0
  7333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7338 ;;Total ram usage:        0 bytes
  7339 ;; Hardware stack levels used:    1
  7340 ;; Hardware stack levels required when called:    7
  7341 ;; This function calls:
  7342 ;;		_IOCCF7_SetInterruptHandler
  7343 ;; This function is called by:
  7344 ;;		_SYSTEM_Initialize
  7345 ;; This function uses a non-reentrant model
  7346 ;;
  7347                           
  7348                           
  7349                           ;psect for function _PIN_MANAGER_Initialize
  7350  0B2D                     _PIN_MANAGER_Initialize:	
  7351                           
  7352                           ;mcc_generated_files/pin_manager.c: 11:     LATA = 0x00;
  7353                           
  7354                           ;incstack = 0
  7355                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7356  0B2D  0022               	movlb	2	; select bank2
  7357  0B2E  018C               	clrf	12	;volatile
  7358                           
  7359                           ;mcc_generated_files/pin_manager.c: 12:     LATB = 0x00;
  7360  0B2F  018D               	clrf	13	;volatile
  7361                           
  7362                           ;mcc_generated_files/pin_manager.c: 13:     LATC = 0x00;
  7363  0B30  018E               	clrf	14	;volatile
  7364                           
  7365                           ;mcc_generated_files/pin_manager.c: 18:     TRISA = 0x37;
  7366  0B31  3037               	movlw	55
  7367  0B32  0021               	movlb	1	; select bank1
  7368  0B33  008C               	movwf	12	;volatile
  7369                           
  7370                           ;mcc_generated_files/pin_manager.c: 19:     TRISB = 0x70;
  7371  0B34  3070               	movlw	112
  7372  0B35  008D               	movwf	13	;volatile
  7373                           
  7374                           ;mcc_generated_files/pin_manager.c: 20:     TRISC = 0xFF;
  7375  0B36  30FF               	movlw	255
  7376  0B37  008E               	movwf	14	;volatile
  7377                           
  7378                           ;mcc_generated_files/pin_manager.c: 25:     ANSELC = 0x4F;
  7379  0B38  304F               	movlw	79
  7380  0B39  0023               	movlb	3	; select bank3
  7381  0B3A  008E               	movwf	14	;volatile
  7382                           
  7383                           ;mcc_generated_files/pin_manager.c: 26:     ANSELB = 0x70;
  7384  0B3B  3070               	movlw	112
  7385  0B3C  008D               	movwf	13	;volatile
  7386                           
  7387                           ;mcc_generated_files/pin_manager.c: 27:     ANSELA = 0x17;
  7388  0B3D  3017               	movlw	23
  7389  0B3E  008C               	movwf	12	;volatile
  7390                           
  7391                           ;mcc_generated_files/pin_manager.c: 32:     WPUB = 0x00;
  7392  0B3F  0024               	movlb	4	; select bank4
  7393  0B40  018D               	clrf	13	;volatile
  7394                           
  7395                           ;mcc_generated_files/pin_manager.c: 33:     WPUA = 0x00;
  7396  0B41  018C               	clrf	12	;volatile
  7397                           
  7398                           ;mcc_generated_files/pin_manager.c: 34:     WPUC = 0x00;
  7399  0B42  018E               	clrf	14	;volatile
  7400                           
  7401                           ;mcc_generated_files/pin_manager.c: 35:     OPTION_REGbits.nWPUEN = 1;
  7402  0B43  0021               	movlb	1	; select bank1
  7403  0B44  1795               	bsf	21,7	;volatile
  7404                           
  7405                           ;mcc_generated_files/pin_manager.c: 40:     ODCONA = 0x00;
  7406  0B45  0025               	movlb	5	; select bank5
  7407  0B46  018C               	clrf	12	;volatile
  7408                           
  7409                           ;mcc_generated_files/pin_manager.c: 41:     ODCONB = 0x00;
  7410  0B47  018D               	clrf	13	;volatile
  7411                           
  7412                           ;mcc_generated_files/pin_manager.c: 42:     ODCONC = 0x00;
  7413  0B48  018E               	clrf	14	;volatile
  7414                           
  7415                           ;mcc_generated_files/pin_manager.c: 47:     SLRCONA = 0x37;
  7416  0B49  3037               	movlw	55
  7417  0B4A  0026               	movlb	6	; select bank6
  7418  0B4B  008C               	movwf	12	;volatile
  7419                           
  7420                           ;mcc_generated_files/pin_manager.c: 48:     SLRCONB = 0xF0;
  7421  0B4C  30F0               	movlw	240
  7422  0B4D  008D               	movwf	13	;volatile
  7423                           
  7424                           ;mcc_generated_files/pin_manager.c: 49:     SLRCONC = 0xFF;
  7425  0B4E  30FF               	movlw	255
  7426  0B4F  008E               	movwf	14	;volatile
  7427                           
  7428                           ;mcc_generated_files/pin_manager.c: 56:     IOCCFbits.IOCCF7 = 0;
  7429  0B50  0027               	movlb	7	; select bank7
  7430  0B51  1399               	bcf	25,7	;volatile
  7431                           
  7432                           ;mcc_generated_files/pin_manager.c: 58:     IOCCNbits.IOCCN7 = 0;
  7433  0B52  1398               	bcf	24,7	;volatile
  7434                           
  7435                           ;mcc_generated_files/pin_manager.c: 60:     IOCCPbits.IOCCP7 = 1;
  7436  0B53  1797               	bsf	23,7	;volatile
  7437                           
  7438                           ;mcc_generated_files/pin_manager.c: 65:     IOCCF7_SetInterruptHandler(IOCCF7_DefaultInt
      +                          erruptHandler);
  7439  0B54  3002               	movlw	low _IOCCF7_DefaultInterruptHandler
  7440  0B55  0021               	movlb	1	; select bank1
  7441  0B56  00A0               	movwf	IOCCF7_SetInterruptHandler@InterruptHandler^(0+128)
  7442  0B57  3000               	movlw	high _IOCCF7_DefaultInterruptHandler
  7443  0B58  00A1               	movwf	(IOCCF7_SetInterruptHandler@InterruptHandler^(0+128)+1)
  7444  0B59  3189  2193         	fcall	_IOCCF7_SetInterruptHandler
  7445                           
  7446                           ;mcc_generated_files/pin_manager.c: 68:     INTCONbits.IOCIE = 1;
  7447  0B5B  158B               	bsf	11,3	;volatile
  7448                           
  7449                           ;mcc_generated_files/pin_manager.c: 71:     RB7PPS = 0x12;
  7450  0B5C  3012               	movlw	18
  7451  0B5D  003D               	movlb	29	; select bank29
  7452  0B5E  009F               	movwf	31	;volatile
  7453  0B5F  0008               	return
  7454  0B60                     __end_of_PIN_MANAGER_Initialize:	
  7455                           
  7456                           	psect	text24
  7457  0993                     __ptext24:	
  7458 ;; *************** function _IOCCF7_SetInterruptHandler *****************
  7459 ;; Defined at:
  7460 ;;		line 101 in file "mcc_generated_files/pin_manager.c"
  7461 ;; Parameters:    Size  Location     Type
  7462 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  7463 ;;		 -> speedCalc(1), IOCCF7_DefaultInterruptHandler(1), 
  7464 ;; Auto vars:     Size  Location     Type
  7465 ;;		None
  7466 ;; Return value:  Size  Location     Type
  7467 ;;                  1    wreg      void 
  7468 ;; Registers used:
  7469 ;;		wreg
  7470 ;; Tracked objects:
  7471 ;;		On entry : 0/0
  7472 ;;		On exit  : 0/0
  7473 ;;		Unchanged: 0/0
  7474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7475 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7478 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7479 ;;Total ram usage:        2 bytes
  7480 ;; Hardware stack levels used:    1
  7481 ;; Hardware stack levels required when called:    6
  7482 ;; This function calls:
  7483 ;;		Nothing
  7484 ;; This function is called by:
  7485 ;;		_PIN_MANAGER_Initialize
  7486 ;;		_main
  7487 ;; This function uses a non-reentrant model
  7488 ;;
  7489                           
  7490                           
  7491                           ;psect for function _IOCCF7_SetInterruptHandler
  7492  0993                     _IOCCF7_SetInterruptHandler:	
  7493                           
  7494                           ;mcc_generated_files/pin_manager.c: 102:     IOCCF7_InterruptHandler = InterruptHandler;
  7495                           
  7496                           ;incstack = 0
  7497                           ; Regs used in _IOCCF7_SetInterruptHandler: [wreg]
  7498  0993  0021               	movlb	1	; select bank1
  7499  0994  0821               	movf	(IOCCF7_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  7500  0995  0022               	movlb	2	; select bank2
  7501  0996  00E7               	movwf	(_IOCCF7_InterruptHandler+1)^(0+256)
  7502  0997  0021               	movlb	1	; select bank1
  7503  0998  0820               	movf	IOCCF7_SetInterruptHandler@InterruptHandler^(0+128),w
  7504  0999  0022               	movlb	2	; select bank2
  7505  099A  00E6               	movwf	_IOCCF7_InterruptHandler^(0+256)
  7506  099B  0008               	return
  7507  099C                     __end_of_IOCCF7_SetInterruptHandler:	
  7508                           
  7509                           	psect	text25
  7510  0969                     __ptext25:	
  7511 ;; *************** function _OSCILLATOR_Initialize *****************
  7512 ;; Defined at:
  7513 ;;		line 12 in file "mcc_generated_files/mcc.c"
  7514 ;; Parameters:    Size  Location     Type
  7515 ;;		None
  7516 ;; Auto vars:     Size  Location     Type
  7517 ;;		None
  7518 ;; Return value:  Size  Location     Type
  7519 ;;                  1    wreg      void 
  7520 ;; Registers used:
  7521 ;;		wreg, status,2
  7522 ;; Tracked objects:
  7523 ;;		On entry : 0/0
  7524 ;;		On exit  : 0/0
  7525 ;;		Unchanged: 0/0
  7526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7531 ;;Total ram usage:        0 bytes
  7532 ;; Hardware stack levels used:    1
  7533 ;; Hardware stack levels required when called:    6
  7534 ;; This function calls:
  7535 ;;		Nothing
  7536 ;; This function is called by:
  7537 ;;		_SYSTEM_Initialize
  7538 ;; This function uses a non-reentrant model
  7539 ;;
  7540                           
  7541                           
  7542                           ;psect for function _OSCILLATOR_Initialize
  7543  0969                     _OSCILLATOR_Initialize:	
  7544                           
  7545                           ;mcc_generated_files/mcc.c: 15:     OSCCON = 0x7A;
  7546                           
  7547                           ;incstack = 0
  7548                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  7549  0969  307A               	movlw	122
  7550  096A  0021               	movlb	1	; select bank1
  7551  096B  0099               	movwf	25	;volatile
  7552                           
  7553                           ;mcc_generated_files/mcc.c: 17:     OSCTUNE = 0x00;
  7554  096C  0198               	clrf	24	;volatile
  7555                           
  7556                           ;mcc_generated_files/mcc.c: 19:     BORCON = 0x00;
  7557  096D  0022               	movlb	2	; select bank2
  7558  096E  0196               	clrf	22	;volatile
  7559  096F  0008               	return
  7560  0970                     __end_of_OSCILLATOR_Initialize:	
  7561                           
  7562                           	psect	text26
  7563  0AAF                     __ptext26:	
  7564 ;; *************** function _EUSART_Initialize *****************
  7565 ;; Defined at:
  7566 ;;		line 65 in file "mcc_generated_files/eusart.c"
  7567 ;; Parameters:    Size  Location     Type
  7568 ;;		None
  7569 ;; Auto vars:     Size  Location     Type
  7570 ;;		None
  7571 ;; Return value:  Size  Location     Type
  7572 ;;                  1    wreg      void 
  7573 ;; Registers used:
  7574 ;;		wreg, status,2, status,0, pclath, cstack
  7575 ;; Tracked objects:
  7576 ;;		On entry : 0/0
  7577 ;;		On exit  : 0/0
  7578 ;;		Unchanged: 0/0
  7579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7583 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7584 ;;Total ram usage:        0 bytes
  7585 ;; Hardware stack levels used:    1
  7586 ;; Hardware stack levels required when called:    7
  7587 ;; This function calls:
  7588 ;;		_EUSART_SetErrorHandler
  7589 ;;		_EUSART_SetFramingErrorHandler
  7590 ;;		_EUSART_SetOverrunErrorHandler
  7591 ;; This function is called by:
  7592 ;;		_SYSTEM_Initialize
  7593 ;; This function uses a non-reentrant model
  7594 ;;
  7595                           
  7596                           
  7597                           ;psect for function _EUSART_Initialize
  7598  0AAF                     _EUSART_Initialize:	
  7599                           
  7600                           ;mcc_generated_files/eusart.c: 70:     BAUD1CON = 0x08;
  7601                           
  7602                           ;incstack = 0
  7603                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7604  0AAF  3008               	movlw	8
  7605  0AB0  0023               	movlb	3	; select bank3
  7606  0AB1  009F               	movwf	31	;volatile
  7607                           
  7608                           ;mcc_generated_files/eusart.c: 73:     RC1STA = 0x80;
  7609  0AB2  3080               	movlw	128
  7610  0AB3  009D               	movwf	29	;volatile
  7611                           
  7612                           ;mcc_generated_files/eusart.c: 76:     TX1STA = 0x24;
  7613  0AB4  3024               	movlw	36
  7614  0AB5  009E               	movwf	30	;volatile
  7615                           
  7616                           ;mcc_generated_files/eusart.c: 79:     SPBRGL = 0xA0;
  7617  0AB6  30A0               	movlw	160
  7618  0AB7  009B               	movwf	27	;volatile
  7619                           
  7620                           ;mcc_generated_files/eusart.c: 82:     SPBRGH = 0x01;
  7621  0AB8  3001               	movlw	1
  7622  0AB9  009C               	movwf	28	;volatile
  7623                           
  7624                           ;mcc_generated_files/eusart.c: 85:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  7625  0ABA  3000               	movlw	0
  7626  0ABB  0021               	movlb	1	; select bank1
  7627  0ABC  00A0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128)
  7628  0ABD  3000               	movlw	0
  7629  0ABE  00A1               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler^(0+128)+1)
  7630  0ABF  3189  2181  318A   	fcall	_EUSART_SetFramingErrorHandler
  7631                           
  7632                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  7633  0AC2  3000               	movlw	0
  7634  0AC3  0021               	movlb	1	; select bank1
  7635  0AC4  00A0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)
  7636  0AC5  3000               	movlw	0
  7637  0AC6  00A1               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)+1)
  7638  0AC7  3189  218A  318A   	fcall	_EUSART_SetOverrunErrorHandler
  7639                           
  7640                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  7641  0ACA  3000               	movlw	0
  7642  0ACB  0021               	movlb	1	; select bank1
  7643  0ACC  00A0               	movwf	EUSART_SetErrorHandler@interruptHandler^(0+128)
  7644  0ACD  3000               	movlw	0
  7645  0ACE  00A1               	movwf	(EUSART_SetErrorHandler@interruptHandler^(0+128)+1)
  7646  0ACF  3189  2178         	fcall	_EUSART_SetErrorHandler
  7647                           
  7648                           ;mcc_generated_files/eusart.c: 89:     eusartRxLastError.status = 0;
  7649  0AD1  0020               	movlb	0	; select bank0
  7650  0AD2  01D6               	clrf	_eusartRxLastError	;volatile
  7651  0AD3  0008               	return
  7652  0AD4                     __end_of_EUSART_Initialize:	
  7653                           
  7654                           	psect	text27
  7655  098A                     __ptext27:	
  7656 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  7657 ;; Defined at:
  7658 ;;		line 175 in file "mcc_generated_files/eusart.c"
  7659 ;; Parameters:    Size  Location     Type
  7660 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  7661 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  7662 ;; Auto vars:     Size  Location     Type
  7663 ;;		None
  7664 ;; Return value:  Size  Location     Type
  7665 ;;                  1    wreg      void 
  7666 ;; Registers used:
  7667 ;;		wreg
  7668 ;; Tracked objects:
  7669 ;;		On entry : 0/0
  7670 ;;		On exit  : 0/0
  7671 ;;		Unchanged: 0/0
  7672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7673 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7676 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7677 ;;Total ram usage:        2 bytes
  7678 ;; Hardware stack levels used:    1
  7679 ;; Hardware stack levels required when called:    6
  7680 ;; This function calls:
  7681 ;;		Nothing
  7682 ;; This function is called by:
  7683 ;;		_EUSART_Initialize
  7684 ;; This function uses a non-reentrant model
  7685 ;;
  7686                           
  7687                           
  7688                           ;psect for function _EUSART_SetOverrunErrorHandler
  7689  098A                     _EUSART_SetOverrunErrorHandler:	
  7690                           
  7691                           ;mcc_generated_files/eusart.c: 176:     EUSART_OverrunErrorHandler = interruptHandler;
  7692                           
  7693                           ;incstack = 0
  7694                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  7695  098A  0021               	movlb	1	; select bank1
  7696  098B  0821               	movf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^(0+128),w
  7697  098C  0022               	movlb	2	; select bank2
  7698  098D  00EB               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+256)
  7699  098E  0021               	movlb	1	; select bank1
  7700  098F  0820               	movf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128),w
  7701  0990  0022               	movlb	2	; select bank2
  7702  0991  00EA               	movwf	_EUSART_OverrunErrorHandler^(0+256)
  7703  0992  0008               	return
  7704  0993                     __end_of_EUSART_SetOverrunErrorHandler:	
  7705                           
  7706                           	psect	text28
  7707  0981                     __ptext28:	
  7708 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  7709 ;; Defined at:
  7710 ;;		line 171 in file "mcc_generated_files/eusart.c"
  7711 ;; Parameters:    Size  Location     Type
  7712 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  7713 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  7714 ;; Auto vars:     Size  Location     Type
  7715 ;;		None
  7716 ;; Return value:  Size  Location     Type
  7717 ;;                  1    wreg      void 
  7718 ;; Registers used:
  7719 ;;		wreg
  7720 ;; Tracked objects:
  7721 ;;		On entry : 0/0
  7722 ;;		On exit  : 0/0
  7723 ;;		Unchanged: 0/0
  7724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7725 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7728 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7729 ;;Total ram usage:        2 bytes
  7730 ;; Hardware stack levels used:    1
  7731 ;; Hardware stack levels required when called:    6
  7732 ;; This function calls:
  7733 ;;		Nothing
  7734 ;; This function is called by:
  7735 ;;		_EUSART_Initialize
  7736 ;; This function uses a non-reentrant model
  7737 ;;
  7738                           
  7739                           
  7740                           ;psect for function _EUSART_SetFramingErrorHandler
  7741  0981                     _EUSART_SetFramingErrorHandler:	
  7742                           
  7743                           ;mcc_generated_files/eusart.c: 172:     EUSART_FramingErrorHandler = interruptHandler;
  7744                           
  7745                           ;incstack = 0
  7746                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  7747  0981  0021               	movlb	1	; select bank1
  7748  0982  0821               	movf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^(0+128),w
  7749  0983  0022               	movlb	2	; select bank2
  7750  0984  00ED               	movwf	(_EUSART_FramingErrorHandler+1)^(0+256)
  7751  0985  0021               	movlb	1	; select bank1
  7752  0986  0820               	movf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128),w
  7753  0987  0022               	movlb	2	; select bank2
  7754  0988  00EC               	movwf	_EUSART_FramingErrorHandler^(0+256)
  7755  0989  0008               	return
  7756  098A                     __end_of_EUSART_SetFramingErrorHandler:	
  7757                           
  7758                           	psect	text29
  7759  0978                     __ptext29:	
  7760 ;; *************** function _EUSART_SetErrorHandler *****************
  7761 ;; Defined at:
  7762 ;;		line 179 in file "mcc_generated_files/eusart.c"
  7763 ;; Parameters:    Size  Location     Type
  7764 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  7765 ;;		 -> EUSART_DefaultErrorHandler(1), 
  7766 ;; Auto vars:     Size  Location     Type
  7767 ;;		None
  7768 ;; Return value:  Size  Location     Type
  7769 ;;                  1    wreg      void 
  7770 ;; Registers used:
  7771 ;;		wreg
  7772 ;; Tracked objects:
  7773 ;;		On entry : 0/0
  7774 ;;		On exit  : 0/0
  7775 ;;		Unchanged: 0/0
  7776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7777 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7780 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7781 ;;Total ram usage:        2 bytes
  7782 ;; Hardware stack levels used:    1
  7783 ;; Hardware stack levels required when called:    6
  7784 ;; This function calls:
  7785 ;;		Nothing
  7786 ;; This function is called by:
  7787 ;;		_EUSART_Initialize
  7788 ;; This function uses a non-reentrant model
  7789 ;;
  7790                           
  7791                           
  7792                           ;psect for function _EUSART_SetErrorHandler
  7793  0978                     _EUSART_SetErrorHandler:	
  7794                           
  7795                           ;mcc_generated_files/eusart.c: 180:     EUSART_ErrorHandler = interruptHandler;
  7796                           
  7797                           ;incstack = 0
  7798                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  7799  0978  0021               	movlb	1	; select bank1
  7800  0979  0821               	movf	(EUSART_SetErrorHandler@interruptHandler+1)^(0+128),w
  7801  097A  0022               	movlb	2	; select bank2
  7802  097B  00E9               	movwf	(_EUSART_ErrorHandler+1)^(0+256)
  7803  097C  0021               	movlb	1	; select bank1
  7804  097D  0820               	movf	EUSART_SetErrorHandler@interruptHandler^(0+128),w
  7805  097E  0022               	movlb	2	; select bank2
  7806  097F  00E8               	movwf	_EUSART_ErrorHandler^(0+256)
  7807  0980  0008               	return
  7808  0981                     __end_of_EUSART_SetErrorHandler:	
  7809                           
  7810                           	psect	intentry
  7811  0004                     __pintentry:	
  7812 ;; *************** function _INTERRUPT_InterruptManager *****************
  7813 ;; Defined at:
  7814 ;;		line 4 in file "mcc_generated_files/interrupt_manager.c"
  7815 ;; Parameters:    Size  Location     Type
  7816 ;;		None
  7817 ;; Auto vars:     Size  Location     Type
  7818 ;;		None
  7819 ;; Return value:  Size  Location     Type
  7820 ;;                  1    wreg      void 
  7821 ;; Registers used:
  7822 ;;		wreg, status,2, status,0, pclath, cstack
  7823 ;; Tracked objects:
  7824 ;;		On entry : 0/0
  7825 ;;		On exit  : 0/0
  7826 ;;		Unchanged: 0/0
  7827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7832 ;;Total ram usage:        0 bytes
  7833 ;; Hardware stack levels used:    1
  7834 ;; Hardware stack levels required when called:    5
  7835 ;; This function calls:
  7836 ;;		_PIN_MANAGER_IOC
  7837 ;;		_TMR0_ISR
  7838 ;; This function is called by:
  7839 ;;		Interrupt level 1
  7840 ;; This function uses a non-reentrant model
  7841 ;;
  7842                           
  7843  0004                     _INTERRUPT_InterruptManager:	
  7844                           
  7845                           ;incstack = 0
  7846  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  7847                           
  7848                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  7849  0005  3180               	pagesel	$
  7850                           
  7851                           ;mcc_generated_files/interrupt_manager.c: 7:     if(INTCONbits.TMR0IE == 1 && INTCONbits
      +                          .TMR0IF == 1)
  7852  0006  1A8B               	btfsc	11,5	;volatile
  7853  0007  1D0B               	btfss	11,2	;volatile
  7854  0008  280D               	goto	i1l236
  7855                           
  7856                           ;mcc_generated_files/interrupt_manager.c: 8:     {;mcc_generated_files/interrupt_manager
      +                          .c: 9:         TMR0_ISR();
  7857  0009  3189  21D6  3180   	fcall	_TMR0_ISR
  7858                           
  7859                           ;mcc_generated_files/interrupt_manager.c: 10:     }
  7860  000C  2812               	goto	i1l240
  7861  000D                     i1l236:	
  7862                           ;mcc_generated_files/interrupt_manager.c: 11:     else if(INTCONbits.IOCIE == 1 && INTCO
      +                          Nbits.IOCIF == 1)
  7863                           
  7864  000D  198B               	btfsc	11,3	;volatile
  7865  000E  1C0B               	btfss	11,0	;volatile
  7866  000F  2812               	goto	i1l240
  7867                           
  7868                           ;mcc_generated_files/interrupt_manager.c: 12:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 13:         PIN_MANAGER_IOC();
  7869  0010  3189  2151         	fcall	_PIN_MANAGER_IOC
  7870  0012                     i1l240:	
  7871                           ;mcc_generated_files/interrupt_manager.c: 14:     }
  7872                           
  7873  0012  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  7874  0013  0009               	retfie
  7875  0014                     __end_of_INTERRUPT_InterruptManager:	
  7876                           
  7877                           	psect	text31
  7878  09D6                     __ptext31:	
  7879 ;; *************** function _TMR0_ISR *****************
  7880 ;; Defined at:
  7881 ;;		line 62 in file "mcc_generated_files/tmr0.c"
  7882 ;; Parameters:    Size  Location     Type
  7883 ;;		None
  7884 ;; Auto vars:     Size  Location     Type
  7885 ;;		None
  7886 ;; Return value:  Size  Location     Type
  7887 ;;                  1    wreg      void 
  7888 ;; Registers used:
  7889 ;;		wreg, status,2, status,0, pclath, cstack
  7890 ;; Tracked objects:
  7891 ;;		On entry : 0/0
  7892 ;;		On exit  : 0/0
  7893 ;;		Unchanged: 0/0
  7894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7899 ;;Total ram usage:        0 bytes
  7900 ;; Hardware stack levels used:    1
  7901 ;; Hardware stack levels required when called:    1
  7902 ;; This function calls:
  7903 ;;		Absolute function
  7904 ;;		_TMR0_DefaultInterruptHandler
  7905 ;;		_timerISR
  7906 ;; This function is called by:
  7907 ;;		_INTERRUPT_InterruptManager
  7908 ;; This function uses a non-reentrant model
  7909 ;;
  7910                           
  7911                           
  7912                           ;psect for function _TMR0_ISR
  7913  09D6                     _TMR0_ISR:	
  7914                           
  7915                           ;mcc_generated_files/tmr0.c: 66:     INTCONbits.TMR0IF = 0;
  7916                           
  7917                           ;incstack = 0
  7918                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  7919  09D6  110B               	bcf	11,2	;volatile
  7920                           
  7921                           ;mcc_generated_files/tmr0.c: 68:     TMR0 = timer0ReloadVal;
  7922  09D7  0020               	movlb	0	; select bank0
  7923  09D8  085F               	movf	_timer0ReloadVal,w	;volatile
  7924  09D9  0095               	movwf	21	;volatile
  7925                           
  7926                           ;mcc_generated_files/tmr0.c: 70:     if(TMR0_InterruptHandler)
  7927  09DA  0022               	movlb	2	; select bank2
  7928  09DB  0864               	movf	_TMR0_InterruptHandler^(0+256),w
  7929  09DC  0465               	iorwf	(_TMR0_InterruptHandler+1)^(0+256),w
  7930  09DD  1903               	btfsc	3,2
  7931  09DE  0008               	return
  7932                           
  7933                           ;mcc_generated_files/tmr0.c: 71:     {;mcc_generated_files/tmr0.c: 72:         TMR0_Inte
      +                          rruptHandler();
  7934  09DF  0865               	movf	(_TMR0_InterruptHandler+1)^(0+256),w
  7935  09E0  008A               	movwf	10
  7936  09E1  0864               	movf	_TMR0_InterruptHandler^(0+256),w
  7937  09E2  000A               	callw
  7938  09E3  3189               	pagesel	$
  7939  09E4  0008               	return
  7940  09E5                     __end_of_TMR0_ISR:	
  7941                           
  7942                           	psect	text32
  7943  0003                     __ptext32:	
  7944 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  7945 ;; Defined at:
  7946 ;;		line 83 in file "mcc_generated_files/tmr0.c"
  7947 ;; Parameters:    Size  Location     Type
  7948 ;;		None
  7949 ;; Auto vars:     Size  Location     Type
  7950 ;;		None
  7951 ;; Return value:  Size  Location     Type
  7952 ;;                  1    wreg      void 
  7953 ;; Registers used:
  7954 ;;		None
  7955 ;; Tracked objects:
  7956 ;;		On entry : 0/0
  7957 ;;		On exit  : 0/0
  7958 ;;		Unchanged: 0/0
  7959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7964 ;;Total ram usage:        0 bytes
  7965 ;; Hardware stack levels used:    1
  7966 ;; This function calls:
  7967 ;;		Nothing
  7968 ;; This function is called by:
  7969 ;;		_TMR0_Initialize
  7970 ;;		_TMR0_ISR
  7971 ;; This function uses a non-reentrant model
  7972 ;;
  7973                           
  7974                           
  7975                           ;psect for function _TMR0_DefaultInterruptHandler
  7976  0003                     _TMR0_DefaultInterruptHandler:	
  7977                           
  7978                           ;incstack = 0
  7979                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  7980  0003  0008               	return
  7981  0004                     __end_of_TMR0_DefaultInterruptHandler:	
  7982                           
  7983                           	psect	text33
  7984  07EE                     __ptext33:	
  7985 ;; *************** function _timerISR *****************
  7986 ;; Defined at:
  7987 ;;		line 96 in file "main.c"
  7988 ;; Parameters:    Size  Location     Type
  7989 ;;		None
  7990 ;; Auto vars:     Size  Location     Type
  7991 ;;		None
  7992 ;; Return value:  Size  Location     Type
  7993 ;;                  1    wreg      void 
  7994 ;; Registers used:
  7995 ;;		wreg
  7996 ;; Tracked objects:
  7997 ;;		On entry : 0/0
  7998 ;;		On exit  : 0/0
  7999 ;;		Unchanged: 0/0
  8000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8005 ;;Total ram usage:        0 bytes
  8006 ;; Hardware stack levels used:    1
  8007 ;; This function calls:
  8008 ;;		Nothing
  8009 ;; This function is called by:
  8010 ;;		_main
  8011 ;;		_TMR0_ISR
  8012 ;; This function uses a non-reentrant model
  8013 ;;
  8014                           
  8015                           
  8016                           ;psect for function _timerISR
  8017  07EE                     _timerISR:	
  8018                           
  8019                           ;main.c: 97:     counter++ ;
  8020                           
  8021                           ;incstack = 0
  8022                           ; Regs used in _timerISR: [wreg]
  8023  07EE  3001               	movlw	1
  8024  07EF  0020               	movlb	0	; select bank0
  8025  07F0  07DB               	addwf	_counter,f	;volatile
  8026  07F1  3000               	movlw	0
  8027  07F2  3DDC               	addwfc	_counter+1,f	;volatile
  8028  07F3  3000               	movlw	0
  8029  07F4  3DDD               	addwfc	_counter+2,f	;volatile
  8030  07F5  3000               	movlw	0
  8031  07F6  3DDE               	addwfc	_counter+3,f	;volatile
  8032                           
  8033                           ;main.c: 98:     adcCounter++ ;
  8034  07F7  3001               	movlw	1
  8035  07F8  07C8               	addwf	_adcCounter,f	;volatile
  8036  07F9  3000               	movlw	0
  8037  07FA  3DC9               	addwfc	_adcCounter+1,f	;volatile
  8038  07FB  3000               	movlw	0
  8039  07FC  3DCA               	addwfc	_adcCounter+2,f	;volatile
  8040  07FD  3000               	movlw	0
  8041  07FE  3DCB               	addwfc	_adcCounter+3,f	;volatile
  8042  07FF  0008               	return
  8043  0800                     __end_of_timerISR:	
  8044                           
  8045                           	psect	text34
  8046  0951                     __ptext34:	
  8047 ;; *************** function _PIN_MANAGER_IOC *****************
  8048 ;; Defined at:
  8049 ;;		line 74 in file "mcc_generated_files/pin_manager.c"
  8050 ;; Parameters:    Size  Location     Type
  8051 ;;		None
  8052 ;; Auto vars:     Size  Location     Type
  8053 ;;		None
  8054 ;; Return value:  Size  Location     Type
  8055 ;;                  1    wreg      void 
  8056 ;; Registers used:
  8057 ;;		wreg, status,2, status,0, pclath, cstack
  8058 ;; Tracked objects:
  8059 ;;		On entry : 0/0
  8060 ;;		On exit  : 0/0
  8061 ;;		Unchanged: 0/0
  8062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8067 ;;Total ram usage:        0 bytes
  8068 ;; Hardware stack levels used:    1
  8069 ;; Hardware stack levels required when called:    4
  8070 ;; This function calls:
  8071 ;;		_IOCCF7_ISR
  8072 ;; This function is called by:
  8073 ;;		_INTERRUPT_InterruptManager
  8074 ;; This function uses a non-reentrant model
  8075 ;;
  8076                           
  8077                           
  8078                           ;psect for function _PIN_MANAGER_IOC
  8079  0951                     _PIN_MANAGER_IOC:	
  8080                           
  8081                           ;mcc_generated_files/pin_manager.c: 77:     if(IOCCFbits.IOCCF7 == 1)
  8082                           
  8083                           ;incstack = 0
  8084                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
  8085  0951  0027               	movlb	7	; select bank7
  8086  0952  1F99               	btfss	25,7	;volatile
  8087  0953  0008               	return
  8088                           
  8089                           ;mcc_generated_files/pin_manager.c: 78:     {;mcc_generated_files/pin_manager.c: 79:    
      +                               IOCCF7_ISR();
  8090  0954  3189  21BB         	fcall	_IOCCF7_ISR
  8091  0956  0008               	return
  8092  0957                     __end_of_PIN_MANAGER_IOC:	
  8093                           
  8094                           	psect	text35
  8095  09BB                     __ptext35:	
  8096 ;; *************** function _IOCCF7_ISR *****************
  8097 ;; Defined at:
  8098 ;;		line 86 in file "mcc_generated_files/pin_manager.c"
  8099 ;; Parameters:    Size  Location     Type
  8100 ;;		None
  8101 ;; Auto vars:     Size  Location     Type
  8102 ;;		None
  8103 ;; Return value:  Size  Location     Type
  8104 ;;                  1    wreg      void 
  8105 ;; Registers used:
  8106 ;;		wreg, status,2, status,0, pclath, cstack
  8107 ;; Tracked objects:
  8108 ;;		On entry : 0/0
  8109 ;;		On exit  : 0/0
  8110 ;;		Unchanged: 0/0
  8111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8115 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8116 ;;Total ram usage:        0 bytes
  8117 ;; Hardware stack levels used:    1
  8118 ;; Hardware stack levels required when called:    3
  8119 ;; This function calls:
  8120 ;;		Absolute function
  8121 ;;		_IOCCF7_DefaultInterruptHandler
  8122 ;;		_speedCalc
  8123 ;; This function is called by:
  8124 ;;		_PIN_MANAGER_IOC
  8125 ;; This function uses a non-reentrant model
  8126 ;;
  8127                           
  8128                           
  8129                           ;psect for function _IOCCF7_ISR
  8130  09BB                     _IOCCF7_ISR:	
  8131                           
  8132                           ;mcc_generated_files/pin_manager.c: 91:     if(IOCCF7_InterruptHandler)
  8133                           
  8134                           ;incstack = 0
  8135                           ; Regs used in _IOCCF7_ISR: [wreg+status,2+status,0+pclath+cstack]
  8136  09BB  0022               	movlb	2	; select bank2
  8137  09BC  0866               	movf	_IOCCF7_InterruptHandler^(0+256),w
  8138  09BD  0467               	iorwf	(_IOCCF7_InterruptHandler+1)^(0+256),w
  8139  09BE  1903               	btfsc	3,2
  8140  09BF  29C5               	goto	i1l2891
  8141                           
  8142                           ;mcc_generated_files/pin_manager.c: 92:     {;mcc_generated_files/pin_manager.c: 93:    
      +                               IOCCF7_InterruptHandler();
  8143  09C0  0867               	movf	(_IOCCF7_InterruptHandler+1)^(0+256),w
  8144  09C1  008A               	movwf	10
  8145  09C2  0866               	movf	_IOCCF7_InterruptHandler^(0+256),w
  8146  09C3  000A               	callw
  8147  09C4  3189               	pagesel	$
  8148  09C5                     i1l2891:	
  8149                           
  8150                           ;mcc_generated_files/pin_manager.c: 95:     IOCCFbits.IOCCF7 = 0;
  8151  09C5  0027               	movlb	7	; select bank7
  8152  09C6  1399               	bcf	25,7	;volatile
  8153  09C7  0008               	return
  8154  09C8                     __end_of_IOCCF7_ISR:	
  8155                           
  8156                           	psect	text36
  8157  0002                     __ptext36:	
  8158 ;; *************** function _IOCCF7_DefaultInterruptHandler *****************
  8159 ;; Defined at:
  8160 ;;		line 108 in file "mcc_generated_files/pin_manager.c"
  8161 ;; Parameters:    Size  Location     Type
  8162 ;;		None
  8163 ;; Auto vars:     Size  Location     Type
  8164 ;;		None
  8165 ;; Return value:  Size  Location     Type
  8166 ;;                  1    wreg      void 
  8167 ;; Registers used:
  8168 ;;		None
  8169 ;; Tracked objects:
  8170 ;;		On entry : 0/0
  8171 ;;		On exit  : 0/0
  8172 ;;		Unchanged: 0/0
  8173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8178 ;;Total ram usage:        0 bytes
  8179 ;; Hardware stack levels used:    1
  8180 ;; This function calls:
  8181 ;;		Nothing
  8182 ;; This function is called by:
  8183 ;;		_PIN_MANAGER_Initialize
  8184 ;;		_IOCCF7_ISR
  8185 ;; This function uses a non-reentrant model
  8186 ;;
  8187                           
  8188                           
  8189                           ;psect for function _IOCCF7_DefaultInterruptHandler
  8190  0002                     _IOCCF7_DefaultInterruptHandler:	
  8191                           
  8192                           ;incstack = 0
  8193                           ; Regs used in _IOCCF7_DefaultInterruptHandler: []
  8194  0002  0008               	return
  8195  0003                     __end_of_IOCCF7_DefaultInterruptHandler:	
  8196                           
  8197                           	psect	text37
  8198  0D90                     __ptext37:	
  8199 ;; *************** function _speedCalc *****************
  8200 ;; Defined at:
  8201 ;;		line 101 in file "main.c"
  8202 ;; Parameters:    Size  Location     Type
  8203 ;;		None
  8204 ;; Auto vars:     Size  Location     Type
  8205 ;;		None
  8206 ;; Return value:  Size  Location     Type
  8207 ;;                  1    wreg      void 
  8208 ;; Registers used:
  8209 ;;		wreg, status,2, status,0, pclath, cstack
  8210 ;; Tracked objects:
  8211 ;;		On entry : 0/0
  8212 ;;		On exit  : 0/0
  8213 ;;		Unchanged: 0/0
  8214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8216 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8218 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8219 ;;Total ram usage:        4 bytes
  8220 ;; Hardware stack levels used:    1
  8221 ;; Hardware stack levels required when called:    2
  8222 ;; This function calls:
  8223 ;;		___aldiv
  8224 ;;		___fladd
  8225 ;;		___flmul
  8226 ;;		___lmul
  8227 ;;		___xxtofl
  8228 ;; This function is called by:
  8229 ;;		_main
  8230 ;;		_IOCCF7_ISR
  8231 ;; This function uses a non-reentrant model
  8232 ;;
  8233                           
  8234                           
  8235                           ;psect for function _speedCalc
  8236  0D90                     _speedCalc:	
  8237                           
  8238                           ;main.c: 103:     rpm = ( 1000 / counter ) * 60 ;
  8239                           
  8240                           ;incstack = 0
  8241                           ; Regs used in _speedCalc: [wreg+status,2+status,0+pclath+cstack]
  8242  0D90  3000               	movlw	0
  8243  0D91  0020               	movlb	0	; select bank0
  8244  0D92  00AD               	movwf	___lmul@multiplicand+3
  8245  0D93  3000               	movlw	0
  8246  0D94  00AC               	movwf	___lmul@multiplicand+2
  8247  0D95  3000               	movlw	0
  8248  0D96  00AB               	movwf	___lmul@multiplicand+1
  8249  0D97  303C               	movlw	60
  8250  0D98  00AA               	movwf	___lmul@multiplicand
  8251  0D99  3000               	movlw	0
  8252  0D9A  00F7               	movwf	___aldiv@dividend+3
  8253  0D9B  3000               	movlw	0
  8254  0D9C  00F6               	movwf	___aldiv@dividend+2
  8255  0D9D  3003               	movlw	3
  8256  0D9E  00F5               	movwf	___aldiv@dividend+1
  8257  0D9F  30E8               	movlw	232
  8258  0DA0  00F4               	movwf	___aldiv@dividend
  8259  0DA1  085E               	movf	_counter+3,w	;volatile
  8260  0DA2  00F3               	movwf	___aldiv@divisor+3
  8261  0DA3  085D               	movf	_counter+2,w	;volatile
  8262  0DA4  00F2               	movwf	___aldiv@divisor+2
  8263  0DA5  085C               	movf	_counter+1,w	;volatile
  8264  0DA6  00F1               	movwf	___aldiv@divisor+1
  8265  0DA7  085B               	movf	_counter,w	;volatile
  8266  0DA8  00F0               	movwf	___aldiv@divisor
  8267  0DA9  318C  2478  318D   	fcall	___aldiv
  8268  0DAC  0873               	movf	?___aldiv+3,w
  8269  0DAD  0020               	movlb	0	; select bank0
  8270  0DAE  00A9               	movwf	___lmul@multiplier+3
  8271  0DAF  0872               	movf	?___aldiv+2,w
  8272  0DB0  00A8               	movwf	___lmul@multiplier+2
  8273  0DB1  0871               	movf	?___aldiv+1,w
  8274  0DB2  00A7               	movwf	___lmul@multiplier+1
  8275  0DB3  0870               	movf	?___aldiv,w
  8276  0DB4  00A6               	movwf	___lmul@multiplier
  8277  0DB5  318A  22FD  318D   	fcall	___lmul
  8278  0DB8  0020               	movlb	0	; select bank0
  8279  0DB9  0829               	movf	?___lmul+3,w
  8280  0DBA  00B1               	movwf	___xxtofl@val+3
  8281  0DBB  0828               	movf	?___lmul+2,w
  8282  0DBC  00B0               	movwf	___xxtofl@val+2
  8283  0DBD  0827               	movf	?___lmul+1,w
  8284  0DBE  00AF               	movwf	___xxtofl@val+1
  8285  0DBF  0826               	movf	?___lmul,w
  8286  0DC0  00AE               	movwf	___xxtofl@val
  8287  0DC1  3001               	movlw	1
  8288  0DC2  318C  24FA  318D   	fcall	___xxtofl
  8289  0DC5  0020               	movlb	0	; select bank0
  8290  0DC6  0831               	movf	?___xxtofl+3,w
  8291  0DC7  00DA               	movwf	_rpm+3	;volatile
  8292  0DC8  0830               	movf	?___xxtofl+2,w
  8293  0DC9  00D9               	movwf	_rpm+2	;volatile
  8294  0DCA  082F               	movf	?___xxtofl+1,w
  8295  0DCB  00D8               	movwf	_rpm+1	;volatile
  8296  0DCC  082E               	movf	?___xxtofl,w
  8297  0DCD  00D7               	movwf	_rpm	;volatile
  8298                           
  8299                           ;main.c: 106:     speed = 2 * rpm * (0.06) ;
  8300  0DCE  3040               	movlw	64
  8301  0DCF  00A3               	movwf	___flmul@b+3
  8302  0DD0  3000               	movlw	0
  8303  0DD1  00A2               	movwf	___flmul@b+2
  8304  0DD2  3000               	movlw	0
  8305  0DD3  00A1               	movwf	___flmul@b+1
  8306  0DD4  3000               	movlw	0
  8307  0DD5  00A0               	movwf	___flmul@b
  8308  0DD6  085A               	movf	_rpm+3,w	;volatile
  8309  0DD7  00A7               	movwf	___flmul@a+3
  8310  0DD8  0859               	movf	_rpm+2,w	;volatile
  8311  0DD9  00A6               	movwf	___flmul@a+2
  8312  0DDA  0858               	movf	_rpm+1,w	;volatile
  8313  0DDB  00A5               	movwf	___flmul@a+1
  8314  0DDC  0857               	movf	_rpm,w	;volatile
  8315  0DDD  00A4               	movwf	___flmul@a
  8316  0DDE  3180  203A  318D   	fcall	___flmul
  8317  0DE1  0020               	movlb	0	; select bank0
  8318  0DE2  0823               	movf	?___flmul+3,w
  8319  0DE3  00BF               	movwf	_speedCalc$1222+3
  8320  0DE4  0822               	movf	?___flmul+2,w
  8321  0DE5  00BE               	movwf	_speedCalc$1222+2
  8322  0DE6  0821               	movf	?___flmul+1,w
  8323  0DE7  00BD               	movwf	_speedCalc$1222+1
  8324  0DE8  0820               	movf	?___flmul,w
  8325  0DE9  00BC               	movwf	_speedCalc$1222
  8326                           
  8327                           ;main.c: 106:     speed = 2 * rpm * (0.06) ;
  8328  0DEA  303D               	movlw	61
  8329  0DEB  00A3               	movwf	___flmul@b+3
  8330  0DEC  3075               	movlw	117
  8331  0DED  00A2               	movwf	___flmul@b+2
  8332  0DEE  30C2               	movlw	194
  8333  0DEF  00A1               	movwf	___flmul@b+1
  8334  0DF0  308F               	movlw	143
  8335  0DF1  00A0               	movwf	___flmul@b
  8336  0DF2  083F               	movf	_speedCalc$1222+3,w
  8337  0DF3  00A7               	movwf	___flmul@a+3
  8338  0DF4  083E               	movf	_speedCalc$1222+2,w
  8339  0DF5  00A6               	movwf	___flmul@a+2
  8340  0DF6  083D               	movf	_speedCalc$1222+1,w
  8341  0DF7  00A5               	movwf	___flmul@a+1
  8342  0DF8  083C               	movf	_speedCalc$1222,w
  8343  0DF9  00A4               	movwf	___flmul@a
  8344  0DFA  3180  203A  318D   	fcall	___flmul
  8345  0DFD  0020               	movlb	0	; select bank0
  8346  0DFE  0823               	movf	?___flmul+3,w
  8347  0DFF  00C7               	movwf	_speed+3	;volatile
  8348  0E00  0822               	movf	?___flmul+2,w
  8349  0E01  00C6               	movwf	_speed+2	;volatile
  8350  0E02  0821               	movf	?___flmul+1,w
  8351  0E03  00C5               	movwf	_speed+1	;volatile
  8352  0E04  0820               	movf	?___flmul,w
  8353  0E05  00C4               	movwf	_speed	;volatile
  8354                           
  8355                           ;main.c: 109:     counter = 0 ;
  8356  0E06  3000               	movlw	0
  8357  0E07  00DE               	movwf	_counter+3	;volatile
  8358  0E08  3000               	movlw	0
  8359  0E09  00DD               	movwf	_counter+2	;volatile
  8360  0E0A  3000               	movlw	0
  8361  0E0B  00DC               	movwf	_counter+1	;volatile
  8362  0E0C  3000               	movlw	0
  8363  0E0D  00DB               	movwf	_counter	;volatile
  8364                           
  8365                           ;main.c: 110:     distance = distance + 2 ;
  8366  0E0E  3040               	movlw	64
  8367  0E0F  00F3               	movwf	___fladd@b+3
  8368  0E10  3000               	movlw	0
  8369  0E11  00F2               	movwf	___fladd@b+2
  8370  0E12  3000               	movlw	0
  8371  0E13  00F1               	movwf	___fladd@b+1
  8372  0E14  3000               	movlw	0
  8373  0E15  00F0               	movwf	___fladd@b
  8374  0E16  0843               	movf	_distance+3,w	;volatile
  8375  0E17  00F7               	movwf	___fladd@a+3
  8376  0E18  0842               	movf	_distance+2,w	;volatile
  8377  0E19  00F6               	movwf	___fladd@a+2
  8378  0E1A  0841               	movf	_distance+1,w	;volatile
  8379  0E1B  00F5               	movwf	___fladd@a+1
  8380  0E1C  0840               	movf	_distance,w	;volatile
  8381  0E1D  00F4               	movwf	___fladd@a
  8382  0E1E  3182  2266         	fcall	___fladd
  8383  0E20  0873               	movf	?___fladd+3,w
  8384  0E21  0020               	movlb	0	; select bank0
  8385  0E22  00C3               	movwf	_distance+3	;volatile
  8386  0E23  0872               	movf	?___fladd+2,w
  8387  0E24  00C2               	movwf	_distance+2	;volatile
  8388  0E25  0871               	movf	?___fladd+1,w
  8389  0E26  00C1               	movwf	_distance+1	;volatile
  8390  0E27  0870               	movf	?___fladd,w
  8391  0E28  00C0               	movwf	_distance	;volatile
  8392  0E29  0008               	return
  8393  0E2A                     __end_of_speedCalc:	
  8394                           
  8395                           	psect	text38
  8396  0CFA                     __ptext38:	
  8397 ;; *************** function ___xxtofl *****************
  8398 ;; Defined at:
  8399 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
  8400 ;; Parameters:    Size  Location     Type
  8401 ;;  sign            1    wreg     unsigned char 
  8402 ;;  val             4   14[BANK0 ] long 
  8403 ;; Auto vars:     Size  Location     Type
  8404 ;;  sign            1   22[BANK0 ] unsigned char 
  8405 ;;  arg             4   24[BANK0 ] unsigned long 
  8406 ;;  exp             1   23[BANK0 ] unsigned char 
  8407 ;; Return value:  Size  Location     Type
  8408 ;;                  4   14[BANK0 ] unsigned char 
  8409 ;; Registers used:
  8410 ;;		wreg, status,2, status,0
  8411 ;; Tracked objects:
  8412 ;;		On entry : 0/0
  8413 ;;		On exit  : 0/0
  8414 ;;		Unchanged: 0/0
  8415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8416 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8417 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8418 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8419 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8420 ;;Total ram usage:       14 bytes
  8421 ;; Hardware stack levels used:    1
  8422 ;; This function calls:
  8423 ;;		Nothing
  8424 ;; This function is called by:
  8425 ;;		_speedCalc
  8426 ;; This function uses a non-reentrant model
  8427 ;;
  8428                           
  8429                           
  8430                           ;psect for function ___xxtofl
  8431  0CFA                     ___xxtofl:	
  8432                           
  8433                           ;incstack = 0
  8434                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  8435                           ;___xxtofl@sign stored from wreg
  8436  0CFA  0020               	movlb	0	; select bank0
  8437  0CFB  00B6               	movwf	___xxtofl@sign
  8438  0CFC  0836               	movf	___xxtofl@sign,w
  8439  0CFD  1D03               	btfss	3,2
  8440  0CFE  1FB1               	btfss	___xxtofl@val+3,7
  8441  0CFF  2D10               	goto	i1l2703
  8442  0D00  092E               	comf	___xxtofl@val,w
  8443  0D01  00B8               	movwf	___xxtofl@arg
  8444  0D02  092F               	comf	___xxtofl@val+1,w
  8445  0D03  00B9               	movwf	___xxtofl@arg+1
  8446  0D04  0930               	comf	___xxtofl@val+2,w
  8447  0D05  00BA               	movwf	___xxtofl@arg+2
  8448  0D06  0931               	comf	___xxtofl@val+3,w
  8449  0D07  00BB               	movwf	___xxtofl@arg+3
  8450  0D08  0AB8               	incf	___xxtofl@arg,f
  8451  0D09  1903               	skipnz
  8452  0D0A  0AB9               	incf	___xxtofl@arg+1,f
  8453  0D0B  1903               	skipnz
  8454  0D0C  0ABA               	incf	___xxtofl@arg+2,f
  8455  0D0D  1903               	skipnz
  8456  0D0E  0ABB               	incf	___xxtofl@arg+3,f
  8457  0D0F  2D18               	goto	i1l941
  8458  0D10                     i1l2703:	
  8459  0D10  0831               	movf	___xxtofl@val+3,w
  8460  0D11  00BB               	movwf	___xxtofl@arg+3
  8461  0D12  0830               	movf	___xxtofl@val+2,w
  8462  0D13  00BA               	movwf	___xxtofl@arg+2
  8463  0D14  082F               	movf	___xxtofl@val+1,w
  8464  0D15  00B9               	movwf	___xxtofl@arg+1
  8465  0D16  082E               	movf	___xxtofl@val,w
  8466  0D17  00B8               	movwf	___xxtofl@arg
  8467  0D18                     i1l941:	
  8468  0D18  0831               	movf	___xxtofl@val+3,w
  8469  0D19  0430               	iorwf	___xxtofl@val+2,w
  8470  0D1A  042F               	iorwf	___xxtofl@val+1,w
  8471  0D1B  042E               	iorwf	___xxtofl@val,w
  8472  0D1C  1D03               	skipz
  8473  0D1D  2D27               	goto	i1l2709
  8474  0D1E  3000               	movlw	0
  8475  0D1F  00B1               	movwf	?___xxtofl+3
  8476  0D20  3000               	movlw	0
  8477  0D21  00B0               	movwf	?___xxtofl+2
  8478  0D22  3000               	movlw	0
  8479  0D23  00AF               	movwf	?___xxtofl+1
  8480  0D24  3000               	movlw	0
  8481  0D25  00AE               	movwf	?___xxtofl
  8482  0D26  0008               	return
  8483  0D27                     i1l2709:	
  8484  0D27  3096               	movlw	150
  8485  0D28  00B2               	movwf	??___xxtofl
  8486  0D29  0832               	movf	??___xxtofl,w
  8487  0D2A  00B7               	movwf	___xxtofl@exp
  8488  0D2B                     i1l2713:	
  8489  0D2B  30FE               	movlw	254
  8490  0D2C  053B               	andwf	___xxtofl@arg+3,w
  8491  0D2D  1903               	btfsc	3,2
  8492  0D2E  2D4E               	goto	i1l947
  8493  0D2F  3001               	movlw	1
  8494  0D30  00B2               	movwf	??___xxtofl
  8495  0D31  0832               	movf	??___xxtofl,w
  8496  0D32  07B7               	addwf	___xxtofl@exp,f
  8497  0D33  3001               	movlw	1
  8498  0D34                     u327_25:	
  8499  0D34  36BB               	lsrf	___xxtofl@arg+3,f
  8500  0D35  0CBA               	rrf	___xxtofl@arg+2,f
  8501  0D36  0CB9               	rrf	___xxtofl@arg+1,f
  8502  0D37  0CB8               	rrf	___xxtofl@arg,f
  8503  0D38  0B89               	decfsz	9,f
  8504  0D39  2D34               	goto	u327_25
  8505  0D3A  2D2B               	goto	i1l2713
  8506  0D3B                     i1l2715:	
  8507  0D3B  3001               	movlw	1
  8508  0D3C  00B2               	movwf	??___xxtofl
  8509  0D3D  0832               	movf	??___xxtofl,w
  8510  0D3E  07B7               	addwf	___xxtofl@exp,f
  8511  0D3F  3001               	movlw	1
  8512  0D40  07B8               	addwf	___xxtofl@arg,f
  8513  0D41  3000               	movlw	0
  8514  0D42  3DB9               	addwfc	___xxtofl@arg+1,f
  8515  0D43  3000               	movlw	0
  8516  0D44  3DBA               	addwfc	___xxtofl@arg+2,f
  8517  0D45  3000               	movlw	0
  8518  0D46  3DBB               	addwfc	___xxtofl@arg+3,f
  8519  0D47  3001               	movlw	1
  8520  0D48                     u329_25:	
  8521  0D48  36BB               	lsrf	___xxtofl@arg+3,f
  8522  0D49  0CBA               	rrf	___xxtofl@arg+2,f
  8523  0D4A  0CB9               	rrf	___xxtofl@arg+1,f
  8524  0D4B  0CB8               	rrf	___xxtofl@arg,f
  8525  0D4C  0B89               	decfsz	9,f
  8526  0D4D  2D48               	goto	u329_25
  8527  0D4E                     i1l947:	
  8528  0D4E  30FF               	movlw	255
  8529  0D4F  053B               	andwf	___xxtofl@arg+3,w
  8530  0D50  1903               	btfsc	3,2
  8531  0D51  2D60               	goto	i1l2723
  8532  0D52  2D3B               	goto	i1l2715
  8533  0D53                     i1l2725:	
  8534  0D53  3002               	movlw	2
  8535  0D54  0237               	subwf	___xxtofl@exp,w
  8536  0D55  1C03               	btfss	3,0
  8537  0D56  2D62               	goto	i1l954
  8538  0D57  3001               	movlw	1
  8539  0D58  02B7               	subwf	___xxtofl@exp,f
  8540  0D59  3001               	movlw	1
  8541  0D5A                     u331_25:	
  8542  0D5A  35B8               	lslf	___xxtofl@arg,f
  8543  0D5B  0DB9               	rlf	___xxtofl@arg+1,f
  8544  0D5C  0DBA               	rlf	___xxtofl@arg+2,f
  8545  0D5D  0DBB               	rlf	___xxtofl@arg+3,f
  8546  0D5E  0B89               	decfsz	9,f
  8547  0D5F  2D5A               	goto	u331_25
  8548  0D60                     i1l2723:	
  8549  0D60  1FBA               	btfss	___xxtofl@arg+2,7
  8550  0D61  2D53               	goto	i1l2725
  8551  0D62                     i1l954:	
  8552  0D62  1837               	btfsc	___xxtofl@exp,0
  8553  0D63  2D6C               	goto	i1l955
  8554  0D64  30FF               	movlw	255
  8555  0D65  05B8               	andwf	___xxtofl@arg,f
  8556  0D66  30FF               	movlw	255
  8557  0D67  05B9               	andwf	___xxtofl@arg+1,f
  8558  0D68  307F               	movlw	127
  8559  0D69  05BA               	andwf	___xxtofl@arg+2,f
  8560  0D6A  30FF               	movlw	255
  8561  0D6B  05BB               	andwf	___xxtofl@arg+3,f
  8562  0D6C                     i1l955:	
  8563  0D6C  1003               	clrc
  8564  0D6D  0CB7               	rrf	___xxtofl@exp,f
  8565  0D6E  0837               	movf	___xxtofl@exp,w
  8566  0D6F  00B2               	movwf	??___xxtofl
  8567  0D70  01B3               	clrf	??___xxtofl+1
  8568  0D71  01B4               	clrf	??___xxtofl+2
  8569  0D72  01B5               	clrf	??___xxtofl+3
  8570  0D73  3018               	movlw	24
  8571  0D74                     u335_25:	
  8572  0D74  35B2               	lslf	??___xxtofl,f
  8573  0D75  0DB3               	rlf	??___xxtofl+1,f
  8574  0D76  0DB4               	rlf	??___xxtofl+2,f
  8575  0D77  0DB5               	rlf	??___xxtofl+3,f
  8576  0D78  0B89               	decfsz	9,f
  8577  0D79  2D74               	goto	u335_25
  8578  0D7A  0832               	movf	??___xxtofl,w
  8579  0D7B  04B8               	iorwf	___xxtofl@arg,f
  8580  0D7C  0833               	movf	??___xxtofl+1,w
  8581  0D7D  04B9               	iorwf	___xxtofl@arg+1,f
  8582  0D7E  0834               	movf	??___xxtofl+2,w
  8583  0D7F  04BA               	iorwf	___xxtofl@arg+2,f
  8584  0D80  0835               	movf	??___xxtofl+3,w
  8585  0D81  04BB               	iorwf	___xxtofl@arg+3,f
  8586  0D82  0836               	movf	___xxtofl@sign,w
  8587  0D83  1D03               	btfss	3,2
  8588  0D84  1FB1               	btfss	___xxtofl@val+3,7
  8589  0D85  2D87               	goto	i1l2737
  8590  0D86  17BB               	bsf	___xxtofl@arg+3,7
  8591  0D87                     i1l2737:	
  8592  0D87  083B               	movf	___xxtofl@arg+3,w
  8593  0D88  00B1               	movwf	?___xxtofl+3
  8594  0D89  083A               	movf	___xxtofl@arg+2,w
  8595  0D8A  00B0               	movwf	?___xxtofl+2
  8596  0D8B  0839               	movf	___xxtofl@arg+1,w
  8597  0D8C  00AF               	movwf	?___xxtofl+1
  8598  0D8D  0838               	movf	___xxtofl@arg,w
  8599  0D8E  00AE               	movwf	?___xxtofl
  8600  0D8F  0008               	return
  8601  0D90                     __end_of___xxtofl:	
  8602                           
  8603                           	psect	text39
  8604  0AFD                     __ptext39:	
  8605 ;; *************** function ___lmul *****************
  8606 ;; Defined at:
  8607 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul32.c"
  8608 ;; Parameters:    Size  Location     Type
  8609 ;;  multiplier      4    6[BANK0 ] unsigned long 
  8610 ;;  multiplicand    4   10[BANK0 ] unsigned long 
  8611 ;; Auto vars:     Size  Location     Type
  8612 ;;  product         4    9[COMMON] unsigned long 
  8613 ;; Return value:  Size  Location     Type
  8614 ;;                  4    6[BANK0 ] unsigned long 
  8615 ;; Registers used:
  8616 ;;		wreg, status,2, status,0
  8617 ;; Tracked objects:
  8618 ;;		On entry : 0/0
  8619 ;;		On exit  : 0/0
  8620 ;;		Unchanged: 0/0
  8621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8622 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8623 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8625 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8626 ;;Total ram usage:       12 bytes
  8627 ;; Hardware stack levels used:    1
  8628 ;; This function calls:
  8629 ;;		Nothing
  8630 ;; This function is called by:
  8631 ;;		_speedCalc
  8632 ;; This function uses a non-reentrant model
  8633 ;;
  8634                           
  8635                           
  8636                           ;psect for function ___lmul
  8637  0AFD                     ___lmul:	
  8638                           
  8639                           ;incstack = 0
  8640                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  8641  0AFD  3000               	movlw	0
  8642  0AFE  00FC               	movwf	___lmul@product+3
  8643  0AFF  3000               	movlw	0
  8644  0B00  00FB               	movwf	___lmul@product+2
  8645  0B01  3000               	movlw	0
  8646  0B02  00FA               	movwf	___lmul@product+1
  8647  0B03  3000               	movlw	0
  8648  0B04  00F9               	movwf	___lmul@product
  8649  0B05                     i1l2311:	
  8650  0B05  0020               	movlb	0	; select bank0
  8651  0B06  1C26               	btfss	___lmul@multiplier,0
  8652  0B07  2B10               	goto	i1l2315
  8653  0B08  082A               	movf	___lmul@multiplicand,w
  8654  0B09  07F9               	addwf	___lmul@product,f
  8655  0B0A  082B               	movf	___lmul@multiplicand+1,w
  8656  0B0B  3DFA               	addwfc	___lmul@product+1,f
  8657  0B0C  082C               	movf	___lmul@multiplicand+2,w
  8658  0B0D  3DFB               	addwfc	___lmul@product+2,f
  8659  0B0E  082D               	movf	___lmul@multiplicand+3,w
  8660  0B0F  3DFC               	addwfc	___lmul@product+3,f
  8661  0B10                     i1l2315:	
  8662  0B10  3001               	movlw	1
  8663  0B11                     u242_25:	
  8664  0B11  35AA               	lslf	___lmul@multiplicand,f
  8665  0B12  0DAB               	rlf	___lmul@multiplicand+1,f
  8666  0B13  0DAC               	rlf	___lmul@multiplicand+2,f
  8667  0B14  0DAD               	rlf	___lmul@multiplicand+3,f
  8668  0B15  0B89               	decfsz	9,f
  8669  0B16  2B11               	goto	u242_25
  8670  0B17  3001               	movlw	1
  8671  0B18                     u243_25:	
  8672  0B18  36A9               	lsrf	___lmul@multiplier+3,f
  8673  0B19  0CA8               	rrf	___lmul@multiplier+2,f
  8674  0B1A  0CA7               	rrf	___lmul@multiplier+1,f
  8675  0B1B  0CA6               	rrf	___lmul@multiplier,f
  8676  0B1C  0B89               	decfsz	9,f
  8677  0B1D  2B18               	goto	u243_25
  8678  0B1E  0829               	movf	___lmul@multiplier+3,w
  8679  0B1F  0428               	iorwf	___lmul@multiplier+2,w
  8680  0B20  0427               	iorwf	___lmul@multiplier+1,w
  8681  0B21  0426               	iorwf	___lmul@multiplier,w
  8682  0B22  1D03               	skipz
  8683  0B23  2B05               	goto	i1l2311
  8684  0B24  087C               	movf	___lmul@product+3,w
  8685  0B25  00A9               	movwf	?___lmul+3
  8686  0B26  087B               	movf	___lmul@product+2,w
  8687  0B27  00A8               	movwf	?___lmul+2
  8688  0B28  087A               	movf	___lmul@product+1,w
  8689  0B29  00A7               	movwf	?___lmul+1
  8690  0B2A  0879               	movf	___lmul@product,w
  8691  0B2B  00A6               	movwf	?___lmul
  8692  0B2C  0008               	return
  8693  0B2D                     __end_of___lmul:	
  8694                           
  8695                           	psect	text40
  8696  003A                     __ptext40:	
  8697 ;; *************** function ___flmul *****************
  8698 ;; Defined at:
  8699 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
  8700 ;; Parameters:    Size  Location     Type
  8701 ;;  b               4    0[BANK0 ] unsigned long 
  8702 ;;  a               4    4[BANK0 ] unsigned long 
  8703 ;; Auto vars:     Size  Location     Type
  8704 ;;  prod            4   15[BANK0 ] struct .
  8705 ;;  grs             4    9[BANK0 ] unsigned long 
  8706 ;;  temp            2   19[BANK0 ] struct .
  8707 ;;  bexp            1   14[BANK0 ] unsigned char 
  8708 ;;  aexp            1   13[BANK0 ] unsigned char 
  8709 ;;  sign            1    8[BANK0 ] unsigned char 
  8710 ;; Return value:  Size  Location     Type
  8711 ;;                  4    0[BANK0 ] unsigned char 
  8712 ;; Registers used:
  8713 ;;		wreg, status,2, status,0, pclath, cstack
  8714 ;; Tracked objects:
  8715 ;;		On entry : 0/0
  8716 ;;		On exit  : 0/0
  8717 ;;		Unchanged: 0/0
  8718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8719 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8720 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8721 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8722 ;;      Totals:         5      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8723 ;;Total ram usage:       26 bytes
  8724 ;; Hardware stack levels used:    1
  8725 ;; Hardware stack levels required when called:    1
  8726 ;; This function calls:
  8727 ;;		__Umul8_16
  8728 ;; This function is called by:
  8729 ;;		_speedCalc
  8730 ;; This function uses a non-reentrant model
  8731 ;;
  8732                           
  8733                           
  8734                           ;psect for function ___flmul
  8735  003A                     ___flmul:	
  8736                           
  8737                           ;incstack = 0
  8738                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  8739  003A  0020               	movlb	0	; select bank0
  8740  003B  0823               	movf	___flmul@b+3,w
  8741  003C  3980               	andlw	128
  8742  003D  00F9               	movwf	??___flmul
  8743  003E  0879               	movf	??___flmul,w
  8744  003F  00A8               	movwf	___flmul@sign
  8745  0040  3523               	lslf	___flmul@b+3,w
  8746  0041  00F9               	movwf	??___flmul
  8747  0042  0879               	movf	??___flmul,w
  8748  0043  00AE               	movwf	___flmul@bexp
  8749  0044  1BA2               	btfsc	___flmul@b+2,7
  8750  0045  142E               	bsf	___flmul@bexp,0
  8751  0046  082E               	movf	___flmul@bexp,w
  8752  0047  1903               	btfsc	3,2
  8753  0048  2856               	goto	i1l2573
  8754  0049  0A2E               	incf	___flmul@bexp,w
  8755  004A  1D03               	btfss	3,2
  8756  004B  2854               	goto	i1l2571
  8757  004C  3000               	movlw	0
  8758  004D  00A3               	movwf	___flmul@b+3
  8759  004E  3000               	movlw	0
  8760  004F  00A2               	movwf	___flmul@b+2
  8761  0050  3000               	movlw	0
  8762  0051  00A1               	movwf	___flmul@b+1
  8763  0052  3000               	movlw	0
  8764  0053  00A0               	movwf	___flmul@b
  8765  0054                     i1l2571:	
  8766  0054  17A2               	bsf	___flmul@b+2,7
  8767  0055  285E               	goto	i1l2575
  8768  0056                     i1l2573:	
  8769  0056  3000               	movlw	0
  8770  0057  00A3               	movwf	___flmul@b+3
  8771  0058  3000               	movlw	0
  8772  0059  00A2               	movwf	___flmul@b+2
  8773  005A  3000               	movlw	0
  8774  005B  00A1               	movwf	___flmul@b+1
  8775  005C  3000               	movlw	0
  8776  005D  00A0               	movwf	___flmul@b
  8777  005E                     i1l2575:	
  8778  005E  0827               	movf	___flmul@a+3,w
  8779  005F  3980               	andlw	128
  8780  0060  00F9               	movwf	??___flmul
  8781  0061  0879               	movf	??___flmul,w
  8782  0062  06A8               	xorwf	___flmul@sign,f
  8783  0063  3527               	lslf	___flmul@a+3,w
  8784  0064  00F9               	movwf	??___flmul
  8785  0065  0879               	movf	??___flmul,w
  8786  0066  00AD               	movwf	___flmul@aexp
  8787  0067  1BA6               	btfsc	___flmul@a+2,7
  8788  0068  142D               	bsf	___flmul@aexp,0
  8789  0069  082D               	movf	___flmul@aexp,w
  8790  006A  1903               	btfsc	3,2
  8791  006B  2879               	goto	i1l2591
  8792  006C  0A2D               	incf	___flmul@aexp,w
  8793  006D  1D03               	btfss	3,2
  8794  006E  2877               	goto	i1l2589
  8795  006F  3000               	movlw	0
  8796  0070  00A7               	movwf	___flmul@a+3
  8797  0071  3000               	movlw	0
  8798  0072  00A6               	movwf	___flmul@a+2
  8799  0073  3000               	movlw	0
  8800  0074  00A5               	movwf	___flmul@a+1
  8801  0075  3000               	movlw	0
  8802  0076  00A4               	movwf	___flmul@a
  8803  0077                     i1l2589:	
  8804  0077  17A6               	bsf	___flmul@a+2,7
  8805  0078  2881               	goto	i1l2593
  8806  0079                     i1l2591:	
  8807  0079  3000               	movlw	0
  8808  007A  00A7               	movwf	___flmul@a+3
  8809  007B  3000               	movlw	0
  8810  007C  00A6               	movwf	___flmul@a+2
  8811  007D  3000               	movlw	0
  8812  007E  00A5               	movwf	___flmul@a+1
  8813  007F  3000               	movlw	0
  8814  0080  00A4               	movwf	___flmul@a
  8815  0081                     i1l2593:	
  8816  0081  082D               	movf	___flmul@aexp,w
  8817  0082  1D03               	btfss	3,2
  8818  0083  082E               	movf	___flmul@bexp,w
  8819  0084  1D03               	btfss	3,2
  8820  0085  288F               	goto	i1l2601
  8821  0086  3000               	movlw	0
  8822  0087  00A3               	movwf	?___flmul+3
  8823  0088  3000               	movlw	0
  8824  0089  00A2               	movwf	?___flmul+2
  8825  008A  3000               	movlw	0
  8826  008B  00A1               	movwf	?___flmul+1
  8827  008C  3000               	movlw	0
  8828  008D  00A0               	movwf	?___flmul
  8829  008E  0008               	return
  8830  008F                     i1l2601:	
  8831  008F  0820               	movf	___flmul@b,w
  8832  0090  00F9               	movwf	??___flmul
  8833  0091  0879               	movf	??___flmul,w
  8834  0092  00F0               	movwf	__Umul8_16@multiplicand
  8835  0093  0826               	movf	___flmul@a+2,w
  8836  0094  318A  2270  3180   	fcall	__Umul8_16
  8837  0097  0871               	movf	?__Umul8_16+1,w
  8838  0098  0020               	movlb	0	; select bank0
  8839  0099  00B4               	movwf	___flmul@temp+1
  8840  009A  0870               	movf	?__Umul8_16,w
  8841  009B  00B3               	movwf	___flmul@temp
  8842  009C  0833               	movf	___flmul@temp,w
  8843  009D  00F9               	movwf	??___flmul
  8844  009E  01FA               	clrf	??___flmul+1
  8845  009F  01FB               	clrf	??___flmul+2
  8846  00A0  01FC               	clrf	??___flmul+3
  8847  00A1  087C               	movf	??___flmul+3,w
  8848  00A2  00AC               	movwf	___flmul@grs+3
  8849  00A3  087B               	movf	??___flmul+2,w
  8850  00A4  00AB               	movwf	___flmul@grs+2
  8851  00A5  087A               	movf	??___flmul+1,w
  8852  00A6  00AA               	movwf	___flmul@grs+1
  8853  00A7  0879               	movf	??___flmul,w
  8854  00A8  00A9               	movwf	___flmul@grs
  8855  00A9  0834               	movf	___flmul@temp+1,w
  8856  00AA  00F9               	movwf	??___flmul
  8857  00AB  01FA               	clrf	??___flmul+1
  8858  00AC  01FB               	clrf	??___flmul+2
  8859  00AD  01FC               	clrf	??___flmul+3
  8860  00AE  087C               	movf	??___flmul+3,w
  8861  00AF  00B2               	movwf	___flmul@prod+3
  8862  00B0  087B               	movf	??___flmul+2,w
  8863  00B1  00B1               	movwf	___flmul@prod+2
  8864  00B2  087A               	movf	??___flmul+1,w
  8865  00B3  00B0               	movwf	___flmul@prod+1
  8866  00B4  0879               	movf	??___flmul,w
  8867  00B5  00AF               	movwf	___flmul@prod
  8868  00B6  0821               	movf	___flmul@b+1,w
  8869  00B7  00F9               	movwf	??___flmul
  8870  00B8  0879               	movf	??___flmul,w
  8871  00B9  00F0               	movwf	__Umul8_16@multiplicand
  8872  00BA  0825               	movf	___flmul@a+1,w
  8873  00BB  318A  2270  3180   	fcall	__Umul8_16
  8874  00BE  0871               	movf	?__Umul8_16+1,w
  8875  00BF  0020               	movlb	0	; select bank0
  8876  00C0  00B4               	movwf	___flmul@temp+1
  8877  00C1  0870               	movf	?__Umul8_16,w
  8878  00C2  00B3               	movwf	___flmul@temp
  8879  00C3  0833               	movf	___flmul@temp,w
  8880  00C4  00F9               	movwf	??___flmul
  8881  00C5  01FA               	clrf	??___flmul+1
  8882  00C6  01FB               	clrf	??___flmul+2
  8883  00C7  01FC               	clrf	??___flmul+3
  8884  00C8  0879               	movf	??___flmul,w
  8885  00C9  07A9               	addwf	___flmul@grs,f
  8886  00CA  087A               	movf	??___flmul+1,w
  8887  00CB  3DAA               	addwfc	___flmul@grs+1,f
  8888  00CC  087B               	movf	??___flmul+2,w
  8889  00CD  3DAB               	addwfc	___flmul@grs+2,f
  8890  00CE  087C               	movf	??___flmul+3,w
  8891  00CF  3DAC               	addwfc	___flmul@grs+3,f
  8892  00D0  0834               	movf	___flmul@temp+1,w
  8893  00D1  00F9               	movwf	??___flmul
  8894  00D2  01FA               	clrf	??___flmul+1
  8895  00D3  01FB               	clrf	??___flmul+2
  8896  00D4  01FC               	clrf	??___flmul+3
  8897  00D5  0879               	movf	??___flmul,w
  8898  00D6  07AF               	addwf	___flmul@prod,f
  8899  00D7  087A               	movf	??___flmul+1,w
  8900  00D8  3DB0               	addwfc	___flmul@prod+1,f
  8901  00D9  087B               	movf	??___flmul+2,w
  8902  00DA  3DB1               	addwfc	___flmul@prod+2,f
  8903  00DB  087C               	movf	??___flmul+3,w
  8904  00DC  3DB2               	addwfc	___flmul@prod+3,f
  8905  00DD  0822               	movf	___flmul@b+2,w
  8906  00DE  00F9               	movwf	??___flmul
  8907  00DF  0879               	movf	??___flmul,w
  8908  00E0  00F0               	movwf	__Umul8_16@multiplicand
  8909  00E1  0824               	movf	___flmul@a,w
  8910  00E2  318A  2270  3180   	fcall	__Umul8_16
  8911  00E5  0871               	movf	?__Umul8_16+1,w
  8912  00E6  0020               	movlb	0	; select bank0
  8913  00E7  00B4               	movwf	___flmul@temp+1
  8914  00E8  0870               	movf	?__Umul8_16,w
  8915  00E9  00B3               	movwf	___flmul@temp
  8916  00EA  0833               	movf	___flmul@temp,w
  8917  00EB  00F9               	movwf	??___flmul
  8918  00EC  01FA               	clrf	??___flmul+1
  8919  00ED  01FB               	clrf	??___flmul+2
  8920  00EE  01FC               	clrf	??___flmul+3
  8921  00EF  0879               	movf	??___flmul,w
  8922  00F0  07A9               	addwf	___flmul@grs,f
  8923  00F1  087A               	movf	??___flmul+1,w
  8924  00F2  3DAA               	addwfc	___flmul@grs+1,f
  8925  00F3  087B               	movf	??___flmul+2,w
  8926  00F4  3DAB               	addwfc	___flmul@grs+2,f
  8927  00F5  087C               	movf	??___flmul+3,w
  8928  00F6  3DAC               	addwfc	___flmul@grs+3,f
  8929  00F7  0834               	movf	___flmul@temp+1,w
  8930  00F8  00F9               	movwf	??___flmul
  8931  00F9  01FA               	clrf	??___flmul+1
  8932  00FA  01FB               	clrf	??___flmul+2
  8933  00FB  01FC               	clrf	??___flmul+3
  8934  00FC  0879               	movf	??___flmul,w
  8935  00FD  07AF               	addwf	___flmul@prod,f
  8936  00FE  087A               	movf	??___flmul+1,w
  8937  00FF  3DB0               	addwfc	___flmul@prod+1,f
  8938  0100  087B               	movf	??___flmul+2,w
  8939  0101  3DB1               	addwfc	___flmul@prod+2,f
  8940  0102  087C               	movf	??___flmul+3,w
  8941  0103  3DB2               	addwfc	___flmul@prod+3,f
  8942  0104  3008               	movlw	8
  8943  0105                     u306_25:	
  8944  0105  35A9               	lslf	___flmul@grs,f
  8945  0106  0DAA               	rlf	___flmul@grs+1,f
  8946  0107  0DAB               	rlf	___flmul@grs+2,f
  8947  0108  0DAC               	rlf	___flmul@grs+3,f
  8948  0109  0B89               	decfsz	9,f
  8949  010A  2905               	goto	u306_25
  8950  010B  0821               	movf	___flmul@b+1,w
  8951  010C  00F9               	movwf	??___flmul
  8952  010D  0879               	movf	??___flmul,w
  8953  010E  00F0               	movwf	__Umul8_16@multiplicand
  8954  010F  0824               	movf	___flmul@a,w
  8955  0110  318A  2270  3180   	fcall	__Umul8_16
  8956  0113  0871               	movf	?__Umul8_16+1,w
  8957  0114  0020               	movlb	0	; select bank0
  8958  0115  00B4               	movwf	___flmul@temp+1
  8959  0116  0870               	movf	?__Umul8_16,w
  8960  0117  00B3               	movwf	___flmul@temp
  8961  0118  0833               	movf	___flmul@temp,w
  8962  0119  07A9               	addwf	___flmul@grs,f
  8963  011A  0834               	movf	___flmul@temp+1,w
  8964  011B  3DAA               	addwfc	___flmul@grs+1,f
  8965  011C  3000               	movlw	0
  8966  011D  3DAB               	addwfc	___flmul@grs+2,f
  8967  011E  3DAC               	addwfc	___flmul@grs+3,f
  8968  011F  0820               	movf	___flmul@b,w
  8969  0120  00F9               	movwf	??___flmul
  8970  0121  0879               	movf	??___flmul,w
  8971  0122  00F0               	movwf	__Umul8_16@multiplicand
  8972  0123  0825               	movf	___flmul@a+1,w
  8973  0124  318A  2270  3180   	fcall	__Umul8_16
  8974  0127  0871               	movf	?__Umul8_16+1,w
  8975  0128  0020               	movlb	0	; select bank0
  8976  0129  00B4               	movwf	___flmul@temp+1
  8977  012A  0870               	movf	?__Umul8_16,w
  8978  012B  00B3               	movwf	___flmul@temp
  8979  012C  0833               	movf	___flmul@temp,w
  8980  012D  07A9               	addwf	___flmul@grs,f
  8981  012E  0834               	movf	___flmul@temp+1,w
  8982  012F  3DAA               	addwfc	___flmul@grs+1,f
  8983  0130  3000               	movlw	0
  8984  0131  3DAB               	addwfc	___flmul@grs+2,f
  8985  0132  3DAC               	addwfc	___flmul@grs+3,f
  8986  0133  3008               	movlw	8
  8987  0134                     u307_25:	
  8988  0134  35A9               	lslf	___flmul@grs,f
  8989  0135  0DAA               	rlf	___flmul@grs+1,f
  8990  0136  0DAB               	rlf	___flmul@grs+2,f
  8991  0137  0DAC               	rlf	___flmul@grs+3,f
  8992  0138  0B89               	decfsz	9,f
  8993  0139  2934               	goto	u307_25
  8994  013A  0820               	movf	___flmul@b,w
  8995  013B  00F9               	movwf	??___flmul
  8996  013C  0879               	movf	??___flmul,w
  8997  013D  00F0               	movwf	__Umul8_16@multiplicand
  8998  013E  0824               	movf	___flmul@a,w
  8999  013F  318A  2270  3180   	fcall	__Umul8_16
  9000  0142  0871               	movf	?__Umul8_16+1,w
  9001  0143  0020               	movlb	0	; select bank0
  9002  0144  00B4               	movwf	___flmul@temp+1
  9003  0145  0870               	movf	?__Umul8_16,w
  9004  0146  00B3               	movwf	___flmul@temp
  9005  0147  0833               	movf	___flmul@temp,w
  9006  0148  07A9               	addwf	___flmul@grs,f
  9007  0149  0834               	movf	___flmul@temp+1,w
  9008  014A  3DAA               	addwfc	___flmul@grs+1,f
  9009  014B  3000               	movlw	0
  9010  014C  3DAB               	addwfc	___flmul@grs+2,f
  9011  014D  3DAC               	addwfc	___flmul@grs+3,f
  9012  014E  0821               	movf	___flmul@b+1,w
  9013  014F  00F9               	movwf	??___flmul
  9014  0150  0879               	movf	??___flmul,w
  9015  0151  00F0               	movwf	__Umul8_16@multiplicand
  9016  0152  0826               	movf	___flmul@a+2,w
  9017  0153  318A  2270  3180   	fcall	__Umul8_16
  9018  0156  0871               	movf	?__Umul8_16+1,w
  9019  0157  0020               	movlb	0	; select bank0
  9020  0158  00B4               	movwf	___flmul@temp+1
  9021  0159  0870               	movf	?__Umul8_16,w
  9022  015A  00B3               	movwf	___flmul@temp
  9023  015B  0833               	movf	___flmul@temp,w
  9024  015C  07AF               	addwf	___flmul@prod,f
  9025  015D  0834               	movf	___flmul@temp+1,w
  9026  015E  3DB0               	addwfc	___flmul@prod+1,f
  9027  015F  3000               	movlw	0
  9028  0160  3DB1               	addwfc	___flmul@prod+2,f
  9029  0161  3DB2               	addwfc	___flmul@prod+3,f
  9030  0162  0822               	movf	___flmul@b+2,w
  9031  0163  00F9               	movwf	??___flmul
  9032  0164  0879               	movf	??___flmul,w
  9033  0165  00F0               	movwf	__Umul8_16@multiplicand
  9034  0166  0825               	movf	___flmul@a+1,w
  9035  0167  318A  2270  3180   	fcall	__Umul8_16
  9036  016A  0871               	movf	?__Umul8_16+1,w
  9037  016B  0020               	movlb	0	; select bank0
  9038  016C  00B4               	movwf	___flmul@temp+1
  9039  016D  0870               	movf	?__Umul8_16,w
  9040  016E  00B3               	movwf	___flmul@temp
  9041  016F  0833               	movf	___flmul@temp,w
  9042  0170  07AF               	addwf	___flmul@prod,f
  9043  0171  0834               	movf	___flmul@temp+1,w
  9044  0172  3DB0               	addwfc	___flmul@prod+1,f
  9045  0173  3000               	movlw	0
  9046  0174  3DB1               	addwfc	___flmul@prod+2,f
  9047  0175  3DB2               	addwfc	___flmul@prod+3,f
  9048  0176  0822               	movf	___flmul@b+2,w
  9049  0177  00F9               	movwf	??___flmul
  9050  0178  0879               	movf	??___flmul,w
  9051  0179  00F0               	movwf	__Umul8_16@multiplicand
  9052  017A  0826               	movf	___flmul@a+2,w
  9053  017B  318A  2270  3180   	fcall	__Umul8_16
  9054  017E  0871               	movf	?__Umul8_16+1,w
  9055  017F  0020               	movlb	0	; select bank0
  9056  0180  00B4               	movwf	___flmul@temp+1
  9057  0181  0870               	movf	?__Umul8_16,w
  9058  0182  00B3               	movwf	___flmul@temp
  9059  0183  0833               	movf	___flmul@temp,w
  9060  0184  00F9               	movwf	??___flmul
  9061  0185  0834               	movf	___flmul@temp+1,w
  9062  0186  00FA               	movwf	??___flmul+1
  9063  0187  01FB               	clrf	??___flmul+2
  9064  0188  01FC               	clrf	??___flmul+3
  9065  0189  3008               	movlw	8
  9066  018A                     u308_25:	
  9067  018A  35F9               	lslf	??___flmul,f
  9068  018B  0DFA               	rlf	??___flmul+1,f
  9069  018C  0DFB               	rlf	??___flmul+2,f
  9070  018D  0DFC               	rlf	??___flmul+3,f
  9071  018E  0B89               	decfsz	9,f
  9072  018F  298A               	goto	u308_25
  9073  0190  0879               	movf	??___flmul,w
  9074  0191  07AF               	addwf	___flmul@prod,f
  9075  0192  087A               	movf	??___flmul+1,w
  9076  0193  3DB0               	addwfc	___flmul@prod+1,f
  9077  0194  087B               	movf	??___flmul+2,w
  9078  0195  3DB1               	addwfc	___flmul@prod+2,f
  9079  0196  087C               	movf	??___flmul+3,w
  9080  0197  3DB2               	addwfc	___flmul@prod+3,f
  9081  0198  0829               	movf	___flmul@grs,w
  9082  0199  00F9               	movwf	??___flmul
  9083  019A  082A               	movf	___flmul@grs+1,w
  9084  019B  00FA               	movwf	??___flmul+1
  9085  019C  082B               	movf	___flmul@grs+2,w
  9086  019D  00FB               	movwf	??___flmul+2
  9087  019E  082C               	movf	___flmul@grs+3,w
  9088  019F  00FC               	movwf	??___flmul+3
  9089  01A0  3018               	movlw	24
  9090  01A1                     u309_25:	
  9091  01A1  36FC               	lsrf	??___flmul+3,f
  9092  01A2  0CFB               	rrf	??___flmul+2,f
  9093  01A3  0CFA               	rrf	??___flmul+1,f
  9094  01A4  0CF9               	rrf	??___flmul,f
  9095  01A5  0B89               	decfsz	9,f
  9096  01A6  29A1               	goto	u309_25
  9097  01A7  0879               	movf	??___flmul,w
  9098  01A8  07AF               	addwf	___flmul@prod,f
  9099  01A9  087A               	movf	??___flmul+1,w
  9100  01AA  3DB0               	addwfc	___flmul@prod+1,f
  9101  01AB  087B               	movf	??___flmul+2,w
  9102  01AC  3DB1               	addwfc	___flmul@prod+2,f
  9103  01AD  087C               	movf	??___flmul+3,w
  9104  01AE  3DB2               	addwfc	___flmul@prod+3,f
  9105  01AF  3008               	movlw	8
  9106  01B0                     u310_25:	
  9107  01B0  35A9               	lslf	___flmul@grs,f
  9108  01B1  0DAA               	rlf	___flmul@grs+1,f
  9109  01B2  0DAB               	rlf	___flmul@grs+2,f
  9110  01B3  0DAC               	rlf	___flmul@grs+3,f
  9111  01B4  0B89               	decfsz	9,f
  9112  01B5  29B0               	goto	u310_25
  9113  01B6  082E               	movf	___flmul@bexp,w
  9114  01B7  072D               	addwf	___flmul@aexp,w
  9115  01B8  00F9               	movwf	??___flmul
  9116  01B9  01FA               	clrf	??___flmul+1
  9117  01BA  0DFA               	rlf	??___flmul+1,f
  9118  01BB  0879               	movf	??___flmul,w
  9119  01BC  3E82               	addlw	130
  9120  01BD  00B3               	movwf	___flmul@temp
  9121  01BE  30FF               	movlw	255
  9122  01BF  3D7A               	addwfc	??___flmul+1,w
  9123  01C0  00B4               	movwf	___flmul@temp+1
  9124  01C1                     i1l2653:	
  9125  01C1  1BB1               	btfsc	___flmul@prod+2,7
  9126  01C2  29D8               	goto	i1l2655
  9127  01C3  3001               	movlw	1
  9128  01C4                     u311_25:	
  9129  01C4  35AF               	lslf	___flmul@prod,f
  9130  01C5  0DB0               	rlf	___flmul@prod+1,f
  9131  01C6  0DB1               	rlf	___flmul@prod+2,f
  9132  01C7  0DB2               	rlf	___flmul@prod+3,f
  9133  01C8  0B89               	decfsz	9,f
  9134  01C9  29C4               	goto	u311_25
  9135  01CA  1BAC               	btfsc	___flmul@grs+3,7
  9136  01CB  142F               	bsf	___flmul@prod,0
  9137  01CC  3001               	movlw	1
  9138  01CD                     u313_25:	
  9139  01CD  35A9               	lslf	___flmul@grs,f
  9140  01CE  0DAA               	rlf	___flmul@grs+1,f
  9141  01CF  0DAB               	rlf	___flmul@grs+2,f
  9142  01D0  0DAC               	rlf	___flmul@grs+3,f
  9143  01D1  0B89               	decfsz	9,f
  9144  01D2  29CD               	goto	u313_25
  9145  01D3  30FF               	movlw	255
  9146  01D4  07B3               	addwf	___flmul@temp,f
  9147  01D5  30FF               	movlw	255
  9148  01D6  3DB4               	addwfc	___flmul@temp+1,f
  9149  01D7  29C1               	goto	i1l2653
  9150  01D8                     i1l2655:	
  9151  01D8  01AD               	clrf	___flmul@aexp
  9152  01D9  1FAC               	btfss	___flmul@grs+3,7
  9153  01DA  29F1               	goto	i1l2665
  9154  01DB  30FF               	movlw	255
  9155  01DC  0529               	andwf	___flmul@grs,w
  9156  01DD  00F9               	movwf	??___flmul
  9157  01DE  30FF               	movlw	255
  9158  01DF  052A               	andwf	___flmul@grs+1,w
  9159  01E0  00FA               	movwf	??___flmul+1
  9160  01E1  30FF               	movlw	255
  9161  01E2  052B               	andwf	___flmul@grs+2,w
  9162  01E3  00FB               	movwf	??___flmul+2
  9163  01E4  307F               	movlw	127
  9164  01E5  052C               	andwf	___flmul@grs+3,w
  9165  01E6  00FC               	movwf	??___flmul+3
  9166  01E7  087C               	movf	??___flmul+3,w
  9167  01E8  047B               	iorwf	??___flmul+2,w
  9168  01E9  047A               	iorwf	??___flmul+1,w
  9169  01EA  0479               	iorwf	??___flmul,w
  9170  01EB  1903               	skipnz
  9171  01EC  182F               	btfsc	___flmul@prod,0
  9172  01ED  29EF               	goto	i1l2661
  9173  01EE  29F1               	goto	i1l2665
  9174  01EF                     i1l2661:	
  9175  01EF  01AD               	clrf	___flmul@aexp
  9176  01F0  0AAD               	incf	___flmul@aexp,f
  9177  01F1                     i1l2665:	
  9178  01F1  082D               	movf	___flmul@aexp,w
  9179  01F2  1903               	btfsc	3,2
  9180  01F3  2A1A               	goto	i1l2675
  9181  01F4  3001               	movlw	1
  9182  01F5  07AF               	addwf	___flmul@prod,f
  9183  01F6  3000               	movlw	0
  9184  01F7  3DB0               	addwfc	___flmul@prod+1,f
  9185  01F8  3000               	movlw	0
  9186  01F9  3DB1               	addwfc	___flmul@prod+2,f
  9187  01FA  3000               	movlw	0
  9188  01FB  3DB2               	addwfc	___flmul@prod+3,f
  9189  01FC  1C32               	btfss	___flmul@prod+3,0
  9190  01FD  2A1A               	goto	i1l2675
  9191  01FE  082F               	movf	___flmul@prod,w
  9192  01FF  00F9               	movwf	??___flmul
  9193  0200  0830               	movf	___flmul@prod+1,w
  9194  0201  00FA               	movwf	??___flmul+1
  9195  0202  0831               	movf	___flmul@prod+2,w
  9196  0203  00FB               	movwf	??___flmul+2
  9197  0204  0832               	movf	___flmul@prod+3,w
  9198  0205  00FC               	movwf	??___flmul+3
  9199  0206  3001               	movlw	1
  9200  0207  00FD               	movwf	??___flmul+4
  9201  0208                     u320_25:	
  9202  0208  37FC               	asrf	??___flmul+3,f
  9203  0209  0CFB               	rrf	??___flmul+2,f
  9204  020A  0CFA               	rrf	??___flmul+1,f
  9205  020B  0CF9               	rrf	??___flmul,f
  9206  020C  0BFD               	decfsz	??___flmul+4,f
  9207  020D  2A08               	goto	u320_25
  9208  020E  087C               	movf	??___flmul+3,w
  9209  020F  00B2               	movwf	___flmul@prod+3
  9210  0210  087B               	movf	??___flmul+2,w
  9211  0211  00B1               	movwf	___flmul@prod+2
  9212  0212  087A               	movf	??___flmul+1,w
  9213  0213  00B0               	movwf	___flmul@prod+1
  9214  0214  0879               	movf	??___flmul,w
  9215  0215  00AF               	movwf	___flmul@prod
  9216  0216  3001               	movlw	1
  9217  0217  07B3               	addwf	___flmul@temp,f
  9218  0218  3000               	movlw	0
  9219  0219  3DB4               	addwfc	___flmul@temp+1,f
  9220  021A                     i1l2675:	
  9221  021A  0834               	movf	___flmul@temp+1,w
  9222  021B  3A80               	xorlw	128
  9223  021C  00F9               	movwf	??___flmul
  9224  021D  3080               	movlw	128
  9225  021E  0279               	subwf	??___flmul,w
  9226  021F  1D03               	skipz
  9227  0220  2A23               	goto	u321_25
  9228  0221  30FF               	movlw	255
  9229  0222  0233               	subwf	___flmul@temp,w
  9230  0223                     u321_25:	
  9231  0223  1C03               	skipc
  9232  0224  2A2F               	goto	i1l2679
  9233  0225  307F               	movlw	127
  9234  0226  0020               	movlb	0	; select bank0
  9235  0227  00B2               	movwf	___flmul@prod+3
  9236  0228  3080               	movlw	128
  9237  0229  00B1               	movwf	___flmul@prod+2
  9238  022A  3000               	movlw	0
  9239  022B  00B0               	movwf	___flmul@prod+1
  9240  022C  3000               	movlw	0
  9241  022D  00AF               	movwf	___flmul@prod
  9242  022E  2A59               	goto	i1l915
  9243  022F                     i1l2679:	
  9244  022F  0020               	movlb	0	; select bank0
  9245  0230  0834               	movf	___flmul@temp+1,w
  9246  0231  3A80               	xorlw	128
  9247  0232  00F9               	movwf	??___flmul
  9248  0233  3080               	movlw	128
  9249  0234  0279               	subwf	??___flmul,w
  9250  0235  1D03               	skipz
  9251  0236  2A39               	goto	u322_25
  9252  0237  3001               	movlw	1
  9253  0238  0233               	subwf	___flmul@temp,w
  9254  0239                     u322_25:	
  9255  0239  1803               	skipnc
  9256  023A  2A46               	goto	i1l2685
  9257  023B  3000               	movlw	0
  9258  023C  0020               	movlb	0	; select bank0
  9259  023D  00B2               	movwf	___flmul@prod+3
  9260  023E  3000               	movlw	0
  9261  023F  00B1               	movwf	___flmul@prod+2
  9262  0240  3000               	movlw	0
  9263  0241  00B0               	movwf	___flmul@prod+1
  9264  0242  3000               	movlw	0
  9265  0243  00AF               	movwf	___flmul@prod
  9266  0244  01A8               	clrf	___flmul@sign
  9267  0245  2A59               	goto	i1l915
  9268  0246                     i1l2685:	
  9269  0246  0020               	movlb	0	; select bank0
  9270  0247  0833               	movf	___flmul@temp,w
  9271  0248  00F9               	movwf	??___flmul
  9272  0249  0879               	movf	??___flmul,w
  9273  024A  00AE               	movwf	___flmul@bexp
  9274  024B  30FF               	movlw	255
  9275  024C  05AF               	andwf	___flmul@prod,f
  9276  024D  30FF               	movlw	255
  9277  024E  05B0               	andwf	___flmul@prod+1,f
  9278  024F  307F               	movlw	127
  9279  0250  05B1               	andwf	___flmul@prod+2,f
  9280  0251  3000               	movlw	0
  9281  0252  05B2               	andwf	___flmul@prod+3,f
  9282  0253  182E               	btfsc	___flmul@bexp,0
  9283  0254  17B1               	bsf	___flmul@prod+2,7
  9284  0255  362E               	lsrf	___flmul@bexp,w
  9285  0256  00F9               	movwf	??___flmul
  9286  0257  0879               	movf	??___flmul,w
  9287  0258  00B2               	movwf	___flmul@prod+3
  9288  0259                     i1l915:	
  9289  0259  0828               	movf	___flmul@sign,w
  9290  025A  00F9               	movwf	??___flmul
  9291  025B  0879               	movf	??___flmul,w
  9292  025C  04B2               	iorwf	___flmul@prod+3,f
  9293  025D  0832               	movf	___flmul@prod+3,w
  9294  025E  00A3               	movwf	?___flmul+3
  9295  025F  0831               	movf	___flmul@prod+2,w
  9296  0260  00A2               	movwf	?___flmul+2
  9297  0261  0830               	movf	___flmul@prod+1,w
  9298  0262  00A1               	movwf	?___flmul+1
  9299  0263  082F               	movf	___flmul@prod,w
  9300  0264  00A0               	movwf	?___flmul
  9301  0265  0008               	return
  9302  0266                     __end_of___flmul:	
  9303                           
  9304                           	psect	text41
  9305  0A70                     __ptext41:	
  9306 ;; *************** function __Umul8_16 *****************
  9307 ;; Defined at:
  9308 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul8_16.c"
  9309 ;; Parameters:    Size  Location     Type
  9310 ;;  multiplier      1    wreg     unsigned char 
  9311 ;;  multiplicand    1    0[COMMON] unsigned char 
  9312 ;; Auto vars:     Size  Location     Type
  9313 ;;  multiplier      1    8[COMMON] unsigned char 
  9314 ;;  word_mpld       2    6[COMMON] unsigned int 
  9315 ;;  product         2    4[COMMON] unsigned int 
  9316 ;; Return value:  Size  Location     Type
  9317 ;;                  2    0[COMMON] unsigned int 
  9318 ;; Registers used:
  9319 ;;		wreg, status,2, status,0
  9320 ;; Tracked objects:
  9321 ;;		On entry : 0/0
  9322 ;;		On exit  : 0/0
  9323 ;;		Unchanged: 0/0
  9324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9325 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9326 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9327 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9328 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9329 ;;Total ram usage:        9 bytes
  9330 ;; Hardware stack levels used:    1
  9331 ;; This function calls:
  9332 ;;		Nothing
  9333 ;; This function is called by:
  9334 ;;		___flmul
  9335 ;; This function uses a non-reentrant model
  9336 ;;
  9337                           
  9338                           
  9339                           ;psect for function __Umul8_16
  9340  0A70                     __Umul8_16:	
  9341                           
  9342                           ;incstack = 0
  9343                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  9344                           ;__Umul8_16@multiplier stored from wreg
  9345  0A70  00F8               	movwf	__Umul8_16@multiplier
  9346  0A71  01F4               	clrf	__Umul8_16@product
  9347  0A72  01F5               	clrf	__Umul8_16@product+1
  9348  0A73  0870               	movf	__Umul8_16@multiplicand,w
  9349  0A74  00F2               	movwf	??__Umul8_16
  9350  0A75  01F3               	clrf	??__Umul8_16+1
  9351  0A76  0872               	movf	??__Umul8_16,w
  9352  0A77  00F6               	movwf	__Umul8_16@word_mpld
  9353  0A78  0873               	movf	??__Umul8_16+1,w
  9354  0A79  00F7               	movwf	__Umul8_16@word_mpld+1
  9355  0A7A                     i1l2241:	
  9356  0A7A  1C78               	btfss	__Umul8_16@multiplier,0
  9357  0A7B  2A80               	goto	i1l1009
  9358  0A7C  0876               	movf	__Umul8_16@word_mpld,w
  9359  0A7D  07F4               	addwf	__Umul8_16@product,f
  9360  0A7E  0877               	movf	__Umul8_16@word_mpld+1,w
  9361  0A7F  3DF5               	addwfc	__Umul8_16@product+1,f
  9362  0A80                     i1l1009:	
  9363  0A80  3001               	movlw	1
  9364  0A81                     u223_25:	
  9365  0A81  35F6               	lslf	__Umul8_16@word_mpld,f
  9366  0A82  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  9367  0A83  0B89               	decfsz	9,f
  9368  0A84  2A81               	goto	u223_25
  9369  0A85  1003               	clrc
  9370  0A86  0CF8               	rrf	__Umul8_16@multiplier,f
  9371  0A87  0878               	movf	__Umul8_16@multiplier,w
  9372  0A88  1D03               	btfss	3,2
  9373  0A89  2A7A               	goto	i1l2241
  9374  0A8A  0875               	movf	__Umul8_16@product+1,w
  9375  0A8B  00F1               	movwf	?__Umul8_16+1
  9376  0A8C  0874               	movf	__Umul8_16@product,w
  9377  0A8D  00F0               	movwf	?__Umul8_16
  9378  0A8E  0008               	return
  9379  0A8F                     __end_of__Umul8_16:	
  9380                           
  9381                           	psect	text42
  9382  0266                     __ptext42:	
  9383 ;; *************** function ___fladd *****************
  9384 ;; Defined at:
  9385 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  9386 ;; Parameters:    Size  Location     Type
  9387 ;;  b               4    0[COMMON] unsigned int 
  9388 ;;  a               4    4[COMMON] unsigned int 
  9389 ;; Auto vars:     Size  Location     Type
  9390 ;;  grs             1   11[COMMON] unsigned char 
  9391 ;;  bexp            1   10[COMMON] unsigned char 
  9392 ;;  aexp            1    9[COMMON] unsigned char 
  9393 ;;  signs           1    8[COMMON] unsigned char 
  9394 ;; Return value:  Size  Location     Type
  9395 ;;                  4    0[COMMON] unsigned char 
  9396 ;; Registers used:
  9397 ;;		wreg, status,2, status,0
  9398 ;; Tracked objects:
  9399 ;;		On entry : 0/0
  9400 ;;		On exit  : 0/0
  9401 ;;		Unchanged: 0/0
  9402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9403 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9404 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9405 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9406 ;;      Totals:        12       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9407 ;;Total ram usage:       20 bytes
  9408 ;; Hardware stack levels used:    1
  9409 ;; This function calls:
  9410 ;;		Nothing
  9411 ;; This function is called by:
  9412 ;;		_speedCalc
  9413 ;; This function uses a non-reentrant model
  9414 ;;
  9415                           
  9416                           
  9417                           ;psect for function ___fladd
  9418  0266                     ___fladd:	
  9419                           
  9420                           ;incstack = 0
  9421                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  9422  0266  0873               	movf	___fladd@b+3,w
  9423  0267  3980               	andlw	128
  9424  0268  0020               	movlb	0	; select bank0
  9425  0269  00A0               	movwf	??___fladd
  9426  026A  0820               	movf	??___fladd,w
  9427  026B  00F8               	movwf	___fladd@signs
  9428  026C  3573               	lslf	___fladd@b+3,w
  9429  026D  00A0               	movwf	??___fladd
  9430  026E  0820               	movf	??___fladd,w
  9431  026F  00FA               	movwf	___fladd@bexp
  9432  0270  1BF2               	btfsc	___fladd@b+2,7
  9433  0271  147A               	bsf	___fladd@bexp,0
  9434  0272  087A               	movf	___fladd@bexp,w
  9435  0273  1903               	btfsc	3,2
  9436  0274  2A83               	goto	i1l2381
  9437  0275  0A7A               	incf	___fladd@bexp,w
  9438  0276  1D03               	btfss	3,2
  9439  0277  2A80               	goto	i1l2377
  9440  0278  3000               	movlw	0
  9441  0279  00F3               	movwf	___fladd@b+3
  9442  027A  3000               	movlw	0
  9443  027B  00F2               	movwf	___fladd@b+2
  9444  027C  3000               	movlw	0
  9445  027D  00F1               	movwf	___fladd@b+1
  9446  027E  3000               	movlw	0
  9447  027F  00F0               	movwf	___fladd@b
  9448  0280                     i1l2377:	
  9449  0280  17F2               	bsf	___fladd@b+2,7
  9450  0281  01F3               	clrf	___fladd@b+3
  9451  0282  2A8B               	goto	i1l2383
  9452  0283                     i1l2381:	
  9453  0283  3000               	movlw	0
  9454  0284  00F3               	movwf	___fladd@b+3
  9455  0285  3000               	movlw	0
  9456  0286  00F2               	movwf	___fladd@b+2
  9457  0287  3000               	movlw	0
  9458  0288  00F1               	movwf	___fladd@b+1
  9459  0289  3000               	movlw	0
  9460  028A  00F0               	movwf	___fladd@b
  9461  028B                     i1l2383:	
  9462  028B  0877               	movf	___fladd@a+3,w
  9463  028C  3980               	andlw	128
  9464  028D  00A0               	movwf	??___fladd
  9465  028E  0820               	movf	??___fladd,w
  9466  028F  00F9               	movwf	___fladd@aexp
  9467  0290  0879               	movf	___fladd@aexp,w
  9468  0291  0678               	xorwf	___fladd@signs,w
  9469  0292  1D03               	btfss	3,2
  9470  0293  1778               	bsf	___fladd@signs,6
  9471  0294  3577               	lslf	___fladd@a+3,w
  9472  0295  00A0               	movwf	??___fladd
  9473  0296  0820               	movf	??___fladd,w
  9474  0297  00F9               	movwf	___fladd@aexp
  9475  0298  1BF6               	btfsc	___fladd@a+2,7
  9476  0299  1479               	bsf	___fladd@aexp,0
  9477  029A  0879               	movf	___fladd@aexp,w
  9478  029B  1903               	btfsc	3,2
  9479  029C  2AAB               	goto	i1l2405
  9480  029D  0A79               	incf	___fladd@aexp,w
  9481  029E  1D03               	btfss	3,2
  9482  029F  2AA8               	goto	i1l2401
  9483  02A0  3000               	movlw	0
  9484  02A1  00F7               	movwf	___fladd@a+3
  9485  02A2  3000               	movlw	0
  9486  02A3  00F6               	movwf	___fladd@a+2
  9487  02A4  3000               	movlw	0
  9488  02A5  00F5               	movwf	___fladd@a+1
  9489  02A6  3000               	movlw	0
  9490  02A7  00F4               	movwf	___fladd@a
  9491  02A8                     i1l2401:	
  9492  02A8  17F6               	bsf	___fladd@a+2,7
  9493  02A9  01F7               	clrf	___fladd@a+3
  9494  02AA  2AB3               	goto	i1l807
  9495  02AB                     i1l2405:	
  9496  02AB  3000               	movlw	0
  9497  02AC  00F7               	movwf	___fladd@a+3
  9498  02AD  3000               	movlw	0
  9499  02AE  00F6               	movwf	___fladd@a+2
  9500  02AF  3000               	movlw	0
  9501  02B0  00F5               	movwf	___fladd@a+1
  9502  02B1  3000               	movlw	0
  9503  02B2  00F4               	movwf	___fladd@a
  9504  02B3                     i1l807:	
  9505  02B3  087A               	movf	___fladd@bexp,w
  9506  02B4  0279               	subwf	___fladd@aexp,w
  9507  02B5  1803               	skipnc
  9508  02B6  2AF9               	goto	i1l2441
  9509  02B7  1F78               	btfss	___fladd@signs,6
  9510  02B8  2ABD               	goto	i1l2411
  9511  02B9  3080               	movlw	128
  9512  02BA  00A0               	movwf	??___fladd
  9513  02BB  0820               	movf	??___fladd,w
  9514  02BC  06F8               	xorwf	___fladd@signs,f
  9515  02BD                     i1l2411:	
  9516  02BD  087A               	movf	___fladd@bexp,w
  9517  02BE  00A0               	movwf	??___fladd
  9518  02BF  0820               	movf	??___fladd,w
  9519  02C0  00FB               	movwf	___fladd@grs
  9520  02C1  0879               	movf	___fladd@aexp,w
  9521  02C2  00A0               	movwf	??___fladd
  9522  02C3  0820               	movf	??___fladd,w
  9523  02C4  00FA               	movwf	___fladd@bexp
  9524  02C5  087B               	movf	___fladd@grs,w
  9525  02C6  00A0               	movwf	??___fladd
  9526  02C7  0820               	movf	??___fladd,w
  9527  02C8  00F9               	movwf	___fladd@aexp
  9528  02C9  0870               	movf	___fladd@b,w
  9529  02CA  00A0               	movwf	??___fladd
  9530  02CB  0820               	movf	??___fladd,w
  9531  02CC  00FB               	movwf	___fladd@grs
  9532  02CD  0874               	movf	___fladd@a,w
  9533  02CE  00A0               	movwf	??___fladd
  9534  02CF  0820               	movf	??___fladd,w
  9535  02D0  00F0               	movwf	___fladd@b
  9536  02D1  087B               	movf	___fladd@grs,w
  9537  02D2  00A0               	movwf	??___fladd
  9538  02D3  0820               	movf	??___fladd,w
  9539  02D4  00F4               	movwf	___fladd@a
  9540  02D5  0871               	movf	___fladd@b+1,w
  9541  02D6  00A0               	movwf	??___fladd
  9542  02D7  0820               	movf	??___fladd,w
  9543  02D8  00FB               	movwf	___fladd@grs
  9544  02D9  0875               	movf	___fladd@a+1,w
  9545  02DA  00A0               	movwf	??___fladd
  9546  02DB  0820               	movf	??___fladd,w
  9547  02DC  00F1               	movwf	___fladd@b+1
  9548  02DD  087B               	movf	___fladd@grs,w
  9549  02DE  00A0               	movwf	??___fladd
  9550  02DF  0820               	movf	??___fladd,w
  9551  02E0  00F5               	movwf	___fladd@a+1
  9552  02E1  0872               	movf	___fladd@b+2,w
  9553  02E2  00A0               	movwf	??___fladd
  9554  02E3  0820               	movf	??___fladd,w
  9555  02E4  00FB               	movwf	___fladd@grs
  9556  02E5  0876               	movf	___fladd@a+2,w
  9557  02E6  00A0               	movwf	??___fladd
  9558  02E7  0820               	movf	??___fladd,w
  9559  02E8  00F2               	movwf	___fladd@b+2
  9560  02E9  087B               	movf	___fladd@grs,w
  9561  02EA  00A0               	movwf	??___fladd
  9562  02EB  0820               	movf	??___fladd,w
  9563  02EC  00F6               	movwf	___fladd@a+2
  9564  02ED  0873               	movf	___fladd@b+3,w
  9565  02EE  00A0               	movwf	??___fladd
  9566  02EF  0820               	movf	??___fladd,w
  9567  02F0  00FB               	movwf	___fladd@grs
  9568  02F1  0877               	movf	___fladd@a+3,w
  9569  02F2  00A0               	movwf	??___fladd
  9570  02F3  0820               	movf	??___fladd,w
  9571  02F4  00F3               	movwf	___fladd@b+3
  9572  02F5  087B               	movf	___fladd@grs,w
  9573  02F6  00A0               	movwf	??___fladd
  9574  02F7  0820               	movf	??___fladd,w
  9575  02F8  00F7               	movwf	___fladd@a+3
  9576  02F9                     i1l2441:	
  9577  02F9  01FB               	clrf	___fladd@grs
  9578  02FA  0879               	movf	___fladd@aexp,w
  9579  02FB  00A0               	movwf	??___fladd
  9580  02FC  01A1               	clrf	??___fladd+1
  9581  02FD  0821               	movf	??___fladd+1,w
  9582  02FE  00A3               	movwf	??___fladd+3
  9583  02FF  087A               	movf	___fladd@bexp,w
  9584  0300  0220               	subwf	??___fladd,w
  9585  0301  00A2               	movwf	??___fladd+2
  9586  0302  1C03               	skipc
  9587  0303  03A3               	decf	??___fladd+3,f
  9588  0304  0823               	movf	??___fladd+3,w
  9589  0305  3A80               	xorlw	128
  9590  0306  00A4               	movwf	??___fladd+4
  9591  0307  3080               	movlw	128
  9592  0308  0224               	subwf	??___fladd+4,w
  9593  0309  1D03               	skipz
  9594  030A  2B0D               	goto	u264_25
  9595  030B  301A               	movlw	26
  9596  030C  0222               	subwf	??___fladd+2,w
  9597  030D                     u264_25:	
  9598  030D  1C03               	skipc
  9599  030E  2B43               	goto	i1l2459
  9600  030F  0873               	movf	___fladd@b+3,w
  9601  0310  0472               	iorwf	___fladd@b+2,w
  9602  0311  0471               	iorwf	___fladd@b+1,w
  9603  0312  0470               	iorwf	___fladd@b,w
  9604  0313  1903               	btfsc	3,2
  9605  0314  2B17               	goto	u265_20
  9606  0315  3001               	movlw	1
  9607  0316  2B18               	goto	u266_20
  9608  0317                     u265_20:	
  9609  0317  3000               	movlw	0
  9610  0318                     u266_20:	
  9611  0318  0020               	movlb	0	; select bank0
  9612  0319  00A0               	movwf	??___fladd
  9613  031A  0820               	movf	??___fladd,w
  9614  031B  00FB               	movwf	___fladd@grs
  9615  031C  3000               	movlw	0
  9616  031D  00F3               	movwf	___fladd@b+3
  9617  031E  3000               	movlw	0
  9618  031F  00F2               	movwf	___fladd@b+2
  9619  0320  3000               	movlw	0
  9620  0321  00F1               	movwf	___fladd@b+1
  9621  0322  3000               	movlw	0
  9622  0323  00F0               	movwf	___fladd@b
  9623  0324  0879               	movf	___fladd@aexp,w
  9624  0325  00A0               	movwf	??___fladd
  9625  0326  0820               	movf	??___fladd,w
  9626  0327  00FA               	movwf	___fladd@bexp
  9627  0328  2B47               	goto	i1l811
  9628  0329                     i1l813:	
  9629  0329  1C7B               	btfss	___fladd@grs,0
  9630  032A  2B32               	goto	i1l2449
  9631  032B  367B               	lsrf	___fladd@grs,w
  9632  032C  3801               	iorlw	1
  9633  032D  0020               	movlb	0	; select bank0
  9634  032E  00A0               	movwf	??___fladd
  9635  032F  0820               	movf	??___fladd,w
  9636  0330  00FB               	movwf	___fladd@grs
  9637  0331  2B34               	goto	i1l2451
  9638  0332                     i1l2449:	
  9639  0332  1003               	clrc
  9640  0333  0CFB               	rrf	___fladd@grs,f
  9641  0334                     i1l2451:	
  9642  0334  1870               	btfsc	___fladd@b,0
  9643  0335  17FB               	bsf	___fladd@grs,7
  9644  0336  3001               	movlw	1
  9645  0337  0020               	movlb	0	; select bank0
  9646  0338  00A0               	movwf	??___fladd
  9647  0339                     u269_25:	
  9648  0339  37F3               	asrf	___fladd@b+3,f
  9649  033A  0CF2               	rrf	___fladd@b+2,f
  9650  033B  0CF1               	rrf	___fladd@b+1,f
  9651  033C  0CF0               	rrf	___fladd@b,f
  9652  033D  0BA0               	decfsz	??___fladd& (0+127),f
  9653  033E  2B39               	goto	u269_25
  9654  033F  3001               	movlw	1
  9655  0340  00A0               	movwf	??___fladd
  9656  0341  0820               	movf	??___fladd,w
  9657  0342  07FA               	addwf	___fladd@bexp,f
  9658  0343                     i1l2459:	
  9659  0343  0879               	movf	___fladd@aexp,w
  9660  0344  027A               	subwf	___fladd@bexp,w
  9661  0345  1C03               	skipc
  9662  0346  2B29               	goto	i1l813
  9663  0347                     i1l811:	
  9664  0347  1B78               	btfsc	___fladd@signs,6
  9665  0348  2B7A               	goto	i1l2485
  9666  0349  087A               	movf	___fladd@bexp,w
  9667  034A  1D03               	btfss	3,2
  9668  034B  2B55               	goto	i1l2467
  9669  034C  3000               	movlw	0
  9670  034D  00F3               	movwf	?___fladd+3
  9671  034E  3000               	movlw	0
  9672  034F  00F2               	movwf	?___fladd+2
  9673  0350  3000               	movlw	0
  9674  0351  00F1               	movwf	?___fladd+1
  9675  0352  3000               	movlw	0
  9676  0353  00F0               	movwf	?___fladd
  9677  0354  0008               	return
  9678  0355                     i1l2467:	
  9679  0355  0874               	movf	___fladd@a,w
  9680  0356  07F0               	addwf	___fladd@b,f
  9681  0357  0875               	movf	___fladd@a+1,w
  9682  0358  3DF1               	addwfc	___fladd@b+1,f
  9683  0359  0876               	movf	___fladd@a+2,w
  9684  035A  3DF2               	addwfc	___fladd@b+2,f
  9685  035B  0877               	movf	___fladd@a+3,w
  9686  035C  3DF3               	addwfc	___fladd@b+3,f
  9687  035D  1C73               	btfss	___fladd@b+3,0
  9688  035E  2BF5               	goto	i1l2519
  9689  035F  1C7B               	btfss	___fladd@grs,0
  9690  0360  2B68               	goto	i1l2475
  9691  0361  367B               	lsrf	___fladd@grs,w
  9692  0362  3801               	iorlw	1
  9693  0363  0020               	movlb	0	; select bank0
  9694  0364  00A0               	movwf	??___fladd
  9695  0365  0820               	movf	??___fladd,w
  9696  0366  00FB               	movwf	___fladd@grs
  9697  0367  2B6A               	goto	i1l2477
  9698  0368                     i1l2475:	
  9699  0368  1003               	clrc
  9700  0369  0CFB               	rrf	___fladd@grs,f
  9701  036A                     i1l2477:	
  9702  036A  1870               	btfsc	___fladd@b,0
  9703  036B  17FB               	bsf	___fladd@grs,7
  9704  036C  3001               	movlw	1
  9705  036D  0020               	movlb	0	; select bank0
  9706  036E  00A0               	movwf	??___fladd
  9707  036F                     u276_25:	
  9708  036F  37F3               	asrf	___fladd@b+3,f
  9709  0370  0CF2               	rrf	___fladd@b+2,f
  9710  0371  0CF1               	rrf	___fladd@b+1,f
  9711  0372  0CF0               	rrf	___fladd@b,f
  9712  0373  0BA0               	decfsz	??___fladd& (0+127),f
  9713  0374  2B6F               	goto	u276_25
  9714  0375  3001               	movlw	1
  9715  0376  00A0               	movwf	??___fladd
  9716  0377  0820               	movf	??___fladd,w
  9717  0378  07FA               	addwf	___fladd@bexp,f
  9718  0379  2BF5               	goto	i1l2519
  9719  037A                     i1l2485:	
  9720  037A  0873               	movf	___fladd@b+3,w
  9721  037B  3A80               	xorlw	128
  9722  037C  0020               	movlb	0	; select bank0
  9723  037D  00A0               	movwf	??___fladd
  9724  037E  0877               	movf	___fladd@a+3,w
  9725  037F  3A80               	xorlw	128
  9726  0380  0220               	subwf	??___fladd,w
  9727  0381  1D03               	skipz
  9728  0382  2B8D               	goto	u277_23
  9729  0383  0876               	movf	___fladd@a+2,w
  9730  0384  0272               	subwf	___fladd@b+2,w
  9731  0385  1D03               	skipz
  9732  0386  2B8D               	goto	u277_23
  9733  0387  0875               	movf	___fladd@a+1,w
  9734  0388  0271               	subwf	___fladd@b+1,w
  9735  0389  1D03               	skipz
  9736  038A  2B8D               	goto	u277_23
  9737  038B  0874               	movf	___fladd@a,w
  9738  038C  0270               	subwf	___fladd@b,w
  9739  038D                     u277_23:	
  9740  038D  1803               	skipnc
  9741  038E  2BC5               	goto	i1l2495
  9742  038F  30FF               	movlw	255
  9743  0390  00A0               	movwf	??___fladd
  9744  0391  30FF               	movlw	255
  9745  0392  00A1               	movwf	??___fladd+1
  9746  0393  30FF               	movlw	255
  9747  0394  00A2               	movwf	??___fladd+2
  9748  0395  30FF               	movlw	255
  9749  0396  00A3               	movwf	??___fladd+3
  9750  0397  0870               	movf	___fladd@b,w
  9751  0398  0274               	subwf	___fladd@a,w
  9752  0399  00A4               	movwf	??___fladd+4
  9753  039A  0871               	movf	___fladd@b+1,w
  9754  039B  3B75               	subwfb	___fladd@a+1,w
  9755  039C  00A5               	movwf	??___fladd+5
  9756  039D  0872               	movf	___fladd@b+2,w
  9757  039E  3B76               	subwfb	___fladd@a+2,w
  9758  039F  00A6               	movwf	??___fladd+6
  9759  03A0  0873               	movf	___fladd@b+3,w
  9760  03A1  3B77               	subwfb	___fladd@a+3,w
  9761  03A2  00A7               	movwf	??___fladd+7
  9762  03A3  0824               	movf	??___fladd+4,w
  9763  03A4  07A0               	addwf	??___fladd,f
  9764  03A5  0825               	movf	??___fladd+5,w
  9765  03A6  3DA1               	addwfc	??___fladd+1,f
  9766  03A7  0826               	movf	??___fladd+6,w
  9767  03A8  3DA2               	addwfc	??___fladd+2,f
  9768  03A9  0827               	movf	??___fladd+7,w
  9769  03AA  3DA3               	addwfc	??___fladd+3,f
  9770  03AB  0823               	movf	??___fladd+3,w
  9771  03AC  00F3               	movwf	___fladd@b+3
  9772  03AD  0822               	movf	??___fladd+2,w
  9773  03AE  00F2               	movwf	___fladd@b+2
  9774  03AF  0821               	movf	??___fladd+1,w
  9775  03B0  00F1               	movwf	___fladd@b+1
  9776  03B1  0820               	movf	??___fladd,w
  9777  03B2  00F0               	movwf	___fladd@b
  9778  03B3  3080               	movlw	128
  9779  03B4  00A0               	movwf	??___fladd
  9780  03B5  0820               	movf	??___fladd,w
  9781  03B6  06F8               	xorwf	___fladd@signs,f
  9782  03B7  09FB               	comf	___fladd@grs,f
  9783  03B8  0AFB               	incf	___fladd@grs,f
  9784  03B9  087B               	movf	___fladd@grs,w
  9785  03BA  1D03               	btfss	3,2
  9786  03BB  2BCD               	goto	i1l828
  9787  03BC  3001               	movlw	1
  9788  03BD  07F0               	addwf	___fladd@b,f
  9789  03BE  3000               	movlw	0
  9790  03BF  3DF1               	addwfc	___fladd@b+1,f
  9791  03C0  3000               	movlw	0
  9792  03C1  3DF2               	addwfc	___fladd@b+2,f
  9793  03C2  3000               	movlw	0
  9794  03C3  3DF3               	addwfc	___fladd@b+3,f
  9795  03C4  2BCD               	goto	i1l828
  9796  03C5                     i1l2495:	
  9797  03C5  0874               	movf	___fladd@a,w
  9798  03C6  02F0               	subwf	___fladd@b,f
  9799  03C7  0875               	movf	___fladd@a+1,w
  9800  03C8  3BF1               	subwfb	___fladd@b+1,f
  9801  03C9  0876               	movf	___fladd@a+2,w
  9802  03CA  3BF2               	subwfb	___fladd@b+2,f
  9803  03CB  0877               	movf	___fladd@a+3,w
  9804  03CC  3BF3               	subwfb	___fladd@b+3,f
  9805  03CD                     i1l828:	
  9806  03CD  0873               	movf	___fladd@b+3,w
  9807  03CE  0472               	iorwf	___fladd@b+2,w
  9808  03CF  0471               	iorwf	___fladd@b+1,w
  9809  03D0  0470               	iorwf	___fladd@b,w
  9810  03D1  1D03               	skipz
  9811  03D2  2BF3               	goto	i1l2517
  9812  03D3  087B               	movf	___fladd@grs,w
  9813  03D4  1D03               	btfss	3,2
  9814  03D5  2BF3               	goto	i1l2517
  9815  03D6  3000               	movlw	0
  9816  03D7  00F3               	movwf	?___fladd+3
  9817  03D8  3000               	movlw	0
  9818  03D9  00F2               	movwf	?___fladd+2
  9819  03DA  3000               	movlw	0
  9820  03DB  00F1               	movwf	?___fladd+1
  9821  03DC  3000               	movlw	0
  9822  03DD  00F0               	movwf	?___fladd
  9823  03DE  0008               	return
  9824  03DF                     i1l2503:	
  9825  03DF  3001               	movlw	1
  9826  03E0                     u281_25:	
  9827  03E0  35F0               	lslf	___fladd@b,f
  9828  03E1  0DF1               	rlf	___fladd@b+1,f
  9829  03E2  0DF2               	rlf	___fladd@b+2,f
  9830  03E3  0DF3               	rlf	___fladd@b+3,f
  9831  03E4  0B89               	decfsz	9,f
  9832  03E5  2BE0               	goto	u281_25
  9833  03E6  1BFB               	btfsc	___fladd@grs,7
  9834  03E7  1470               	bsf	___fladd@b,0
  9835  03E8  1C7B               	btfss	___fladd@grs,0
  9836  03E9  2BEC               	goto	i1l2511
  9837  03EA  1403               	setc
  9838  03EB  2BED               	goto	L3
  9839  03EC                     i1l2511:	
  9840  03EC  1003               	clrc
  9841  03ED                     L3:	
  9842  03ED  0DFB               	rlf	___fladd@grs,f
  9843  03EE  087A               	movf	___fladd@bexp,w
  9844  03EF  1903               	btfsc	3,2
  9845  03F0  2BF3               	goto	i1l2517
  9846  03F1  3001               	movlw	1
  9847  03F2  02FA               	subwf	___fladd@bexp,f
  9848  03F3                     i1l2517:	
  9849  03F3  1FF2               	btfss	___fladd@b+2,7
  9850  03F4  2BDF               	goto	i1l2503
  9851  03F5                     i1l2519:	
  9852  03F5  01F9               	clrf	___fladd@aexp
  9853  03F6  1FFB               	btfss	___fladd@grs,7
  9854  03F7  2C00               	goto	i1l2529
  9855  03F8  087B               	movf	___fladd@grs,w
  9856  03F9  397F               	andlw	127
  9857  03FA  1903               	btfsc	3,2
  9858  03FB  1870               	btfsc	___fladd@b,0
  9859  03FC  2BFE               	goto	i1l2525
  9860  03FD  2C00               	goto	i1l2529
  9861  03FE                     i1l2525:	
  9862  03FE  01F9               	clrf	___fladd@aexp
  9863  03FF  0AF9               	incf	___fladd@aexp,f
  9864  0400                     i1l2529:	
  9865  0400  0879               	movf	___fladd@aexp,w
  9866  0401  1903               	btfsc	3,2
  9867  0402  2C2D               	goto	i1l841
  9868  0403  3001               	movlw	1
  9869  0404  07F0               	addwf	___fladd@b,f
  9870  0405  3000               	movlw	0
  9871  0406  3DF1               	addwfc	___fladd@b+1,f
  9872  0407  3000               	movlw	0
  9873  0408  3DF2               	addwfc	___fladd@b+2,f
  9874  0409  3000               	movlw	0
  9875  040A  3DF3               	addwfc	___fladd@b+3,f
  9876  040B  1C73               	btfss	___fladd@b+3,0
  9877  040C  2C2D               	goto	i1l841
  9878  040D  0870               	movf	___fladd@b,w
  9879  040E  0020               	movlb	0	; select bank0
  9880  040F  00A0               	movwf	??___fladd
  9881  0410  0871               	movf	___fladd@b+1,w
  9882  0411  00A1               	movwf	??___fladd+1
  9883  0412  0872               	movf	___fladd@b+2,w
  9884  0413  00A2               	movwf	??___fladd+2
  9885  0414  0873               	movf	___fladd@b+3,w
  9886  0415  00A3               	movwf	??___fladd+3
  9887  0416  3001               	movlw	1
  9888  0417  00A4               	movwf	??___fladd+4
  9889  0418                     u291_25:	
  9890  0418  37A3               	asrf	??___fladd+3,f
  9891  0419  0CA2               	rrf	??___fladd+2,f
  9892  041A  0CA1               	rrf	??___fladd+1,f
  9893  041B  0CA0               	rrf	??___fladd,f
  9894  041C  0BA4               	decfsz	??___fladd+4,f
  9895  041D  2C18               	goto	u291_25
  9896  041E  0823               	movf	??___fladd+3,w
  9897  041F  00F3               	movwf	___fladd@b+3
  9898  0420  0822               	movf	??___fladd+2,w
  9899  0421  00F2               	movwf	___fladd@b+2
  9900  0422  0821               	movf	??___fladd+1,w
  9901  0423  00F1               	movwf	___fladd@b+1
  9902  0424  0820               	movf	??___fladd,w
  9903  0425  00F0               	movwf	___fladd@b
  9904  0426  0A7A               	incf	___fladd@bexp,w
  9905  0427  1903               	btfsc	3,2
  9906  0428  2C2D               	goto	i1l841
  9907  0429  3001               	movlw	1
  9908  042A  00A0               	movwf	??___fladd
  9909  042B  0820               	movf	??___fladd,w
  9910  042C  07FA               	addwf	___fladd@bexp,f
  9911  042D                     i1l841:	
  9912  042D  0A7A               	incf	___fladd@bexp,w
  9913  042E  1D03               	btfss	3,2
  9914  042F  087A               	movf	___fladd@bexp,w
  9915  0430  1D03               	btfss	3,2
  9916  0431  2C3D               	goto	i1l2547
  9917  0432  3000               	movlw	0
  9918  0433  00F3               	movwf	___fladd@b+3
  9919  0434  3000               	movlw	0
  9920  0435  00F2               	movwf	___fladd@b+2
  9921  0436  3000               	movlw	0
  9922  0437  00F1               	movwf	___fladd@b+1
  9923  0438  3000               	movlw	0
  9924  0439  00F0               	movwf	___fladd@b
  9925  043A  087A               	movf	___fladd@bexp,w
  9926  043B  1903               	btfsc	3,2
  9927  043C  01F8               	clrf	___fladd@signs
  9928  043D                     i1l2547:	
  9929  043D  1C7A               	btfss	___fladd@bexp,0
  9930  043E  2C41               	goto	i1l2551
  9931  043F  17F2               	bsf	___fladd@b+2,7
  9932  0440  2C46               	goto	i1l849
  9933  0441                     i1l2551:	
  9934  0441  307F               	movlw	127
  9935  0442  0020               	movlb	0	; select bank0
  9936  0443  00A0               	movwf	??___fladd
  9937  0444  0820               	movf	??___fladd,w
  9938  0445  05F2               	andwf	___fladd@b+2,f
  9939  0446                     i1l849:	
  9940  0446  367A               	lsrf	___fladd@bexp,w
  9941  0447  0020               	movlb	0	; select bank0
  9942  0448  00A0               	movwf	??___fladd
  9943  0449  0820               	movf	??___fladd,w
  9944  044A  00F3               	movwf	___fladd@b+3
  9945  044B  1FF8               	btfss	___fladd@signs,7
  9946  044C  0008               	return
  9947  044D  17F3               	bsf	___fladd@b+3,7
  9948  044E  0008               	return
  9949  044F                     __end_of___fladd:	
  9950                           
  9951                           	psect	text43
  9952  0C78                     __ptext43:	
  9953 ;; *************** function ___aldiv *****************
  9954 ;; Defined at:
  9955 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aldiv.c"
  9956 ;; Parameters:    Size  Location     Type
  9957 ;;  divisor         4    0[COMMON] long 
  9958 ;;  dividend        4    4[COMMON] long 
  9959 ;; Auto vars:     Size  Location     Type
  9960 ;;  quotient        4    2[BANK0 ] long 
  9961 ;;  sign            1    1[BANK0 ] unsigned char 
  9962 ;;  counter         1    0[BANK0 ] unsigned char 
  9963 ;; Return value:  Size  Location     Type
  9964 ;;                  4    0[COMMON] long 
  9965 ;; Registers used:
  9966 ;;		wreg, status,2, status,0
  9967 ;; Tracked objects:
  9968 ;;		On entry : 0/0
  9969 ;;		On exit  : 0/0
  9970 ;;		Unchanged: 0/0
  9971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9972 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9973 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9974 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9975 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9976 ;;Total ram usage:       15 bytes
  9977 ;; Hardware stack levels used:    1
  9978 ;; This function calls:
  9979 ;;		Nothing
  9980 ;; This function is called by:
  9981 ;;		_speedCalc
  9982 ;; This function uses a non-reentrant model
  9983 ;;
  9984                           
  9985                           
  9986                           ;psect for function ___aldiv
  9987  0C78                     ___aldiv:	
  9988                           
  9989                           ;incstack = 0
  9990                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  9991  0C78  0020               	movlb	0	; select bank0
  9992  0C79  01A1               	clrf	___aldiv@sign
  9993  0C7A  1FF3               	btfss	___aldiv@divisor+3,7
  9994  0C7B  2C89               	goto	i1l571
  9995  0C7C  09F0               	comf	___aldiv@divisor,f
  9996  0C7D  09F1               	comf	___aldiv@divisor+1,f
  9997  0C7E  09F2               	comf	___aldiv@divisor+2,f
  9998  0C7F  09F3               	comf	___aldiv@divisor+3,f
  9999  0C80  0AF0               	incf	___aldiv@divisor,f
 10000  0C81  1903               	skipnz
 10001  0C82  0AF1               	incf	___aldiv@divisor+1,f
 10002  0C83  1903               	skipnz
 10003  0C84  0AF2               	incf	___aldiv@divisor+2,f
 10004  0C85  1903               	skipnz
 10005  0C86  0AF3               	incf	___aldiv@divisor+3,f
 10006  0C87  01A1               	clrf	___aldiv@sign
 10007  0C88  0AA1               	incf	___aldiv@sign,f
 10008  0C89                     i1l571:	
 10009  0C89  1FF7               	btfss	___aldiv@dividend+3,7
 10010  0C8A  2C9A               	goto	i1l2333
 10011  0C8B  09F4               	comf	___aldiv@dividend,f
 10012  0C8C  09F5               	comf	___aldiv@dividend+1,f
 10013  0C8D  09F6               	comf	___aldiv@dividend+2,f
 10014  0C8E  09F7               	comf	___aldiv@dividend+3,f
 10015  0C8F  0AF4               	incf	___aldiv@dividend,f
 10016  0C90  1903               	skipnz
 10017  0C91  0AF5               	incf	___aldiv@dividend+1,f
 10018  0C92  1903               	skipnz
 10019  0C93  0AF6               	incf	___aldiv@dividend+2,f
 10020  0C94  1903               	skipnz
 10021  0C95  0AF7               	incf	___aldiv@dividend+3,f
 10022  0C96  3001               	movlw	1
 10023  0C97  00F8               	movwf	??___aldiv
 10024  0C98  0878               	movf	??___aldiv,w
 10025  0C99  06A1               	xorwf	___aldiv@sign,f
 10026  0C9A                     i1l2333:	
 10027  0C9A  3000               	movlw	0
 10028  0C9B  00A5               	movwf	___aldiv@quotient+3
 10029  0C9C  3000               	movlw	0
 10030  0C9D  00A4               	movwf	___aldiv@quotient+2
 10031  0C9E  3000               	movlw	0
 10032  0C9F  00A3               	movwf	___aldiv@quotient+1
 10033  0CA0  3000               	movlw	0
 10034  0CA1  00A2               	movwf	___aldiv@quotient
 10035  0CA2  0873               	movf	___aldiv@divisor+3,w
 10036  0CA3  0472               	iorwf	___aldiv@divisor+2,w
 10037  0CA4  0471               	iorwf	___aldiv@divisor+1,w
 10038  0CA5  0470               	iorwf	___aldiv@divisor,w
 10039  0CA6  1903               	skipnz
 10040  0CA7  2CE3               	goto	i1l2355
 10041  0CA8  01A0               	clrf	___aldiv@counter
 10042  0CA9  0AA0               	incf	___aldiv@counter,f
 10043  0CAA                     i1l2341:	
 10044  0CAA  1BF3               	btfsc	___aldiv@divisor+3,7
 10045  0CAB  2CB8               	goto	i1l2343
 10046  0CAC  3001               	movlw	1
 10047  0CAD                     u248_25:	
 10048  0CAD  35F0               	lslf	___aldiv@divisor,f
 10049  0CAE  0DF1               	rlf	___aldiv@divisor+1,f
 10050  0CAF  0DF2               	rlf	___aldiv@divisor+2,f
 10051  0CB0  0DF3               	rlf	___aldiv@divisor+3,f
 10052  0CB1  0B89               	decfsz	9,f
 10053  0CB2  2CAD               	goto	u248_25
 10054  0CB3  3001               	movlw	1
 10055  0CB4  00F8               	movwf	??___aldiv
 10056  0CB5  0878               	movf	??___aldiv,w
 10057  0CB6  07A0               	addwf	___aldiv@counter,f
 10058  0CB7  2CAA               	goto	i1l2341
 10059  0CB8                     i1l2343:	
 10060  0CB8  3001               	movlw	1
 10061  0CB9                     u250_25:	
 10062  0CB9  35A2               	lslf	___aldiv@quotient,f
 10063  0CBA  0DA3               	rlf	___aldiv@quotient+1,f
 10064  0CBB  0DA4               	rlf	___aldiv@quotient+2,f
 10065  0CBC  0DA5               	rlf	___aldiv@quotient+3,f
 10066  0CBD  0B89               	decfsz	9,f
 10067  0CBE  2CB9               	goto	u250_25
 10068  0CBF  0873               	movf	___aldiv@divisor+3,w
 10069  0CC0  0277               	subwf	___aldiv@dividend+3,w
 10070  0CC1  1D03               	skipz
 10071  0CC2  2CCD               	goto	u251_25
 10072  0CC3  0872               	movf	___aldiv@divisor+2,w
 10073  0CC4  0276               	subwf	___aldiv@dividend+2,w
 10074  0CC5  1D03               	skipz
 10075  0CC6  2CCD               	goto	u251_25
 10076  0CC7  0871               	movf	___aldiv@divisor+1,w
 10077  0CC8  0275               	subwf	___aldiv@dividend+1,w
 10078  0CC9  1D03               	skipz
 10079  0CCA  2CCD               	goto	u251_25
 10080  0CCB  0870               	movf	___aldiv@divisor,w
 10081  0CCC  0274               	subwf	___aldiv@dividend,w
 10082  0CCD                     u251_25:	
 10083  0CCD  1C03               	skipc
 10084  0CCE  2CD8               	goto	i1l2351
 10085  0CCF  0870               	movf	___aldiv@divisor,w
 10086  0CD0  02F4               	subwf	___aldiv@dividend,f
 10087  0CD1  0871               	movf	___aldiv@divisor+1,w
 10088  0CD2  3BF5               	subwfb	___aldiv@dividend+1,f
 10089  0CD3  0872               	movf	___aldiv@divisor+2,w
 10090  0CD4  3BF6               	subwfb	___aldiv@dividend+2,f
 10091  0CD5  0873               	movf	___aldiv@divisor+3,w
 10092  0CD6  3BF7               	subwfb	___aldiv@dividend+3,f
 10093  0CD7  1422               	bsf	___aldiv@quotient,0
 10094  0CD8                     i1l2351:	
 10095  0CD8  3001               	movlw	1
 10096  0CD9                     u252_25:	
 10097  0CD9  36F3               	lsrf	___aldiv@divisor+3,f
 10098  0CDA  0CF2               	rrf	___aldiv@divisor+2,f
 10099  0CDB  0CF1               	rrf	___aldiv@divisor+1,f
 10100  0CDC  0CF0               	rrf	___aldiv@divisor,f
 10101  0CDD  0B89               	decfsz	9,f
 10102  0CDE  2CD9               	goto	u252_25
 10103  0CDF  3001               	movlw	1
 10104  0CE0  02A0               	subwf	___aldiv@counter,f
 10105  0CE1  1D03               	btfss	3,2
 10106  0CE2  2CB8               	goto	i1l2343
 10107  0CE3                     i1l2355:	
 10108  0CE3  0821               	movf	___aldiv@sign,w
 10109  0CE4  1903               	btfsc	3,2
 10110  0CE5  2CF1               	goto	i1l2359
 10111  0CE6  09A2               	comf	___aldiv@quotient,f
 10112  0CE7  09A3               	comf	___aldiv@quotient+1,f
 10113  0CE8  09A4               	comf	___aldiv@quotient+2,f
 10114  0CE9  09A5               	comf	___aldiv@quotient+3,f
 10115  0CEA  0AA2               	incf	___aldiv@quotient,f
 10116  0CEB  1903               	skipnz
 10117  0CEC  0AA3               	incf	___aldiv@quotient+1,f
 10118  0CED  1903               	skipnz
 10119  0CEE  0AA4               	incf	___aldiv@quotient+2,f
 10120  0CEF  1903               	skipnz
 10121  0CF0  0AA5               	incf	___aldiv@quotient+3,f
 10122  0CF1                     i1l2359:	
 10123  0CF1  0825               	movf	___aldiv@quotient+3,w
 10124  0CF2  00F3               	movwf	?___aldiv+3
 10125  0CF3  0824               	movf	___aldiv@quotient+2,w
 10126  0CF4  00F2               	movwf	?___aldiv+2
 10127  0CF5  0823               	movf	___aldiv@quotient+1,w
 10128  0CF6  00F1               	movwf	?___aldiv+1
 10129  0CF7  0822               	movf	___aldiv@quotient,w
 10130  0CF8  00F0               	movwf	?___aldiv
 10131  0CF9  0008               	return
 10132  0CFA                     __end_of___aldiv:	
 10133  007E                     btemp	set	126	;btemp
 10134  007E                     int$flags	set	126
 10135  007E                     wtemp0	set	126


Data Sizes:
    Strings     48
    Constant    0
    Data        32
    BSS         71
    Persistent  43
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     32      64
    BANK1            80     76      80
    BANK2            80      2      80
    BANK3            80     15      15
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    puts@s	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_5(CODE[3]), hrDisp(BANK2[13]), distanceDisp(BANK2[11]), speedDisp(BANK2[8]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_4(CODE[10]), STR_3(CODE[10]), STR_2(CODE[13]), STR_1(CODE[12]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK3[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), STR_5(CODE[3]), hrDisp(BANK2[13]), distanceDisp(BANK2[11]), 
		 -> speedDisp(BANK2[8]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S995_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK3[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_4(CODE[10]), STR_3(CODE[10]), STR_2(CODE[13]), STR_1(CODE[12]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 13
		 -> STR_4(CODE[10]), STR_3(CODE[10]), STR_2(CODE[13]), STR_1(CODE[12]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 4
		 -> ?_printf(BANK3[2]), rpm(BANK0[4]), counter(BANK0[4]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK3[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK3[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    writeString@string	PTR unsigned char  size(1) Largest target is 13
		 -> hrDisp(BANK2[13]), distanceDisp(BANK2[11]), speedDisp(BANK2[8]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timerISR(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timerISR(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    IOCCF7_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> speedCalc(), IOCCF7_DefaultInterruptHandler(), 

    IOCCF7_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> speedCalc(), Absolute function(), IOCCF7_DefaultInterruptHandler(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _speedCalc->___flmul
    ___xxtofl->___lmul
    ___lmul->___aldiv
    ___flmul->__Umul8_16

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _IOCCF7_ISR->_speedCalc
    _speedCalc->___xxtofl
    ___xxtofl->___lmul
    ___lmul->___aldiv

Critical Paths under _main in BANK1

    _writeString->_puts
    _setCursor->_EUSART_Write
    _setCursor->_EUSART_is_tx_ready
    _resetCursor->_puts
    _puts->_fputs
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _abs->___aomod
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCCF7_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _printf->_vfprintf

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    _main->_printf
    _printf->_vfprintf

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   18892
                                             14 BANK3      1     1      0
                       _EUSART_Write
         _IOCCF7_SetInterruptHandler
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                            ___fltol
                             _printf
                        _resetCursor
                          _setCursor
                        _writeString
 ---------------------------------------------------------------------------------
 (1) _writeString                                          1     1      0    3558
                                             24 BANK1      1     1      0
                 _EUSART_is_tx_ready
                               _puts
 ---------------------------------------------------------------------------------
 (1) _setCursor                                            4     3      1     853
                                              1 BANK1      4     3      1
                       _EUSART_Write
                 _EUSART_is_tx_ready
 ---------------------------------------------------------------------------------
 (2) _EUSART_is_tx_ready                                   1     1      0      37
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _resetCursor                                          0     0      0    3382
                               _puts
 ---------------------------------------------------------------------------------
 (2) _puts                                                 5     3      2    3382
                                             19 BANK1      5     3      2
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4    9254
                                              6 BANK3      8     4      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    8596
                                              0 BANK2      2     2      0
                                              0 BANK3      6     3      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    8149
                                             58 BANK1     18    16      2
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    6109
                                             28 BANK1     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    3878
                                             19 BANK1      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     166
                                              0 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 (3) _fputs                                                9     6      3    1914
                                             10 BANK1      9     6      3
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3    1210
                                              2 BANK1      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      62
                                              1 BANK1      1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             19 BANK1      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     613
                                              0 BANK1     19     3     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     625
                                              0 BANK1     27    11     16
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             11     7      4     607
                                              0 BANK1     11     7      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     785
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0     211
                                              2 BANK1      1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     211
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     211
         _IOCCF7_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCCF7_SetInterruptHandler                           2     0      2     211
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     363
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          0     0      0    5948
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                           _timerISR *
 ---------------------------------------------------------------------------------
 (12) _timerISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _PIN_MANAGER_IOC                                     0     0      0    5948
                         _IOCCF7_ISR
 ---------------------------------------------------------------------------------
 (12) _IOCCF7_ISR                                          0     0      0    5948
                   Absolute function *
     _IOCCF7_DefaultInterruptHandler *
                          _speedCalc *
 ---------------------------------------------------------------------------------
 (13) _speedCalc                                           4     4      0    5948
                                             28 BANK0      4     4      0
                            ___aldiv
                            ___fladd
                            ___flmul
                             ___lmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (14) ___xxtofl                                           14    10      4     398
                                             14 BANK0     14    10      4
                            ___aldiv (ARG)
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (14) ___lmul                                             12     4      8     244
                                              9 COMMON     4     4      0
                                              6 BANK0      8     0      8
                            ___aldiv (ARG)
 ---------------------------------------------------------------------------------
 (14) ___flmul                                            26    18      8    2569
                                              9 COMMON     5     5      0
                                              0 BANK0     21    13      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (15) __Umul8_16                                           9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (14) ___fladd                                            20    12      8    2262
                                              0 COMMON    12     4      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (14) ___aldiv                                            15     7      8     452
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (13) _IOCCF7_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Write
   _IOCCF7_SetInterruptHandler
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCCF7_SetInterruptHandler
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _TMR0_SetInterruptHandler
   ___fltol
   _printf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART_Write
             _fputs
               _fputc
                 _putch
                   _EUSART_Write
             _strlen
         _fputc
           _putch
             _EUSART_Write
   _resetCursor
     _puts
       _fputc
         _putch
           _EUSART_Write
       _fputs
         _fputc
           _putch
             _EUSART_Write
   _setCursor
     _EUSART_Write
     _EUSART_is_tx_ready
   _writeString
     _EUSART_is_tx_ready
     _puts
       _fputc
         _putch
           _EUSART_Write
       _fputs
         _fputc
           _putch
             _EUSART_Write

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
     _IOCCF7_ISR
       Absolute function(Fake) *
       _IOCCF7_DefaultInterruptHandler *
       _speedCalc *
         ___aldiv
         ___fladd
         ___flmul
           __Umul8_16
         ___lmul
           ___aldiv (ARG)
         ___xxtofl
           ___aldiv (ARG)
           ___lmul (ARG)
             ___aldiv (ARG)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _timerISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     20      40       5       80.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     4C      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      2      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      F       F      11       18.8%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      FD      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      FD      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Mar 30 15:48:02 2019

                                  __CFG_CP$OFF 0000                                             l69 09A7  
                              _timer0ReloadVal 005F                            __Umul8_16@word_mpld 0076  
                                          l365 0BD1                                            l606 0FEE  
                                          l470 04C4                                            l456 07B4  
                                          l464 0495                                            l473 0559  
                                          l465 049C                                            l707 0C5C  
                                          l619 0EF7                                            l459 07D4  
                                          l469 04B2                                            _abs 0A23  
                                          _pad 079B                                            _rpm 0057  
               ?_EUSART_SetFramingErrorHandler 00A0                                   __CFG_BORV$LO 0000  
                                          wreg 0009                                   __CFG_IESO$ON 0000  
                                 ___flmul@aexp 002D                                   ___flmul@bexp 002E  
       __end_of_IOCCF7_DefaultInterruptHandler 0003        __size_of_IOCCF7_DefaultInterruptHandler 0001  
               _IOCCF7_DefaultInterruptHandler 0002                                   ___flmul@sign 0028  
                                 ___flmul@temp 0033                                   ___flmul@prod 002F  
                                 __CFG_LVP$OFF 0000                                   __CFG_ZCD$OFF 0000  
                                 ___fltol@exp1 00AA                                           ?_abs 00B3  
                                         l3301 0ECA                                           l3221 07B2  
                                         l3303 0ED6                                           l3207 0A42  
                                         l3231 07E2                                           l3209 0A4E  
                                         l3217 07AA                                           l3251 0F62  
                                         l3227 07B6                                           l3403 0647  
                                         l3261 0F79                                           l3245 0F35  
                                         l3181 0BDD                                           l3325 04C0  
                                         l3413 066E                                           l3271 0FC1  
                                         l3263 0F88                                           l3351 056C  
                                         l3319 04AD                                           l3407 064B  
                                         l3423 067E                                           l3273 0FCD  
                                         l3249 0F5D                                           l3185 0C00  
                                         l3361 0583                                           l3329 04F0  
                                         l3417 0674                                           l3283 0E56  
                                         l3187 0C09                                           l3339 04CB  
                                         l3347 0565                                           l3523 0B69  
                                         l3605 0C1C                                           l3197 0AD7  
                                         l3357 0576                                           l3525 0B8C  
                                         l3541 0BA6                                           l3295 0E8B  
                                         l3287 0E7E                                           l3199 0AF8  
                                         l3543 0BAB                                           l3551 0BBA  
                                         l3535 0B97                                           l3625 0C4A  
                                         l3609 0C25                                           l3297 0E9A  
                                         l3449 09D3                                           l3545 0BB0  
                                         l3561 09F8                                           l3635 0C69  
                                         l3627 0C58                                           l3395 0617  
                                         l3387 05DA                                           l3547 0BB5  
                                         l3813 0BC3                                           ?_pad 00B3  
                                         l3761 071A                                           l3763 0720  
                                         l3755 06E7                                           STR_1 100D  
                                         STR_2 1000                                           STR_3 1019  
                                         STR_4 1023                                           STR_5 102D  
                                         _LATA 010C                                           _LATB 010D  
                                         _LATC 010E                                           u4100 046B  
                                         u4110 046C                                           u4205 04DF  
                                         u4215 04EB                                           u4065 0EB8  
                                         u4155 04A5                                           u4185 0563  
                                         u4435 0C2E                                           u3815 0BFE  
                                         u4465 0C4B                                           u3930 0F6A  
                                         u4495 0C60                                           u4567 0A07  
                                         u3865 07C0                                           u4577 0BA2  
                                         u3965 0FAE                                           u3885 0A2D  
                                         _TMR0 0015                                           _WPUA 020C  
                                         _WPUB 020D                                           _WPUC 020E  
                                 __CFG_WRT$OFF 0000                                  __CFG_FCMEN$ON 0000  
                                         abs@a 00B3                                           _dbuf 0124  
                                         _main 06A3                                           _dtoa 044F  
                                         _prec 00EC                                           _nout 004C  
                                         pad@i 00B7                                           pad@p 00B4  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         pad@w 00B9                                           btemp 007E  
                                         _puts 0A55                                  __CFG_BOREN$ON 0000  
                                         start 0014                                  __CFG_MCLRE$ON 0000  
                                        ??_abs 00B5                                          ??_pad 00B6  
                      __end_of_TMR0_Initialize 0A23                 ??_TMR0_DefaultInterruptHandler 0070  
                                ?_EUSART_Write 0070                 __size_of_OSCILLATOR_Initialize 0007  
                __end_of_OSCILLATOR_Initialize 0970                            __size_of_IOCCF7_ISR 000D  
                                ___fltol@sign1 00A9                                __end_of___aldiv 0CFA  
                              __end_of___aodiv 1000                                __end_of___fladd 044F  
                                        ?_main 0070                                          ?_dtoa 00BC  
                              __end_of___aomod 0F09                                  __CFG_WDTE$OFF 0000  
                              __end_of___flmul 0266                                __end_of___fltol 0C78  
                                        ?_puts 00B3                                          i1l240 0012  
                                        i1l236 000D                                          i1l571 0C89  
                                        i1l811 0347                                          i1l813 0329  
                                        i1l807 02B3                                          i1l841 042D  
                                        i1l915 0259                                          i1l828 03CD  
                                        i1l941 0D18                                          i1l849 0446  
                                        i1l954 0D62                                          i1l955 0D6C  
                                        i1l947 0D4E                                   vfpfcnvrt@fmt 00DA  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TRISC 008E                                    _writeString 09F6  
            __size_of_TMR0_SetInterruptHandler 0009                            ___lmul@multiplicand 002A  
                    ?_TMR0_SetInterruptHandler 00A0                               __end_of_TMR0_ISR 09E5  
                      __end_of_PIN_MANAGER_IOC 0957                                          _hrInt 0050  
                                        _flags 00EE                                          _fputc 0BD2  
                                        _fputs 0AD4                                          _speed 0044  
                                        pad@fp 00BB                                          _width 004E  
                                        _putch 0957                                          dtoa@d 00BC  
                                        dtoa@i 00D8                                          dtoa@n 00D0  
                                        dtoa@p 00CA                                          dtoa@s 00CE  
                                        dtoa@w 00CC                                          pclath 000A  
                                        puts@s 00B3                                          status 0003  
                                        wtemp0 007E                                __initialization 0016  
                                 __end_of_main 079B                                   __end_of_dtoa 0595  
                                 __end_of_puts 0A70                                 ??_EUSART_Write 00A0  
                               __CFG_LPBOR$OFF 0000                    ?_INTERRUPT_InterruptManager 0070  
                                       ??_main 01AE                                         ??_dtoa 00C4  
                                       ??_puts 00B5                                 __CFG_PLLEN$OFF 0000  
            _EUSART_DefaultFramingErrorHandler 0000                     _EUSART_OverrunErrorHandler 016A  
                                       ?_fputc 00A2                                         ?_fputs 00AA  
                                       _ANSELA 018C                                         ?_putch 0070  
                                       _ANSELB 018D                                         _ANSELC 018E  
                 ??_IOCCF7_SetInterruptHandler 00A2                                         _BORCON 0116  
                                       _RC1REG 0199                                         _RC1STA 019D  
                                       i1l1009 0A80                                         _RB7PPS 0E9F  
                                       i1l2311 0B05                                         i1l2401 02A8  
                                       i1l2241 0A7A                                         _ODCONA 028C  
                                       _ODCONB 028D                                         i1l2411 02BD  
                                       i1l2315 0B10                                         _ODCONC 028E  
                                       i1l2341 0CAA                                         i1l2333 0C9A  
                                       i1l2405 02AB                                         i1l2351 0CD8  
                                       i1l2343 0CB8                                         i1l2511 03EC  
                                       i1l2503 03DF                                         i1l2441 02F9  
                                       i1l2601 008F                                         i1l2355 0CE3  
                                       i1l2451 0334                                         i1l2525 03FE  
                                       i1l2517 03F3                                         i1l2381 0283  
                                       i1l2359 0CF1                                         i1l2551 0441  
                                       i1l2519 03F5                                         i1l2383 028B  
                                       i1l2703 0D10                                         i1l2529 0400  
                                       i1l2449 0332                                         i1l2377 0280  
                                       i1l2713 0D2B                                         i1l2547 043D  
                                       i1l2475 0368                                         i1l2467 0355  
                                       i1l2459 0343                                         i1l2571 0054  
                                       i1l2723 0D60                                         i1l2715 0D3B  
                                       i1l2477 036A                                         i1l2485 037A  
                                       i1l2661 01EF                                         i1l2653 01C1  
                                       i1l2573 0056                                         i1l2725 0D53  
                                       i1l2709 0D27                                         i1l2495 03C5  
                                       i1l2655 01D8                                         i1l2591 0079  
                                       i1l2575 005E                                         i1l2665 01F1  
                                       i1l2593 0081                                         i1l2737 0D87  
                                       i1l2675 021A                                         i1l2685 0246  
                                       i1l2589 0077                                         i1l2679 022F  
                                       i1l2891 09C5                                         u310_25 01B0  
                                       u223_25 0A81                                         u311_25 01C4  
                                       u320_25 0208                                         u321_25 0223  
                                       u313_25 01CD                                         u250_25 0CB9  
                                       u322_25 0239                                         u306_25 0105  
                                       u242_25 0B11                                         u251_25 0CCD  
                                       u307_25 0134                                         u243_25 0B18  
                                       u331_25 0D5A                                         u252_25 0CD9  
                                       u308_25 018A                     __end_of_EUSART_is_tx_ready 09D6  
                                       u309_25 01A1                                         u335_25 0D74  
                                       u327_25 0D34                                         u248_25 0CAD  
                                       u264_25 030D                                         u265_20 0317  
                                       u281_25 03E0                                         u329_25 0D48  
                                       u266_20 0318                                         u291_25 0418  
                                       u276_25 036F                                         u277_23 038D  
                                       u269_25 0339                                         _OSCCON 0099  
                                       u401lld 0E53                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _TX1REG 019A  
                                       _TX1STA 019E                                   ?_resetCursor 0070  
                                       u390lld 0F32                               __end_of___xxtofl 0D90  
                               __CFG_PWRTE$OFF 0000                                   vfprintf@cfmt 01A4  
                                       ___lmul 0AFD                                      ??___aldiv 0078  
                                    ??___aodiv 00B0                                      ??___fladd 0020  
                                    ??___aomod 00B0                                 __CFG_STVREN$ON 0000  
                                    ??___flmul 0079                                      ??___fltol 00A4  
                                       _hrDisp 0144                               ?_TMR0_Initialize 0070  
                                       _printf 09E5                                         pad@buf 00B3  
                                       dtoa@fp 00C9                                         _strlen 0A3C  
          __size_of_IOCCF7_SetInterruptHandler 0009                                         fputc@c 00A2  
                                       fputs@c 00B0                                         fputs@i 00B1  
                                       fputs@s 00AA                             __size_of__Umul8_16 001F  
                             __end_of_timerISR 0800                               __end_of_vfprintf 0B95  
     TMR0_SetInterruptHandler@InterruptHandler 00A0     IOCCF7_SetInterruptHandler@InterruptHandler 00A0  
                             ?_PIN_MANAGER_IOC 0070                                   ??_IOCCF7_ISR 007E  
                                 ___xxtofl@arg 0038                                   ___xxtofl@exp 0037  
                            _SYSTEM_Initialize 09AF                                   ___xxtofl@val 002E  
                      __end_of__initialization 0036                                     _adcCounter 0048  
                           ?_SYSTEM_Initialize 0070                                     ___fltol@f1 00A0  
                               __pcstackCOMMON 0070                                   __pidataBANK2 0A8F  
                          ??_SYSTEM_Initialize 00A3                                      ?_TMR0_ISR 0070  
                                __end_of_fputc 0C12                                  __end_of_fputs 0AFD  
                                __end_of_putch 095D                             __end_of_IOCCF7_ISR 09C8  
                               _OPTION_REGbits 0095                ??_EUSART_SetOverrunErrorHandler 00A2  
                                      ??_fputc 00A5                      __end_of_SYSTEM_Initialize 09BB  
                                      ??_fputs 00AD                                        ??_putch 00A1  
                                   __pbssBANK0 0040                                     __pbssBANK1 00EC  
                                   __pbssBANK2 0120                           __end_of_EUSART_Write 09AF  
                            __end_of__Umul8_16 0A8F                                     __pmaintext 06A3  
             __end_of_TMR0_SetInterruptHandler 09A5                                        ?___lmul 0026  
                                   ??_TMR0_ISR 0070                                __CFG_PPS1WAY$ON 0000  
                           __size_of_setCursor 003D                                     __pintentry 0004  
                               ___lmul@product 0079                                        ?_printf 01A6  
                                      ?_strlen 00A0                             __size_of_speedCalc 009A  
                              __CFG_WDTCCS$SWC 0000                                      ?___xxtofl 002E  
                                 ?_writeString 0070                             __size_of_vfpfcnvrt 010E  
                                      _OSCTUNE 0098                                        _SLRCONA 030C  
                                      _SLRCONB 030D                                        _SLRCONC 030E  
           __end_of_IOCCF7_SetInterruptHandler 099C                     _IOCCF7_SetInterruptHandler 0993  
                     ??_EUSART_SetErrorHandler 00A2                           __size_of_resetCursor 0008  
                                    ?_timerISR 0070                                        ___aldiv 0C78  
                                      ___aodiv 0F09                                        ___fladd 0266  
                                      ___aomod 0E2A                                __size_of___lmul 0030  
                                      ___flmul 003A                                        ___fltol 0C12  
                                    ?_vfprintf 01A0                                        __ptext1 09F6  
                                      __ptext2 0B95                                        __ptext3 09C8  
                                      __ptext4 0970                                        __ptext5 0A55  
                                      __ptext6 09E5                                        __ptext7 0B60  
                                      __ptext8 0595                                        __ptext9 044F  
                                      _distInt 0052                                __size_of_printf 0011  
                              __size_of_strlen 0019                                        _counter 005B  
                        _OSCILLATOR_Initialize 0969                                   __size_of_abs 0019  
                                 __size_of_pad 0053                                     ??___xxtofl 0032  
                             ___aldiv@dividend 0074                       ??_PIN_MANAGER_Initialize 00A2  
                                    _IOCCFbits 0399                                      _IOCCNbits 0398  
                                    _IOCCPbits 0397                     __size_of_SYSTEM_Initialize 000C  
                                      clrloop0 095E                           end_of_initialization 0036  
                            __end_of_setCursor 0BD2          __end_of_EUSART_SetOverrunErrorHandler 0993  
       __size_of_EUSART_SetOverrunErrorHandler 0009                  _EUSART_SetOverrunErrorHandler 098A  
                                      fputc@fp 00A4                                        init_ram 0963  
                                      fputs@fp 00AC                                        initloop 0964  
                            __end_of_speedCalc 0E2A                              _EUSART_Initialize 0AAF  
                           ?_EUSART_Initialize 0070                              __end_of_vfpfcnvrt 06A3  
                                   ??_timerISR 0070                               ___aldiv@quotient 0022  
                           _EUSART_is_tx_ready 09C8                                     ??_vfprintf 016E  
                                      strlen@a 00A3                                        strlen@s 00A4  
                          ??_EUSART_Initialize 00A2                                   _distanceDisp 0151  
                     _TMR0_SetInterruptHandler 099C                            ?_EUSART_is_tx_ready 0070  
                                  ___fladd@grs 007B                               __CFG_FOSC$INTOSC 0000  
                                ___xxtofl@sign 0036                          __size_of_EUSART_Write 000A  
              __size_of_EUSART_SetErrorHandler 0009                                    ___flmul@grs 0029  
                    __end_of_EUSART_Initialize 0AD4                           ??_EUSART_is_tx_ready 00A0  
                               _speedCalc$1222 003C                                 __end_of___lmul 0B2D  
                   _EUSART_DefaultErrorHandler 0000                                    vfpfcnvrt@ap 00DB  
                                  vfpfcnvrt@fp 00EB                                    vfpfcnvrt@ll 00E1  
                                  vfpfcnvrt@vp 00E9                                   _EUSART_Write 09A5  
                            __size_of_TMR0_ISR 000F                         ?_OSCILLATOR_Initialize 0070  
                            writeString@string 00B8                                 __end_of_printf 09F6  
                               __end_of_strlen 0A55                            start_initialization 0016  
                     __size_of_TMR0_Initialize 0018                __size_of_PIN_MANAGER_Initialize 0033  
                                  __end_of_abs 0A3C                                    __end_of_pad 07EE  
                         __size_of_writeString 0015                         _EUSART_is_tx_ready$167 00A0  
                                  putch@txData 00A1                       __size_of_PIN_MANAGER_IOC 0006  
               ?_EUSART_SetOverrunErrorHandler 00A0                                    vfprintf@fmt 01A0  
                   _EUSART_FramingErrorHandler 016C                                       ??___lmul 0079  
                       _EUSART_SetErrorHandler 0978                                      __Umul8_16 0A70  
                                  __pdataBANK2 0144                                       ??_printf 01AA  
                                     ??_strlen 00A2                                      ___fladd@a 0074  
                                    ___fladd@b 0070                                      ___flmul@a 0024  
                                    ___flmul@b 0020                                      ___latbits 0002  
                                __pcstackBANK0 0020                                  __pcstackBANK1 00A0  
                                __pcstackBANK2 016E                                  __pcstackBANK3 01A0  
                             ___aodiv@dividend 00A8                              __size_of___xxtofl 0096  
                  ?_IOCCF7_SetInterruptHandler 00A0                     __size_of_EUSART_Initialize 0025  
                        _TMR0_InterruptHandler 0164                                      __pnvBANK0 005F  
                                    __pnvBANK2 0164                         _PIN_MANAGER_Initialize 0B2D  
                                     ?___aldiv 0070                                       ?___aodiv 00A0  
                                     ?___fladd 0070                                       ?___aomod 00A0  
                             ___aodiv@quotient 00B3                                       ?___flmul 0020  
                                     ?___fltol 00A0                                      _heartRate 0120  
                                   ?__Umul8_16 0070                                     setCursor@a 00A4  
                                   setCursor@b 00A1                              __size_of_timerISR 0012  
                 ??_INTERRUPT_InterruptManager 007E                              __size_of_vfprintf 0035  
                                     _BAUD1CON 019F                                 __size_of_fputc 0040  
                               __size_of_fputs 0029                                 __size_of_putch 0006  
                              ___aldiv@divisor 0070                              ??_TMR0_Initialize 00A2  
                                ??_resetCursor 00B8                                ___aldiv@counter 0020  
       EUSART_SetErrorHandler@interruptHandler 00A0                                      _setCursor 0B95  
                                    clear_ram0 095D                              _eusartRxLastError 0056  
          __size_of_INTERRUPT_InterruptManager 0010                     ??_TMR0_SetInterruptHandler 00A2  
                                     _PIR1bits 0010                ??_EUSART_SetFramingErrorHandler 00A2  
                                    _puts$1041 00B7                                      _speedCalc 0D90  
                                    _speedDisp 015C               ??_IOCCF7_DefaultInterruptHandler 0070  
              ?_IOCCF7_DefaultInterruptHandler 0070                           __CFG_WDTCPS$WDTCPS1F 0000  
                                     _TMR0_ISR 09D6              _EUSART_DefaultOverrunErrorHandler 0000  
                            ??_PIN_MANAGER_IOC 007E                                      _vfpfcnvrt 0595  
                            ___lmul@multiplier 0026                                     ?_setCursor 00A1  
                                   vfprintf@ap 01A2                                     vfprintf@fp 01A3  
                          __end_of_resetCursor 0978                                     ?_speedCalc 0070  
                      ??_OSCILLATOR_Initialize 00A0                                    ??__Umul8_16 0072  
                          _EUSART_ErrorHandler 0168                               __size_of___aldiv 0082  
                             __size_of___aodiv 00F7                               __size_of___fladd 01E9  
                             __size_of___aomod 00DF                               __size_of___flmul 022C  
                             __size_of___fltol 0066                                     ?_vfpfcnvrt 00DA  
                              ___aodiv@divisor 00A0                                ___aodiv@counter 00B1  
                                     ___xxtofl 0CFA                                       _dtoa$695 00C7  
                                     __ptext10 079B                                       __ptext11 0A3C  
                                     __ptext20 09AF                                       __ptext12 0AD4  
                                     __ptext21 0A0B                                       __ptext13 0BD2  
                                     __ptext22 099C                                       __ptext14 0957  
                                     __ptext31 09D6                                       __ptext23 0B2D  
                                     __ptext15 09A5                                       __ptext40 003A  
                                     __ptext32 0003                                       __ptext24 0993  
                                     __ptext16 0A23                                       __ptext41 0A70  
                                     __ptext33 07EE                                       __ptext25 0969  
                                     __ptext17 0E2A                                       __ptext42 0266  
                                     __ptext34 0951                                       __ptext26 0AAF  
                                     __ptext18 0F09                                       __ptext43 0C78  
                                     __ptext35 09BB                                       __ptext27 098A  
                                     __ptext19 0C12                                       __ptext36 0002  
                                     __ptext28 0981                                       __ptext37 0D90  
                                     __ptext29 0978                                       __ptext38 0CFA  
                                     __ptext39 0AFD                                       _distance 0040  
                                   _IOCCF7_ISR 09BB                                  __size_of_main 00F8  
                                __size_of_dtoa 0146                                  __size_of_puts 001B  
                  __size_of_EUSART_is_tx_ready 000E           __end_of_TMR0_DefaultInterruptHandler 0004  
        __size_of_TMR0_DefaultInterruptHandler 0001                   _TMR0_DefaultInterruptHandler 0003  
                         __CFG_WDTCWS$WDTCWSSW 0000                        ?_EUSART_SetErrorHandler 00A0  
                                   _RC1STAbits 019D  EUSART_SetOverrunErrorHandler@interruptHandler 00A0  
                                     _timerISR 07EE                                       _speedInt 0054  
                                     int$flags 007E                                       _vfprintf 0B60  
           __end_of_INTERRUPT_InterruptManager 0014                     _INTERRUPT_InterruptManager 0004  
                                    printf@fmt 01A6          __end_of_EUSART_SetFramingErrorHandler 098A  
       __size_of_EUSART_SetFramingErrorHandler 0009                  _EUSART_SetFramingErrorHandler 0981  
                             ___aomod@dividend 00A8                                  ??_writeString 00B8  
                                   _INTCONbits 000B                                       intlevel1 0000  
                      ?_PIN_MANAGER_Initialize 0070                                    _resetCursor 0970  
               __end_of_EUSART_SetErrorHandler 0981                                    ??_setCursor 00A2  
                            __CFG_CLKOUTEN$OFF 0000                  ?_TMR0_DefaultInterruptHandler 0070  
                                  ??_speedCalc 007E                                       printf@ap 01AD  
EUSART_SetFramingErrorHandler@interruptHandler 00A0                                ___aomod@divisor 00A0  
                                  ??_vfpfcnvrt 00DC                                ___aomod@counter 00B1  
                                __pstringtext1 1000                                  __pstringtext2 100D  
                                __pstringtext3 1019                                  __pstringtext4 1023  
                                __pstringtext5 102D                                  __pstringtext6 0000  
                       __Umul8_16@multiplicand 0070                                     _OPTION_REG 0095  
                              _TMR0_Initialize 0A0B                                   ___aldiv@sign 0021  
                                   _TX1STAbits 019E                                  ___fladd@signs 0078  
                           EUSART_Write@txData 00A0                            __end_of_writeString 0A0B  
                                 ___aodiv@sign 00B2                 __end_of_PIN_MANAGER_Initialize 0B60  
                                  ?_IOCCF7_ISR 0070                                   ___fladd@aexp 0079  
                                 ___fladd@bexp 007A                                _PIN_MANAGER_IOC 0951  
                         __Umul8_16@multiplier 0078                                   ___aomod@sign 00B2  
                      _IOCCF7_InterruptHandler 0166                              __Umul8_16@product 0074  
