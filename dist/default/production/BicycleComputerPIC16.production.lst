

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Apr 02 16:05:12 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1619
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
    10                           	psect	stringtext4,global,class=STRCODE,delta=2
    11                           	psect	stringtext5,global,class=STRCODE,delta=2
    12                           	psect	stringtext6,global,class=STRCODE,delta=2
    13                           	psect	cinit,global,class=CODE,merge=1,delta=2
    14                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    18                           	psect	clrtext,global,class=CODE,delta=2
    19                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    21                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    23                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    24                           	psect	text1,local,class=CODE,merge=1,delta=2
    25                           	psect	text2,local,class=CODE,merge=1,delta=2
    26                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text5,local,class=CODE,merge=1,delta=2
    29                           	psect	text6,local,class=CODE,merge=1,delta=2
    30                           	psect	text7,local,class=CODE,merge=1,delta=2
    31                           	psect	text8,local,class=CODE,merge=1,delta=2
    32                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text12,local,class=CODE,merge=1,delta=2
    36                           	psect	text13,local,class=CODE,merge=1,delta=2
    37                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text21,local,class=CODE,merge=1,delta=2
    45                           	psect	text22,local,class=CODE,merge=1,delta=2
    46                           	psect	text23,local,class=CODE,merge=1,delta=2
    47                           	psect	text24,local,class=CODE,merge=1,delta=2
    48                           	psect	text25,local,class=CODE,merge=1,delta=2
    49                           	psect	text26,local,class=CODE,merge=1,delta=2
    50                           	psect	text27,local,class=CODE,merge=1,delta=2
    51                           	psect	text28,local,class=CODE,merge=1,delta=2
    52                           	psect	text29,local,class=CODE,merge=1,delta=2
    53                           	psect	text30,local,class=CODE,merge=1,delta=2
    54                           	psect	text31,local,class=CODE,merge=1,delta=2
    55                           	psect	intentry,global,class=CODE,delta=2
    56                           	psect	text33,local,class=CODE,merge=1,delta=2
    57                           	psect	text34,local,class=CODE,merge=1,delta=2
    58                           	psect	text35,local,class=CODE,merge=1,delta=2
    59                           	psect	text36,local,class=CODE,merge=1,delta=2
    60                           	psect	text37,local,class=CODE,merge=1,delta=2
    61                           	psect	text38,local,class=CODE,merge=1,delta=2
    62                           	psect	text39,local,class=CODE,merge=1,delta=2
    63                           	psect	text40,local,class=CODE,merge=1,delta=2,group=1
    64                           	dabs	1,0x7E,2
    65  0000                     
    66                           ; Version 2.05
    67                           ; Generated 20/12/2018 GMT
    68                           ; 
    69                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    70                           ; All rights reserved.
    71                           ; 
    72                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    73                           ; 
    74                           ; Redistribution and use in source and binary forms, with or without modification, are
    75                           ; permitted provided that the following conditions are met:
    76                           ; 
    77                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    78                           ;        conditions and the following disclaimer.
    79                           ; 
    80                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    81                           ;        of conditions and the following disclaimer in the documentation and/or other
    82                           ;        materials provided with the distribution.
    83                           ; 
    84                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    85                           ;        software without specific prior written permission.
    86                           ; 
    87                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    88                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    89                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    90                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    91                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    92                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    93                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    94                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    95                           ; 
    96                           ; 
    97                           ; Code-generator required, PIC16F1619 Definitions
    98                           ; 
    99                           ; SFR Addresses
   100  0000                     	;# 
   101  0001                     	;# 
   102  0002                     	;# 
   103  0003                     	;# 
   104  0004                     	;# 
   105  0005                     	;# 
   106  0006                     	;# 
   107  0007                     	;# 
   108  0008                     	;# 
   109  0009                     	;# 
   110  000A                     	;# 
   111  000B                     	;# 
   112  000C                     	;# 
   113  000D                     	;# 
   114  000E                     	;# 
   115  0010                     	;# 
   116  0011                     	;# 
   117  0012                     	;# 
   118  0013                     	;# 
   119  0014                     	;# 
   120  0015                     	;# 
   121  0016                     	;# 
   122  0016                     	;# 
   123  0017                     	;# 
   124  0018                     	;# 
   125  0019                     	;# 
   126  001A                     	;# 
   127  001A                     	;# 
   128  001B                     	;# 
   129  001B                     	;# 
   130  001C                     	;# 
   131  001D                     	;# 
   132  001E                     	;# 
   133  001F                     	;# 
   134  008C                     	;# 
   135  008D                     	;# 
   136  008E                     	;# 
   137  0090                     	;# 
   138  0091                     	;# 
   139  0092                     	;# 
   140  0093                     	;# 
   141  0094                     	;# 
   142  0095                     	;# 
   143  0096                     	;# 
   144  0098                     	;# 
   145  0099                     	;# 
   146  009A                     	;# 
   147  009B                     	;# 
   148  009B                     	;# 
   149  009C                     	;# 
   150  009D                     	;# 
   151  009E                     	;# 
   152  009F                     	;# 
   153  010C                     	;# 
   154  010D                     	;# 
   155  010E                     	;# 
   156  0111                     	;# 
   157  0112                     	;# 
   158  0113                     	;# 
   159  0114                     	;# 
   160  0115                     	;# 
   161  0116                     	;# 
   162  0117                     	;# 
   163  0118                     	;# 
   164  0119                     	;# 
   165  011C                     	;# 
   166  018C                     	;# 
   167  018D                     	;# 
   168  018E                     	;# 
   169  0191                     	;# 
   170  0191                     	;# 
   171  0192                     	;# 
   172  0193                     	;# 
   173  0193                     	;# 
   174  0194                     	;# 
   175  0195                     	;# 
   176  0196                     	;# 
   177  0197                     	;# 
   178  0199                     	;# 
   179  0199                     	;# 
   180  0199                     	;# 
   181  019A                     	;# 
   182  019A                     	;# 
   183  019A                     	;# 
   184  019B                     	;# 
   185  019B                     	;# 
   186  019B                     	;# 
   187  019B                     	;# 
   188  019B                     	;# 
   189  019C                     	;# 
   190  019C                     	;# 
   191  019C                     	;# 
   192  019D                     	;# 
   193  019D                     	;# 
   194  019D                     	;# 
   195  019E                     	;# 
   196  019E                     	;# 
   197  019E                     	;# 
   198  019F                     	;# 
   199  019F                     	;# 
   200  019F                     	;# 
   201  019F                     	;# 
   202  019F                     	;# 
   203  020C                     	;# 
   204  020D                     	;# 
   205  020E                     	;# 
   206  0211                     	;# 
   207  0211                     	;# 
   208  0212                     	;# 
   209  0212                     	;# 
   210  0213                     	;# 
   211  0213                     	;# 
   212  0214                     	;# 
   213  0214                     	;# 
   214  0215                     	;# 
   215  0215                     	;# 
   216  0215                     	;# 
   217  0215                     	;# 
   218  0216                     	;# 
   219  0216                     	;# 
   220  0217                     	;# 
   221  0217                     	;# 
   222  028C                     	;# 
   223  028D                     	;# 
   224  028E                     	;# 
   225  0291                     	;# 
   226  0291                     	;# 
   227  0292                     	;# 
   228  0293                     	;# 
   229  0294                     	;# 
   230  0298                     	;# 
   231  0298                     	;# 
   232  0299                     	;# 
   233  029A                     	;# 
   234  029B                     	;# 
   235  029E                     	;# 
   236  030C                     	;# 
   237  030D                     	;# 
   238  030E                     	;# 
   239  038C                     	;# 
   240  038D                     	;# 
   241  038E                     	;# 
   242  0391                     	;# 
   243  0392                     	;# 
   244  0393                     	;# 
   245  0394                     	;# 
   246  0395                     	;# 
   247  0396                     	;# 
   248  0397                     	;# 
   249  0398                     	;# 
   250  0399                     	;# 
   251  040E                     	;# 
   252  0413                     	;# 
   253  0413                     	;# 
   254  0414                     	;# 
   255  0414                     	;# 
   256  0415                     	;# 
   257  0416                     	;# 
   258  0417                     	;# 
   259  0418                     	;# 
   260  041A                     	;# 
   261  041A                     	;# 
   262  041B                     	;# 
   263  041B                     	;# 
   264  041C                     	;# 
   265  041D                     	;# 
   266  041E                     	;# 
   267  041F                     	;# 
   268  0493                     	;# 
   269  0494                     	;# 
   270  0495                     	;# 
   271  0496                     	;# 
   272  049A                     	;# 
   273  049B                     	;# 
   274  049C                     	;# 
   275  049D                     	;# 
   276  058C                     	;# 
   277  058C                     	;# 
   278  058D                     	;# 
   279  058E                     	;# 
   280  058E                     	;# 
   281  058F                     	;# 
   282  0590                     	;# 
   283  0590                     	;# 
   284  0591                     	;# 
   285  0592                     	;# 
   286  0592                     	;# 
   287  0593                     	;# 
   288  0594                     	;# 
   289  0594                     	;# 
   290  0595                     	;# 
   291  0596                     	;# 
   292  0596                     	;# 
   293  0597                     	;# 
   294  0598                     	;# 
   295  0599                     	;# 
   296  059A                     	;# 
   297  059B                     	;# 
   298  059B                     	;# 
   299  059C                     	;# 
   300  059D                     	;# 
   301  060C                     	;# 
   302  060C                     	;# 
   303  060D                     	;# 
   304  060E                     	;# 
   305  060F                     	;# 
   306  060F                     	;# 
   307  0610                     	;# 
   308  0611                     	;# 
   309  0612                     	;# 
   310  0613                     	;# 
   311  0614                     	;# 
   312  0617                     	;# 
   313  0617                     	;# 
   314  0618                     	;# 
   315  0619                     	;# 
   316  061A                     	;# 
   317  061A                     	;# 
   318  061B                     	;# 
   319  061C                     	;# 
   320  0691                     	;# 
   321  0692                     	;# 
   322  0693                     	;# 
   323  0694                     	;# 
   324  0695                     	;# 
   325  0696                     	;# 
   326  0697                     	;# 
   327  0699                     	;# 
   328  069A                     	;# 
   329  0711                     	;# 
   330  0712                     	;# 
   331  0713                     	;# 
   332  0714                     	;# 
   333  0715                     	;# 
   334  0718                     	;# 
   335  0718                     	;# 
   336  0719                     	;# 
   337  071A                     	;# 
   338  071A                     	;# 
   339  071B                     	;# 
   340  071C                     	;# 
   341  071D                     	;# 
   342  0791                     	;# 
   343  0791                     	;# 
   344  0792                     	;# 
   345  0793                     	;# 
   346  0793                     	;# 
   347  0794                     	;# 
   348  0795                     	;# 
   349  0795                     	;# 
   350  0796                     	;# 
   351  0797                     	;# 
   352  0797                     	;# 
   353  0798                     	;# 
   354  0799                     	;# 
   355  079A                     	;# 
   356  080C                     	;# 
   357  080C                     	;# 
   358  080D                     	;# 
   359  080E                     	;# 
   360  080E                     	;# 
   361  080F                     	;# 
   362  0810                     	;# 
   363  0810                     	;# 
   364  0811                     	;# 
   365  0812                     	;# 
   366  0812                     	;# 
   367  0813                     	;# 
   368  0814                     	;# 
   369  0815                     	;# 
   370  0816                     	;# 
   371  0817                     	;# 
   372  0818                     	;# 
   373  0819                     	;# 
   374  081A                     	;# 
   375  081A                     	;# 
   376  081B                     	;# 
   377  081C                     	;# 
   378  081C                     	;# 
   379  081D                     	;# 
   380  088C                     	;# 
   381  088D                     	;# 
   382  088E                     	;# 
   383  088F                     	;# 
   384  088F                     	;# 
   385  0890                     	;# 
   386  0891                     	;# 
   387  0892                     	;# 
   388  0893                     	;# 
   389  0893                     	;# 
   390  0894                     	;# 
   391  0895                     	;# 
   392  0896                     	;# 
   393  0897                     	;# 
   394  0897                     	;# 
   395  0898                     	;# 
   396  0899                     	;# 
   397  0D8C                     	;# 
   398  0D8C                     	;# 
   399  0D8D                     	;# 
   400  0D8E                     	;# 
   401  0D8F                     	;# 
   402  0D8F                     	;# 
   403  0D90                     	;# 
   404  0D91                     	;# 
   405  0D92                     	;# 
   406  0D92                     	;# 
   407  0D93                     	;# 
   408  0D94                     	;# 
   409  0D95                     	;# 
   410  0D95                     	;# 
   411  0D96                     	;# 
   412  0D97                     	;# 
   413  0D98                     	;# 
   414  0D99                     	;# 
   415  0D9A                     	;# 
   416  0D9B                     	;# 
   417  0D9C                     	;# 
   418  0D9D                     	;# 
   419  0D9E                     	;# 
   420  0D9E                     	;# 
   421  0D9F                     	;# 
   422  0DA0                     	;# 
   423  0DA1                     	;# 
   424  0DA1                     	;# 
   425  0DA2                     	;# 
   426  0DA3                     	;# 
   427  0DA4                     	;# 
   428  0DA4                     	;# 
   429  0DA5                     	;# 
   430  0DA6                     	;# 
   431  0DA7                     	;# 
   432  0DA7                     	;# 
   433  0DA8                     	;# 
   434  0DA9                     	;# 
   435  0DAA                     	;# 
   436  0DAB                     	;# 
   437  0DAC                     	;# 
   438  0DAD                     	;# 
   439  0DAE                     	;# 
   440  0DAF                     	;# 
   441  0E0F                     	;# 
   442  0E10                     	;# 
   443  0E11                     	;# 
   444  0E12                     	;# 
   445  0E13                     	;# 
   446  0E14                     	;# 
   447  0E15                     	;# 
   448  0E16                     	;# 
   449  0E17                     	;# 
   450  0E18                     	;# 
   451  0E19                     	;# 
   452  0E1A                     	;# 
   453  0E1B                     	;# 
   454  0E1C                     	;# 
   455  0E1D                     	;# 
   456  0E1E                     	;# 
   457  0E1F                     	;# 
   458  0E20                     	;# 
   459  0E21                     	;# 
   460  0E22                     	;# 
   461  0E23                     	;# 
   462  0E24                     	;# 
   463  0E25                     	;# 
   464  0E26                     	;# 
   465  0E27                     	;# 
   466  0E28                     	;# 
   467  0E29                     	;# 
   468  0E2A                     	;# 
   469  0E2B                     	;# 
   470  0E2C                     	;# 
   471  0E2D                     	;# 
   472  0E2E                     	;# 
   473  0E90                     	;# 
   474  0E91                     	;# 
   475  0E92                     	;# 
   476  0E94                     	;# 
   477  0E95                     	;# 
   478  0E9C                     	;# 
   479  0E9D                     	;# 
   480  0E9E                     	;# 
   481  0E9F                     	;# 
   482  0EA0                     	;# 
   483  0EA1                     	;# 
   484  0EA2                     	;# 
   485  0EA3                     	;# 
   486  0EA4                     	;# 
   487  0EA5                     	;# 
   488  0EA6                     	;# 
   489  0EA7                     	;# 
   490  0F0F                     	;# 
   491  0F10                     	;# 
   492  0F11                     	;# 
   493  0F12                     	;# 
   494  0F13                     	;# 
   495  0F14                     	;# 
   496  0F15                     	;# 
   497  0F16                     	;# 
   498  0F17                     	;# 
   499  0F18                     	;# 
   500  0F19                     	;# 
   501  0F1A                     	;# 
   502  0F1B                     	;# 
   503  0F1C                     	;# 
   504  0F1D                     	;# 
   505  0F1E                     	;# 
   506  0F1F                     	;# 
   507  0F20                     	;# 
   508  0F21                     	;# 
   509  0F22                     	;# 
   510  0F23                     	;# 
   511  0F24                     	;# 
   512  0F25                     	;# 
   513  0F26                     	;# 
   514  0F27                     	;# 
   515  0F28                     	;# 
   516  0F29                     	;# 
   517  0F2A                     	;# 
   518  0F2B                     	;# 
   519  0F2C                     	;# 
   520  0F2D                     	;# 
   521  0F2E                     	;# 
   522  0F2F                     	;# 
   523  0F30                     	;# 
   524  0F31                     	;# 
   525  0F32                     	;# 
   526  0F33                     	;# 
   527  0F34                     	;# 
   528  0F35                     	;# 
   529  0F36                     	;# 
   530  0F37                     	;# 
   531  0FE4                     	;# 
   532  0FE5                     	;# 
   533  0FE6                     	;# 
   534  0FE7                     	;# 
   535  0FE8                     	;# 
   536  0FE9                     	;# 
   537  0FEA                     	;# 
   538  0FEB                     	;# 
   539  0FED                     	;# 
   540  0FEE                     	;# 
   541  0FEF                     	;# 
   542  0000                     	;# 
   543  0001                     	;# 
   544  0002                     	;# 
   545  0003                     	;# 
   546  0004                     	;# 
   547  0005                     	;# 
   548  0006                     	;# 
   549  0007                     	;# 
   550  0008                     	;# 
   551  0009                     	;# 
   552  000A                     	;# 
   553  000B                     	;# 
   554  000C                     	;# 
   555  000D                     	;# 
   556  000E                     	;# 
   557  0010                     	;# 
   558  0011                     	;# 
   559  0012                     	;# 
   560  0013                     	;# 
   561  0014                     	;# 
   562  0015                     	;# 
   563  0016                     	;# 
   564  0016                     	;# 
   565  0017                     	;# 
   566  0018                     	;# 
   567  0019                     	;# 
   568  001A                     	;# 
   569  001A                     	;# 
   570  001B                     	;# 
   571  001B                     	;# 
   572  001C                     	;# 
   573  001D                     	;# 
   574  001E                     	;# 
   575  001F                     	;# 
   576  008C                     	;# 
   577  008D                     	;# 
   578  008E                     	;# 
   579  0090                     	;# 
   580  0091                     	;# 
   581  0092                     	;# 
   582  0093                     	;# 
   583  0094                     	;# 
   584  0095                     	;# 
   585  0096                     	;# 
   586  0098                     	;# 
   587  0099                     	;# 
   588  009A                     	;# 
   589  009B                     	;# 
   590  009B                     	;# 
   591  009C                     	;# 
   592  009D                     	;# 
   593  009E                     	;# 
   594  009F                     	;# 
   595  010C                     	;# 
   596  010D                     	;# 
   597  010E                     	;# 
   598  0111                     	;# 
   599  0112                     	;# 
   600  0113                     	;# 
   601  0114                     	;# 
   602  0115                     	;# 
   603  0116                     	;# 
   604  0117                     	;# 
   605  0118                     	;# 
   606  0119                     	;# 
   607  011C                     	;# 
   608  018C                     	;# 
   609  018D                     	;# 
   610  018E                     	;# 
   611  0191                     	;# 
   612  0191                     	;# 
   613  0192                     	;# 
   614  0193                     	;# 
   615  0193                     	;# 
   616  0194                     	;# 
   617  0195                     	;# 
   618  0196                     	;# 
   619  0197                     	;# 
   620  0199                     	;# 
   621  0199                     	;# 
   622  0199                     	;# 
   623  019A                     	;# 
   624  019A                     	;# 
   625  019A                     	;# 
   626  019B                     	;# 
   627  019B                     	;# 
   628  019B                     	;# 
   629  019B                     	;# 
   630  019B                     	;# 
   631  019C                     	;# 
   632  019C                     	;# 
   633  019C                     	;# 
   634  019D                     	;# 
   635  019D                     	;# 
   636  019D                     	;# 
   637  019E                     	;# 
   638  019E                     	;# 
   639  019E                     	;# 
   640  019F                     	;# 
   641  019F                     	;# 
   642  019F                     	;# 
   643  019F                     	;# 
   644  019F                     	;# 
   645  020C                     	;# 
   646  020D                     	;# 
   647  020E                     	;# 
   648  0211                     	;# 
   649  0211                     	;# 
   650  0212                     	;# 
   651  0212                     	;# 
   652  0213                     	;# 
   653  0213                     	;# 
   654  0214                     	;# 
   655  0214                     	;# 
   656  0215                     	;# 
   657  0215                     	;# 
   658  0215                     	;# 
   659  0215                     	;# 
   660  0216                     	;# 
   661  0216                     	;# 
   662  0217                     	;# 
   663  0217                     	;# 
   664  028C                     	;# 
   665  028D                     	;# 
   666  028E                     	;# 
   667  0291                     	;# 
   668  0291                     	;# 
   669  0292                     	;# 
   670  0293                     	;# 
   671  0294                     	;# 
   672  0298                     	;# 
   673  0298                     	;# 
   674  0299                     	;# 
   675  029A                     	;# 
   676  029B                     	;# 
   677  029E                     	;# 
   678  030C                     	;# 
   679  030D                     	;# 
   680  030E                     	;# 
   681  038C                     	;# 
   682  038D                     	;# 
   683  038E                     	;# 
   684  0391                     	;# 
   685  0392                     	;# 
   686  0393                     	;# 
   687  0394                     	;# 
   688  0395                     	;# 
   689  0396                     	;# 
   690  0397                     	;# 
   691  0398                     	;# 
   692  0399                     	;# 
   693  040E                     	;# 
   694  0413                     	;# 
   695  0413                     	;# 
   696  0414                     	;# 
   697  0414                     	;# 
   698  0415                     	;# 
   699  0416                     	;# 
   700  0417                     	;# 
   701  0418                     	;# 
   702  041A                     	;# 
   703  041A                     	;# 
   704  041B                     	;# 
   705  041B                     	;# 
   706  041C                     	;# 
   707  041D                     	;# 
   708  041E                     	;# 
   709  041F                     	;# 
   710  0493                     	;# 
   711  0494                     	;# 
   712  0495                     	;# 
   713  0496                     	;# 
   714  049A                     	;# 
   715  049B                     	;# 
   716  049C                     	;# 
   717  049D                     	;# 
   718  058C                     	;# 
   719  058C                     	;# 
   720  058D                     	;# 
   721  058E                     	;# 
   722  058E                     	;# 
   723  058F                     	;# 
   724  0590                     	;# 
   725  0590                     	;# 
   726  0591                     	;# 
   727  0592                     	;# 
   728  0592                     	;# 
   729  0593                     	;# 
   730  0594                     	;# 
   731  0594                     	;# 
   732  0595                     	;# 
   733  0596                     	;# 
   734  0596                     	;# 
   735  0597                     	;# 
   736  0598                     	;# 
   737  0599                     	;# 
   738  059A                     	;# 
   739  059B                     	;# 
   740  059B                     	;# 
   741  059C                     	;# 
   742  059D                     	;# 
   743  060C                     	;# 
   744  060C                     	;# 
   745  060D                     	;# 
   746  060E                     	;# 
   747  060F                     	;# 
   748  060F                     	;# 
   749  0610                     	;# 
   750  0611                     	;# 
   751  0612                     	;# 
   752  0613                     	;# 
   753  0614                     	;# 
   754  0617                     	;# 
   755  0617                     	;# 
   756  0618                     	;# 
   757  0619                     	;# 
   758  061A                     	;# 
   759  061A                     	;# 
   760  061B                     	;# 
   761  061C                     	;# 
   762  0691                     	;# 
   763  0692                     	;# 
   764  0693                     	;# 
   765  0694                     	;# 
   766  0695                     	;# 
   767  0696                     	;# 
   768  0697                     	;# 
   769  0699                     	;# 
   770  069A                     	;# 
   771  0711                     	;# 
   772  0712                     	;# 
   773  0713                     	;# 
   774  0714                     	;# 
   775  0715                     	;# 
   776  0718                     	;# 
   777  0718                     	;# 
   778  0719                     	;# 
   779  071A                     	;# 
   780  071A                     	;# 
   781  071B                     	;# 
   782  071C                     	;# 
   783  071D                     	;# 
   784  0791                     	;# 
   785  0791                     	;# 
   786  0792                     	;# 
   787  0793                     	;# 
   788  0793                     	;# 
   789  0794                     	;# 
   790  0795                     	;# 
   791  0795                     	;# 
   792  0796                     	;# 
   793  0797                     	;# 
   794  0797                     	;# 
   795  0798                     	;# 
   796  0799                     	;# 
   797  079A                     	;# 
   798  080C                     	;# 
   799  080C                     	;# 
   800  080D                     	;# 
   801  080E                     	;# 
   802  080E                     	;# 
   803  080F                     	;# 
   804  0810                     	;# 
   805  0810                     	;# 
   806  0811                     	;# 
   807  0812                     	;# 
   808  0812                     	;# 
   809  0813                     	;# 
   810  0814                     	;# 
   811  0815                     	;# 
   812  0816                     	;# 
   813  0817                     	;# 
   814  0818                     	;# 
   815  0819                     	;# 
   816  081A                     	;# 
   817  081A                     	;# 
   818  081B                     	;# 
   819  081C                     	;# 
   820  081C                     	;# 
   821  081D                     	;# 
   822  088C                     	;# 
   823  088D                     	;# 
   824  088E                     	;# 
   825  088F                     	;# 
   826  088F                     	;# 
   827  0890                     	;# 
   828  0891                     	;# 
   829  0892                     	;# 
   830  0893                     	;# 
   831  0893                     	;# 
   832  0894                     	;# 
   833  0895                     	;# 
   834  0896                     	;# 
   835  0897                     	;# 
   836  0897                     	;# 
   837  0898                     	;# 
   838  0899                     	;# 
   839  0D8C                     	;# 
   840  0D8C                     	;# 
   841  0D8D                     	;# 
   842  0D8E                     	;# 
   843  0D8F                     	;# 
   844  0D8F                     	;# 
   845  0D90                     	;# 
   846  0D91                     	;# 
   847  0D92                     	;# 
   848  0D92                     	;# 
   849  0D93                     	;# 
   850  0D94                     	;# 
   851  0D95                     	;# 
   852  0D95                     	;# 
   853  0D96                     	;# 
   854  0D97                     	;# 
   855  0D98                     	;# 
   856  0D99                     	;# 
   857  0D9A                     	;# 
   858  0D9B                     	;# 
   859  0D9C                     	;# 
   860  0D9D                     	;# 
   861  0D9E                     	;# 
   862  0D9E                     	;# 
   863  0D9F                     	;# 
   864  0DA0                     	;# 
   865  0DA1                     	;# 
   866  0DA1                     	;# 
   867  0DA2                     	;# 
   868  0DA3                     	;# 
   869  0DA4                     	;# 
   870  0DA4                     	;# 
   871  0DA5                     	;# 
   872  0DA6                     	;# 
   873  0DA7                     	;# 
   874  0DA7                     	;# 
   875  0DA8                     	;# 
   876  0DA9                     	;# 
   877  0DAA                     	;# 
   878  0DAB                     	;# 
   879  0DAC                     	;# 
   880  0DAD                     	;# 
   881  0DAE                     	;# 
   882  0DAF                     	;# 
   883  0E0F                     	;# 
   884  0E10                     	;# 
   885  0E11                     	;# 
   886  0E12                     	;# 
   887  0E13                     	;# 
   888  0E14                     	;# 
   889  0E15                     	;# 
   890  0E16                     	;# 
   891  0E17                     	;# 
   892  0E18                     	;# 
   893  0E19                     	;# 
   894  0E1A                     	;# 
   895  0E1B                     	;# 
   896  0E1C                     	;# 
   897  0E1D                     	;# 
   898  0E1E                     	;# 
   899  0E1F                     	;# 
   900  0E20                     	;# 
   901  0E21                     	;# 
   902  0E22                     	;# 
   903  0E23                     	;# 
   904  0E24                     	;# 
   905  0E25                     	;# 
   906  0E26                     	;# 
   907  0E27                     	;# 
   908  0E28                     	;# 
   909  0E29                     	;# 
   910  0E2A                     	;# 
   911  0E2B                     	;# 
   912  0E2C                     	;# 
   913  0E2D                     	;# 
   914  0E2E                     	;# 
   915  0E90                     	;# 
   916  0E91                     	;# 
   917  0E92                     	;# 
   918  0E94                     	;# 
   919  0E95                     	;# 
   920  0E9C                     	;# 
   921  0E9D                     	;# 
   922  0E9E                     	;# 
   923  0E9F                     	;# 
   924  0EA0                     	;# 
   925  0EA1                     	;# 
   926  0EA2                     	;# 
   927  0EA3                     	;# 
   928  0EA4                     	;# 
   929  0EA5                     	;# 
   930  0EA6                     	;# 
   931  0EA7                     	;# 
   932  0F0F                     	;# 
   933  0F10                     	;# 
   934  0F11                     	;# 
   935  0F12                     	;# 
   936  0F13                     	;# 
   937  0F14                     	;# 
   938  0F15                     	;# 
   939  0F16                     	;# 
   940  0F17                     	;# 
   941  0F18                     	;# 
   942  0F19                     	;# 
   943  0F1A                     	;# 
   944  0F1B                     	;# 
   945  0F1C                     	;# 
   946  0F1D                     	;# 
   947  0F1E                     	;# 
   948  0F1F                     	;# 
   949  0F20                     	;# 
   950  0F21                     	;# 
   951  0F22                     	;# 
   952  0F23                     	;# 
   953  0F24                     	;# 
   954  0F25                     	;# 
   955  0F26                     	;# 
   956  0F27                     	;# 
   957  0F28                     	;# 
   958  0F29                     	;# 
   959  0F2A                     	;# 
   960  0F2B                     	;# 
   961  0F2C                     	;# 
   962  0F2D                     	;# 
   963  0F2E                     	;# 
   964  0F2F                     	;# 
   965  0F30                     	;# 
   966  0F31                     	;# 
   967  0F32                     	;# 
   968  0F33                     	;# 
   969  0F34                     	;# 
   970  0F35                     	;# 
   971  0F36                     	;# 
   972  0F37                     	;# 
   973  0FE4                     	;# 
   974  0FE5                     	;# 
   975  0FE6                     	;# 
   976  0FE7                     	;# 
   977  0FE8                     	;# 
   978  0FE9                     	;# 
   979  0FEA                     	;# 
   980  0FEB                     	;# 
   981  0FED                     	;# 
   982  0FEE                     	;# 
   983  0FEF                     	;# 
   984  0000                     	;# 
   985  0001                     	;# 
   986  0002                     	;# 
   987  0003                     	;# 
   988  0004                     	;# 
   989  0005                     	;# 
   990  0006                     	;# 
   991  0007                     	;# 
   992  0008                     	;# 
   993  0009                     	;# 
   994  000A                     	;# 
   995  000B                     	;# 
   996  000C                     	;# 
   997  000D                     	;# 
   998  000E                     	;# 
   999  0010                     	;# 
  1000  0011                     	;# 
  1001  0012                     	;# 
  1002  0013                     	;# 
  1003  0014                     	;# 
  1004  0015                     	;# 
  1005  0016                     	;# 
  1006  0016                     	;# 
  1007  0017                     	;# 
  1008  0018                     	;# 
  1009  0019                     	;# 
  1010  001A                     	;# 
  1011  001A                     	;# 
  1012  001B                     	;# 
  1013  001B                     	;# 
  1014  001C                     	;# 
  1015  001D                     	;# 
  1016  001E                     	;# 
  1017  001F                     	;# 
  1018  008C                     	;# 
  1019  008D                     	;# 
  1020  008E                     	;# 
  1021  0090                     	;# 
  1022  0091                     	;# 
  1023  0092                     	;# 
  1024  0093                     	;# 
  1025  0094                     	;# 
  1026  0095                     	;# 
  1027  0096                     	;# 
  1028  0098                     	;# 
  1029  0099                     	;# 
  1030  009A                     	;# 
  1031  009B                     	;# 
  1032  009B                     	;# 
  1033  009C                     	;# 
  1034  009D                     	;# 
  1035  009E                     	;# 
  1036  009F                     	;# 
  1037  010C                     	;# 
  1038  010D                     	;# 
  1039  010E                     	;# 
  1040  0111                     	;# 
  1041  0112                     	;# 
  1042  0113                     	;# 
  1043  0114                     	;# 
  1044  0115                     	;# 
  1045  0116                     	;# 
  1046  0117                     	;# 
  1047  0118                     	;# 
  1048  0119                     	;# 
  1049  011C                     	;# 
  1050  018C                     	;# 
  1051  018D                     	;# 
  1052  018E                     	;# 
  1053  0191                     	;# 
  1054  0191                     	;# 
  1055  0192                     	;# 
  1056  0193                     	;# 
  1057  0193                     	;# 
  1058  0194                     	;# 
  1059  0195                     	;# 
  1060  0196                     	;# 
  1061  0197                     	;# 
  1062  0199                     	;# 
  1063  0199                     	;# 
  1064  0199                     	;# 
  1065  019A                     	;# 
  1066  019A                     	;# 
  1067  019A                     	;# 
  1068  019B                     	;# 
  1069  019B                     	;# 
  1070  019B                     	;# 
  1071  019B                     	;# 
  1072  019B                     	;# 
  1073  019C                     	;# 
  1074  019C                     	;# 
  1075  019C                     	;# 
  1076  019D                     	;# 
  1077  019D                     	;# 
  1078  019D                     	;# 
  1079  019E                     	;# 
  1080  019E                     	;# 
  1081  019E                     	;# 
  1082  019F                     	;# 
  1083  019F                     	;# 
  1084  019F                     	;# 
  1085  019F                     	;# 
  1086  019F                     	;# 
  1087  020C                     	;# 
  1088  020D                     	;# 
  1089  020E                     	;# 
  1090  0211                     	;# 
  1091  0211                     	;# 
  1092  0212                     	;# 
  1093  0212                     	;# 
  1094  0213                     	;# 
  1095  0213                     	;# 
  1096  0214                     	;# 
  1097  0214                     	;# 
  1098  0215                     	;# 
  1099  0215                     	;# 
  1100  0215                     	;# 
  1101  0215                     	;# 
  1102  0216                     	;# 
  1103  0216                     	;# 
  1104  0217                     	;# 
  1105  0217                     	;# 
  1106  028C                     	;# 
  1107  028D                     	;# 
  1108  028E                     	;# 
  1109  0291                     	;# 
  1110  0291                     	;# 
  1111  0292                     	;# 
  1112  0293                     	;# 
  1113  0294                     	;# 
  1114  0298                     	;# 
  1115  0298                     	;# 
  1116  0299                     	;# 
  1117  029A                     	;# 
  1118  029B                     	;# 
  1119  029E                     	;# 
  1120  030C                     	;# 
  1121  030D                     	;# 
  1122  030E                     	;# 
  1123  038C                     	;# 
  1124  038D                     	;# 
  1125  038E                     	;# 
  1126  0391                     	;# 
  1127  0392                     	;# 
  1128  0393                     	;# 
  1129  0394                     	;# 
  1130  0395                     	;# 
  1131  0396                     	;# 
  1132  0397                     	;# 
  1133  0398                     	;# 
  1134  0399                     	;# 
  1135  040E                     	;# 
  1136  0413                     	;# 
  1137  0413                     	;# 
  1138  0414                     	;# 
  1139  0414                     	;# 
  1140  0415                     	;# 
  1141  0416                     	;# 
  1142  0417                     	;# 
  1143  0418                     	;# 
  1144  041A                     	;# 
  1145  041A                     	;# 
  1146  041B                     	;# 
  1147  041B                     	;# 
  1148  041C                     	;# 
  1149  041D                     	;# 
  1150  041E                     	;# 
  1151  041F                     	;# 
  1152  0493                     	;# 
  1153  0494                     	;# 
  1154  0495                     	;# 
  1155  0496                     	;# 
  1156  049A                     	;# 
  1157  049B                     	;# 
  1158  049C                     	;# 
  1159  049D                     	;# 
  1160  058C                     	;# 
  1161  058C                     	;# 
  1162  058D                     	;# 
  1163  058E                     	;# 
  1164  058E                     	;# 
  1165  058F                     	;# 
  1166  0590                     	;# 
  1167  0590                     	;# 
  1168  0591                     	;# 
  1169  0592                     	;# 
  1170  0592                     	;# 
  1171  0593                     	;# 
  1172  0594                     	;# 
  1173  0594                     	;# 
  1174  0595                     	;# 
  1175  0596                     	;# 
  1176  0596                     	;# 
  1177  0597                     	;# 
  1178  0598                     	;# 
  1179  0599                     	;# 
  1180  059A                     	;# 
  1181  059B                     	;# 
  1182  059B                     	;# 
  1183  059C                     	;# 
  1184  059D                     	;# 
  1185  060C                     	;# 
  1186  060C                     	;# 
  1187  060D                     	;# 
  1188  060E                     	;# 
  1189  060F                     	;# 
  1190  060F                     	;# 
  1191  0610                     	;# 
  1192  0611                     	;# 
  1193  0612                     	;# 
  1194  0613                     	;# 
  1195  0614                     	;# 
  1196  0617                     	;# 
  1197  0617                     	;# 
  1198  0618                     	;# 
  1199  0619                     	;# 
  1200  061A                     	;# 
  1201  061A                     	;# 
  1202  061B                     	;# 
  1203  061C                     	;# 
  1204  0691                     	;# 
  1205  0692                     	;# 
  1206  0693                     	;# 
  1207  0694                     	;# 
  1208  0695                     	;# 
  1209  0696                     	;# 
  1210  0697                     	;# 
  1211  0699                     	;# 
  1212  069A                     	;# 
  1213  0711                     	;# 
  1214  0712                     	;# 
  1215  0713                     	;# 
  1216  0714                     	;# 
  1217  0715                     	;# 
  1218  0718                     	;# 
  1219  0718                     	;# 
  1220  0719                     	;# 
  1221  071A                     	;# 
  1222  071A                     	;# 
  1223  071B                     	;# 
  1224  071C                     	;# 
  1225  071D                     	;# 
  1226  0791                     	;# 
  1227  0791                     	;# 
  1228  0792                     	;# 
  1229  0793                     	;# 
  1230  0793                     	;# 
  1231  0794                     	;# 
  1232  0795                     	;# 
  1233  0795                     	;# 
  1234  0796                     	;# 
  1235  0797                     	;# 
  1236  0797                     	;# 
  1237  0798                     	;# 
  1238  0799                     	;# 
  1239  079A                     	;# 
  1240  080C                     	;# 
  1241  080C                     	;# 
  1242  080D                     	;# 
  1243  080E                     	;# 
  1244  080E                     	;# 
  1245  080F                     	;# 
  1246  0810                     	;# 
  1247  0810                     	;# 
  1248  0811                     	;# 
  1249  0812                     	;# 
  1250  0812                     	;# 
  1251  0813                     	;# 
  1252  0814                     	;# 
  1253  0815                     	;# 
  1254  0816                     	;# 
  1255  0817                     	;# 
  1256  0818                     	;# 
  1257  0819                     	;# 
  1258  081A                     	;# 
  1259  081A                     	;# 
  1260  081B                     	;# 
  1261  081C                     	;# 
  1262  081C                     	;# 
  1263  081D                     	;# 
  1264  088C                     	;# 
  1265  088D                     	;# 
  1266  088E                     	;# 
  1267  088F                     	;# 
  1268  088F                     	;# 
  1269  0890                     	;# 
  1270  0891                     	;# 
  1271  0892                     	;# 
  1272  0893                     	;# 
  1273  0893                     	;# 
  1274  0894                     	;# 
  1275  0895                     	;# 
  1276  0896                     	;# 
  1277  0897                     	;# 
  1278  0897                     	;# 
  1279  0898                     	;# 
  1280  0899                     	;# 
  1281  0D8C                     	;# 
  1282  0D8C                     	;# 
  1283  0D8D                     	;# 
  1284  0D8E                     	;# 
  1285  0D8F                     	;# 
  1286  0D8F                     	;# 
  1287  0D90                     	;# 
  1288  0D91                     	;# 
  1289  0D92                     	;# 
  1290  0D92                     	;# 
  1291  0D93                     	;# 
  1292  0D94                     	;# 
  1293  0D95                     	;# 
  1294  0D95                     	;# 
  1295  0D96                     	;# 
  1296  0D97                     	;# 
  1297  0D98                     	;# 
  1298  0D99                     	;# 
  1299  0D9A                     	;# 
  1300  0D9B                     	;# 
  1301  0D9C                     	;# 
  1302  0D9D                     	;# 
  1303  0D9E                     	;# 
  1304  0D9E                     	;# 
  1305  0D9F                     	;# 
  1306  0DA0                     	;# 
  1307  0DA1                     	;# 
  1308  0DA1                     	;# 
  1309  0DA2                     	;# 
  1310  0DA3                     	;# 
  1311  0DA4                     	;# 
  1312  0DA4                     	;# 
  1313  0DA5                     	;# 
  1314  0DA6                     	;# 
  1315  0DA7                     	;# 
  1316  0DA7                     	;# 
  1317  0DA8                     	;# 
  1318  0DA9                     	;# 
  1319  0DAA                     	;# 
  1320  0DAB                     	;# 
  1321  0DAC                     	;# 
  1322  0DAD                     	;# 
  1323  0DAE                     	;# 
  1324  0DAF                     	;# 
  1325  0E0F                     	;# 
  1326  0E10                     	;# 
  1327  0E11                     	;# 
  1328  0E12                     	;# 
  1329  0E13                     	;# 
  1330  0E14                     	;# 
  1331  0E15                     	;# 
  1332  0E16                     	;# 
  1333  0E17                     	;# 
  1334  0E18                     	;# 
  1335  0E19                     	;# 
  1336  0E1A                     	;# 
  1337  0E1B                     	;# 
  1338  0E1C                     	;# 
  1339  0E1D                     	;# 
  1340  0E1E                     	;# 
  1341  0E1F                     	;# 
  1342  0E20                     	;# 
  1343  0E21                     	;# 
  1344  0E22                     	;# 
  1345  0E23                     	;# 
  1346  0E24                     	;# 
  1347  0E25                     	;# 
  1348  0E26                     	;# 
  1349  0E27                     	;# 
  1350  0E28                     	;# 
  1351  0E29                     	;# 
  1352  0E2A                     	;# 
  1353  0E2B                     	;# 
  1354  0E2C                     	;# 
  1355  0E2D                     	;# 
  1356  0E2E                     	;# 
  1357  0E90                     	;# 
  1358  0E91                     	;# 
  1359  0E92                     	;# 
  1360  0E94                     	;# 
  1361  0E95                     	;# 
  1362  0E9C                     	;# 
  1363  0E9D                     	;# 
  1364  0E9E                     	;# 
  1365  0E9F                     	;# 
  1366  0EA0                     	;# 
  1367  0EA1                     	;# 
  1368  0EA2                     	;# 
  1369  0EA3                     	;# 
  1370  0EA4                     	;# 
  1371  0EA5                     	;# 
  1372  0EA6                     	;# 
  1373  0EA7                     	;# 
  1374  0F0F                     	;# 
  1375  0F10                     	;# 
  1376  0F11                     	;# 
  1377  0F12                     	;# 
  1378  0F13                     	;# 
  1379  0F14                     	;# 
  1380  0F15                     	;# 
  1381  0F16                     	;# 
  1382  0F17                     	;# 
  1383  0F18                     	;# 
  1384  0F19                     	;# 
  1385  0F1A                     	;# 
  1386  0F1B                     	;# 
  1387  0F1C                     	;# 
  1388  0F1D                     	;# 
  1389  0F1E                     	;# 
  1390  0F1F                     	;# 
  1391  0F20                     	;# 
  1392  0F21                     	;# 
  1393  0F22                     	;# 
  1394  0F23                     	;# 
  1395  0F24                     	;# 
  1396  0F25                     	;# 
  1397  0F26                     	;# 
  1398  0F27                     	;# 
  1399  0F28                     	;# 
  1400  0F29                     	;# 
  1401  0F2A                     	;# 
  1402  0F2B                     	;# 
  1403  0F2C                     	;# 
  1404  0F2D                     	;# 
  1405  0F2E                     	;# 
  1406  0F2F                     	;# 
  1407  0F30                     	;# 
  1408  0F31                     	;# 
  1409  0F32                     	;# 
  1410  0F33                     	;# 
  1411  0F34                     	;# 
  1412  0F35                     	;# 
  1413  0F36                     	;# 
  1414  0F37                     	;# 
  1415  0FE4                     	;# 
  1416  0FE5                     	;# 
  1417  0FE6                     	;# 
  1418  0FE7                     	;# 
  1419  0FE8                     	;# 
  1420  0FE9                     	;# 
  1421  0FEA                     	;# 
  1422  0FEB                     	;# 
  1423  0FED                     	;# 
  1424  0FEE                     	;# 
  1425  0FEF                     	;# 
  1426  0000                     	;# 
  1427  0001                     	;# 
  1428  0002                     	;# 
  1429  0003                     	;# 
  1430  0004                     	;# 
  1431  0005                     	;# 
  1432  0006                     	;# 
  1433  0007                     	;# 
  1434  0008                     	;# 
  1435  0009                     	;# 
  1436  000A                     	;# 
  1437  000B                     	;# 
  1438  000C                     	;# 
  1439  000D                     	;# 
  1440  000E                     	;# 
  1441  0010                     	;# 
  1442  0011                     	;# 
  1443  0012                     	;# 
  1444  0013                     	;# 
  1445  0014                     	;# 
  1446  0015                     	;# 
  1447  0016                     	;# 
  1448  0016                     	;# 
  1449  0017                     	;# 
  1450  0018                     	;# 
  1451  0019                     	;# 
  1452  001A                     	;# 
  1453  001A                     	;# 
  1454  001B                     	;# 
  1455  001B                     	;# 
  1456  001C                     	;# 
  1457  001D                     	;# 
  1458  001E                     	;# 
  1459  001F                     	;# 
  1460  008C                     	;# 
  1461  008D                     	;# 
  1462  008E                     	;# 
  1463  0090                     	;# 
  1464  0091                     	;# 
  1465  0092                     	;# 
  1466  0093                     	;# 
  1467  0094                     	;# 
  1468  0095                     	;# 
  1469  0096                     	;# 
  1470  0098                     	;# 
  1471  0099                     	;# 
  1472  009A                     	;# 
  1473  009B                     	;# 
  1474  009B                     	;# 
  1475  009C                     	;# 
  1476  009D                     	;# 
  1477  009E                     	;# 
  1478  009F                     	;# 
  1479  010C                     	;# 
  1480  010D                     	;# 
  1481  010E                     	;# 
  1482  0111                     	;# 
  1483  0112                     	;# 
  1484  0113                     	;# 
  1485  0114                     	;# 
  1486  0115                     	;# 
  1487  0116                     	;# 
  1488  0117                     	;# 
  1489  0118                     	;# 
  1490  0119                     	;# 
  1491  011C                     	;# 
  1492  018C                     	;# 
  1493  018D                     	;# 
  1494  018E                     	;# 
  1495  0191                     	;# 
  1496  0191                     	;# 
  1497  0192                     	;# 
  1498  0193                     	;# 
  1499  0193                     	;# 
  1500  0194                     	;# 
  1501  0195                     	;# 
  1502  0196                     	;# 
  1503  0197                     	;# 
  1504  0199                     	;# 
  1505  0199                     	;# 
  1506  0199                     	;# 
  1507  019A                     	;# 
  1508  019A                     	;# 
  1509  019A                     	;# 
  1510  019B                     	;# 
  1511  019B                     	;# 
  1512  019B                     	;# 
  1513  019B                     	;# 
  1514  019B                     	;# 
  1515  019C                     	;# 
  1516  019C                     	;# 
  1517  019C                     	;# 
  1518  019D                     	;# 
  1519  019D                     	;# 
  1520  019D                     	;# 
  1521  019E                     	;# 
  1522  019E                     	;# 
  1523  019E                     	;# 
  1524  019F                     	;# 
  1525  019F                     	;# 
  1526  019F                     	;# 
  1527  019F                     	;# 
  1528  019F                     	;# 
  1529  020C                     	;# 
  1530  020D                     	;# 
  1531  020E                     	;# 
  1532  0211                     	;# 
  1533  0211                     	;# 
  1534  0212                     	;# 
  1535  0212                     	;# 
  1536  0213                     	;# 
  1537  0213                     	;# 
  1538  0214                     	;# 
  1539  0214                     	;# 
  1540  0215                     	;# 
  1541  0215                     	;# 
  1542  0215                     	;# 
  1543  0215                     	;# 
  1544  0216                     	;# 
  1545  0216                     	;# 
  1546  0217                     	;# 
  1547  0217                     	;# 
  1548  028C                     	;# 
  1549  028D                     	;# 
  1550  028E                     	;# 
  1551  0291                     	;# 
  1552  0291                     	;# 
  1553  0292                     	;# 
  1554  0293                     	;# 
  1555  0294                     	;# 
  1556  0298                     	;# 
  1557  0298                     	;# 
  1558  0299                     	;# 
  1559  029A                     	;# 
  1560  029B                     	;# 
  1561  029E                     	;# 
  1562  030C                     	;# 
  1563  030D                     	;# 
  1564  030E                     	;# 
  1565  038C                     	;# 
  1566  038D                     	;# 
  1567  038E                     	;# 
  1568  0391                     	;# 
  1569  0392                     	;# 
  1570  0393                     	;# 
  1571  0394                     	;# 
  1572  0395                     	;# 
  1573  0396                     	;# 
  1574  0397                     	;# 
  1575  0398                     	;# 
  1576  0399                     	;# 
  1577  040E                     	;# 
  1578  0413                     	;# 
  1579  0413                     	;# 
  1580  0414                     	;# 
  1581  0414                     	;# 
  1582  0415                     	;# 
  1583  0416                     	;# 
  1584  0417                     	;# 
  1585  0418                     	;# 
  1586  041A                     	;# 
  1587  041A                     	;# 
  1588  041B                     	;# 
  1589  041B                     	;# 
  1590  041C                     	;# 
  1591  041D                     	;# 
  1592  041E                     	;# 
  1593  041F                     	;# 
  1594  0493                     	;# 
  1595  0494                     	;# 
  1596  0495                     	;# 
  1597  0496                     	;# 
  1598  049A                     	;# 
  1599  049B                     	;# 
  1600  049C                     	;# 
  1601  049D                     	;# 
  1602  058C                     	;# 
  1603  058C                     	;# 
  1604  058D                     	;# 
  1605  058E                     	;# 
  1606  058E                     	;# 
  1607  058F                     	;# 
  1608  0590                     	;# 
  1609  0590                     	;# 
  1610  0591                     	;# 
  1611  0592                     	;# 
  1612  0592                     	;# 
  1613  0593                     	;# 
  1614  0594                     	;# 
  1615  0594                     	;# 
  1616  0595                     	;# 
  1617  0596                     	;# 
  1618  0596                     	;# 
  1619  0597                     	;# 
  1620  0598                     	;# 
  1621  0599                     	;# 
  1622  059A                     	;# 
  1623  059B                     	;# 
  1624  059B                     	;# 
  1625  059C                     	;# 
  1626  059D                     	;# 
  1627  060C                     	;# 
  1628  060C                     	;# 
  1629  060D                     	;# 
  1630  060E                     	;# 
  1631  060F                     	;# 
  1632  060F                     	;# 
  1633  0610                     	;# 
  1634  0611                     	;# 
  1635  0612                     	;# 
  1636  0613                     	;# 
  1637  0614                     	;# 
  1638  0617                     	;# 
  1639  0617                     	;# 
  1640  0618                     	;# 
  1641  0619                     	;# 
  1642  061A                     	;# 
  1643  061A                     	;# 
  1644  061B                     	;# 
  1645  061C                     	;# 
  1646  0691                     	;# 
  1647  0692                     	;# 
  1648  0693                     	;# 
  1649  0694                     	;# 
  1650  0695                     	;# 
  1651  0696                     	;# 
  1652  0697                     	;# 
  1653  0699                     	;# 
  1654  069A                     	;# 
  1655  0711                     	;# 
  1656  0712                     	;# 
  1657  0713                     	;# 
  1658  0714                     	;# 
  1659  0715                     	;# 
  1660  0718                     	;# 
  1661  0718                     	;# 
  1662  0719                     	;# 
  1663  071A                     	;# 
  1664  071A                     	;# 
  1665  071B                     	;# 
  1666  071C                     	;# 
  1667  071D                     	;# 
  1668  0791                     	;# 
  1669  0791                     	;# 
  1670  0792                     	;# 
  1671  0793                     	;# 
  1672  0793                     	;# 
  1673  0794                     	;# 
  1674  0795                     	;# 
  1675  0795                     	;# 
  1676  0796                     	;# 
  1677  0797                     	;# 
  1678  0797                     	;# 
  1679  0798                     	;# 
  1680  0799                     	;# 
  1681  079A                     	;# 
  1682  080C                     	;# 
  1683  080C                     	;# 
  1684  080D                     	;# 
  1685  080E                     	;# 
  1686  080E                     	;# 
  1687  080F                     	;# 
  1688  0810                     	;# 
  1689  0810                     	;# 
  1690  0811                     	;# 
  1691  0812                     	;# 
  1692  0812                     	;# 
  1693  0813                     	;# 
  1694  0814                     	;# 
  1695  0815                     	;# 
  1696  0816                     	;# 
  1697  0817                     	;# 
  1698  0818                     	;# 
  1699  0819                     	;# 
  1700  081A                     	;# 
  1701  081A                     	;# 
  1702  081B                     	;# 
  1703  081C                     	;# 
  1704  081C                     	;# 
  1705  081D                     	;# 
  1706  088C                     	;# 
  1707  088D                     	;# 
  1708  088E                     	;# 
  1709  088F                     	;# 
  1710  088F                     	;# 
  1711  0890                     	;# 
  1712  0891                     	;# 
  1713  0892                     	;# 
  1714  0893                     	;# 
  1715  0893                     	;# 
  1716  0894                     	;# 
  1717  0895                     	;# 
  1718  0896                     	;# 
  1719  0897                     	;# 
  1720  0897                     	;# 
  1721  0898                     	;# 
  1722  0899                     	;# 
  1723  0D8C                     	;# 
  1724  0D8C                     	;# 
  1725  0D8D                     	;# 
  1726  0D8E                     	;# 
  1727  0D8F                     	;# 
  1728  0D8F                     	;# 
  1729  0D90                     	;# 
  1730  0D91                     	;# 
  1731  0D92                     	;# 
  1732  0D92                     	;# 
  1733  0D93                     	;# 
  1734  0D94                     	;# 
  1735  0D95                     	;# 
  1736  0D95                     	;# 
  1737  0D96                     	;# 
  1738  0D97                     	;# 
  1739  0D98                     	;# 
  1740  0D99                     	;# 
  1741  0D9A                     	;# 
  1742  0D9B                     	;# 
  1743  0D9C                     	;# 
  1744  0D9D                     	;# 
  1745  0D9E                     	;# 
  1746  0D9E                     	;# 
  1747  0D9F                     	;# 
  1748  0DA0                     	;# 
  1749  0DA1                     	;# 
  1750  0DA1                     	;# 
  1751  0DA2                     	;# 
  1752  0DA3                     	;# 
  1753  0DA4                     	;# 
  1754  0DA4                     	;# 
  1755  0DA5                     	;# 
  1756  0DA6                     	;# 
  1757  0DA7                     	;# 
  1758  0DA7                     	;# 
  1759  0DA8                     	;# 
  1760  0DA9                     	;# 
  1761  0DAA                     	;# 
  1762  0DAB                     	;# 
  1763  0DAC                     	;# 
  1764  0DAD                     	;# 
  1765  0DAE                     	;# 
  1766  0DAF                     	;# 
  1767  0E0F                     	;# 
  1768  0E10                     	;# 
  1769  0E11                     	;# 
  1770  0E12                     	;# 
  1771  0E13                     	;# 
  1772  0E14                     	;# 
  1773  0E15                     	;# 
  1774  0E16                     	;# 
  1775  0E17                     	;# 
  1776  0E18                     	;# 
  1777  0E19                     	;# 
  1778  0E1A                     	;# 
  1779  0E1B                     	;# 
  1780  0E1C                     	;# 
  1781  0E1D                     	;# 
  1782  0E1E                     	;# 
  1783  0E1F                     	;# 
  1784  0E20                     	;# 
  1785  0E21                     	;# 
  1786  0E22                     	;# 
  1787  0E23                     	;# 
  1788  0E24                     	;# 
  1789  0E25                     	;# 
  1790  0E26                     	;# 
  1791  0E27                     	;# 
  1792  0E28                     	;# 
  1793  0E29                     	;# 
  1794  0E2A                     	;# 
  1795  0E2B                     	;# 
  1796  0E2C                     	;# 
  1797  0E2D                     	;# 
  1798  0E2E                     	;# 
  1799  0E90                     	;# 
  1800  0E91                     	;# 
  1801  0E92                     	;# 
  1802  0E94                     	;# 
  1803  0E95                     	;# 
  1804  0E9C                     	;# 
  1805  0E9D                     	;# 
  1806  0E9E                     	;# 
  1807  0E9F                     	;# 
  1808  0EA0                     	;# 
  1809  0EA1                     	;# 
  1810  0EA2                     	;# 
  1811  0EA3                     	;# 
  1812  0EA4                     	;# 
  1813  0EA5                     	;# 
  1814  0EA6                     	;# 
  1815  0EA7                     	;# 
  1816  0F0F                     	;# 
  1817  0F10                     	;# 
  1818  0F11                     	;# 
  1819  0F12                     	;# 
  1820  0F13                     	;# 
  1821  0F14                     	;# 
  1822  0F15                     	;# 
  1823  0F16                     	;# 
  1824  0F17                     	;# 
  1825  0F18                     	;# 
  1826  0F19                     	;# 
  1827  0F1A                     	;# 
  1828  0F1B                     	;# 
  1829  0F1C                     	;# 
  1830  0F1D                     	;# 
  1831  0F1E                     	;# 
  1832  0F1F                     	;# 
  1833  0F20                     	;# 
  1834  0F21                     	;# 
  1835  0F22                     	;# 
  1836  0F23                     	;# 
  1837  0F24                     	;# 
  1838  0F25                     	;# 
  1839  0F26                     	;# 
  1840  0F27                     	;# 
  1841  0F28                     	;# 
  1842  0F29                     	;# 
  1843  0F2A                     	;# 
  1844  0F2B                     	;# 
  1845  0F2C                     	;# 
  1846  0F2D                     	;# 
  1847  0F2E                     	;# 
  1848  0F2F                     	;# 
  1849  0F30                     	;# 
  1850  0F31                     	;# 
  1851  0F32                     	;# 
  1852  0F33                     	;# 
  1853  0F34                     	;# 
  1854  0F35                     	;# 
  1855  0F36                     	;# 
  1856  0F37                     	;# 
  1857  0FE4                     	;# 
  1858  0FE5                     	;# 
  1859  0FE6                     	;# 
  1860  0FE7                     	;# 
  1861  0FE8                     	;# 
  1862  0FE9                     	;# 
  1863  0FEA                     	;# 
  1864  0FEB                     	;# 
  1865  0FED                     	;# 
  1866  0FEE                     	;# 
  1867  0FEF                     	;# 
  1868  0000                     	;# 
  1869  0001                     	;# 
  1870  0002                     	;# 
  1871  0003                     	;# 
  1872  0004                     	;# 
  1873  0005                     	;# 
  1874  0006                     	;# 
  1875  0007                     	;# 
  1876  0008                     	;# 
  1877  0009                     	;# 
  1878  000A                     	;# 
  1879  000B                     	;# 
  1880  000C                     	;# 
  1881  000D                     	;# 
  1882  000E                     	;# 
  1883  0010                     	;# 
  1884  0011                     	;# 
  1885  0012                     	;# 
  1886  0013                     	;# 
  1887  0014                     	;# 
  1888  0015                     	;# 
  1889  0016                     	;# 
  1890  0016                     	;# 
  1891  0017                     	;# 
  1892  0018                     	;# 
  1893  0019                     	;# 
  1894  001A                     	;# 
  1895  001A                     	;# 
  1896  001B                     	;# 
  1897  001B                     	;# 
  1898  001C                     	;# 
  1899  001D                     	;# 
  1900  001E                     	;# 
  1901  001F                     	;# 
  1902  008C                     	;# 
  1903  008D                     	;# 
  1904  008E                     	;# 
  1905  0090                     	;# 
  1906  0091                     	;# 
  1907  0092                     	;# 
  1908  0093                     	;# 
  1909  0094                     	;# 
  1910  0095                     	;# 
  1911  0096                     	;# 
  1912  0098                     	;# 
  1913  0099                     	;# 
  1914  009A                     	;# 
  1915  009B                     	;# 
  1916  009B                     	;# 
  1917  009C                     	;# 
  1918  009D                     	;# 
  1919  009E                     	;# 
  1920  009F                     	;# 
  1921  010C                     	;# 
  1922  010D                     	;# 
  1923  010E                     	;# 
  1924  0111                     	;# 
  1925  0112                     	;# 
  1926  0113                     	;# 
  1927  0114                     	;# 
  1928  0115                     	;# 
  1929  0116                     	;# 
  1930  0117                     	;# 
  1931  0118                     	;# 
  1932  0119                     	;# 
  1933  011C                     	;# 
  1934  018C                     	;# 
  1935  018D                     	;# 
  1936  018E                     	;# 
  1937  0191                     	;# 
  1938  0191                     	;# 
  1939  0192                     	;# 
  1940  0193                     	;# 
  1941  0193                     	;# 
  1942  0194                     	;# 
  1943  0195                     	;# 
  1944  0196                     	;# 
  1945  0197                     	;# 
  1946  0199                     	;# 
  1947  0199                     	;# 
  1948  0199                     	;# 
  1949  019A                     	;# 
  1950  019A                     	;# 
  1951  019A                     	;# 
  1952  019B                     	;# 
  1953  019B                     	;# 
  1954  019B                     	;# 
  1955  019B                     	;# 
  1956  019B                     	;# 
  1957  019C                     	;# 
  1958  019C                     	;# 
  1959  019C                     	;# 
  1960  019D                     	;# 
  1961  019D                     	;# 
  1962  019D                     	;# 
  1963  019E                     	;# 
  1964  019E                     	;# 
  1965  019E                     	;# 
  1966  019F                     	;# 
  1967  019F                     	;# 
  1968  019F                     	;# 
  1969  019F                     	;# 
  1970  019F                     	;# 
  1971  020C                     	;# 
  1972  020D                     	;# 
  1973  020E                     	;# 
  1974  0211                     	;# 
  1975  0211                     	;# 
  1976  0212                     	;# 
  1977  0212                     	;# 
  1978  0213                     	;# 
  1979  0213                     	;# 
  1980  0214                     	;# 
  1981  0214                     	;# 
  1982  0215                     	;# 
  1983  0215                     	;# 
  1984  0215                     	;# 
  1985  0215                     	;# 
  1986  0216                     	;# 
  1987  0216                     	;# 
  1988  0217                     	;# 
  1989  0217                     	;# 
  1990  028C                     	;# 
  1991  028D                     	;# 
  1992  028E                     	;# 
  1993  0291                     	;# 
  1994  0291                     	;# 
  1995  0292                     	;# 
  1996  0293                     	;# 
  1997  0294                     	;# 
  1998  0298                     	;# 
  1999  0298                     	;# 
  2000  0299                     	;# 
  2001  029A                     	;# 
  2002  029B                     	;# 
  2003  029E                     	;# 
  2004  030C                     	;# 
  2005  030D                     	;# 
  2006  030E                     	;# 
  2007  038C                     	;# 
  2008  038D                     	;# 
  2009  038E                     	;# 
  2010  0391                     	;# 
  2011  0392                     	;# 
  2012  0393                     	;# 
  2013  0394                     	;# 
  2014  0395                     	;# 
  2015  0396                     	;# 
  2016  0397                     	;# 
  2017  0398                     	;# 
  2018  0399                     	;# 
  2019  040E                     	;# 
  2020  0413                     	;# 
  2021  0413                     	;# 
  2022  0414                     	;# 
  2023  0414                     	;# 
  2024  0415                     	;# 
  2025  0416                     	;# 
  2026  0417                     	;# 
  2027  0418                     	;# 
  2028  041A                     	;# 
  2029  041A                     	;# 
  2030  041B                     	;# 
  2031  041B                     	;# 
  2032  041C                     	;# 
  2033  041D                     	;# 
  2034  041E                     	;# 
  2035  041F                     	;# 
  2036  0493                     	;# 
  2037  0494                     	;# 
  2038  0495                     	;# 
  2039  0496                     	;# 
  2040  049A                     	;# 
  2041  049B                     	;# 
  2042  049C                     	;# 
  2043  049D                     	;# 
  2044  058C                     	;# 
  2045  058C                     	;# 
  2046  058D                     	;# 
  2047  058E                     	;# 
  2048  058E                     	;# 
  2049  058F                     	;# 
  2050  0590                     	;# 
  2051  0590                     	;# 
  2052  0591                     	;# 
  2053  0592                     	;# 
  2054  0592                     	;# 
  2055  0593                     	;# 
  2056  0594                     	;# 
  2057  0594                     	;# 
  2058  0595                     	;# 
  2059  0596                     	;# 
  2060  0596                     	;# 
  2061  0597                     	;# 
  2062  0598                     	;# 
  2063  0599                     	;# 
  2064  059A                     	;# 
  2065  059B                     	;# 
  2066  059B                     	;# 
  2067  059C                     	;# 
  2068  059D                     	;# 
  2069  060C                     	;# 
  2070  060C                     	;# 
  2071  060D                     	;# 
  2072  060E                     	;# 
  2073  060F                     	;# 
  2074  060F                     	;# 
  2075  0610                     	;# 
  2076  0611                     	;# 
  2077  0612                     	;# 
  2078  0613                     	;# 
  2079  0614                     	;# 
  2080  0617                     	;# 
  2081  0617                     	;# 
  2082  0618                     	;# 
  2083  0619                     	;# 
  2084  061A                     	;# 
  2085  061A                     	;# 
  2086  061B                     	;# 
  2087  061C                     	;# 
  2088  0691                     	;# 
  2089  0692                     	;# 
  2090  0693                     	;# 
  2091  0694                     	;# 
  2092  0695                     	;# 
  2093  0696                     	;# 
  2094  0697                     	;# 
  2095  0699                     	;# 
  2096  069A                     	;# 
  2097  0711                     	;# 
  2098  0712                     	;# 
  2099  0713                     	;# 
  2100  0714                     	;# 
  2101  0715                     	;# 
  2102  0718                     	;# 
  2103  0718                     	;# 
  2104  0719                     	;# 
  2105  071A                     	;# 
  2106  071A                     	;# 
  2107  071B                     	;# 
  2108  071C                     	;# 
  2109  071D                     	;# 
  2110  0791                     	;# 
  2111  0791                     	;# 
  2112  0792                     	;# 
  2113  0793                     	;# 
  2114  0793                     	;# 
  2115  0794                     	;# 
  2116  0795                     	;# 
  2117  0795                     	;# 
  2118  0796                     	;# 
  2119  0797                     	;# 
  2120  0797                     	;# 
  2121  0798                     	;# 
  2122  0799                     	;# 
  2123  079A                     	;# 
  2124  080C                     	;# 
  2125  080C                     	;# 
  2126  080D                     	;# 
  2127  080E                     	;# 
  2128  080E                     	;# 
  2129  080F                     	;# 
  2130  0810                     	;# 
  2131  0810                     	;# 
  2132  0811                     	;# 
  2133  0812                     	;# 
  2134  0812                     	;# 
  2135  0813                     	;# 
  2136  0814                     	;# 
  2137  0815                     	;# 
  2138  0816                     	;# 
  2139  0817                     	;# 
  2140  0818                     	;# 
  2141  0819                     	;# 
  2142  081A                     	;# 
  2143  081A                     	;# 
  2144  081B                     	;# 
  2145  081C                     	;# 
  2146  081C                     	;# 
  2147  081D                     	;# 
  2148  088C                     	;# 
  2149  088D                     	;# 
  2150  088E                     	;# 
  2151  088F                     	;# 
  2152  088F                     	;# 
  2153  0890                     	;# 
  2154  0891                     	;# 
  2155  0892                     	;# 
  2156  0893                     	;# 
  2157  0893                     	;# 
  2158  0894                     	;# 
  2159  0895                     	;# 
  2160  0896                     	;# 
  2161  0897                     	;# 
  2162  0897                     	;# 
  2163  0898                     	;# 
  2164  0899                     	;# 
  2165  0D8C                     	;# 
  2166  0D8C                     	;# 
  2167  0D8D                     	;# 
  2168  0D8E                     	;# 
  2169  0D8F                     	;# 
  2170  0D8F                     	;# 
  2171  0D90                     	;# 
  2172  0D91                     	;# 
  2173  0D92                     	;# 
  2174  0D92                     	;# 
  2175  0D93                     	;# 
  2176  0D94                     	;# 
  2177  0D95                     	;# 
  2178  0D95                     	;# 
  2179  0D96                     	;# 
  2180  0D97                     	;# 
  2181  0D98                     	;# 
  2182  0D99                     	;# 
  2183  0D9A                     	;# 
  2184  0D9B                     	;# 
  2185  0D9C                     	;# 
  2186  0D9D                     	;# 
  2187  0D9E                     	;# 
  2188  0D9E                     	;# 
  2189  0D9F                     	;# 
  2190  0DA0                     	;# 
  2191  0DA1                     	;# 
  2192  0DA1                     	;# 
  2193  0DA2                     	;# 
  2194  0DA3                     	;# 
  2195  0DA4                     	;# 
  2196  0DA4                     	;# 
  2197  0DA5                     	;# 
  2198  0DA6                     	;# 
  2199  0DA7                     	;# 
  2200  0DA7                     	;# 
  2201  0DA8                     	;# 
  2202  0DA9                     	;# 
  2203  0DAA                     	;# 
  2204  0DAB                     	;# 
  2205  0DAC                     	;# 
  2206  0DAD                     	;# 
  2207  0DAE                     	;# 
  2208  0DAF                     	;# 
  2209  0E0F                     	;# 
  2210  0E10                     	;# 
  2211  0E11                     	;# 
  2212  0E12                     	;# 
  2213  0E13                     	;# 
  2214  0E14                     	;# 
  2215  0E15                     	;# 
  2216  0E16                     	;# 
  2217  0E17                     	;# 
  2218  0E18                     	;# 
  2219  0E19                     	;# 
  2220  0E1A                     	;# 
  2221  0E1B                     	;# 
  2222  0E1C                     	;# 
  2223  0E1D                     	;# 
  2224  0E1E                     	;# 
  2225  0E1F                     	;# 
  2226  0E20                     	;# 
  2227  0E21                     	;# 
  2228  0E22                     	;# 
  2229  0E23                     	;# 
  2230  0E24                     	;# 
  2231  0E25                     	;# 
  2232  0E26                     	;# 
  2233  0E27                     	;# 
  2234  0E28                     	;# 
  2235  0E29                     	;# 
  2236  0E2A                     	;# 
  2237  0E2B                     	;# 
  2238  0E2C                     	;# 
  2239  0E2D                     	;# 
  2240  0E2E                     	;# 
  2241  0E90                     	;# 
  2242  0E91                     	;# 
  2243  0E92                     	;# 
  2244  0E94                     	;# 
  2245  0E95                     	;# 
  2246  0E9C                     	;# 
  2247  0E9D                     	;# 
  2248  0E9E                     	;# 
  2249  0E9F                     	;# 
  2250  0EA0                     	;# 
  2251  0EA1                     	;# 
  2252  0EA2                     	;# 
  2253  0EA3                     	;# 
  2254  0EA4                     	;# 
  2255  0EA5                     	;# 
  2256  0EA6                     	;# 
  2257  0EA7                     	;# 
  2258  0F0F                     	;# 
  2259  0F10                     	;# 
  2260  0F11                     	;# 
  2261  0F12                     	;# 
  2262  0F13                     	;# 
  2263  0F14                     	;# 
  2264  0F15                     	;# 
  2265  0F16                     	;# 
  2266  0F17                     	;# 
  2267  0F18                     	;# 
  2268  0F19                     	;# 
  2269  0F1A                     	;# 
  2270  0F1B                     	;# 
  2271  0F1C                     	;# 
  2272  0F1D                     	;# 
  2273  0F1E                     	;# 
  2274  0F1F                     	;# 
  2275  0F20                     	;# 
  2276  0F21                     	;# 
  2277  0F22                     	;# 
  2278  0F23                     	;# 
  2279  0F24                     	;# 
  2280  0F25                     	;# 
  2281  0F26                     	;# 
  2282  0F27                     	;# 
  2283  0F28                     	;# 
  2284  0F29                     	;# 
  2285  0F2A                     	;# 
  2286  0F2B                     	;# 
  2287  0F2C                     	;# 
  2288  0F2D                     	;# 
  2289  0F2E                     	;# 
  2290  0F2F                     	;# 
  2291  0F30                     	;# 
  2292  0F31                     	;# 
  2293  0F32                     	;# 
  2294  0F33                     	;# 
  2295  0F34                     	;# 
  2296  0F35                     	;# 
  2297  0F36                     	;# 
  2298  0F37                     	;# 
  2299  0FE4                     	;# 
  2300  0FE5                     	;# 
  2301  0FE6                     	;# 
  2302  0FE7                     	;# 
  2303  0FE8                     	;# 
  2304  0FE9                     	;# 
  2305  0FEA                     	;# 
  2306  0FEB                     	;# 
  2307  0FED                     	;# 
  2308  0FEE                     	;# 
  2309  0FEF                     	;# 
  2310  0000                     	;# 
  2311  0001                     	;# 
  2312  0002                     	;# 
  2313  0003                     	;# 
  2314  0004                     	;# 
  2315  0005                     	;# 
  2316  0006                     	;# 
  2317  0007                     	;# 
  2318  0008                     	;# 
  2319  0009                     	;# 
  2320  000A                     	;# 
  2321  000B                     	;# 
  2322  000C                     	;# 
  2323  000D                     	;# 
  2324  000E                     	;# 
  2325  0010                     	;# 
  2326  0011                     	;# 
  2327  0012                     	;# 
  2328  0013                     	;# 
  2329  0014                     	;# 
  2330  0015                     	;# 
  2331  0016                     	;# 
  2332  0016                     	;# 
  2333  0017                     	;# 
  2334  0018                     	;# 
  2335  0019                     	;# 
  2336  001A                     	;# 
  2337  001A                     	;# 
  2338  001B                     	;# 
  2339  001B                     	;# 
  2340  001C                     	;# 
  2341  001D                     	;# 
  2342  001E                     	;# 
  2343  001F                     	;# 
  2344  008C                     	;# 
  2345  008D                     	;# 
  2346  008E                     	;# 
  2347  0090                     	;# 
  2348  0091                     	;# 
  2349  0092                     	;# 
  2350  0093                     	;# 
  2351  0094                     	;# 
  2352  0095                     	;# 
  2353  0096                     	;# 
  2354  0098                     	;# 
  2355  0099                     	;# 
  2356  009A                     	;# 
  2357  009B                     	;# 
  2358  009B                     	;# 
  2359  009C                     	;# 
  2360  009D                     	;# 
  2361  009E                     	;# 
  2362  009F                     	;# 
  2363  010C                     	;# 
  2364  010D                     	;# 
  2365  010E                     	;# 
  2366  0111                     	;# 
  2367  0112                     	;# 
  2368  0113                     	;# 
  2369  0114                     	;# 
  2370  0115                     	;# 
  2371  0116                     	;# 
  2372  0117                     	;# 
  2373  0118                     	;# 
  2374  0119                     	;# 
  2375  011C                     	;# 
  2376  018C                     	;# 
  2377  018D                     	;# 
  2378  018E                     	;# 
  2379  0191                     	;# 
  2380  0191                     	;# 
  2381  0192                     	;# 
  2382  0193                     	;# 
  2383  0193                     	;# 
  2384  0194                     	;# 
  2385  0195                     	;# 
  2386  0196                     	;# 
  2387  0197                     	;# 
  2388  0199                     	;# 
  2389  0199                     	;# 
  2390  0199                     	;# 
  2391  019A                     	;# 
  2392  019A                     	;# 
  2393  019A                     	;# 
  2394  019B                     	;# 
  2395  019B                     	;# 
  2396  019B                     	;# 
  2397  019B                     	;# 
  2398  019B                     	;# 
  2399  019C                     	;# 
  2400  019C                     	;# 
  2401  019C                     	;# 
  2402  019D                     	;# 
  2403  019D                     	;# 
  2404  019D                     	;# 
  2405  019E                     	;# 
  2406  019E                     	;# 
  2407  019E                     	;# 
  2408  019F                     	;# 
  2409  019F                     	;# 
  2410  019F                     	;# 
  2411  019F                     	;# 
  2412  019F                     	;# 
  2413  020C                     	;# 
  2414  020D                     	;# 
  2415  020E                     	;# 
  2416  0211                     	;# 
  2417  0211                     	;# 
  2418  0212                     	;# 
  2419  0212                     	;# 
  2420  0213                     	;# 
  2421  0213                     	;# 
  2422  0214                     	;# 
  2423  0214                     	;# 
  2424  0215                     	;# 
  2425  0215                     	;# 
  2426  0215                     	;# 
  2427  0215                     	;# 
  2428  0216                     	;# 
  2429  0216                     	;# 
  2430  0217                     	;# 
  2431  0217                     	;# 
  2432  028C                     	;# 
  2433  028D                     	;# 
  2434  028E                     	;# 
  2435  0291                     	;# 
  2436  0291                     	;# 
  2437  0292                     	;# 
  2438  0293                     	;# 
  2439  0294                     	;# 
  2440  0298                     	;# 
  2441  0298                     	;# 
  2442  0299                     	;# 
  2443  029A                     	;# 
  2444  029B                     	;# 
  2445  029E                     	;# 
  2446  030C                     	;# 
  2447  030D                     	;# 
  2448  030E                     	;# 
  2449  038C                     	;# 
  2450  038D                     	;# 
  2451  038E                     	;# 
  2452  0391                     	;# 
  2453  0392                     	;# 
  2454  0393                     	;# 
  2455  0394                     	;# 
  2456  0395                     	;# 
  2457  0396                     	;# 
  2458  0397                     	;# 
  2459  0398                     	;# 
  2460  0399                     	;# 
  2461  040E                     	;# 
  2462  0413                     	;# 
  2463  0413                     	;# 
  2464  0414                     	;# 
  2465  0414                     	;# 
  2466  0415                     	;# 
  2467  0416                     	;# 
  2468  0417                     	;# 
  2469  0418                     	;# 
  2470  041A                     	;# 
  2471  041A                     	;# 
  2472  041B                     	;# 
  2473  041B                     	;# 
  2474  041C                     	;# 
  2475  041D                     	;# 
  2476  041E                     	;# 
  2477  041F                     	;# 
  2478  0493                     	;# 
  2479  0494                     	;# 
  2480  0495                     	;# 
  2481  0496                     	;# 
  2482  049A                     	;# 
  2483  049B                     	;# 
  2484  049C                     	;# 
  2485  049D                     	;# 
  2486  058C                     	;# 
  2487  058C                     	;# 
  2488  058D                     	;# 
  2489  058E                     	;# 
  2490  058E                     	;# 
  2491  058F                     	;# 
  2492  0590                     	;# 
  2493  0590                     	;# 
  2494  0591                     	;# 
  2495  0592                     	;# 
  2496  0592                     	;# 
  2497  0593                     	;# 
  2498  0594                     	;# 
  2499  0594                     	;# 
  2500  0595                     	;# 
  2501  0596                     	;# 
  2502  0596                     	;# 
  2503  0597                     	;# 
  2504  0598                     	;# 
  2505  0599                     	;# 
  2506  059A                     	;# 
  2507  059B                     	;# 
  2508  059B                     	;# 
  2509  059C                     	;# 
  2510  059D                     	;# 
  2511  060C                     	;# 
  2512  060C                     	;# 
  2513  060D                     	;# 
  2514  060E                     	;# 
  2515  060F                     	;# 
  2516  060F                     	;# 
  2517  0610                     	;# 
  2518  0611                     	;# 
  2519  0612                     	;# 
  2520  0613                     	;# 
  2521  0614                     	;# 
  2522  0617                     	;# 
  2523  0617                     	;# 
  2524  0618                     	;# 
  2525  0619                     	;# 
  2526  061A                     	;# 
  2527  061A                     	;# 
  2528  061B                     	;# 
  2529  061C                     	;# 
  2530  0691                     	;# 
  2531  0692                     	;# 
  2532  0693                     	;# 
  2533  0694                     	;# 
  2534  0695                     	;# 
  2535  0696                     	;# 
  2536  0697                     	;# 
  2537  0699                     	;# 
  2538  069A                     	;# 
  2539  0711                     	;# 
  2540  0712                     	;# 
  2541  0713                     	;# 
  2542  0714                     	;# 
  2543  0715                     	;# 
  2544  0718                     	;# 
  2545  0718                     	;# 
  2546  0719                     	;# 
  2547  071A                     	;# 
  2548  071A                     	;# 
  2549  071B                     	;# 
  2550  071C                     	;# 
  2551  071D                     	;# 
  2552  0791                     	;# 
  2553  0791                     	;# 
  2554  0792                     	;# 
  2555  0793                     	;# 
  2556  0793                     	;# 
  2557  0794                     	;# 
  2558  0795                     	;# 
  2559  0795                     	;# 
  2560  0796                     	;# 
  2561  0797                     	;# 
  2562  0797                     	;# 
  2563  0798                     	;# 
  2564  0799                     	;# 
  2565  079A                     	;# 
  2566  080C                     	;# 
  2567  080C                     	;# 
  2568  080D                     	;# 
  2569  080E                     	;# 
  2570  080E                     	;# 
  2571  080F                     	;# 
  2572  0810                     	;# 
  2573  0810                     	;# 
  2574  0811                     	;# 
  2575  0812                     	;# 
  2576  0812                     	;# 
  2577  0813                     	;# 
  2578  0814                     	;# 
  2579  0815                     	;# 
  2580  0816                     	;# 
  2581  0817                     	;# 
  2582  0818                     	;# 
  2583  0819                     	;# 
  2584  081A                     	;# 
  2585  081A                     	;# 
  2586  081B                     	;# 
  2587  081C                     	;# 
  2588  081C                     	;# 
  2589  081D                     	;# 
  2590  088C                     	;# 
  2591  088D                     	;# 
  2592  088E                     	;# 
  2593  088F                     	;# 
  2594  088F                     	;# 
  2595  0890                     	;# 
  2596  0891                     	;# 
  2597  0892                     	;# 
  2598  0893                     	;# 
  2599  0893                     	;# 
  2600  0894                     	;# 
  2601  0895                     	;# 
  2602  0896                     	;# 
  2603  0897                     	;# 
  2604  0897                     	;# 
  2605  0898                     	;# 
  2606  0899                     	;# 
  2607  0D8C                     	;# 
  2608  0D8C                     	;# 
  2609  0D8D                     	;# 
  2610  0D8E                     	;# 
  2611  0D8F                     	;# 
  2612  0D8F                     	;# 
  2613  0D90                     	;# 
  2614  0D91                     	;# 
  2615  0D92                     	;# 
  2616  0D92                     	;# 
  2617  0D93                     	;# 
  2618  0D94                     	;# 
  2619  0D95                     	;# 
  2620  0D95                     	;# 
  2621  0D96                     	;# 
  2622  0D97                     	;# 
  2623  0D98                     	;# 
  2624  0D99                     	;# 
  2625  0D9A                     	;# 
  2626  0D9B                     	;# 
  2627  0D9C                     	;# 
  2628  0D9D                     	;# 
  2629  0D9E                     	;# 
  2630  0D9E                     	;# 
  2631  0D9F                     	;# 
  2632  0DA0                     	;# 
  2633  0DA1                     	;# 
  2634  0DA1                     	;# 
  2635  0DA2                     	;# 
  2636  0DA3                     	;# 
  2637  0DA4                     	;# 
  2638  0DA4                     	;# 
  2639  0DA5                     	;# 
  2640  0DA6                     	;# 
  2641  0DA7                     	;# 
  2642  0DA7                     	;# 
  2643  0DA8                     	;# 
  2644  0DA9                     	;# 
  2645  0DAA                     	;# 
  2646  0DAB                     	;# 
  2647  0DAC                     	;# 
  2648  0DAD                     	;# 
  2649  0DAE                     	;# 
  2650  0DAF                     	;# 
  2651  0E0F                     	;# 
  2652  0E10                     	;# 
  2653  0E11                     	;# 
  2654  0E12                     	;# 
  2655  0E13                     	;# 
  2656  0E14                     	;# 
  2657  0E15                     	;# 
  2658  0E16                     	;# 
  2659  0E17                     	;# 
  2660  0E18                     	;# 
  2661  0E19                     	;# 
  2662  0E1A                     	;# 
  2663  0E1B                     	;# 
  2664  0E1C                     	;# 
  2665  0E1D                     	;# 
  2666  0E1E                     	;# 
  2667  0E1F                     	;# 
  2668  0E20                     	;# 
  2669  0E21                     	;# 
  2670  0E22                     	;# 
  2671  0E23                     	;# 
  2672  0E24                     	;# 
  2673  0E25                     	;# 
  2674  0E26                     	;# 
  2675  0E27                     	;# 
  2676  0E28                     	;# 
  2677  0E29                     	;# 
  2678  0E2A                     	;# 
  2679  0E2B                     	;# 
  2680  0E2C                     	;# 
  2681  0E2D                     	;# 
  2682  0E2E                     	;# 
  2683  0E90                     	;# 
  2684  0E91                     	;# 
  2685  0E92                     	;# 
  2686  0E94                     	;# 
  2687  0E95                     	;# 
  2688  0E9C                     	;# 
  2689  0E9D                     	;# 
  2690  0E9E                     	;# 
  2691  0E9F                     	;# 
  2692  0EA0                     	;# 
  2693  0EA1                     	;# 
  2694  0EA2                     	;# 
  2695  0EA3                     	;# 
  2696  0EA4                     	;# 
  2697  0EA5                     	;# 
  2698  0EA6                     	;# 
  2699  0EA7                     	;# 
  2700  0F0F                     	;# 
  2701  0F10                     	;# 
  2702  0F11                     	;# 
  2703  0F12                     	;# 
  2704  0F13                     	;# 
  2705  0F14                     	;# 
  2706  0F15                     	;# 
  2707  0F16                     	;# 
  2708  0F17                     	;# 
  2709  0F18                     	;# 
  2710  0F19                     	;# 
  2711  0F1A                     	;# 
  2712  0F1B                     	;# 
  2713  0F1C                     	;# 
  2714  0F1D                     	;# 
  2715  0F1E                     	;# 
  2716  0F1F                     	;# 
  2717  0F20                     	;# 
  2718  0F21                     	;# 
  2719  0F22                     	;# 
  2720  0F23                     	;# 
  2721  0F24                     	;# 
  2722  0F25                     	;# 
  2723  0F26                     	;# 
  2724  0F27                     	;# 
  2725  0F28                     	;# 
  2726  0F29                     	;# 
  2727  0F2A                     	;# 
  2728  0F2B                     	;# 
  2729  0F2C                     	;# 
  2730  0F2D                     	;# 
  2731  0F2E                     	;# 
  2732  0F2F                     	;# 
  2733  0F30                     	;# 
  2734  0F31                     	;# 
  2735  0F32                     	;# 
  2736  0F33                     	;# 
  2737  0F34                     	;# 
  2738  0F35                     	;# 
  2739  0F36                     	;# 
  2740  0F37                     	;# 
  2741  0FE4                     	;# 
  2742  0FE5                     	;# 
  2743  0FE6                     	;# 
  2744  0FE7                     	;# 
  2745  0FE8                     	;# 
  2746  0FE9                     	;# 
  2747  0FEA                     	;# 
  2748  0FEB                     	;# 
  2749  0FED                     	;# 
  2750  0FEE                     	;# 
  2751  0FEF                     	;# 
  2752  0000                     	;# 
  2753  0001                     	;# 
  2754  0002                     	;# 
  2755  0003                     	;# 
  2756  0004                     	;# 
  2757  0005                     	;# 
  2758  0006                     	;# 
  2759  0007                     	;# 
  2760  0008                     	;# 
  2761  0009                     	;# 
  2762  000A                     	;# 
  2763  000B                     	;# 
  2764  000C                     	;# 
  2765  000D                     	;# 
  2766  000E                     	;# 
  2767  0010                     	;# 
  2768  0011                     	;# 
  2769  0012                     	;# 
  2770  0013                     	;# 
  2771  0014                     	;# 
  2772  0015                     	;# 
  2773  0016                     	;# 
  2774  0016                     	;# 
  2775  0017                     	;# 
  2776  0018                     	;# 
  2777  0019                     	;# 
  2778  001A                     	;# 
  2779  001A                     	;# 
  2780  001B                     	;# 
  2781  001B                     	;# 
  2782  001C                     	;# 
  2783  001D                     	;# 
  2784  001E                     	;# 
  2785  001F                     	;# 
  2786  008C                     	;# 
  2787  008D                     	;# 
  2788  008E                     	;# 
  2789  0090                     	;# 
  2790  0091                     	;# 
  2791  0092                     	;# 
  2792  0093                     	;# 
  2793  0094                     	;# 
  2794  0095                     	;# 
  2795  0096                     	;# 
  2796  0098                     	;# 
  2797  0099                     	;# 
  2798  009A                     	;# 
  2799  009B                     	;# 
  2800  009B                     	;# 
  2801  009C                     	;# 
  2802  009D                     	;# 
  2803  009E                     	;# 
  2804  009F                     	;# 
  2805  010C                     	;# 
  2806  010D                     	;# 
  2807  010E                     	;# 
  2808  0111                     	;# 
  2809  0112                     	;# 
  2810  0113                     	;# 
  2811  0114                     	;# 
  2812  0115                     	;# 
  2813  0116                     	;# 
  2814  0117                     	;# 
  2815  0118                     	;# 
  2816  0119                     	;# 
  2817  011C                     	;# 
  2818  018C                     	;# 
  2819  018D                     	;# 
  2820  018E                     	;# 
  2821  0191                     	;# 
  2822  0191                     	;# 
  2823  0192                     	;# 
  2824  0193                     	;# 
  2825  0193                     	;# 
  2826  0194                     	;# 
  2827  0195                     	;# 
  2828  0196                     	;# 
  2829  0197                     	;# 
  2830  0199                     	;# 
  2831  0199                     	;# 
  2832  0199                     	;# 
  2833  019A                     	;# 
  2834  019A                     	;# 
  2835  019A                     	;# 
  2836  019B                     	;# 
  2837  019B                     	;# 
  2838  019B                     	;# 
  2839  019B                     	;# 
  2840  019B                     	;# 
  2841  019C                     	;# 
  2842  019C                     	;# 
  2843  019C                     	;# 
  2844  019D                     	;# 
  2845  019D                     	;# 
  2846  019D                     	;# 
  2847  019E                     	;# 
  2848  019E                     	;# 
  2849  019E                     	;# 
  2850  019F                     	;# 
  2851  019F                     	;# 
  2852  019F                     	;# 
  2853  019F                     	;# 
  2854  019F                     	;# 
  2855  020C                     	;# 
  2856  020D                     	;# 
  2857  020E                     	;# 
  2858  0211                     	;# 
  2859  0211                     	;# 
  2860  0212                     	;# 
  2861  0212                     	;# 
  2862  0213                     	;# 
  2863  0213                     	;# 
  2864  0214                     	;# 
  2865  0214                     	;# 
  2866  0215                     	;# 
  2867  0215                     	;# 
  2868  0215                     	;# 
  2869  0215                     	;# 
  2870  0216                     	;# 
  2871  0216                     	;# 
  2872  0217                     	;# 
  2873  0217                     	;# 
  2874  028C                     	;# 
  2875  028D                     	;# 
  2876  028E                     	;# 
  2877  0291                     	;# 
  2878  0291                     	;# 
  2879  0292                     	;# 
  2880  0293                     	;# 
  2881  0294                     	;# 
  2882  0298                     	;# 
  2883  0298                     	;# 
  2884  0299                     	;# 
  2885  029A                     	;# 
  2886  029B                     	;# 
  2887  029E                     	;# 
  2888  030C                     	;# 
  2889  030D                     	;# 
  2890  030E                     	;# 
  2891  038C                     	;# 
  2892  038D                     	;# 
  2893  038E                     	;# 
  2894  0391                     	;# 
  2895  0392                     	;# 
  2896  0393                     	;# 
  2897  0394                     	;# 
  2898  0395                     	;# 
  2899  0396                     	;# 
  2900  0397                     	;# 
  2901  0398                     	;# 
  2902  0399                     	;# 
  2903  040E                     	;# 
  2904  0413                     	;# 
  2905  0413                     	;# 
  2906  0414                     	;# 
  2907  0414                     	;# 
  2908  0415                     	;# 
  2909  0416                     	;# 
  2910  0417                     	;# 
  2911  0418                     	;# 
  2912  041A                     	;# 
  2913  041A                     	;# 
  2914  041B                     	;# 
  2915  041B                     	;# 
  2916  041C                     	;# 
  2917  041D                     	;# 
  2918  041E                     	;# 
  2919  041F                     	;# 
  2920  0493                     	;# 
  2921  0494                     	;# 
  2922  0495                     	;# 
  2923  0496                     	;# 
  2924  049A                     	;# 
  2925  049B                     	;# 
  2926  049C                     	;# 
  2927  049D                     	;# 
  2928  058C                     	;# 
  2929  058C                     	;# 
  2930  058D                     	;# 
  2931  058E                     	;# 
  2932  058E                     	;# 
  2933  058F                     	;# 
  2934  0590                     	;# 
  2935  0590                     	;# 
  2936  0591                     	;# 
  2937  0592                     	;# 
  2938  0592                     	;# 
  2939  0593                     	;# 
  2940  0594                     	;# 
  2941  0594                     	;# 
  2942  0595                     	;# 
  2943  0596                     	;# 
  2944  0596                     	;# 
  2945  0597                     	;# 
  2946  0598                     	;# 
  2947  0599                     	;# 
  2948  059A                     	;# 
  2949  059B                     	;# 
  2950  059B                     	;# 
  2951  059C                     	;# 
  2952  059D                     	;# 
  2953  060C                     	;# 
  2954  060C                     	;# 
  2955  060D                     	;# 
  2956  060E                     	;# 
  2957  060F                     	;# 
  2958  060F                     	;# 
  2959  0610                     	;# 
  2960  0611                     	;# 
  2961  0612                     	;# 
  2962  0613                     	;# 
  2963  0614                     	;# 
  2964  0617                     	;# 
  2965  0617                     	;# 
  2966  0618                     	;# 
  2967  0619                     	;# 
  2968  061A                     	;# 
  2969  061A                     	;# 
  2970  061B                     	;# 
  2971  061C                     	;# 
  2972  0691                     	;# 
  2973  0692                     	;# 
  2974  0693                     	;# 
  2975  0694                     	;# 
  2976  0695                     	;# 
  2977  0696                     	;# 
  2978  0697                     	;# 
  2979  0699                     	;# 
  2980  069A                     	;# 
  2981  0711                     	;# 
  2982  0712                     	;# 
  2983  0713                     	;# 
  2984  0714                     	;# 
  2985  0715                     	;# 
  2986  0718                     	;# 
  2987  0718                     	;# 
  2988  0719                     	;# 
  2989  071A                     	;# 
  2990  071A                     	;# 
  2991  071B                     	;# 
  2992  071C                     	;# 
  2993  071D                     	;# 
  2994  0791                     	;# 
  2995  0791                     	;# 
  2996  0792                     	;# 
  2997  0793                     	;# 
  2998  0793                     	;# 
  2999  0794                     	;# 
  3000  0795                     	;# 
  3001  0795                     	;# 
  3002  0796                     	;# 
  3003  0797                     	;# 
  3004  0797                     	;# 
  3005  0798                     	;# 
  3006  0799                     	;# 
  3007  079A                     	;# 
  3008  080C                     	;# 
  3009  080C                     	;# 
  3010  080D                     	;# 
  3011  080E                     	;# 
  3012  080E                     	;# 
  3013  080F                     	;# 
  3014  0810                     	;# 
  3015  0810                     	;# 
  3016  0811                     	;# 
  3017  0812                     	;# 
  3018  0812                     	;# 
  3019  0813                     	;# 
  3020  0814                     	;# 
  3021  0815                     	;# 
  3022  0816                     	;# 
  3023  0817                     	;# 
  3024  0818                     	;# 
  3025  0819                     	;# 
  3026  081A                     	;# 
  3027  081A                     	;# 
  3028  081B                     	;# 
  3029  081C                     	;# 
  3030  081C                     	;# 
  3031  081D                     	;# 
  3032  088C                     	;# 
  3033  088D                     	;# 
  3034  088E                     	;# 
  3035  088F                     	;# 
  3036  088F                     	;# 
  3037  0890                     	;# 
  3038  0891                     	;# 
  3039  0892                     	;# 
  3040  0893                     	;# 
  3041  0893                     	;# 
  3042  0894                     	;# 
  3043  0895                     	;# 
  3044  0896                     	;# 
  3045  0897                     	;# 
  3046  0897                     	;# 
  3047  0898                     	;# 
  3048  0899                     	;# 
  3049  0D8C                     	;# 
  3050  0D8C                     	;# 
  3051  0D8D                     	;# 
  3052  0D8E                     	;# 
  3053  0D8F                     	;# 
  3054  0D8F                     	;# 
  3055  0D90                     	;# 
  3056  0D91                     	;# 
  3057  0D92                     	;# 
  3058  0D92                     	;# 
  3059  0D93                     	;# 
  3060  0D94                     	;# 
  3061  0D95                     	;# 
  3062  0D95                     	;# 
  3063  0D96                     	;# 
  3064  0D97                     	;# 
  3065  0D98                     	;# 
  3066  0D99                     	;# 
  3067  0D9A                     	;# 
  3068  0D9B                     	;# 
  3069  0D9C                     	;# 
  3070  0D9D                     	;# 
  3071  0D9E                     	;# 
  3072  0D9E                     	;# 
  3073  0D9F                     	;# 
  3074  0DA0                     	;# 
  3075  0DA1                     	;# 
  3076  0DA1                     	;# 
  3077  0DA2                     	;# 
  3078  0DA3                     	;# 
  3079  0DA4                     	;# 
  3080  0DA4                     	;# 
  3081  0DA5                     	;# 
  3082  0DA6                     	;# 
  3083  0DA7                     	;# 
  3084  0DA7                     	;# 
  3085  0DA8                     	;# 
  3086  0DA9                     	;# 
  3087  0DAA                     	;# 
  3088  0DAB                     	;# 
  3089  0DAC                     	;# 
  3090  0DAD                     	;# 
  3091  0DAE                     	;# 
  3092  0DAF                     	;# 
  3093  0E0F                     	;# 
  3094  0E10                     	;# 
  3095  0E11                     	;# 
  3096  0E12                     	;# 
  3097  0E13                     	;# 
  3098  0E14                     	;# 
  3099  0E15                     	;# 
  3100  0E16                     	;# 
  3101  0E17                     	;# 
  3102  0E18                     	;# 
  3103  0E19                     	;# 
  3104  0E1A                     	;# 
  3105  0E1B                     	;# 
  3106  0E1C                     	;# 
  3107  0E1D                     	;# 
  3108  0E1E                     	;# 
  3109  0E1F                     	;# 
  3110  0E20                     	;# 
  3111  0E21                     	;# 
  3112  0E22                     	;# 
  3113  0E23                     	;# 
  3114  0E24                     	;# 
  3115  0E25                     	;# 
  3116  0E26                     	;# 
  3117  0E27                     	;# 
  3118  0E28                     	;# 
  3119  0E29                     	;# 
  3120  0E2A                     	;# 
  3121  0E2B                     	;# 
  3122  0E2C                     	;# 
  3123  0E2D                     	;# 
  3124  0E2E                     	;# 
  3125  0E90                     	;# 
  3126  0E91                     	;# 
  3127  0E92                     	;# 
  3128  0E94                     	;# 
  3129  0E95                     	;# 
  3130  0E9C                     	;# 
  3131  0E9D                     	;# 
  3132  0E9E                     	;# 
  3133  0E9F                     	;# 
  3134  0EA0                     	;# 
  3135  0EA1                     	;# 
  3136  0EA2                     	;# 
  3137  0EA3                     	;# 
  3138  0EA4                     	;# 
  3139  0EA5                     	;# 
  3140  0EA6                     	;# 
  3141  0EA7                     	;# 
  3142  0F0F                     	;# 
  3143  0F10                     	;# 
  3144  0F11                     	;# 
  3145  0F12                     	;# 
  3146  0F13                     	;# 
  3147  0F14                     	;# 
  3148  0F15                     	;# 
  3149  0F16                     	;# 
  3150  0F17                     	;# 
  3151  0F18                     	;# 
  3152  0F19                     	;# 
  3153  0F1A                     	;# 
  3154  0F1B                     	;# 
  3155  0F1C                     	;# 
  3156  0F1D                     	;# 
  3157  0F1E                     	;# 
  3158  0F1F                     	;# 
  3159  0F20                     	;# 
  3160  0F21                     	;# 
  3161  0F22                     	;# 
  3162  0F23                     	;# 
  3163  0F24                     	;# 
  3164  0F25                     	;# 
  3165  0F26                     	;# 
  3166  0F27                     	;# 
  3167  0F28                     	;# 
  3168  0F29                     	;# 
  3169  0F2A                     	;# 
  3170  0F2B                     	;# 
  3171  0F2C                     	;# 
  3172  0F2D                     	;# 
  3173  0F2E                     	;# 
  3174  0F2F                     	;# 
  3175  0F30                     	;# 
  3176  0F31                     	;# 
  3177  0F32                     	;# 
  3178  0F33                     	;# 
  3179  0F34                     	;# 
  3180  0F35                     	;# 
  3181  0F36                     	;# 
  3182  0F37                     	;# 
  3183  0FE4                     	;# 
  3184  0FE5                     	;# 
  3185  0FE6                     	;# 
  3186  0FE7                     	;# 
  3187  0FE8                     	;# 
  3188  0FE9                     	;# 
  3189  0FEA                     	;# 
  3190  0FEB                     	;# 
  3191  0FED                     	;# 
  3192  0FEE                     	;# 
  3193  0FEF                     	;# 
  3194  0000                     	;# 
  3195  0001                     	;# 
  3196  0002                     	;# 
  3197  0003                     	;# 
  3198  0004                     	;# 
  3199  0005                     	;# 
  3200  0006                     	;# 
  3201  0007                     	;# 
  3202  0008                     	;# 
  3203  0009                     	;# 
  3204  000A                     	;# 
  3205  000B                     	;# 
  3206  000C                     	;# 
  3207  000D                     	;# 
  3208  000E                     	;# 
  3209  0010                     	;# 
  3210  0011                     	;# 
  3211  0012                     	;# 
  3212  0013                     	;# 
  3213  0014                     	;# 
  3214  0015                     	;# 
  3215  0016                     	;# 
  3216  0016                     	;# 
  3217  0017                     	;# 
  3218  0018                     	;# 
  3219  0019                     	;# 
  3220  001A                     	;# 
  3221  001A                     	;# 
  3222  001B                     	;# 
  3223  001B                     	;# 
  3224  001C                     	;# 
  3225  001D                     	;# 
  3226  001E                     	;# 
  3227  001F                     	;# 
  3228  008C                     	;# 
  3229  008D                     	;# 
  3230  008E                     	;# 
  3231  0090                     	;# 
  3232  0091                     	;# 
  3233  0092                     	;# 
  3234  0093                     	;# 
  3235  0094                     	;# 
  3236  0095                     	;# 
  3237  0096                     	;# 
  3238  0098                     	;# 
  3239  0099                     	;# 
  3240  009A                     	;# 
  3241  009B                     	;# 
  3242  009B                     	;# 
  3243  009C                     	;# 
  3244  009D                     	;# 
  3245  009E                     	;# 
  3246  009F                     	;# 
  3247  010C                     	;# 
  3248  010D                     	;# 
  3249  010E                     	;# 
  3250  0111                     	;# 
  3251  0112                     	;# 
  3252  0113                     	;# 
  3253  0114                     	;# 
  3254  0115                     	;# 
  3255  0116                     	;# 
  3256  0117                     	;# 
  3257  0118                     	;# 
  3258  0119                     	;# 
  3259  011C                     	;# 
  3260  018C                     	;# 
  3261  018D                     	;# 
  3262  018E                     	;# 
  3263  0191                     	;# 
  3264  0191                     	;# 
  3265  0192                     	;# 
  3266  0193                     	;# 
  3267  0193                     	;# 
  3268  0194                     	;# 
  3269  0195                     	;# 
  3270  0196                     	;# 
  3271  0197                     	;# 
  3272  0199                     	;# 
  3273  0199                     	;# 
  3274  0199                     	;# 
  3275  019A                     	;# 
  3276  019A                     	;# 
  3277  019A                     	;# 
  3278  019B                     	;# 
  3279  019B                     	;# 
  3280  019B                     	;# 
  3281  019B                     	;# 
  3282  019B                     	;# 
  3283  019C                     	;# 
  3284  019C                     	;# 
  3285  019C                     	;# 
  3286  019D                     	;# 
  3287  019D                     	;# 
  3288  019D                     	;# 
  3289  019E                     	;# 
  3290  019E                     	;# 
  3291  019E                     	;# 
  3292  019F                     	;# 
  3293  019F                     	;# 
  3294  019F                     	;# 
  3295  019F                     	;# 
  3296  019F                     	;# 
  3297  020C                     	;# 
  3298  020D                     	;# 
  3299  020E                     	;# 
  3300  0211                     	;# 
  3301  0211                     	;# 
  3302  0212                     	;# 
  3303  0212                     	;# 
  3304  0213                     	;# 
  3305  0213                     	;# 
  3306  0214                     	;# 
  3307  0214                     	;# 
  3308  0215                     	;# 
  3309  0215                     	;# 
  3310  0215                     	;# 
  3311  0215                     	;# 
  3312  0216                     	;# 
  3313  0216                     	;# 
  3314  0217                     	;# 
  3315  0217                     	;# 
  3316  028C                     	;# 
  3317  028D                     	;# 
  3318  028E                     	;# 
  3319  0291                     	;# 
  3320  0291                     	;# 
  3321  0292                     	;# 
  3322  0293                     	;# 
  3323  0294                     	;# 
  3324  0298                     	;# 
  3325  0298                     	;# 
  3326  0299                     	;# 
  3327  029A                     	;# 
  3328  029B                     	;# 
  3329  029E                     	;# 
  3330  030C                     	;# 
  3331  030D                     	;# 
  3332  030E                     	;# 
  3333  038C                     	;# 
  3334  038D                     	;# 
  3335  038E                     	;# 
  3336  0391                     	;# 
  3337  0392                     	;# 
  3338  0393                     	;# 
  3339  0394                     	;# 
  3340  0395                     	;# 
  3341  0396                     	;# 
  3342  0397                     	;# 
  3343  0398                     	;# 
  3344  0399                     	;# 
  3345  040E                     	;# 
  3346  0413                     	;# 
  3347  0413                     	;# 
  3348  0414                     	;# 
  3349  0414                     	;# 
  3350  0415                     	;# 
  3351  0416                     	;# 
  3352  0417                     	;# 
  3353  0418                     	;# 
  3354  041A                     	;# 
  3355  041A                     	;# 
  3356  041B                     	;# 
  3357  041B                     	;# 
  3358  041C                     	;# 
  3359  041D                     	;# 
  3360  041E                     	;# 
  3361  041F                     	;# 
  3362  0493                     	;# 
  3363  0494                     	;# 
  3364  0495                     	;# 
  3365  0496                     	;# 
  3366  049A                     	;# 
  3367  049B                     	;# 
  3368  049C                     	;# 
  3369  049D                     	;# 
  3370  058C                     	;# 
  3371  058C                     	;# 
  3372  058D                     	;# 
  3373  058E                     	;# 
  3374  058E                     	;# 
  3375  058F                     	;# 
  3376  0590                     	;# 
  3377  0590                     	;# 
  3378  0591                     	;# 
  3379  0592                     	;# 
  3380  0592                     	;# 
  3381  0593                     	;# 
  3382  0594                     	;# 
  3383  0594                     	;# 
  3384  0595                     	;# 
  3385  0596                     	;# 
  3386  0596                     	;# 
  3387  0597                     	;# 
  3388  0598                     	;# 
  3389  0599                     	;# 
  3390  059A                     	;# 
  3391  059B                     	;# 
  3392  059B                     	;# 
  3393  059C                     	;# 
  3394  059D                     	;# 
  3395  060C                     	;# 
  3396  060C                     	;# 
  3397  060D                     	;# 
  3398  060E                     	;# 
  3399  060F                     	;# 
  3400  060F                     	;# 
  3401  0610                     	;# 
  3402  0611                     	;# 
  3403  0612                     	;# 
  3404  0613                     	;# 
  3405  0614                     	;# 
  3406  0617                     	;# 
  3407  0617                     	;# 
  3408  0618                     	;# 
  3409  0619                     	;# 
  3410  061A                     	;# 
  3411  061A                     	;# 
  3412  061B                     	;# 
  3413  061C                     	;# 
  3414  0691                     	;# 
  3415  0692                     	;# 
  3416  0693                     	;# 
  3417  0694                     	;# 
  3418  0695                     	;# 
  3419  0696                     	;# 
  3420  0697                     	;# 
  3421  0699                     	;# 
  3422  069A                     	;# 
  3423  0711                     	;# 
  3424  0712                     	;# 
  3425  0713                     	;# 
  3426  0714                     	;# 
  3427  0715                     	;# 
  3428  0718                     	;# 
  3429  0718                     	;# 
  3430  0719                     	;# 
  3431  071A                     	;# 
  3432  071A                     	;# 
  3433  071B                     	;# 
  3434  071C                     	;# 
  3435  071D                     	;# 
  3436  0791                     	;# 
  3437  0791                     	;# 
  3438  0792                     	;# 
  3439  0793                     	;# 
  3440  0793                     	;# 
  3441  0794                     	;# 
  3442  0795                     	;# 
  3443  0795                     	;# 
  3444  0796                     	;# 
  3445  0797                     	;# 
  3446  0797                     	;# 
  3447  0798                     	;# 
  3448  0799                     	;# 
  3449  079A                     	;# 
  3450  080C                     	;# 
  3451  080C                     	;# 
  3452  080D                     	;# 
  3453  080E                     	;# 
  3454  080E                     	;# 
  3455  080F                     	;# 
  3456  0810                     	;# 
  3457  0810                     	;# 
  3458  0811                     	;# 
  3459  0812                     	;# 
  3460  0812                     	;# 
  3461  0813                     	;# 
  3462  0814                     	;# 
  3463  0815                     	;# 
  3464  0816                     	;# 
  3465  0817                     	;# 
  3466  0818                     	;# 
  3467  0819                     	;# 
  3468  081A                     	;# 
  3469  081A                     	;# 
  3470  081B                     	;# 
  3471  081C                     	;# 
  3472  081C                     	;# 
  3473  081D                     	;# 
  3474  088C                     	;# 
  3475  088D                     	;# 
  3476  088E                     	;# 
  3477  088F                     	;# 
  3478  088F                     	;# 
  3479  0890                     	;# 
  3480  0891                     	;# 
  3481  0892                     	;# 
  3482  0893                     	;# 
  3483  0893                     	;# 
  3484  0894                     	;# 
  3485  0895                     	;# 
  3486  0896                     	;# 
  3487  0897                     	;# 
  3488  0897                     	;# 
  3489  0898                     	;# 
  3490  0899                     	;# 
  3491  0D8C                     	;# 
  3492  0D8C                     	;# 
  3493  0D8D                     	;# 
  3494  0D8E                     	;# 
  3495  0D8F                     	;# 
  3496  0D8F                     	;# 
  3497  0D90                     	;# 
  3498  0D91                     	;# 
  3499  0D92                     	;# 
  3500  0D92                     	;# 
  3501  0D93                     	;# 
  3502  0D94                     	;# 
  3503  0D95                     	;# 
  3504  0D95                     	;# 
  3505  0D96                     	;# 
  3506  0D97                     	;# 
  3507  0D98                     	;# 
  3508  0D99                     	;# 
  3509  0D9A                     	;# 
  3510  0D9B                     	;# 
  3511  0D9C                     	;# 
  3512  0D9D                     	;# 
  3513  0D9E                     	;# 
  3514  0D9E                     	;# 
  3515  0D9F                     	;# 
  3516  0DA0                     	;# 
  3517  0DA1                     	;# 
  3518  0DA1                     	;# 
  3519  0DA2                     	;# 
  3520  0DA3                     	;# 
  3521  0DA4                     	;# 
  3522  0DA4                     	;# 
  3523  0DA5                     	;# 
  3524  0DA6                     	;# 
  3525  0DA7                     	;# 
  3526  0DA7                     	;# 
  3527  0DA8                     	;# 
  3528  0DA9                     	;# 
  3529  0DAA                     	;# 
  3530  0DAB                     	;# 
  3531  0DAC                     	;# 
  3532  0DAD                     	;# 
  3533  0DAE                     	;# 
  3534  0DAF                     	;# 
  3535  0E0F                     	;# 
  3536  0E10                     	;# 
  3537  0E11                     	;# 
  3538  0E12                     	;# 
  3539  0E13                     	;# 
  3540  0E14                     	;# 
  3541  0E15                     	;# 
  3542  0E16                     	;# 
  3543  0E17                     	;# 
  3544  0E18                     	;# 
  3545  0E19                     	;# 
  3546  0E1A                     	;# 
  3547  0E1B                     	;# 
  3548  0E1C                     	;# 
  3549  0E1D                     	;# 
  3550  0E1E                     	;# 
  3551  0E1F                     	;# 
  3552  0E20                     	;# 
  3553  0E21                     	;# 
  3554  0E22                     	;# 
  3555  0E23                     	;# 
  3556  0E24                     	;# 
  3557  0E25                     	;# 
  3558  0E26                     	;# 
  3559  0E27                     	;# 
  3560  0E28                     	;# 
  3561  0E29                     	;# 
  3562  0E2A                     	;# 
  3563  0E2B                     	;# 
  3564  0E2C                     	;# 
  3565  0E2D                     	;# 
  3566  0E2E                     	;# 
  3567  0E90                     	;# 
  3568  0E91                     	;# 
  3569  0E92                     	;# 
  3570  0E94                     	;# 
  3571  0E95                     	;# 
  3572  0E9C                     	;# 
  3573  0E9D                     	;# 
  3574  0E9E                     	;# 
  3575  0E9F                     	;# 
  3576  0EA0                     	;# 
  3577  0EA1                     	;# 
  3578  0EA2                     	;# 
  3579  0EA3                     	;# 
  3580  0EA4                     	;# 
  3581  0EA5                     	;# 
  3582  0EA6                     	;# 
  3583  0EA7                     	;# 
  3584  0F0F                     	;# 
  3585  0F10                     	;# 
  3586  0F11                     	;# 
  3587  0F12                     	;# 
  3588  0F13                     	;# 
  3589  0F14                     	;# 
  3590  0F15                     	;# 
  3591  0F16                     	;# 
  3592  0F17                     	;# 
  3593  0F18                     	;# 
  3594  0F19                     	;# 
  3595  0F1A                     	;# 
  3596  0F1B                     	;# 
  3597  0F1C                     	;# 
  3598  0F1D                     	;# 
  3599  0F1E                     	;# 
  3600  0F1F                     	;# 
  3601  0F20                     	;# 
  3602  0F21                     	;# 
  3603  0F22                     	;# 
  3604  0F23                     	;# 
  3605  0F24                     	;# 
  3606  0F25                     	;# 
  3607  0F26                     	;# 
  3608  0F27                     	;# 
  3609  0F28                     	;# 
  3610  0F29                     	;# 
  3611  0F2A                     	;# 
  3612  0F2B                     	;# 
  3613  0F2C                     	;# 
  3614  0F2D                     	;# 
  3615  0F2E                     	;# 
  3616  0F2F                     	;# 
  3617  0F30                     	;# 
  3618  0F31                     	;# 
  3619  0F32                     	;# 
  3620  0F33                     	;# 
  3621  0F34                     	;# 
  3622  0F35                     	;# 
  3623  0F36                     	;# 
  3624  0F37                     	;# 
  3625  0FE4                     	;# 
  3626  0FE5                     	;# 
  3627  0FE6                     	;# 
  3628  0FE7                     	;# 
  3629  0FE8                     	;# 
  3630  0FE9                     	;# 
  3631  0FEA                     	;# 
  3632  0FEB                     	;# 
  3633  0FED                     	;# 
  3634  0FEE                     	;# 
  3635  0FEF                     	;# 
  3636                           
  3637 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  3638  0000                     
  3639 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  3640  0000                     
  3641 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  3642  0000                     
  3643                           	psect	stringtext1
  3644  1000                     __pstringtext1:	
  3645  1000                     _hrDisp:	
  3646  1000  3448               	retlw	72
  3647  1001  3465               	retlw	101
  3648  1002  3461               	retlw	97
  3649  1003  3472               	retlw	114
  3650  1004  3474               	retlw	116
  3651  1005  3420               	retlw	32
  3652  1006  3452               	retlw	82
  3653  1007  3461               	retlw	97
  3654  1008  3474               	retlw	116
  3655  1009  3465               	retlw	101
  3656  100A  343A               	retlw	58
  3657  100B  3420               	retlw	32
  3658  100C  3400               	retlw	0
  3659  100D                     __end_of_hrDisp:	
  3660                           
  3661                           	psect	stringtext2
  3662  100D                     __pstringtext2:	
  3663  100D                     _distanceDisp:	
  3664  100D  3444               	retlw	68
  3665  100E  3469               	retlw	105
  3666  100F  3473               	retlw	115
  3667  1010  3474               	retlw	116
  3668  1011  3461               	retlw	97
  3669  1012  346E               	retlw	110
  3670  1013  3463               	retlw	99
  3671  1014  3465               	retlw	101
  3672  1015  343A               	retlw	58
  3673  1016  3420               	retlw	32
  3674  1017  3400               	retlw	0
  3675  1018                     __end_of_distanceDisp:	
  3676                           
  3677                           	psect	stringtext3
  3678  1018                     __pstringtext3:	
  3679  1018                     _speedDisp:	
  3680  1018  3453               	retlw	83
  3681  1019  3470               	retlw	112
  3682  101A  3465               	retlw	101
  3683  101B  3465               	retlw	101
  3684  101C  3464               	retlw	100
  3685  101D  343A               	retlw	58
  3686  101E  3420               	retlw	32
  3687  101F  3400               	retlw	0
  3688  1020                     __end_of_speedDisp:	
  3689                           
  3690                           	psect	nvBANK0
  3691  0067                     __pnvBANK0:	
  3692  0067                     _timer0ReloadVal:	
  3693  0067                     	ds	1
  3694                           
  3695                           	psect	nvBANK1
  3696  00EA                     __pnvBANK1:	
  3697  00EA                     _TMR0_InterruptHandler:	
  3698  00EA                     	ds	2
  3699  00EC                     _IOCCF7_InterruptHandler:	
  3700  00EC                     	ds	2
  3701  00EE                     _EUSART_FramingErrorHandler:	
  3702  00EE                     	ds	2
  3703                           
  3704                           	psect	nvBANK2
  3705  0154                     __pnvBANK2:	
  3706  0154                     _EUSART_ErrorHandler:	
  3707  0154                     	ds	2
  3708  0156                     _EUSART_OverrunErrorHandler:	
  3709  0156                     	ds	2
  3710  0015                     _TMR0	set	21
  3711  000B                     _INTCONbits	set	11
  3712  0010                     _PIR1bits	set	16
  3713  009D                     _ADCON0bits	set	157
  3714  009C                     _ADRESH	set	156
  3715  009B                     _ADRESL	set	155
  3716  009F                     _ADCON2	set	159
  3717  009E                     _ADCON1	set	158
  3718  009D                     _ADCON0	set	157
  3719  0095                     _OPTION_REG	set	149
  3720  0095                     _OPTION_REGbits	set	149
  3721  008E                     _TRISC	set	142
  3722  008D                     _TRISB	set	141
  3723  008C                     _TRISA	set	140
  3724  0098                     _OSCTUNE	set	152
  3725  0099                     _OSCCON	set	153
  3726  010E                     _LATC	set	270
  3727  010D                     _LATB	set	269
  3728  010C                     _LATA	set	268
  3729  0116                     _BORCON	set	278
  3730  018C                     _ANSELA	set	396
  3731  018D                     _ANSELB	set	397
  3732  018E                     _ANSELC	set	398
  3733  019A                     _TX1REG	set	410
  3734  0199                     _RC1REG	set	409
  3735  019D                     _RC1STAbits	set	413
  3736  019E                     _TX1STAbits	set	414
  3737  019C                     _SPBRGH	set	412
  3738  019B                     _SPBRGL	set	411
  3739  019E                     _TX1STA	set	414
  3740  019D                     _RC1STA	set	413
  3741  019F                     _BAUD1CON	set	415
  3742  020E                     _WPUC	set	526
  3743  020C                     _WPUA	set	524
  3744  020D                     _WPUB	set	525
  3745  028E                     _ODCONC	set	654
  3746  028D                     _ODCONB	set	653
  3747  028C                     _ODCONA	set	652
  3748  030E                     _SLRCONC	set	782
  3749  030D                     _SLRCONB	set	781
  3750  030C                     _SLRCONA	set	780
  3751  1877                     _SLRC7	set	6263
  3752  0397                     _IOCCPbits	set	919
  3753  0398                     _IOCCNbits	set	920
  3754  0399                     _IOCCFbits	set	921
  3755  1C77                     _INLVLC7	set	7287
  3756  0E9F                     _RB7PPS	set	3743
  3757                           
  3758                           	psect	stringtext4
  3759  1020                     __pstringtext4:	
  3760  1020                     STR_1:	
  3761  1020  3425               	retlw	37	;'%'
  3762  1021  3464               	retlw	100	;'d'
  3763  1022  3420               	retlw	32	;' '
  3764  1023  3420               	retlw	32	;' '
  3765  1024  3420               	retlw	32	;' '
  3766  1025  3400               	retlw	0
  3767                           
  3768                           	psect	stringtext5
  3769  1026                     __pstringtext5:	
  3770  1026                     STR_2:	
  3771  1026  347C               	retlw	124	;'|'
  3772  1027  342D               	retlw	45	;'-'
  3773  1028  3400               	retlw	0
  3774                           
  3775                           	psect	stringtext6
  3776  0000                     __pstringtext6:	
  3777                           
  3778                           ; #config settings
  3779  0000                     
  3780                           	psect	cinit
  3781  0016                     start_initialization:	
  3782  0016                     __initialization:	
  3783                           
  3784                           ; Clear objects allocated to COMMON
  3785  0016  01FC               	clrf	__pbssCOMMON& (0+127)
  3786  0017  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
  3787                           
  3788                           ; Clear objects allocated to BANK0
  3789  0018  3060               	movlw	low __pbssBANK0
  3790  0019  0084               	movwf	4
  3791  001A  3000               	movlw	high __pbssBANK0
  3792  001B  0085               	movwf	5
  3793  001C  3007               	movlw	7
  3794  001D  318A  22CF  3180   	fcall	clear_ram0
  3795                           
  3796                           ; Clear objects allocated to BANK1
  3797  0020  30A0               	movlw	low __pbssBANK1
  3798  0021  0084               	movwf	4
  3799  0022  3000               	movlw	high __pbssBANK1
  3800  0023  0085               	movwf	5
  3801  0024  302E               	movlw	46
  3802  0025  318A  22CF  3180   	fcall	clear_ram0
  3803                           
  3804                           ; Clear objects allocated to BANK2
  3805  0028  3020               	movlw	low __pbssBANK2
  3806  0029  0084               	movwf	4
  3807  002A  3001               	movlw	high __pbssBANK2
  3808  002B  0085               	movwf	5
  3809  002C  302C               	movlw	44
  3810  002D  318A  22CF         	fcall	clear_ram0
  3811  002F                     end_of_initialization:	
  3812                           ;End of C runtime variable initialization code
  3813                           
  3814  002F                     __end_of__initialization:	
  3815  002F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3816  0030  0020               	movlb	0
  3817  0031  318D  2DF8         	ljmp	_main	;jump to C main() function
  3818                           
  3819                           	psect	bssCOMMON
  3820  007C                     __pbssCOMMON:	
  3821  007C                     _speedInt:	
  3822  007C                     	ds	2
  3823                           
  3824                           	psect	bssBANK0
  3825  0060                     __pbssBANK0:	
  3826  0060                     _prec:	
  3827  0060                     	ds	2
  3828  0062                     _flags:	
  3829  0062                     	ds	2
  3830  0064                     _distInt:	
  3831  0064                     	ds	2
  3832  0066                     _eusartRxLastError:	
  3833  0066                     	ds	1
  3834                           
  3835                           	psect	bssBANK1
  3836  00A0                     __pbssBANK1:	
  3837  00A0                     _endTime:	
  3838  00A0                     	ds	4
  3839  00A4                     _startTime:	
  3840  00A4                     	ds	4
  3841  00A8                     _hallCount:	
  3842  00A8                     	ds	4
  3843  00AC                     _rpmInt:	
  3844  00AC                     	ds	4
  3845  00B0                     _heartRate:	
  3846  00B0                     	ds	4
  3847  00B4                     _distance:	
  3848  00B4                     	ds	4
  3849  00B8                     _speed:	
  3850  00B8                     	ds	4
  3851  00BC                     _rpm:	
  3852  00BC                     	ds	4
  3853  00C0                     _adcCounter:	
  3854  00C0                     	ds	4
  3855  00C4                     _counter:	
  3856  00C4                     	ds	4
  3857  00C8                     _nout:	
  3858  00C8                     	ds	2
  3859  00CA                     _width:	
  3860  00CA                     	ds	2
  3861  00CC                     _hrInt:	
  3862  00CC                     	ds	2
  3863                           
  3864                           	psect	bssBANK2
  3865  0120                     __pbssBANK2:	
  3866  0120                     _rpmValInt:	
  3867  0120                     	ds	4
  3868  0124                     _rpmVal:	
  3869  0124                     	ds	4
  3870  0128                     _timePassed:	
  3871  0128                     	ds	4
  3872  012C                     _dbuf:	
  3873  012C                     	ds	32
  3874                           
  3875                           	psect	clrtext
  3876  0ACF                     clear_ram0:	
  3877                           ;	Called with FSR0 containing the base address, and
  3878                           ;	WREG with the size to clear
  3879                           
  3880  0ACF  0064               	clrwdt	;clear the watchdog before getting into this loop
  3881  0AD0                     clrloop0:	
  3882  0AD0  0180               	clrf	0	;clear RAM location pointed to by FSR
  3883  0AD1  3101               	addfsr 0,1
  3884  0AD2  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3885  0AD3  2AD0               	goto	clrloop0	;have we reached the end yet?
  3886  0AD4  3400               	retlw	0	;all done for this memory range, return
  3887                           
  3888                           	psect	cstackBANK2
  3889  014C                     __pcstackBANK2:	
  3890  014C                     ?_printf:	
  3891  014C                     printf@fmt:	
  3892                           ; 2 bytes @ 0x0
  3893                           
  3894                           
  3895                           ; 2 bytes @ 0x0
  3896  014C                     	ds	6
  3897  0152                     printf@ap:	
  3898                           
  3899                           ; 1 bytes @ 0x6
  3900  0152                     	ds	1
  3901  0153                     ??_main:	
  3902                           
  3903                           ; 1 bytes @ 0x7
  3904  0153                     	ds	1
  3905                           
  3906                           	psect	cstackBANK1
  3907  00CE                     __pcstackBANK1:	
  3908  00CE                     _dtoa$757:	
  3909                           
  3910                           ; 2 bytes @ 0x0
  3911  00CE                     	ds	2
  3912  00D0                     dtoa@fp:	
  3913                           
  3914                           ; 1 bytes @ 0x2
  3915  00D0                     	ds	1
  3916  00D1                     dtoa@p:	
  3917                           
  3918                           ; 2 bytes @ 0x3
  3919  00D1                     	ds	2
  3920  00D3                     dtoa@w:	
  3921                           
  3922                           ; 2 bytes @ 0x5
  3923  00D3                     	ds	2
  3924  00D5                     dtoa@s:	
  3925                           
  3926                           ; 2 bytes @ 0x7
  3927  00D5                     	ds	2
  3928  00D7                     dtoa@n:	
  3929                           
  3930                           ; 8 bytes @ 0x9
  3931  00D7                     	ds	8
  3932  00DF                     dtoa@i:	
  3933                           
  3934                           ; 2 bytes @ 0x11
  3935  00DF                     	ds	2
  3936  00E1                     ?_vfprintf:	
  3937  00E1                     vfprintf@fmt:	
  3938                           ; 2 bytes @ 0x13
  3939                           
  3940                           
  3941                           ; 2 bytes @ 0x13
  3942  00E1                     	ds	2
  3943  00E3                     vfprintf@ap:	
  3944                           
  3945                           ; 1 bytes @ 0x15
  3946  00E3                     	ds	1
  3947  00E4                     ??_vfprintf:	
  3948                           
  3949                           ; 1 bytes @ 0x16
  3950  00E4                     	ds	2
  3951  00E6                     vfprintf@fp:	
  3952                           
  3953                           ; 1 bytes @ 0x18
  3954  00E6                     	ds	1
  3955  00E7                     vfprintf@cfmt:	
  3956                           
  3957                           ; 2 bytes @ 0x19
  3958  00E7                     	ds	2
  3959  00E9                     ??_printf:	
  3960                           
  3961                           ; 1 bytes @ 0x1B
  3962  00E9                     	ds	1
  3963                           
  3964                           	psect	cstackCOMMON
  3965  0070                     __pcstackCOMMON:	
  3966  0070                     ?_PIN_MANAGER_Initialize:	
  3967  0070                     ?_OSCILLATOR_Initialize:	
  3968                           ; 1 bytes @ 0x0
  3969                           
  3970  0070                     ?_ADC_Initialize:	
  3971                           ; 1 bytes @ 0x0
  3972                           
  3973  0070                     ?_TMR0_Initialize:	
  3974                           ; 1 bytes @ 0x0
  3975                           
  3976  0070                     ?_IOCCF7_DefaultInterruptHandler:	
  3977                           ; 1 bytes @ 0x0
  3978                           
  3979  0070                     ??_IOCCF7_DefaultInterruptHandler:	
  3980                           ; 1 bytes @ 0x0
  3981                           
  3982  0070                     ?_IOCCF7_ISR:	
  3983                           ; 1 bytes @ 0x0
  3984                           
  3985  0070                     ?_TMR0_DefaultInterruptHandler:	
  3986                           ; 1 bytes @ 0x0
  3987                           
  3988  0070                     ??_TMR0_DefaultInterruptHandler:	
  3989                           ; 1 bytes @ 0x0
  3990                           
  3991  0070                     ?_timerISR:	
  3992                           ; 1 bytes @ 0x0
  3993                           
  3994  0070                     ??_timerISR:	
  3995                           ; 1 bytes @ 0x0
  3996                           
  3997  0070                     ?_speedCalc:	
  3998                           ; 1 bytes @ 0x0
  3999                           
  4000  0070                     ?_resetCursor:	
  4001                           ; 1 bytes @ 0x0
  4002                           
  4003  0070                     ?_EUSART_Initialize:	
  4004                           ; 1 bytes @ 0x0
  4005                           
  4006  0070                     ?_EUSART_Write:	
  4007                           ; 1 bytes @ 0x0
  4008                           
  4009  0070                     ?_putch:	
  4010                           ; 1 bytes @ 0x0
  4011                           
  4012  0070                     ?_SYSTEM_Initialize:	
  4013                           ; 1 bytes @ 0x0
  4014                           
  4015  0070                     ?_PIN_MANAGER_IOC:	
  4016                           ; 1 bytes @ 0x0
  4017                           
  4018  0070                     ?_TMR0_ISR:	
  4019                           ; 1 bytes @ 0x0
  4020                           
  4021  0070                     ??_TMR0_ISR:	
  4022                           ; 1 bytes @ 0x0
  4023                           
  4024  0070                     ?_INTERRUPT_InterruptManager:	
  4025                           ; 1 bytes @ 0x0
  4026                           
  4027  0070                     ?_main:	
  4028                           ; 1 bytes @ 0x0
  4029                           
  4030  0070                     ?___fladd:	
  4031                           ; 1 bytes @ 0x0
  4032                           
  4033  0070                     ___fladd@b:	
  4034                           ; 4 bytes @ 0x0
  4035                           
  4036                           
  4037                           ; 4 bytes @ 0x0
  4038  0070                     	ds	4
  4039  0074                     ___fladd@a:	
  4040                           
  4041                           ; 4 bytes @ 0x4
  4042  0074                     	ds	4
  4043  0078                     ___fladd@signs:	
  4044                           
  4045                           ; 1 bytes @ 0x8
  4046  0078                     	ds	1
  4047  0079                     ___fladd@aexp:	
  4048                           
  4049                           ; 1 bytes @ 0x9
  4050  0079                     	ds	1
  4051  007A                     ___fladd@bexp:	
  4052                           
  4053                           ; 1 bytes @ 0xA
  4054  007A                     	ds	1
  4055  007B                     ___fladd@grs:	
  4056                           
  4057                           ; 1 bytes @ 0xB
  4058  007B                     	ds	1
  4059  007C                     ??_IOCCF7_ISR:	
  4060  007C                     ??_speedCalc:	
  4061                           ; 1 bytes @ 0xC
  4062                           
  4063  007C                     ??_PIN_MANAGER_IOC:	
  4064                           ; 1 bytes @ 0xC
  4065                           
  4066  007C                     ??_INTERRUPT_InterruptManager:	
  4067                           ; 1 bytes @ 0xC
  4068                           
  4069                           
  4070                           	psect	cstackBANK0
  4071  0020                     __pcstackBANK0:	
  4072                           ; 1 bytes @ 0xC
  4073                           
  4074  0020                     ??___fladd:	
  4075                           
  4076                           ; 1 bytes @ 0x0
  4077  0020                     	ds	8
  4078  0028                     ?_EUSART_SetFramingErrorHandler:	
  4079  0028                     ?_EUSART_SetOverrunErrorHandler:	
  4080                           ; 1 bytes @ 0x8
  4081                           
  4082  0028                     ?_EUSART_SetErrorHandler:	
  4083                           ; 1 bytes @ 0x8
  4084                           
  4085  0028                     ??_OSCILLATOR_Initialize:	
  4086                           ; 1 bytes @ 0x8
  4087                           
  4088  0028                     ??_ADC_Initialize:	
  4089                           ; 1 bytes @ 0x8
  4090                           
  4091  0028                     ?_IOCCF7_SetInterruptHandler:	
  4092                           ; 1 bytes @ 0x8
  4093                           
  4094  0028                     ?_TMR0_SetInterruptHandler:	
  4095                           ; 1 bytes @ 0x8
  4096                           
  4097  0028                     ??_EUSART_Write:	
  4098                           ; 1 bytes @ 0x8
  4099                           
  4100  0028                     ?_strlen:	
  4101                           ; 1 bytes @ 0x8
  4102                           
  4103  0028                     ?__Umul8_16:	
  4104                           ; 2 bytes @ 0x8
  4105                           
  4106  0028                     ?___xxtofl:	
  4107                           ; 2 bytes @ 0x8
  4108                           
  4109  0028                     ?___aodiv:	
  4110                           ; 4 bytes @ 0x8
  4111                           
  4112  0028                     ?___aomod:	
  4113                           ; 8 bytes @ 0x8
  4114                           
  4115  0028                     EUSART_Write@txData:	
  4116                           ; 8 bytes @ 0x8
  4117                           
  4118  0028                     __Umul8_16@multiplicand:	
  4119                           ; 1 bytes @ 0x8
  4120                           
  4121  0028                     EUSART_SetFramingErrorHandler@interruptHandler:	
  4122                           ; 1 bytes @ 0x8
  4123                           
  4124  0028                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  4125                           ; 2 bytes @ 0x8
  4126                           
  4127  0028                     EUSART_SetErrorHandler@interruptHandler:	
  4128                           ; 2 bytes @ 0x8
  4129                           
  4130  0028                     IOCCF7_SetInterruptHandler@InterruptHandler:	
  4131                           ; 2 bytes @ 0x8
  4132                           
  4133  0028                     TMR0_SetInterruptHandler@InterruptHandler:	
  4134                           ; 2 bytes @ 0x8
  4135                           
  4136  0028                     ___xxtofl@val:	
  4137                           ; 2 bytes @ 0x8
  4138                           
  4139  0028                     ___aodiv@divisor:	
  4140                           ; 4 bytes @ 0x8
  4141                           
  4142  0028                     ___aomod@divisor:	
  4143                           ; 8 bytes @ 0x8
  4144                           
  4145                           
  4146                           ; 8 bytes @ 0x8
  4147  0028                     	ds	1
  4148  0029                     ?_setCursor:	
  4149  0029                     ??_putch:	
  4150                           ; 1 bytes @ 0x9
  4151                           
  4152  0029                     putch@txData:	
  4153                           ; 1 bytes @ 0x9
  4154                           
  4155  0029                     setCursor@b:	
  4156                           ; 1 bytes @ 0x9
  4157                           
  4158                           
  4159                           ; 1 bytes @ 0x9
  4160  0029                     	ds	1
  4161  002A                     ??_EUSART_SetFramingErrorHandler:	
  4162  002A                     ??_EUSART_SetOverrunErrorHandler:	
  4163                           ; 1 bytes @ 0xA
  4164                           
  4165  002A                     ??_EUSART_SetErrorHandler:	
  4166                           ; 1 bytes @ 0xA
  4167                           
  4168  002A                     ??_PIN_MANAGER_Initialize:	
  4169                           ; 1 bytes @ 0xA
  4170                           
  4171  002A                     ??_TMR0_Initialize:	
  4172                           ; 1 bytes @ 0xA
  4173                           
  4174  002A                     ??_IOCCF7_SetInterruptHandler:	
  4175                           ; 1 bytes @ 0xA
  4176                           
  4177  002A                     ??_TMR0_SetInterruptHandler:	
  4178                           ; 1 bytes @ 0xA
  4179                           
  4180  002A                     ??_setCursor:	
  4181                           ; 1 bytes @ 0xA
  4182                           
  4183  002A                     ??_strlen:	
  4184                           ; 1 bytes @ 0xA
  4185                           
  4186  002A                     ??__Umul8_16:	
  4187                           ; 1 bytes @ 0xA
  4188                           
  4189  002A                     ??_EUSART_Initialize:	
  4190                           ; 1 bytes @ 0xA
  4191                           
  4192  002A                     ?_fputc:	
  4193                           ; 1 bytes @ 0xA
  4194                           
  4195  002A                     fputc@c:	
  4196                           ; 2 bytes @ 0xA
  4197                           
  4198                           
  4199                           ; 2 bytes @ 0xA
  4200  002A                     	ds	1
  4201  002B                     ??_SYSTEM_Initialize:	
  4202  002B                     strlen@a:	
  4203                           ; 1 bytes @ 0xB
  4204                           
  4205                           
  4206                           ; 1 bytes @ 0xB
  4207  002B                     	ds	1
  4208  002C                     ??___xxtofl:	
  4209  002C                     setCursor@a:	
  4210                           ; 1 bytes @ 0xC
  4211                           
  4212  002C                     fputc@fp:	
  4213                           ; 1 bytes @ 0xC
  4214                           
  4215  002C                     strlen@s:	
  4216                           ; 1 bytes @ 0xC
  4217                           
  4218  002C                     __Umul8_16@product:	
  4219                           ; 1 bytes @ 0xC
  4220                           
  4221                           
  4222                           ; 2 bytes @ 0xC
  4223  002C                     	ds	1
  4224  002D                     ??_fputc:	
  4225                           
  4226                           ; 1 bytes @ 0xD
  4227  002D                     	ds	1
  4228  002E                     __Umul8_16@word_mpld:	
  4229                           
  4230                           ; 2 bytes @ 0xE
  4231  002E                     	ds	2
  4232  0030                     ___xxtofl@sign:	
  4233  0030                     __Umul8_16@multiplier:	
  4234                           ; 1 bytes @ 0x10
  4235                           
  4236  0030                     ___aodiv@dividend:	
  4237                           ; 1 bytes @ 0x10
  4238                           
  4239  0030                     ___aomod@dividend:	
  4240                           ; 8 bytes @ 0x10
  4241                           
  4242                           
  4243                           ; 8 bytes @ 0x10
  4244  0030                     	ds	1
  4245  0031                     ___xxtofl@exp:	
  4246                           
  4247                           ; 1 bytes @ 0x11
  4248  0031                     	ds	1
  4249  0032                     ?_fputs:	
  4250  0032                     fputs@s:	
  4251                           ; 2 bytes @ 0x12
  4252                           
  4253  0032                     ___xxtofl@arg:	
  4254                           ; 2 bytes @ 0x12
  4255                           
  4256                           
  4257                           ; 4 bytes @ 0x12
  4258  0032                     	ds	2
  4259  0034                     fputs@fp:	
  4260                           
  4261                           ; 1 bytes @ 0x14
  4262  0034                     	ds	1
  4263  0035                     ??_fputs:	
  4264                           
  4265                           ; 1 bytes @ 0x15
  4266  0035                     	ds	1
  4267  0036                     ?___flmul:	
  4268  0036                     ___flmul@b:	
  4269                           ; 4 bytes @ 0x16
  4270                           
  4271                           
  4272                           ; 4 bytes @ 0x16
  4273  0036                     	ds	2
  4274  0038                     ??___aodiv:	
  4275  0038                     ??___aomod:	
  4276                           ; 1 bytes @ 0x18
  4277                           
  4278  0038                     fputs@c:	
  4279                           ; 1 bytes @ 0x18
  4280                           
  4281                           
  4282                           ; 1 bytes @ 0x18
  4283  0038                     	ds	1
  4284  0039                     ___aodiv@counter:	
  4285  0039                     ___aomod@counter:	
  4286                           ; 1 bytes @ 0x19
  4287                           
  4288  0039                     fputs@i:	
  4289                           ; 1 bytes @ 0x19
  4290                           
  4291                           
  4292                           ; 2 bytes @ 0x19
  4293  0039                     	ds	1
  4294  003A                     ___aodiv@sign:	
  4295  003A                     ___aomod@sign:	
  4296                           ; 1 bytes @ 0x1A
  4297                           
  4298  003A                     ___flmul@a:	
  4299                           ; 1 bytes @ 0x1A
  4300                           
  4301                           
  4302                           ; 4 bytes @ 0x1A
  4303  003A                     	ds	1
  4304  003B                     ?_puts:	
  4305  003B                     ?_abs:	
  4306                           ; 2 bytes @ 0x1B
  4307                           
  4308  003B                     ?_pad:	
  4309                           ; 2 bytes @ 0x1B
  4310                           
  4311  003B                     pad@buf:	
  4312                           ; 2 bytes @ 0x1B
  4313                           
  4314  003B                     abs@a:	
  4315                           ; 1 bytes @ 0x1B
  4316                           
  4317  003B                     puts@s:	
  4318                           ; 2 bytes @ 0x1B
  4319                           
  4320  003B                     ___aodiv@quotient:	
  4321                           ; 2 bytes @ 0x1B
  4322                           
  4323                           
  4324                           ; 8 bytes @ 0x1B
  4325  003B                     	ds	1
  4326  003C                     pad@p:	
  4327                           
  4328                           ; 2 bytes @ 0x1C
  4329  003C                     	ds	1
  4330  003D                     ??_puts:	
  4331  003D                     ??_abs:	
  4332                           ; 1 bytes @ 0x1D
  4333                           
  4334                           
  4335                           ; 1 bytes @ 0x1D
  4336  003D                     	ds	1
  4337  003E                     ??_pad:	
  4338  003E                     ??___flmul:	
  4339                           ; 1 bytes @ 0x1E
  4340                           
  4341                           
  4342                           ; 1 bytes @ 0x1E
  4343  003E                     	ds	1
  4344  003F                     _puts$1103:	
  4345  003F                     pad@i:	
  4346                           ; 1 bytes @ 0x1F
  4347                           
  4348                           
  4349                           ; 2 bytes @ 0x1F
  4350  003F                     	ds	1
  4351  0040                     ??_resetCursor:	
  4352                           
  4353                           ; 1 bytes @ 0x20
  4354  0040                     	ds	1
  4355  0041                     pad@w:	
  4356                           
  4357                           ; 2 bytes @ 0x21
  4358  0041                     	ds	2
  4359  0043                     pad@fp:	
  4360  0043                     ___flmul@sign:	
  4361                           ; 1 bytes @ 0x23
  4362                           
  4363                           
  4364                           ; 1 bytes @ 0x23
  4365  0043                     	ds	1
  4366  0044                     ?_dtoa:	
  4367  0044                     ___flmul@grs:	
  4368                           ; 2 bytes @ 0x24
  4369                           
  4370  0044                     dtoa@d:	
  4371                           ; 4 bytes @ 0x24
  4372                           
  4373                           
  4374                           ; 8 bytes @ 0x24
  4375  0044                     	ds	4
  4376  0048                     ___flmul@aexp:	
  4377                           
  4378                           ; 1 bytes @ 0x28
  4379  0048                     	ds	1
  4380  0049                     ___flmul@bexp:	
  4381                           
  4382                           ; 1 bytes @ 0x29
  4383  0049                     	ds	1
  4384  004A                     ___flmul@prod:	
  4385                           
  4386                           ; 4 bytes @ 0x2A
  4387  004A                     	ds	2
  4388  004C                     ??_dtoa:	
  4389                           
  4390                           ; 1 bytes @ 0x2C
  4391  004C                     	ds	2
  4392  004E                     ___flmul@temp:	
  4393                           
  4394                           ; 2 bytes @ 0x2E
  4395  004E                     	ds	1
  4396  004F                     ?_vfpfcnvrt:	
  4397  004F                     vfpfcnvrt@fmt:	
  4398                           ; 2 bytes @ 0x2F
  4399                           
  4400                           
  4401                           ; 1 bytes @ 0x2F
  4402  004F                     	ds	1
  4403  0050                     ?___fltol:	
  4404  0050                     vfpfcnvrt@ap:	
  4405                           ; 4 bytes @ 0x30
  4406                           
  4407  0050                     ___fltol@f1:	
  4408                           ; 1 bytes @ 0x30
  4409                           
  4410                           
  4411                           ; 4 bytes @ 0x30
  4412  0050                     	ds	1
  4413  0051                     ??_vfpfcnvrt:	
  4414                           
  4415                           ; 1 bytes @ 0x31
  4416  0051                     	ds	3
  4417  0054                     ??___fltol:	
  4418                           
  4419                           ; 1 bytes @ 0x34
  4420  0054                     	ds	2
  4421  0056                     vfpfcnvrt@ll:	
  4422                           
  4423                           ; 8 bytes @ 0x36
  4424  0056                     	ds	3
  4425  0059                     ___fltol@sign1:	
  4426                           
  4427                           ; 1 bytes @ 0x39
  4428  0059                     	ds	1
  4429  005A                     ___fltol@exp1:	
  4430                           
  4431                           ; 1 bytes @ 0x3A
  4432  005A                     	ds	4
  4433  005E                     vfpfcnvrt@vp:	
  4434                           
  4435                           ; 1 bytes @ 0x3E
  4436  005E                     	ds	1
  4437  005F                     vfpfcnvrt@fp:	
  4438                           
  4439                           ; 1 bytes @ 0x3F
  4440  005F                     	ds	1
  4441                           
  4442                           	psect	maintext
  4443  0DF8                     __pmaintext:	
  4444 ;;
  4445 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  4446 ;;
  4447 ;; *************** function _main *****************
  4448 ;; Defined at:
  4449 ;;		line 40 in file "main.c"
  4450 ;; Parameters:    Size  Location     Type
  4451 ;;		None
  4452 ;; Auto vars:     Size  Location     Type
  4453 ;;		None
  4454 ;; Return value:  Size  Location     Type
  4455 ;;                  1    wreg      void 
  4456 ;; Registers used:
  4457 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4458 ;; Tracked objects:
  4459 ;;		On entry : B1F/0
  4460 ;;		On exit  : 0/0
  4461 ;;		Unchanged: 0/0
  4462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4465 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  4466 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  4467 ;;Total ram usage:        1 bytes
  4468 ;; Hardware stack levels required when called:   14
  4469 ;; This function calls:
  4470 ;;		_IOCCF7_SetInterruptHandler
  4471 ;;		_SYSTEM_Initialize
  4472 ;;		_TMR0_SetInterruptHandler
  4473 ;;		___flmul
  4474 ;;		___fltol
  4475 ;;		___xxtofl
  4476 ;;		_printf
  4477 ;;		_resetCursor
  4478 ;;		_setCursor
  4479 ;; This function is called by:
  4480 ;;		Startup code after reset
  4481 ;; This function uses a non-reentrant model
  4482 ;;
  4483                           
  4484                           
  4485                           ;psect for function _main
  4486  0DF8                     _main:	
  4487                           
  4488                           ;main.c: 43:     SYSTEM_Initialize();
  4489                           
  4490                           ;incstack = 0
  4491                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4492  0DF8  318B  233D  318D   	fcall	_SYSTEM_Initialize
  4493                           
  4494                           ;main.c: 46:     TMR0_SetInterruptHandler( timerISR ) ;
  4495  0DFB  304C               	movlw	low _timerISR
  4496  0DFC  0020               	movlb	0	; select bank0
  4497  0DFD  00A8               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  4498  0DFE  300B               	movlw	high _timerISR
  4499  0DFF  00A9               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  4500  0E00  318B  2318  318D   	fcall	_TMR0_SetInterruptHandler
  4501                           
  4502                           ;main.c: 47:     IOCCF7_SetInterruptHandler( speedCalc ) ;
  4503  0E03  3054               	movlw	low _speedCalc
  4504  0E04  0020               	movlb	0	; select bank0
  4505  0E05  00A8               	movwf	IOCCF7_SetInterruptHandler@InterruptHandler
  4506  0E06  300C               	movlw	high _speedCalc
  4507  0E07  00A9               	movwf	IOCCF7_SetInterruptHandler@InterruptHandler+1
  4508  0E08  318B  230F  318D   	fcall	_IOCCF7_SetInterruptHandler
  4509                           
  4510                           ;main.c: 50:     resetCursor() ;
  4511  0E0B  318A  22EC  318D   	fcall	_resetCursor
  4512                           
  4513                           ;main.c: 53:     (INTCONbits.GIE = 1);
  4514  0E0E  178B               	bsf	11,7	;volatile
  4515                           
  4516                           ;main.c: 54:     (INTCONbits.PEIE = 1);
  4517  0E0F  170B               	bsf	11,6	;volatile
  4518  0E10                     l3370:	
  4519                           
  4520                           ;main.c: 59:         startTime = counter ;
  4521  0E10  0021               	movlb	1	; select bank1
  4522  0E11  0847               	movf	(_counter+3)^(0+128),w	;volatile
  4523  0E12  0020               	movlb	0	; select bank0
  4524  0E13  00AB               	movwf	___xxtofl@val+3
  4525  0E14  0021               	movlb	1	; select bank1
  4526  0E15  0846               	movf	(_counter+2)^(0+128),w	;volatile
  4527  0E16  0020               	movlb	0	; select bank0
  4528  0E17  00AA               	movwf	___xxtofl@val+2
  4529  0E18  0021               	movlb	1	; select bank1
  4530  0E19  0845               	movf	(_counter+1)^(0+128),w	;volatile
  4531  0E1A  0020               	movlb	0	; select bank0
  4532  0E1B  00A9               	movwf	___xxtofl@val+1
  4533  0E1C  0021               	movlb	1	; select bank1
  4534  0E1D  0844               	movf	_counter^(0+128),w	;volatile
  4535  0E1E  0020               	movlb	0	; select bank0
  4536  0E1F  00A8               	movwf	___xxtofl@val
  4537  0E20  3001               	movlw	1
  4538  0E21  318E  268B  318D   	fcall	___xxtofl
  4539  0E24  0020               	movlb	0	; select bank0
  4540  0E25  082B               	movf	?___xxtofl+3,w
  4541  0E26  0021               	movlb	1	; select bank1
  4542  0E27  00A7               	movwf	(_startTime+3)^(0+128)	;volatile
  4543  0E28  0020               	movlb	0	; select bank0
  4544  0E29  082A               	movf	?___xxtofl+2,w
  4545  0E2A  0021               	movlb	1	; select bank1
  4546  0E2B  00A6               	movwf	(_startTime+2)^(0+128)	;volatile
  4547  0E2C  0020               	movlb	0	; select bank0
  4548  0E2D  0829               	movf	?___xxtofl+1,w
  4549  0E2E  0021               	movlb	1	; select bank1
  4550  0E2F  00A5               	movwf	(_startTime+1)^(0+128)	;volatile
  4551  0E30  0020               	movlb	0	; select bank0
  4552  0E31  0828               	movf	?___xxtofl,w
  4553  0E32  0021               	movlb	1	; select bank1
  4554  0E33  00A4               	movwf	_startTime^(0+128)	;volatile
  4555                           
  4556                           ;main.c: 60:         setCursor(1,0);
  4557  0E34  0020               	movlb	0	; select bank0
  4558  0E35  01A9               	clrf	setCursor@b
  4559  0E36  3001               	movlw	1
  4560  0E37  318C  24FD  318D   	fcall	_setCursor
  4561                           
  4562                           ;main.c: 61:         _delay((unsigned long)((50)*(500000/4000.0)));
  4563  0E3A  3009               	movlw	9
  4564  0E3B  0022               	movlb	2	; select bank2
  4565  0E3C  00D3               	movwf	??_main^(0+256)
  4566  0E3D  301C               	movlw	28
  4567  0E3E                     u3977:	
  4568  0E3E  0B89               	decfsz	9,f
  4569  0E3F  2E3E               	goto	u3977
  4570  0E40  0BD3               	decfsz	??_main^(0+256),f
  4571  0E41  2E3E               	goto	u3977
  4572  0E42  0000               	nop
  4573                           
  4574                           ;main.c: 62:         printf("%d   ", (int)( distInt * 1.8 ) ) ;
  4575  0E43  3020               	movlw	low (STR_1| (0+32768))
  4576  0E44  0022               	movlb	2	; select bank2
  4577  0E45  00CC               	movwf	printf@fmt^(0+256)
  4578  0E46  3090               	movlw	high (STR_1| (0+32768))
  4579  0E47  00CD               	movwf	(printf@fmt^(0+256)+1)
  4580  0E48  0020               	movlb	0	; select bank0
  4581  0E49  0864               	movf	_distInt,w	;volatile
  4582  0E4A  00A8               	movwf	___xxtofl@val
  4583  0E4B  0865               	movf	_distInt+1,w	;volatile
  4584  0E4C  00A9               	movwf	___xxtofl@val+1
  4585  0E4D  0D89               	rlf	9,f
  4586  0E4E  3B89               	subwfb	9,f
  4587  0E4F  0989               	comf	9,f
  4588  0E50  00AA               	movwf	___xxtofl@val+2
  4589  0E51  00AB               	movwf	___xxtofl@val+3
  4590  0E52  3001               	movlw	1
  4591  0E53  318E  268B  318D   	fcall	___xxtofl
  4592  0E56  0020               	movlb	0	; select bank0
  4593  0E57  082B               	movf	?___xxtofl+3,w
  4594  0E58  00BD               	movwf	___flmul@a+3
  4595  0E59  082A               	movf	?___xxtofl+2,w
  4596  0E5A  00BC               	movwf	___flmul@a+2
  4597  0E5B  0829               	movf	?___xxtofl+1,w
  4598  0E5C  00BB               	movwf	___flmul@a+1
  4599  0E5D  0828               	movf	?___xxtofl,w
  4600  0E5E  00BA               	movwf	___flmul@a
  4601  0E5F  303F               	movlw	63
  4602  0E60  00B9               	movwf	___flmul@b+3
  4603  0E61  30E6               	movlw	230
  4604  0E62  00B8               	movwf	___flmul@b+2
  4605  0E63  3066               	movlw	102
  4606  0E64  00B7               	movwf	___flmul@b+1
  4607  0E65  3066               	movlw	102
  4608  0E66  00B6               	movwf	___flmul@b
  4609  0E67  3180  2033  318D   	fcall	___flmul
  4610  0E6A  0020               	movlb	0	; select bank0
  4611  0E6B  0839               	movf	?___flmul+3,w
  4612  0E6C  00D3               	movwf	___fltol@f1+3
  4613  0E6D  0838               	movf	?___flmul+2,w
  4614  0E6E  00D2               	movwf	___fltol@f1+2
  4615  0E6F  0837               	movf	?___flmul+1,w
  4616  0E70  00D1               	movwf	___fltol@f1+1
  4617  0E71  0836               	movf	?___flmul,w
  4618  0E72  00D0               	movwf	___fltol@f1
  4619  0E73  318D  2592  318D   	fcall	___fltol
  4620  0E76  0020               	movlb	0	; select bank0
  4621  0E77  0851               	movf	?___fltol+1,w
  4622  0E78  0022               	movlb	2	; select bank2
  4623  0E79  00CF               	movwf	((?_printf+1)^(0+256)+2)
  4624  0E7A  0020               	movlb	0	; select bank0
  4625  0E7B  0850               	movf	?___fltol,w
  4626  0E7C  0022               	movlb	2	; select bank2
  4627  0E7D  00CE               	movwf	(?_printf^(0+256)+2)
  4628  0E7E  318B  2373  318D   	fcall	_printf
  4629                           
  4630                           ;main.c: 63:         _delay((unsigned long)((50)*(500000/4000.0)));
  4631  0E81  3009               	movlw	9
  4632  0E82  0022               	movlb	2	; select bank2
  4633  0E83  00D3               	movwf	??_main^(0+256)
  4634  0E84  301C               	movlw	28
  4635  0E85                     u3987:	
  4636  0E85  0B89               	decfsz	9,f
  4637  0E86  2E85               	goto	u3987
  4638  0E87  0BD3               	decfsz	??_main^(0+256),f
  4639  0E88  2E85               	goto	u3987
  4640  0E89  0000               	nop
  4641  0E8A  2E10               	goto	l3370
  4642  0E8B                     __end_of_main:	
  4643                           
  4644                           	psect	text1
  4645  0CFD                     __ptext1:	
  4646 ;; *************** function _setCursor *****************
  4647 ;; Defined at:
  4648 ;;		line 67 in file "displayOptions.c"
  4649 ;; Parameters:    Size  Location     Type
  4650 ;;  a               1    wreg     unsigned char 
  4651 ;;  b               1    9[BANK0 ] unsigned char 
  4652 ;; Auto vars:     Size  Location     Type
  4653 ;;  a               1   12[BANK0 ] unsigned char 
  4654 ;; Return value:  Size  Location     Type
  4655 ;;                  1    wreg      void 
  4656 ;; Registers used:
  4657 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4658 ;; Tracked objects:
  4659 ;;		On entry : 0/0
  4660 ;;		On exit  : 0/0
  4661 ;;		Unchanged: 0/0
  4662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4663 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4664 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4665 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4666 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4667 ;;Total ram usage:        4 bytes
  4668 ;; Hardware stack levels used:    1
  4669 ;; Hardware stack levels required when called:    6
  4670 ;; This function calls:
  4671 ;;		_EUSART_Write
  4672 ;; This function is called by:
  4673 ;;		_main
  4674 ;; This function uses a non-reentrant model
  4675 ;;
  4676                           
  4677                           
  4678                           ;psect for function _setCursor
  4679  0CFD                     _setCursor:	
  4680                           
  4681                           ;incstack = 0
  4682                           ; Regs used in _setCursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4683                           ;setCursor@a stored from wreg
  4684  0CFD  0020               	movlb	0	; select bank0
  4685  0CFE  00AC               	movwf	setCursor@a
  4686                           
  4687                           ;displayOptions.c: 68:     switch ( a ){
  4688  0CFF  2D28               	goto	l3332
  4689  0D00                     l3322:	
  4690                           
  4691                           ;displayOptions.c: 70:         {;displayOptions.c: 71:             EUSART_Write( 254 );
  4692  0D00  30FE               	movlw	254
  4693  0D01  318A  22E4  318C   	fcall	_EUSART_Write
  4694                           
  4695                           ;displayOptions.c: 72:             EUSART_Write(128 + 0 + b) ;
  4696  0D04  0020               	movlb	0	; select bank0
  4697  0D05  0829               	movf	setCursor@b,w
  4698  0D06  3E80               	addlw	128
  4699  0D07  318A  22E4         	fcall	_EUSART_Write
  4700                           
  4701                           ;displayOptions.c: 73:             break ;
  4702  0D09  0008               	return
  4703  0D0A                     l3324:	
  4704                           
  4705                           ;displayOptions.c: 76:         {;displayOptions.c: 77:            EUSART_Write( 254 );
  4706  0D0A  30FE               	movlw	254
  4707  0D0B  318A  22E4  318C   	fcall	_EUSART_Write
  4708                           
  4709                           ;displayOptions.c: 78:            EUSART_Write(128 + 64 + b) ;
  4710  0D0E  0020               	movlb	0	; select bank0
  4711  0D0F  0829               	movf	setCursor@b,w
  4712  0D10  3EC0               	addlw	192
  4713  0D11  318A  22E4         	fcall	_EUSART_Write
  4714                           
  4715                           ;displayOptions.c: 79:            break ;
  4716  0D13  0008               	return
  4717  0D14                     l3326:	
  4718                           
  4719                           ;displayOptions.c: 82:         {;displayOptions.c: 83:             EUSART_Write( 254 );
  4720  0D14  30FE               	movlw	254
  4721  0D15  318A  22E4  318C   	fcall	_EUSART_Write
  4722                           
  4723                           ;displayOptions.c: 84:             EUSART_Write(128 + 20 + b) ;
  4724  0D18  0020               	movlb	0	; select bank0
  4725  0D19  0829               	movf	setCursor@b,w
  4726  0D1A  3E94               	addlw	148
  4727  0D1B  318A  22E4         	fcall	_EUSART_Write
  4728                           
  4729                           ;displayOptions.c: 85:             break ;
  4730  0D1D  0008               	return
  4731  0D1E                     l3328:	
  4732                           
  4733                           ;displayOptions.c: 88:         {;displayOptions.c: 89:             EUSART_Write( 254 );
  4734  0D1E  30FE               	movlw	254
  4735  0D1F  318A  22E4  318C   	fcall	_EUSART_Write
  4736                           
  4737                           ;displayOptions.c: 90:             EUSART_Write(128 + 84 + b) ;
  4738  0D22  0020               	movlb	0	; select bank0
  4739  0D23  0829               	movf	setCursor@b,w
  4740  0D24  3ED4               	addlw	212
  4741  0D25  318A  22E4         	fcall	_EUSART_Write
  4742                           
  4743                           ;displayOptions.c: 91:             break ;
  4744  0D27  0008               	return
  4745  0D28                     l3332:	
  4746  0D28  082C               	movf	setCursor@a,w
  4747  0D29  00AA               	movwf	??_setCursor
  4748  0D2A  01AB               	clrf	??_setCursor+1
  4749                           
  4750                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4751                           ; Switch size 1, requested type "simple"
  4752                           ; Number of cases is 1, Range of values is 0 to 0
  4753                           ; switch strategies available:
  4754                           ; Name         Instructions Cycles
  4755                           ; simple_byte            4     3 (average)
  4756                           ; direct_byte            8     6 (fixed)
  4757                           ; jumptable            260     6 (fixed)
  4758                           ;	Chosen strategy is simple_byte
  4759  0D2B  082B               	movf	??_setCursor+1,w
  4760  0D2C  3A00               	xorlw	0	; case 0
  4761  0D2D  1903               	skipnz
  4762  0D2E  2D30               	goto	l3422
  4763  0D2F  2D3E               	goto	l364
  4764  0D30                     l3422:	
  4765                           
  4766                           ; Switch size 1, requested type "simple"
  4767                           ; Number of cases is 4, Range of values is 1 to 4
  4768                           ; switch strategies available:
  4769                           ; Name         Instructions Cycles
  4770                           ; simple_byte           13     7 (average)
  4771                           ; direct_byte           17     9 (fixed)
  4772                           ; jumptable            263     9 (fixed)
  4773                           ;	Chosen strategy is simple_byte
  4774  0D30  082A               	movf	??_setCursor,w
  4775  0D31  3A01               	xorlw	1	; case 1
  4776  0D32  1903               	skipnz
  4777  0D33  2D00               	goto	l3322
  4778  0D34  3A03               	xorlw	3	; case 2
  4779  0D35  1903               	skipnz
  4780  0D36  2D0A               	goto	l3324
  4781  0D37  3A01               	xorlw	1	; case 3
  4782  0D38  1903               	skipnz
  4783  0D39  2D14               	goto	l3326
  4784  0D3A  3A07               	xorlw	7	; case 4
  4785  0D3B  1903               	skipnz
  4786  0D3C  2D1E               	goto	l3328
  4787  0D3D  2D3E               	goto	l364
  4788  0D3E                     l364:	
  4789  0D3E  0008               	return
  4790  0D3F                     __end_of_setCursor:	
  4791                           
  4792                           	psect	text2
  4793  0AEC                     __ptext2:	
  4794 ;; *************** function _resetCursor *****************
  4795 ;; Defined at:
  4796 ;;		line 54 in file "displayOptions.c"
  4797 ;; Parameters:    Size  Location     Type
  4798 ;;		None
  4799 ;; Auto vars:     Size  Location     Type
  4800 ;;		None
  4801 ;; Return value:  Size  Location     Type
  4802 ;;                  1    wreg      void 
  4803 ;; Registers used:
  4804 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4805 ;; Tracked objects:
  4806 ;;		On entry : 0/0
  4807 ;;		On exit  : 0/0
  4808 ;;		Unchanged: 0/0
  4809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4813 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4814 ;;Total ram usage:        0 bytes
  4815 ;; Hardware stack levels used:    1
  4816 ;; Hardware stack levels required when called:   10
  4817 ;; This function calls:
  4818 ;;		_puts
  4819 ;; This function is called by:
  4820 ;;		_main
  4821 ;; This function uses a non-reentrant model
  4822 ;;
  4823                           
  4824                           
  4825                           ;psect for function _resetCursor
  4826  0AEC                     _resetCursor:	
  4827                           
  4828                           ;displayOptions.c: 55:     puts("|-");
  4829                           
  4830                           ;incstack = 0
  4831                           ; Regs used in _resetCursor: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4832  0AEC  3026               	movlw	low (STR_2| (0+32768))
  4833  0AED  0020               	movlb	0	; select bank0
  4834  0AEE  00BB               	movwf	puts@s
  4835  0AEF  3090               	movlw	high (STR_2| (0+32768))
  4836  0AF0  00BC               	movwf	puts@s+1
  4837  0AF1  3187  27E2         	fcall	_puts
  4838  0AF3  0008               	return
  4839  0AF4                     __end_of_resetCursor:	
  4840                           
  4841                           	psect	text3
  4842  07E2                     __ptext3:	
  4843 ;; *************** function _puts *****************
  4844 ;; Defined at:
  4845 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\puts.c"
  4846 ;; Parameters:    Size  Location     Type
  4847 ;;  s               2   27[BANK0 ] PTR const unsigned char 
  4848 ;;		 -> STR_2(3), 
  4849 ;; Auto vars:     Size  Location     Type
  4850 ;;  r               2    0        int 
  4851 ;; Return value:  Size  Location     Type
  4852 ;;                  2   27[BANK0 ] int 
  4853 ;; Registers used:
  4854 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4855 ;; Tracked objects:
  4856 ;;		On entry : 0/0
  4857 ;;		On exit  : 0/0
  4858 ;;		Unchanged: 0/0
  4859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4860 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4861 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4863 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4864 ;;Total ram usage:        5 bytes
  4865 ;; Hardware stack levels used:    1
  4866 ;; Hardware stack levels required when called:    9
  4867 ;; This function calls:
  4868 ;;		_fputc
  4869 ;;		_fputs
  4870 ;; This function is called by:
  4871 ;;		_resetCursor
  4872 ;;		_writeString
  4873 ;; This function uses a non-reentrant model
  4874 ;;
  4875                           
  4876                           
  4877                           ;psect for function _puts
  4878  07E2                     _puts:	
  4879                           
  4880                           ;incstack = 0
  4881                           ; Regs used in _puts: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4882  07E2  0020               	movlb	0	; select bank0
  4883  07E3  01BF               	clrf	_puts$1103
  4884  07E4  0ABF               	incf	_puts$1103,f
  4885  07E5  083C               	movf	puts@s+1,w
  4886  07E6  00B3               	movwf	fputs@s+1
  4887  07E7  083B               	movf	puts@s,w
  4888  07E8  00B2               	movwf	fputs@s
  4889  07E9  01B4               	clrf	fputs@fp
  4890  07EA  318B  23FE  3187   	fcall	_fputs
  4891  07ED  0020               	movlb	0	; select bank0
  4892  07EE  1BB3               	btfsc	?_fputs+1,7
  4893  07EF  0008               	return
  4894  07F0  300A               	movlw	10
  4895  07F1  00AA               	movwf	fputc@c
  4896  07F2  3000               	movlw	0
  4897  07F3  00AB               	movwf	fputc@c+1
  4898  07F4  01AC               	clrf	fputc@fp
  4899  07F5  318C  24BD  3187   	fcall	_fputc
  4900  07F8  0020               	movlb	0	; select bank0
  4901  07F9  1BAB               	btfsc	?_fputc+1,7
  4902  07FA  0008               	return
  4903  07FB  01BF               	clrf	_puts$1103
  4904  07FC  0008               	return
  4905  07FD                     __end_of_puts:	
  4906                           
  4907                           	psect	text4
  4908  0B73                     __ptext4:	
  4909 ;; *************** function _printf *****************
  4910 ;; Defined at:
  4911 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  4912 ;; Parameters:    Size  Location     Type
  4913 ;;  fmt             2    0[BANK2 ] PTR const unsigned char 
  4914 ;;		 -> STR_1(6), 
  4915 ;; Auto vars:     Size  Location     Type
  4916 ;;  ret             2    0        int 
  4917 ;;  ap              1    6[BANK2 ] PTR void [1]
  4918 ;;		 -> ?_printf(2), 
  4919 ;; Return value:  Size  Location     Type
  4920 ;;                  2    0[BANK2 ] int 
  4921 ;; Registers used:
  4922 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4923 ;; Tracked objects:
  4924 ;;		On entry : 0/0
  4925 ;;		On exit  : 0/0
  4926 ;;		Unchanged: 0/0
  4927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4928 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  4929 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  4930 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4931 ;;      Totals:         0       0       1       7       0       0       0       0       0       0       0       0       
      +0       0
  4932 ;;Total ram usage:        8 bytes
  4933 ;; Hardware stack levels used:    1
  4934 ;; Hardware stack levels required when called:   13
  4935 ;; This function calls:
  4936 ;;		_vfprintf
  4937 ;; This function is called by:
  4938 ;;		_main
  4939 ;;		_writePrintf
  4940 ;; This function uses a non-reentrant model
  4941 ;;
  4942                           
  4943                           
  4944                           ;psect for function _printf
  4945  0B73                     _printf:	
  4946                           
  4947                           ;incstack = 0
  4948                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4949  0B73  304E               	movlw	(low ((?_printf| (0+256)+2)))& (0+255)
  4950  0B74  0021               	movlb	1	; select bank1
  4951  0B75  00E9               	movwf	??_printf^(0+128)
  4952  0B76  0869               	movf	??_printf^(0+128),w
  4953  0B77  0022               	movlb	2	; select bank2
  4954  0B78  00D2               	movwf	printf@ap^(0+256)
  4955  0B79  084D               	movf	(printf@fmt+1)^(0+256),w
  4956  0B7A  0021               	movlb	1	; select bank1
  4957  0B7B  00E2               	movwf	(vfprintf@fmt+1)^(0+128)
  4958  0B7C  0022               	movlb	2	; select bank2
  4959  0B7D  084C               	movf	printf@fmt^(0+256),w
  4960  0B7E  0021               	movlb	1	; select bank1
  4961  0B7F  00E1               	movwf	vfprintf@fmt^(0+128)
  4962  0B80  3052               	movlw	(low (printf@ap| (0+256)))& (0+255)
  4963  0B81  00E9               	movwf	??_printf^(0+128)
  4964  0B82  0869               	movf	??_printf^(0+128),w
  4965  0B83  00E3               	movwf	vfprintf@ap^(0+128)
  4966  0B84  3000               	movlw	0
  4967  0B85  318C  2427         	fcall	_vfprintf
  4968  0B87  0008               	return
  4969  0B88                     __end_of_printf:	
  4970                           
  4971                           	psect	text5
  4972  0C27                     __ptext5:	
  4973 ;; *************** function _vfprintf *****************
  4974 ;; Defined at:
  4975 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4976 ;; Parameters:    Size  Location     Type
  4977 ;;  fp              1    wreg     PTR struct _IO_FILE
  4978 ;;		 -> NULL(0), 
  4979 ;;  fmt             2   19[BANK1 ] PTR const unsigned char 
  4980 ;;		 -> STR_1(6), 
  4981 ;;  ap              1   21[BANK1 ] PTR PTR void 
  4982 ;;		 -> printf@ap(1), 
  4983 ;; Auto vars:     Size  Location     Type
  4984 ;;  fp              1   24[BANK1 ] PTR struct _IO_FILE
  4985 ;;		 -> NULL(0), 
  4986 ;;  cfmt            2   25[BANK1 ] PTR unsigned char 
  4987 ;;		 -> STR_1(6), 
  4988 ;; Return value:  Size  Location     Type
  4989 ;;                  2   19[BANK1 ] int 
  4990 ;; Registers used:
  4991 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4992 ;; Tracked objects:
  4993 ;;		On entry : 0/0
  4994 ;;		On exit  : 0/0
  4995 ;;		Unchanged: 0/0
  4996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4997 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4998 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4999 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5000 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  5001 ;;Total ram usage:        8 bytes
  5002 ;; Hardware stack levels used:    1
  5003 ;; Hardware stack levels required when called:   12
  5004 ;; This function calls:
  5005 ;;		_vfpfcnvrt
  5006 ;; This function is called by:
  5007 ;;		_printf
  5008 ;; This function uses a non-reentrant model
  5009 ;;
  5010                           
  5011                           
  5012                           ;psect for function _vfprintf
  5013  0C27                     _vfprintf:	
  5014                           
  5015                           ;incstack = 0
  5016                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5017                           ;vfprintf@fp stored from wreg
  5018  0C27  0021               	movlb	1	; select bank1
  5019  0C28  00E6               	movwf	vfprintf@fp^(0+128)
  5020                           
  5021                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  5022  0C29  0862               	movf	(vfprintf@fmt+1)^(0+128),w
  5023  0C2A  00E8               	movwf	(vfprintf@cfmt+1)^(0+128)
  5024  0C2B  0861               	movf	vfprintf@fmt^(0+128),w
  5025  0C2C  00E7               	movwf	vfprintf@cfmt^(0+128)
  5026                           
  5027                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  5028  0C2D  01C8               	clrf	_nout^(0+128)
  5029  0C2E  01C9               	clrf	(_nout+1)^(0+128)
  5030  0C2F                     l3312:	
  5031                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  5032                           
  5033                           
  5034                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  5035  0C2F  0867               	movf	vfprintf@cfmt^(0+128),w
  5036  0C30  0084               	movwf	4
  5037  0C31  0868               	movf	(vfprintf@cfmt+1)^(0+128),w
  5038  0C32  0085               	movwf	5
  5039  0C33  0012               	moviw fsr0++
  5040  0C34  1903               	btfsc	3,2
  5041  0C35  2C4F               	goto	l3314
  5042                           
  5043                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  5044  0C36  30E7               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  5045  0C37  00E4               	movwf	??_vfprintf^(0+128)
  5046  0C38  0864               	movf	??_vfprintf^(0+128),w
  5047  0C39  0020               	movlb	0	; select bank0
  5048  0C3A  00CF               	movwf	vfpfcnvrt@fmt
  5049  0C3B  0021               	movlb	1	; select bank1
  5050  0C3C  0863               	movf	vfprintf@ap^(0+128),w
  5051  0C3D  00E5               	movwf	(??_vfprintf+1)^(0+128)
  5052  0C3E  0865               	movf	(??_vfprintf+1)^(0+128),w
  5053  0C3F  0020               	movlb	0	; select bank0
  5054  0C40  00D0               	movwf	vfpfcnvrt@ap
  5055  0C41  0021               	movlb	1	; select bank1
  5056  0C42  0866               	movf	vfprintf@fp^(0+128),w
  5057  0C43  3185  25EA  318C   	fcall	_vfpfcnvrt
  5058  0C46  0020               	movlb	0	; select bank0
  5059  0C47  084F               	movf	?_vfpfcnvrt,w
  5060  0C48  0021               	movlb	1	; select bank1
  5061  0C49  07C8               	addwf	_nout^(0+128),f
  5062  0C4A  0020               	movlb	0	; select bank0
  5063  0C4B  0850               	movf	?_vfpfcnvrt+1,w
  5064  0C4C  0021               	movlb	1	; select bank1
  5065  0C4D  3DC9               	addwfc	(_nout+1)^(0+128),f
  5066  0C4E  2C2F               	goto	l3312
  5067  0C4F                     l3314:	
  5068                           
  5069                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  5070  0C4F  0849               	movf	(_nout+1)^(0+128),w
  5071  0C50  00E2               	movwf	(?_vfprintf+1)^(0+128)
  5072  0C51  0848               	movf	_nout^(0+128),w
  5073  0C52  00E1               	movwf	?_vfprintf^(0+128)
  5074  0C53  0008               	return
  5075  0C54                     __end_of_vfprintf:	
  5076                           
  5077                           	psect	text6
  5078  05EA                     __ptext6:	
  5079 ;; *************** function _vfpfcnvrt *****************
  5080 ;; Defined at:
  5081 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5082 ;; Parameters:    Size  Location     Type
  5083 ;;  fp              1    wreg     PTR struct _IO_FILE
  5084 ;;		 -> NULL(0), 
  5085 ;;  fmt             1   47[BANK0 ] PTR PTR unsigned char 
  5086 ;;		 -> vfprintf@cfmt(2), 
  5087 ;;  ap              1   48[BANK0 ] PTR PTR void 
  5088 ;;		 -> printf@ap(1), 
  5089 ;; Auto vars:     Size  Location     Type
  5090 ;;  fp              1   63[BANK0 ] PTR struct _IO_FILE
  5091 ;;		 -> NULL(0), 
  5092 ;;  ll              8   54[BANK0 ] long long 
  5093 ;;  llu             8    0        unsigned long long 
  5094 ;;  f               4    0        unsigned long long 
  5095 ;;  ct              3    0        unsigned char [3]
  5096 ;;  i               2    0        int 
  5097 ;;  done            2    0        int 
  5098 ;;  cp              2    0        PTR unsigned char 
  5099 ;;  vp              1   62[BANK0 ] PTR void 
  5100 ;;		 -> ?_printf(2), 
  5101 ;;  c               1    0        unsigned char 
  5102 ;; Return value:  Size  Location     Type
  5103 ;;                  2   47[BANK0 ] int 
  5104 ;; Registers used:
  5105 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5106 ;; Tracked objects:
  5107 ;;		On entry : 0/0
  5108 ;;		On exit  : 0/0
  5109 ;;		Unchanged: 0/0
  5110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5111 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5112 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5113 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5114 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5115 ;;Total ram usage:       17 bytes
  5116 ;; Hardware stack levels used:    1
  5117 ;; Hardware stack levels required when called:   11
  5118 ;; This function calls:
  5119 ;;		_dtoa
  5120 ;;		_fputc
  5121 ;; This function is called by:
  5122 ;;		_vfprintf
  5123 ;; This function uses a non-reentrant model
  5124 ;;
  5125                           
  5126                           
  5127                           ;psect for function _vfpfcnvrt
  5128  05EA                     _vfpfcnvrt:	
  5129                           
  5130                           ;incstack = 0
  5131                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5132                           ;vfpfcnvrt@fp stored from wreg
  5133  05EA  0020               	movlb	0	; select bank0
  5134  05EB  00DF               	movwf	vfpfcnvrt@fp
  5135                           
  5136                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  5137  05EC  084F               	movf	vfpfcnvrt@fmt,w
  5138  05ED  0086               	movwf	6
  5139  05EE  0187               	clrf	7
  5140  05EF  3F40               	moviw [0]fsr1
  5141  05F0  00D1               	movwf	??_vfpfcnvrt
  5142  05F1  3F41               	moviw [1]fsr1
  5143  05F2  00D2               	movwf	??_vfpfcnvrt+1
  5144  05F3  0851               	movf	??_vfpfcnvrt,w
  5145  05F4  0084               	movwf	4
  5146  05F5  0852               	movf	??_vfpfcnvrt+1,w
  5147  05F6  0085               	movwf	5
  5148  05F7  0012               	moviw fsr0++
  5149  05F8  3A25               	xorlw	37
  5150  05F9  1D03               	btfss	3,2
  5151  05FA  2EC8               	goto	l3286
  5152                           
  5153                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  5154  05FB  084F               	movf	vfpfcnvrt@fmt,w
  5155  05FC  0086               	movwf	6
  5156  05FD  0187               	clrf	7
  5157  05FE  3001               	movlw	1
  5158  05FF  0781               	addwf	1,f
  5159  0600  3141               	addfsr 1,1
  5160  0601  1803               	skipnc
  5161  0602  0A81               	incf	1,f
  5162                           
  5163                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  5164  0603  0021               	movlb	1	; select bank1
  5165  0604  01CA               	clrf	_width^(0+128)
  5166  0605  01CB               	clrf	(_width+1)^(0+128)
  5167  0606  0020               	movlb	0	; select bank0
  5168  0607  01E2               	clrf	_flags
  5169  0608  01E3               	clrf	_flags+1
  5170                           
  5171                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  5172  0609  30FF               	movlw	255
  5173  060A  00E0               	movwf	_prec
  5174  060B  30FF               	movlw	255
  5175  060C  00E1               	movwf	_prec+1
  5176                           
  5177                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  5178  060D  084F               	movf	vfpfcnvrt@fmt,w
  5179  060E  0086               	movwf	6
  5180  060F  0187               	clrf	7
  5181  0610  3F40               	moviw [0]fsr1
  5182  0611  00D1               	movwf	??_vfpfcnvrt
  5183  0612  3F41               	moviw [1]fsr1
  5184  0613  00D2               	movwf	??_vfpfcnvrt+1
  5185  0614  0851               	movf	??_vfpfcnvrt,w
  5186  0615  0084               	movwf	4
  5187  0616  0852               	movf	??_vfpfcnvrt+1,w
  5188  0617  0085               	movwf	5
  5189  0618  0012               	moviw fsr0++
  5190  0619  3A64               	xorlw	100
  5191  061A  1903               	btfsc	3,2
  5192  061B  2E2B               	goto	l3250
  5193  061C  084F               	movf	vfpfcnvrt@fmt,w
  5194  061D  0086               	movwf	6
  5195  061E  0187               	clrf	7
  5196  061F  3F40               	moviw [0]fsr1
  5197  0620  00D1               	movwf	??_vfpfcnvrt
  5198  0621  3F41               	moviw [1]fsr1
  5199  0622  00D2               	movwf	??_vfpfcnvrt+1
  5200  0623  0851               	movf	??_vfpfcnvrt,w
  5201  0624  0084               	movwf	4
  5202  0625  0852               	movf	??_vfpfcnvrt+1,w
  5203  0626  0085               	movwf	5
  5204  0627  0012               	moviw fsr0++
  5205  0628  3A69               	xorlw	105
  5206  0629  1D03               	btfss	3,2
  5207  062A  2E67               	goto	l3258
  5208  062B                     l3250:	
  5209                           
  5210                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  5211  062B  084F               	movf	vfpfcnvrt@fmt,w
  5212  062C  0086               	movwf	6
  5213  062D  0187               	clrf	7
  5214  062E  3001               	movlw	1
  5215  062F  0781               	addwf	1,f
  5216  0630  3141               	addfsr 1,1
  5217  0631  1803               	skipnc
  5218  0632  0A81               	incf	1,f
  5219                           
  5220                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  5221  0633  0850               	movf	vfpfcnvrt@ap,w
  5222  0634  0086               	movwf	6
  5223  0635  3001               	movlw	1	; select bank2/3
  5224  0636  0087               	movwf	7
  5225  0637  0801               	movf	1,w
  5226  0638  0084               	movwf	4
  5227  0639  3001               	movlw	1	; select bank2/3
  5228  063A  0085               	movwf	5
  5229  063B  3002               	movlw	2
  5230  063C  0781               	addwf	1,f
  5231  063D  3F00               	moviw [0]fsr0
  5232  063E  00D1               	movwf	??_vfpfcnvrt
  5233  063F  3F01               	moviw [1]fsr0
  5234  0640  00D2               	movwf	??_vfpfcnvrt+1
  5235  0641  0851               	movf	??_vfpfcnvrt,w
  5236  0642  00D6               	movwf	vfpfcnvrt@ll
  5237  0643  0852               	movf	??_vfpfcnvrt+1,w
  5238  0644  00D7               	movwf	vfpfcnvrt@ll+1
  5239  0645  0D89               	rlf	9,f
  5240  0646  3B89               	subwfb	9,f
  5241  0647  0989               	comf	9,f
  5242  0648  00D8               	movwf	vfpfcnvrt@ll+2
  5243  0649  00D9               	movwf	vfpfcnvrt@ll+3
  5244  064A  00DA               	movwf	vfpfcnvrt@ll+4
  5245  064B  00DB               	movwf	vfpfcnvrt@ll+5
  5246  064C  00DC               	movwf	vfpfcnvrt@ll+6
  5247  064D  00DD               	movwf	vfpfcnvrt@ll+7
  5248                           
  5249                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  5250  064E  0856               	movf	vfpfcnvrt@ll,w
  5251  064F  00C4               	movwf	dtoa@d
  5252  0650  0857               	movf	vfpfcnvrt@ll+1,w
  5253  0651  00C5               	movwf	dtoa@d+1
  5254  0652  0858               	movf	vfpfcnvrt@ll+2,w
  5255  0653  00C6               	movwf	dtoa@d+2
  5256  0654  0859               	movf	vfpfcnvrt@ll+3,w
  5257  0655  00C7               	movwf	dtoa@d+3
  5258  0656  085A               	movf	vfpfcnvrt@ll+4,w
  5259  0657  00C8               	movwf	dtoa@d+4
  5260  0658  085B               	movf	vfpfcnvrt@ll+5,w
  5261  0659  00C9               	movwf	dtoa@d+5
  5262  065A  085C               	movf	vfpfcnvrt@ll+6,w
  5263  065B  00CA               	movwf	dtoa@d+6
  5264  065C  085D               	movf	vfpfcnvrt@ll+7,w
  5265  065D  00CB               	movwf	dtoa@d+7
  5266  065E  085F               	movf	vfpfcnvrt@fp,w
  5267  065F  3184  2448         	fcall	_dtoa
  5268  0661  0020               	movlb	0	; select bank0
  5269  0662  0845               	movf	?_dtoa+1,w
  5270  0663  00D0               	movwf	?_vfpfcnvrt+1
  5271  0664  0844               	movf	?_dtoa,w
  5272  0665  00CF               	movwf	?_vfpfcnvrt
  5273  0666  0008               	return
  5274  0667                     l3258:	
  5275                           
  5276                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1077:      
      +                             if (*fmt[0] == 'n') {
  5277  0667  084F               	movf	vfpfcnvrt@fmt,w
  5278  0668  0086               	movwf	6
  5279  0669  0187               	clrf	7
  5280  066A  3F40               	moviw [0]fsr1
  5281  066B  00D1               	movwf	??_vfpfcnvrt
  5282  066C  3F41               	moviw [1]fsr1
  5283  066D  00D2               	movwf	??_vfpfcnvrt+1
  5284  066E  0851               	movf	??_vfpfcnvrt,w
  5285  066F  0084               	movwf	4
  5286  0670  0852               	movf	??_vfpfcnvrt+1,w
  5287  0671  0085               	movwf	5
  5288  0672  0012               	moviw fsr0++
  5289  0673  3A6E               	xorlw	110
  5290  0674  1D03               	btfss	3,2
  5291  0675  2E98               	goto	l3270
  5292                           
  5293                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1078:      
      +                                 ++*fmt;
  5294  0676  084F               	movf	vfpfcnvrt@fmt,w
  5295  0677  0086               	movwf	6
  5296  0678  0187               	clrf	7
  5297  0679  3001               	movlw	1
  5298  067A  0781               	addwf	1,f
  5299  067B  3141               	addfsr 1,1
  5300  067C  1803               	skipnc
  5301  067D  0A81               	incf	1,f
  5302                           
  5303                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1079:      
      +                                 vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
  5304  067E  0850               	movf	vfpfcnvrt@ap,w
  5305  067F  0086               	movwf	6
  5306  0680  3001               	movlw	1	; select bank2/3
  5307  0681  0087               	movwf	7
  5308  0682  3F40               	moviw [0]fsr1
  5309  0683  0084               	movwf	4
  5310  0684  3001               	movlw	1	; select bank2/3
  5311  0685  0085               	movwf	5
  5312  0686  0A81               	incf	1,f
  5313  0687  0800               	movf	0,w
  5314  0688  00D1               	movwf	??_vfpfcnvrt
  5315  0689  0851               	movf	??_vfpfcnvrt,w
  5316  068A  00DE               	movwf	vfpfcnvrt@vp
  5317                           
  5318                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1080:      
      +                                 *(int *)vp = nout;
  5319  068B  085E               	movf	vfpfcnvrt@vp,w
  5320  068C  0086               	movwf	6
  5321  068D  3001               	movlw	1	; select bank2/3
  5322  068E  0087               	movwf	7
  5323  068F  0021               	movlb	1	; select bank1
  5324  0690  0848               	movf	_nout^(0+128),w
  5325  0691  3FC0               	movwi [0]fsr1
  5326  0692  0849               	movf	(_nout+1)^(0+128),w
  5327  0693  3FC1               	movwi [1]fsr1
  5328  0694                     l3266:	
  5329                           
  5330                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1081:      
      +                                 return 0;
  5331  0694  0020               	movlb	0	; select bank0
  5332  0695  01CF               	clrf	?_vfpfcnvrt
  5333  0696  01D0               	clrf	?_vfpfcnvrt+1
  5334  0697  0008               	return
  5335  0698                     l3270:	
  5336                           
  5337                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  5338  0698  084F               	movf	vfpfcnvrt@fmt,w
  5339  0699  0086               	movwf	6
  5340  069A  0187               	clrf	7
  5341  069B  3F40               	moviw [0]fsr1
  5342  069C  00D1               	movwf	??_vfpfcnvrt
  5343  069D  3F41               	moviw [1]fsr1
  5344  069E  00D2               	movwf	??_vfpfcnvrt+1
  5345  069F  0851               	movf	??_vfpfcnvrt,w
  5346  06A0  0084               	movwf	4
  5347  06A1  0852               	movf	??_vfpfcnvrt+1,w
  5348  06A2  0085               	movwf	5
  5349  06A3  0012               	moviw fsr0++
  5350  06A4  3A25               	xorlw	37
  5351  06A5  1D03               	btfss	3,2
  5352  06A6  2EBF               	goto	l3280
  5353                           
  5354                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  5355  06A7  084F               	movf	vfpfcnvrt@fmt,w
  5356  06A8  0086               	movwf	6
  5357  06A9  0187               	clrf	7
  5358  06AA  3001               	movlw	1
  5359  06AB  0781               	addwf	1,f
  5360  06AC  3141               	addfsr 1,1
  5361  06AD  1803               	skipnc
  5362  06AE  0A81               	incf	1,f
  5363                           
  5364                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  5365  06AF  3025               	movlw	37
  5366  06B0  00AA               	movwf	fputc@c
  5367  06B1  3000               	movlw	0
  5368  06B2  00AB               	movwf	fputc@c+1
  5369  06B3  085F               	movf	vfpfcnvrt@fp,w
  5370  06B4  00D1               	movwf	??_vfpfcnvrt
  5371  06B5  0851               	movf	??_vfpfcnvrt,w
  5372  06B6  00AC               	movwf	fputc@fp
  5373  06B7  318C  24BD         	fcall	_fputc
  5374  06B9                     l3276:	
  5375                           
  5376                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  5377  06B9  3001               	movlw	1
  5378  06BA  0020               	movlb	0	; select bank0
  5379  06BB  00CF               	movwf	?_vfpfcnvrt
  5380  06BC  3000               	movlw	0
  5381  06BD  00D0               	movwf	?_vfpfcnvrt+1
  5382  06BE  0008               	return
  5383  06BF                     l3280:	
  5384                           
  5385                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  5386  06BF  084F               	movf	vfpfcnvrt@fmt,w
  5387  06C0  0086               	movwf	6
  5388  06C1  0187               	clrf	7
  5389  06C2  3001               	movlw	1
  5390  06C3  0781               	addwf	1,f
  5391  06C4  3141               	addfsr 1,1
  5392  06C5  1803               	skipnc
  5393  06C6  0A81               	incf	1,f
  5394  06C7  2E94               	goto	l3266
  5395  06C8                     l3286:	
  5396                           
  5397                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  5398  06C8  084F               	movf	vfpfcnvrt@fmt,w
  5399  06C9  0086               	movwf	6
  5400  06CA  0187               	clrf	7
  5401  06CB  3F40               	moviw [0]fsr1
  5402  06CC  00D1               	movwf	??_vfpfcnvrt
  5403  06CD  3F41               	moviw [1]fsr1
  5404  06CE  00D2               	movwf	??_vfpfcnvrt+1
  5405  06CF  0851               	movf	??_vfpfcnvrt,w
  5406  06D0  0084               	movwf	4
  5407  06D1  0852               	movf	??_vfpfcnvrt+1,w
  5408  06D2  0085               	movwf	5
  5409  06D3  0800               	movf	0,w	;code access
  5410  06D4  00D3               	movwf	??_vfpfcnvrt+2
  5411  06D5  01D4               	clrf	??_vfpfcnvrt+3
  5412  06D6  0853               	movf	??_vfpfcnvrt+2,w
  5413  06D7  00AA               	movwf	fputc@c
  5414  06D8  0854               	movf	??_vfpfcnvrt+3,w
  5415  06D9  00AB               	movwf	fputc@c+1
  5416  06DA  085F               	movf	vfpfcnvrt@fp,w
  5417  06DB  00D5               	movwf	??_vfpfcnvrt+4
  5418  06DC  0855               	movf	??_vfpfcnvrt+4,w
  5419  06DD  00AC               	movwf	fputc@fp
  5420  06DE  318C  24BD  3185   	fcall	_fputc
  5421                           
  5422                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  5423  06E1  0020               	movlb	0	; select bank0
  5424  06E2  084F               	movf	vfpfcnvrt@fmt,w
  5425  06E3  0086               	movwf	6
  5426  06E4  0187               	clrf	7
  5427  06E5  3001               	movlw	1
  5428  06E6  0781               	addwf	1,f
  5429  06E7  3141               	addfsr 1,1
  5430  06E8  1803               	skipnc
  5431  06E9  0A81               	incf	1,f
  5432  06EA  2EB9               	goto	l3276
  5433  06EB                     __end_of_vfpfcnvrt:	
  5434                           
  5435                           	psect	text7
  5436  0448                     __ptext7:	
  5437 ;; *************** function _dtoa *****************
  5438 ;; Defined at:
  5439 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5440 ;; Parameters:    Size  Location     Type
  5441 ;;  fp              1    wreg     PTR struct _IO_FILE
  5442 ;;		 -> NULL(0), 
  5443 ;;  d               8   36[BANK0 ] long long 
  5444 ;; Auto vars:     Size  Location     Type
  5445 ;;  fp              1    2[BANK1 ] PTR struct _IO_FILE
  5446 ;;		 -> NULL(0), 
  5447 ;;  n               8    9[BANK1 ] long long 
  5448 ;;  i               2   17[BANK1 ] int 
  5449 ;;  s               2    7[BANK1 ] int 
  5450 ;;  w               2    5[BANK1 ] int 
  5451 ;;  p               2    3[BANK1 ] int 
  5452 ;; Return value:  Size  Location     Type
  5453 ;;                  2   36[BANK0 ] int 
  5454 ;; Registers used:
  5455 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5456 ;; Tracked objects:
  5457 ;;		On entry : 0/0
  5458 ;;		On exit  : 0/0
  5459 ;;		Unchanged: 0/0
  5460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5461 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5462 ;;      Locals:         0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0
  5463 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5464 ;;      Totals:         0      11      19       0       0       0       0       0       0       0       0       0       
      +0       0
  5465 ;;Total ram usage:       30 bytes
  5466 ;; Hardware stack levels used:    1
  5467 ;; Hardware stack levels required when called:   10
  5468 ;; This function calls:
  5469 ;;		___aodiv
  5470 ;;		___aomod
  5471 ;;		_abs
  5472 ;;		_pad
  5473 ;; This function is called by:
  5474 ;;		_vfpfcnvrt
  5475 ;; This function uses a non-reentrant model
  5476 ;;
  5477                           
  5478                           
  5479                           ;psect for function _dtoa
  5480  0448                     _dtoa:	
  5481                           
  5482                           ;incstack = 0
  5483                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5484                           ;dtoa@fp stored from wreg
  5485  0448  0021               	movlb	1	; select bank1
  5486  0449  00D0               	movwf	dtoa@fp^(0+128)
  5487                           
  5488                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  5489  044A  0020               	movlb	0	; select bank0
  5490  044B  0844               	movf	dtoa@d,w
  5491  044C  0021               	movlb	1	; select bank1
  5492  044D  00D7               	movwf	dtoa@n^(0+128)
  5493  044E  0020               	movlb	0	; select bank0
  5494  044F  0845               	movf	dtoa@d+1,w
  5495  0450  0021               	movlb	1	; select bank1
  5496  0451  00D8               	movwf	(dtoa@n+1)^(0+128)
  5497  0452  0020               	movlb	0	; select bank0
  5498  0453  0846               	movf	dtoa@d+2,w
  5499  0454  0021               	movlb	1	; select bank1
  5500  0455  00D9               	movwf	(dtoa@n+2)^(0+128)
  5501  0456  0020               	movlb	0	; select bank0
  5502  0457  0847               	movf	dtoa@d+3,w
  5503  0458  0021               	movlb	1	; select bank1
  5504  0459  00DA               	movwf	(dtoa@n+3)^(0+128)
  5505  045A  0020               	movlb	0	; select bank0
  5506  045B  0848               	movf	dtoa@d+4,w
  5507  045C  0021               	movlb	1	; select bank1
  5508  045D  00DB               	movwf	(dtoa@n+4)^(0+128)
  5509  045E  0020               	movlb	0	; select bank0
  5510  045F  0849               	movf	dtoa@d+5,w
  5511  0460  0021               	movlb	1	; select bank1
  5512  0461  00DC               	movwf	(dtoa@n+5)^(0+128)
  5513  0462  0020               	movlb	0	; select bank0
  5514  0463  084A               	movf	dtoa@d+6,w
  5515  0464  0021               	movlb	1	; select bank1
  5516  0465  00DD               	movwf	(dtoa@n+6)^(0+128)
  5517  0466  0020               	movlb	0	; select bank0
  5518  0467  084B               	movf	dtoa@d+7,w
  5519  0468  0021               	movlb	1	; select bank1
  5520  0469  00DE               	movwf	(dtoa@n+7)^(0+128)
  5521                           
  5522                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  5523  046A  30D7               	movlw	low dtoa@n
  5524  046B  0086               	movwf	6
  5525  046C  3000               	movlw	high dtoa@n
  5526  046D  0087               	movwf	7
  5527  046E  3F47               	moviw [7]fsr1
  5528  046F  0020               	movlb	0	; select bank0
  5529  0470  00CC               	movwf	??_dtoa
  5530  0471  1FCC               	btfss	??_dtoa,7
  5531  0472  2C75               	goto	u3710
  5532  0473  3001               	movlw	1
  5533  0474  2C76               	goto	u3720
  5534  0475                     u3710:	
  5535  0475  3000               	movlw	0
  5536  0476                     u3720:	
  5537  0476  0020               	movlb	0	; select bank0
  5538  0477  00CD               	movwf	??_dtoa+1
  5539  0478  01CE               	clrf	??_dtoa+2
  5540  0479  084D               	movf	??_dtoa+1,w
  5541  047A  0021               	movlb	1	; select bank1
  5542  047B  00D5               	movwf	dtoa@s^(0+128)
  5543  047C  0020               	movlb	0	; select bank0
  5544  047D  084E               	movf	??_dtoa+2,w
  5545  047E  0021               	movlb	1	; select bank1
  5546  047F  00D6               	movwf	(dtoa@s+1)^(0+128)
  5547                           
  5548                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  5549  0480  0855               	movf	dtoa@s^(0+128),w
  5550  0481  0456               	iorwf	(dtoa@s+1)^(0+128),w
  5551  0482  1903               	btfsc	3,2
  5552  0483  2CA2               	goto	l501
  5553                           
  5554                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  5555  0484  09D7               	comf	dtoa@n^(0+128),f
  5556  0485  09D8               	comf	(dtoa@n+1)^(0+128),f
  5557  0486  09D9               	comf	(dtoa@n+2)^(0+128),f
  5558  0487  09DA               	comf	(dtoa@n+3)^(0+128),f
  5559  0488  09DB               	comf	(dtoa@n+4)^(0+128),f
  5560  0489  09DC               	comf	(dtoa@n+5)^(0+128),f
  5561  048A  09DD               	comf	(dtoa@n+6)^(0+128),f
  5562  048B  09DE               	comf	(dtoa@n+7)^(0+128),f
  5563  048C  0AD7               	incf	dtoa@n^(0+128),f
  5564  048D  1D03               	skipz
  5565  048E  2CA2               	goto	l501
  5566  048F  0AD8               	incf	(dtoa@n+1)^(0+128),f
  5567  0490  1D03               	skipz
  5568  0491  2CA2               	goto	l501
  5569  0492  0AD9               	incf	(dtoa@n+2)^(0+128),f
  5570  0493  1D03               	skipz
  5571  0494  2CA2               	goto	l501
  5572  0495  0ADA               	incf	(dtoa@n+3)^(0+128),f
  5573  0496  1D03               	skipz
  5574  0497  2CA2               	goto	l501
  5575  0498  0ADB               	incf	(dtoa@n+4)^(0+128),f
  5576  0499  1D03               	skipz
  5577  049A  2CA2               	goto	l501
  5578  049B  0ADC               	incf	(dtoa@n+5)^(0+128),f
  5579  049C  1D03               	skipz
  5580  049D  2CA2               	goto	l501
  5581  049E  0ADD               	incf	(dtoa@n+6)^(0+128),f
  5582  049F  1D03               	skipz
  5583  04A0  2CA2               	goto	l501
  5584  04A1  0ADE               	incf	(dtoa@n+7)^(0+128),f
  5585  04A2                     l501:	
  5586                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 284:     }
  5587                           
  5588                           
  5589                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  5590  04A2  0020               	movlb	0	; select bank0
  5591  04A3  1BE1               	btfsc	_prec+1,7
  5592  04A4  2CA9               	goto	l502
  5593                           
  5594                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  5595  04A5  30FD               	movlw	253
  5596  04A6  05E2               	andwf	_flags,f
  5597  04A7  30FF               	movlw	255
  5598  04A8  05E3               	andwf	_flags+1,f
  5599  04A9                     l502:	
  5600                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 289:     }
  5601                           
  5602                           
  5603                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  5604  04A9  0861               	movf	_prec+1,w
  5605  04AA  3A80               	xorlw	128
  5606  04AB  00CC               	movwf	??_dtoa
  5607  04AC  3080               	movlw	128
  5608  04AD  024C               	subwf	??_dtoa,w
  5609  04AE  1D03               	skipz
  5610  04AF  2CB2               	goto	u3765
  5611  04B0  3001               	movlw	1
  5612  04B1  0260               	subwf	_prec,w
  5613  04B2                     u3765:	
  5614  04B2  1803               	skipnc
  5615  04B3  2CBA               	goto	l3192
  5616  04B4  3001               	movlw	1
  5617  04B5  0021               	movlb	1	; select bank1
  5618  04B6  00D1               	movwf	dtoa@p^(0+128)
  5619  04B7  3000               	movlw	0
  5620  04B8  00D2               	movwf	(dtoa@p^(0+128)+1)
  5621  04B9  2CC2               	goto	l506
  5622  04BA                     l3192:	
  5623  04BA  0020               	movlb	0	; select bank0
  5624  04BB  0861               	movf	_prec+1,w
  5625  04BC  0021               	movlb	1	; select bank1
  5626  04BD  00D2               	movwf	(dtoa@p+1)^(0+128)
  5627  04BE  0020               	movlb	0	; select bank0
  5628  04BF  0860               	movf	_prec,w
  5629  04C0  0021               	movlb	1	; select bank1
  5630  04C1  00D1               	movwf	dtoa@p^(0+128)
  5631  04C2                     l506:	
  5632                           
  5633                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  5634  04C2  084B               	movf	(_width+1)^(0+128),w
  5635  04C3  00D4               	movwf	(dtoa@w+1)^(0+128)
  5636  04C4  084A               	movf	_width^(0+128),w
  5637  04C5  00D3               	movwf	dtoa@w^(0+128)
  5638                           
  5639                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  5640  04C6  0855               	movf	dtoa@s^(0+128),w
  5641  04C7  0456               	iorwf	(dtoa@s+1)^(0+128),w
  5642  04C8  1D03               	btfss	3,2
  5643  04C9  2CCD               	goto	l3198
  5644  04CA  0020               	movlb	0	; select bank0
  5645  04CB  1D62               	btfss	_flags,2
  5646  04CC  2CD2               	goto	l507
  5647  04CD                     l3198:	
  5648                           
  5649                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  5650  04CD  30FF               	movlw	255
  5651  04CE  0021               	movlb	1	; select bank1
  5652  04CF  07D3               	addwf	dtoa@w^(0+128),f
  5653  04D0  30FF               	movlw	255
  5654  04D1  3DD4               	addwfc	(dtoa@w+1)^(0+128),f
  5655  04D2                     l507:	
  5656                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 294:     }
  5657                           
  5658                           
  5659                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  5660  04D2  301F               	movlw	31
  5661  04D3  0021               	movlb	1	; select bank1
  5662  04D4  00DF               	movwf	dtoa@i^(0+128)
  5663  04D5  3000               	movlw	0
  5664  04D6  00E0               	movwf	(dtoa@i^(0+128)+1)
  5665                           
  5666                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  5667  04D7  0022               	movlb	2	; select bank2
  5668  04D8  01CB               	clrf	(_dbuf^(0+256)+31)
  5669                           
  5670                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5671  04D9  2DA0               	goto	l510
  5672  04DA                     l3212:	
  5673  04DA  0021               	movlb	1	; select bank1
  5674  04DB  0857               	movf	dtoa@n^(0+128),w
  5675  04DC  0458               	iorwf	(dtoa@n+1)^(0+128),w
  5676  04DD  0459               	iorwf	(dtoa@n+2)^(0+128),w
  5677  04DE  045A               	iorwf	(dtoa@n+3)^(0+128),w
  5678  04DF  045B               	iorwf	(dtoa@n+4)^(0+128),w
  5679  04E0  045C               	iorwf	(dtoa@n+5)^(0+128),w
  5680  04E1  045D               	iorwf	(dtoa@n+6)^(0+128),w
  5681  04E2  045E               	iorwf	(dtoa@n+7)^(0+128),w
  5682  04E3  1D03               	skipz
  5683  04E4  2D03               	goto	l3202
  5684  04E5  0852               	movf	(dtoa@p+1)^(0+128),w
  5685  04E6  3A80               	xorlw	128
  5686  04E7  0020               	movlb	0	; select bank0
  5687  04E8  00CC               	movwf	??_dtoa
  5688  04E9  3080               	movlw	128
  5689  04EA  024C               	subwf	??_dtoa,w
  5690  04EB  1D03               	skipz
  5691  04EC  2CF0               	goto	u3815
  5692  04ED  3001               	movlw	1
  5693  04EE  0021               	movlb	1	; select bank1
  5694  04EF  0251               	subwf	dtoa@p^(0+128),w
  5695  04F0                     u3815:	
  5696  04F0  1803               	skipnc
  5697  04F1  2D03               	goto	l3202
  5698  04F2  0021               	movlb	1	; select bank1
  5699  04F3  0854               	movf	(dtoa@w+1)^(0+128),w
  5700  04F4  3A80               	xorlw	128
  5701  04F5  0020               	movlb	0	; select bank0
  5702  04F6  00CC               	movwf	??_dtoa
  5703  04F7  3080               	movlw	128
  5704  04F8  024C               	subwf	??_dtoa,w
  5705  04F9  1D03               	skipz
  5706  04FA  2CFE               	goto	u3825
  5707  04FB  3001               	movlw	1
  5708  04FC  0021               	movlb	1	; select bank1
  5709  04FD  0253               	subwf	dtoa@w^(0+128),w
  5710  04FE                     u3825:	
  5711  04FE  1C03               	skipc
  5712  04FF  2DAE               	goto	l3220
  5713  0500  0020               	movlb	0	; select bank0
  5714  0501  1CE2               	btfss	_flags,1
  5715  0502  2DAE               	goto	l3220
  5716  0503                     l3202:	
  5717                           
  5718                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  5719  0503  30FF               	movlw	255
  5720  0504  0021               	movlb	1	; select bank1
  5721  0505  07DF               	addwf	dtoa@i^(0+128),f
  5722  0506  30FF               	movlw	255
  5723  0507  3DE0               	addwfc	(dtoa@i+1)^(0+128),f
  5724                           
  5725                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  5726  0508  300A               	movlw	10
  5727  0509  0020               	movlb	0	; select bank0
  5728  050A  00A8               	movwf	___aomod@divisor
  5729  050B  01A9               	clrf	___aomod@divisor+1
  5730  050C  01AA               	clrf	___aomod@divisor+2
  5731  050D  01AB               	clrf	___aomod@divisor+3
  5732  050E  01AC               	clrf	___aomod@divisor+4
  5733  050F  01AD               	clrf	___aomod@divisor+5
  5734  0510  01AE               	clrf	___aomod@divisor+6
  5735  0511  01AF               	clrf	___aomod@divisor+7
  5736  0512  0021               	movlb	1	; select bank1
  5737  0513  0857               	movf	dtoa@n^(0+128),w
  5738  0514  0020               	movlb	0	; select bank0
  5739  0515  00B0               	movwf	___aomod@dividend
  5740  0516  0021               	movlb	1	; select bank1
  5741  0517  0858               	movf	(dtoa@n+1)^(0+128),w
  5742  0518  0020               	movlb	0	; select bank0
  5743  0519  00B1               	movwf	___aomod@dividend+1
  5744  051A  0021               	movlb	1	; select bank1
  5745  051B  0859               	movf	(dtoa@n+2)^(0+128),w
  5746  051C  0020               	movlb	0	; select bank0
  5747  051D  00B2               	movwf	___aomod@dividend+2
  5748  051E  0021               	movlb	1	; select bank1
  5749  051F  085A               	movf	(dtoa@n+3)^(0+128),w
  5750  0520  0020               	movlb	0	; select bank0
  5751  0521  00B3               	movwf	___aomod@dividend+3
  5752  0522  0021               	movlb	1	; select bank1
  5753  0523  085B               	movf	(dtoa@n+4)^(0+128),w
  5754  0524  0020               	movlb	0	; select bank0
  5755  0525  00B4               	movwf	___aomod@dividend+4
  5756  0526  0021               	movlb	1	; select bank1
  5757  0527  085C               	movf	(dtoa@n+5)^(0+128),w
  5758  0528  0020               	movlb	0	; select bank0
  5759  0529  00B5               	movwf	___aomod@dividend+5
  5760  052A  0021               	movlb	1	; select bank1
  5761  052B  085D               	movf	(dtoa@n+6)^(0+128),w
  5762  052C  0020               	movlb	0	; select bank0
  5763  052D  00B6               	movwf	___aomod@dividend+6
  5764  052E  0021               	movlb	1	; select bank1
  5765  052F  085E               	movf	(dtoa@n+7)^(0+128),w
  5766  0530  0020               	movlb	0	; select bank0
  5767  0531  00B7               	movwf	___aomod@dividend+7
  5768  0532  318F  2721  3184   	fcall	___aomod
  5769  0535  0020               	movlb	0	; select bank0
  5770  0536  0829               	movf	?___aomod+1,w
  5771  0537  00BC               	movwf	abs@a+1
  5772  0538  0828               	movf	?___aomod,w
  5773  0539  00BB               	movwf	abs@a
  5774  053A  318B  2388  3184   	fcall	_abs
  5775  053D  0020               	movlb	0	; select bank0
  5776  053E  083B               	movf	?_abs,w
  5777  053F  3E30               	addlw	48
  5778  0540  00CC               	movwf	??_dtoa
  5779  0541  0021               	movlb	1	; select bank1
  5780  0542  085F               	movf	dtoa@i^(0+128),w
  5781  0543  3E2C               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5782  0544  0086               	movwf	6
  5783  0545  3001               	movlw	1	; select bank2/3
  5784  0546  0087               	movwf	7
  5785  0547  0020               	movlb	0	; select bank0
  5786  0548  084C               	movf	??_dtoa,w
  5787  0549  0081               	movwf	1
  5788                           
  5789                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  5790  054A  30FF               	movlw	255
  5791  054B  0021               	movlb	1	; select bank1
  5792  054C  07D1               	addwf	dtoa@p^(0+128),f
  5793  054D  30FF               	movlw	255
  5794  054E  3DD2               	addwfc	(dtoa@p+1)^(0+128),f
  5795                           
  5796                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  5797  054F  30FF               	movlw	255
  5798  0550  07D3               	addwf	dtoa@w^(0+128),f
  5799  0551  30FF               	movlw	255
  5800  0552  3DD4               	addwfc	(dtoa@w+1)^(0+128),f
  5801                           
  5802                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  5803  0553  300A               	movlw	10
  5804  0554  0020               	movlb	0	; select bank0
  5805  0555  00A8               	movwf	___aodiv@divisor
  5806  0556  01A9               	clrf	___aodiv@divisor+1
  5807  0557  01AA               	clrf	___aodiv@divisor+2
  5808  0558  01AB               	clrf	___aodiv@divisor+3
  5809  0559  01AC               	clrf	___aodiv@divisor+4
  5810  055A  01AD               	clrf	___aodiv@divisor+5
  5811  055B  01AE               	clrf	___aodiv@divisor+6
  5812  055C  01AF               	clrf	___aodiv@divisor+7
  5813  055D  0021               	movlb	1	; select bank1
  5814  055E  0857               	movf	dtoa@n^(0+128),w
  5815  055F  0020               	movlb	0	; select bank0
  5816  0560  00B0               	movwf	___aodiv@dividend
  5817  0561  0021               	movlb	1	; select bank1
  5818  0562  0858               	movf	(dtoa@n+1)^(0+128),w
  5819  0563  0020               	movlb	0	; select bank0
  5820  0564  00B1               	movwf	___aodiv@dividend+1
  5821  0565  0021               	movlb	1	; select bank1
  5822  0566  0859               	movf	(dtoa@n+2)^(0+128),w
  5823  0567  0020               	movlb	0	; select bank0
  5824  0568  00B2               	movwf	___aodiv@dividend+2
  5825  0569  0021               	movlb	1	; select bank1
  5826  056A  085A               	movf	(dtoa@n+3)^(0+128),w
  5827  056B  0020               	movlb	0	; select bank0
  5828  056C  00B3               	movwf	___aodiv@dividend+3
  5829  056D  0021               	movlb	1	; select bank1
  5830  056E  085B               	movf	(dtoa@n+4)^(0+128),w
  5831  056F  0020               	movlb	0	; select bank0
  5832  0570  00B4               	movwf	___aodiv@dividend+4
  5833  0571  0021               	movlb	1	; select bank1
  5834  0572  085C               	movf	(dtoa@n+5)^(0+128),w
  5835  0573  0020               	movlb	0	; select bank0
  5836  0574  00B5               	movwf	___aodiv@dividend+5
  5837  0575  0021               	movlb	1	; select bank1
  5838  0576  085D               	movf	(dtoa@n+6)^(0+128),w
  5839  0577  0020               	movlb	0	; select bank0
  5840  0578  00B6               	movwf	___aodiv@dividend+6
  5841  0579  0021               	movlb	1	; select bank1
  5842  057A  085E               	movf	(dtoa@n+7)^(0+128),w
  5843  057B  0020               	movlb	0	; select bank0
  5844  057C  00B7               	movwf	___aodiv@dividend+7
  5845  057D  3186  26EB  3184   	fcall	___aodiv
  5846  0580  0020               	movlb	0	; select bank0
  5847  0581  0828               	movf	?___aodiv,w
  5848  0582  0021               	movlb	1	; select bank1
  5849  0583  00D7               	movwf	dtoa@n^(0+128)
  5850  0584  0020               	movlb	0	; select bank0
  5851  0585  0829               	movf	?___aodiv+1,w
  5852  0586  0021               	movlb	1	; select bank1
  5853  0587  00D8               	movwf	(dtoa@n+1)^(0+128)
  5854  0588  0020               	movlb	0	; select bank0
  5855  0589  082A               	movf	?___aodiv+2,w
  5856  058A  0021               	movlb	1	; select bank1
  5857  058B  00D9               	movwf	(dtoa@n+2)^(0+128)
  5858  058C  0020               	movlb	0	; select bank0
  5859  058D  082B               	movf	?___aodiv+3,w
  5860  058E  0021               	movlb	1	; select bank1
  5861  058F  00DA               	movwf	(dtoa@n+3)^(0+128)
  5862  0590  0020               	movlb	0	; select bank0
  5863  0591  082C               	movf	?___aodiv+4,w
  5864  0592  0021               	movlb	1	; select bank1
  5865  0593  00DB               	movwf	(dtoa@n+4)^(0+128)
  5866  0594  0020               	movlb	0	; select bank0
  5867  0595  082D               	movf	?___aodiv+5,w
  5868  0596  0021               	movlb	1	; select bank1
  5869  0597  00DC               	movwf	(dtoa@n+5)^(0+128)
  5870  0598  0020               	movlb	0	; select bank0
  5871  0599  082E               	movf	?___aodiv+6,w
  5872  059A  0021               	movlb	1	; select bank1
  5873  059B  00DD               	movwf	(dtoa@n+6)^(0+128)
  5874  059C  0020               	movlb	0	; select bank0
  5875  059D  082F               	movf	?___aodiv+7,w
  5876  059E  0021               	movlb	1	; select bank1
  5877  059F  00DE               	movwf	(dtoa@n+7)^(0+128)
  5878  05A0                     l510:	
  5879                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 305:     }
  5880                           
  5881                           
  5882                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5883  05A0  0021               	movlb	1	; select bank1
  5884  05A1  0860               	movf	(dtoa@i+1)^(0+128),w
  5885  05A2  3A80               	xorlw	128
  5886  05A3  0020               	movlb	0	; select bank0
  5887  05A4  00CC               	movwf	??_dtoa
  5888  05A5  3080               	movlw	128
  5889  05A6  024C               	subwf	??_dtoa,w
  5890  05A7  1D03               	skipz
  5891  05A8  2DAC               	goto	u3795
  5892  05A9  3001               	movlw	1
  5893  05AA  0021               	movlb	1	; select bank1
  5894  05AB  025F               	subwf	dtoa@i^(0+128),w
  5895  05AC                     u3795:	
  5896  05AC  1803               	btfsc	3,0
  5897  05AD  2CDA               	goto	l3212
  5898  05AE                     l3220:	
  5899                           
  5900                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  5901  05AE  0021               	movlb	1	; select bank1
  5902  05AF  0855               	movf	dtoa@s^(0+128),w
  5903  05B0  0456               	iorwf	(dtoa@s+1)^(0+128),w
  5904  05B1  1D03               	btfss	3,2
  5905  05B2  2DB6               	goto	l3224
  5906  05B3  0020               	movlb	0	; select bank0
  5907  05B4  1D62               	btfss	_flags,2
  5908  05B5  2DD1               	goto	l3234
  5909  05B6                     l3224:	
  5910                           
  5911                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  5912  05B6  30FF               	movlw	255
  5913  05B7  0021               	movlb	1	; select bank1
  5914  05B8  07DF               	addwf	dtoa@i^(0+128),f
  5915  05B9  30FF               	movlw	255
  5916  05BA  3DE0               	addwfc	(dtoa@i+1)^(0+128),f
  5917                           
  5918                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  5919  05BB  0855               	movf	dtoa@s^(0+128),w
  5920  05BC  0456               	iorwf	(dtoa@s+1)^(0+128),w
  5921  05BD  1D03               	btfss	3,2
  5922  05BE  2DC1               	goto	l3230
  5923  05BF  302B               	movlw	43
  5924  05C0  2DC2               	goto	L1
  5925  05C1                     l3230:	
  5926  05C1  302D               	movlw	45
  5927  05C2                     L1:	
  5928  05C2  00CE               	movwf	_dtoa$757^(0+128)
  5929  05C3  3000               	movlw	0
  5930  05C4  00CF               	movwf	(_dtoa$757^(0+128)+1)
  5931  05C5  084E               	movf	_dtoa$757^(0+128),w
  5932  05C6  0020               	movlb	0	; select bank0
  5933  05C7  00CC               	movwf	??_dtoa
  5934  05C8  0021               	movlb	1	; select bank1
  5935  05C9  085F               	movf	dtoa@i^(0+128),w
  5936  05CA  3E2C               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5937  05CB  0086               	movwf	6
  5938  05CC  3001               	movlw	1	; select bank2/3
  5939  05CD  0087               	movwf	7
  5940  05CE  0020               	movlb	0	; select bank0
  5941  05CF  084C               	movf	??_dtoa,w
  5942  05D0  0081               	movwf	1
  5943  05D1                     l3234:	
  5944                           
  5945                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  5946  05D1  0021               	movlb	1	; select bank1
  5947  05D2  085F               	movf	dtoa@i^(0+128),w
  5948  05D3  3E2C               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5949  05D4  0020               	movlb	0	; select bank0
  5950  05D5  00CC               	movwf	??_dtoa
  5951  05D6  084C               	movf	??_dtoa,w
  5952  05D7  00BB               	movwf	pad@buf
  5953  05D8  0021               	movlb	1	; select bank1
  5954  05D9  0854               	movf	(dtoa@w+1)^(0+128),w
  5955  05DA  0020               	movlb	0	; select bank0
  5956  05DB  00BD               	movwf	pad@p+1
  5957  05DC  0021               	movlb	1	; select bank1
  5958  05DD  0853               	movf	dtoa@w^(0+128),w
  5959  05DE  0020               	movlb	0	; select bank0
  5960  05DF  00BC               	movwf	pad@p
  5961  05E0  0021               	movlb	1	; select bank1
  5962  05E1  0850               	movf	dtoa@fp^(0+128),w
  5963  05E2  318D  253F         	fcall	_pad
  5964  05E4  0020               	movlb	0	; select bank0
  5965  05E5  083C               	movf	?_pad+1,w
  5966  05E6  00C5               	movwf	?_dtoa+1
  5967  05E7  083B               	movf	?_pad,w
  5968  05E8  00C4               	movwf	?_dtoa
  5969  05E9  0008               	return
  5970  05EA                     __end_of_dtoa:	
  5971                           
  5972                           	psect	text8
  5973  0D3F                     __ptext8:	
  5974 ;; *************** function _pad *****************
  5975 ;; Defined at:
  5976 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5977 ;; Parameters:    Size  Location     Type
  5978 ;;  fp              1    wreg     PTR struct _IO_FILE
  5979 ;;		 -> NULL(0), 
  5980 ;;  buf             1   27[BANK0 ] PTR unsigned char 
  5981 ;;		 -> dbuf(32), 
  5982 ;;  p               2   28[BANK0 ] int 
  5983 ;; Auto vars:     Size  Location     Type
  5984 ;;  fp              1   35[BANK0 ] PTR struct _IO_FILE
  5985 ;;		 -> NULL(0), 
  5986 ;;  w               2   33[BANK0 ] int 
  5987 ;;  i               2   31[BANK0 ] int 
  5988 ;; Return value:  Size  Location     Type
  5989 ;;                  2   27[BANK0 ] int 
  5990 ;; Registers used:
  5991 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5992 ;; Tracked objects:
  5993 ;;		On entry : 0/0
  5994 ;;		On exit  : 0/0
  5995 ;;		Unchanged: 0/0
  5996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5997 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5998 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5999 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6000 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6001 ;;Total ram usage:        9 bytes
  6002 ;; Hardware stack levels used:    1
  6003 ;; Hardware stack levels required when called:    9
  6004 ;; This function calls:
  6005 ;;		_fputc
  6006 ;;		_fputs
  6007 ;;		_strlen
  6008 ;; This function is called by:
  6009 ;;		_dtoa
  6010 ;; This function uses a non-reentrant model
  6011 ;;
  6012                           
  6013                           
  6014                           ;psect for function _pad
  6015  0D3F                     _pad:	
  6016                           
  6017                           ;incstack = 0
  6018                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6019                           ;pad@fp stored from wreg
  6020  0D3F  0020               	movlb	0	; select bank0
  6021  0D40  00C3               	movwf	pad@fp
  6022                           
  6023                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  6024  0D41  1C62               	btfss	_flags,0
  6025  0D42  2D4E               	goto	l3090
  6026                           
  6027                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  6028  0D43  083B               	movf	pad@buf,w
  6029  0D44  00B2               	movwf	fputs@s
  6030  0D45  3001               	movlw	1
  6031  0D46  00B3               	movwf	fputs@s+1
  6032  0D47  0843               	movf	pad@fp,w
  6033  0D48  00BE               	movwf	??_pad
  6034  0D49  083E               	movf	??_pad,w
  6035  0D4A  00B4               	movwf	fputs@fp
  6036  0D4B  318B  23FE  318D   	fcall	_fputs
  6037  0D4E                     l3090:	
  6038                           
  6039                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  6040  0D4E  0020               	movlb	0	; select bank0
  6041  0D4F  1BBD               	btfsc	pad@p+1,7
  6042  0D50  2D56               	goto	l3094
  6043  0D51  083D               	movf	pad@p+1,w
  6044  0D52  00C2               	movwf	pad@w+1
  6045  0D53  083C               	movf	pad@p,w
  6046  0D54  00C1               	movwf	pad@w
  6047  0D55  2D58               	goto	l493
  6048  0D56                     l3094:	
  6049  0D56  01C1               	clrf	pad@w
  6050  0D57  01C2               	clrf	pad@w+1
  6051  0D58                     l493:	
  6052                           
  6053                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  6054  0D58  01BF               	clrf	pad@i
  6055  0D59  01C0               	clrf	pad@i+1
  6056  0D5A                     l3100:	
  6057                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  6058                           
  6059                           
  6060                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  6061  0D5A  0840               	movf	pad@i+1,w
  6062  0D5B  3A80               	xorlw	128
  6063  0D5C  00BE               	movwf	??_pad
  6064  0D5D  0842               	movf	pad@w+1,w
  6065  0D5E  3A80               	xorlw	128
  6066  0D5F  023E               	subwf	??_pad,w
  6067  0D60  1D03               	skipz
  6068  0D61  2D64               	goto	u3475
  6069  0D62  0841               	movf	pad@w,w
  6070  0D63  023F               	subwf	pad@i,w
  6071  0D64                     u3475:	
  6072  0D64  1803               	btfsc	3,0
  6073  0D65  2D78               	goto	l496
  6074                           
  6075                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  6076  0D66  3020               	movlw	32
  6077  0D67  0020               	movlb	0	; select bank0
  6078  0D68  00AA               	movwf	fputc@c
  6079  0D69  3000               	movlw	0
  6080  0D6A  00AB               	movwf	fputc@c+1
  6081  0D6B  0843               	movf	pad@fp,w
  6082  0D6C  00BE               	movwf	??_pad
  6083  0D6D  083E               	movf	??_pad,w
  6084  0D6E  00AC               	movwf	fputc@fp
  6085  0D6F  318C  24BD  318D   	fcall	_fputc
  6086                           
  6087                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  6088  0D72  3001               	movlw	1
  6089  0D73  0020               	movlb	0	; select bank0
  6090  0D74  07BF               	addwf	pad@i,f
  6091  0D75  3000               	movlw	0
  6092  0D76  3DC0               	addwfc	pad@i+1,f
  6093  0D77  2D5A               	goto	l3100
  6094  0D78                     l496:	
  6095                           
  6096                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  6097  0D78  0020               	movlb	0	; select bank0
  6098  0D79  1862               	btfsc	_flags,0
  6099  0D7A  2D86               	goto	l3104
  6100                           
  6101                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  6102  0D7B  083B               	movf	pad@buf,w
  6103  0D7C  00B2               	movwf	fputs@s
  6104  0D7D  3001               	movlw	1
  6105  0D7E  00B3               	movwf	fputs@s+1
  6106  0D7F  0843               	movf	pad@fp,w
  6107  0D80  00BE               	movwf	??_pad
  6108  0D81  083E               	movf	??_pad,w
  6109  0D82  00B4               	movwf	fputs@fp
  6110  0D83  318B  23FE  318D   	fcall	_fputs
  6111  0D86                     l3104:	
  6112                           
  6113                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  6114  0D86  0020               	movlb	0	; select bank0
  6115  0D87  083B               	movf	pad@buf,w
  6116  0D88  318B  23A1         	fcall	_strlen
  6117  0D8A  0020               	movlb	0	; select bank0
  6118  0D8B  0841               	movf	pad@w,w
  6119  0D8C  0728               	addwf	?_strlen,w
  6120  0D8D  00BB               	movwf	?_pad
  6121  0D8E  0842               	movf	pad@w+1,w
  6122  0D8F  3D29               	addwfc	?_strlen+1,w
  6123  0D90  00BC               	movwf	?_pad+1
  6124  0D91  0008               	return
  6125  0D92                     __end_of_pad:	
  6126                           
  6127                           	psect	text9
  6128  0BA1                     __ptext9:	
  6129 ;; *************** function _strlen *****************
  6130 ;; Defined at:
  6131 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  6132 ;; Parameters:    Size  Location     Type
  6133 ;;  s               1    wreg     PTR const unsigned char 
  6134 ;;		 -> dbuf(32), 
  6135 ;; Auto vars:     Size  Location     Type
  6136 ;;  s               1   12[BANK0 ] PTR const unsigned char 
  6137 ;;		 -> dbuf(32), 
  6138 ;;  a               1   11[BANK0 ] PTR const unsigned char 
  6139 ;;		 -> dbuf(32), 
  6140 ;; Return value:  Size  Location     Type
  6141 ;;                  2    8[BANK0 ] unsigned int 
  6142 ;; Registers used:
  6143 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6144 ;; Tracked objects:
  6145 ;;		On entry : 0/0
  6146 ;;		On exit  : 0/0
  6147 ;;		Unchanged: 0/0
  6148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6149 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6150 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6151 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6152 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6153 ;;Total ram usage:        5 bytes
  6154 ;; Hardware stack levels used:    1
  6155 ;; Hardware stack levels required when called:    5
  6156 ;; This function calls:
  6157 ;;		Nothing
  6158 ;; This function is called by:
  6159 ;;		_pad
  6160 ;; This function uses a non-reentrant model
  6161 ;;
  6162                           
  6163                           
  6164                           ;psect for function _strlen
  6165  0BA1                     _strlen:	
  6166                           
  6167                           ;incstack = 0
  6168                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  6169                           ;strlen@s stored from wreg
  6170  0BA1  0020               	movlb	0	; select bank0
  6171  0BA2  00AC               	movwf	strlen@s
  6172  0BA3  082C               	movf	strlen@s,w
  6173  0BA4  00AA               	movwf	??_strlen
  6174  0BA5  082A               	movf	??_strlen,w
  6175  0BA6  00AB               	movwf	strlen@a
  6176  0BA7                     l3080:	
  6177  0BA7  082C               	movf	strlen@s,w
  6178  0BA8  0086               	movwf	6
  6179  0BA9  3001               	movlw	1	; select bank2/3
  6180  0BAA  0087               	movwf	7
  6181  0BAB  0801               	movf	1,w
  6182  0BAC  1903               	btfsc	3,2
  6183  0BAD  2BB3               	goto	l3082
  6184  0BAE  3001               	movlw	1
  6185  0BAF  00AA               	movwf	??_strlen
  6186  0BB0  082A               	movf	??_strlen,w
  6187  0BB1  07AC               	addwf	strlen@s,f
  6188  0BB2  2BA7               	goto	l3080
  6189  0BB3                     l3082:	
  6190  0BB3  082B               	movf	strlen@a,w
  6191  0BB4  022C               	subwf	strlen@s,w
  6192  0BB5  00A8               	movwf	?_strlen
  6193  0BB6  01A9               	clrf	?_strlen+1
  6194  0BB7  1BA8               	btfsc	?_strlen,7
  6195  0BB8  03A9               	decf	?_strlen+1,f
  6196  0BB9  0008               	return
  6197  0BBA                     __end_of_strlen:	
  6198                           
  6199                           	psect	text10
  6200  0BFE                     __ptext10:	
  6201 ;; *************** function _fputs *****************
  6202 ;; Defined at:
  6203 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  6204 ;; Parameters:    Size  Location     Type
  6205 ;;  s               2   18[BANK0 ] PTR const unsigned char 
  6206 ;;		 -> dbuf(32), STR_2(3), 
  6207 ;;  fp              1   20[BANK0 ] PTR struct _IO_FILE
  6208 ;;		 -> NULL(0), 
  6209 ;; Auto vars:     Size  Location     Type
  6210 ;;  i               2   25[BANK0 ] int 
  6211 ;;  c               1   24[BANK0 ] unsigned char 
  6212 ;; Return value:  Size  Location     Type
  6213 ;;                  2   18[BANK0 ] int 
  6214 ;; Registers used:
  6215 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6216 ;; Tracked objects:
  6217 ;;		On entry : 0/0
  6218 ;;		On exit  : 0/0
  6219 ;;		Unchanged: 0/0
  6220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6221 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6222 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6223 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6224 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6225 ;;Total ram usage:        9 bytes
  6226 ;; Hardware stack levels used:    1
  6227 ;; Hardware stack levels required when called:    8
  6228 ;; This function calls:
  6229 ;;		_fputc
  6230 ;; This function is called by:
  6231 ;;		_pad
  6232 ;;		_puts
  6233 ;; This function uses a non-reentrant model
  6234 ;;
  6235                           
  6236                           
  6237                           ;psect for function _fputs
  6238  0BFE                     _fputs:	
  6239                           
  6240                           ;incstack = 0
  6241                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6242  0BFE  0020               	movlb	0	; select bank0
  6243  0BFF  01B9               	clrf	fputs@i
  6244  0C00  01BA               	clrf	fputs@i+1
  6245  0C01                     l3070:	
  6246  0C01  0832               	movf	fputs@s,w
  6247  0C02  0739               	addwf	fputs@i,w
  6248  0C03  0084               	movwf	4
  6249  0C04  0833               	movf	fputs@s+1,w
  6250  0C05  3D3A               	addwfc	fputs@i+1,w
  6251  0C06  0085               	movwf	5
  6252  0C07  0800               	movf	0,w	;code access
  6253  0C08  00B5               	movwf	??_fputs
  6254  0C09  0835               	movf	??_fputs,w
  6255  0C0A  00B8               	movwf	fputs@c
  6256  0C0B  0838               	movf	fputs@c,w
  6257  0C0C  1903               	btfsc	3,2
  6258  0C0D  2C22               	goto	l3072
  6259  0C0E  0838               	movf	fputs@c,w
  6260  0C0F  00B5               	movwf	??_fputs
  6261  0C10  01B6               	clrf	??_fputs+1
  6262  0C11  0835               	movf	??_fputs,w
  6263  0C12  00AA               	movwf	fputc@c
  6264  0C13  0836               	movf	??_fputs+1,w
  6265  0C14  00AB               	movwf	fputc@c+1
  6266  0C15  0834               	movf	fputs@fp,w
  6267  0C16  00B7               	movwf	??_fputs+2
  6268  0C17  0837               	movf	??_fputs+2,w
  6269  0C18  00AC               	movwf	fputc@fp
  6270  0C19  318C  24BD  318B   	fcall	_fputc
  6271  0C1C  3001               	movlw	1
  6272  0C1D  0020               	movlb	0	; select bank0
  6273  0C1E  07B9               	addwf	fputs@i,f
  6274  0C1F  3000               	movlw	0
  6275  0C20  3DBA               	addwfc	fputs@i+1,f
  6276  0C21  2C01               	goto	l3070
  6277  0C22                     l3072:	
  6278  0C22  083A               	movf	fputs@i+1,w
  6279  0C23  00B3               	movwf	?_fputs+1
  6280  0C24  0839               	movf	fputs@i,w
  6281  0C25  00B2               	movwf	?_fputs
  6282  0C26  0008               	return
  6283  0C27                     __end_of_fputs:	
  6284                           
  6285                           	psect	text11
  6286  0CBD                     __ptext11:	
  6287 ;; *************** function _fputc *****************
  6288 ;; Defined at:
  6289 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  6290 ;; Parameters:    Size  Location     Type
  6291 ;;  c               2   10[BANK0 ] int 
  6292 ;;  fp              1   12[BANK0 ] PTR struct _IO_FILE
  6293 ;;		 -> NULL(0), 
  6294 ;; Auto vars:     Size  Location     Type
  6295 ;;		None
  6296 ;; Return value:  Size  Location     Type
  6297 ;;                  2   10[BANK0 ] int 
  6298 ;; Registers used:
  6299 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6300 ;; Tracked objects:
  6301 ;;		On entry : 0/0
  6302 ;;		On exit  : 0/0
  6303 ;;		Unchanged: 0/0
  6304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6305 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6307 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6308 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6309 ;;Total ram usage:        8 bytes
  6310 ;; Hardware stack levels used:    1
  6311 ;; Hardware stack levels required when called:    7
  6312 ;; This function calls:
  6313 ;;		_putch
  6314 ;; This function is called by:
  6315 ;;		_pad
  6316 ;;		_vfpfcnvrt
  6317 ;;		_fputs
  6318 ;;		_puts
  6319 ;; This function uses a non-reentrant model
  6320 ;;
  6321                           
  6322                           
  6323                           ;psect for function _fputc
  6324  0CBD                     _fputc:	
  6325                           
  6326                           ;incstack = 0
  6327                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6328  0CBD  0020               	movlb	0	; select bank0
  6329  0CBE  082C               	movf	fputc@fp,w
  6330  0CBF  1D03               	btfss	3,2
  6331  0CC0  082C               	movf	fputc@fp,w
  6332  0CC1  1D03               	btfss	3,2
  6333  0CC2  2CC8               	goto	l3054
  6334  0CC3  082A               	movf	fputc@c,w
  6335  0CC4  318A  22C9  318C   	fcall	_putch
  6336  0CC7  2CF4               	goto	l3060
  6337  0CC8                     l3054:	
  6338  0CC8  082C               	movf	fputc@fp,w
  6339  0CC9  3E03               	addlw	3
  6340  0CCA  0086               	movwf	6
  6341  0CCB  0187               	clrf	7
  6342  0CCC  0016               	moviw fsr1++
  6343  0CCD  0401               	iorwf	1,w
  6344  0CCE  1903               	btfsc	3,2
  6345  0CCF  2CEB               	goto	l3058
  6346  0CD0  082C               	movf	fputc@fp,w
  6347  0CD1  3E03               	addlw	3
  6348  0CD2  0086               	movwf	6
  6349  0CD3  0187               	clrf	7
  6350  0CD4  3F40               	moviw [0]fsr1
  6351  0CD5  00AD               	movwf	??_fputc
  6352  0CD6  3F41               	moviw [1]fsr1
  6353  0CD7  00AE               	movwf	??_fputc+1
  6354  0CD8  0A2C               	incf	fputc@fp,w
  6355  0CD9  0086               	movwf	6
  6356  0CDA  0187               	clrf	7
  6357  0CDB  3F40               	moviw [0]fsr1
  6358  0CDC  00AF               	movwf	??_fputc+2
  6359  0CDD  3F41               	moviw [1]fsr1
  6360  0CDE  00B0               	movwf	??_fputc+3
  6361  0CDF  0830               	movf	??_fputc+3,w
  6362  0CE0  3A80               	xorlw	128
  6363  0CE1  00B1               	movwf	??_fputc+4
  6364  0CE2  082E               	movf	??_fputc+1,w
  6365  0CE3  3A80               	xorlw	128
  6366  0CE4  0231               	subwf	??_fputc+4,w
  6367  0CE5  1D03               	skipz
  6368  0CE6  2CE9               	goto	u3425
  6369  0CE7  082D               	movf	??_fputc,w
  6370  0CE8  022F               	subwf	??_fputc+2,w
  6371  0CE9                     u3425:	
  6372  0CE9  1803               	skipnc
  6373  0CEA  2CF4               	goto	l3060
  6374  0CEB                     l3058:	
  6375  0CEB  0020               	movlb	0	; select bank0
  6376  0CEC  0A2C               	incf	fputc@fp,w
  6377  0CED  0086               	movwf	6
  6378  0CEE  0187               	clrf	7
  6379  0CEF  3001               	movlw	1
  6380  0CF0  0781               	addwf	1,f
  6381  0CF1  3141               	addfsr 1,1
  6382  0CF2  1803               	skipnc
  6383  0CF3  0A81               	incf	1,f
  6384  0CF4                     l3060:	
  6385  0CF4  0020               	movlb	0	; select bank0
  6386  0CF5  082A               	movf	fputc@c,w
  6387  0CF6  00AD               	movwf	??_fputc
  6388  0CF7  01AE               	clrf	??_fputc+1
  6389  0CF8  082D               	movf	??_fputc,w
  6390  0CF9  00AA               	movwf	?_fputc
  6391  0CFA  082E               	movf	??_fputc+1,w
  6392  0CFB  00AB               	movwf	?_fputc+1
  6393  0CFC  0008               	return
  6394  0CFD                     __end_of_fputc:	
  6395                           
  6396                           	psect	text12
  6397  0AC9                     __ptext12:	
  6398 ;; *************** function _putch *****************
  6399 ;; Defined at:
  6400 ;;		line 151 in file "mcc_generated_files/eusart.c"
  6401 ;; Parameters:    Size  Location     Type
  6402 ;;  txData          1    wreg     unsigned char 
  6403 ;; Auto vars:     Size  Location     Type
  6404 ;;  txData          1    9[BANK0 ] unsigned char 
  6405 ;; Return value:  Size  Location     Type
  6406 ;;                  1    wreg      void 
  6407 ;; Registers used:
  6408 ;;		wreg, status,2, status,0, pclath, cstack
  6409 ;; Tracked objects:
  6410 ;;		On entry : 0/0
  6411 ;;		On exit  : 0/0
  6412 ;;		Unchanged: 0/0
  6413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6415 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6417 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6418 ;;Total ram usage:        1 bytes
  6419 ;; Hardware stack levels used:    1
  6420 ;; Hardware stack levels required when called:    6
  6421 ;; This function calls:
  6422 ;;		_EUSART_Write
  6423 ;; This function is called by:
  6424 ;;		_fputc
  6425 ;; This function uses a non-reentrant model
  6426 ;;
  6427                           
  6428                           
  6429                           ;psect for function _putch
  6430  0AC9                     _putch:	
  6431                           
  6432                           ;incstack = 0
  6433                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  6434                           ;putch@txData stored from wreg
  6435  0AC9  0020               	movlb	0	; select bank0
  6436  0ACA  00A9               	movwf	putch@txData
  6437                           
  6438                           ;mcc_generated_files/eusart.c: 151: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 152: {;mcc_generated_files/eusart.c: 153:     EUSART_Write(txData);
  6439  0ACB  0829               	movf	putch@txData,w
  6440  0ACC  318A  22E4         	fcall	_EUSART_Write
  6441  0ACE  0008               	return
  6442  0ACF                     __end_of_putch:	
  6443                           
  6444                           	psect	text13
  6445  0AE4                     __ptext13:	
  6446 ;; *************** function _EUSART_Write *****************
  6447 ;; Defined at:
  6448 ;;		line 137 in file "mcc_generated_files/eusart.c"
  6449 ;; Parameters:    Size  Location     Type
  6450 ;;  txData          1    wreg     unsigned char 
  6451 ;; Auto vars:     Size  Location     Type
  6452 ;;  txData          1    8[BANK0 ] unsigned char 
  6453 ;; Return value:  Size  Location     Type
  6454 ;;                  1    wreg      void 
  6455 ;; Registers used:
  6456 ;;		wreg
  6457 ;; Tracked objects:
  6458 ;;		On entry : 0/0
  6459 ;;		On exit  : 0/0
  6460 ;;		Unchanged: 0/0
  6461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6463 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6465 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6466 ;;Total ram usage:        1 bytes
  6467 ;; Hardware stack levels used:    1
  6468 ;; Hardware stack levels required when called:    5
  6469 ;; This function calls:
  6470 ;;		Nothing
  6471 ;; This function is called by:
  6472 ;;		_putch
  6473 ;;		_setCursor
  6474 ;;		_backlightBrightness
  6475 ;; This function uses a non-reentrant model
  6476 ;;
  6477                           
  6478                           
  6479                           ;psect for function _EUSART_Write
  6480  0AE4                     _EUSART_Write:	
  6481                           
  6482                           ;incstack = 0
  6483                           ; Regs used in _EUSART_Write: [wreg]
  6484                           ;EUSART_Write@txData stored from wreg
  6485  0AE4  0020               	movlb	0	; select bank0
  6486  0AE5  00A8               	movwf	EUSART_Write@txData
  6487  0AE6                     l69:	
  6488                           ;mcc_generated_files/eusart.c: 140:     {;mcc_generated_files/eusart.c: 141:     }
  6489                           
  6490                           
  6491                           ;mcc_generated_files/eusart.c: 139:     while(0 == PIR1bits.TXIF)
  6492  0AE6  1E10               	btfss	16,4	;volatile
  6493  0AE7  2AE6               	goto	l69
  6494                           
  6495                           ;mcc_generated_files/eusart.c: 143:     TX1REG = txData;
  6496  0AE8  0828               	movf	EUSART_Write@txData,w
  6497  0AE9  0023               	movlb	3	; select bank3
  6498  0AEA  009A               	movwf	26	;volatile
  6499  0AEB  0008               	return
  6500  0AEC                     __end_of_EUSART_Write:	
  6501                           
  6502                           	psect	text14
  6503  0B88                     __ptext14:	
  6504 ;; *************** function _abs *****************
  6505 ;; Defined at:
  6506 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  6507 ;; Parameters:    Size  Location     Type
  6508 ;;  a               2   27[BANK0 ] int 
  6509 ;; Auto vars:     Size  Location     Type
  6510 ;;		None
  6511 ;; Return value:  Size  Location     Type
  6512 ;;                  2   27[BANK0 ] int 
  6513 ;; Registers used:
  6514 ;;		wreg, status,2, status,0
  6515 ;; Tracked objects:
  6516 ;;		On entry : 0/0
  6517 ;;		On exit  : 0/0
  6518 ;;		Unchanged: 0/0
  6519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6520 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6522 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6523 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6524 ;;Total ram usage:        4 bytes
  6525 ;; Hardware stack levels used:    1
  6526 ;; Hardware stack levels required when called:    5
  6527 ;; This function calls:
  6528 ;;		Nothing
  6529 ;; This function is called by:
  6530 ;;		_dtoa
  6531 ;; This function uses a non-reentrant model
  6532 ;;
  6533                           
  6534                           
  6535                           ;psect for function _abs
  6536  0B88                     _abs:	
  6537                           
  6538                           ;incstack = 0
  6539                           ; Regs used in _abs: [wreg+status,2+status,0]
  6540  0B88  0020               	movlb	0	; select bank0
  6541  0B89  083C               	movf	abs@a+1,w
  6542  0B8A  3A80               	xorlw	128
  6543  0B8B  00BD               	movwf	??_abs
  6544  0B8C  3080               	movlw	128
  6545  0B8D  023D               	subwf	??_abs,w
  6546  0B8E  1D03               	skipz
  6547  0B8F  2B92               	goto	u3495
  6548  0B90  3001               	movlw	1
  6549  0B91  023B               	subwf	abs@a,w
  6550  0B92                     u3495:	
  6551  0B92  1803               	skipnc
  6552  0B93  0008               	return
  6553  0B94  0020               	movlb	0	; select bank0
  6554  0B95  093B               	comf	abs@a,w
  6555  0B96  00BD               	movwf	??_abs
  6556  0B97  093C               	comf	abs@a+1,w
  6557  0B98  00BE               	movwf	??_abs+1
  6558  0B99  0ABD               	incf	??_abs,f
  6559  0B9A  1903               	skipnz
  6560  0B9B  0ABE               	incf	??_abs+1,f
  6561  0B9C  083D               	movf	??_abs,w
  6562  0B9D  00BB               	movwf	?_abs
  6563  0B9E  083E               	movf	??_abs+1,w
  6564  0B9F  00BC               	movwf	?_abs+1
  6565  0BA0  0008               	return
  6566  0BA1                     __end_of_abs:	
  6567                           
  6568                           	psect	text15
  6569  0F21                     __ptext15:	
  6570 ;; *************** function ___aomod *****************
  6571 ;; Defined at:
  6572 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  6573 ;; Parameters:    Size  Location     Type
  6574 ;;  divisor         8    8[BANK0 ] long long 
  6575 ;;  dividend        8   16[BANK0 ] long long 
  6576 ;; Auto vars:     Size  Location     Type
  6577 ;;  sign            1   26[BANK0 ] unsigned char 
  6578 ;;  counter         1   25[BANK0 ] unsigned char 
  6579 ;; Return value:  Size  Location     Type
  6580 ;;                  8    8[BANK0 ] long long 
  6581 ;; Registers used:
  6582 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6583 ;; Tracked objects:
  6584 ;;		On entry : 0/0
  6585 ;;		On exit  : 0/0
  6586 ;;		Unchanged: 0/0
  6587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6588 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6589 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6590 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6591 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6592 ;;Total ram usage:       19 bytes
  6593 ;; Hardware stack levels used:    1
  6594 ;; Hardware stack levels required when called:    5
  6595 ;; This function calls:
  6596 ;;		Nothing
  6597 ;; This function is called by:
  6598 ;;		_dtoa
  6599 ;; This function uses a non-reentrant model
  6600 ;;
  6601                           
  6602                           
  6603                           ;psect for function ___aomod
  6604  0F21                     ___aomod:	
  6605                           
  6606                           ;incstack = 0
  6607                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  6608  0F21  0020               	movlb	0	; select bank0
  6609  0F22  01BA               	clrf	___aomod@sign
  6610  0F23  3030               	movlw	low ___aomod@dividend
  6611  0F24  0086               	movwf	6
  6612  0F25  3000               	movlw	high ___aomod@dividend
  6613  0F26  0087               	movwf	7
  6614  0F27  3F47               	moviw [7]fsr1
  6615  0F28  00B8               	movwf	??___aomod
  6616  0F29  1FB8               	btfss	??___aomod,7
  6617  0F2A  2F4D               	goto	l3156
  6618  0F2B  0020               	movlb	0	; select bank0
  6619  0F2C  09B0               	comf	___aomod@dividend,f
  6620  0F2D  09B1               	comf	___aomod@dividend+1,f
  6621  0F2E  09B2               	comf	___aomod@dividend+2,f
  6622  0F2F  09B3               	comf	___aomod@dividend+3,f
  6623  0F30  09B4               	comf	___aomod@dividend+4,f
  6624  0F31  09B5               	comf	___aomod@dividend+5,f
  6625  0F32  09B6               	comf	___aomod@dividend+6,f
  6626  0F33  09B7               	comf	___aomod@dividend+7,f
  6627  0F34  0AB0               	incf	___aomod@dividend,f
  6628  0F35  1D03               	skipz
  6629  0F36  2F4A               	goto	u362lld
  6630  0F37  0AB1               	incf	___aomod@dividend+1,f
  6631  0F38  1D03               	skipz
  6632  0F39  2F4A               	goto	u362lld
  6633  0F3A  0AB2               	incf	___aomod@dividend+2,f
  6634  0F3B  1D03               	skipz
  6635  0F3C  2F4A               	goto	u362lld
  6636  0F3D  0AB3               	incf	___aomod@dividend+3,f
  6637  0F3E  1D03               	skipz
  6638  0F3F  2F4A               	goto	u362lld
  6639  0F40  0AB4               	incf	___aomod@dividend+4,f
  6640  0F41  1D03               	skipz
  6641  0F42  2F4A               	goto	u362lld
  6642  0F43  0AB5               	incf	___aomod@dividend+5,f
  6643  0F44  1D03               	skipz
  6644  0F45  2F4A               	goto	u362lld
  6645  0F46  0AB6               	incf	___aomod@dividend+6,f
  6646  0F47  1D03               	skipz
  6647  0F48  2F4A               	goto	u362lld
  6648  0F49  0AB7               	incf	___aomod@dividend+7,f
  6649  0F4A                     u362lld:	
  6650  0F4A  0020               	movlb	0	; select bank0
  6651  0F4B  01BA               	clrf	___aomod@sign
  6652  0F4C  0ABA               	incf	___aomod@sign,f
  6653  0F4D                     l3156:	
  6654  0F4D  3028               	movlw	low ___aomod@divisor
  6655  0F4E  0086               	movwf	6
  6656  0F4F  3000               	movlw	high ___aomod@divisor
  6657  0F50  0087               	movwf	7
  6658  0F51  3F47               	moviw [7]fsr1
  6659  0F52  0020               	movlb	0	; select bank0
  6660  0F53  00B8               	movwf	??___aomod
  6661  0F54  1FB8               	btfss	??___aomod,7
  6662  0F55  2F75               	goto	l3160
  6663  0F56  0020               	movlb	0	; select bank0
  6664  0F57  09A8               	comf	___aomod@divisor,f
  6665  0F58  09A9               	comf	___aomod@divisor+1,f
  6666  0F59  09AA               	comf	___aomod@divisor+2,f
  6667  0F5A  09AB               	comf	___aomod@divisor+3,f
  6668  0F5B  09AC               	comf	___aomod@divisor+4,f
  6669  0F5C  09AD               	comf	___aomod@divisor+5,f
  6670  0F5D  09AE               	comf	___aomod@divisor+6,f
  6671  0F5E  09AF               	comf	___aomod@divisor+7,f
  6672  0F5F  0AA8               	incf	___aomod@divisor,f
  6673  0F60  1D03               	skipz
  6674  0F61  2F75               	goto	l3160
  6675  0F62  0AA9               	incf	___aomod@divisor+1,f
  6676  0F63  1D03               	skipz
  6677  0F64  2F75               	goto	l3160
  6678  0F65  0AAA               	incf	___aomod@divisor+2,f
  6679  0F66  1D03               	skipz
  6680  0F67  2F75               	goto	l3160
  6681  0F68  0AAB               	incf	___aomod@divisor+3,f
  6682  0F69  1D03               	skipz
  6683  0F6A  2F75               	goto	l3160
  6684  0F6B  0AAC               	incf	___aomod@divisor+4,f
  6685  0F6C  1D03               	skipz
  6686  0F6D  2F75               	goto	l3160
  6687  0F6E  0AAD               	incf	___aomod@divisor+5,f
  6688  0F6F  1D03               	skipz
  6689  0F70  2F75               	goto	l3160
  6690  0F71  0AAE               	incf	___aomod@divisor+6,f
  6691  0F72  1D03               	skipz
  6692  0F73  2F75               	goto	l3160
  6693  0F74  0AAF               	incf	___aomod@divisor+7,f
  6694  0F75                     l3160:	
  6695  0F75  0020               	movlb	0	; select bank0
  6696  0F76  0828               	movf	___aomod@divisor,w
  6697  0F77  0429               	iorwf	___aomod@divisor+1,w
  6698  0F78  042A               	iorwf	___aomod@divisor+2,w
  6699  0F79  042B               	iorwf	___aomod@divisor+3,w
  6700  0F7A  042C               	iorwf	___aomod@divisor+4,w
  6701  0F7B  042D               	iorwf	___aomod@divisor+5,w
  6702  0F7C  042E               	iorwf	___aomod@divisor+6,w
  6703  0F7D  042F               	iorwf	___aomod@divisor+7,w
  6704  0F7E  1903               	skipnz
  6705  0F7F  2FCD               	goto	l3176
  6706  0F80  01B9               	clrf	___aomod@counter
  6707  0F81  0AB9               	incf	___aomod@counter,f
  6708  0F82                     l3168:	
  6709  0F82  1BAF               	btfsc	___aomod@divisor+7,7
  6710  0F83  2F91               	goto	l3170
  6711  0F84  35A8               	lslf	___aomod@divisor,f
  6712  0F85  0DA9               	rlf	___aomod@divisor+1,f
  6713  0F86  0DAA               	rlf	___aomod@divisor+2,f
  6714  0F87  0DAB               	rlf	___aomod@divisor+3,f
  6715  0F88  0DAC               	rlf	___aomod@divisor+4,f
  6716  0F89  0DAD               	rlf	___aomod@divisor+5,f
  6717  0F8A  0DAE               	rlf	___aomod@divisor+6,f
  6718  0F8B  0DAF               	rlf	___aomod@divisor+7,f
  6719  0F8C  3001               	movlw	1
  6720  0F8D  00B8               	movwf	??___aomod
  6721  0F8E  0838               	movf	??___aomod,w
  6722  0F8F  07B9               	addwf	___aomod@counter,f
  6723  0F90  2F82               	goto	l3168
  6724  0F91                     l3170:	
  6725  0F91  082F               	movf	___aomod@divisor+7,w
  6726  0F92  0237               	subwf	___aomod@dividend+7,w
  6727  0F93  1D03               	skipz
  6728  0F94  2FAF               	goto	u3675
  6729  0F95  082E               	movf	___aomod@divisor+6,w
  6730  0F96  0236               	subwf	___aomod@dividend+6,w
  6731  0F97  1D03               	skipz
  6732  0F98  2FAF               	goto	u3675
  6733  0F99  082D               	movf	___aomod@divisor+5,w
  6734  0F9A  0235               	subwf	___aomod@dividend+5,w
  6735  0F9B  1D03               	skipz
  6736  0F9C  2FAF               	goto	u3675
  6737  0F9D  082C               	movf	___aomod@divisor+4,w
  6738  0F9E  0234               	subwf	___aomod@dividend+4,w
  6739  0F9F  1D03               	skipz
  6740  0FA0  2FAF               	goto	u3675
  6741  0FA1  082B               	movf	___aomod@divisor+3,w
  6742  0FA2  0233               	subwf	___aomod@dividend+3,w
  6743  0FA3  1D03               	skipz
  6744  0FA4  2FAF               	goto	u3675
  6745  0FA5  082A               	movf	___aomod@divisor+2,w
  6746  0FA6  0232               	subwf	___aomod@dividend+2,w
  6747  0FA7  1D03               	skipz
  6748  0FA8  2FAF               	goto	u3675
  6749  0FA9  0829               	movf	___aomod@divisor+1,w
  6750  0FAA  0231               	subwf	___aomod@dividend+1,w
  6751  0FAB  1D03               	skipz
  6752  0FAC  2FAF               	goto	u3675
  6753  0FAD  0828               	movf	___aomod@divisor,w
  6754  0FAE  0230               	subwf	___aomod@dividend,w
  6755  0FAF                     u3675:	
  6756  0FAF  1C03               	skipc
  6757  0FB0  2FC1               	goto	l3174
  6758  0FB1  0828               	movf	___aomod@divisor,w
  6759  0FB2  02B0               	subwf	___aomod@dividend,f
  6760  0FB3  0829               	movf	___aomod@divisor+1,w
  6761  0FB4  3BB1               	subwfb	___aomod@dividend+1,f
  6762  0FB5  082A               	movf	___aomod@divisor+2,w
  6763  0FB6  3BB2               	subwfb	___aomod@dividend+2,f
  6764  0FB7  082B               	movf	___aomod@divisor+3,w
  6765  0FB8  3BB3               	subwfb	___aomod@dividend+3,f
  6766  0FB9  082C               	movf	___aomod@divisor+4,w
  6767  0FBA  3BB4               	subwfb	___aomod@dividend+4,f
  6768  0FBB  082D               	movf	___aomod@divisor+5,w
  6769  0FBC  3BB5               	subwfb	___aomod@dividend+5,f
  6770  0FBD  082E               	movf	___aomod@divisor+6,w
  6771  0FBE  3BB6               	subwfb	___aomod@dividend+6,f
  6772  0FBF  082F               	movf	___aomod@divisor+7,w
  6773  0FC0  3BB7               	subwfb	___aomod@dividend+7,f
  6774  0FC1                     l3174:	
  6775  0FC1  36AF               	lsrf	___aomod@divisor+7,f
  6776  0FC2  0CAE               	rrf	___aomod@divisor+6,f
  6777  0FC3  0CAD               	rrf	___aomod@divisor+5,f
  6778  0FC4  0CAC               	rrf	___aomod@divisor+4,f
  6779  0FC5  0CAB               	rrf	___aomod@divisor+3,f
  6780  0FC6  0CAA               	rrf	___aomod@divisor+2,f
  6781  0FC7  0CA9               	rrf	___aomod@divisor+1,f
  6782  0FC8  0CA8               	rrf	___aomod@divisor,f
  6783  0FC9  3001               	movlw	1
  6784  0FCA  02B9               	subwf	___aomod@counter,f
  6785  0FCB  1D03               	btfss	3,2
  6786  0FCC  2F91               	goto	l3170
  6787  0FCD                     l3176:	
  6788  0FCD  083A               	movf	___aomod@sign,w
  6789  0FCE  1903               	btfsc	3,2
  6790  0FCF  2FEE               	goto	l656
  6791  0FD0  09B0               	comf	___aomod@dividend,f
  6792  0FD1  09B1               	comf	___aomod@dividend+1,f
  6793  0FD2  09B2               	comf	___aomod@dividend+2,f
  6794  0FD3  09B3               	comf	___aomod@dividend+3,f
  6795  0FD4  09B4               	comf	___aomod@dividend+4,f
  6796  0FD5  09B5               	comf	___aomod@dividend+5,f
  6797  0FD6  09B6               	comf	___aomod@dividend+6,f
  6798  0FD7  09B7               	comf	___aomod@dividend+7,f
  6799  0FD8  0AB0               	incf	___aomod@dividend,f
  6800  0FD9  1D03               	skipz
  6801  0FDA  2FEE               	goto	l656
  6802  0FDB  0AB1               	incf	___aomod@dividend+1,f
  6803  0FDC  1D03               	skipz
  6804  0FDD  2FEE               	goto	l656
  6805  0FDE  0AB2               	incf	___aomod@dividend+2,f
  6806  0FDF  1D03               	skipz
  6807  0FE0  2FEE               	goto	l656
  6808  0FE1  0AB3               	incf	___aomod@dividend+3,f
  6809  0FE2  1D03               	skipz
  6810  0FE3  2FEE               	goto	l656
  6811  0FE4  0AB4               	incf	___aomod@dividend+4,f
  6812  0FE5  1D03               	skipz
  6813  0FE6  2FEE               	goto	l656
  6814  0FE7  0AB5               	incf	___aomod@dividend+5,f
  6815  0FE8  1D03               	skipz
  6816  0FE9  2FEE               	goto	l656
  6817  0FEA  0AB6               	incf	___aomod@dividend+6,f
  6818  0FEB  1D03               	skipz
  6819  0FEC  2FEE               	goto	l656
  6820  0FED  0AB7               	incf	___aomod@dividend+7,f
  6821  0FEE                     l656:	
  6822  0FEE  0020               	movlb	0	; select bank0
  6823  0FEF  0830               	movf	___aomod@dividend,w
  6824  0FF0  00A8               	movwf	?___aomod
  6825  0FF1  0831               	movf	___aomod@dividend+1,w
  6826  0FF2  00A9               	movwf	?___aomod+1
  6827  0FF3  0832               	movf	___aomod@dividend+2,w
  6828  0FF4  00AA               	movwf	?___aomod+2
  6829  0FF5  0833               	movf	___aomod@dividend+3,w
  6830  0FF6  00AB               	movwf	?___aomod+3
  6831  0FF7  0834               	movf	___aomod@dividend+4,w
  6832  0FF8  00AC               	movwf	?___aomod+4
  6833  0FF9  0835               	movf	___aomod@dividend+5,w
  6834  0FFA  00AD               	movwf	?___aomod+5
  6835  0FFB  0836               	movf	___aomod@dividend+6,w
  6836  0FFC  00AE               	movwf	?___aomod+6
  6837  0FFD  0837               	movf	___aomod@dividend+7,w
  6838  0FFE  00AF               	movwf	?___aomod+7
  6839  0FFF  0008               	return
  6840  1000                     __end_of___aomod:	
  6841                           
  6842                           	psect	text16
  6843  06EB                     __ptext16:	
  6844 ;; *************** function ___aodiv *****************
  6845 ;; Defined at:
  6846 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  6847 ;; Parameters:    Size  Location     Type
  6848 ;;  divisor         8    8[BANK0 ] long long 
  6849 ;;  dividend        8   16[BANK0 ] long long 
  6850 ;; Auto vars:     Size  Location     Type
  6851 ;;  quotient        8   27[BANK0 ] long long 
  6852 ;;  sign            1   26[BANK0 ] unsigned char 
  6853 ;;  counter         1   25[BANK0 ] unsigned char 
  6854 ;; Return value:  Size  Location     Type
  6855 ;;                  8    8[BANK0 ] long long 
  6856 ;; Registers used:
  6857 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6858 ;; Tracked objects:
  6859 ;;		On entry : 0/0
  6860 ;;		On exit  : 0/0
  6861 ;;		Unchanged: 0/0
  6862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6863 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6864 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6865 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6866 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6867 ;;Total ram usage:       27 bytes
  6868 ;; Hardware stack levels used:    1
  6869 ;; Hardware stack levels required when called:    5
  6870 ;; This function calls:
  6871 ;;		Nothing
  6872 ;; This function is called by:
  6873 ;;		_dtoa
  6874 ;; This function uses a non-reentrant model
  6875 ;;
  6876                           
  6877                           
  6878                           ;psect for function ___aodiv
  6879  06EB                     ___aodiv:	
  6880                           
  6881                           ;incstack = 0
  6882                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  6883  06EB  0020               	movlb	0	; select bank0
  6884  06EC  01BA               	clrf	___aodiv@sign
  6885  06ED  3028               	movlw	low ___aodiv@divisor
  6886  06EE  0086               	movwf	6
  6887  06EF  3000               	movlw	high ___aodiv@divisor
  6888  06F0  0087               	movwf	7
  6889  06F1  3F47               	moviw [7]fsr1
  6890  06F2  00B8               	movwf	??___aodiv
  6891  06F3  1FB8               	btfss	??___aodiv,7
  6892  06F4  2F17               	goto	l3118
  6893  06F5  0020               	movlb	0	; select bank0
  6894  06F6  09A8               	comf	___aodiv@divisor,f
  6895  06F7  09A9               	comf	___aodiv@divisor+1,f
  6896  06F8  09AA               	comf	___aodiv@divisor+2,f
  6897  06F9  09AB               	comf	___aodiv@divisor+3,f
  6898  06FA  09AC               	comf	___aodiv@divisor+4,f
  6899  06FB  09AD               	comf	___aodiv@divisor+5,f
  6900  06FC  09AE               	comf	___aodiv@divisor+6,f
  6901  06FD  09AF               	comf	___aodiv@divisor+7,f
  6902  06FE  0AA8               	incf	___aodiv@divisor,f
  6903  06FF  1D03               	skipz
  6904  0700  2F14               	goto	u351lld
  6905  0701  0AA9               	incf	___aodiv@divisor+1,f
  6906  0702  1D03               	skipz
  6907  0703  2F14               	goto	u351lld
  6908  0704  0AAA               	incf	___aodiv@divisor+2,f
  6909  0705  1D03               	skipz
  6910  0706  2F14               	goto	u351lld
  6911  0707  0AAB               	incf	___aodiv@divisor+3,f
  6912  0708  1D03               	skipz
  6913  0709  2F14               	goto	u351lld
  6914  070A  0AAC               	incf	___aodiv@divisor+4,f
  6915  070B  1D03               	skipz
  6916  070C  2F14               	goto	u351lld
  6917  070D  0AAD               	incf	___aodiv@divisor+5,f
  6918  070E  1D03               	skipz
  6919  070F  2F14               	goto	u351lld
  6920  0710  0AAE               	incf	___aodiv@divisor+6,f
  6921  0711  1D03               	skipz
  6922  0712  2F14               	goto	u351lld
  6923  0713  0AAF               	incf	___aodiv@divisor+7,f
  6924  0714                     u351lld:	
  6925  0714  0020               	movlb	0	; select bank0
  6926  0715  01BA               	clrf	___aodiv@sign
  6927  0716  0ABA               	incf	___aodiv@sign,f
  6928  0717                     l3118:	
  6929  0717  3030               	movlw	low ___aodiv@dividend
  6930  0718  0086               	movwf	6
  6931  0719  3000               	movlw	high ___aodiv@dividend
  6932  071A  0087               	movwf	7
  6933  071B  3F47               	moviw [7]fsr1
  6934  071C  0020               	movlb	0	; select bank0
  6935  071D  00B8               	movwf	??___aodiv
  6936  071E  1FB8               	btfss	??___aodiv,7
  6937  071F  2F44               	goto	l3124
  6938  0720  0020               	movlb	0	; select bank0
  6939  0721  09B0               	comf	___aodiv@dividend,f
  6940  0722  09B1               	comf	___aodiv@dividend+1,f
  6941  0723  09B2               	comf	___aodiv@dividend+2,f
  6942  0724  09B3               	comf	___aodiv@dividend+3,f
  6943  0725  09B4               	comf	___aodiv@dividend+4,f
  6944  0726  09B5               	comf	___aodiv@dividend+5,f
  6945  0727  09B6               	comf	___aodiv@dividend+6,f
  6946  0728  09B7               	comf	___aodiv@dividend+7,f
  6947  0729  0AB0               	incf	___aodiv@dividend,f
  6948  072A  1D03               	skipz
  6949  072B  2F3F               	goto	l3122
  6950  072C  0AB1               	incf	___aodiv@dividend+1,f
  6951  072D  1D03               	skipz
  6952  072E  2F3F               	goto	l3122
  6953  072F  0AB2               	incf	___aodiv@dividend+2,f
  6954  0730  1D03               	skipz
  6955  0731  2F3F               	goto	l3122
  6956  0732  0AB3               	incf	___aodiv@dividend+3,f
  6957  0733  1D03               	skipz
  6958  0734  2F3F               	goto	l3122
  6959  0735  0AB4               	incf	___aodiv@dividend+4,f
  6960  0736  1D03               	skipz
  6961  0737  2F3F               	goto	l3122
  6962  0738  0AB5               	incf	___aodiv@dividend+5,f
  6963  0739  1D03               	skipz
  6964  073A  2F3F               	goto	l3122
  6965  073B  0AB6               	incf	___aodiv@dividend+6,f
  6966  073C  1D03               	skipz
  6967  073D  2F3F               	goto	l3122
  6968  073E  0AB7               	incf	___aodiv@dividend+7,f
  6969  073F                     l3122:	
  6970  073F  3001               	movlw	1
  6971  0740  0020               	movlb	0	; select bank0
  6972  0741  00B8               	movwf	??___aodiv
  6973  0742  0838               	movf	??___aodiv,w
  6974  0743  06BA               	xorwf	___aodiv@sign,f
  6975  0744                     l3124:	
  6976  0744  303B               	movlw	low ___aodiv@quotient
  6977  0745  0086               	movwf	6
  6978  0746  3000               	movlw	high ___aodiv@quotient
  6979  0747  0087               	movwf	7
  6980  0748  3008               	movlw	8
  6981  0749  0020               	movlb	0	; select bank0
  6982  074A  00B8               	movwf	??___aodiv
  6983  074B  3000               	movlw	0
  6984  074C                     u3540:	
  6985  074C  001E               	movwi fsr1++
  6986  074D  0BB8               	decfsz	??___aodiv,f
  6987  074E  2F4C               	goto	u3540
  6988  074F  0828               	movf	___aodiv@divisor,w
  6989  0750  0429               	iorwf	___aodiv@divisor+1,w
  6990  0751  042A               	iorwf	___aodiv@divisor+2,w
  6991  0752  042B               	iorwf	___aodiv@divisor+3,w
  6992  0753  042C               	iorwf	___aodiv@divisor+4,w
  6993  0754  042D               	iorwf	___aodiv@divisor+5,w
  6994  0755  042E               	iorwf	___aodiv@divisor+6,w
  6995  0756  042F               	iorwf	___aodiv@divisor+7,w
  6996  0757  1903               	skipnz
  6997  0758  2FAF               	goto	l3146
  6998  0759  01B9               	clrf	___aodiv@counter
  6999  075A  0AB9               	incf	___aodiv@counter,f
  7000  075B                     l3134:	
  7001  075B  1BAF               	btfsc	___aodiv@divisor+7,7
  7002  075C  2F6A               	goto	l3136
  7003  075D  35A8               	lslf	___aodiv@divisor,f
  7004  075E  0DA9               	rlf	___aodiv@divisor+1,f
  7005  075F  0DAA               	rlf	___aodiv@divisor+2,f
  7006  0760  0DAB               	rlf	___aodiv@divisor+3,f
  7007  0761  0DAC               	rlf	___aodiv@divisor+4,f
  7008  0762  0DAD               	rlf	___aodiv@divisor+5,f
  7009  0763  0DAE               	rlf	___aodiv@divisor+6,f
  7010  0764  0DAF               	rlf	___aodiv@divisor+7,f
  7011  0765  3001               	movlw	1
  7012  0766  00B8               	movwf	??___aodiv
  7013  0767  0838               	movf	??___aodiv,w
  7014  0768  07B9               	addwf	___aodiv@counter,f
  7015  0769  2F5B               	goto	l3134
  7016  076A                     l3136:	
  7017  076A  35BB               	lslf	___aodiv@quotient,f
  7018  076B  0DBC               	rlf	___aodiv@quotient+1,f
  7019  076C  0DBD               	rlf	___aodiv@quotient+2,f
  7020  076D  0DBE               	rlf	___aodiv@quotient+3,f
  7021  076E  0DBF               	rlf	___aodiv@quotient+4,f
  7022  076F  0DC0               	rlf	___aodiv@quotient+5,f
  7023  0770  0DC1               	rlf	___aodiv@quotient+6,f
  7024  0771  0DC2               	rlf	___aodiv@quotient+7,f
  7025  0772  082F               	movf	___aodiv@divisor+7,w
  7026  0773  0237               	subwf	___aodiv@dividend+7,w
  7027  0774  1D03               	skipz
  7028  0775  2F90               	goto	u3575
  7029  0776  082E               	movf	___aodiv@divisor+6,w
  7030  0777  0236               	subwf	___aodiv@dividend+6,w
  7031  0778  1D03               	skipz
  7032  0779  2F90               	goto	u3575
  7033  077A  082D               	movf	___aodiv@divisor+5,w
  7034  077B  0235               	subwf	___aodiv@dividend+5,w
  7035  077C  1D03               	skipz
  7036  077D  2F90               	goto	u3575
  7037  077E  082C               	movf	___aodiv@divisor+4,w
  7038  077F  0234               	subwf	___aodiv@dividend+4,w
  7039  0780  1D03               	skipz
  7040  0781  2F90               	goto	u3575
  7041  0782  082B               	movf	___aodiv@divisor+3,w
  7042  0783  0233               	subwf	___aodiv@dividend+3,w
  7043  0784  1D03               	skipz
  7044  0785  2F90               	goto	u3575
  7045  0786  082A               	movf	___aodiv@divisor+2,w
  7046  0787  0232               	subwf	___aodiv@dividend+2,w
  7047  0788  1D03               	skipz
  7048  0789  2F90               	goto	u3575
  7049  078A  0829               	movf	___aodiv@divisor+1,w
  7050  078B  0231               	subwf	___aodiv@dividend+1,w
  7051  078C  1D03               	skipz
  7052  078D  2F90               	goto	u3575
  7053  078E  0828               	movf	___aodiv@divisor,w
  7054  078F  0230               	subwf	___aodiv@dividend,w
  7055  0790                     u3575:	
  7056  0790  1C03               	skipc
  7057  0791  2FA3               	goto	l3144
  7058  0792  0828               	movf	___aodiv@divisor,w
  7059  0793  02B0               	subwf	___aodiv@dividend,f
  7060  0794  0829               	movf	___aodiv@divisor+1,w
  7061  0795  3BB1               	subwfb	___aodiv@dividend+1,f
  7062  0796  082A               	movf	___aodiv@divisor+2,w
  7063  0797  3BB2               	subwfb	___aodiv@dividend+2,f
  7064  0798  082B               	movf	___aodiv@divisor+3,w
  7065  0799  3BB3               	subwfb	___aodiv@dividend+3,f
  7066  079A  082C               	movf	___aodiv@divisor+4,w
  7067  079B  3BB4               	subwfb	___aodiv@dividend+4,f
  7068  079C  082D               	movf	___aodiv@divisor+5,w
  7069  079D  3BB5               	subwfb	___aodiv@dividend+5,f
  7070  079E  082E               	movf	___aodiv@divisor+6,w
  7071  079F  3BB6               	subwfb	___aodiv@dividend+6,f
  7072  07A0  082F               	movf	___aodiv@divisor+7,w
  7073  07A1  3BB7               	subwfb	___aodiv@dividend+7,f
  7074  07A2  143B               	bsf	___aodiv@quotient,0
  7075  07A3                     l3144:	
  7076  07A3  36AF               	lsrf	___aodiv@divisor+7,f
  7077  07A4  0CAE               	rrf	___aodiv@divisor+6,f
  7078  07A5  0CAD               	rrf	___aodiv@divisor+5,f
  7079  07A6  0CAC               	rrf	___aodiv@divisor+4,f
  7080  07A7  0CAB               	rrf	___aodiv@divisor+3,f
  7081  07A8  0CAA               	rrf	___aodiv@divisor+2,f
  7082  07A9  0CA9               	rrf	___aodiv@divisor+1,f
  7083  07AA  0CA8               	rrf	___aodiv@divisor,f
  7084  07AB  3001               	movlw	1
  7085  07AC  02B9               	subwf	___aodiv@counter,f
  7086  07AD  1D03               	btfss	3,2
  7087  07AE  2F6A               	goto	l3136
  7088  07AF                     l3146:	
  7089  07AF  083A               	movf	___aodiv@sign,w
  7090  07B0  1903               	btfsc	3,2
  7091  07B1  2FD0               	goto	l643
  7092  07B2  09BB               	comf	___aodiv@quotient,f
  7093  07B3  09BC               	comf	___aodiv@quotient+1,f
  7094  07B4  09BD               	comf	___aodiv@quotient+2,f
  7095  07B5  09BE               	comf	___aodiv@quotient+3,f
  7096  07B6  09BF               	comf	___aodiv@quotient+4,f
  7097  07B7  09C0               	comf	___aodiv@quotient+5,f
  7098  07B8  09C1               	comf	___aodiv@quotient+6,f
  7099  07B9  09C2               	comf	___aodiv@quotient+7,f
  7100  07BA  0ABB               	incf	___aodiv@quotient,f
  7101  07BB  1D03               	skipz
  7102  07BC  2FD0               	goto	l643
  7103  07BD  0ABC               	incf	___aodiv@quotient+1,f
  7104  07BE  1D03               	skipz
  7105  07BF  2FD0               	goto	l643
  7106  07C0  0ABD               	incf	___aodiv@quotient+2,f
  7107  07C1  1D03               	skipz
  7108  07C2  2FD0               	goto	l643
  7109  07C3  0ABE               	incf	___aodiv@quotient+3,f
  7110  07C4  1D03               	skipz
  7111  07C5  2FD0               	goto	l643
  7112  07C6  0ABF               	incf	___aodiv@quotient+4,f
  7113  07C7  1D03               	skipz
  7114  07C8  2FD0               	goto	l643
  7115  07C9  0AC0               	incf	___aodiv@quotient+5,f
  7116  07CA  1D03               	skipz
  7117  07CB  2FD0               	goto	l643
  7118  07CC  0AC1               	incf	___aodiv@quotient+6,f
  7119  07CD  1D03               	skipz
  7120  07CE  2FD0               	goto	l643
  7121  07CF  0AC2               	incf	___aodiv@quotient+7,f
  7122  07D0                     l643:	
  7123  07D0  0020               	movlb	0	; select bank0
  7124  07D1  083B               	movf	___aodiv@quotient,w
  7125  07D2  00A8               	movwf	?___aodiv
  7126  07D3  083C               	movf	___aodiv@quotient+1,w
  7127  07D4  00A9               	movwf	?___aodiv+1
  7128  07D5  083D               	movf	___aodiv@quotient+2,w
  7129  07D6  00AA               	movwf	?___aodiv+2
  7130  07D7  083E               	movf	___aodiv@quotient+3,w
  7131  07D8  00AB               	movwf	?___aodiv+3
  7132  07D9  083F               	movf	___aodiv@quotient+4,w
  7133  07DA  00AC               	movwf	?___aodiv+4
  7134  07DB  0840               	movf	___aodiv@quotient+5,w
  7135  07DC  00AD               	movwf	?___aodiv+5
  7136  07DD  0841               	movf	___aodiv@quotient+6,w
  7137  07DE  00AE               	movwf	?___aodiv+6
  7138  07DF  0842               	movf	___aodiv@quotient+7,w
  7139  07E0  00AF               	movwf	?___aodiv+7
  7140  07E1  0008               	return
  7141  07E2                     __end_of___aodiv:	
  7142                           
  7143                           	psect	text17
  7144  0E8B                     __ptext17:	
  7145 ;; *************** function ___xxtofl *****************
  7146 ;; Defined at:
  7147 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
  7148 ;; Parameters:    Size  Location     Type
  7149 ;;  sign            1    wreg     unsigned char 
  7150 ;;  val             4    8[BANK0 ] long 
  7151 ;; Auto vars:     Size  Location     Type
  7152 ;;  sign            1   16[BANK0 ] unsigned char 
  7153 ;;  arg             4   18[BANK0 ] unsigned long 
  7154 ;;  exp             1   17[BANK0 ] unsigned char 
  7155 ;; Return value:  Size  Location     Type
  7156 ;;                  4    8[BANK0 ] unsigned char 
  7157 ;; Registers used:
  7158 ;;		wreg, status,2, status,0
  7159 ;; Tracked objects:
  7160 ;;		On entry : 0/0
  7161 ;;		On exit  : 0/0
  7162 ;;		Unchanged: 0/0
  7163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7164 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7165 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7166 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7167 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7168 ;;Total ram usage:       14 bytes
  7169 ;; Hardware stack levels used:    1
  7170 ;; Hardware stack levels required when called:    5
  7171 ;; This function calls:
  7172 ;;		Nothing
  7173 ;; This function is called by:
  7174 ;;		_main
  7175 ;; This function uses a non-reentrant model
  7176 ;;
  7177                           
  7178                           
  7179                           ;psect for function ___xxtofl
  7180  0E8B                     ___xxtofl:	
  7181                           
  7182                           ;incstack = 0
  7183                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7184                           ;___xxtofl@sign stored from wreg
  7185  0E8B  0020               	movlb	0	; select bank0
  7186  0E8C  00B0               	movwf	___xxtofl@sign
  7187  0E8D  0830               	movf	___xxtofl@sign,w
  7188  0E8E  1D03               	btfss	3,2
  7189  0E8F  1FAB               	btfss	___xxtofl@val+3,7
  7190  0E90  2EA1               	goto	l2926
  7191  0E91  0928               	comf	___xxtofl@val,w
  7192  0E92  00B2               	movwf	___xxtofl@arg
  7193  0E93  0929               	comf	___xxtofl@val+1,w
  7194  0E94  00B3               	movwf	___xxtofl@arg+1
  7195  0E95  092A               	comf	___xxtofl@val+2,w
  7196  0E96  00B4               	movwf	___xxtofl@arg+2
  7197  0E97  092B               	comf	___xxtofl@val+3,w
  7198  0E98  00B5               	movwf	___xxtofl@arg+3
  7199  0E99  0AB2               	incf	___xxtofl@arg,f
  7200  0E9A  1903               	skipnz
  7201  0E9B  0AB3               	incf	___xxtofl@arg+1,f
  7202  0E9C  1903               	skipnz
  7203  0E9D  0AB4               	incf	___xxtofl@arg+2,f
  7204  0E9E  1903               	skipnz
  7205  0E9F  0AB5               	incf	___xxtofl@arg+3,f
  7206  0EA0  2EA9               	goto	l978
  7207  0EA1                     l2926:	
  7208  0EA1  082B               	movf	___xxtofl@val+3,w
  7209  0EA2  00B5               	movwf	___xxtofl@arg+3
  7210  0EA3  082A               	movf	___xxtofl@val+2,w
  7211  0EA4  00B4               	movwf	___xxtofl@arg+2
  7212  0EA5  0829               	movf	___xxtofl@val+1,w
  7213  0EA6  00B3               	movwf	___xxtofl@arg+1
  7214  0EA7  0828               	movf	___xxtofl@val,w
  7215  0EA8  00B2               	movwf	___xxtofl@arg
  7216  0EA9                     l978:	
  7217  0EA9  082B               	movf	___xxtofl@val+3,w
  7218  0EAA  042A               	iorwf	___xxtofl@val+2,w
  7219  0EAB  0429               	iorwf	___xxtofl@val+1,w
  7220  0EAC  0428               	iorwf	___xxtofl@val,w
  7221  0EAD  1D03               	skipz
  7222  0EAE  2EB8               	goto	l2932
  7223  0EAF  3000               	movlw	0
  7224  0EB0  00AB               	movwf	?___xxtofl+3
  7225  0EB1  3000               	movlw	0
  7226  0EB2  00AA               	movwf	?___xxtofl+2
  7227  0EB3  3000               	movlw	0
  7228  0EB4  00A9               	movwf	?___xxtofl+1
  7229  0EB5  3000               	movlw	0
  7230  0EB6  00A8               	movwf	?___xxtofl
  7231  0EB7  0008               	return
  7232  0EB8                     l2932:	
  7233  0EB8  3096               	movlw	150
  7234  0EB9  00AC               	movwf	??___xxtofl
  7235  0EBA  082C               	movf	??___xxtofl,w
  7236  0EBB  00B1               	movwf	___xxtofl@exp
  7237  0EBC                     l2936:	
  7238  0EBC  30FE               	movlw	254
  7239  0EBD  0535               	andwf	___xxtofl@arg+3,w
  7240  0EBE  1903               	btfsc	3,2
  7241  0EBF  2EDF               	goto	l984
  7242  0EC0  3001               	movlw	1
  7243  0EC1  00AC               	movwf	??___xxtofl
  7244  0EC2  082C               	movf	??___xxtofl,w
  7245  0EC3  07B1               	addwf	___xxtofl@exp,f
  7246  0EC4  3001               	movlw	1
  7247  0EC5                     u3225:	
  7248  0EC5  36B5               	lsrf	___xxtofl@arg+3,f
  7249  0EC6  0CB4               	rrf	___xxtofl@arg+2,f
  7250  0EC7  0CB3               	rrf	___xxtofl@arg+1,f
  7251  0EC8  0CB2               	rrf	___xxtofl@arg,f
  7252  0EC9  0B89               	decfsz	9,f
  7253  0ECA  2EC5               	goto	u3225
  7254  0ECB  2EBC               	goto	l2936
  7255  0ECC                     l2938:	
  7256  0ECC  3001               	movlw	1
  7257  0ECD  00AC               	movwf	??___xxtofl
  7258  0ECE  082C               	movf	??___xxtofl,w
  7259  0ECF  07B1               	addwf	___xxtofl@exp,f
  7260  0ED0  3001               	movlw	1
  7261  0ED1  07B2               	addwf	___xxtofl@arg,f
  7262  0ED2  3000               	movlw	0
  7263  0ED3  3DB3               	addwfc	___xxtofl@arg+1,f
  7264  0ED4  3000               	movlw	0
  7265  0ED5  3DB4               	addwfc	___xxtofl@arg+2,f
  7266  0ED6  3000               	movlw	0
  7267  0ED7  3DB5               	addwfc	___xxtofl@arg+3,f
  7268  0ED8  3001               	movlw	1
  7269  0ED9                     u3245:	
  7270  0ED9  36B5               	lsrf	___xxtofl@arg+3,f
  7271  0EDA  0CB4               	rrf	___xxtofl@arg+2,f
  7272  0EDB  0CB3               	rrf	___xxtofl@arg+1,f
  7273  0EDC  0CB2               	rrf	___xxtofl@arg,f
  7274  0EDD  0B89               	decfsz	9,f
  7275  0EDE  2ED9               	goto	u3245
  7276  0EDF                     l984:	
  7277  0EDF  30FF               	movlw	255
  7278  0EE0  0535               	andwf	___xxtofl@arg+3,w
  7279  0EE1  1903               	btfsc	3,2
  7280  0EE2  2EF1               	goto	l2946
  7281  0EE3  2ECC               	goto	l2938
  7282  0EE4                     l2948:	
  7283  0EE4  3002               	movlw	2
  7284  0EE5  0231               	subwf	___xxtofl@exp,w
  7285  0EE6  1C03               	btfss	3,0
  7286  0EE7  2EF3               	goto	l991
  7287  0EE8  3001               	movlw	1
  7288  0EE9  02B1               	subwf	___xxtofl@exp,f
  7289  0EEA  3001               	movlw	1
  7290  0EEB                     u3265:	
  7291  0EEB  35B2               	lslf	___xxtofl@arg,f
  7292  0EEC  0DB3               	rlf	___xxtofl@arg+1,f
  7293  0EED  0DB4               	rlf	___xxtofl@arg+2,f
  7294  0EEE  0DB5               	rlf	___xxtofl@arg+3,f
  7295  0EEF  0B89               	decfsz	9,f
  7296  0EF0  2EEB               	goto	u3265
  7297  0EF1                     l2946:	
  7298  0EF1  1FB4               	btfss	___xxtofl@arg+2,7
  7299  0EF2  2EE4               	goto	l2948
  7300  0EF3                     l991:	
  7301  0EF3  1831               	btfsc	___xxtofl@exp,0
  7302  0EF4  2EFD               	goto	l992
  7303  0EF5  30FF               	movlw	255
  7304  0EF6  05B2               	andwf	___xxtofl@arg,f
  7305  0EF7  30FF               	movlw	255
  7306  0EF8  05B3               	andwf	___xxtofl@arg+1,f
  7307  0EF9  307F               	movlw	127
  7308  0EFA  05B4               	andwf	___xxtofl@arg+2,f
  7309  0EFB  30FF               	movlw	255
  7310  0EFC  05B5               	andwf	___xxtofl@arg+3,f
  7311  0EFD                     l992:	
  7312  0EFD  1003               	clrc
  7313  0EFE  0CB1               	rrf	___xxtofl@exp,f
  7314  0EFF  0831               	movf	___xxtofl@exp,w
  7315  0F00  00AC               	movwf	??___xxtofl
  7316  0F01  01AD               	clrf	??___xxtofl+1
  7317  0F02  01AE               	clrf	??___xxtofl+2
  7318  0F03  01AF               	clrf	??___xxtofl+3
  7319  0F04  3018               	movlw	24
  7320  0F05                     u3305:	
  7321  0F05  35AC               	lslf	??___xxtofl,f
  7322  0F06  0DAD               	rlf	??___xxtofl+1,f
  7323  0F07  0DAE               	rlf	??___xxtofl+2,f
  7324  0F08  0DAF               	rlf	??___xxtofl+3,f
  7325  0F09  0B89               	decfsz	9,f
  7326  0F0A  2F05               	goto	u3305
  7327  0F0B  082C               	movf	??___xxtofl,w
  7328  0F0C  04B2               	iorwf	___xxtofl@arg,f
  7329  0F0D  082D               	movf	??___xxtofl+1,w
  7330  0F0E  04B3               	iorwf	___xxtofl@arg+1,f
  7331  0F0F  082E               	movf	??___xxtofl+2,w
  7332  0F10  04B4               	iorwf	___xxtofl@arg+2,f
  7333  0F11  082F               	movf	??___xxtofl+3,w
  7334  0F12  04B5               	iorwf	___xxtofl@arg+3,f
  7335  0F13  0830               	movf	___xxtofl@sign,w
  7336  0F14  1D03               	btfss	3,2
  7337  0F15  1FAB               	btfss	___xxtofl@val+3,7
  7338  0F16  2F18               	goto	l2960
  7339  0F17  17B5               	bsf	___xxtofl@arg+3,7
  7340  0F18                     l2960:	
  7341  0F18  0835               	movf	___xxtofl@arg+3,w
  7342  0F19  00AB               	movwf	?___xxtofl+3
  7343  0F1A  0834               	movf	___xxtofl@arg+2,w
  7344  0F1B  00AA               	movwf	?___xxtofl+2
  7345  0F1C  0833               	movf	___xxtofl@arg+1,w
  7346  0F1D  00A9               	movwf	?___xxtofl+1
  7347  0F1E  0832               	movf	___xxtofl@arg,w
  7348  0F1F  00A8               	movwf	?___xxtofl
  7349  0F20  0008               	return
  7350  0F21                     __end_of___xxtofl:	
  7351                           
  7352                           	psect	text18
  7353  0D92                     __ptext18:	
  7354 ;; *************** function ___fltol *****************
  7355 ;; Defined at:
  7356 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
  7357 ;; Parameters:    Size  Location     Type
  7358 ;;  f1              4   48[BANK0 ] unsigned char 
  7359 ;; Auto vars:     Size  Location     Type
  7360 ;;  exp1            1   58[BANK0 ] unsigned char 
  7361 ;;  sign1           1   57[BANK0 ] unsigned char 
  7362 ;; Return value:  Size  Location     Type
  7363 ;;                  4   48[BANK0 ] long 
  7364 ;; Registers used:
  7365 ;;		wreg, status,2, status,0
  7366 ;; Tracked objects:
  7367 ;;		On entry : 0/0
  7368 ;;		On exit  : 0/0
  7369 ;;		Unchanged: 0/0
  7370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7371 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7372 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7373 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7374 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7375 ;;Total ram usage:       11 bytes
  7376 ;; Hardware stack levels used:    1
  7377 ;; Hardware stack levels required when called:    5
  7378 ;; This function calls:
  7379 ;;		Nothing
  7380 ;; This function is called by:
  7381 ;;		_main
  7382 ;; This function uses a non-reentrant model
  7383 ;;
  7384                           
  7385                           
  7386                           ;psect for function ___fltol
  7387  0D92                     ___fltol:	
  7388                           
  7389                           ;incstack = 0
  7390                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7391  0D92  1003               	clrc
  7392  0D93  0020               	movlb	0	; select bank0
  7393  0D94  0D52               	rlf	___fltol@f1+2,w
  7394  0D95  0D53               	rlf	___fltol@f1+3,w
  7395  0D96  00D4               	movwf	??___fltol
  7396  0D97  0854               	movf	??___fltol,w
  7397  0D98  00DA               	movwf	___fltol@exp1
  7398  0D99  085A               	movf	___fltol@exp1,w
  7399  0D9A  1D03               	btfss	3,2
  7400  0D9B  2DA5               	goto	l2750
  7401  0D9C                     l2746:	
  7402  0D9C  3000               	movlw	0
  7403  0D9D  00D3               	movwf	?___fltol+3
  7404  0D9E  3000               	movlw	0
  7405  0D9F  00D2               	movwf	?___fltol+2
  7406  0DA0  3000               	movlw	0
  7407  0DA1  00D1               	movwf	?___fltol+1
  7408  0DA2  3000               	movlw	0
  7409  0DA3  00D0               	movwf	?___fltol
  7410  0DA4  0008               	return
  7411  0DA5                     l2750:	
  7412  0DA5  0850               	movf	___fltol@f1,w
  7413  0DA6  00D4               	movwf	??___fltol
  7414  0DA7  0851               	movf	___fltol@f1+1,w
  7415  0DA8  00D5               	movwf	??___fltol+1
  7416  0DA9  0852               	movf	___fltol@f1+2,w
  7417  0DAA  00D6               	movwf	??___fltol+2
  7418  0DAB  0853               	movf	___fltol@f1+3,w
  7419  0DAC  00D7               	movwf	??___fltol+3
  7420  0DAD  301F               	movlw	31
  7421  0DAE                     u2845:	
  7422  0DAE  36D7               	lsrf	??___fltol+3,f
  7423  0DAF  0CD6               	rrf	??___fltol+2,f
  7424  0DB0  0CD5               	rrf	??___fltol+1,f
  7425  0DB1  0CD4               	rrf	??___fltol,f
  7426  0DB2  0B89               	decfsz	9,f
  7427  0DB3  2DAE               	goto	u2845
  7428  0DB4  0854               	movf	??___fltol,w
  7429  0DB5  00D8               	movwf	??___fltol+4
  7430  0DB6  0858               	movf	??___fltol+4,w
  7431  0DB7  00D9               	movwf	___fltol@sign1
  7432  0DB8  17D2               	bsf	___fltol@f1+2,7
  7433  0DB9  30FF               	movlw	255
  7434  0DBA  05D0               	andwf	___fltol@f1,f
  7435  0DBB  30FF               	movlw	255
  7436  0DBC  05D1               	andwf	___fltol@f1+1,f
  7437  0DBD  30FF               	movlw	255
  7438  0DBE  05D2               	andwf	___fltol@f1+2,f
  7439  0DBF  3000               	movlw	0
  7440  0DC0  05D3               	andwf	___fltol@f1+3,f
  7441  0DC1  3096               	movlw	150
  7442  0DC2  02DA               	subwf	___fltol@exp1,f
  7443  0DC3  1FDA               	btfss	___fltol@exp1,7
  7444  0DC4  2DD8               	goto	l2768
  7445  0DC5  085A               	movf	___fltol@exp1,w
  7446  0DC6  3A80               	xorlw	128
  7447  0DC7  3E97               	addlw	151
  7448  0DC8  1C03               	btfss	3,0
  7449  0DC9  2D9C               	goto	l2746
  7450  0DCA                     l2766:	
  7451  0DCA  3001               	movlw	1
  7452  0DCB                     u2875:	
  7453  0DCB  36D3               	lsrf	___fltol@f1+3,f
  7454  0DCC  0CD2               	rrf	___fltol@f1+2,f
  7455  0DCD  0CD1               	rrf	___fltol@f1+1,f
  7456  0DCE  0CD0               	rrf	___fltol@f1,f
  7457  0DCF  0B89               	decfsz	9,f
  7458  0DD0  2DCB               	goto	u2875
  7459  0DD1  3001               	movlw	1
  7460  0DD2  00D4               	movwf	??___fltol
  7461  0DD3  0854               	movf	??___fltol,w
  7462  0DD4  07DA               	addwf	___fltol@exp1,f
  7463  0DD5  1903               	btfsc	3,2
  7464  0DD6  2DE9               	goto	l2776
  7465  0DD7  2DCA               	goto	l2766
  7466  0DD8                     l2768:	
  7467  0DD8  3020               	movlw	32
  7468  0DD9  025A               	subwf	___fltol@exp1,w
  7469  0DDA  1803               	btfsc	3,0
  7470  0DDB  2D9C               	goto	l2746
  7471  0DDC                     l744:	
  7472  0DDC  085A               	movf	___fltol@exp1,w
  7473  0DDD  1903               	btfsc	3,2
  7474  0DDE  2DE9               	goto	l2776
  7475  0DDF  3001               	movlw	1
  7476  0DE0                     u2905:	
  7477  0DE0  35D0               	lslf	___fltol@f1,f
  7478  0DE1  0DD1               	rlf	___fltol@f1+1,f
  7479  0DE2  0DD2               	rlf	___fltol@f1+2,f
  7480  0DE3  0DD3               	rlf	___fltol@f1+3,f
  7481  0DE4  0B89               	decfsz	9,f
  7482  0DE5  2DE0               	goto	u2905
  7483  0DE6  3001               	movlw	1
  7484  0DE7  02DA               	subwf	___fltol@exp1,f
  7485  0DE8  2DDC               	goto	l744
  7486  0DE9                     l2776:	
  7487  0DE9  0859               	movf	___fltol@sign1,w
  7488  0DEA  1903               	btfsc	3,2
  7489  0DEB  0008               	return
  7490  0DEC  09D0               	comf	___fltol@f1,f
  7491  0DED  09D1               	comf	___fltol@f1+1,f
  7492  0DEE  09D2               	comf	___fltol@f1+2,f
  7493  0DEF  09D3               	comf	___fltol@f1+3,f
  7494  0DF0  0AD0               	incf	___fltol@f1,f
  7495  0DF1  1903               	skipnz
  7496  0DF2  0AD1               	incf	___fltol@f1+1,f
  7497  0DF3  1903               	skipnz
  7498  0DF4  0AD2               	incf	___fltol@f1+2,f
  7499  0DF5  1903               	skipnz
  7500  0DF6  0AD3               	incf	___fltol@f1+3,f
  7501  0DF7  0008               	return
  7502  0DF8                     __end_of___fltol:	
  7503                           
  7504                           	psect	text19
  7505  0033                     __ptext19:	
  7506 ;; *************** function ___flmul *****************
  7507 ;; Defined at:
  7508 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
  7509 ;; Parameters:    Size  Location     Type
  7510 ;;  b               4   22[BANK0 ] long 
  7511 ;;  a               4   26[BANK0 ] long 
  7512 ;; Auto vars:     Size  Location     Type
  7513 ;;  prod            4   42[BANK0 ] struct .
  7514 ;;  grs             4   36[BANK0 ] unsigned long 
  7515 ;;  temp            2   46[BANK0 ] struct .
  7516 ;;  bexp            1   41[BANK0 ] unsigned char 
  7517 ;;  aexp            1   40[BANK0 ] unsigned char 
  7518 ;;  sign            1   35[BANK0 ] unsigned char 
  7519 ;; Return value:  Size  Location     Type
  7520 ;;                  4   22[BANK0 ] unsigned char 
  7521 ;; Registers used:
  7522 ;;		wreg, status,2, status,0, pclath, cstack
  7523 ;; Tracked objects:
  7524 ;;		On entry : 0/0
  7525 ;;		On exit  : 0/0
  7526 ;;		Unchanged: 0/0
  7527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7528 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7529 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7530 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7531 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7532 ;;Total ram usage:       26 bytes
  7533 ;; Hardware stack levels used:    1
  7534 ;; Hardware stack levels required when called:    6
  7535 ;; This function calls:
  7536 ;;		__Umul8_16
  7537 ;; This function is called by:
  7538 ;;		_main
  7539 ;; This function uses a non-reentrant model
  7540 ;;
  7541                           
  7542                           
  7543                           ;psect for function ___flmul
  7544  0033                     ___flmul:	
  7545                           
  7546                           ;incstack = 0
  7547                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  7548  0033  0020               	movlb	0	; select bank0
  7549  0034  0839               	movf	___flmul@b+3,w
  7550  0035  3980               	andlw	128
  7551  0036  00BE               	movwf	??___flmul
  7552  0037  083E               	movf	??___flmul,w
  7553  0038  00C3               	movwf	___flmul@sign
  7554  0039  3539               	lslf	___flmul@b+3,w
  7555  003A  00BE               	movwf	??___flmul
  7556  003B  083E               	movf	??___flmul,w
  7557  003C  00C9               	movwf	___flmul@bexp
  7558  003D  1BB8               	btfsc	___flmul@b+2,7
  7559  003E  1449               	bsf	___flmul@bexp,0
  7560  003F  0849               	movf	___flmul@bexp,w
  7561  0040  1903               	btfsc	3,2
  7562  0041  284F               	goto	l2796
  7563  0042  0A49               	incf	___flmul@bexp,w
  7564  0043  1D03               	btfss	3,2
  7565  0044  284D               	goto	l2794
  7566  0045  3000               	movlw	0
  7567  0046  00B9               	movwf	___flmul@b+3
  7568  0047  3000               	movlw	0
  7569  0048  00B8               	movwf	___flmul@b+2
  7570  0049  3000               	movlw	0
  7571  004A  00B7               	movwf	___flmul@b+1
  7572  004B  3000               	movlw	0
  7573  004C  00B6               	movwf	___flmul@b
  7574  004D                     l2794:	
  7575  004D  17B8               	bsf	___flmul@b+2,7
  7576  004E  2857               	goto	l2798
  7577  004F                     l2796:	
  7578  004F  3000               	movlw	0
  7579  0050  00B9               	movwf	___flmul@b+3
  7580  0051  3000               	movlw	0
  7581  0052  00B8               	movwf	___flmul@b+2
  7582  0053  3000               	movlw	0
  7583  0054  00B7               	movwf	___flmul@b+1
  7584  0055  3000               	movlw	0
  7585  0056  00B6               	movwf	___flmul@b
  7586  0057                     l2798:	
  7587  0057  083D               	movf	___flmul@a+3,w
  7588  0058  3980               	andlw	128
  7589  0059  00BE               	movwf	??___flmul
  7590  005A  083E               	movf	??___flmul,w
  7591  005B  06C3               	xorwf	___flmul@sign,f
  7592  005C  353D               	lslf	___flmul@a+3,w
  7593  005D  00BE               	movwf	??___flmul
  7594  005E  083E               	movf	??___flmul,w
  7595  005F  00C8               	movwf	___flmul@aexp
  7596  0060  1BBC               	btfsc	___flmul@a+2,7
  7597  0061  1448               	bsf	___flmul@aexp,0
  7598  0062  0848               	movf	___flmul@aexp,w
  7599  0063  1903               	btfsc	3,2
  7600  0064  2872               	goto	l2814
  7601  0065  0A48               	incf	___flmul@aexp,w
  7602  0066  1D03               	btfss	3,2
  7603  0067  2870               	goto	l2812
  7604  0068  3000               	movlw	0
  7605  0069  00BD               	movwf	___flmul@a+3
  7606  006A  3000               	movlw	0
  7607  006B  00BC               	movwf	___flmul@a+2
  7608  006C  3000               	movlw	0
  7609  006D  00BB               	movwf	___flmul@a+1
  7610  006E  3000               	movlw	0
  7611  006F  00BA               	movwf	___flmul@a
  7612  0070                     l2812:	
  7613  0070  17BC               	bsf	___flmul@a+2,7
  7614  0071  287A               	goto	l2816
  7615  0072                     l2814:	
  7616  0072  3000               	movlw	0
  7617  0073  00BD               	movwf	___flmul@a+3
  7618  0074  3000               	movlw	0
  7619  0075  00BC               	movwf	___flmul@a+2
  7620  0076  3000               	movlw	0
  7621  0077  00BB               	movwf	___flmul@a+1
  7622  0078  3000               	movlw	0
  7623  0079  00BA               	movwf	___flmul@a
  7624  007A                     l2816:	
  7625  007A  0848               	movf	___flmul@aexp,w
  7626  007B  1D03               	btfss	3,2
  7627  007C  0849               	movf	___flmul@bexp,w
  7628  007D  1D03               	btfss	3,2
  7629  007E  2888               	goto	l2824
  7630  007F  3000               	movlw	0
  7631  0080  00B9               	movwf	?___flmul+3
  7632  0081  3000               	movlw	0
  7633  0082  00B8               	movwf	?___flmul+2
  7634  0083  3000               	movlw	0
  7635  0084  00B7               	movwf	?___flmul+1
  7636  0085  3000               	movlw	0
  7637  0086  00B6               	movwf	?___flmul
  7638  0087  0008               	return
  7639  0088                     l2824:	
  7640  0088  0836               	movf	___flmul@b,w
  7641  0089  00BE               	movwf	??___flmul
  7642  008A  083E               	movf	??___flmul,w
  7643  008B  00A8               	movwf	__Umul8_16@multiplicand
  7644  008C  083C               	movf	___flmul@a+2,w
  7645  008D  318B  23BA  3180   	fcall	__Umul8_16
  7646  0090  0020               	movlb	0	; select bank0
  7647  0091  0829               	movf	?__Umul8_16+1,w
  7648  0092  00CF               	movwf	___flmul@temp+1
  7649  0093  0828               	movf	?__Umul8_16,w
  7650  0094  00CE               	movwf	___flmul@temp
  7651  0095  084E               	movf	___flmul@temp,w
  7652  0096  00BE               	movwf	??___flmul
  7653  0097  01BF               	clrf	??___flmul+1
  7654  0098  01C0               	clrf	??___flmul+2
  7655  0099  01C1               	clrf	??___flmul+3
  7656  009A  0841               	movf	??___flmul+3,w
  7657  009B  00C7               	movwf	___flmul@grs+3
  7658  009C  0840               	movf	??___flmul+2,w
  7659  009D  00C6               	movwf	___flmul@grs+2
  7660  009E  083F               	movf	??___flmul+1,w
  7661  009F  00C5               	movwf	___flmul@grs+1
  7662  00A0  083E               	movf	??___flmul,w
  7663  00A1  00C4               	movwf	___flmul@grs
  7664  00A2  084F               	movf	___flmul@temp+1,w
  7665  00A3  00BE               	movwf	??___flmul
  7666  00A4  01BF               	clrf	??___flmul+1
  7667  00A5  01C0               	clrf	??___flmul+2
  7668  00A6  01C1               	clrf	??___flmul+3
  7669  00A7  0841               	movf	??___flmul+3,w
  7670  00A8  00CD               	movwf	___flmul@prod+3
  7671  00A9  0840               	movf	??___flmul+2,w
  7672  00AA  00CC               	movwf	___flmul@prod+2
  7673  00AB  083F               	movf	??___flmul+1,w
  7674  00AC  00CB               	movwf	___flmul@prod+1
  7675  00AD  083E               	movf	??___flmul,w
  7676  00AE  00CA               	movwf	___flmul@prod
  7677  00AF  0837               	movf	___flmul@b+1,w
  7678  00B0  00BE               	movwf	??___flmul
  7679  00B1  083E               	movf	??___flmul,w
  7680  00B2  00A8               	movwf	__Umul8_16@multiplicand
  7681  00B3  083B               	movf	___flmul@a+1,w
  7682  00B4  318B  23BA  3180   	fcall	__Umul8_16
  7683  00B7  0020               	movlb	0	; select bank0
  7684  00B8  0829               	movf	?__Umul8_16+1,w
  7685  00B9  00CF               	movwf	___flmul@temp+1
  7686  00BA  0828               	movf	?__Umul8_16,w
  7687  00BB  00CE               	movwf	___flmul@temp
  7688  00BC  084E               	movf	___flmul@temp,w
  7689  00BD  00BE               	movwf	??___flmul
  7690  00BE  01BF               	clrf	??___flmul+1
  7691  00BF  01C0               	clrf	??___flmul+2
  7692  00C0  01C1               	clrf	??___flmul+3
  7693  00C1  083E               	movf	??___flmul,w
  7694  00C2  07C4               	addwf	___flmul@grs,f
  7695  00C3  083F               	movf	??___flmul+1,w
  7696  00C4  3DC5               	addwfc	___flmul@grs+1,f
  7697  00C5  0840               	movf	??___flmul+2,w
  7698  00C6  3DC6               	addwfc	___flmul@grs+2,f
  7699  00C7  0841               	movf	??___flmul+3,w
  7700  00C8  3DC7               	addwfc	___flmul@grs+3,f
  7701  00C9  084F               	movf	___flmul@temp+1,w
  7702  00CA  00BE               	movwf	??___flmul
  7703  00CB  01BF               	clrf	??___flmul+1
  7704  00CC  01C0               	clrf	??___flmul+2
  7705  00CD  01C1               	clrf	??___flmul+3
  7706  00CE  083E               	movf	??___flmul,w
  7707  00CF  07CA               	addwf	___flmul@prod,f
  7708  00D0  083F               	movf	??___flmul+1,w
  7709  00D1  3DCB               	addwfc	___flmul@prod+1,f
  7710  00D2  0840               	movf	??___flmul+2,w
  7711  00D3  3DCC               	addwfc	___flmul@prod+2,f
  7712  00D4  0841               	movf	??___flmul+3,w
  7713  00D5  3DCD               	addwfc	___flmul@prod+3,f
  7714  00D6  0838               	movf	___flmul@b+2,w
  7715  00D7  00BE               	movwf	??___flmul
  7716  00D8  083E               	movf	??___flmul,w
  7717  00D9  00A8               	movwf	__Umul8_16@multiplicand
  7718  00DA  083A               	movf	___flmul@a,w
  7719  00DB  318B  23BA  3180   	fcall	__Umul8_16
  7720  00DE  0020               	movlb	0	; select bank0
  7721  00DF  0829               	movf	?__Umul8_16+1,w
  7722  00E0  00CF               	movwf	___flmul@temp+1
  7723  00E1  0828               	movf	?__Umul8_16,w
  7724  00E2  00CE               	movwf	___flmul@temp
  7725  00E3  084E               	movf	___flmul@temp,w
  7726  00E4  00BE               	movwf	??___flmul
  7727  00E5  01BF               	clrf	??___flmul+1
  7728  00E6  01C0               	clrf	??___flmul+2
  7729  00E7  01C1               	clrf	??___flmul+3
  7730  00E8  083E               	movf	??___flmul,w
  7731  00E9  07C4               	addwf	___flmul@grs,f
  7732  00EA  083F               	movf	??___flmul+1,w
  7733  00EB  3DC5               	addwfc	___flmul@grs+1,f
  7734  00EC  0840               	movf	??___flmul+2,w
  7735  00ED  3DC6               	addwfc	___flmul@grs+2,f
  7736  00EE  0841               	movf	??___flmul+3,w
  7737  00EF  3DC7               	addwfc	___flmul@grs+3,f
  7738  00F0  084F               	movf	___flmul@temp+1,w
  7739  00F1  00BE               	movwf	??___flmul
  7740  00F2  01BF               	clrf	??___flmul+1
  7741  00F3  01C0               	clrf	??___flmul+2
  7742  00F4  01C1               	clrf	??___flmul+3
  7743  00F5  083E               	movf	??___flmul,w
  7744  00F6  07CA               	addwf	___flmul@prod,f
  7745  00F7  083F               	movf	??___flmul+1,w
  7746  00F8  3DCB               	addwfc	___flmul@prod+1,f
  7747  00F9  0840               	movf	??___flmul+2,w
  7748  00FA  3DCC               	addwfc	___flmul@prod+2,f
  7749  00FB  0841               	movf	??___flmul+3,w
  7750  00FC  3DCD               	addwfc	___flmul@prod+3,f
  7751  00FD  3008               	movlw	8
  7752  00FE                     u3015:	
  7753  00FE  35C4               	lslf	___flmul@grs,f
  7754  00FF  0DC5               	rlf	___flmul@grs+1,f
  7755  0100  0DC6               	rlf	___flmul@grs+2,f
  7756  0101  0DC7               	rlf	___flmul@grs+3,f
  7757  0102  0B89               	decfsz	9,f
  7758  0103  28FE               	goto	u3015
  7759  0104  0837               	movf	___flmul@b+1,w
  7760  0105  00BE               	movwf	??___flmul
  7761  0106  083E               	movf	??___flmul,w
  7762  0107  00A8               	movwf	__Umul8_16@multiplicand
  7763  0108  083A               	movf	___flmul@a,w
  7764  0109  318B  23BA  3180   	fcall	__Umul8_16
  7765  010C  0020               	movlb	0	; select bank0
  7766  010D  0829               	movf	?__Umul8_16+1,w
  7767  010E  00CF               	movwf	___flmul@temp+1
  7768  010F  0828               	movf	?__Umul8_16,w
  7769  0110  00CE               	movwf	___flmul@temp
  7770  0111  084E               	movf	___flmul@temp,w
  7771  0112  07C4               	addwf	___flmul@grs,f
  7772  0113  084F               	movf	___flmul@temp+1,w
  7773  0114  3DC5               	addwfc	___flmul@grs+1,f
  7774  0115  3000               	movlw	0
  7775  0116  3DC6               	addwfc	___flmul@grs+2,f
  7776  0117  3DC7               	addwfc	___flmul@grs+3,f
  7777  0118  0836               	movf	___flmul@b,w
  7778  0119  00BE               	movwf	??___flmul
  7779  011A  083E               	movf	??___flmul,w
  7780  011B  00A8               	movwf	__Umul8_16@multiplicand
  7781  011C  083B               	movf	___flmul@a+1,w
  7782  011D  318B  23BA  3180   	fcall	__Umul8_16
  7783  0120  0020               	movlb	0	; select bank0
  7784  0121  0829               	movf	?__Umul8_16+1,w
  7785  0122  00CF               	movwf	___flmul@temp+1
  7786  0123  0828               	movf	?__Umul8_16,w
  7787  0124  00CE               	movwf	___flmul@temp
  7788  0125  084E               	movf	___flmul@temp,w
  7789  0126  07C4               	addwf	___flmul@grs,f
  7790  0127  084F               	movf	___flmul@temp+1,w
  7791  0128  3DC5               	addwfc	___flmul@grs+1,f
  7792  0129  3000               	movlw	0
  7793  012A  3DC6               	addwfc	___flmul@grs+2,f
  7794  012B  3DC7               	addwfc	___flmul@grs+3,f
  7795  012C  3008               	movlw	8
  7796  012D                     u3025:	
  7797  012D  35C4               	lslf	___flmul@grs,f
  7798  012E  0DC5               	rlf	___flmul@grs+1,f
  7799  012F  0DC6               	rlf	___flmul@grs+2,f
  7800  0130  0DC7               	rlf	___flmul@grs+3,f
  7801  0131  0B89               	decfsz	9,f
  7802  0132  292D               	goto	u3025
  7803  0133  0836               	movf	___flmul@b,w
  7804  0134  00BE               	movwf	??___flmul
  7805  0135  083E               	movf	??___flmul,w
  7806  0136  00A8               	movwf	__Umul8_16@multiplicand
  7807  0137  083A               	movf	___flmul@a,w
  7808  0138  318B  23BA  3180   	fcall	__Umul8_16
  7809  013B  0020               	movlb	0	; select bank0
  7810  013C  0829               	movf	?__Umul8_16+1,w
  7811  013D  00CF               	movwf	___flmul@temp+1
  7812  013E  0828               	movf	?__Umul8_16,w
  7813  013F  00CE               	movwf	___flmul@temp
  7814  0140  084E               	movf	___flmul@temp,w
  7815  0141  07C4               	addwf	___flmul@grs,f
  7816  0142  084F               	movf	___flmul@temp+1,w
  7817  0143  3DC5               	addwfc	___flmul@grs+1,f
  7818  0144  3000               	movlw	0
  7819  0145  3DC6               	addwfc	___flmul@grs+2,f
  7820  0146  3DC7               	addwfc	___flmul@grs+3,f
  7821  0147  0837               	movf	___flmul@b+1,w
  7822  0148  00BE               	movwf	??___flmul
  7823  0149  083E               	movf	??___flmul,w
  7824  014A  00A8               	movwf	__Umul8_16@multiplicand
  7825  014B  083C               	movf	___flmul@a+2,w
  7826  014C  318B  23BA  3180   	fcall	__Umul8_16
  7827  014F  0020               	movlb	0	; select bank0
  7828  0150  0829               	movf	?__Umul8_16+1,w
  7829  0151  00CF               	movwf	___flmul@temp+1
  7830  0152  0828               	movf	?__Umul8_16,w
  7831  0153  00CE               	movwf	___flmul@temp
  7832  0154  084E               	movf	___flmul@temp,w
  7833  0155  07CA               	addwf	___flmul@prod,f
  7834  0156  084F               	movf	___flmul@temp+1,w
  7835  0157  3DCB               	addwfc	___flmul@prod+1,f
  7836  0158  3000               	movlw	0
  7837  0159  3DCC               	addwfc	___flmul@prod+2,f
  7838  015A  3DCD               	addwfc	___flmul@prod+3,f
  7839  015B  0838               	movf	___flmul@b+2,w
  7840  015C  00BE               	movwf	??___flmul
  7841  015D  083E               	movf	??___flmul,w
  7842  015E  00A8               	movwf	__Umul8_16@multiplicand
  7843  015F  083B               	movf	___flmul@a+1,w
  7844  0160  318B  23BA  3180   	fcall	__Umul8_16
  7845  0163  0020               	movlb	0	; select bank0
  7846  0164  0829               	movf	?__Umul8_16+1,w
  7847  0165  00CF               	movwf	___flmul@temp+1
  7848  0166  0828               	movf	?__Umul8_16,w
  7849  0167  00CE               	movwf	___flmul@temp
  7850  0168  084E               	movf	___flmul@temp,w
  7851  0169  07CA               	addwf	___flmul@prod,f
  7852  016A  084F               	movf	___flmul@temp+1,w
  7853  016B  3DCB               	addwfc	___flmul@prod+1,f
  7854  016C  3000               	movlw	0
  7855  016D  3DCC               	addwfc	___flmul@prod+2,f
  7856  016E  3DCD               	addwfc	___flmul@prod+3,f
  7857  016F  0838               	movf	___flmul@b+2,w
  7858  0170  00BE               	movwf	??___flmul
  7859  0171  083E               	movf	??___flmul,w
  7860  0172  00A8               	movwf	__Umul8_16@multiplicand
  7861  0173  083C               	movf	___flmul@a+2,w
  7862  0174  318B  23BA  3180   	fcall	__Umul8_16
  7863  0177  0020               	movlb	0	; select bank0
  7864  0178  0829               	movf	?__Umul8_16+1,w
  7865  0179  00CF               	movwf	___flmul@temp+1
  7866  017A  0828               	movf	?__Umul8_16,w
  7867  017B  00CE               	movwf	___flmul@temp
  7868  017C  084E               	movf	___flmul@temp,w
  7869  017D  00BE               	movwf	??___flmul
  7870  017E  084F               	movf	___flmul@temp+1,w
  7871  017F  00BF               	movwf	??___flmul+1
  7872  0180  01C0               	clrf	??___flmul+2
  7873  0181  01C1               	clrf	??___flmul+3
  7874  0182  3008               	movlw	8
  7875  0183                     u3035:	
  7876  0183  35BE               	lslf	??___flmul,f
  7877  0184  0DBF               	rlf	??___flmul+1,f
  7878  0185  0DC0               	rlf	??___flmul+2,f
  7879  0186  0DC1               	rlf	??___flmul+3,f
  7880  0187  0B89               	decfsz	9,f
  7881  0188  2983               	goto	u3035
  7882  0189  083E               	movf	??___flmul,w
  7883  018A  07CA               	addwf	___flmul@prod,f
  7884  018B  083F               	movf	??___flmul+1,w
  7885  018C  3DCB               	addwfc	___flmul@prod+1,f
  7886  018D  0840               	movf	??___flmul+2,w
  7887  018E  3DCC               	addwfc	___flmul@prod+2,f
  7888  018F  0841               	movf	??___flmul+3,w
  7889  0190  3DCD               	addwfc	___flmul@prod+3,f
  7890  0191  0844               	movf	___flmul@grs,w
  7891  0192  00BE               	movwf	??___flmul
  7892  0193  0845               	movf	___flmul@grs+1,w
  7893  0194  00BF               	movwf	??___flmul+1
  7894  0195  0846               	movf	___flmul@grs+2,w
  7895  0196  00C0               	movwf	??___flmul+2
  7896  0197  0847               	movf	___flmul@grs+3,w
  7897  0198  00C1               	movwf	??___flmul+3
  7898  0199  3018               	movlw	24
  7899  019A                     u3045:	
  7900  019A  36C1               	lsrf	??___flmul+3,f
  7901  019B  0CC0               	rrf	??___flmul+2,f
  7902  019C  0CBF               	rrf	??___flmul+1,f
  7903  019D  0CBE               	rrf	??___flmul,f
  7904  019E  0B89               	decfsz	9,f
  7905  019F  299A               	goto	u3045
  7906  01A0  083E               	movf	??___flmul,w
  7907  01A1  07CA               	addwf	___flmul@prod,f
  7908  01A2  083F               	movf	??___flmul+1,w
  7909  01A3  3DCB               	addwfc	___flmul@prod+1,f
  7910  01A4  0840               	movf	??___flmul+2,w
  7911  01A5  3DCC               	addwfc	___flmul@prod+2,f
  7912  01A6  0841               	movf	??___flmul+3,w
  7913  01A7  3DCD               	addwfc	___flmul@prod+3,f
  7914  01A8  3008               	movlw	8
  7915  01A9                     u3055:	
  7916  01A9  35C4               	lslf	___flmul@grs,f
  7917  01AA  0DC5               	rlf	___flmul@grs+1,f
  7918  01AB  0DC6               	rlf	___flmul@grs+2,f
  7919  01AC  0DC7               	rlf	___flmul@grs+3,f
  7920  01AD  0B89               	decfsz	9,f
  7921  01AE  29A9               	goto	u3055
  7922  01AF  0849               	movf	___flmul@bexp,w
  7923  01B0  0748               	addwf	___flmul@aexp,w
  7924  01B1  00BE               	movwf	??___flmul
  7925  01B2  01BF               	clrf	??___flmul+1
  7926  01B3  0DBF               	rlf	??___flmul+1,f
  7927  01B4  083E               	movf	??___flmul,w
  7928  01B5  3E82               	addlw	130
  7929  01B6  00CE               	movwf	___flmul@temp
  7930  01B7  30FF               	movlw	255
  7931  01B8  3D3F               	addwfc	??___flmul+1,w
  7932  01B9  00CF               	movwf	___flmul@temp+1
  7933  01BA                     l2876:	
  7934  01BA  1BCC               	btfsc	___flmul@prod+2,7
  7935  01BB  29D1               	goto	l2878
  7936  01BC  3001               	movlw	1
  7937  01BD                     u3065:	
  7938  01BD  35CA               	lslf	___flmul@prod,f
  7939  01BE  0DCB               	rlf	___flmul@prod+1,f
  7940  01BF  0DCC               	rlf	___flmul@prod+2,f
  7941  01C0  0DCD               	rlf	___flmul@prod+3,f
  7942  01C1  0B89               	decfsz	9,f
  7943  01C2  29BD               	goto	u3065
  7944  01C3  1BC7               	btfsc	___flmul@grs+3,7
  7945  01C4  144A               	bsf	___flmul@prod,0
  7946  01C5  3001               	movlw	1
  7947  01C6                     u3085:	
  7948  01C6  35C4               	lslf	___flmul@grs,f
  7949  01C7  0DC5               	rlf	___flmul@grs+1,f
  7950  01C8  0DC6               	rlf	___flmul@grs+2,f
  7951  01C9  0DC7               	rlf	___flmul@grs+3,f
  7952  01CA  0B89               	decfsz	9,f
  7953  01CB  29C6               	goto	u3085
  7954  01CC  30FF               	movlw	255
  7955  01CD  07CE               	addwf	___flmul@temp,f
  7956  01CE  30FF               	movlw	255
  7957  01CF  3DCF               	addwfc	___flmul@temp+1,f
  7958  01D0  29BA               	goto	l2876
  7959  01D1                     l2878:	
  7960  01D1  01C8               	clrf	___flmul@aexp
  7961  01D2  1FC7               	btfss	___flmul@grs+3,7
  7962  01D3  29EA               	goto	l2888
  7963  01D4  30FF               	movlw	255
  7964  01D5  0544               	andwf	___flmul@grs,w
  7965  01D6  00BE               	movwf	??___flmul
  7966  01D7  30FF               	movlw	255
  7967  01D8  0545               	andwf	___flmul@grs+1,w
  7968  01D9  00BF               	movwf	??___flmul+1
  7969  01DA  30FF               	movlw	255
  7970  01DB  0546               	andwf	___flmul@grs+2,w
  7971  01DC  00C0               	movwf	??___flmul+2
  7972  01DD  307F               	movlw	127
  7973  01DE  0547               	andwf	___flmul@grs+3,w
  7974  01DF  00C1               	movwf	??___flmul+3
  7975  01E0  0841               	movf	??___flmul+3,w
  7976  01E1  0440               	iorwf	??___flmul+2,w
  7977  01E2  043F               	iorwf	??___flmul+1,w
  7978  01E3  043E               	iorwf	??___flmul,w
  7979  01E4  1903               	skipnz
  7980  01E5  184A               	btfsc	___flmul@prod,0
  7981  01E6  29E8               	goto	l2884
  7982  01E7  29EA               	goto	l2888
  7983  01E8                     l2884:	
  7984  01E8  01C8               	clrf	___flmul@aexp
  7985  01E9  0AC8               	incf	___flmul@aexp,f
  7986  01EA                     l2888:	
  7987  01EA  0848               	movf	___flmul@aexp,w
  7988  01EB  1903               	btfsc	3,2
  7989  01EC  2A13               	goto	l2898
  7990  01ED  3001               	movlw	1
  7991  01EE  07CA               	addwf	___flmul@prod,f
  7992  01EF  3000               	movlw	0
  7993  01F0  3DCB               	addwfc	___flmul@prod+1,f
  7994  01F1  3000               	movlw	0
  7995  01F2  3DCC               	addwfc	___flmul@prod+2,f
  7996  01F3  3000               	movlw	0
  7997  01F4  3DCD               	addwfc	___flmul@prod+3,f
  7998  01F5  1C4D               	btfss	___flmul@prod+3,0
  7999  01F6  2A13               	goto	l2898
  8000  01F7  084A               	movf	___flmul@prod,w
  8001  01F8  00BE               	movwf	??___flmul
  8002  01F9  084B               	movf	___flmul@prod+1,w
  8003  01FA  00BF               	movwf	??___flmul+1
  8004  01FB  084C               	movf	___flmul@prod+2,w
  8005  01FC  00C0               	movwf	??___flmul+2
  8006  01FD  084D               	movf	___flmul@prod+3,w
  8007  01FE  00C1               	movwf	??___flmul+3
  8008  01FF  3001               	movlw	1
  8009  0200  00C2               	movwf	??___flmul+4
  8010  0201                     u3155:	
  8011  0201  37C1               	asrf	??___flmul+3,f
  8012  0202  0CC0               	rrf	??___flmul+2,f
  8013  0203  0CBF               	rrf	??___flmul+1,f
  8014  0204  0CBE               	rrf	??___flmul,f
  8015  0205  0BC2               	decfsz	??___flmul+4,f
  8016  0206  2A01               	goto	u3155
  8017  0207  0841               	movf	??___flmul+3,w
  8018  0208  00CD               	movwf	___flmul@prod+3
  8019  0209  0840               	movf	??___flmul+2,w
  8020  020A  00CC               	movwf	___flmul@prod+2
  8021  020B  083F               	movf	??___flmul+1,w
  8022  020C  00CB               	movwf	___flmul@prod+1
  8023  020D  083E               	movf	??___flmul,w
  8024  020E  00CA               	movwf	___flmul@prod
  8025  020F  3001               	movlw	1
  8026  0210  07CE               	addwf	___flmul@temp,f
  8027  0211  3000               	movlw	0
  8028  0212  3DCF               	addwfc	___flmul@temp+1,f
  8029  0213                     l2898:	
  8030  0213  084F               	movf	___flmul@temp+1,w
  8031  0214  3A80               	xorlw	128
  8032  0215  00BE               	movwf	??___flmul
  8033  0216  3080               	movlw	128
  8034  0217  023E               	subwf	??___flmul,w
  8035  0218  1D03               	skipz
  8036  0219  2A1C               	goto	u3165
  8037  021A  30FF               	movlw	255
  8038  021B  024E               	subwf	___flmul@temp,w
  8039  021C                     u3165:	
  8040  021C  1C03               	skipc
  8041  021D  2A28               	goto	l2902
  8042  021E  307F               	movlw	127
  8043  021F  0020               	movlb	0	; select bank0
  8044  0220  00CD               	movwf	___flmul@prod+3
  8045  0221  3080               	movlw	128
  8046  0222  00CC               	movwf	___flmul@prod+2
  8047  0223  3000               	movlw	0
  8048  0224  00CB               	movwf	___flmul@prod+1
  8049  0225  3000               	movlw	0
  8050  0226  00CA               	movwf	___flmul@prod
  8051  0227  2A52               	goto	l952
  8052  0228                     l2902:	
  8053  0228  0020               	movlb	0	; select bank0
  8054  0229  084F               	movf	___flmul@temp+1,w
  8055  022A  3A80               	xorlw	128
  8056  022B  00BE               	movwf	??___flmul
  8057  022C  3080               	movlw	128
  8058  022D  023E               	subwf	??___flmul,w
  8059  022E  1D03               	skipz
  8060  022F  2A32               	goto	u3175
  8061  0230  3001               	movlw	1
  8062  0231  024E               	subwf	___flmul@temp,w
  8063  0232                     u3175:	
  8064  0232  1803               	skipnc
  8065  0233  2A3F               	goto	l2908
  8066  0234  3000               	movlw	0
  8067  0235  0020               	movlb	0	; select bank0
  8068  0236  00CD               	movwf	___flmul@prod+3
  8069  0237  3000               	movlw	0
  8070  0238  00CC               	movwf	___flmul@prod+2
  8071  0239  3000               	movlw	0
  8072  023A  00CB               	movwf	___flmul@prod+1
  8073  023B  3000               	movlw	0
  8074  023C  00CA               	movwf	___flmul@prod
  8075  023D  01C3               	clrf	___flmul@sign
  8076  023E  2A52               	goto	l952
  8077  023F                     l2908:	
  8078  023F  0020               	movlb	0	; select bank0
  8079  0240  084E               	movf	___flmul@temp,w
  8080  0241  00BE               	movwf	??___flmul
  8081  0242  083E               	movf	??___flmul,w
  8082  0243  00C9               	movwf	___flmul@bexp
  8083  0244  30FF               	movlw	255
  8084  0245  05CA               	andwf	___flmul@prod,f
  8085  0246  30FF               	movlw	255
  8086  0247  05CB               	andwf	___flmul@prod+1,f
  8087  0248  307F               	movlw	127
  8088  0249  05CC               	andwf	___flmul@prod+2,f
  8089  024A  3000               	movlw	0
  8090  024B  05CD               	andwf	___flmul@prod+3,f
  8091  024C  1849               	btfsc	___flmul@bexp,0
  8092  024D  17CC               	bsf	___flmul@prod+2,7
  8093  024E  3649               	lsrf	___flmul@bexp,w
  8094  024F  00BE               	movwf	??___flmul
  8095  0250  083E               	movf	??___flmul,w
  8096  0251  00CD               	movwf	___flmul@prod+3
  8097  0252                     l952:	
  8098  0252  0843               	movf	___flmul@sign,w
  8099  0253  00BE               	movwf	??___flmul
  8100  0254  083E               	movf	??___flmul,w
  8101  0255  04CD               	iorwf	___flmul@prod+3,f
  8102  0256  084D               	movf	___flmul@prod+3,w
  8103  0257  00B9               	movwf	?___flmul+3
  8104  0258  084C               	movf	___flmul@prod+2,w
  8105  0259  00B8               	movwf	?___flmul+2
  8106  025A  084B               	movf	___flmul@prod+1,w
  8107  025B  00B7               	movwf	?___flmul+1
  8108  025C  084A               	movf	___flmul@prod,w
  8109  025D  00B6               	movwf	?___flmul
  8110  025E  0008               	return
  8111  025F                     __end_of___flmul:	
  8112                           
  8113                           	psect	text20
  8114  0BBA                     __ptext20:	
  8115 ;; *************** function __Umul8_16 *****************
  8116 ;; Defined at:
  8117 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul8_16.c"
  8118 ;; Parameters:    Size  Location     Type
  8119 ;;  multiplier      1    wreg     unsigned char 
  8120 ;;  multiplicand    1    8[BANK0 ] unsigned char 
  8121 ;; Auto vars:     Size  Location     Type
  8122 ;;  multiplier      1   16[BANK0 ] unsigned char 
  8123 ;;  word_mpld       2   14[BANK0 ] unsigned int 
  8124 ;;  product         2   12[BANK0 ] unsigned int 
  8125 ;; Return value:  Size  Location     Type
  8126 ;;                  2    8[BANK0 ] unsigned int 
  8127 ;; Registers used:
  8128 ;;		wreg, status,2, status,0
  8129 ;; Tracked objects:
  8130 ;;		On entry : 0/0
  8131 ;;		On exit  : 0/0
  8132 ;;		Unchanged: 0/0
  8133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8134 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8135 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8136 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8137 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8138 ;;Total ram usage:        9 bytes
  8139 ;; Hardware stack levels used:    1
  8140 ;; Hardware stack levels required when called:    5
  8141 ;; This function calls:
  8142 ;;		Nothing
  8143 ;; This function is called by:
  8144 ;;		___flmul
  8145 ;; This function uses a non-reentrant model
  8146 ;;
  8147                           
  8148                           
  8149                           ;psect for function __Umul8_16
  8150  0BBA                     __Umul8_16:	
  8151                           
  8152                           ;incstack = 0
  8153                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  8154                           ;__Umul8_16@multiplier stored from wreg
  8155  0BBA  0020               	movlb	0	; select bank0
  8156  0BBB  00B0               	movwf	__Umul8_16@multiplier
  8157  0BBC  01AC               	clrf	__Umul8_16@product
  8158  0BBD  01AD               	clrf	__Umul8_16@product+1
  8159  0BBE  0828               	movf	__Umul8_16@multiplicand,w
  8160  0BBF  00AA               	movwf	??__Umul8_16
  8161  0BC0  01AB               	clrf	??__Umul8_16+1
  8162  0BC1  082A               	movf	??__Umul8_16,w
  8163  0BC2  00AE               	movwf	__Umul8_16@word_mpld
  8164  0BC3  082B               	movf	??__Umul8_16+1,w
  8165  0BC4  00AF               	movwf	__Umul8_16@word_mpld+1
  8166  0BC5                     l2652:	
  8167  0BC5  1C30               	btfss	__Umul8_16@multiplier,0
  8168  0BC6  2BCB               	goto	l1046
  8169  0BC7  082E               	movf	__Umul8_16@word_mpld,w
  8170  0BC8  07AC               	addwf	__Umul8_16@product,f
  8171  0BC9  082F               	movf	__Umul8_16@word_mpld+1,w
  8172  0BCA  3DAD               	addwfc	__Umul8_16@product+1,f
  8173  0BCB                     l1046:	
  8174  0BCB  3001               	movlw	1
  8175  0BCC                     u2745:	
  8176  0BCC  35AE               	lslf	__Umul8_16@word_mpld,f
  8177  0BCD  0DAF               	rlf	__Umul8_16@word_mpld+1,f
  8178  0BCE  0B89               	decfsz	9,f
  8179  0BCF  2BCC               	goto	u2745
  8180  0BD0  1003               	clrc
  8181  0BD1  0CB0               	rrf	__Umul8_16@multiplier,f
  8182  0BD2  0830               	movf	__Umul8_16@multiplier,w
  8183  0BD3  1D03               	btfss	3,2
  8184  0BD4  2BC5               	goto	l2652
  8185  0BD5  082D               	movf	__Umul8_16@product+1,w
  8186  0BD6  00A9               	movwf	?__Umul8_16+1
  8187  0BD7  082C               	movf	__Umul8_16@product,w
  8188  0BD8  00A8               	movwf	?__Umul8_16
  8189  0BD9  0008               	return
  8190  0BDA                     __end_of__Umul8_16:	
  8191                           
  8192                           	psect	text21
  8193  0B3D                     __ptext21:	
  8194 ;; *************** function _SYSTEM_Initialize *****************
  8195 ;; Defined at:
  8196 ;;		line 4 in file "mcc_generated_files/mcc.c"
  8197 ;; Parameters:    Size  Location     Type
  8198 ;;		None
  8199 ;; Auto vars:     Size  Location     Type
  8200 ;;		None
  8201 ;; Return value:  Size  Location     Type
  8202 ;;                  1    wreg      void 
  8203 ;; Registers used:
  8204 ;;		wreg, status,2, status,0, pclath, cstack
  8205 ;; Tracked objects:
  8206 ;;		On entry : 0/0
  8207 ;;		On exit  : 0/0
  8208 ;;		Unchanged: 0/0
  8209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8214 ;;Total ram usage:        0 bytes
  8215 ;; Hardware stack levels used:    1
  8216 ;; Hardware stack levels required when called:    7
  8217 ;; This function calls:
  8218 ;;		_ADC_Initialize
  8219 ;;		_EUSART_Initialize
  8220 ;;		_OSCILLATOR_Initialize
  8221 ;;		_PIN_MANAGER_Initialize
  8222 ;;		_TMR0_Initialize
  8223 ;; This function is called by:
  8224 ;;		_main
  8225 ;; This function uses a non-reentrant model
  8226 ;;
  8227                           
  8228                           
  8229                           ;psect for function _SYSTEM_Initialize
  8230  0B3D                     _SYSTEM_Initialize:	
  8231                           
  8232                           ;mcc_generated_files/mcc.c: 6:     PIN_MANAGER_Initialize();
  8233                           
  8234                           ;incstack = 0
  8235                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8236  0B3D  318C  2485  318B   	fcall	_PIN_MANAGER_Initialize
  8237                           
  8238                           ;mcc_generated_files/mcc.c: 7:     OSCILLATOR_Initialize();
  8239  0B40  318A  22D5  318B   	fcall	_OSCILLATOR_Initialize
  8240                           
  8241                           ;mcc_generated_files/mcc.c: 8:     ADC_Initialize();
  8242  0B43  318A  22DC  318B   	fcall	_ADC_Initialize
  8243                           
  8244                           ;mcc_generated_files/mcc.c: 9:     TMR0_Initialize();
  8245  0B46  318B  235E  318B   	fcall	_TMR0_Initialize
  8246                           
  8247                           ;mcc_generated_files/mcc.c: 10:     EUSART_Initialize();
  8248  0B49  318B  23DA         	fcall	_EUSART_Initialize
  8249  0B4B  0008               	return
  8250  0B4C                     __end_of_SYSTEM_Initialize:	
  8251                           
  8252                           	psect	text22
  8253  0B5E                     __ptext22:	
  8254 ;; *************** function _TMR0_Initialize *****************
  8255 ;; Defined at:
  8256 ;;		line 18 in file "mcc_generated_files/tmr0.c"
  8257 ;; Parameters:    Size  Location     Type
  8258 ;;		None
  8259 ;; Auto vars:     Size  Location     Type
  8260 ;;		None
  8261 ;; Return value:  Size  Location     Type
  8262 ;;                  1    wreg      void 
  8263 ;; Registers used:
  8264 ;;		wreg, status,2, status,0, pclath, cstack
  8265 ;; Tracked objects:
  8266 ;;		On entry : 0/0
  8267 ;;		On exit  : 0/0
  8268 ;;		Unchanged: 0/0
  8269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8272 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8273 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8274 ;;Total ram usage:        1 bytes
  8275 ;; Hardware stack levels used:    1
  8276 ;; Hardware stack levels required when called:    6
  8277 ;; This function calls:
  8278 ;;		_TMR0_SetInterruptHandler
  8279 ;; This function is called by:
  8280 ;;		_SYSTEM_Initialize
  8281 ;; This function uses a non-reentrant model
  8282 ;;
  8283                           
  8284                           
  8285                           ;psect for function _TMR0_Initialize
  8286  0B5E                     _TMR0_Initialize:	
  8287                           
  8288                           ;mcc_generated_files/tmr0.c: 23:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD1 
      +                          & 0x3F));
  8289                           
  8290                           ;incstack = 0
  8291                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8292  0B5E  0021               	movlb	1	; select bank1
  8293  0B5F  0815               	movf	21,w	;volatile
  8294  0B60  39C0               	andlw	192
  8295  0B61  3811               	iorlw	17
  8296  0B62  0095               	movwf	21	;volatile
  8297                           
  8298                           ;mcc_generated_files/tmr0.c: 26:     TMR0 = 0xE1;
  8299  0B63  30E1               	movlw	225
  8300  0B64  0020               	movlb	0	; select bank0
  8301  0B65  0095               	movwf	21	;volatile
  8302                           
  8303                           ;mcc_generated_files/tmr0.c: 29:     timer0ReloadVal= 225;
  8304  0B66  30E1               	movlw	225
  8305  0B67  00AA               	movwf	??_TMR0_Initialize
  8306  0B68  082A               	movf	??_TMR0_Initialize,w
  8307  0B69  00E7               	movwf	_timer0ReloadVal	;volatile
  8308                           
  8309                           ;mcc_generated_files/tmr0.c: 32:     INTCONbits.TMR0IF = 0;
  8310  0B6A  110B               	bcf	11,2	;volatile
  8311                           
  8312                           ;mcc_generated_files/tmr0.c: 35:     INTCONbits.TMR0IE = 1;
  8313  0B6B  168B               	bsf	11,5	;volatile
  8314                           
  8315                           ;mcc_generated_files/tmr0.c: 38:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  8316  0B6C  30FD               	movlw	low _TMR0_DefaultInterruptHandler
  8317  0B6D  00A8               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  8318  0B6E  3007               	movlw	high _TMR0_DefaultInterruptHandler
  8319  0B6F  00A9               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  8320  0B70  318B  2318         	fcall	_TMR0_SetInterruptHandler
  8321  0B72  0008               	return
  8322  0B73                     __end_of_TMR0_Initialize:	
  8323                           
  8324                           	psect	text23
  8325  0B18                     __ptext23:	
  8326 ;; *************** function _TMR0_SetInterruptHandler *****************
  8327 ;; Defined at:
  8328 ;;		line 79 in file "mcc_generated_files/tmr0.c"
  8329 ;; Parameters:    Size  Location     Type
  8330 ;;  InterruptHan    2    8[BANK0 ] PTR FTN()void 
  8331 ;;		 -> timerISR(1), TMR0_DefaultInterruptHandler(1), 
  8332 ;; Auto vars:     Size  Location     Type
  8333 ;;		None
  8334 ;; Return value:  Size  Location     Type
  8335 ;;                  1    wreg      void 
  8336 ;; Registers used:
  8337 ;;		wreg
  8338 ;; Tracked objects:
  8339 ;;		On entry : 0/0
  8340 ;;		On exit  : 0/0
  8341 ;;		Unchanged: 0/0
  8342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8343 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8346 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8347 ;;Total ram usage:        2 bytes
  8348 ;; Hardware stack levels used:    1
  8349 ;; Hardware stack levels required when called:    5
  8350 ;; This function calls:
  8351 ;;		Nothing
  8352 ;; This function is called by:
  8353 ;;		_TMR0_Initialize
  8354 ;;		_main
  8355 ;; This function uses a non-reentrant model
  8356 ;;
  8357                           
  8358                           
  8359                           ;psect for function _TMR0_SetInterruptHandler
  8360  0B18                     _TMR0_SetInterruptHandler:	
  8361                           
  8362                           ;mcc_generated_files/tmr0.c: 80:     TMR0_InterruptHandler = InterruptHandler;
  8363                           
  8364                           ;incstack = 0
  8365                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  8366  0B18  0020               	movlb	0	; select bank0
  8367  0B19  0829               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  8368  0B1A  0021               	movlb	1	; select bank1
  8369  0B1B  00EB               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
  8370  0B1C  0020               	movlb	0	; select bank0
  8371  0B1D  0828               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  8372  0B1E  0021               	movlb	1	; select bank1
  8373  0B1F  00EA               	movwf	_TMR0_InterruptHandler^(0+128)
  8374  0B20  0008               	return
  8375  0B21                     __end_of_TMR0_SetInterruptHandler:	
  8376                           
  8377                           	psect	text24
  8378  0C85                     __ptext24:	
  8379 ;; *************** function _PIN_MANAGER_Initialize *****************
  8380 ;; Defined at:
  8381 ;;		line 6 in file "mcc_generated_files/pin_manager.c"
  8382 ;; Parameters:    Size  Location     Type
  8383 ;;		None
  8384 ;; Auto vars:     Size  Location     Type
  8385 ;;		None
  8386 ;; Return value:  Size  Location     Type
  8387 ;;                  1    wreg      void 
  8388 ;; Registers used:
  8389 ;;		wreg, status,2, status,0, pclath, cstack
  8390 ;; Tracked objects:
  8391 ;;		On entry : 0/0
  8392 ;;		On exit  : 0/0
  8393 ;;		Unchanged: 0/0
  8394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8398 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8399 ;;Total ram usage:        0 bytes
  8400 ;; Hardware stack levels used:    1
  8401 ;; Hardware stack levels required when called:    6
  8402 ;; This function calls:
  8403 ;;		_IOCCF7_SetInterruptHandler
  8404 ;; This function is called by:
  8405 ;;		_SYSTEM_Initialize
  8406 ;; This function uses a non-reentrant model
  8407 ;;
  8408                           
  8409                           
  8410                           ;psect for function _PIN_MANAGER_Initialize
  8411  0C85                     _PIN_MANAGER_Initialize:	
  8412                           
  8413                           ;mcc_generated_files/pin_manager.c: 11:     LATA = 0x00;
  8414                           
  8415                           ;incstack = 0
  8416                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8417  0C85  0022               	movlb	2	; select bank2
  8418  0C86  018C               	clrf	12	;volatile
  8419                           
  8420                           ;mcc_generated_files/pin_manager.c: 12:     LATB = 0x00;
  8421  0C87  018D               	clrf	13	;volatile
  8422                           
  8423                           ;mcc_generated_files/pin_manager.c: 13:     LATC = 0x00;
  8424  0C88  018E               	clrf	14	;volatile
  8425                           
  8426                           ;mcc_generated_files/pin_manager.c: 18:     TRISA = 0x37;
  8427  0C89  3037               	movlw	55
  8428  0C8A  0021               	movlb	1	; select bank1
  8429  0C8B  008C               	movwf	12	;volatile
  8430                           
  8431                           ;mcc_generated_files/pin_manager.c: 19:     TRISB = 0x70;
  8432  0C8C  3070               	movlw	112
  8433  0C8D  008D               	movwf	13	;volatile
  8434                           
  8435                           ;mcc_generated_files/pin_manager.c: 20:     TRISC = 0xFF;
  8436  0C8E  30FF               	movlw	255
  8437  0C8F  008E               	movwf	14	;volatile
  8438                           
  8439                           ;mcc_generated_files/pin_manager.c: 25:     ANSELC = 0x4F;
  8440  0C90  304F               	movlw	79
  8441  0C91  0023               	movlb	3	; select bank3
  8442  0C92  008E               	movwf	14	;volatile
  8443                           
  8444                           ;mcc_generated_files/pin_manager.c: 26:     ANSELB = 0x70;
  8445  0C93  3070               	movlw	112
  8446  0C94  008D               	movwf	13	;volatile
  8447                           
  8448                           ;mcc_generated_files/pin_manager.c: 27:     ANSELA = 0x17;
  8449  0C95  3017               	movlw	23
  8450  0C96  008C               	movwf	12	;volatile
  8451                           
  8452                           ;mcc_generated_files/pin_manager.c: 32:     WPUB = 0x00;
  8453  0C97  0024               	movlb	4	; select bank4
  8454  0C98  018D               	clrf	13	;volatile
  8455                           
  8456                           ;mcc_generated_files/pin_manager.c: 33:     WPUA = 0x00;
  8457  0C99  018C               	clrf	12	;volatile
  8458                           
  8459                           ;mcc_generated_files/pin_manager.c: 35:     WPUC = 0x80;
  8460  0C9A  3080               	movlw	128
  8461  0C9B  008E               	movwf	14	;volatile
  8462                           
  8463                           ;mcc_generated_files/pin_manager.c: 36:     OPTION_REGbits.nWPUEN = 0;
  8464  0C9C  0021               	movlb	1	; select bank1
  8465  0C9D  1395               	bcf	21,7	;volatile
  8466                           
  8467                           ;mcc_generated_files/pin_manager.c: 41:     ODCONA = 0x00;
  8468  0C9E  0025               	movlb	5	; select bank5
  8469  0C9F  018C               	clrf	12	;volatile
  8470                           
  8471                           ;mcc_generated_files/pin_manager.c: 42:     ODCONB = 0x00;
  8472  0CA0  018D               	clrf	13	;volatile
  8473                           
  8474                           ;mcc_generated_files/pin_manager.c: 43:     ODCONC = 0x00;
  8475  0CA1  018E               	clrf	14	;volatile
  8476                           
  8477                           ;mcc_generated_files/pin_manager.c: 48:     SLRCONA = 0x37;
  8478  0CA2  3037               	movlw	55
  8479  0CA3  0026               	movlb	6	; select bank6
  8480  0CA4  008C               	movwf	12	;volatile
  8481                           
  8482                           ;mcc_generated_files/pin_manager.c: 49:     SLRCONB = 0xF0;
  8483  0CA5  30F0               	movlw	240
  8484  0CA6  008D               	movwf	13	;volatile
  8485                           
  8486                           ;mcc_generated_files/pin_manager.c: 50:     SLRCONC = 0xFF;
  8487  0CA7  30FF               	movlw	255
  8488  0CA8  008E               	movwf	14	;volatile
  8489                           
  8490                           ;mcc_generated_files/pin_manager.c: 57:     IOCCFbits.IOCCF7 = 0;
  8491  0CA9  0027               	movlb	7	; select bank7
  8492  0CAA  1399               	bcf	25,7	;volatile
  8493                           
  8494                           ;mcc_generated_files/pin_manager.c: 59:     IOCCNbits.IOCCN7 = 0;
  8495  0CAB  1398               	bcf	24,7	;volatile
  8496                           
  8497                           ;mcc_generated_files/pin_manager.c: 61:     IOCCPbits.IOCCP7 = 1;
  8498  0CAC  1797               	bsf	23,7	;volatile
  8499                           
  8500                           ;mcc_generated_files/pin_manager.c: 64:     SLRC7 = 0;
  8501  0CAD  0026               	movlb	6	; select bank6
  8502  0CAE  138E               	bcf	14,7	;volatile
  8503                           
  8504                           ;mcc_generated_files/pin_manager.c: 67:     INLVLC7 = 1 ;
  8505  0CAF  0027               	movlb	7	; select bank7
  8506  0CB0  178E               	bsf	14,7	;volatile
  8507                           
  8508                           ;mcc_generated_files/pin_manager.c: 70:     IOCCF7_SetInterruptHandler(IOCCF7_DefaultInt
      +                          erruptHandler);
  8509  0CB1  30FE               	movlw	low _IOCCF7_DefaultInterruptHandler
  8510  0CB2  0020               	movlb	0	; select bank0
  8511  0CB3  00A8               	movwf	IOCCF7_SetInterruptHandler@InterruptHandler
  8512  0CB4  3007               	movlw	high _IOCCF7_DefaultInterruptHandler
  8513  0CB5  00A9               	movwf	IOCCF7_SetInterruptHandler@InterruptHandler+1
  8514  0CB6  318B  230F         	fcall	_IOCCF7_SetInterruptHandler
  8515                           
  8516                           ;mcc_generated_files/pin_manager.c: 73:     INTCONbits.IOCIE = 1;
  8517  0CB8  158B               	bsf	11,3	;volatile
  8518                           
  8519                           ;mcc_generated_files/pin_manager.c: 76:     RB7PPS = 0x12;
  8520  0CB9  3012               	movlw	18
  8521  0CBA  003D               	movlb	29	; select bank29
  8522  0CBB  009F               	movwf	31	;volatile
  8523  0CBC  0008               	return
  8524  0CBD                     __end_of_PIN_MANAGER_Initialize:	
  8525                           
  8526                           	psect	text25
  8527  0B0F                     __ptext25:	
  8528 ;; *************** function _IOCCF7_SetInterruptHandler *****************
  8529 ;; Defined at:
  8530 ;;		line 106 in file "mcc_generated_files/pin_manager.c"
  8531 ;; Parameters:    Size  Location     Type
  8532 ;;  InterruptHan    2    8[BANK0 ] PTR FTN()void 
  8533 ;;		 -> speedCalc(1), IOCCF7_DefaultInterruptHandler(1), 
  8534 ;; Auto vars:     Size  Location     Type
  8535 ;;		None
  8536 ;; Return value:  Size  Location     Type
  8537 ;;                  1    wreg      void 
  8538 ;; Registers used:
  8539 ;;		wreg
  8540 ;; Tracked objects:
  8541 ;;		On entry : 0/0
  8542 ;;		On exit  : 0/0
  8543 ;;		Unchanged: 0/0
  8544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8545 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8548 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8549 ;;Total ram usage:        2 bytes
  8550 ;; Hardware stack levels used:    1
  8551 ;; Hardware stack levels required when called:    5
  8552 ;; This function calls:
  8553 ;;		Nothing
  8554 ;; This function is called by:
  8555 ;;		_PIN_MANAGER_Initialize
  8556 ;;		_main
  8557 ;; This function uses a non-reentrant model
  8558 ;;
  8559                           
  8560                           
  8561                           ;psect for function _IOCCF7_SetInterruptHandler
  8562  0B0F                     _IOCCF7_SetInterruptHandler:	
  8563                           
  8564                           ;mcc_generated_files/pin_manager.c: 107:     IOCCF7_InterruptHandler = InterruptHandler;
  8565                           
  8566                           ;incstack = 0
  8567                           ; Regs used in _IOCCF7_SetInterruptHandler: [wreg]
  8568  0B0F  0020               	movlb	0	; select bank0
  8569  0B10  0829               	movf	IOCCF7_SetInterruptHandler@InterruptHandler+1,w
  8570  0B11  0021               	movlb	1	; select bank1
  8571  0B12  00ED               	movwf	(_IOCCF7_InterruptHandler+1)^(0+128)
  8572  0B13  0020               	movlb	0	; select bank0
  8573  0B14  0828               	movf	IOCCF7_SetInterruptHandler@InterruptHandler,w
  8574  0B15  0021               	movlb	1	; select bank1
  8575  0B16  00EC               	movwf	_IOCCF7_InterruptHandler^(0+128)
  8576  0B17  0008               	return
  8577  0B18                     __end_of_IOCCF7_SetInterruptHandler:	
  8578                           
  8579                           	psect	text26
  8580  0AD5                     __ptext26:	
  8581 ;; *************** function _OSCILLATOR_Initialize *****************
  8582 ;; Defined at:
  8583 ;;		line 13 in file "mcc_generated_files/mcc.c"
  8584 ;; Parameters:    Size  Location     Type
  8585 ;;		None
  8586 ;; Auto vars:     Size  Location     Type
  8587 ;;		None
  8588 ;; Return value:  Size  Location     Type
  8589 ;;                  1    wreg      void 
  8590 ;; Registers used:
  8591 ;;		wreg, status,2
  8592 ;; Tracked objects:
  8593 ;;		On entry : 0/0
  8594 ;;		On exit  : 0/0
  8595 ;;		Unchanged: 0/0
  8596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8601 ;;Total ram usage:        0 bytes
  8602 ;; Hardware stack levels used:    1
  8603 ;; Hardware stack levels required when called:    5
  8604 ;; This function calls:
  8605 ;;		Nothing
  8606 ;; This function is called by:
  8607 ;;		_SYSTEM_Initialize
  8608 ;; This function uses a non-reentrant model
  8609 ;;
  8610                           
  8611                           
  8612                           ;psect for function _OSCILLATOR_Initialize
  8613  0AD5                     _OSCILLATOR_Initialize:	
  8614                           
  8615                           ;mcc_generated_files/mcc.c: 16:     OSCCON = 0x3A;
  8616                           
  8617                           ;incstack = 0
  8618                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  8619  0AD5  303A               	movlw	58
  8620  0AD6  0021               	movlb	1	; select bank1
  8621  0AD7  0099               	movwf	25	;volatile
  8622                           
  8623                           ;mcc_generated_files/mcc.c: 18:     OSCTUNE = 0x00;
  8624  0AD8  0198               	clrf	24	;volatile
  8625                           
  8626                           ;mcc_generated_files/mcc.c: 20:     BORCON = 0x00;
  8627  0AD9  0022               	movlb	2	; select bank2
  8628  0ADA  0196               	clrf	22	;volatile
  8629  0ADB  0008               	return
  8630  0ADC                     __end_of_OSCILLATOR_Initialize:	
  8631                           
  8632                           	psect	text27
  8633  0BDA                     __ptext27:	
  8634 ;; *************** function _EUSART_Initialize *****************
  8635 ;; Defined at:
  8636 ;;		line 65 in file "mcc_generated_files/eusart.c"
  8637 ;; Parameters:    Size  Location     Type
  8638 ;;		None
  8639 ;; Auto vars:     Size  Location     Type
  8640 ;;		None
  8641 ;; Return value:  Size  Location     Type
  8642 ;;                  1    wreg      void 
  8643 ;; Registers used:
  8644 ;;		wreg, status,2, status,0, pclath, cstack
  8645 ;; Tracked objects:
  8646 ;;		On entry : 0/0
  8647 ;;		On exit  : 0/0
  8648 ;;		Unchanged: 0/0
  8649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8654 ;;Total ram usage:        0 bytes
  8655 ;; Hardware stack levels used:    1
  8656 ;; Hardware stack levels required when called:    6
  8657 ;; This function calls:
  8658 ;;		_EUSART_SetErrorHandler
  8659 ;;		_EUSART_SetFramingErrorHandler
  8660 ;;		_EUSART_SetOverrunErrorHandler
  8661 ;; This function is called by:
  8662 ;;		_SYSTEM_Initialize
  8663 ;; This function uses a non-reentrant model
  8664 ;;
  8665                           
  8666                           
  8667                           ;psect for function _EUSART_Initialize
  8668  0BDA                     _EUSART_Initialize:	
  8669                           
  8670                           ;mcc_generated_files/eusart.c: 70:     BAUD1CON = 0x08;
  8671                           
  8672                           ;incstack = 0
  8673                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8674  0BDA  3008               	movlw	8
  8675  0BDB  0023               	movlb	3	; select bank3
  8676  0BDC  009F               	movwf	31	;volatile
  8677                           
  8678                           ;mcc_generated_files/eusart.c: 73:     RC1STA = 0x80;
  8679  0BDD  3080               	movlw	128
  8680  0BDE  009D               	movwf	29	;volatile
  8681                           
  8682                           ;mcc_generated_files/eusart.c: 76:     TX1STA = 0x24;
  8683  0BDF  3024               	movlw	36
  8684  0BE0  009E               	movwf	30	;volatile
  8685                           
  8686                           ;mcc_generated_files/eusart.c: 79:     SPBRGL = 0x0C;
  8687  0BE1  300C               	movlw	12
  8688  0BE2  009B               	movwf	27	;volatile
  8689                           
  8690                           ;mcc_generated_files/eusart.c: 82:     SPBRGH = 0x00;
  8691  0BE3  019C               	clrf	28	;volatile
  8692                           
  8693                           ;mcc_generated_files/eusart.c: 85:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  8694  0BE4  3000               	movlw	0
  8695  0BE5  0020               	movlb	0	; select bank0
  8696  0BE6  00A8               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  8697  0BE7  3000               	movlw	0
  8698  0BE8  00A9               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  8699  0BE9  318A  22FD  318B   	fcall	_EUSART_SetFramingErrorHandler
  8700                           
  8701                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  8702  0BEC  3000               	movlw	0
  8703  0BED  0020               	movlb	0	; select bank0
  8704  0BEE  00A8               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  8705  0BEF  3000               	movlw	0
  8706  0BF0  00A9               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  8707  0BF1  318B  2306  318B   	fcall	_EUSART_SetOverrunErrorHandler
  8708                           
  8709                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  8710  0BF4  3000               	movlw	0
  8711  0BF5  0020               	movlb	0	; select bank0
  8712  0BF6  00A8               	movwf	EUSART_SetErrorHandler@interruptHandler
  8713  0BF7  3000               	movlw	0
  8714  0BF8  00A9               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  8715  0BF9  318A  22F4         	fcall	_EUSART_SetErrorHandler
  8716                           
  8717                           ;mcc_generated_files/eusart.c: 89:     eusartRxLastError.status = 0;
  8718  0BFB  0020               	movlb	0	; select bank0
  8719  0BFC  01E6               	clrf	_eusartRxLastError	;volatile
  8720  0BFD  0008               	return
  8721  0BFE                     __end_of_EUSART_Initialize:	
  8722                           
  8723                           	psect	text28
  8724  0B06                     __ptext28:	
  8725 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  8726 ;; Defined at:
  8727 ;;		line 175 in file "mcc_generated_files/eusart.c"
  8728 ;; Parameters:    Size  Location     Type
  8729 ;;  interruptHan    2    8[BANK0 ] PTR FTN()void 
  8730 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  8731 ;; Auto vars:     Size  Location     Type
  8732 ;;		None
  8733 ;; Return value:  Size  Location     Type
  8734 ;;                  1    wreg      void 
  8735 ;; Registers used:
  8736 ;;		wreg
  8737 ;; Tracked objects:
  8738 ;;		On entry : 0/0
  8739 ;;		On exit  : 0/0
  8740 ;;		Unchanged: 0/0
  8741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8742 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8745 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8746 ;;Total ram usage:        2 bytes
  8747 ;; Hardware stack levels used:    1
  8748 ;; Hardware stack levels required when called:    5
  8749 ;; This function calls:
  8750 ;;		Nothing
  8751 ;; This function is called by:
  8752 ;;		_EUSART_Initialize
  8753 ;; This function uses a non-reentrant model
  8754 ;;
  8755                           
  8756                           
  8757                           ;psect for function _EUSART_SetOverrunErrorHandler
  8758  0B06                     _EUSART_SetOverrunErrorHandler:	
  8759                           
  8760                           ;mcc_generated_files/eusart.c: 176:     EUSART_OverrunErrorHandler = interruptHandler;
  8761                           
  8762                           ;incstack = 0
  8763                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  8764  0B06  0020               	movlb	0	; select bank0
  8765  0B07  0829               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  8766  0B08  0022               	movlb	2	; select bank2
  8767  0B09  00D7               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+256)
  8768  0B0A  0020               	movlb	0	; select bank0
  8769  0B0B  0828               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  8770  0B0C  0022               	movlb	2	; select bank2
  8771  0B0D  00D6               	movwf	_EUSART_OverrunErrorHandler^(0+256)
  8772  0B0E  0008               	return
  8773  0B0F                     __end_of_EUSART_SetOverrunErrorHandler:	
  8774                           
  8775                           	psect	text29
  8776  0AFD                     __ptext29:	
  8777 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  8778 ;; Defined at:
  8779 ;;		line 171 in file "mcc_generated_files/eusart.c"
  8780 ;; Parameters:    Size  Location     Type
  8781 ;;  interruptHan    2    8[BANK0 ] PTR FTN()void 
  8782 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  8783 ;; Auto vars:     Size  Location     Type
  8784 ;;		None
  8785 ;; Return value:  Size  Location     Type
  8786 ;;                  1    wreg      void 
  8787 ;; Registers used:
  8788 ;;		wreg
  8789 ;; Tracked objects:
  8790 ;;		On entry : 0/0
  8791 ;;		On exit  : 0/0
  8792 ;;		Unchanged: 0/0
  8793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8794 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8797 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8798 ;;Total ram usage:        2 bytes
  8799 ;; Hardware stack levels used:    1
  8800 ;; Hardware stack levels required when called:    5
  8801 ;; This function calls:
  8802 ;;		Nothing
  8803 ;; This function is called by:
  8804 ;;		_EUSART_Initialize
  8805 ;; This function uses a non-reentrant model
  8806 ;;
  8807                           
  8808                           
  8809                           ;psect for function _EUSART_SetFramingErrorHandler
  8810  0AFD                     _EUSART_SetFramingErrorHandler:	
  8811                           
  8812                           ;mcc_generated_files/eusart.c: 172:     EUSART_FramingErrorHandler = interruptHandler;
  8813                           
  8814                           ;incstack = 0
  8815                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  8816  0AFD  0020               	movlb	0	; select bank0
  8817  0AFE  0829               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  8818  0AFF  0021               	movlb	1	; select bank1
  8819  0B00  00EF               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
  8820  0B01  0020               	movlb	0	; select bank0
  8821  0B02  0828               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  8822  0B03  0021               	movlb	1	; select bank1
  8823  0B04  00EE               	movwf	_EUSART_FramingErrorHandler^(0+128)
  8824  0B05  0008               	return
  8825  0B06                     __end_of_EUSART_SetFramingErrorHandler:	
  8826                           
  8827                           	psect	text30
  8828  0AF4                     __ptext30:	
  8829 ;; *************** function _EUSART_SetErrorHandler *****************
  8830 ;; Defined at:
  8831 ;;		line 179 in file "mcc_generated_files/eusart.c"
  8832 ;; Parameters:    Size  Location     Type
  8833 ;;  interruptHan    2    8[BANK0 ] PTR FTN()void 
  8834 ;;		 -> EUSART_DefaultErrorHandler(1), 
  8835 ;; Auto vars:     Size  Location     Type
  8836 ;;		None
  8837 ;; Return value:  Size  Location     Type
  8838 ;;                  1    wreg      void 
  8839 ;; Registers used:
  8840 ;;		wreg
  8841 ;; Tracked objects:
  8842 ;;		On entry : 0/0
  8843 ;;		On exit  : 0/0
  8844 ;;		Unchanged: 0/0
  8845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8846 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8849 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8850 ;;Total ram usage:        2 bytes
  8851 ;; Hardware stack levels used:    1
  8852 ;; Hardware stack levels required when called:    5
  8853 ;; This function calls:
  8854 ;;		Nothing
  8855 ;; This function is called by:
  8856 ;;		_EUSART_Initialize
  8857 ;; This function uses a non-reentrant model
  8858 ;;
  8859                           
  8860                           
  8861                           ;psect for function _EUSART_SetErrorHandler
  8862  0AF4                     _EUSART_SetErrorHandler:	
  8863                           
  8864                           ;mcc_generated_files/eusart.c: 180:     EUSART_ErrorHandler = interruptHandler;
  8865                           
  8866                           ;incstack = 0
  8867                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  8868  0AF4  0020               	movlb	0	; select bank0
  8869  0AF5  0829               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  8870  0AF6  0022               	movlb	2	; select bank2
  8871  0AF7  00D5               	movwf	(_EUSART_ErrorHandler+1)^(0+256)
  8872  0AF8  0020               	movlb	0	; select bank0
  8873  0AF9  0828               	movf	EUSART_SetErrorHandler@interruptHandler,w
  8874  0AFA  0022               	movlb	2	; select bank2
  8875  0AFB  00D4               	movwf	_EUSART_ErrorHandler^(0+256)
  8876  0AFC  0008               	return
  8877  0AFD                     __end_of_EUSART_SetErrorHandler:	
  8878                           
  8879                           	psect	text31
  8880  0ADC                     __ptext31:	
  8881 ;; *************** function _ADC_Initialize *****************
  8882 ;; Defined at:
  8883 ;;		line 65 in file "mcc_generated_files/adc.c"
  8884 ;; Parameters:    Size  Location     Type
  8885 ;;		None
  8886 ;; Auto vars:     Size  Location     Type
  8887 ;;		None
  8888 ;; Return value:  Size  Location     Type
  8889 ;;                  1    wreg      void 
  8890 ;; Registers used:
  8891 ;;		wreg, status,2
  8892 ;; Tracked objects:
  8893 ;;		On entry : 0/0
  8894 ;;		On exit  : 0/0
  8895 ;;		Unchanged: 0/0
  8896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8901 ;;Total ram usage:        0 bytes
  8902 ;; Hardware stack levels used:    1
  8903 ;; Hardware stack levels required when called:    5
  8904 ;; This function calls:
  8905 ;;		Nothing
  8906 ;; This function is called by:
  8907 ;;		_SYSTEM_Initialize
  8908 ;; This function uses a non-reentrant model
  8909 ;;
  8910                           
  8911                           
  8912                           ;psect for function _ADC_Initialize
  8913  0ADC                     _ADC_Initialize:	
  8914                           
  8915                           ;mcc_generated_files/adc.c: 70:     ADCON0 = 0x01;
  8916                           
  8917                           ;incstack = 0
  8918                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  8919  0ADC  3001               	movlw	1
  8920  0ADD  0021               	movlb	1	; select bank1
  8921  0ADE  009D               	movwf	29	;volatile
  8922                           
  8923                           ;mcc_generated_files/adc.c: 73:     ADCON1 = 0x00;
  8924  0ADF  019E               	clrf	30	;volatile
  8925                           
  8926                           ;mcc_generated_files/adc.c: 76:     ADCON2 = 0x00;
  8927  0AE0  019F               	clrf	31	;volatile
  8928                           
  8929                           ;mcc_generated_files/adc.c: 79:     ADRESL = 0x00;
  8930  0AE1  019B               	clrf	27	;volatile
  8931                           
  8932                           ;mcc_generated_files/adc.c: 82:     ADRESH = 0x00;
  8933  0AE2  019C               	clrf	28	;volatile
  8934  0AE3  0008               	return
  8935  0AE4                     __end_of_ADC_Initialize:	
  8936                           
  8937                           	psect	intentry
  8938  0004                     __pintentry:	
  8939 ;; *************** function _INTERRUPT_InterruptManager *****************
  8940 ;; Defined at:
  8941 ;;		line 4 in file "mcc_generated_files/interrupt_manager.c"
  8942 ;; Parameters:    Size  Location     Type
  8943 ;;		None
  8944 ;; Auto vars:     Size  Location     Type
  8945 ;;		None
  8946 ;; Return value:  Size  Location     Type
  8947 ;;                  1    wreg      void 
  8948 ;; Registers used:
  8949 ;;		wreg, status,2, status,0, pclath, cstack
  8950 ;; Tracked objects:
  8951 ;;		On entry : 0/0
  8952 ;;		On exit  : 0/0
  8953 ;;		Unchanged: 0/0
  8954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8959 ;;Total ram usage:        0 bytes
  8960 ;; Hardware stack levels used:    1
  8961 ;; Hardware stack levels required when called:    4
  8962 ;; This function calls:
  8963 ;;		_PIN_MANAGER_IOC
  8964 ;;		_TMR0_ISR
  8965 ;; This function is called by:
  8966 ;;		Interrupt level 1
  8967 ;; This function uses a non-reentrant model
  8968 ;;
  8969                           
  8970  0004                     _INTERRUPT_InterruptManager:	
  8971                           
  8972                           ;incstack = 0
  8973  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  8974                           
  8975                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  8976  0005  3180               	pagesel	$
  8977                           
  8978                           ;mcc_generated_files/interrupt_manager.c: 7:     if(INTCONbits.TMR0IE == 1 && INTCONbits
      +                          .TMR0IF == 1)
  8979  0006  1A8B               	btfsc	11,5	;volatile
  8980  0007  1D0B               	btfss	11,2	;volatile
  8981  0008  280D               	goto	i1l242
  8982                           
  8983                           ;mcc_generated_files/interrupt_manager.c: 8:     {;mcc_generated_files/interrupt_manager
      +                          .c: 9:         TMR0_ISR();
  8984  0009  318B  232E  3180   	fcall	_TMR0_ISR
  8985                           
  8986                           ;mcc_generated_files/interrupt_manager.c: 10:     }
  8987  000C  2812               	goto	i1l246
  8988  000D                     i1l242:	
  8989                           ;mcc_generated_files/interrupt_manager.c: 11:     else if(INTCONbits.IOCIE == 1 && INTCO
      +                          Nbits.IOCIF == 1)
  8990                           
  8991  000D  198B               	btfsc	11,3	;volatile
  8992  000E  1C0B               	btfss	11,0	;volatile
  8993  000F  2812               	goto	i1l246
  8994                           
  8995                           ;mcc_generated_files/interrupt_manager.c: 12:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 13:         PIN_MANAGER_IOC();
  8996  0010  318A  22C3         	fcall	_PIN_MANAGER_IOC
  8997  0012                     i1l246:	
  8998                           ;mcc_generated_files/interrupt_manager.c: 14:     }
  8999                           
  9000  0012  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  9001  0013  0009               	retfie
  9002  0014                     __end_of_INTERRUPT_InterruptManager:	
  9003                           
  9004                           	psect	text33
  9005  0B2E                     __ptext33:	
  9006 ;; *************** function _TMR0_ISR *****************
  9007 ;; Defined at:
  9008 ;;		line 62 in file "mcc_generated_files/tmr0.c"
  9009 ;; Parameters:    Size  Location     Type
  9010 ;;		None
  9011 ;; Auto vars:     Size  Location     Type
  9012 ;;		None
  9013 ;; Return value:  Size  Location     Type
  9014 ;;                  1    wreg      void 
  9015 ;; Registers used:
  9016 ;;		wreg, status,2, status,0, pclath, cstack
  9017 ;; Tracked objects:
  9018 ;;		On entry : 0/0
  9019 ;;		On exit  : 0/0
  9020 ;;		Unchanged: 0/0
  9021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9026 ;;Total ram usage:        0 bytes
  9027 ;; Hardware stack levels used:    1
  9028 ;; Hardware stack levels required when called:    1
  9029 ;; This function calls:
  9030 ;;		Absolute function
  9031 ;;		_TMR0_DefaultInterruptHandler
  9032 ;;		_timerISR
  9033 ;; This function is called by:
  9034 ;;		_INTERRUPT_InterruptManager
  9035 ;; This function uses a non-reentrant model
  9036 ;;
  9037                           
  9038                           
  9039                           ;psect for function _TMR0_ISR
  9040  0B2E                     _TMR0_ISR:	
  9041                           
  9042                           ;mcc_generated_files/tmr0.c: 66:     INTCONbits.TMR0IF = 0;
  9043                           
  9044                           ;incstack = 0
  9045                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  9046  0B2E  110B               	bcf	11,2	;volatile
  9047                           
  9048                           ;mcc_generated_files/tmr0.c: 68:     TMR0 = timer0ReloadVal;
  9049  0B2F  0020               	movlb	0	; select bank0
  9050  0B30  0867               	movf	_timer0ReloadVal,w	;volatile
  9051  0B31  0095               	movwf	21	;volatile
  9052                           
  9053                           ;mcc_generated_files/tmr0.c: 70:     if(TMR0_InterruptHandler)
  9054  0B32  0021               	movlb	1	; select bank1
  9055  0B33  086A               	movf	_TMR0_InterruptHandler^(0+128),w
  9056  0B34  046B               	iorwf	(_TMR0_InterruptHandler+1)^(0+128),w
  9057  0B35  1903               	btfsc	3,2
  9058  0B36  0008               	return
  9059                           
  9060                           ;mcc_generated_files/tmr0.c: 71:     {;mcc_generated_files/tmr0.c: 72:         TMR0_Inte
      +                          rruptHandler();
  9061  0B37  086B               	movf	(_TMR0_InterruptHandler+1)^(0+128),w
  9062  0B38  008A               	movwf	10
  9063  0B39  086A               	movf	_TMR0_InterruptHandler^(0+128),w
  9064  0B3A  000A               	callw
  9065  0B3B  318B               	pagesel	$
  9066  0B3C  0008               	return
  9067  0B3D                     __end_of_TMR0_ISR:	
  9068                           
  9069                           	psect	text34
  9070  07FD                     __ptext34:	
  9071 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  9072 ;; Defined at:
  9073 ;;		line 83 in file "mcc_generated_files/tmr0.c"
  9074 ;; Parameters:    Size  Location     Type
  9075 ;;		None
  9076 ;; Auto vars:     Size  Location     Type
  9077 ;;		None
  9078 ;; Return value:  Size  Location     Type
  9079 ;;                  1    wreg      void 
  9080 ;; Registers used:
  9081 ;;		None
  9082 ;; Tracked objects:
  9083 ;;		On entry : 0/0
  9084 ;;		On exit  : 0/0
  9085 ;;		Unchanged: 0/0
  9086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9091 ;;Total ram usage:        0 bytes
  9092 ;; Hardware stack levels used:    1
  9093 ;; This function calls:
  9094 ;;		Nothing
  9095 ;; This function is called by:
  9096 ;;		_TMR0_Initialize
  9097 ;;		_TMR0_ISR
  9098 ;; This function uses a non-reentrant model
  9099 ;;
  9100                           
  9101                           
  9102                           ;psect for function _TMR0_DefaultInterruptHandler
  9103  07FD                     _TMR0_DefaultInterruptHandler:	
  9104                           
  9105                           ;incstack = 0
  9106                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  9107  07FD  0008               	return
  9108  07FE                     __end_of_TMR0_DefaultInterruptHandler:	
  9109                           
  9110                           	psect	text35
  9111  0B4C                     __ptext35:	
  9112 ;; *************** function _timerISR *****************
  9113 ;; Defined at:
  9114 ;;		line 70 in file "main.c"
  9115 ;; Parameters:    Size  Location     Type
  9116 ;;		None
  9117 ;; Auto vars:     Size  Location     Type
  9118 ;;		None
  9119 ;; Return value:  Size  Location     Type
  9120 ;;                  1    wreg      void 
  9121 ;; Registers used:
  9122 ;;		wreg
  9123 ;; Tracked objects:
  9124 ;;		On entry : 0/0
  9125 ;;		On exit  : 0/0
  9126 ;;		Unchanged: 0/0
  9127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9132 ;;Total ram usage:        0 bytes
  9133 ;; Hardware stack levels used:    1
  9134 ;; This function calls:
  9135 ;;		Nothing
  9136 ;; This function is called by:
  9137 ;;		_main
  9138 ;;		_TMR0_ISR
  9139 ;; This function uses a non-reentrant model
  9140 ;;
  9141                           
  9142                           
  9143                           ;psect for function _timerISR
  9144  0B4C                     _timerISR:	
  9145                           
  9146                           ;main.c: 71:     counter++ ;
  9147                           
  9148                           ;incstack = 0
  9149                           ; Regs used in _timerISR: [wreg]
  9150  0B4C  3001               	movlw	1
  9151  0B4D  0021               	movlb	1	; select bank1
  9152  0B4E  07C4               	addwf	_counter^(0+128),f	;volatile
  9153  0B4F  3000               	movlw	0
  9154  0B50  3DC5               	addwfc	(_counter+1)^(0+128),f	;volatile
  9155  0B51  3000               	movlw	0
  9156  0B52  3DC6               	addwfc	(_counter+2)^(0+128),f	;volatile
  9157  0B53  3000               	movlw	0
  9158  0B54  3DC7               	addwfc	(_counter+3)^(0+128),f	;volatile
  9159                           
  9160                           ;main.c: 72:     adcCounter++ ;
  9161  0B55  3001               	movlw	1
  9162  0B56  07C0               	addwf	_adcCounter^(0+128),f	;volatile
  9163  0B57  3000               	movlw	0
  9164  0B58  3DC1               	addwfc	(_adcCounter+1)^(0+128),f	;volatile
  9165  0B59  3000               	movlw	0
  9166  0B5A  3DC2               	addwfc	(_adcCounter+2)^(0+128),f	;volatile
  9167  0B5B  3000               	movlw	0
  9168  0B5C  3DC3               	addwfc	(_adcCounter+3)^(0+128),f	;volatile
  9169  0B5D  0008               	return
  9170  0B5E                     __end_of_timerISR:	
  9171                           
  9172                           	psect	text36
  9173  0AC3                     __ptext36:	
  9174 ;; *************** function _PIN_MANAGER_IOC *****************
  9175 ;; Defined at:
  9176 ;;		line 79 in file "mcc_generated_files/pin_manager.c"
  9177 ;; Parameters:    Size  Location     Type
  9178 ;;		None
  9179 ;; Auto vars:     Size  Location     Type
  9180 ;;		None
  9181 ;; Return value:  Size  Location     Type
  9182 ;;                  1    wreg      void 
  9183 ;; Registers used:
  9184 ;;		wreg, status,2, status,0, pclath, cstack
  9185 ;; Tracked objects:
  9186 ;;		On entry : 0/0
  9187 ;;		On exit  : 0/0
  9188 ;;		Unchanged: 0/0
  9189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9194 ;;Total ram usage:        0 bytes
  9195 ;; Hardware stack levels used:    1
  9196 ;; Hardware stack levels required when called:    3
  9197 ;; This function calls:
  9198 ;;		_IOCCF7_ISR
  9199 ;; This function is called by:
  9200 ;;		_INTERRUPT_InterruptManager
  9201 ;; This function uses a non-reentrant model
  9202 ;;
  9203                           
  9204                           
  9205                           ;psect for function _PIN_MANAGER_IOC
  9206  0AC3                     _PIN_MANAGER_IOC:	
  9207                           
  9208                           ;mcc_generated_files/pin_manager.c: 82:     if(IOCCFbits.IOCCF7 == 1)
  9209                           
  9210                           ;incstack = 0
  9211                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
  9212  0AC3  0027               	movlb	7	; select bank7
  9213  0AC4  1F99               	btfss	25,7	;volatile
  9214  0AC5  0008               	return
  9215                           
  9216                           ;mcc_generated_files/pin_manager.c: 83:     {;mcc_generated_files/pin_manager.c: 84:    
      +                               IOCCF7_ISR();
  9217  0AC6  318B  2321         	fcall	_IOCCF7_ISR
  9218  0AC8  0008               	return
  9219  0AC9                     __end_of_PIN_MANAGER_IOC:	
  9220                           
  9221                           	psect	text37
  9222  0B21                     __ptext37:	
  9223 ;; *************** function _IOCCF7_ISR *****************
  9224 ;; Defined at:
  9225 ;;		line 91 in file "mcc_generated_files/pin_manager.c"
  9226 ;; Parameters:    Size  Location     Type
  9227 ;;		None
  9228 ;; Auto vars:     Size  Location     Type
  9229 ;;		None
  9230 ;; Return value:  Size  Location     Type
  9231 ;;                  1    wreg      void 
  9232 ;; Registers used:
  9233 ;;		wreg, status,2, status,0, pclath, cstack
  9234 ;; Tracked objects:
  9235 ;;		On entry : 0/0
  9236 ;;		On exit  : 0/0
  9237 ;;		Unchanged: 0/0
  9238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9243 ;;Total ram usage:        0 bytes
  9244 ;; Hardware stack levels used:    1
  9245 ;; Hardware stack levels required when called:    2
  9246 ;; This function calls:
  9247 ;;		Absolute function
  9248 ;;		_IOCCF7_DefaultInterruptHandler
  9249 ;;		_speedCalc
  9250 ;; This function is called by:
  9251 ;;		_PIN_MANAGER_IOC
  9252 ;; This function uses a non-reentrant model
  9253 ;;
  9254                           
  9255                           
  9256                           ;psect for function _IOCCF7_ISR
  9257  0B21                     _IOCCF7_ISR:	
  9258                           
  9259                           ;mcc_generated_files/pin_manager.c: 96:     if(IOCCF7_InterruptHandler)
  9260                           
  9261                           ;incstack = 0
  9262                           ; Regs used in _IOCCF7_ISR: [wreg+status,2+status,0+pclath+cstack]
  9263  0B21  0021               	movlb	1	; select bank1
  9264  0B22  086C               	movf	_IOCCF7_InterruptHandler^(0+128),w
  9265  0B23  046D               	iorwf	(_IOCCF7_InterruptHandler+1)^(0+128),w
  9266  0B24  1903               	btfsc	3,2
  9267  0B25  2B2B               	goto	i1l2620
  9268                           
  9269                           ;mcc_generated_files/pin_manager.c: 97:     {;mcc_generated_files/pin_manager.c: 98:    
      +                               IOCCF7_InterruptHandler();
  9270  0B26  086D               	movf	(_IOCCF7_InterruptHandler+1)^(0+128),w
  9271  0B27  008A               	movwf	10
  9272  0B28  086C               	movf	_IOCCF7_InterruptHandler^(0+128),w
  9273  0B29  000A               	callw
  9274  0B2A  318B               	pagesel	$
  9275  0B2B                     i1l2620:	
  9276                           
  9277                           ;mcc_generated_files/pin_manager.c: 100:     IOCCFbits.IOCCF7 = 0;
  9278  0B2B  0027               	movlb	7	; select bank7
  9279  0B2C  1399               	bcf	25,7	;volatile
  9280  0B2D  0008               	return
  9281  0B2E                     __end_of_IOCCF7_ISR:	
  9282                           
  9283                           	psect	text38
  9284  07FE                     __ptext38:	
  9285 ;; *************** function _IOCCF7_DefaultInterruptHandler *****************
  9286 ;; Defined at:
  9287 ;;		line 113 in file "mcc_generated_files/pin_manager.c"
  9288 ;; Parameters:    Size  Location     Type
  9289 ;;		None
  9290 ;; Auto vars:     Size  Location     Type
  9291 ;;		None
  9292 ;; Return value:  Size  Location     Type
  9293 ;;                  1    wreg      void 
  9294 ;; Registers used:
  9295 ;;		None
  9296 ;; Tracked objects:
  9297 ;;		On entry : 0/0
  9298 ;;		On exit  : 0/0
  9299 ;;		Unchanged: 0/0
  9300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9305 ;;Total ram usage:        0 bytes
  9306 ;; Hardware stack levels used:    1
  9307 ;; This function calls:
  9308 ;;		Nothing
  9309 ;; This function is called by:
  9310 ;;		_PIN_MANAGER_Initialize
  9311 ;;		_IOCCF7_ISR
  9312 ;; This function uses a non-reentrant model
  9313 ;;
  9314                           
  9315                           
  9316                           ;psect for function _IOCCF7_DefaultInterruptHandler
  9317  07FE                     _IOCCF7_DefaultInterruptHandler:	
  9318                           
  9319                           ;incstack = 0
  9320                           ; Regs used in _IOCCF7_DefaultInterruptHandler: []
  9321  07FE  0008               	return
  9322  07FF                     __end_of_IOCCF7_DefaultInterruptHandler:	
  9323                           
  9324                           	psect	text39
  9325  0C54                     __ptext39:	
  9326 ;; *************** function _speedCalc *****************
  9327 ;; Defined at:
  9328 ;;		line 77 in file "main.c"
  9329 ;; Parameters:    Size  Location     Type
  9330 ;;		None
  9331 ;; Auto vars:     Size  Location     Type
  9332 ;;		None
  9333 ;; Return value:  Size  Location     Type
  9334 ;;                  1    wreg      void 
  9335 ;; Registers used:
  9336 ;;		wreg, status,2, status,0, pclath, cstack
  9337 ;; Tracked objects:
  9338 ;;		On entry : 0/0
  9339 ;;		On exit  : 0/0
  9340 ;;		Unchanged: 0/0
  9341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9346 ;;Total ram usage:        0 bytes
  9347 ;; Hardware stack levels used:    1
  9348 ;; Hardware stack levels required when called:    1
  9349 ;; This function calls:
  9350 ;;		___fladd
  9351 ;; This function is called by:
  9352 ;;		_main
  9353 ;;		_IOCCF7_ISR
  9354 ;; This function uses a non-reentrant model
  9355 ;;
  9356                           
  9357                           
  9358                           ;psect for function _speedCalc
  9359  0C54                     _speedCalc:	
  9360                           
  9361                           ;main.c: 81:     if( adcCounter <= ( 60483 ) ){
  9362                           
  9363                           ;incstack = 0
  9364                           ; Regs used in _speedCalc: [wreg+status,2+status,0+pclath+cstack]
  9365  0C54  0021               	movlb	1	; select bank1
  9366  0C55  1BC3               	btfsc	(_adcCounter+3)^(0+128),7	;volatile
  9367  0C56  2C63               	goto	i1l2476
  9368  0C57  0843               	movf	(_adcCounter+3)^(0+128),w	;volatile
  9369  0C58  1D03               	btfss	3,2
  9370  0C59  0008               	return
  9371  0C5A  0842               	movf	(_adcCounter+2)^(0+128),w	;volatile
  9372  0C5B  1D03               	btfss	3,2
  9373  0C5C  0008               	return
  9374  0C5D  3044               	movlw	68
  9375  0C5E  0240               	subwf	_adcCounter^(0+128),w	;volatile
  9376  0C5F  30EC               	movlw	236
  9377  0C60  3B41               	subwfb	(_adcCounter+1)^(0+128),w	;volatile
  9378  0C61  1803               	btfsc	3,0
  9379  0C62  0008               	return
  9380  0C63                     i1l2476:	
  9381                           
  9382                           ;main.c: 82:         distInt++;
  9383  0C63  3001               	movlw	1
  9384  0C64  0020               	movlb	0	; select bank0
  9385  0C65  07E4               	addwf	_distInt,f	;volatile
  9386  0C66  3000               	movlw	0
  9387  0C67  3DE5               	addwfc	_distInt+1,f	;volatile
  9388                           
  9389                           ;main.c: 83:      hallCount += 1 ;
  9390  0C68  303F               	movlw	63
  9391  0C69  00F3               	movwf	___fladd@b+3
  9392  0C6A  3080               	movlw	128
  9393  0C6B  00F2               	movwf	___fladd@b+2
  9394  0C6C  3000               	movlw	0
  9395  0C6D  00F1               	movwf	___fladd@b+1
  9396  0C6E  3000               	movlw	0
  9397  0C6F  00F0               	movwf	___fladd@b
  9398  0C70  0021               	movlb	1	; select bank1
  9399  0C71  082B               	movf	(_hallCount+3)^(0+128),w	;volatile
  9400  0C72  00F7               	movwf	___fladd@a+3
  9401  0C73  082A               	movf	(_hallCount+2)^(0+128),w	;volatile
  9402  0C74  00F6               	movwf	___fladd@a+2
  9403  0C75  0829               	movf	(_hallCount+1)^(0+128),w	;volatile
  9404  0C76  00F5               	movwf	___fladd@a+1
  9405  0C77  0828               	movf	_hallCount^(0+128),w	;volatile
  9406  0C78  00F4               	movwf	___fladd@a
  9407  0C79  3182  225F         	fcall	___fladd
  9408  0C7B  0873               	movf	?___fladd+3,w
  9409  0C7C  0021               	movlb	1	; select bank1
  9410  0C7D  00AB               	movwf	(_hallCount+3)^(0+128)	;volatile
  9411  0C7E  0872               	movf	?___fladd+2,w
  9412  0C7F  00AA               	movwf	(_hallCount+2)^(0+128)	;volatile
  9413  0C80  0871               	movf	?___fladd+1,w
  9414  0C81  00A9               	movwf	(_hallCount+1)^(0+128)	;volatile
  9415  0C82  0870               	movf	?___fladd,w
  9416  0C83  00A8               	movwf	_hallCount^(0+128)	;volatile
  9417  0C84  0008               	return
  9418  0C85                     __end_of_speedCalc:	
  9419                           
  9420                           	psect	text40
  9421  025F                     __ptext40:	
  9422 ;; *************** function ___fladd *****************
  9423 ;; Defined at:
  9424 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  9425 ;; Parameters:    Size  Location     Type
  9426 ;;  b               4    0[COMMON] void 
  9427 ;;  a               4    4[COMMON] void 
  9428 ;; Auto vars:     Size  Location     Type
  9429 ;;  grs             1   11[COMMON] unsigned char 
  9430 ;;  bexp            1   10[COMMON] unsigned char 
  9431 ;;  aexp            1    9[COMMON] unsigned char 
  9432 ;;  signs           1    8[COMMON] unsigned char 
  9433 ;; Return value:  Size  Location     Type
  9434 ;;                  4    0[COMMON] unsigned char 
  9435 ;; Registers used:
  9436 ;;		wreg, status,2, status,0
  9437 ;; Tracked objects:
  9438 ;;		On entry : 0/0
  9439 ;;		On exit  : 0/0
  9440 ;;		Unchanged: 0/0
  9441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9442 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9443 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9444 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9445 ;;      Totals:        12       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9446 ;;Total ram usage:       20 bytes
  9447 ;; Hardware stack levels used:    1
  9448 ;; This function calls:
  9449 ;;		Nothing
  9450 ;; This function is called by:
  9451 ;;		_speedCalc
  9452 ;; This function uses a non-reentrant model
  9453 ;;
  9454                           
  9455                           
  9456                           ;psect for function ___fladd
  9457  025F                     ___fladd:	
  9458                           
  9459                           ;incstack = 0
  9460                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  9461  025F  0873               	movf	___fladd@b+3,w
  9462  0260  3980               	andlw	128
  9463  0261  0020               	movlb	0	; select bank0
  9464  0262  00A0               	movwf	??___fladd
  9465  0263  0820               	movf	??___fladd,w
  9466  0264  00F8               	movwf	___fladd@signs
  9467  0265  3573               	lslf	___fladd@b+3,w
  9468  0266  00A0               	movwf	??___fladd
  9469  0267  0820               	movf	??___fladd,w
  9470  0268  00FA               	movwf	___fladd@bexp
  9471  0269  1BF2               	btfsc	___fladd@b+2,7
  9472  026A  147A               	bsf	___fladd@bexp,0
  9473  026B  087A               	movf	___fladd@bexp,w
  9474  026C  1903               	btfsc	3,2
  9475  026D  2A7C               	goto	i1l2288
  9476  026E  0A7A               	incf	___fladd@bexp,w
  9477  026F  1D03               	btfss	3,2
  9478  0270  2A79               	goto	i1l2284
  9479  0271  3000               	movlw	0
  9480  0272  00F3               	movwf	___fladd@b+3
  9481  0273  3000               	movlw	0
  9482  0274  00F2               	movwf	___fladd@b+2
  9483  0275  3000               	movlw	0
  9484  0276  00F1               	movwf	___fladd@b+1
  9485  0277  3000               	movlw	0
  9486  0278  00F0               	movwf	___fladd@b
  9487  0279                     i1l2284:	
  9488  0279  17F2               	bsf	___fladd@b+2,7
  9489  027A  01F3               	clrf	___fladd@b+3
  9490  027B  2A84               	goto	i1l2290
  9491  027C                     i1l2288:	
  9492  027C  3000               	movlw	0
  9493  027D  00F3               	movwf	___fladd@b+3
  9494  027E  3000               	movlw	0
  9495  027F  00F2               	movwf	___fladd@b+2
  9496  0280  3000               	movlw	0
  9497  0281  00F1               	movwf	___fladd@b+1
  9498  0282  3000               	movlw	0
  9499  0283  00F0               	movwf	___fladd@b
  9500  0284                     i1l2290:	
  9501  0284  0877               	movf	___fladd@a+3,w
  9502  0285  3980               	andlw	128
  9503  0286  00A0               	movwf	??___fladd
  9504  0287  0820               	movf	??___fladd,w
  9505  0288  00F9               	movwf	___fladd@aexp
  9506  0289  0879               	movf	___fladd@aexp,w
  9507  028A  0678               	xorwf	___fladd@signs,w
  9508  028B  1D03               	btfss	3,2
  9509  028C  1778               	bsf	___fladd@signs,6
  9510  028D  3577               	lslf	___fladd@a+3,w
  9511  028E  00A0               	movwf	??___fladd
  9512  028F  0820               	movf	??___fladd,w
  9513  0290  00F9               	movwf	___fladd@aexp
  9514  0291  1BF6               	btfsc	___fladd@a+2,7
  9515  0292  1479               	bsf	___fladd@aexp,0
  9516  0293  0879               	movf	___fladd@aexp,w
  9517  0294  1903               	btfsc	3,2
  9518  0295  2AA4               	goto	i1l2312
  9519  0296  0A79               	incf	___fladd@aexp,w
  9520  0297  1D03               	btfss	3,2
  9521  0298  2AA1               	goto	i1l2308
  9522  0299  3000               	movlw	0
  9523  029A  00F7               	movwf	___fladd@a+3
  9524  029B  3000               	movlw	0
  9525  029C  00F6               	movwf	___fladd@a+2
  9526  029D  3000               	movlw	0
  9527  029E  00F5               	movwf	___fladd@a+1
  9528  029F  3000               	movlw	0
  9529  02A0  00F4               	movwf	___fladd@a
  9530  02A1                     i1l2308:	
  9531  02A1  17F6               	bsf	___fladd@a+2,7
  9532  02A2  01F7               	clrf	___fladd@a+3
  9533  02A3  2AAC               	goto	i1l844
  9534  02A4                     i1l2312:	
  9535  02A4  3000               	movlw	0
  9536  02A5  00F7               	movwf	___fladd@a+3
  9537  02A6  3000               	movlw	0
  9538  02A7  00F6               	movwf	___fladd@a+2
  9539  02A8  3000               	movlw	0
  9540  02A9  00F5               	movwf	___fladd@a+1
  9541  02AA  3000               	movlw	0
  9542  02AB  00F4               	movwf	___fladd@a
  9543  02AC                     i1l844:	
  9544  02AC  087A               	movf	___fladd@bexp,w
  9545  02AD  0279               	subwf	___fladd@aexp,w
  9546  02AE  1803               	skipnc
  9547  02AF  2AF2               	goto	i1l2348
  9548  02B0  1F78               	btfss	___fladd@signs,6
  9549  02B1  2AB6               	goto	i1l2318
  9550  02B2  3080               	movlw	128
  9551  02B3  00A0               	movwf	??___fladd
  9552  02B4  0820               	movf	??___fladd,w
  9553  02B5  06F8               	xorwf	___fladd@signs,f
  9554  02B6                     i1l2318:	
  9555  02B6  087A               	movf	___fladd@bexp,w
  9556  02B7  00A0               	movwf	??___fladd
  9557  02B8  0820               	movf	??___fladd,w
  9558  02B9  00FB               	movwf	___fladd@grs
  9559  02BA  0879               	movf	___fladd@aexp,w
  9560  02BB  00A0               	movwf	??___fladd
  9561  02BC  0820               	movf	??___fladd,w
  9562  02BD  00FA               	movwf	___fladd@bexp
  9563  02BE  087B               	movf	___fladd@grs,w
  9564  02BF  00A0               	movwf	??___fladd
  9565  02C0  0820               	movf	??___fladd,w
  9566  02C1  00F9               	movwf	___fladd@aexp
  9567  02C2  0870               	movf	___fladd@b,w
  9568  02C3  00A0               	movwf	??___fladd
  9569  02C4  0820               	movf	??___fladd,w
  9570  02C5  00FB               	movwf	___fladd@grs
  9571  02C6  0874               	movf	___fladd@a,w
  9572  02C7  00A0               	movwf	??___fladd
  9573  02C8  0820               	movf	??___fladd,w
  9574  02C9  00F0               	movwf	___fladd@b
  9575  02CA  087B               	movf	___fladd@grs,w
  9576  02CB  00A0               	movwf	??___fladd
  9577  02CC  0820               	movf	??___fladd,w
  9578  02CD  00F4               	movwf	___fladd@a
  9579  02CE  0871               	movf	___fladd@b+1,w
  9580  02CF  00A0               	movwf	??___fladd
  9581  02D0  0820               	movf	??___fladd,w
  9582  02D1  00FB               	movwf	___fladd@grs
  9583  02D2  0875               	movf	___fladd@a+1,w
  9584  02D3  00A0               	movwf	??___fladd
  9585  02D4  0820               	movf	??___fladd,w
  9586  02D5  00F1               	movwf	___fladd@b+1
  9587  02D6  087B               	movf	___fladd@grs,w
  9588  02D7  00A0               	movwf	??___fladd
  9589  02D8  0820               	movf	??___fladd,w
  9590  02D9  00F5               	movwf	___fladd@a+1
  9591  02DA  0872               	movf	___fladd@b+2,w
  9592  02DB  00A0               	movwf	??___fladd
  9593  02DC  0820               	movf	??___fladd,w
  9594  02DD  00FB               	movwf	___fladd@grs
  9595  02DE  0876               	movf	___fladd@a+2,w
  9596  02DF  00A0               	movwf	??___fladd
  9597  02E0  0820               	movf	??___fladd,w
  9598  02E1  00F2               	movwf	___fladd@b+2
  9599  02E2  087B               	movf	___fladd@grs,w
  9600  02E3  00A0               	movwf	??___fladd
  9601  02E4  0820               	movf	??___fladd,w
  9602  02E5  00F6               	movwf	___fladd@a+2
  9603  02E6  0873               	movf	___fladd@b+3,w
  9604  02E7  00A0               	movwf	??___fladd
  9605  02E8  0820               	movf	??___fladd,w
  9606  02E9  00FB               	movwf	___fladd@grs
  9607  02EA  0877               	movf	___fladd@a+3,w
  9608  02EB  00A0               	movwf	??___fladd
  9609  02EC  0820               	movf	??___fladd,w
  9610  02ED  00F3               	movwf	___fladd@b+3
  9611  02EE  087B               	movf	___fladd@grs,w
  9612  02EF  00A0               	movwf	??___fladd
  9613  02F0  0820               	movf	??___fladd,w
  9614  02F1  00F7               	movwf	___fladd@a+3
  9615  02F2                     i1l2348:	
  9616  02F2  01FB               	clrf	___fladd@grs
  9617  02F3  0879               	movf	___fladd@aexp,w
  9618  02F4  00A0               	movwf	??___fladd
  9619  02F5  01A1               	clrf	??___fladd+1
  9620  02F6  0821               	movf	??___fladd+1,w
  9621  02F7  00A3               	movwf	??___fladd+3
  9622  02F8  087A               	movf	___fladd@bexp,w
  9623  02F9  0220               	subwf	??___fladd,w
  9624  02FA  00A2               	movwf	??___fladd+2
  9625  02FB  1C03               	skipc
  9626  02FC  03A3               	decf	??___fladd+3,f
  9627  02FD  0823               	movf	??___fladd+3,w
  9628  02FE  3A80               	xorlw	128
  9629  02FF  00A4               	movwf	??___fladd+4
  9630  0300  3080               	movlw	128
  9631  0301  0224               	subwf	??___fladd+4,w
  9632  0302  1D03               	skipz
  9633  0303  2B06               	goto	u229_25
  9634  0304  301A               	movlw	26
  9635  0305  0222               	subwf	??___fladd+2,w
  9636  0306                     u229_25:	
  9637  0306  1C03               	skipc
  9638  0307  2B3C               	goto	i1l2366
  9639  0308  0873               	movf	___fladd@b+3,w
  9640  0309  0472               	iorwf	___fladd@b+2,w
  9641  030A  0471               	iorwf	___fladd@b+1,w
  9642  030B  0470               	iorwf	___fladd@b,w
  9643  030C  1903               	btfsc	3,2
  9644  030D  2B10               	goto	u230_20
  9645  030E  3001               	movlw	1
  9646  030F  2B11               	goto	u231_20
  9647  0310                     u230_20:	
  9648  0310  3000               	movlw	0
  9649  0311                     u231_20:	
  9650  0311  0020               	movlb	0	; select bank0
  9651  0312  00A0               	movwf	??___fladd
  9652  0313  0820               	movf	??___fladd,w
  9653  0314  00FB               	movwf	___fladd@grs
  9654  0315  3000               	movlw	0
  9655  0316  00F3               	movwf	___fladd@b+3
  9656  0317  3000               	movlw	0
  9657  0318  00F2               	movwf	___fladd@b+2
  9658  0319  3000               	movlw	0
  9659  031A  00F1               	movwf	___fladd@b+1
  9660  031B  3000               	movlw	0
  9661  031C  00F0               	movwf	___fladd@b
  9662  031D  0879               	movf	___fladd@aexp,w
  9663  031E  00A0               	movwf	??___fladd
  9664  031F  0820               	movf	??___fladd,w
  9665  0320  00FA               	movwf	___fladd@bexp
  9666  0321  2B40               	goto	i1l848
  9667  0322                     i1l850:	
  9668  0322  1C7B               	btfss	___fladd@grs,0
  9669  0323  2B2B               	goto	i1l2356
  9670  0324  367B               	lsrf	___fladd@grs,w
  9671  0325  3801               	iorlw	1
  9672  0326  0020               	movlb	0	; select bank0
  9673  0327  00A0               	movwf	??___fladd
  9674  0328  0820               	movf	??___fladd,w
  9675  0329  00FB               	movwf	___fladd@grs
  9676  032A  2B2D               	goto	i1l2358
  9677  032B                     i1l2356:	
  9678  032B  1003               	clrc
  9679  032C  0CFB               	rrf	___fladd@grs,f
  9680  032D                     i1l2358:	
  9681  032D  1870               	btfsc	___fladd@b,0
  9682  032E  17FB               	bsf	___fladd@grs,7
  9683  032F  3001               	movlw	1
  9684  0330  0020               	movlb	0	; select bank0
  9685  0331  00A0               	movwf	??___fladd
  9686  0332                     u234_25:	
  9687  0332  37F3               	asrf	___fladd@b+3,f
  9688  0333  0CF2               	rrf	___fladd@b+2,f
  9689  0334  0CF1               	rrf	___fladd@b+1,f
  9690  0335  0CF0               	rrf	___fladd@b,f
  9691  0336  0BA0               	decfsz	??___fladd& (0+127),f
  9692  0337  2B32               	goto	u234_25
  9693  0338  3001               	movlw	1
  9694  0339  00A0               	movwf	??___fladd
  9695  033A  0820               	movf	??___fladd,w
  9696  033B  07FA               	addwf	___fladd@bexp,f
  9697  033C                     i1l2366:	
  9698  033C  0879               	movf	___fladd@aexp,w
  9699  033D  027A               	subwf	___fladd@bexp,w
  9700  033E  1C03               	skipc
  9701  033F  2B22               	goto	i1l850
  9702  0340                     i1l848:	
  9703  0340  1B78               	btfsc	___fladd@signs,6
  9704  0341  2B73               	goto	i1l2392
  9705  0342  087A               	movf	___fladd@bexp,w
  9706  0343  1D03               	btfss	3,2
  9707  0344  2B4E               	goto	i1l2374
  9708  0345  3000               	movlw	0
  9709  0346  00F3               	movwf	?___fladd+3
  9710  0347  3000               	movlw	0
  9711  0348  00F2               	movwf	?___fladd+2
  9712  0349  3000               	movlw	0
  9713  034A  00F1               	movwf	?___fladd+1
  9714  034B  3000               	movlw	0
  9715  034C  00F0               	movwf	?___fladd
  9716  034D  0008               	return
  9717  034E                     i1l2374:	
  9718  034E  0874               	movf	___fladd@a,w
  9719  034F  07F0               	addwf	___fladd@b,f
  9720  0350  0875               	movf	___fladd@a+1,w
  9721  0351  3DF1               	addwfc	___fladd@b+1,f
  9722  0352  0876               	movf	___fladd@a+2,w
  9723  0353  3DF2               	addwfc	___fladd@b+2,f
  9724  0354  0877               	movf	___fladd@a+3,w
  9725  0355  3DF3               	addwfc	___fladd@b+3,f
  9726  0356  1C73               	btfss	___fladd@b+3,0
  9727  0357  2BEE               	goto	i1l2426
  9728  0358  1C7B               	btfss	___fladd@grs,0
  9729  0359  2B61               	goto	i1l2382
  9730  035A  367B               	lsrf	___fladd@grs,w
  9731  035B  3801               	iorlw	1
  9732  035C  0020               	movlb	0	; select bank0
  9733  035D  00A0               	movwf	??___fladd
  9734  035E  0820               	movf	??___fladd,w
  9735  035F  00FB               	movwf	___fladd@grs
  9736  0360  2B63               	goto	i1l2384
  9737  0361                     i1l2382:	
  9738  0361  1003               	clrc
  9739  0362  0CFB               	rrf	___fladd@grs,f
  9740  0363                     i1l2384:	
  9741  0363  1870               	btfsc	___fladd@b,0
  9742  0364  17FB               	bsf	___fladd@grs,7
  9743  0365  3001               	movlw	1
  9744  0366  0020               	movlb	0	; select bank0
  9745  0367  00A0               	movwf	??___fladd
  9746  0368                     u241_25:	
  9747  0368  37F3               	asrf	___fladd@b+3,f
  9748  0369  0CF2               	rrf	___fladd@b+2,f
  9749  036A  0CF1               	rrf	___fladd@b+1,f
  9750  036B  0CF0               	rrf	___fladd@b,f
  9751  036C  0BA0               	decfsz	??___fladd& (0+127),f
  9752  036D  2B68               	goto	u241_25
  9753  036E  3001               	movlw	1
  9754  036F  00A0               	movwf	??___fladd
  9755  0370  0820               	movf	??___fladd,w
  9756  0371  07FA               	addwf	___fladd@bexp,f
  9757  0372  2BEE               	goto	i1l2426
  9758  0373                     i1l2392:	
  9759  0373  0873               	movf	___fladd@b+3,w
  9760  0374  3A80               	xorlw	128
  9761  0375  0020               	movlb	0	; select bank0
  9762  0376  00A0               	movwf	??___fladd
  9763  0377  0877               	movf	___fladd@a+3,w
  9764  0378  3A80               	xorlw	128
  9765  0379  0220               	subwf	??___fladd,w
  9766  037A  1D03               	skipz
  9767  037B  2B86               	goto	u242_23
  9768  037C  0876               	movf	___fladd@a+2,w
  9769  037D  0272               	subwf	___fladd@b+2,w
  9770  037E  1D03               	skipz
  9771  037F  2B86               	goto	u242_23
  9772  0380  0875               	movf	___fladd@a+1,w
  9773  0381  0271               	subwf	___fladd@b+1,w
  9774  0382  1D03               	skipz
  9775  0383  2B86               	goto	u242_23
  9776  0384  0874               	movf	___fladd@a,w
  9777  0385  0270               	subwf	___fladd@b,w
  9778  0386                     u242_23:	
  9779  0386  1803               	skipnc
  9780  0387  2BBE               	goto	i1l2402
  9781  0388  30FF               	movlw	255
  9782  0389  00A0               	movwf	??___fladd
  9783  038A  30FF               	movlw	255
  9784  038B  00A1               	movwf	??___fladd+1
  9785  038C  30FF               	movlw	255
  9786  038D  00A2               	movwf	??___fladd+2
  9787  038E  30FF               	movlw	255
  9788  038F  00A3               	movwf	??___fladd+3
  9789  0390  0870               	movf	___fladd@b,w
  9790  0391  0274               	subwf	___fladd@a,w
  9791  0392  00A4               	movwf	??___fladd+4
  9792  0393  0871               	movf	___fladd@b+1,w
  9793  0394  3B75               	subwfb	___fladd@a+1,w
  9794  0395  00A5               	movwf	??___fladd+5
  9795  0396  0872               	movf	___fladd@b+2,w
  9796  0397  3B76               	subwfb	___fladd@a+2,w
  9797  0398  00A6               	movwf	??___fladd+6
  9798  0399  0873               	movf	___fladd@b+3,w
  9799  039A  3B77               	subwfb	___fladd@a+3,w
  9800  039B  00A7               	movwf	??___fladd+7
  9801  039C  0824               	movf	??___fladd+4,w
  9802  039D  07A0               	addwf	??___fladd,f
  9803  039E  0825               	movf	??___fladd+5,w
  9804  039F  3DA1               	addwfc	??___fladd+1,f
  9805  03A0  0826               	movf	??___fladd+6,w
  9806  03A1  3DA2               	addwfc	??___fladd+2,f
  9807  03A2  0827               	movf	??___fladd+7,w
  9808  03A3  3DA3               	addwfc	??___fladd+3,f
  9809  03A4  0823               	movf	??___fladd+3,w
  9810  03A5  00F3               	movwf	___fladd@b+3
  9811  03A6  0822               	movf	??___fladd+2,w
  9812  03A7  00F2               	movwf	___fladd@b+2
  9813  03A8  0821               	movf	??___fladd+1,w
  9814  03A9  00F1               	movwf	___fladd@b+1
  9815  03AA  0820               	movf	??___fladd,w
  9816  03AB  00F0               	movwf	___fladd@b
  9817  03AC  3080               	movlw	128
  9818  03AD  00A0               	movwf	??___fladd
  9819  03AE  0820               	movf	??___fladd,w
  9820  03AF  06F8               	xorwf	___fladd@signs,f
  9821  03B0  09FB               	comf	___fladd@grs,f
  9822  03B1  0AFB               	incf	___fladd@grs,f
  9823  03B2  087B               	movf	___fladd@grs,w
  9824  03B3  1D03               	btfss	3,2
  9825  03B4  2BC6               	goto	i1l865
  9826  03B5  3001               	movlw	1
  9827  03B6  07F0               	addwf	___fladd@b,f
  9828  03B7  3000               	movlw	0
  9829  03B8  3DF1               	addwfc	___fladd@b+1,f
  9830  03B9  3000               	movlw	0
  9831  03BA  3DF2               	addwfc	___fladd@b+2,f
  9832  03BB  3000               	movlw	0
  9833  03BC  3DF3               	addwfc	___fladd@b+3,f
  9834  03BD  2BC6               	goto	i1l865
  9835  03BE                     i1l2402:	
  9836  03BE  0874               	movf	___fladd@a,w
  9837  03BF  02F0               	subwf	___fladd@b,f
  9838  03C0  0875               	movf	___fladd@a+1,w
  9839  03C1  3BF1               	subwfb	___fladd@b+1,f
  9840  03C2  0876               	movf	___fladd@a+2,w
  9841  03C3  3BF2               	subwfb	___fladd@b+2,f
  9842  03C4  0877               	movf	___fladd@a+3,w
  9843  03C5  3BF3               	subwfb	___fladd@b+3,f
  9844  03C6                     i1l865:	
  9845  03C6  0873               	movf	___fladd@b+3,w
  9846  03C7  0472               	iorwf	___fladd@b+2,w
  9847  03C8  0471               	iorwf	___fladd@b+1,w
  9848  03C9  0470               	iorwf	___fladd@b,w
  9849  03CA  1D03               	skipz
  9850  03CB  2BEC               	goto	i1l2424
  9851  03CC  087B               	movf	___fladd@grs,w
  9852  03CD  1D03               	btfss	3,2
  9853  03CE  2BEC               	goto	i1l2424
  9854  03CF  3000               	movlw	0
  9855  03D0  00F3               	movwf	?___fladd+3
  9856  03D1  3000               	movlw	0
  9857  03D2  00F2               	movwf	?___fladd+2
  9858  03D3  3000               	movlw	0
  9859  03D4  00F1               	movwf	?___fladd+1
  9860  03D5  3000               	movlw	0
  9861  03D6  00F0               	movwf	?___fladd
  9862  03D7  0008               	return
  9863  03D8                     i1l2410:	
  9864  03D8  3001               	movlw	1
  9865  03D9                     u246_25:	
  9866  03D9  35F0               	lslf	___fladd@b,f
  9867  03DA  0DF1               	rlf	___fladd@b+1,f
  9868  03DB  0DF2               	rlf	___fladd@b+2,f
  9869  03DC  0DF3               	rlf	___fladd@b+3,f
  9870  03DD  0B89               	decfsz	9,f
  9871  03DE  2BD9               	goto	u246_25
  9872  03DF  1BFB               	btfsc	___fladd@grs,7
  9873  03E0  1470               	bsf	___fladd@b,0
  9874  03E1  1C7B               	btfss	___fladd@grs,0
  9875  03E2  2BE5               	goto	i1l2418
  9876  03E3  1403               	setc
  9877  03E4  2BE6               	goto	L2
  9878  03E5                     i1l2418:	
  9879  03E5  1003               	clrc
  9880  03E6                     L2:	
  9881  03E6  0DFB               	rlf	___fladd@grs,f
  9882  03E7  087A               	movf	___fladd@bexp,w
  9883  03E8  1903               	btfsc	3,2
  9884  03E9  2BEC               	goto	i1l2424
  9885  03EA  3001               	movlw	1
  9886  03EB  02FA               	subwf	___fladd@bexp,f
  9887  03EC                     i1l2424:	
  9888  03EC  1FF2               	btfss	___fladd@b+2,7
  9889  03ED  2BD8               	goto	i1l2410
  9890  03EE                     i1l2426:	
  9891  03EE  01F9               	clrf	___fladd@aexp
  9892  03EF  1FFB               	btfss	___fladd@grs,7
  9893  03F0  2BF9               	goto	i1l2436
  9894  03F1  087B               	movf	___fladd@grs,w
  9895  03F2  397F               	andlw	127
  9896  03F3  1903               	btfsc	3,2
  9897  03F4  1870               	btfsc	___fladd@b,0
  9898  03F5  2BF7               	goto	i1l2432
  9899  03F6  2BF9               	goto	i1l2436
  9900  03F7                     i1l2432:	
  9901  03F7  01F9               	clrf	___fladd@aexp
  9902  03F8  0AF9               	incf	___fladd@aexp,f
  9903  03F9                     i1l2436:	
  9904  03F9  0879               	movf	___fladd@aexp,w
  9905  03FA  1903               	btfsc	3,2
  9906  03FB  2C26               	goto	i1l878
  9907  03FC  3001               	movlw	1
  9908  03FD  07F0               	addwf	___fladd@b,f
  9909  03FE  3000               	movlw	0
  9910  03FF  3DF1               	addwfc	___fladd@b+1,f
  9911  0400  3000               	movlw	0
  9912  0401  3DF2               	addwfc	___fladd@b+2,f
  9913  0402  3000               	movlw	0
  9914  0403  3DF3               	addwfc	___fladd@b+3,f
  9915  0404  1C73               	btfss	___fladd@b+3,0
  9916  0405  2C26               	goto	i1l878
  9917  0406  0870               	movf	___fladd@b,w
  9918  0407  0020               	movlb	0	; select bank0
  9919  0408  00A0               	movwf	??___fladd
  9920  0409  0871               	movf	___fladd@b+1,w
  9921  040A  00A1               	movwf	??___fladd+1
  9922  040B  0872               	movf	___fladd@b+2,w
  9923  040C  00A2               	movwf	??___fladd+2
  9924  040D  0873               	movf	___fladd@b+3,w
  9925  040E  00A3               	movwf	??___fladd+3
  9926  040F  3001               	movlw	1
  9927  0410  00A4               	movwf	??___fladd+4
  9928  0411                     u256_25:	
  9929  0411  37A3               	asrf	??___fladd+3,f
  9930  0412  0CA2               	rrf	??___fladd+2,f
  9931  0413  0CA1               	rrf	??___fladd+1,f
  9932  0414  0CA0               	rrf	??___fladd,f
  9933  0415  0BA4               	decfsz	??___fladd+4,f
  9934  0416  2C11               	goto	u256_25
  9935  0417  0823               	movf	??___fladd+3,w
  9936  0418  00F3               	movwf	___fladd@b+3
  9937  0419  0822               	movf	??___fladd+2,w
  9938  041A  00F2               	movwf	___fladd@b+2
  9939  041B  0821               	movf	??___fladd+1,w
  9940  041C  00F1               	movwf	___fladd@b+1
  9941  041D  0820               	movf	??___fladd,w
  9942  041E  00F0               	movwf	___fladd@b
  9943  041F  0A7A               	incf	___fladd@bexp,w
  9944  0420  1903               	btfsc	3,2
  9945  0421  2C26               	goto	i1l878
  9946  0422  3001               	movlw	1
  9947  0423  00A0               	movwf	??___fladd
  9948  0424  0820               	movf	??___fladd,w
  9949  0425  07FA               	addwf	___fladd@bexp,f
  9950  0426                     i1l878:	
  9951  0426  0A7A               	incf	___fladd@bexp,w
  9952  0427  1D03               	btfss	3,2
  9953  0428  087A               	movf	___fladd@bexp,w
  9954  0429  1D03               	btfss	3,2
  9955  042A  2C36               	goto	i1l2454
  9956  042B  3000               	movlw	0
  9957  042C  00F3               	movwf	___fladd@b+3
  9958  042D  3000               	movlw	0
  9959  042E  00F2               	movwf	___fladd@b+2
  9960  042F  3000               	movlw	0
  9961  0430  00F1               	movwf	___fladd@b+1
  9962  0431  3000               	movlw	0
  9963  0432  00F0               	movwf	___fladd@b
  9964  0433  087A               	movf	___fladd@bexp,w
  9965  0434  1903               	btfsc	3,2
  9966  0435  01F8               	clrf	___fladd@signs
  9967  0436                     i1l2454:	
  9968  0436  1C7A               	btfss	___fladd@bexp,0
  9969  0437  2C3A               	goto	i1l2458
  9970  0438  17F2               	bsf	___fladd@b+2,7
  9971  0439  2C3F               	goto	i1l886
  9972  043A                     i1l2458:	
  9973  043A  307F               	movlw	127
  9974  043B  0020               	movlb	0	; select bank0
  9975  043C  00A0               	movwf	??___fladd
  9976  043D  0820               	movf	??___fladd,w
  9977  043E  05F2               	andwf	___fladd@b+2,f
  9978  043F                     i1l886:	
  9979  043F  367A               	lsrf	___fladd@bexp,w
  9980  0440  0020               	movlb	0	; select bank0
  9981  0441  00A0               	movwf	??___fladd
  9982  0442  0820               	movf	??___fladd,w
  9983  0443  00F3               	movwf	___fladd@b+3
  9984  0444  1FF8               	btfss	___fladd@signs,7
  9985  0445  0008               	return
  9986  0446  17F3               	bsf	___fladd@b+3,7
  9987  0447  0008               	return
  9988  0448                     __end_of___fladd:	
  9989  007E                     btemp	set	126	;btemp
  9990  007E                     int$flags	set	126
  9991  007E                     wtemp0	set	126


Data Sizes:
    Strings     9
    Constant    32
    Data        0
    BSS         99
    Persistent  43
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     64      72
    BANK1            80     28      80
    BANK2            80      8      56
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    puts@s	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_2(CODE[3]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK2[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), STR_2(CODE[3]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S1057_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK2[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    vfpfcnvrt@vp	PTR void  size(1) Largest target is 2
		 -> ?_printf(BANK2[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK2[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timerISR(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timerISR(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    IOCCF7_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> speedCalc(), IOCCF7_DefaultInterruptHandler(), 

    IOCCF7_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> speedCalc(), Absolute function(), IOCCF7_DefaultInterruptHandler(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _speedCalc->___fladd

Critical Paths under _main in BANK0

    _setCursor->_EUSART_Write
    _resetCursor->_puts
    _puts->_fputs
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _abs->___aomod
    ___fltol->___flmul
    ___flmul->___xxtofl
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCCF7_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _speedCalc->___fladd

Critical Paths under _main in BANK1

    _main->_printf
    _printf->_vfprintf
    _vfpfcnvrt->_dtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   16707
                                              7 BANK2      1     1      0
         _IOCCF7_SetInterruptHandler
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                            ___flmul
                            ___fltol
                           ___xxtofl
                             _printf
                        _resetCursor
                          _setCursor
 ---------------------------------------------------------------------------------
 (1) _setCursor                                            4     3      1     276
                                              9 BANK0      4     3      1
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (1) _resetCursor                                          0     0      0    3382
                               _puts
 ---------------------------------------------------------------------------------
 (2) _puts                                                 5     3      2    3382
                                             27 BANK0      5     3      2
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4    8863
                                             27 BANK1      1     1      0
                                              0 BANK2      7     3      4
                            ___flmul (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    8596
                                             19 BANK1      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           39    37      2    8149
                                             47 BANK0     17    15      2
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    6109
                                             36 BANK0     11     3      8
                                              0 BANK1     19    19      0
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    3878
                                             27 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     166
                                              8 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _fputs                                                9     6      3    1914
                                             18 BANK0      9     6      3
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3    1210
                                             10 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      62
                                              9 BANK0      1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (2) _EUSART_Write                                         1     1      0      31
                                              8 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             27 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     613
                                              8 BANK0     19     3     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     625
                                              8 BANK0     27    11     16
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     474
                                              8 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             11     7      4     305
                                             48 BANK0     11     7      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             26    18      8    2417
                                             22 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __Umul8_16                                            9     7      2     799
                                              8 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     642
                     _ADC_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0     174
                                             10 BANK0      1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                              8 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     174
         _IOCCF7_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCCF7_SetInterruptHandler                           2     0      2     174
                                              8 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              8 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              8 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              8 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          0     0      0    2262
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                           _timerISR *
 ---------------------------------------------------------------------------------
 (12) _timerISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _PIN_MANAGER_IOC                                     0     0      0    2262
                         _IOCCF7_ISR
 ---------------------------------------------------------------------------------
 (12) _IOCCF7_ISR                                          0     0      0    2262
                   Absolute function *
     _IOCCF7_DefaultInterruptHandler *
                          _speedCalc *
 ---------------------------------------------------------------------------------
 (13) _speedCalc                                           0     0      0    2262
                            ___fladd
 ---------------------------------------------------------------------------------
 (14) ___fladd                                            20    12      8    2262
                                              0 COMMON    12     4      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (13) _IOCCF7_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _IOCCF7_SetInterruptHandler
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCCF7_SetInterruptHandler
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _TMR0_SetInterruptHandler
   ___flmul
     __Umul8_16
     ___xxtofl (ARG)
   ___fltol
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _printf
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
     ___fltol (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART_Write
             _fputs
               _fputc
                 _putch
                   _EUSART_Write
             _strlen
         _fputc
           _putch
             _EUSART_Write
   _resetCursor
     _puts
       _fputc
         _putch
           _EUSART_Write
       _fputs
         _fputc
           _putch
             _EUSART_Write
   _setCursor
     _EUSART_Write

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
     _IOCCF7_ISR
       Absolute function(Fake) *
       _IOCCF7_DefaultInterruptHandler *
       _speedCalc *
         ___fladd
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _timerISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     40      48       5       90.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     1C      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      8      38       9       70.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      DE      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      DE      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Apr 02 16:05:12 2019

                                  __CFG_CP$OFF 0000                                             l69 0AE6  
                              _timer0ReloadVal 0067                            __Umul8_16@word_mpld 002E  
                                          l501 04A2                                            l510 05A0  
                                          l502 04A9                                            l506 04C2  
                                          l507 04D2                                            l364 0D3E  
                                          l643 07D0                                            l493 0D58  
                                          l744 0DDC                                            l656 0FEE  
                                          l496 0D78                                            l952 0252  
                                          l991 0EF3                                            l992 0EFD  
                                          l984 0EDF                                            l978 0EA9  
                                          _abs 0B88                                            _pad 0D3F  
                                          _rpm 00BC                 ?_EUSART_SetFramingErrorHandler 0028  
                                 __CFG_BORV$LO 0000                                            wreg 0009  
                                 __CFG_IESO$ON 0000                                   ___flmul@aexp 0048  
                                 ___flmul@bexp 0049         __end_of_IOCCF7_DefaultInterruptHandler 07FF  
      __size_of_IOCCF7_DefaultInterruptHandler 0001                 _IOCCF7_DefaultInterruptHandler 07FE  
                                 ___flmul@sign 0043                                   ___flmul@temp 004E  
                                 ___flmul@prod 004A                                   __CFG_LVP$OFF 0000  
                                 __CFG_ZCD$OFF 0000                                   ___fltol@exp1 005A  
                                         ?_abs 003B                                           l1046 0BCB  
                                         l3100 0D5A                                           l3104 0D86  
                                         l3122 073F                                           l3202 0503  
                                         l3124 0744                                           l3060 0CF4  
                                         l3212 04DA                                           l3220 05AE  
                                         l3134 075B                                           l3118 0717  
                                         l3054 0CC8                                           l3070 0C01  
                                         l3230 05C1                                           l3144 07A3  
                                         l3136 076A                                           l3160 0F75  
                                         l3072 0C22                                           l3080 0BA7  
                                         l3224 05B6                                           l3312 0C2F  
                                         l3146 07AF                                           l3170 0F91  
                                         l3058 0CEB                                           l3082 0BB3  
                                         l3090 0D4E                                           l3234 05D1  
                                         l3250 062B                                           l3314 0C4F  
                                         l3322 0D00                                           l3156 0F4D  
                                         l3324 0D0A                                           l3332 0D28  
                                         l3174 0FC1                                           l3094 0D56  
                                         l3270 0698                                           l3422 0D30  
                                         l3326 0D14                                           l3168 0F82  
                                         l3176 0FCD                                           l3192 04BA  
                                         l3280 06BF                                           l3328 0D1E  
                                         l3266 0694                                           l3258 0667  
                                         l3370 0E10                                           l2652 0BC5  
                                         l2812 0070                                           l3276 06B9  
                                         l2902 0228                                           l2814 0072  
                                         l2750 0DA5                                           l3198 04CD  
                                         l3286 06C8                                           l2824 0088  
                                         l2816 007A                                           l2746 0D9C  
                                         l2908 023F                                           l2932 0EB8  
                                         l2766 0DCA                                           l2926 0EA1  
                                         ?_pad 003B                                           l2776 0DE9  
                                         l2768 0DD8                                           l2960 0F18  
                                         l2936 0EBC                                           l2794 004D  
                                         l2946 0EF1                                           l2938 0ECC  
                                         l2884 01E8                                           l2876 01BA  
                                         l2796 004F                                           l2948 0EE4  
                                         l2878 01D1                                           l2798 0057  
                                         l2888 01EA                                           l2898 0213  
                                         STR_1 1020                                           STR_2 1026  
                                         _LATA 010C                                           _LATB 010D  
                                         u3015 00FE                                           _LATC 010E  
                                         u3025 012D                                           u3035 0183  
                                         u3045 019A                                           u3055 01A9  
                                         u3065 01BD                                           u3305 0F05  
                                         u3225 0EC5                                           u3155 0201  
                                         u3165 021C                                           u3085 01C6  
                                         u3245 0ED9                                           u3175 0232  
                                         u3265 0EEB                                           u3425 0CE9  
                                         u3540 074C                                           u3710 0475  
                                         u3720 0476                                           u2745 0BCC  
                                         u2905 0DE0                                           u3475 0D64  
                                         u2845 0DAE                                           u3575 0790  
                                         u3495 0B92                                           u3815 04F0  
                                         u3825 04FE                                           u2875 0DCB  
                                         u3675 0FAF                                           u3765 04B2  
                                         u3795 05AC                                           u3977 0E3E  
                                         u3987 0E85                                           _TMR0 0015  
                                         _WPUA 020C                                           _WPUB 020D  
                                         _WPUC 020E                                   __CFG_WRT$OFF 0000  
                                __CFG_FCMEN$ON 0000                                           abs@a 003B  
                                         _dbuf 012C                                           _main 0DF8  
                                         _dtoa 0448                                           _prec 0060  
                                         _nout 00C8                                           pad@i 003F  
                                         pad@p 003C                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           pad@w 0041  
                                         btemp 007E                                           _puts 07E2  
                                __CFG_BOREN$ON 0000                                           start 0014  
                                __CFG_MCLRE$ON 0000                                          ??_abs 003D  
                                        ??_pad 003E                        __end_of_TMR0_Initialize 0B73  
               ??_TMR0_DefaultInterruptHandler 0070                                  ?_EUSART_Write 0070  
               __size_of_OSCILLATOR_Initialize 0007                  __end_of_OSCILLATOR_Initialize 0ADC  
                          __size_of_IOCCF7_ISR 000D                                  ___fltol@sign1 0059  
                              __end_of___aodiv 07E2                                __end_of___fladd 0448  
                                        ?_main 0070                                          ?_dtoa 0044  
                              __end_of___aomod 1000                                  __CFG_WDTE$OFF 0000  
                              __end_of___flmul 025F                                __end_of___fltol 0DF8  
                                        ?_puts 003B                                          i1l242 000D  
                                        i1l246 0012                                          i1l850 0322  
                                        i1l844 02AC                                          i1l848 0340  
                                        i1l865 03C6                                          i1l886 043F  
                                        i1l878 0426                                   vfpfcnvrt@fmt 004F  
                                        _SLRC7 1877                                          _TRISA 008C  
                                        _TRISB 008D                                          _TRISC 008E  
            __size_of_TMR0_SetInterruptHandler 0009                      ?_TMR0_SetInterruptHandler 0028  
                             __end_of_TMR0_ISR 0B3D                        __end_of_PIN_MANAGER_IOC 0AC9  
                                        _hrInt 00CC                                          _flags 0062  
                                        _fputc 0CBD                                          _fputs 0BFE  
                                        _speed 00B8                                          pad@fp 0043  
                                        _width 00CA                                          _putch 0AC9  
                                        dtoa@d 0044                                          dtoa@i 00DF  
                                        dtoa@n 00D7                                          dtoa@p 00D1  
                                        dtoa@s 00D5                                          dtoa@w 00D3  
                                        pclath 000A                                          puts@s 003B  
                                        status 0003                                          wtemp0 007E  
                              __initialization 0016                                   __end_of_main 0E8B  
                                 __end_of_dtoa 05EA                                   __end_of_puts 07FD  
                               ??_EUSART_Write 0028                                 __CFG_LPBOR$OFF 0000  
                  ?_INTERRUPT_InterruptManager 0070                                         ??_main 0153  
                                       ??_dtoa 004C                                         ??_puts 003D  
                               __CFG_PLLEN$OFF 0000              _EUSART_DefaultFramingErrorHandler 0000  
                                       _ADCON0 009D                                         _ADCON1 009E  
                                       _ADCON2 009F                     _EUSART_OverrunErrorHandler 0156  
                                       ?_fputc 002A                                         ?_fputs 0032  
                                       _ADRESH 009C                                         _ADRESL 009B  
                                       _ANSELA 018C                                         ?_putch 0070  
                                       _ANSELB 018D                                         _ANSELC 018E  
                 ??_IOCCF7_SetInterruptHandler 002A                                         _BORCON 0116  
                                       _RC1REG 0199                                         _RC1STA 019D  
                                       _RB7PPS 0E9F                                         i1l2312 02A4  
                                       _ODCONA 028C                                         i1l2410 03D8  
                                       i1l2402 03BE                                         _ODCONB 028D  
                                       _ODCONC 028E                                         i1l2308 02A1  
                                       i1l2318 02B6                                         i1l2432 03F7  
                                       i1l2424 03EC                                         i1l2418 03E5  
                                       i1l2426 03EE                                         i1l2290 0284  
                                       i1l2436 03F9                                         i1l2356 032B  
                                       i1l2348 02F2                                         i1l2284 0279  
                                       i1l2620 0B2B                                         i1l2454 0436  
                                       i1l2382 0361                                         i1l2374 034E  
                                       i1l2358 032D                                         i1l2366 033C  
                                       i1l2384 0363                                         i1l2392 0373  
                                       i1l2288 027C                                         i1l2458 043A  
                                       i1l2476 0C63                                         u230_20 0310  
                                       u231_20 0311                                         u241_25 0368  
                                       u242_23 0386                                         u234_25 0332  
                                       u229_25 0306                                         u246_25 03D9  
                                       u256_25 0411                                         _OSCCON 0099  
                                       _SPBRGH 019C                                         _SPBRGL 019B  
                                       _TX1REG 019A                                         u351lld 0714  
                                       u362lld 0F4A                                         _TX1STA 019E  
                                 ?_resetCursor 0070                               __end_of___xxtofl 0F21  
                               __CFG_PWRTE$OFF 0000                                   vfprintf@cfmt 00E7  
                                    ??___aodiv 0038                                      ??___fladd 0020  
                                    ??___aomod 0038                                 __CFG_STVREN$ON 0000  
                                    ??___flmul 003E                                      ??___fltol 0054  
                                       _hrDisp 1000                               ?_TMR0_Initialize 0070  
                                       _rpmInt 00AC                                         _rpmVal 0124  
                                       _printf 0B73                                         pad@buf 003B  
                                       dtoa@fp 00D0                                         _strlen 0BA1  
          __size_of_IOCCF7_SetInterruptHandler 0009                                         fputc@c 002A  
                                       fputs@c 0038                                         fputs@i 0039  
                                       fputs@s 0032                             __size_of__Umul8_16 0020  
                             __end_of_timerISR 0B5E                               __end_of_vfprintf 0C54  
     TMR0_SetInterruptHandler@InterruptHandler 0028     IOCCF7_SetInterruptHandler@InterruptHandler 0028  
                             ?_PIN_MANAGER_IOC 0070                                   ??_IOCCF7_ISR 007C  
                                 ___xxtofl@arg 0032                           __end_of_distanceDisp 1018  
                                 ___xxtofl@exp 0031                              _SYSTEM_Initialize 0B3D  
                                 ___xxtofl@val 0028                        __end_of__initialization 002F  
                                   _adcCounter 00C0                             ?_SYSTEM_Initialize 0070  
                                   ___fltol@f1 0050                                 __pcstackCOMMON 0070  
                          ??_SYSTEM_Initialize 002B                                      ?_TMR0_ISR 0070  
                                __end_of_fputc 0CFD                                  __end_of_fputs 0C27  
                                __end_of_putch 0ACF                             __end_of_IOCCF7_ISR 0B2E  
                               _OPTION_REGbits 0095                ??_EUSART_SetOverrunErrorHandler 002A  
                                      ??_fputc 002D                      __end_of_SYSTEM_Initialize 0B4C  
                                      ??_fputs 0035                                        ??_putch 0029  
                                   __pbssBANK0 0060                                     __pbssBANK1 00A0  
                                   __pbssBANK2 0120                           __end_of_EUSART_Write 0AEC  
                            __end_of__Umul8_16 0BDA                                     __pmaintext 0DF8  
             __end_of_TMR0_SetInterruptHandler 0B21                                     ??_TMR0_ISR 0070  
                              __CFG_PPS1WAY$ON 0000                             __size_of_setCursor 0042  
                                   __pintentry 0004                                        ?_printf 014C  
                      __size_of_ADC_Initialize 0008                                        ?_strlen 0028  
                           __size_of_speedCalc 0031                                __CFG_WDTCCS$SWC 0000  
                                      _INLVLC7 1C77                                      ?___xxtofl 0028  
                           __size_of_vfpfcnvrt 0101                                        _OSCTUNE 0098  
                                      _SLRCONA 030C                                        _SLRCONB 030D  
                                      _SLRCONC 030E             __end_of_IOCCF7_SetInterruptHandler 0B18  
                   _IOCCF7_SetInterruptHandler 0B0F                       ??_EUSART_SetErrorHandler 002A  
                         __size_of_resetCursor 0008                                      ?_timerISR 0070  
                                      ___aodiv 06EB                                        ___fladd 025F  
                                      ___aomod 0F21                                        ___flmul 0033  
                                      ___fltol 0D92                                      ?_vfprintf 00E1  
                                      _endTime 00A0                                        __ptext1 0CFD  
                                      __ptext2 0AEC                                        __ptext3 07E2  
                                      __ptext4 0B73                                        __ptext5 0C27  
                                      __ptext6 05EA                                        __ptext7 0448  
                                      __ptext8 0D3F                                        __ptext9 0BA1  
                                      _distInt 0064                                __size_of_printf 0015  
                              __size_of_strlen 0019                                        _counter 00C4  
                        _OSCILLATOR_Initialize 0AD5                                   __size_of_abs 0019  
                                 __size_of_pad 0053                                     ??___xxtofl 002C  
                     ??_PIN_MANAGER_Initialize 002A                                      _IOCCFbits 0399  
                                    _IOCCNbits 0398                                      _IOCCPbits 0397  
                   __size_of_SYSTEM_Initialize 000F                                        clrloop0 0AD0  
                         end_of_initialization 002F                              __end_of_setCursor 0D3F  
        __end_of_EUSART_SetOverrunErrorHandler 0B0F         __size_of_EUSART_SetOverrunErrorHandler 0009  
                _EUSART_SetOverrunErrorHandler 0B06                                        fputc@fp 002C  
                                      fputs@fp 0034                              __end_of_speedCalc 0C85  
                            __end_of_speedDisp 1020                              _EUSART_Initialize 0BDA  
                           ?_EUSART_Initialize 0070                              __end_of_vfpfcnvrt 06EB  
                                   ??_timerISR 0070                                     _timePassed 0128  
                                   ??_vfprintf 00E4                                        strlen@a 002B  
                                      strlen@s 002C                            ??_EUSART_Initialize 002A  
                                 _distanceDisp 100D                       _TMR0_SetInterruptHandler 0B18  
                                  ___fladd@grs 007B                               __CFG_FOSC$INTOSC 0000  
                                ___xxtofl@sign 0030                          __size_of_EUSART_Write 0008  
              __size_of_EUSART_SetErrorHandler 0009                                    ___flmul@grs 0044  
                    __end_of_EUSART_Initialize 0BFE                     _EUSART_DefaultErrorHandler 0000  
                                  vfpfcnvrt@ap 0050                                    vfpfcnvrt@fp 005F  
                                  vfpfcnvrt@ll 0056                                    vfpfcnvrt@vp 005E  
                               __end_of_hrDisp 100D                                   _EUSART_Write 0AE4  
                            __size_of_TMR0_ISR 000F                                 _ADC_Initialize 0ADC  
                       ?_OSCILLATOR_Initialize 0070                                 __end_of_printf 0B88  
                               __end_of_strlen 0BBA                            start_initialization 0016  
                     __size_of_TMR0_Initialize 0015                __size_of_PIN_MANAGER_Initialize 0038  
                                  __end_of_abs 0BA1                                    __end_of_pad 0D92  
                                  putch@txData 0029                       __size_of_PIN_MANAGER_IOC 0006  
               ?_EUSART_SetOverrunErrorHandler 0028                                    vfprintf@fmt 00E1  
                   _EUSART_FramingErrorHandler 00EE                         _EUSART_SetErrorHandler 0AF4  
                       __end_of_ADC_Initialize 0AE4                                      __Umul8_16 0BBA  
                                     ??_printf 00E9                                       ??_strlen 002A  
                                    ___fladd@a 0074                                      ___fladd@b 0070  
                                    ___flmul@a 003A                                      ___flmul@b 0036  
                                  __pbssCOMMON 007C                                      ___latbits 0002  
                                __pcstackBANK0 0020                                  __pcstackBANK1 00CE  
                                __pcstackBANK2 014C                               ___aodiv@dividend 0030  
                            __size_of___xxtofl 0096                    ?_IOCCF7_SetInterruptHandler 0028  
                   __size_of_EUSART_Initialize 0024                          _TMR0_InterruptHandler 00EA  
                                    __pnvBANK0 0067                                      __pnvBANK1 00EA  
                                    __pnvBANK2 0154                         _PIN_MANAGER_Initialize 0C85  
                                    _hallCount 00A8                                       ?___aodiv 0028  
                                     ?___fladd 0070                                       ?___aomod 0028  
                             ___aodiv@quotient 003B                                       ?___flmul 0036  
                                     ?___fltol 0050                                      _heartRate 00B0  
                                   ?__Umul8_16 0028                                     setCursor@a 002C  
                                   setCursor@b 0029                                ?_ADC_Initialize 0070  
                            __size_of_timerISR 0012                   ??_INTERRUPT_InterruptManager 007C  
                            __size_of_vfprintf 002D                                       _BAUD1CON 019F  
                               __size_of_fputc 0040                                 __size_of_fputs 0029  
                               __size_of_putch 0006                              ??_TMR0_Initialize 002A  
                                ??_resetCursor 0040         EUSART_SetErrorHandler@interruptHandler 0028  
                                    _setCursor 0CFD                                      clear_ram0 0ACF  
                            _eusartRxLastError 0066            __size_of_INTERRUPT_InterruptManager 0010  
                   ??_TMR0_SetInterruptHandler 002A                                       _PIR1bits 0010  
              ??_EUSART_SetFramingErrorHandler 002A                                      _puts$1103 003F  
                                    _rpmValInt 0120                                      _speedCalc 0C54  
                                    _speedDisp 1018               ??_IOCCF7_DefaultInterruptHandler 0070  
              ?_IOCCF7_DefaultInterruptHandler 0070                           __CFG_WDTCPS$WDTCPS1F 0000  
                                     _TMR0_ISR 0B2E              _EUSART_DefaultOverrunErrorHandler 0000  
                            ??_PIN_MANAGER_IOC 007C                                      _vfpfcnvrt 05EA  
                                   _ADCON0bits 009D                                      _startTime 00A4  
                                   ?_setCursor 0029                                     vfprintf@ap 00E3  
                                   vfprintf@fp 00E6                            __end_of_resetCursor 0AF4  
                                   ?_speedCalc 0070                        ??_OSCILLATOR_Initialize 0028  
                                  ??__Umul8_16 002A                            _EUSART_ErrorHandler 0154  
                             __size_of___aodiv 00F7                               __size_of___fladd 01E9  
                             __size_of___aomod 00DF                               __size_of___flmul 022C  
                             __size_of___fltol 0066                                     ?_vfpfcnvrt 004F  
                              ___aodiv@divisor 0028                                ___aodiv@counter 0039  
                                     ___xxtofl 0E8B                                       _dtoa$757 00CE  
                                     __ptext10 0BFE                                       __ptext11 0CBD  
                                     __ptext20 0BBA                                       __ptext12 0AC9  
                                     __ptext21 0B3D                                       __ptext13 0AE4  
                                     __ptext30 0AF4                                       __ptext22 0B5E  
                                     __ptext14 0B88                                       __ptext31 0ADC  
                                     __ptext23 0B18                                       __ptext15 0F21  
                                     __ptext40 025F                                       __ptext24 0C85  
                                     __ptext16 06EB                                       __ptext33 0B2E  
                                     __ptext25 0B0F                                       __ptext17 0E8B  
                                     __ptext34 07FD                                       __ptext26 0AD5  
                                     __ptext18 0D92                                       __ptext35 0B4C  
                                     __ptext27 0BDA                                       __ptext19 0033  
                                     __ptext36 0AC3                                       __ptext28 0B06  
                                     __ptext37 0B21                                       __ptext29 0AFD  
                                     __ptext38 07FE                                       __ptext39 0C54  
                                     _distance 00B4                                     _IOCCF7_ISR 0B21  
                                __size_of_main 0093                                  __size_of_dtoa 01A2  
                                __size_of_puts 001B           __end_of_TMR0_DefaultInterruptHandler 07FE  
        __size_of_TMR0_DefaultInterruptHandler 0001                   _TMR0_DefaultInterruptHandler 07FD  
                         __CFG_WDTCWS$WDTCWSSW 0000                        ?_EUSART_SetErrorHandler 0028  
                                   _RC1STAbits 019D  EUSART_SetOverrunErrorHandler@interruptHandler 0028  
                                     _timerISR 0B4C                                       _speedInt 007C  
                                     int$flags 007E                                       _vfprintf 0C27  
           __end_of_INTERRUPT_InterruptManager 0014                     _INTERRUPT_InterruptManager 0004  
                                    printf@fmt 014C          __end_of_EUSART_SetFramingErrorHandler 0B06  
       __size_of_EUSART_SetFramingErrorHandler 0009                  _EUSART_SetFramingErrorHandler 0AFD  
                             ___aomod@dividend 0030                                     _INTCONbits 000B  
                                     intlevel1 0000                        ?_PIN_MANAGER_Initialize 0070  
                                  _resetCursor 0AEC                 __end_of_EUSART_SetErrorHandler 0AFD  
                                  ??_setCursor 002A                              __CFG_CLKOUTEN$OFF 0000  
                             ??_ADC_Initialize 0028                  ?_TMR0_DefaultInterruptHandler 0070  
                                  ??_speedCalc 007C                                       printf@ap 0152  
EUSART_SetFramingErrorHandler@interruptHandler 0028                                ___aomod@divisor 0028  
                                  ??_vfpfcnvrt 0051                                ___aomod@counter 0039  
                                __pstringtext1 1000                                  __pstringtext2 100D  
                                __pstringtext3 1018                                  __pstringtext4 1020  
                                __pstringtext5 1026                                  __pstringtext6 0000  
                       __Umul8_16@multiplicand 0028                                     _OPTION_REG 0095  
                              _TMR0_Initialize 0B5E                                     _TX1STAbits 019E  
                                ___fladd@signs 0078                             EUSART_Write@txData 0028  
                                 ___aodiv@sign 003A                 __end_of_PIN_MANAGER_Initialize 0CBD  
                                  ?_IOCCF7_ISR 0070                                   ___fladd@aexp 0079  
                                 ___fladd@bexp 007A                                _PIN_MANAGER_IOC 0AC3  
                         __Umul8_16@multiplier 0030                                   ___aomod@sign 003A  
                      _IOCCF7_InterruptHandler 00EC                              __Umul8_16@product 002C  
